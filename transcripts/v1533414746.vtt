WEBVTT

00:00.000 --> 00:07.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder, bis dahin, tschüss, tschüss, tschüss, tschüss.

00:30.000 --> 00:35.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder, tschüss, tschüss.

01:00.000 --> 01:05.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

01:30.000 --> 01:35.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

02:00.000 --> 02:05.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

02:30.000 --> 02:35.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

03:00.000 --> 03:05.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

03:05.000 --> 03:31.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

03:35.000 --> 03:40.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

04:05.000 --> 04:10.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

04:35.000 --> 04:40.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

05:05.000 --> 05:10.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

05:35.000 --> 05:40.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

06:05.000 --> 06:10.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

06:35.000 --> 06:40.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

07:05.000 --> 07:10.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

07:35.000 --> 07:40.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

08:05.000 --> 08:10.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

08:35.000 --> 08:40.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

08:40.000 --> 08:45.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

08:45.000 --> 08:49.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

08:49.000 --> 08:54.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder.

08:54.000 --> 09:18.560
ist ja noch nicht zu voll. Ich habe weißes Design. Was habe ich? Im Light Mode? Ne. Achso,

09:18.560 --> 09:27.040
ich habe halbe halbe. Ich habe die Leiste und den Kram in Dark und die Fenster in Light. Ja,

09:27.040 --> 09:33.680
das stimmt. Ne, mache ich nicht. Das sieht unter Windows nicht gut aus. Beziehungsweise,

09:33.680 --> 09:37.280
was heißt nicht gut aus? Das sieht an sich eh schon nicht gut aus, aber ich finde,

09:37.280 --> 09:43.160
das ist in Windows nicht gut umgesetzt. So, wir machen mal die VM an. Also,

09:43.160 --> 09:52.440
wir machen heute eine Web Anwendung. Pepofetter, die Random Gerichte oder Random Essen generiert

09:52.440 --> 09:58.160
und Bilder davon anzeigt. Also, ich weiß es. Wahrscheinlich werde ich GoLand verwenden.

09:58.160 --> 10:15.760
Mal gucken, wie wir das machen. Also, Chat, wichtigste Frage. Was nehmen denn die coolen

10:15.760 --> 10:24.320
Go Leute für Web Anwendungen und für Datenbanken? Also, für Web Anwendungen habe ich letztes Mal

10:24.320 --> 10:30.480
gefragt im Stream und da war so 50-50 oder sagen wir mal so, es war ein bisschen mehr,

10:30.480 --> 10:38.560
aber viele Leute haben gesagt Standardlip und andere haben gesagt Fiber. Was ist denn cooler?

10:38.560 --> 10:47.040
Was ist denn mehr im Trend? Also, wo kann man besser mit Posen, wenn man es kann? Fiber oder

10:47.040 --> 10:57.400
Standardlip? Ich meine, für das, was wir machen, ist Standardlip wahrscheinlich absolut

10:57.400 --> 11:07.560
ausreichend. Ich meine, das gibt ehrlich gesagt, das gibt wahrscheinlich einen Endpunkt oder so,

11:07.560 --> 11:17.040
Random Rezept. Ich meine, für einen Get-Endpunkt brauche ich wahrscheinlich keine Library. Aber,

11:17.040 --> 11:24.080
wie gesagt, wir müssen da mehr machen. Also, wir müssen erstmal eine SQLite-Datenbank erzeugen mit

11:24.080 --> 11:35.080
Rezepten drin und dann, wobei, wir könnten das auch per API-Aufruf erzeugen, irgendwie die Rezepte

11:35.080 --> 11:38.920
oder so. Aber ich will es ehrlich gesagt lieber in die Datenbank schreiben, weil ich dann mal

11:38.920 --> 11:44.120
gucken kann, wie man SQLite in Go gescheit verwendet. Ich weiß, dass es lange Zeit etwas

11:44.120 --> 11:50.680
problematisch war mit SQLite in Go. Also, nicht für sowas wie ich mache, sondern für so wirklich

11:50.680 --> 11:57.600
High-Performance-Dinger, weil Go lange Zeit ziemlich in Offerhead hatte, wenn du C-Interop

11:57.600 --> 12:07.200
gemacht hast. Mittlerweile ist es wohl besser, aber noch nicht ganz toll. Super Eats. Ja,

12:07.200 --> 12:15.400
Gorm. Gorm habe ich auch gesehen schon. Oder Go. G-O-R-M. Naja, eigentlich, okay, das ist ja der Gag,

12:15.400 --> 12:26.480
dass es O-R-M ist und Go, also Gorm. Ja, ja, ja. C, also es muss nicht C sein, aber alles quasi

12:26.480 --> 12:34.040
mit, wie nennt man das, diesem C-Call-Interface, also der C-Style, wie man Funktionen aufruft,

12:34.040 --> 12:38.880
also das, was so ziemlich so, wie jede, jede Programmiersprache kann, um mit jeder

12:38.880 --> 12:44.920
anderen Programmiersprache zusammenzuarbeiten, ist in Go nicht so einfach. Wenn du von Go,

12:44.920 --> 12:52.200
genau, mit C-Go-Bindings haben die da irgendwas gemacht, also wenn du von Go C-Libraries oder

12:52.200 --> 12:57.880
C-Funktionen aufrufst, dann ist das langsamer, als wenn du Go-Funktionen aufrufst, weil C-Go

12:57.880 --> 13:02.640
Gedöns macht, keine Ahnung. Was aber noch viel schlimmer ist, ist, wenn du Callbacks hast von C

13:02.640 --> 13:11.000
nach Go, da muss das ganz langsam sein. Also ganz langsam, also da reden wir von ein paar Nanosekunden

13:11.000 --> 13:18.080
oder so, was so ein normaler Funktion-Call braucht zu, naja Millisekunden nicht, aber schon deutlich

13:18.080 --> 13:24.280
mehr, also es ist irgendwie tausendmal langsamer, als irgendwie eine Go-Funktion aufzurufen. Da

13:24.280 --> 13:32.920
gibt es ziemliche Probleme. Hey, ich habe einen Windows XP. VM, aber der Sound ist kaputt seit VM,

13:32.920 --> 13:43.040
wer geht, VM Audio nicht mehr, keine Ahnung. Ich habe, glaube ich, noch nicht 16.2. Was ist

13:43.040 --> 13:51.560
denn VM Audio Back? Das kenne ich gar nicht. Zeig mal, was ist VM Audio Back? Workaround

13:51.560 --> 13:56.200
for VM August Audio Distortion. Ach Windows, okay, das Problem habe ich mit der Linux VM

13:56.200 --> 14:12.560
wahrscheinlich nicht. Braucht man da überhaupt einen Workaround? Ja, da bin ich mir auch nicht

14:12.560 --> 14:18.480
so ganz sicher, ob die den Overhead auch haben oder nicht. Es könnte ja sein, dass die den nicht

14:18.480 --> 14:27.640
haben, weil die auf irgendwelche zusätzlichen Absicherungen verzichten, weil sie sagen, das

14:27.640 --> 14:32.120
haben wir selbst gebaut und wir wissen, dass wir keinen Mist bauen. Also ich habe da mal,

14:32.120 --> 14:39.080
ich habe da mal über diese ganze C-Gaur Geschichte, ich habe da mal einen Konferenztalk drüber gesehen

14:39.080 --> 14:44.920
und eines der Hauptprobleme oder eines der Hauptperformanceeinbußen, wenn man von Go C

14:44.920 --> 14:49.640
aufruft oder vor allem, wenn man von C Go aufruft, ist wohl, dass die irgendwelche Logs machen

14:49.640 --> 14:56.600
müssen, dass du im richtigen Thread landest, weil du könntest ja beispielsweise, dann könntest

14:56.600 --> 15:02.040
ja C aufrufen, dort einen Thread starten und von dort wieder in Go callen und dann kackt Go

15:02.040 --> 15:07.480
im Zweifelsfall ab. Und das wollen sie nicht und dementsprechend machen sie irgendwie zig

15:07.480 --> 15:13.640
checks, wenn du Callbacks in Go, ob du im richtigen Thread bist und haben irgendwelche Logs und

15:13.640 --> 15:20.960
alles mögliche. Man kann diese Sicherung allerdings auch nicht abschalten, das ist das,

15:20.960 --> 15:24.440
wie gesagt, das ist jetzt alles nur von diesem Talk, den ich mal vor zwei Jahren gesehen habe,

15:24.440 --> 15:30.680
also wie genau ich das noch im Kopf habe und ob das noch so ist, sei mal dahingestellt. Leider

15:30.680 --> 15:34.800
gibt es wohl keine Möglichkeit, das abzuschalten, so nach dem Motto, ja ich weiß, ich sorge dafür,

15:34.800 --> 15:45.200
dass ich im richtigen Thread bin und kein Mist calle. Naja doch, man braucht das manchmal. Also

15:45.200 --> 15:49.080
jetzt, wir brauchen es nicht, weil wahrscheinlich der SQLite Rapper oder was auch immer das schon

15:49.080 --> 15:58.200
für uns macht, aber ich habe mal eine Go Library gerappt, dass ich sie von.NET aufrufen konnte,

15:58.200 --> 16:06.760
nämlich die hier, guck mal. Go hat nämlich so ziemlich die einzig brauchbare WebRTC-Implementierung

16:06.760 --> 16:11.120
für Serverseite, wenn man nicht gerade die offizielle C++-Geschichte verwenden will.

16:11.120 --> 16:18.360
Und das ist wirklich nice, wenn man mal WebRTC machen will, haben wir glaube ich sogar im Stream

16:18.360 --> 16:26.200
schon verwendet und da mussten wir Go aufrufen von.NET, also im Prinzip mussten wir Go Funktionen

16:26.200 --> 16:35.000
exportieren mit einem C-Interface zum Callen und ich sage euch Leute, wir haben es damals ausprobiert,

16:35.000 --> 16:41.080
es war schon eine ganze Ecke langsamer als Native Function Calls, allerdings jetzt nicht in der

16:41.080 --> 16:46.480
Größenordnung, dass es unbenutzbar wäre. Hat sich, es hat sich aber bestimmt auch,

16:46.480 --> 16:52.600
es hat sich bestimmt auch einiges da getan die letzten Jahre. Ja, SQL kann schon immer in

16:52.600 --> 16:58.080
Memory Database, allerdings ist die glaube ich limitiert standardmäßig auf 2 Terabyte,

16:58.080 --> 17:03.000
2 Terabyte wäre es jetzt, ich glaube das wäre kaum eine Limitierung. Auch 2 Gigabyte ist das

17:03.000 --> 17:09.560
glaube ich limitiert. Ich glaube Go in Memory Database kann maximal 2 Gigabyte sein. So,

17:09.560 --> 17:17.080
gehen wir mal in die VM. Aha, Leute gibt es Sonnenblumen, Pog. Moment Leute, habe ich die

17:17.080 --> 17:20.840
VM neu gestartet oder war die schon gestartet? Ich habe die neu gestartet, das heißt heute ist

17:20.840 --> 17:28.460
Bing Image of the Day Sonnenblumen. Ja, wir lernen Go, beziehungsweise ich frische mein Go mal ein

17:28.460 --> 17:35.600
bisschen auf. So viel habe ich damit noch nicht gemacht, ich kann den Kram lesen, ich kann damit

17:35.600 --> 17:41.040
auch ein bisschen was schreiben, aber ein bisschen was größeres. So, Updates, Go Land, ist das schon

17:41.040 --> 17:50.720
alles, habe ich schon alles geupdatet, Go Land 2022.1.3. Das sieht ehrlich gesagt ziemlich gut aus,

17:50.720 --> 18:01.160
warum ist Rider nicht aktuell? Was ist da los? Max, bist du auf Linux? Ja, bin ich und pass mal

18:01.160 --> 18:10.440
auf und jetzt bin ich wieder auf Windows. Hä, warum? Ich habe mir den ganzen Chatbrains Kram gekauft,

18:10.440 --> 18:16.200
warum soll ich dann Visual Studio Code verwenden? Wie das? Guck mal, es gibt verschiedene Desktops,

18:16.200 --> 18:20.800
kannst du mittlerweile machen seit Windows 10, auf jeden Fall vielleicht auch schon seit Windows 8,

18:20.800 --> 18:29.480
du kannst verschiedene Desktops machen und dann machst du einfach eine VM im Fullscreen auf

18:29.480 --> 18:35.120
Desktop 2 und dann switchst du mit Tastenkombination zwischen Windows und Linux hin und her. Du kannst

18:35.120 --> 18:41.080
alles machen, was du willst unter Linux, außer, außer Hardware Zugriffe, also GPU Decoding und

18:41.080 --> 18:58.600
so ist da nicht. Wie alt ich bin? Ich bin 37. Also ich bin Massive, pepo old. Ja, ist so.

19:11.080 --> 19:21.200
Die Frage kommt oft. Die Frage kommt so oft, dass wir da sogar extra schon einen Clip für haben.

19:21.200 --> 19:27.880
Die Antwort, ganz kurz, dass du den Clip nicht angucken musst. GPU, nee, kannst du nicht, kannst

19:27.880 --> 19:38.800
du nicht. Ganz kurz, also ich habe mir das angewöhnt und die Angewohnheit habe ich schon

19:38.800 --> 19:47.120
jahrelang und ich wüsste auch nicht, warum ich mir wieder abgewöhnen soll. Also du kannst die

19:47.120 --> 19:53.240
GPU nicht durchreichen, das funktioniert nicht. Nein, GPU Pass-Through geht nicht. Vor allem bei

19:53.240 --> 20:00.480
Workstation unter Windows kann keine GPU durchreichen. Was du machen könntest, ist Hyper-V oder so

20:00.480 --> 20:06.640
verwenden, wobei ich mir nicht sicher bin, ob das Hyper-V unter Windows 10 GPU Pass-Through kann.

20:06.640 --> 20:15.440
Du könntest Linux als Host nehmen, GPU Pass-Through machen und Windows virtualisieren,

20:15.440 --> 20:24.840
wobei du dann wieder andere Probleme hast. Also für mich ist diese Setup hier mit Abstand am

20:24.840 --> 20:31.320
besten. Ich habe mittlerweile um die sieben VMs ungefähr, die ich regelmäßig verwende.

20:31.320 --> 20:38.720
Also die hier meine ich jetzt nicht. Das sind ja so ein paar Testdinger, die wir mal im Streaming

20:38.720 --> 20:44.760
gemacht haben. Ihr werdet es nicht glauben, aber die Qt4M verwende ich nicht regelmäßig. Weil

20:44.760 --> 20:54.280
ihr seid, Chat, eine Runde für euch heute nochmal. Qt4M. Zehn Sekunden, länger halte ich es

20:54.280 --> 21:23.240
wahrscheinlich nicht aus, aber muss mal wieder sein. Okay, Qt4M, genug Qt gewesen,

21:23.240 --> 21:42.080
wieder aus, next. Bin ich denn stehen geblieben? Chatbrains ist der Hersteller. Chatbrains ist

21:42.080 --> 21:49.200
der Hersteller. Chatbrains macht mehrere Tools, unter anderem machen die auch IntelliJ und PyCharm

21:49.200 --> 21:55.080
und Rider und wo haben die denn hier eine Übersicht? Das hier ist so mehr oder weniger der ganze Kram,

21:55.080 --> 22:00.800
was die haben. Webstorm, haben wir irgendwelche Webstormers bei uns im Chat? RubyMine habe ich

22:00.800 --> 22:08.400
vor Jahren mal verwendet. Rider für.NET, PyCharm, Python, Web, PHP, Java, Gedöns, Go,

22:08.400 --> 22:17.360
ihre Visual Studio Code Konkurrenz, Dataspell, Datacrypt, keine Ahnung, C und C++, Rust Plugins

22:17.360 --> 22:35.720
haben sie. Was ist denn Rider Flow? Ist das irgendwie Unity? Das ist irgendwie ein Unity

22:35.720 --> 22:47.040
Zeug. Das muss irgendwie ein Unity Zeug sein. Wieso machen die nicht eine IDE für alles?

22:47.040 --> 22:52.160
Wahrscheinlich, weil das nicht so einfach ist und sie versuchen ja gerade Fleet zu, ich

22:52.160 --> 22:57.000
weiß gar nicht, wie da der aktuelle Stand ist. Ich habe von Fleet schon länger nichts

22:57.000 --> 23:04.280
gehört. Das versuchen sie gerade. Also Fleet ist wohl standardmäßig ein ziemlich basic

23:04.280 --> 23:10.480
Text Editor, den du aber mit Plugins zu allem möglichen aufbauen kannst. Nee, Rider ist

23:10.480 --> 23:14.960
nicht für alles. Rider ist für.NET. Du kannst IntelliJ ziemlich aufbauen, aber ich glaube,

23:14.960 --> 23:23.880
.NET kannst du nicht in IntelliJ machen, oder? Also du kannst, ich glaube, das kannst du

23:23.880 --> 23:28.080
auch nicht alles installieren. Du brauchst glaube ich IntelliJ Ultimate oder sowas. Ach,

23:28.080 --> 23:37.440
kein Schimmer. Ist mir wurscht. Also ich verwende von denen Sea Lion, Go Land und Rider und

23:37.440 --> 23:45.120
ab und zu PyCharm. Und Sea Lion auch noch relativ selten, weil ich mache großen Bogen um C++,

23:45.120 --> 23:53.560
aber manchmal kommt man halt nicht drum herum. Also das ist der Hersteller. Ja, und jetzt

23:53.560 --> 23:59.720
wollen wir mal was zur GPU Pass-Thru. Das funktioniert nicht. Und selbst wenn du sagen

23:59.720 --> 24:06.160
würdest, du virtualisierst das Umgedreht, also du virtualisierst Windows unter Linux,

24:06.160 --> 24:15.440
dann musst du andere Probleme lösen. Was davon ist für C Sharp Rider?.NET. C Sharp

24:15.440 --> 24:21.200
ist quasi so die Haupt.NET-Programmiersprache. Du hast noch sowas wie F Sharp und du hast

24:21.200 --> 24:28.200
auch noch sowas, ich traue es mich kaum auszusprechen, du hast auch noch sowas wie VB.NET und sowas,

24:28.200 --> 24:36.440
wobei das eigentlich nicht Pippo Hens ist, das ist eher so. VB.NET, ich glaube VB.NET

24:36.440 --> 24:53.360
weint keiner nach. Keiner weint, wie auch immer, weint VB.NET nach. Ja, genau, aber

24:53.360 --> 24:57.800
hier nochmal zu der Virtualisierung. Also selbst wenn du jetzt sagen würdest, man macht das

24:57.800 --> 25:03.560
umgedreht. Man virtualisiert Windows unter Linux oder Linux hauptsächlich drauf. Selbst

25:03.560 --> 25:07.400
dann hast du Probleme, die du lösen musst. Zum Beispiel, wie machst du das, wenn du

25:07.400 --> 25:14.000
GPU Pass-Thru machst mit deinem Hostbetriebssystem? Dann bräuchtest du ja zwei GPUs, also für

25:14.000 --> 25:19.720
dein Hostbetriebssystem und für die durchgereichte GPU. Oder du machst sowas richtig abgedrehtes

25:19.720 --> 25:29.120
wie Hyper-V und diese Nvidia Grafikkarten-Partitionierung. Fragt mich nicht, wie der Kram heißt, vielleicht

25:29.120 --> 25:34.400
weiß es einer von euch. Es gibt von Nvidia in ihren Workstation-Server-Grafikkarten gibt

25:34.400 --> 25:39.640
es so die Möglichkeit, quasi die Grafikkarte zu teilen zwischen mehreren VMs. Da gibt es

25:39.640 --> 25:45.920
so eine, das kostet Tausende, das ist CRIT. Ja, ich glaube CRIT kann sein, das ist aber

25:45.920 --> 25:55.040
richtig teuer. Also du brauchst quasi zwei GPUs, es sei denn, und das ist das nächste,

25:55.040 --> 26:00.760
wie gesagt, es gibt ja für die meisten Sachen irgendwelche Lösungen. Du machst solche Sachen

26:00.760 --> 26:07.520
wie Looking Glass oder sowas, also du kopierst dann quasi die Frames von der VM auf den Host

26:07.520 --> 26:17.200
und sowas. Aber ganz im Ernst, der Einfachheit halber ist mir das so deutlich lieber und

26:17.200 --> 26:20.620
ich brauche nicht für alles irgendwelche Workarounds, weil ganz im Ernst, ich verwende

26:20.620 --> 26:29.400
zu bestimmt 60-70% hier daheim Windows einfach für Steam, Videoschnitt, Geschichten und

26:29.400 --> 26:35.760
sonst was, Video Capturing und alles mögliche. Und wenn ich irgendwas programmieren will

26:35.760 --> 26:41.880
oder wenn ich irgendwas basteln will, dann switche ich einfach auf Linux. Also für mich

26:41.880 --> 26:49.120
ist die Kombination aus Windows als Host und Linux in der VM vom Handling her das Beste,

26:49.120 --> 26:52.680
das heißt nicht zwangsläufig, dass es für euch das Beste sein muss, aber ich finde das

26:52.680 --> 26:59.320
Setup gut und ich finde es für mich oder insgesamt ehrlich gesagt besser als Windows unter Linux.

26:59.320 --> 27:07.520
Windows unter Linux kann man machen, vielleicht wenn man sowas hat wie meine Steuersoftware

27:07.520 --> 27:13.360
läuft nur unter Windows und ich benutze das Ding einmal im Jahr oder so, dann vielleicht,

27:13.360 --> 27:17.600
aber ansonsten würde ich es nicht machen. Also wenn man alles hat was unter Linux gut

27:17.600 --> 27:22.760
funktioniert und man braucht ab und zu mal was unter Windows, dann eine Windows VM, ok

27:22.760 --> 27:38.040
das kann man machen, aber schön ist was anderes. Ja aber was du damit nicht hinkriegst sind

27:38.040 --> 27:52.600
zum Beispiel GPU Decoding und sowas. Also wenn du Videos guckst, es hat alles seine

27:52.600 --> 27:58.360
Tücken, es gibt für vieles Workarounds, die es aber im Handling her ekliger machen. Dual

27:58.360 --> 28:02.200
Boot ist allerdings das letzte was ich machen würde. Gibt ja Leute die sagen noch ja ja

28:02.200 --> 28:05.720
ich will auf Linux umsteigen machen, aber mach mal du. Ne also Dual Boot ist wirklich

28:05.720 --> 28:09.640
das letzte was ich machen würde. Dual Boot ist eklig. Ich kann es auch nicht verstehen

28:09.640 --> 28:13.520
wie die Leute das auf ihre Mac sich antun, so ab und zu mal in Windows booten um da was

28:13.520 --> 28:17.400
zu machen und dann wieder zurück in Mac. Also das würde ich nicht aushalten. Dual Boot

28:17.400 --> 28:21.880
ist ja wirklich bescheuert. Du musst viele Sachen doppelt haben auf beiden Betriebssystemen,

28:21.880 --> 28:25.440
ja von Instant Messenger, E-Mail und sonst was, weil vielleicht bist du immer 3 Stunden

28:25.440 --> 28:29.040
in dem einen Betriebssystem willst deine Mails nachgucken, Instant Messenger. Ja du musst

28:29.040 --> 28:33.640
vieles doppelt machen und immer dieses Zwischendurch an und ausschalten ist auch nervig. Also

28:33.640 --> 28:38.760
Dual Boot ist abfuck. Also Dual Boot würde ich nicht machen. Ich würde immer gucken

28:38.760 --> 28:44.280
dass ich das was ich brauche virtualisiert krieg. Einzige Plattform die man schlecht

28:44.280 --> 28:50.120
virtualisieren kann ist Mac OS. Also wenn man jetzt sagt ich möchte gerne alle 3 Betriebssysteme

28:50.120 --> 28:56.400
verwenden, dann bleibt dir eigentlich nur die Möglichkeit den Mac zu kaufen und darauf

28:56.400 --> 28:59.960
den anderen Kram zu virtualisieren, wobei ich mir da auch nicht sicher bin wie gut das

28:59.960 --> 29:04.960
unter neuen Macs funktioniert, seitdem wir nicht mehr Intel CPUs drin haben. Da bin ich

29:04.960 --> 29:16.000
aber überfragt wie gut das tut. Ich mach keinen Dual Boot. Ich hab ne VM auf dem zweiten

29:16.000 --> 29:34.440
Bestop. Warum kann WebStorm das gleiche wie PHPStorm? Ich dachte PHPStorm ist halt für

29:34.440 --> 29:43.440
PHP und das hier ist für Javascript gedönst. Ja IntelliJ ist glaube ich echt das beste

29:43.440 --> 29:47.920
für Java. Haben wir noch irgendwelche Eclipse Benutzer hier? Ich weiß bei uns auf der Arbeit

29:47.920 --> 29:55.880
wir haben so ein paar richtige Oldschool Boomer Entwickler die immer Eclipse aufhaben im Fullscreen

29:55.880 --> 30:01.500
und ich bilde mir ein, ich bin mir nicht ganz sicher aber ich bilde mir sogar ein ich hab

30:01.500 --> 30:09.320
mal jemand gesehen von denen der hatte einen Webbrowser in Eclipse auf. Da hat es dann

30:09.320 --> 30:17.800
bei mir aufgehört. Da hab ich gedacht was ist denn mit euch los? Welche Virtualisierungssoftware

30:17.800 --> 30:23.720
fände du? Das ist Vmware Workstation. Das hab ich mal vor Jahren gekauft und das war

30:23.720 --> 30:43.520
bei einem Keyshop für irgendwie 8€ oder so und das war eine gute Investition. Ich wechsle

30:43.520 --> 30:48.360
die Bildschirme nicht ich hab mehrere Desktops. Guck da auf dem Desktop ist die Vmware und

30:48.360 --> 30:55.280
hier ist das normale Windows. Achso ja genau Control Alt und File Tasten kannst du hin

30:55.280 --> 31:00.400
und her wechseln. Guck zack zack 1. Desktop 2. Desktop 3. Desktop 3. Desktop 2. Desktop

31:00.400 --> 31:11.680
1. Desktop. Benutzt du auf der Arbeit mittlerweile Windows? Ja und nein ich verwende weiterhin

31:11.680 --> 31:16.880
zum größten Teil Linux aber ich hab auch in Windows allein schon für diese ganzen

31:16.880 --> 31:21.680
Unternehmensanwendungen von Raumbuchung bis Outlook bis Geschiss da brauchst du ab und

31:21.680 --> 31:25.640
zu mal in Windows oder irgendwelche offiziellen PDFs die du nur gescheit mit Windows ausfüllen

31:25.640 --> 31:40.680
kannst. Hast du UV? Was? Weiß ich nicht was das ist. Also ich hab Mac mal virtualisiert

31:40.680 --> 31:48.720
unter VirtualBox. Das lief aber es gab halt keine gescheite GPU Virtualisierung und dementsprechend

31:48.720 --> 31:59.160
lief es langsam. Das da das ist ein Terminal. Was nicht so eklig ist wie das Windows Terminal.

31:59.160 --> 32:03.320
Mittlerweile kann man aber auch wenn man will das offizielle neue Microsoft Terminal verwenden.

32:03.320 --> 32:11.680
Tut auch. Das ist Half Life. Genau. Unreleased ist Half Life Addon hab ich nur ich auf dem

32:11.680 --> 32:36.360
Rechner. Ein Bylist. Ok das kann ich verstehen ja. Gerade bei Embedded Zeug bewegt sich die

32:36.360 --> 32:55.440
Zeit geht langsamer. So also auf gehts. Was? Hat das wirklich expired?

32:55.440 --> 33:24.200
Weil hier gibt es doch regelmäßig Updates. Ja gut so also gehen wir jetzt mal hier in

33:24.200 --> 33:29.680
die Lidlungs VM, clearen den ganzen Clampel und machen mal Go Land auf. Also mein Plan

33:29.680 --> 33:58.280
was ich machen will. Do not import Settings. Nein nein wir brauchen keine Settings. Bin

33:58.280 --> 34:25.840
doch eingeloggt. Was? Ja das ist richtig. Ich hab vor ein paar Tagen mein Account Passwort

34:25.840 --> 34:40.480
geändert. Das ist korrekt. Oh Shit Alter. Ich hab das Passwort nicht hier Moment. Nein

34:40.480 --> 34:46.800
nein das ist ein sinnvolles Passwort. Ich versteh immer noch nicht wie man leicht zwischen

34:46.800 --> 34:51.760
Linux und Windows wechseln kann. Also jetzt jetzt zum Mitschreiben für dich. Also du

34:51.760 --> 35:00.560
klickst hier unten drauf und du machst dir noch einen zweiten Desktop. Du machst dir

35:00.560 --> 35:06.880
noch einen weiteren Desktop. Dann gehst du auf diesen zweiten Desktop und dann startest

35:06.880 --> 35:13.760
du dort vor allem bei Workstation und installierst dir ein Linux drinnen. Und dann kannst du

35:13.760 --> 35:22.000
die Desktop wechseln mit CTRL, Windows Taste, FILE Taste nach links und CTRL, Windows und

35:22.000 --> 35:31.200
FILE Taste nach rechts. So jetzt hab ich ein Problem. Ich muss mein Passwort resetten Leute.

35:31.200 --> 35:45.080
Das ist ja abfuck. Ok. JetBrains. Wartet mal. Ich muss das mal kurz ausmachen. Ich muss

35:45.080 --> 35:55.560
kurz mein Passwort resetzen. Meinung zu Code with me hab ich noch nicht ausprobiert. Es

35:55.560 --> 36:02.640
ist CTRL, Windows, FILE Taste. Also Account. So forgot password. Ja ich hab mein Passwort

36:02.640 --> 36:11.720
vergessen. Jaja. Forgot your password. So Passwort reset. Ok jetzt krieg ich ne Mail

36:11.720 --> 36:33.720
für Passwort reset. So. Reset your JetBrains Account. Jawoll. Copylinked. So Leute das

36:33.720 --> 36:37.680
dauert jetzt kurz ne Minute bis ich mein Passwort reset. So. Neues Passwort. Ok ich

36:37.680 --> 36:42.480
denk mir jetzt mal eins aus kurz. Ne irgendwas was ich schreiben kann weil ich wills nicht

36:42.480 --> 37:01.840
copy pasten. Das Passwort wird enthalten kappa. Ne verrate ich nicht. Ok. Passwort ist strong

37:01.840 --> 37:14.840
sagt JetBrains alles klar. Wenn es ein stronges Passwort ist. Fock. Your Passwort has changed

37:14.840 --> 37:23.120
successfully. Na dann log ich mich mal wieder ein. Da mach ich euch mal aus. Ihr dürft

37:23.120 --> 37:37.180
jetzt nicht zugucken. Weil ich will mich nicht irgendwie Mist eintippen. Und mich nicht vertippen

37:37.180 --> 38:06.480
und ihr sehts dann. So. Kappa. Kappa. Kappa. Kappa. Kappa. Kappa. Kappa. Kappa. Kappa.

38:06.480 --> 38:27.000
So ich bin eingeloggt. Authorization is successful. Das geht nicht. Was ist denn das für ne Scheiße.

38:27.000 --> 38:33.760
You can close this page. Hab ich. Ging nicht. Meine Güte ey. Was ist das für ein Scheiß.

38:33.760 --> 38:47.180
Geht das nicht. Exit. Jetzt muss sich GoLand sogar schließen. Muss ich das jetzt noch

38:47.180 --> 39:10.380
mal machen oder wie. Ok noch mal. So jetzt hat es funktioniert. Ok. So. Jetzt hat es

39:10.380 --> 39:32.340
funktioniert. Subscription Active. Ok. Ich kann euch wieder einschalten.

39:32.340 --> 39:56.580
Alles klar. So. Auf gehts. Wir können anfangen. Sollte jetzt funktionieren. Ok. Nice. Login

39:56.580 --> 40:02.980
hat funktioniert. Also. Neues Projekt. Da gehts schon los. Hab ich überhaupt. Hab ich

40:02.980 --> 40:19.660
überhaupt aktuelles Go installiert. Heißt es vielleicht einfach nur Go. Pacman minus

40:19.660 --> 40:30.780
Go. Ich hab. Ich hab Go gar nicht installiert. Ok. Vielleicht soll ich erst Go installieren

40:30.780 --> 40:46.380
bevor ich Go. Ach so. Deswegen findet er auch kein Go. Go Path. Also ich kann mich

40:46.380 --> 40:53.540
dunkel dran erinnern. Das hier ist die. Modul Variante. Und das hier ist die Oldschool Go

40:53.540 --> 40:58.020
Path Variante. Ich muss jetzt aber mal canceln. Weil ich muss ja Go erst mal installieren.

40:58.020 --> 41:14.300
Yes. Ist denn Go 2.1.18. Die aktuelle. Ne nicht 2.1.18. 1.1.18. 1.1.18. 4.1.18.

41:14.300 --> 41:27.180
Oh. Ich bin einer meiner. Meiner Version hinten dran. MonkaS. So. Also Go Land. Neues

41:27.180 --> 41:37.500
Projekt. Er hat es auch gefunden. Das ist doch schon mal gut. Was ist denn Depp? Was

41:37.500 --> 41:57.620
ist Go Depp? Ein Dependency Management Tool. Es ist aber. Deprecated. Ach jetzt haben sie

41:57.620 --> 42:03.700
Go Modules verwendet. Ok. Ist ja auch geil. Einfach mal ein 13K GitHub Projekt Deprecated.

42:03.700 --> 42:14.740
Also wir wollen Go. So es heißt nicht Awesome Project. Sondern es heißt Pepo Vetter. Habe

42:14.740 --> 42:39.420
ich mir überlegt. Passiert da noch was? Ach ne das wars schon. Ich weiß es gibt ein

42:39.420 --> 42:45.940
eingebautes Terminat. Aber das sackt. Benutzt lieber ein ordentliches. So. Jetzt gehts schon

42:45.940 --> 42:54.220
los. Ich glaube man muss jetzt eine main.go anlegen. Simple Application ist ein gutes

42:54.220 --> 43:08.780
Beispiel. Main. Alles klar. Ok. So. Go Pass ist empty. Chat ist das. Ist das jetzt gut

43:08.780 --> 43:19.380
oder ist das schlecht? Ist das egal? Font größer. Jaja wir machen gleich. Wir machen

43:19.380 --> 43:45.300
gleich die Schrift größer. Passt? Ok. Also Font. Ok. Was? Was? Font. JetBrains Mono.

43:45.300 --> 43:53.260
Nein nein nein. Hack. Hack 16. Hack. Warum ist das 18? Jetzt sind wir noch ein bisschen

43:53.260 --> 44:01.940
klein oder? Chat ist ok so. Oder komm 20. Ah yes. So ist gut. So ist gut. So erkennt

44:01.940 --> 44:11.540
man was. So. Meine. Ach ja. Go legt da immer ziemlich viel Wert drauf. Dass die so irgendeinen

44:11.540 --> 44:19.340
Default haben. Und ich vermute mal, dass Tabs der Default sind. Weil das verwendet Tabs.

44:19.340 --> 44:24.860
Tabs. Genau also das einzige wo ich mich jetzt an Go so spontan dran erinnern kann. Dass

44:24.860 --> 44:33.060
er was sagen kann. FMT. Genau. Print. Prindeln. Kekl zum Beispiel. Und ich bin mir gar nicht

44:33.060 --> 44:42.260
versichert. Braucht man Semikola? Nein braucht man nicht. Ok. So. Also. Go land. Projects.

44:42.260 --> 44:52.020
Pepo fetter. Go. Was? Go run? Ach nee man muss main.go angeben. Ok funktioniert. Ok.

44:52.020 --> 45:06.940
Gibt das sowas wie go watch run? Nein. Go watch run? Missing watch mode for go commands.

45:06.940 --> 45:13.020
Zusätzliche Sachen will ich nicht installieren. Warum exekutest du das im Terminal? Weil

45:13.020 --> 45:21.740
ich das Terminal in der IDE nicht mag. Ach so du meinst für Debugger. Wozu? Ich muss

45:21.740 --> 45:35.500
nix debuggen. Das funktioniert auch so alles. Mal gucken. Go build. Wie groß ist das binary?

45:35.500 --> 45:44.500
Ja zwei Fenster ist viel besser. Ganz ehrlich ich mag das eingebaute Terminal nicht. Ich

45:44.500 --> 45:50.580
finde mein Terminal viel besser. 1,7 MB. Gut ich meine das ist ein hallo welt. Der C-Programmierer

45:50.580 --> 46:00.140
würde jetzt sagen alles über 400 bytes ist bloated. Go build Punkt. Ah da guckt er wahrscheinlich

46:00.140 --> 46:04.780
ob es main gibt. Kann man sowas machen? Moment Leute. Kann man sowas machen wie go build

46:04.780 --> 46:23.140
minus out build oder so? Ne. Dass man ihm sagt wo er was bilden soll. Go build output.

46:23.140 --> 46:36.020
Ja war richtig. Muss ich vielleicht minus O vorher machen? Ah ok. Ne. Ne ne ne ne. Ich

46:36.020 --> 46:45.100
meine das Output directory nicht wie der Output heißen soll. Output directory meine ich.

46:45.100 --> 47:04.580
Ah man macht den fad vorne dran. Also sag ich jetzt z.B. Build und das ist was ist wenn

47:04.580 --> 47:26.420
ich einfach nur so mache. Rm build. Ah ja. Ach ich muss dann was angeben. Ok wunderbar.

47:26.420 --> 47:37.620
So build. Alles klar funktioniert. Ok verstehe sehr schön.

47:56.420 --> 48:20.380
Entre. Ich glaube nicht. Kann ich nachinstallieren? Gibt es das hier? Was ist denn das? Run Arbitr-

48:20.380 --> 48:37.980
Ach so das ist so was wie guard oder so. Ach verstehe. Der Stream ist deutsch. Ne ne das

48:37.980 --> 48:45.460
passt schon. So also alles klar. Machen wir mal weiter. Also wir wollen ja nicht einfach

48:45.460 --> 48:55.860
nur fmt prindlen keggel ausgeben. Peppofetter wird gelöscht. Build. Alles gut passt. Also

48:55.860 --> 49:00.940
wie würden wir dann das ganze jetzt angehen? Als erstes würde ich vorschlagen wir gucken

49:00.940 --> 49:11.180
mal wie man eine Web Anwendung überhaupt startet. Go lang. Wie heißt das Ding? libhttp? Ne.

49:11.180 --> 49:20.260
Nethttp heißt das. Nethttp. Jetzt ist halt die Frage chat. Da müssen wir fast ne Umfrage

49:20.260 --> 49:27.420
machen. Fiber oder Nethttp? Ich mein ich brauch irgendwie 3 AP Endpunkte. Das sollte eigentlich

49:27.420 --> 49:32.060
mit allem möglich sein. Wieso das hier sieht doch super easy aus. Warum braucht man da

49:32.060 --> 49:52.100
noch mehr? Das sieht doch eigentlich relativ simpel aus. Ja. Wir probieren es jetzt mal

49:52.100 --> 49:56.180
mit dem eingebauten Package. Also wie würde man das jetzt machen? Gibt es eigentlich

49:56.180 --> 50:08.380
für ein vollständiges Sample wie das funktioniert? Wie das ist kein Server? Atttp Handle? Doch.

50:08.380 --> 50:25.580
Ach das ist beides. Ok so. Ne Moment. Ach hier ist ein Minimal Beispiel. Ok. Also blablabla.

50:25.580 --> 50:39.860
Was da muss dann... Moment. Warte mal ne das muss alles in Main rein. So. Atttp Handle.

50:39.860 --> 50:52.980
Wie ist denn die? Kann man das? Ne. Wie schreibt man so was inline? Wie sieht denn das in Go

50:52.980 --> 51:19.100
aus? Die Zeile drunter? Ach hier. Ah. Ach so. Guck mal Funk quasi. Ah verstehe. Ok alles

51:19.100 --> 51:32.660
klar. Also das heißt. Wie gebe ich da jetzt an ob es Get oder Post oder sowas ist? Egal

51:32.660 --> 51:51.100
probieren wir das mal aus. Also pepo go run main. Listen da jetzt? Curl localhost 8080.

51:51.100 --> 52:03.700
Ach ne. Bar. Ja funktioniert. Funst. Seht ihr noch was chat wenn ich das hier unten rechts

52:03.700 --> 52:13.940
so mache? Ja ganz knapp. Ganz knapp sieht man das noch. Ok also jetzt haben wir einen

52:13.940 --> 52:21.540
Web Server. Das ist ja tatsächlich schon mal relativ easy gewesen. Handle func bar. Ok

52:21.540 --> 52:29.460
also. Ich will eine simple Web Seite machen die random essen Sachen mit Bildern anzeigt.

52:29.460 --> 52:34.620
Einfach nur dass ich irgendwas naja sinnvoll ist es nicht aber irgendwas machen kann. Das

52:34.620 --> 52:42.100
heißt wir brauchen jetzt im Prinzip eigentlich nur ein AP Endpunkt. Ach so wie serve ich

52:42.100 --> 52:53.820
denn Static Files überhaupt? Ich muss ja mein HTML irgendwie ausliefern. NET HTTP SERVE STATIC.

52:53.820 --> 53:07.980
SERVING STATIC FILE WITH GO. Ja wo ist das Beispiel? HTTP FILE SERVE. Ok das ist tatsächlich

53:07.980 --> 53:17.860
relativ easy. Wir copy pasten uns unsere Sache zusammen. POG. Also slash static. Ja www root

53:17.860 --> 53:24.420
wir nennen das wenn schon gescheit. Also pepo fetter ordner www root. Oder gibt es irgendeinen

53:24.420 --> 53:31.940
coolen Namen was die krassen Golang Leute verwenden für ihr HTML Zeug. So new HTML

53:31.940 --> 53:43.620
index.html. Das einzige was jetzt da drauf steht im Kickel. Im Titel. Kackel pepo fetter.

53:43.620 --> 53:56.060
Lulw. So das muss jetzt erst mal reichen und gucken ob es funktioniert. Gibt doch extra

53:56.060 --> 54:16.780
go templates. Wie templates? Wat? Ich will statische Webseiten surfen ich will keine

54:16.780 --> 54:23.740
templates. Schaut ihr mal wirklich GOX und GT an. Naja das sind Projekte mit 100.000

54:23.740 --> 54:30.620
Zeilen Source Code was soll ich mir da angucken. Ich kann es mir vorstellen die werden einige

54:30.620 --> 54:36.260
server side rendern. Und dann mit templates. Aber will ich ja nicht ich will ja nicht server

54:36.260 --> 54:41.340
side rendern ich will ja einfach nur statisches HTML ausliefern und dann ein bisschen JavaScript

54:41.340 --> 54:51.180
rein basteln was hier mein Zeug abfragt. Also von der Idee her sollte ich jetzt sollte

54:51.180 --> 54:57.620
ich doch jetzt wenn ich das abfrage mein HTML bekommen. Ja ist doch easy also localhost

54:57.620 --> 55:03.620
port 80 80. Kriegen wir unser HTML sehr schön ist doch alles mehr brauchen wir doch erstmal

55:03.620 --> 55:11.740
gar nicht. So index.html. Nee wir brauchen auf keinen Fall irgendwelche templates.

55:11.740 --> 55:32.620
Nein ich bin Wubblos. Eindeutig wir haben bloß zufällig den gleichen Avatar und wir

55:32.620 --> 55:37.500
hören uns nur zufällig genau gleich an aber ansonsten gibt es keine weiteren und wir können

55:37.500 --> 55:55.580
auch beide die Bahn nicht leiden. Aber ansonsten gibt es keine weiteren Überschneidungen.

55:55.580 --> 56:01.140
Vorgestern habe ich ein bisschen übertrieben glaube ich. Gestern war ich ein bisschen.

56:01.140 --> 56:06.420
Das ist wahrscheinlich schon wieder Content den man auf Twitch nicht zeigen darf. Gestern

56:06.420 --> 56:24.100
habe ich schon ein bisschen übertrieben. Gestern habe ich ein bisschen übertrieben.

56:24.100 --> 56:30.820
Es ging aber schon wieder gut los. Zug ist angeblich laut der App da und Zug ist laut

56:30.820 --> 56:36.420
der App schon abgefahren aber Zug war noch nicht in Sichtweite. Und ich habe 10 Minuten

56:36.420 --> 56:40.260
rum gestanden das Ding kam 10 Minuten zu spät angeblich war der Zug schon 2 Stationen weiter.

56:40.260 --> 56:48.500
Ja also es ist echt dieser Laden das ist so das sind solche abgefuckten Pisser alter

56:48.500 --> 56:55.020
das kann man nicht anders sagen. Ich hasse die Bahn das ist unglaublich. Es gibt nichts

56:55.020 --> 57:06.100
das ich so sehr hasse wie die Bahn. Ja es gibt Leute mit denen verstehe ich mich nicht.

57:06.100 --> 57:11.780
Es gibt Leute mit denen kann ich auch überhaupt nicht leiden. Aber so richtigen Hass habe

57:11.780 --> 57:17.940
ich eigentlich nur gegen die Bahn gegen sonst nichts. Und wisst ihr was das lustige ist

57:17.940 --> 57:23.420
Leute wenn ich auf Twitter lese wenn Leute mit der Bahn fahren die haben alle immer die

57:23.420 --> 57:30.660
gleichen Probleme. Und dann machen die auch noch Werbung so nach dem Motto ja in Urlaub

57:30.660 --> 57:35.820
fahre ich mit der Bahn entspannt und günstig ankommen. Es ist weder günstig noch ist es

57:35.820 --> 57:40.580
entspannt. Mit dem 9 Euro Ticket ist es günstig ja. Aber du kannst kein ICE fahren da kommst

57:40.580 --> 57:53.020
es rechnet an. So wird das nichts mit einer DevOps Engineer Stelle bei der DB das ist richtig

57:53.020 --> 57:57.700
ich habe ja auch gesagt ich auch wenn die Stellen von der Bahn noch so gut passen ich

57:57.700 --> 58:04.600
bewerbe mich nicht bei der Bahn. Übrigens es gibt ein Ruby Projekt auf GitHub was so

58:04.600 --> 58:21.380
heißt wie du um Software zu deployen heißt genau so. Mit was wechselst du zwischen Windows

58:21.380 --> 58:29.820
und Linux. Das beides sind nicht beides VMs es ist nur Linux eine VM. Windows ist der

58:29.820 --> 58:38.340
Host. Ich wechsle über die in Windows eingebaute Multiple Desktop Funktion. Du kannst unter

58:38.340 --> 58:43.700
Windows mehrere Desktops haben und ich drücke einfach Control Windows Feiltaste rechts komme

58:43.700 --> 58:47.460
ich auf den Linux Desktop nochmal Feiltaste rechts komme ich auf den freien Desktop und

58:47.460 --> 58:52.180
Feiltaste links wieder zurück. Es ist nur es ist nur VMWare guck so erkennt man es

58:52.180 --> 59:06.140
glaube ich besser hier ist Windows hier ist VMWare hier ist leerer Desktop. So also weiter

59:06.140 --> 59:13.500
weiter im leer ja das wird nicht von VM ach so doch du hast recht ich habe dir ich habe

59:13.500 --> 59:18.460
was vergessen zu erwähnen ja normalerweise du hast recht ich drückte schon so automatisch

59:18.460 --> 59:23.460
ich denke da nicht dran. Wenn ich in der VM Control Windows drücke dann geht es in die

59:23.460 --> 59:28.700
VM. Du musst vorher Control Alt drücken guck mal Control Alt da siehst du ja eurer Mauszeiger

59:28.700 --> 59:34.180
guck ich drück Control Alt das ist das Escape der Standard Escape Sequenz die Standard Escape

59:34.180 --> 59:42.580
Sequenz für VMWare Control Alt dann lässt VMWare den Fokus macht den Fokus raus von

59:42.580 --> 59:48.420
Tastatur und dann drückst du Control Windows links rechts also sprich ich drücke eigentlich

59:48.420 --> 59:52.620
relativ schnell beides hintereinander ich habe das mir schon so angewöhnt ja also ich

59:52.620 --> 59:58.260
drück Control Alt Control Windows Feiltaste aber das liegt halt direkt nebeneinander deswegen

59:58.260 --> 01:00:04.720
ist das nicht so und nicht schwierig du könntest wahrscheinlich VMWare den Escape Button umstellen

01:00:04.720 --> 01:00:14.220
auf Control Windows das funktioniert vielleicht ne zurück in die VM ist einfach zurück in

01:00:14.220 --> 01:00:24.260
die VM einfach reinklicken ja genau das ist aber eine gute Frage kann man diesen Escape

01:00:24.260 --> 01:00:40.460
diese Escape Sequenz umstellen hier hotkey provide a shortcut probieren wir mal vielleicht

01:00:40.460 --> 01:00:52.220
brauche ich das gar nicht mehr guck mal stellen wir mal um auf Control Windows ne das geht

01:00:52.220 --> 01:00:59.820
nicht das funktioniert nicht weil du musst du musst loslassen dass das das ist das frisst

01:00:59.820 --> 01:01:03.980
also ich kann jetzt Control Windows Control Windows drücken aber dann bleibe ich lieber

01:01:03.980 --> 01:01:13.460
bei dem woran ich mich gewöhnt habe wenn es bei bei Keydown wäre das wäre natürlich

01:01:13.460 --> 01:01:21.500
cool weil dann wird es gleich rausspringen naja aber die Hand an der Tastatur lässt

01:01:21.500 --> 01:01:27.500
er doch eh nicht weil du zu 90 prozent wenn du nicht gerade da am basteln bist mit der

01:01:27.500 --> 01:01:32.860
Maus im Browser bist ach so wobei du hast nicht unrecht wenn man Feiltaste drückt benutzt

01:01:32.860 --> 01:01:37.620
man ja eh meistens die rechte Hand ja hast recht hast recht da muss man nicht ja du ist

01:01:37.620 --> 01:01:44.380
wahrscheinlich gar nicht so schlecht ja hey das ist gut Chat High IQ Chat wieder hier

01:01:44.380 --> 01:01:52.420
Massive Massive Brain das finde ich gar nicht schlecht guck mal man würde jetzt einfach

01:01:52.420 --> 01:01:58.540
sagen Control Windows rechts und dann drücke ich einfach Control G und bin wieder in der

01:01:58.540 --> 01:02:05.700
VM das ist cool das finde ich ok das muss da muss ich mich dran gewöhnen das ist gut

01:02:05.700 --> 01:02:12.460
das ist praktischer als zwischen Feiltaste und Maus hin und her zu greifen Desktop bester

01:02:12.460 --> 01:02:24.580
Desktop very clean

01:02:24.580 --> 01:02:29.580
das wollte ich jetzt noch gerade sagen zu dem Thema vorher Control G für die für die

01:02:29.580 --> 01:02:40.740
Ach ja was anderes ich hatte mal ein Makro für die Maus das der erkannt hat wenn du

01:02:40.740 --> 01:02:48.700
in VMWare bist dass dann dass ich mir ich konnte mit der Maustaste umschalten ich hatte

01:02:48.700 --> 01:02:53.060
mir ein Makro gebaut in dieser Logitech Software wenn er erkannt hat dass ich in VMWare bin

01:02:53.060 --> 01:02:58.260
konnte ich Maustaste drücken also die Seitentasten und konnte zwischen Desktop hin und her schicken

01:02:58.260 --> 01:03:04.460
weil Maus Makros gehen ja von der Maus aus Low Level die kann Windows und VMWare nicht

01:03:04.460 --> 01:03:08.820
abfangen und da hatte ich dann quasi eine Maus Makro eingebaut das ist für mich schon

01:03:08.820 --> 01:03:18.940
gut Control Alt drückt und den Switch macht aber ja benutze ich nicht mehr ist auch egal

01:03:18.940 --> 01:03:23.940
jetzt müssen wir mal hier langsam ein bisschen Pepofat API also wir haben einen File Server

01:03:23.940 --> 01:03:29.580
der statisches HTML ausliefern kann so und so registriert man sich Get Funktionen oder

01:03:29.580 --> 01:03:33.820
wie würde ich denn daraus jetzt ein Post machen was ist denn wenn ich da jetzt sage ich will

01:03:33.820 --> 01:03:41.340
ein Post machen ist das dann auch da drin da drin ach das ist beides registriert für Post

01:03:41.340 --> 01:04:06.800
und Get ach so man registriert das hier nicht mit Get sondern man müsste dann quasi selbst

01:04:06.800 --> 01:04:12.340
die Abfrage machen ob es Get oder Post ist also sprich selbst wenn ich sowas abgedrehtes

01:04:12.340 --> 01:04:22.020
mache wie Delete oder oder Patch oder so dann ist das ok ah dann müsste ich die das ist

01:04:22.020 --> 01:04:35.740
das ist erstmal ein bisschen gewöhnungsbedürftig aber gibt schlimmeres

01:04:35.740 --> 01:04:39.420
warum kann ich hier eigentlich ein Händler angeben für was ist denn der Händler hier

01:04:39.420 --> 01:04:53.460
gut gibt es irgendwie Hilfe wenn man das auf Händler weißte nicht was es gibt es da irgendwie

01:04:53.460 --> 01:05:20.860
eine Hilfe was was ist ist das so Default Händler für alles oder oder so oder ist das

01:05:20.860 --> 01:05:27.220
wenn ich irgendwie eine Routing Library oder so registrieren will ja ja ok dann vielleicht

01:05:27.220 --> 01:05:31.140
also wenn ich selbst handeln will wohin was geht bevor es in die eigentlichen Funktionen

01:05:31.140 --> 01:05:48.140
reingeht wir haben mal einen HTTP Server für einen ESP32 selbst gebaut so einen ganz ganz

01:05:48.140 --> 01:05:57.100
minimalistischen der nur Get konnte und nicht viel ok also jetzt lasst mal überlegen Leute

01:05:57.100 --> 01:06:05.340
Big Brain Time also das ist ja schon mal Blödsinn was da steht das brauchen wir nicht also

01:06:05.340 --> 01:06:11.140
statische Sachen ausliefern alles gut www root ist unser Index drinne so also wir brauchen

01:06:11.140 --> 01:06:17.340
wahrscheinlich einen Endpunkt und jetzt müssen wir erstmal uns gucken wie man in der SQLite

01:06:17.340 --> 01:06:26.820
Datenbank macht also wir brauchen einen Endpunkt und der heißt einfach nur Food Random Food

01:06:26.820 --> 01:06:33.060
und da gibt es eine JSON Response wie macht man eine JSON Response ok jetzt wird es jetzt

01:06:33.060 --> 01:06:44.500
wird es advanceder also Writer write byte Moment fnt wait a minute was machen die da

01:06:44.500 --> 01:07:04.900
überhaupt f print a das ist quasi was um in streams oder so reinzuschreiben anscheinend

01:07:04.900 --> 01:07:19.380
vermute ich mal ok also jays wie wie macht man ich muss mir jetzt im Tutorial angucken

01:07:19.380 --> 01:07:24.900
go lang jason wie funktioniert das ok da habt ihr recht den header den header können wir

01:07:24.900 --> 01:07:46.860
schon mal setzen header dann was write set set ok Content Type muss man ist das eigentlich

01:07:46.860 --> 01:07:52.620
Pflicht dass man das groß und klein schreibt oder geht das auch so müssen wir mal in Standard

01:07:52.620 --> 01:08:06.020
gucken application jason so also ich habe ja noch nicht neu gestartet starten wir mal

01:08:06.020 --> 01:08:12.700
neu gucken wir mal ob der den header ordentlich setzt ich gebe dir header alter lahm so one

01:08:12.700 --> 01:08:37.140
on one rust quickscope only was not found a food heißt es jetzt ja header application

01:08:37.140 --> 01:08:52.780
jason ok passt das ist richtig so alles gut ok Content Type so jason wie geht das go lang

01:08:52.780 --> 01:09:17.940
jason complete guide to jason in golang with examples alles klar wow das ist ja five head

01:09:17.940 --> 01:09:26.700
so was wie dynamic gibt es da nicht

01:09:26.700 --> 01:09:56.140
decoding jason into structs nested objects primitive types

01:09:56.140 --> 01:10:07.900
maps boah nee das will ich nicht machen das ist eklig dass das will ich tatsächlich nicht

01:10:07.900 --> 01:10:21.820
machen nee also das heißt von der Idee her brauche ich jetzt ein Typ der so aussieht wie

01:10:21.820 --> 01:10:27.340
das was ich was ich zurück liefern will also sowas sowas hier oder also sprich ich bräuchte

01:10:27.340 --> 01:10:51.900
an sowas hier type ich food string name description ja ist ok description image image url so so

01:10:51.900 --> 01:11:09.460
in der richtung würde ich sagen so und

01:11:09.460 --> 01:11:28.900
wie kriege ich punkt nee nee ma was marshal hier so was jason bird type ok das wird mal

01:11:28.900 --> 01:11:35.860
ausprobieren mal ausprobieren also ich lege jetzt erstmal ein eine food an so ein food

01:11:35.860 --> 01:11:41.060
was nicht geht unused variable ja ich weiß ich habe es ja nur in den zwei eingesetzt

01:11:41.060 --> 01:11:56.780
also machen wir was testen name kacke description 0w größer kacke w image url is loop.png ist

01:11:56.780 --> 01:12:14.460
vollkommen wurscht muss da abschließendes komma hin aha so pepo fett nee moment das

01:12:14.460 --> 01:12:23.620
mache ich mal mal gucken ob ich das jetzt auf die reihe kriege also jason wahrscheinlich

01:12:23.620 --> 01:12:37.620
die coder encoder also nee das ist falsch das ist falsch marshal so im moment das ist

01:12:37.620 --> 01:13:01.260
ja auch und wie geht das jetzt data data so das hier ist der fehler code gehe ich mal

01:13:01.260 --> 01:13:09.780
von aus wenn ich mich richtig entsinne also das hier ist der error der mich nicht interessiert

01:13:09.780 --> 01:13:17.260
weil ich einfach von ausgehen dass es funktioniert so und wie kriege ich jetzt den data das data

01:13:17.260 --> 01:13:28.700
zurück anscheinend anscheinend so fmt f printf kann ich kann ich da einfach jetzt so nee

01:13:28.700 --> 01:13:33.020
moment nee nee das muss doch anders gehen das muss doch irgendwie gehen mit w right

01:13:33.020 --> 01:13:44.940
oder sowas so das geht woher weiß ich dass das geht ich habe einfach geraten aber jetzt

01:13:44.940 --> 01:14:02.700
ok alles klar easy easy so jetzt nur mal hoffen dass es jetzt auch funktioniert hey funktioniert

01:14:02.700 --> 01:14:11.420
guck mal lv größer kacke wie image url ok das ist tatsächlich relativ nett zu benutzen

01:14:11.420 --> 01:14:15.500
das ist doch ist doch ganz ok gibt es nichts wo ich mich jetzt also bis jetzt nichts wo

01:14:15.500 --> 01:14:31.380
ich mich beschweren können was hat er hierfür schmerzen unhandled error handle error wie

01:14:31.380 --> 01:14:41.620
unused variable das ist was returnt das ding überhaupt ach wie viel er geschrieben hatte

01:14:41.620 --> 01:14:50.620
das ist mir egal kann man das auch ignore kann ich das auch ignore indem ich irgendwie sowas

01:14:50.620 --> 01:15:12.740
mache oder so nee oder go ignore return ach man muss jedes element doppelt angeben oder

01:15:12.740 --> 01:15:33.860
was also quasi was ist jetzt der unterschied

01:15:33.860 --> 01:15:54.940
was ist denn jetzt da der unterschied also das hier nee aber sowas hier geht nicht oder

01:15:54.940 --> 01:16:07.020
einfach alles ignorieren naja anscheinend aber das sieht das sieht schon ziemlich ziemlich

01:16:07.020 --> 01:16:11.980
kacke aus oder müsst ihr zugeben also ist das hier normale also macht man das in go

01:16:11.980 --> 01:16:18.860
so also ist das so sieht man das häufig in go code wenn du alles ignorieren will stimmt

01:16:18.860 --> 01:16:24.900
da kann ich einfach weglassen oder der sagte mir halt hier unhandled error aber solang der

01:16:24.900 --> 01:16:43.220
beim kompilieren nicht rum merkt hat ist ja alles ok wie soll wie soll ich auf diesen

01:16:43.220 --> 01:16:51.100
error reagieren leute meine reaktion auf diesen error war ich brech den request ab was wahrscheinlich

01:16:51.100 --> 01:16:55.660
aber auch bei einem error vorkommt also mir fällt nicht ein wie ich auf diesen error

01:16:55.660 --> 01:17:09.500
sinnvoll reagieren sollte ok aber ich muss sagen so vom handling her so bis jetzt ist

01:17:09.500 --> 01:17:13.980
das doch alles ganz in ordnung ach ja wie ist und wie macht man überhaupt die schreibweise

01:17:13.980 --> 01:17:21.020
in go schreibt man den graben überhaupt so an feldern von structs oder schreibt man

01:17:21.020 --> 01:17:30.140
image url wie schreibt man das jetzt eigentlich so also hier also kein kebab case und kein

01:17:30.140 --> 01:17:41.020
snake case und sonst was sondern im prinzip so paschal case wie das sich haben auch mag

01:17:41.020 --> 01:17:54.940
image url wäre convention ja warum warum ist das convention also warum url alles groß

01:17:54.940 --> 01:18:14.260
ach so ja wenn ihr das sagt dann machen wir das so ja also übrigens kippen was mit kebab

01:18:14.260 --> 01:18:19.180
case gemeint das ist so dass wir die leute das in java skript machen irgendwie so also

01:18:19.180 --> 01:18:28.780
ich data huge chat so das wäre das wäre kebab case warum ist das kebab case ein weil

01:18:28.780 --> 01:18:42.060
das so ein spieß ist weil das bisschen aussieht wie so ein döner so ein döner spieß ich

01:18:42.060 --> 01:18:46.820
habe mir das nicht ausgedacht ok also so funktioniert jetzt wissen wir schon mal bescheid so würden

01:18:46.820 --> 01:18:55.300
wir ein objekt da serialisieren gut jetzt damit wir überhaupt ein bisschen ein bisschen

01:18:55.300 --> 01:19:05.940
fronterzeug machen können müssen wir irgendwie eine sqlite datenbank füllen mit put und dazu

01:19:05.940 --> 01:19:12.200
habe ich schon mal was im vorfeld gesucht aber bevor ich euch das zeige was verwendet

01:19:12.200 --> 01:19:18.460
man in go als fake datengenerator ich habe vorhin hier mal gesucht da gibt es ja auch

01:19:18.460 --> 01:19:26.100
wieder tausend solcher listen und diese liste hat nur 84.000 sterne da habe ich mal nach

01:19:26.100 --> 01:19:31.700
faker gesucht und habe festgestellt die faker libraries die faker heißen in go sind doof

01:19:31.700 --> 01:19:40.220
aber es gibt eine gute library die fake it oder so hieß und die macht einen ganz guten

01:19:40.220 --> 01:19:47.700
eindruck was verwendet ihr zum fake daten generieren go fake it ok also das das dann

01:19:47.700 --> 01:20:03.780
taugt das also ich verwende bei dort net meistens das das ist ziemlich hoge ok go fake it ist

01:20:03.780 --> 01:20:08.020
beste das ist schön dass ihr das auch so sieht weil go fake it hat das ist für mich sehr

01:20:08.020 --> 01:20:20.740
praktisch dinner sie fall voll fand dinner gut mit nn ja dinner da kann man sich random

01:20:20.740 --> 01:20:33.260
essen generieren lassen was natürlich für unsere random food seite sinnvoll ist ja und

01:20:33.260 --> 01:20:41.020
jetzt stehe ich auf dem schlauch leute wie kriege ich das hinzugefügt zu meinem projekt

01:20:41.020 --> 01:20:58.620
nicht verraten ich komme da selbst drauf ach so einfach import keckel ok das ist ja easy

01:20:58.620 --> 01:21:19.220
so

01:21:19.220 --> 01:21:36.980
Ah und Sync Dependency auf Pepo Feta.

01:21:36.980 --> 01:21:48.860
Was ist das jetzt?

01:21:48.860 --> 01:22:03.460
Ok das scheint funktioniert zu haben, gut, ok, alles klar, ok, also, Faker, gabs immer

01:22:03.460 --> 01:22:31.260
Lollspieler da so hieß, so, Name, Food, Minecraft, Food, ja gut, warum nicht, ja, Food, ok,

01:22:31.260 --> 01:22:53.180
ah so, nee, einfach Dinner, ok, also, füllen wirs mal neu aus, Garlic Herb, was, Garlic

01:22:53.180 --> 01:23:01.660
Herb, Roasted Red Skin Potatoes, alles klar, nächstes, TGE Fridays Mutslide, was auch

01:23:01.660 --> 01:23:13.940
immer das ist, Spinach Salad with Feta Cheese, Asian Broccoli Salad, Brr Broccoli, Alter,

01:23:13.940 --> 01:23:26.820
Heusin, Heusin, ah das ist irgendwas Chinesisches oder, Heusin Marinated Wing Pieces, Chicken

01:23:26.820 --> 01:23:36.220
Wings quasi, Sweet and Sour Pork Balls, alles klar, ok, Random Essen Generator funktioniert

01:23:36.220 --> 01:23:41.340
schon, was kann der denn sonst noch alles generieren, hier warte mal, Dinner, was hat

01:23:41.340 --> 01:23:55.780
denn da sonst was, Snack, Dessert, Fruit, was macht der denn sonst noch alles, Minecraft

01:23:55.780 --> 01:24:03.420
Food, ich generiere mal kurz Minecraft Food, ich will wissen was da, ich will einfach nur

01:24:03.420 --> 01:24:16.300
wissen was er da generiert hat, was kommt denn da raus, Golden Carrot, Honey Bottle,

01:24:16.300 --> 01:24:24.220
Sweetberry ok, das ist anscheinend das was es in Minecraft gibt zu, für Peppofett, ok

01:24:24.220 --> 01:24:35.740
mit Description gibt es sowas wie Lorem, ja beste, Lorem Ipsum, Word Count 20, wir brauchen

01:24:35.740 --> 01:24:46.460
irgendwas auf der Webseite zum Anzeigen, ok wunderbar, perfekt, also wir haben Crock

01:24:46.460 --> 01:24:52.140
Pot Caramelized Onion Pot Roast und das ist dann die Beschreibung, das ist die Image

01:24:52.140 --> 01:24:59.140
wohl, ok das passt eigentlich ganz gut, wie mache ich das jetzt mit dem Bild, ne Moment,

01:24:59.140 --> 01:25:04.460
bevor ich das mit dem Bild mache, wie kriege ich das jetzt, wie kriege ich das alles in

01:25:04.460 --> 01:25:14.500
der SQLite Datenbank, ok also wie ist das Ding, GORM was der Chat vorhin erzählt hat,

01:25:14.500 --> 01:25:20.060
GORM, Fantastic ORM Library for Golang, ok ich mag das, dass die sich selbst schon mal

01:25:20.060 --> 01:25:43.740
geil finden, das ist schon mal gut, Examples SQLite, SQLite Connecting to Database, GORM

01:25:43.740 --> 01:25:58.580
is PainzChamp, ok was ist besser oder warum, ich hab da keine Ahnung von SQLite, ok also

01:25:58.580 --> 01:26:28.420
GORM, my old driver SQLite, ach hier, ach hier, ach hier, ok, Raw SQL, ne blieb

01:26:28.420 --> 01:26:38.420
im Leben nicht, warum soll ich Raw SQL, ne ne, ok also, hat Golang sowas wie Package

01:26:38.420 --> 01:26:53.020
Suche, ne, null, gibt's nicht, GORM, so und was muss man jetzt machen, nochmal Sync, Sync

01:26:53.020 --> 01:27:09.100
Dependencies, alles klar, DB Error, Error, Kackel, wer hat schon Errors, Open SQLite,

01:27:09.100 --> 01:27:23.500
also gut DB, Error ist richtig bloated, ja, kann ich jetzt, ok ich mach mal irgendein Query,

01:27:23.500 --> 01:27:28.060
was es ja nicht gibt, ne, ok da geht's schon los, Sekunde wie frag ich da jetzt was ab

01:27:28.060 --> 01:27:54.060
raus, weil sowas wie DB-Kontext ist wahrscheinlich nicht, ne, Feind, Eier, Feind, hör, ok,

01:27:54.060 --> 01:28:08.420
Feind, First, ok Feind aber ich hab keine Ahnung wie ich Feind verwende, Feind und User,

01:28:08.420 --> 01:28:34.260
der hat doch User hier nirgendswo angelegt, oder, äh was ist denn User in dem Fall, ja

01:28:34.260 --> 01:28:54.220
oder ist User der Typ, also müsste ich jetzt quasi sowas hier sagen, ähm, also quasi

01:28:54.220 --> 01:29:23.980
gut, ne, ich hab keine Ahnung wie das funktioniert, Feind, gut, was, what the, was das, was ist

01:29:23.980 --> 01:29:43.460
das, was, was soll denn das jetzt sein, legt er jetzt ein leeres Struct an oder wie, aber

01:29:43.460 --> 01:29:54.820
ok das check ich nicht, was, was, ne das Ergebnis kommt doch als, kommt doch hier als, ähm,

01:29:54.820 --> 01:30:13.380
irgendwie Result oder, achso, der schreibt das da rein, achso, ok das ist, ok das ist

01:30:13.380 --> 01:30:22.820
irgendwie umständlich, das ist doch bestimmt nur weil Go keine Generics konnte bis jetzt

01:30:22.820 --> 01:30:44.740
oder, also sprich ich müsste jetzt quasi, äh sowas hier an den Result gleich gut sowas

01:30:44.740 --> 01:30:56.060
hier, ach und da schreibt er das jetzt rein, ok verstehe, aber gut, ich hab in meiner SQLite

01:30:56.060 --> 01:31:15.820
die Datenbank nix drinstehen, aber soweit ja ok, wie, connection refused, äh warum ist

01:31:15.820 --> 01:31:34.180
das nicht als hätt ich irgendwas kaputt gemacht oder so großartig, ok, wait a minute der hat

01:31:34.180 --> 01:31:40.700
einfach so lange gebraucht jetzt die Datenbank zu erstellen oder was, hat der grad wirklich

01:31:40.700 --> 01:31:49.700
irgendwie 10 Sekunden meine Datenbank erstellt, ah Schein, wie groß ist denn die jetzt, die

01:31:49.700 --> 01:32:02.180
müsste ja leer sein, Null, Utb, Null, ok alles klar, ich glaube ich hab's verstanden,

01:32:02.180 --> 01:32:16.740
das heißt, so das heißt wir füllen jetzt erstmal die Datenbank mit random food, zumindest

01:32:16.740 --> 01:32:20.620
mal zum ausprobieren, gut, das heißt ich kommentiere mal diesen ganzen Krempel hier

01:32:20.620 --> 01:32:32.220
unten aus, äh tja, ich weiß jetzt nicht der Shortcut da drinne für auskommentieren, ok

01:32:32.220 --> 01:32:51.180
oh go, Vorschleife, Pifad, range, ne Moment, wie ging das nochmal, oh x, ne, range, ohje,

01:32:51.180 --> 01:33:07.700
1 zu 5, ne, ahja, x gleich range, range, ok, range und jetzt so, ne ok, go for loop da

01:33:07.700 --> 01:33:15.660
muss ich nachgucken, keine Ahnung, 5 basic, 5 basic go pattern, ach man kann auch ne stinknormale

01:33:15.660 --> 01:33:25.340
Schleife machen, while loop, Moment eine while loop die mit 4 anfängt, krasse while loop,

01:33:25.340 --> 01:33:46.380
nisch, ich will einfach ne Schleife haben, die von 1 bis 100 läuft, das heißt ich mach

01:33:46.380 --> 01:34:14.500
einfach sowas hier oder, also ich mach doch einfach sowas, also irgendwie 100 Gerichte,

01:34:14.500 --> 01:34:26.460
so und jetzt sag ich db create, so und jetzt muss ich wahrscheinlich, ich vermute mal,

01:34:26.460 --> 01:34:30.380
by the way kann mir irgendjemand schlüssig erklären warum man auch mit var variablen

01:34:30.380 --> 01:34:35.980
anlegen kann in go, ich kann jetzt ja auch sowas machen wie food gleich food, ja das

01:34:35.980 --> 01:34:55.380
funktioniert ja auch, aber ich hab keine Ahnung warum ist das überhaupt, also warum geht das,

01:34:55.380 --> 01:35:05.900
sowas würde niemand schreiben, ja das denke ich mir aber warum gibt es das, gut, was das

01:35:05.900 --> 01:35:15.100
ist wenn man nicht selber initialisieren will, also ist in das hier quasi was, ohne dass

01:35:15.100 --> 01:35:22.260
ich davor geschrieben hab oder, stimmt wie würde man eigentlich default values geben,

01:35:22.260 --> 01:35:40.460
geht das überhaupt, kann man default values geben, wieso, so, so, nee oder, go struct

01:35:40.460 --> 01:36:07.180
default value, what, das ist ein constructor oder sowas, gell, so eine art constructor

01:36:07.180 --> 01:36:21.540
ist das, ok, naja dann halt keine default values, ja aber jetzt mal dumme Frage, wenn das keine

01:36:21.540 --> 01:36:26.300
default values gibt, auf was steht das denn hier denn, ist das dann ein null pointer oder

01:36:26.300 --> 01:36:31.380
auf was steht das, wenn ich das struct anlegen kann ohne zu initialisieren, auf irgendwas

01:36:31.380 --> 01:36:40.820
muss es ja stehen, in C ist es relativ einfach, es ist undefined, ist das irgendwas, was da

01:36:40.820 --> 01:36:49.860
halt mal vorher stand, auf den default value des types, ahja, das heißt jeder type muss

01:36:49.860 --> 01:36:59.020
ein default value haben, so ok jetzt kriegen wir 100 foods, Leute ich muss mal ganz schnell

01:36:59.020 --> 01:37:01.460
was zu trinken holen, ich bin gleich wieder da.

01:37:29.020 --> 01:37:57.380
Wieder hier, oder auch nicht, da, da, jetzt, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

01:37:57.380 --> 01:38:09.540
ok, also weiter, so würde man 100, 100 random foods anlegen, wobei da ja nichts drin steht,

01:38:09.540 --> 01:38:14.580
das heißt hier müsste ich jetzt eigentlich das da machen

01:38:14.580 --> 01:38:38.500
okay alles klar verstehe verstehe gibt es nicht irgendwie eine gut moment

01:38:38.500 --> 01:38:45.060
da gibt es auch free free api free api wir suchen jetzt einfach eine api mit mit

01:38:45.060 --> 01:38:47.660
food bildern

01:38:51.700 --> 01:38:58.500
achtung momento musst db auto migrate benutzen damit er eine tabelle für den

01:38:58.500 --> 01:39:03.700
typ erstellt es stand hier irgendwo drin das habe ich eben gerade gesehen

01:39:03.700 --> 01:39:25.660
migrate hier ah sqlite muss ich das muss ich anscheinend ok also sprich gut aber

01:39:25.660 --> 01:39:28.820
dieses wir legen in leeres truck dann oder so ist schon irgendwie ein bisschen

01:39:28.820 --> 01:39:37.780
pepega also so muss man das machen ok er aus er aus werden natürlich prinzipiell

01:39:37.780 --> 01:39:44.580
prinzipiell ignored bei mir aber kann er euch kann er euch anzeigen also das

01:39:44.580 --> 01:39:52.140
blub blub blub also gibt es gibt es eine food image api oder so was bacon mock

01:39:52.140 --> 01:40:06.140
ab was nicht alles gibt random pictures of koffe also wir brauchen irgendwas

01:40:06.140 --> 01:40:16.220
ohne ohne authentifizierung random pictures of koffe klar udish rennen

01:40:16.220 --> 01:40:22.820
picture of dishes das ist genau so was brauche ich moment es gibt es aber gar

01:40:22.820 --> 01:40:27.620
nicht ja doch so was so was so was top random

01:40:27.620 --> 01:40:31.100
random futter

01:40:31.100 --> 01:40:48.820
random

01:40:48.820 --> 01:40:54.060
meine das sind nur 572 drinnen ok was haben wir sonst noch

01:40:54.060 --> 01:41:02.020
ich kann auch mal nach mieten nach meal oder dinner oder so suchen

01:41:07.220 --> 01:41:12.100
gibt keine projektbeschreibung heute ich übe ein bisschen go und wir machen

01:41:12.100 --> 01:41:18.220
eine webseite die random essen anzeigt die webseite als treffen pepo fetter so

01:41:18.220 --> 01:41:26.740
was haben wir sonst noch hier fruit weil der supermarkt data food products

01:41:26.740 --> 01:41:29.740
database

01:41:29.740 --> 01:41:46.620
das ist die gesamte datenbank oder was

01:41:46.620 --> 01:42:01.740
ich es gibt es auch als xml ja da habe ich ja drauf gewartet techo fancy

01:42:01.740 --> 01:42:12.100
skihunter jetzt was mit meal vielleicht meal db das klingt doch schon mal nicht

01:42:12.100 --> 01:42:20.980
verkehrt meal db ich brauche eigentlich nur bilder von essen sonst nix random

01:42:20.980 --> 01:42:25.980
hier look up a single random meal

01:42:25.980 --> 01:42:42.820
es gibt sogar ein youtube bild youtube video wie das zubereitet wird image

01:42:42.820 --> 01:42:55.580
ja das ist doch ganz ok da wir ziehen uns einfach von dort ein image da können

01:42:55.580 --> 01:43:06.700
wir auch gleich lernen wie man gleich lernen wie man hatte tp request macht

01:43:10.340 --> 01:43:14.940
und dann müssen wir ok jetzt ist natürlich die frage machen wir es

01:43:14.940 --> 01:43:19.260
schön oder machen wir es einfach also sprich speichern wir die bilder in der

01:43:19.260 --> 01:43:23.300
sq light datenbank oder speichern wir die bilder im filesystem und schreiben in

01:43:23.300 --> 01:43:30.460
die sq light datenbank plus ein name rein ich würde sagen wir schreiben plus

01:43:30.460 --> 01:43:39.540
den name in die sq light datenbank rein oder chat was sagt ihr ich

01:43:39.540 --> 01:43:44.140
ich bei ich speichere nur den fad ja ok also wir haben jetzt ein random

01:43:44.140 --> 01:43:50.820
generator für essen namen und irgendwie random text ok jetzt ist die große

01:43:50.820 --> 01:44:00.020
preisfrage wie mache ich ein get requests in go also wahrscheinlich ht tp

01:44:00.020 --> 01:44:08.140
ht tp get wie einfach so das wäre aber ganz schön easy

01:44:08.140 --> 01:44:24.220
ist halt so wäre das ist das nee das ist das alles

01:44:24.220 --> 01:44:33.660
jetzt war fmt prindlen ist halt nee nee das wird so einfach

01:44:33.660 --> 01:44:43.220
ach so er war lul er war teckel alter wer interessiert er aus

01:44:44.660 --> 01:44:47.900
access control

01:44:47.900 --> 01:45:04.740
was

01:45:04.740 --> 01:45:17.700
ach nee das sind die heller ich brauch so was wie body oder sowas ach guck mal

01:45:17.700 --> 01:45:44.140
hier body gut ok ja ja ich verstehe oder ok da muss ich jetzt mal gut da muss

01:45:44.140 --> 01:45:54.940
ich google das war ich nicht go ht tp get so ht tp get response ht tp response

01:45:54.940 --> 01:46:18.540
was ok da wäre ich im leben nicht drauf gekommen das das hätte ich nicht

01:46:18.540 --> 01:46:28.100
gecheckt ok dann ich nenne ich sp error

01:46:28.460 --> 01:46:32.420
warte mal wo kommt jetzt der body her

01:46:34.580 --> 01:46:39.580
das legt er hier an der mecker dass ich nicht verwende

01:46:39.580 --> 01:46:48.580
so kann ich kann ich jetzt ausgeben warte warte ich auch read string oder so vielleicht

01:46:48.580 --> 01:46:53.220
hier ne ne so einfach ist es nicht

01:46:59.980 --> 01:47:04.780
was einfach carsten oder was so

01:47:04.780 --> 01:47:14.780
woher weiß ich wann ich was carsten muss und wann nicht das ist ich weiß nicht das

01:47:14.780 --> 01:47:21.660
ist irgendwie erstes und nicht so weiß ich nicht so klar irgendwie im handling

01:47:29.660 --> 01:47:34.420
gibt es gibt es warum gibt es denn kein read string oder sowas ich meine das ist doch was

01:47:34.420 --> 01:47:41.460
man 99 prozent der zeit verwenden will ok also ich habe noch mal andere idee also

01:47:41.460 --> 01:47:46.780
sprich wir müssten das jetzt ja deserialisieren das jason was da

01:47:46.780 --> 01:47:59.380
zurückkommt so in welchem format kommt denn das jason da zurück random ist da

01:47:59.380 --> 01:48:04.700
nur mit carsten los jetzt frage ich mich auch vor dem habe ich ewig nichts mehr gehört

01:48:04.700 --> 01:48:08.380
also ich meine ich kenne das das video ja aber ich frage mich was der master

01:48:08.380 --> 01:48:11.220
kreiber so treibt

01:48:12.900 --> 01:48:16.740
moment man kriegt ein array zurück mit nur einem element das ist ja schon mal

01:48:16.740 --> 01:48:27.900
hardcore ppega wie ok ok also das heißt ich bräuchte jetzt noch einen neuen type

01:48:27.900 --> 01:48:37.620
das nenne ich dann mal irgendwie keine ahnung meal ap response oder so so und

01:48:37.620 --> 01:48:40.900
das ding hat eine image

01:48:41.980 --> 01:48:49.340
trümmel sam hat das trümmel am string

01:48:49.340 --> 01:49:00.700
so und das heißt ich kann das lesen dann mit ok moment jetzt jetzt muss ich mal

01:49:00.700 --> 01:49:04.660
gucken wie würde man das jetzt korrekt machen man sagt jetzt jason

01:49:04.660 --> 01:49:16.100
de ne ne was ist das gegenteil von marschall ent marschall an marschall an

01:49:16.100 --> 01:49:23.860
marschall ok alles klar ok body so

01:49:25.860 --> 01:49:31.460
und dann zu das muss ich mir das muss ich mir in dem in der anleitung noch mal

01:49:31.460 --> 01:49:38.260
angucken wie das wie das funktioniert hat ja noch irgendwie sondern

01:49:38.260 --> 01:49:44.900
die code sneakers

01:49:47.700 --> 01:49:52.180
und meist dort variable also quasi

01:49:52.180 --> 01:49:54.660
e

01:49:54.660 --> 01:50:08.360
Mir also quasi sowas hier oder was nur mal nur mal testweise so

01:50:08.360 --> 01:50:19.200
Moment und hier will er aber nicht body haben sondern er will er will was was will er denn

01:50:19.200 --> 01:50:29.300
haben beider also quasi das da jetzt sehe ich das richtig ja ist das so ne

01:50:40.600 --> 01:50:47.120
ach so ja das gibt ja noch ein error code so was das ist ja das ist ja eklig

01:50:47.120 --> 01:50:55.200
also sprich müsste ich irgendwie das muss auf jeden fall eine eigene funktion machen

01:50:55.200 --> 01:51:01.040
dass ist das ist zu viel auf einmal gut body close kann ich mir wahrscheinlich sparen read

01:51:01.040 --> 01:51:07.480
all kann ich mir auch sparen aber das ist doch insofern ist es doch komplett in ordnung

01:51:07.480 --> 01:51:18.160
wäre das doch komplett in ordnung also also hier keine ahnung bei jetzt so jetzt jetzt ist

01:51:18.160 --> 01:51:25.120
so was ist denn jetzt schon wieder das problem ach so weil ich den error code vergessen habe

01:51:25.120 --> 01:51:34.520
ok ok ich glaube mit go werde ich nicht so richtig warm so keckels aber mit einem und

01:51:34.520 --> 01:51:40.520
was was macht er denn wenn ich es ohne und mache das probieren wir jetzt mal aus so an marsch

01:51:40.520 --> 01:51:47.480
links und hier steht jetzt das result drinne oder wie also hier kann ich mir jetzt quasi

01:51:47.480 --> 01:52:04.760
ausgeben lassen ok das funktioniert nicht das funktioniert nicht ok warum

01:52:04.760 --> 01:52:19.720
kennst du nicht mit java gut aus nein irgendjemand klopft die warum das jetzt nicht funktioniert

01:52:19.720 --> 01:52:37.720
also ich habe keine ahnung das gibt einen array zurück du hast recht du hast recht das

01:52:37.720 --> 01:52:44.720
gibt einen array zurück also eigentlich will ich das ist ja eklig das heißt eigentlich

01:52:44.720 --> 01:52:56.240
will ich sowas haben wie

01:52:56.240 --> 01:53:15.320
sowas irgendwie so jetzt ein array ok feifert array syntax moment nicht verraten chat mil

01:53:15.320 --> 01:53:34.000
ap item so result ne ach du scheiße man wie ist die richtige sonntags type from jason

01:53:34.000 --> 01:53:43.640
sehr gute idee sehr gute idee das ist das tatsächlich gute idee das machen wir so pass

01:53:43.640 --> 01:53:58.520
mal auf pass passt mal auf beim generate go type from jason yes easy easy aber das will

01:53:58.520 --> 01:54:14.480
ich ja alles gar nicht haben type t struck moment was zum was macht er da alles moment

01:54:14.480 --> 01:54:19.000
wo ist wo ist mein image das will ich ja alles gar nicht ich will einfach nur einfach nur

01:54:19.000 --> 01:54:41.040
das image das thumbnail haben ok das ist das ist jetzt für mich zu high IQ wie was macht

01:54:41.040 --> 01:54:53.760
das ding da überhaupt was ist das was ich hier sehe type t struck meals dings ist das

01:54:53.760 --> 01:55:05.080
irgendwie so nested nested typ definition oder sowas aber richtig lost ja oder ist das

01:55:05.080 --> 01:55:12.800
irgendwie generic oder was ist was ist das was sagt uns das t an der stelle t ist quasi

01:55:12.800 --> 01:55:42.040
so der root type oder monkaS also so müsste ich das nee achso das habe ich schon mal achso

01:55:42.040 --> 01:55:48.480
alles klar jetzt bin das jetzt funktioniert ob das tut ich habe da so meine zweifel ok

01:55:48.480 --> 01:56:06.360
also null nee ach nee moment nicht so hier meals null so jetzt bin ich immer gespannt

01:56:06.360 --> 01:56:14.120
ob das klappt ey hey easy ok wenn man weiß wie es geht dann ist das durchaus durchaus

01:56:14.120 --> 01:56:23.680
brauchbar es ist durchaus das ist ok das ist ok ok also sag ich nicht wie ich kann

01:56:23.680 --> 01:56:36.800
fetsch fetsch ach ja go schreibweise so oder oder oder so wie macht man functions fetsch

01:56:36.800 --> 01:56:51.640
im images so wunderbar so ok ja dann kopieren wir das hier mal rein so das da wie macht

01:56:51.640 --> 01:56:55.640
man return werte wir sind wahrscheinlich nicht in rust also ist es wahrscheinlich ist es

01:56:55.640 --> 01:57:11.560
nicht ist es nicht sowas sondern es einfach nur wahrscheinlich so eigentlich einfach

01:57:11.560 --> 01:57:25.600
nur so error handling keckel braucht man nicht ok also ja hat das hat das auto vorschläge

01:57:25.600 --> 01:57:36.640
für variablen nee doch gut naja eigentlich was fürs api respawn ja tja wie nennt man

01:57:36.640 --> 01:57:51.240
das jetzt eigentlich wie könnte man das nennen so api respawn ja response haben wir ja schon

01:57:51.240 --> 01:57:59.120
hier deswegen passt das irgendwie nicht so ist in ordnung kann man mit so kann man das

01:57:59.120 --> 01:58:04.200
jetzt noch irgendwie schöner schreiben also sprich braucht man braucht man diese dinger

01:58:04.200 --> 01:58:12.440
braucht man diese drei oder gibt es irgendwie eine abkürzung in in was weiß ich so in in

01:58:12.440 --> 01:58:20.560
dieser form oder so wahrscheinlich nicht jetzt echt größter struggle wie man das benennt

01:58:20.560 --> 01:58:37.840
moment hier würde man aber war api root mit was

01:58:37.840 --> 01:58:53.760
also nur dass ich das jetzt richtig verstehe das war mir im vorfeld auch schon klar also

01:58:53.760 --> 01:59:01.200
es gibt gleich es gibt doppelpunkt gleich und es gibt wahr doppelpunkt gleich ist variablen

01:59:01.200 --> 01:59:07.160
anlegen und gleich was reinschreiben gleich ist wenn es die variablen schon gibt was reinschreiben

01:59:07.160 --> 01:59:21.920
und wahr ist alles mit null initialisiert anlegen braucht man da drei verschiedene sachen warum

01:59:21.920 --> 01:59:29.160
nicht immer so ich mein warum gibt es was ist eigentlich die daseinsberechtigung davon

01:59:29.160 --> 01:59:39.160
warum nicht einfach sowas das könnte man direkt lesen das geht doch bestimmt auch oder

01:59:39.160 --> 01:59:51.880
ja das geht doch genauso kürzer naja aber das ist doch also wenn man doch sowas einführt

01:59:51.880 --> 02:00:03.120
aber nachdem das auch geht na das da kann man sich jetzt aber echt drüber streiten

02:00:03.120 --> 02:00:13.640
aber ok mein go stellt einetwegen so ich glaube das kann man eigentlich alles untereinander

02:00:13.640 --> 02:00:27.040
schreiben alles klar so jetzt kriegen wir hier die adresse für das bild das ist drin

02:00:27.040 --> 02:00:31.360
weil es sonst keine streitpunkte gebe ja das muss man sagen gewisserweise hat es ja schon

02:00:31.360 --> 02:00:37.240
was wahres was wahres dran an dem was du sagst ich mein die haben standardmäßig drinne

02:00:37.240 --> 02:00:41.120
wieder text formatiert wird die entstanden standardmäßig drinne wie die einrückung

02:00:41.120 --> 02:00:44.240
sein muss die am standard mich drinnen in welcher reinfolge die import sein müssen

02:00:44.240 --> 02:00:55.800
und sowas das ist schon recht einheitlich das hat auch seine vorteile ja ok so und jetzt

02:00:55.800 --> 02:01:00.560
müssen wir den kram speichern wir brauchen mal ein bild bild wir brauchen ordner für

02:01:00.560 --> 02:01:19.200
bilder images moment aber nicht aber nicht dort sondern unterhalb von ww root images

02:01:19.200 --> 02:01:27.040
ok und jetzt muss ich das downloaden also sprich das hier also sprich mir ok ok ok das heißt

02:01:27.040 --> 02:01:38.640
wir machen noch mal wir sagen noch mal get allerdings jetzt getten wir das da ne moment

02:01:38.640 --> 02:01:52.360
schwarze schwarze das da getten wir das getten wir massive get ja das müssen wir den kram

02:01:52.360 --> 02:02:08.240
wirklich anders sehen denn ap res res dann ist das hier kanon image res punkt gleich

02:02:08.240 --> 02:02:14.760
so und jetzt ok jetzt kommt der nächste jetzt wie würde ich das in einem feil speichern

02:02:14.760 --> 02:02:27.040
also ich würde mal vermuten man macht i o reads body und dann macht man sowas wie feil

02:02:27.040 --> 02:02:41.600
ne feil fs fs feil klingt gut ne aber es könnte durchaus ein read read string geben

02:02:41.600 --> 02:03:06.280
fs feil ne fs feil read ok golang fs feil was anders macht golang write files writing

02:03:06.280 --> 02:03:19.880
files os write file ok der chat sagt i o util write file oder os feil warum gibt es da zwei

02:03:19.880 --> 02:03:40.520
verschiedene varianten i o util ach das kümmert sich auch ums closen ok write file ok also

02:03:40.520 --> 02:03:56.960
heißt im endeffekt ich will nach punkt slash ww root images so und jetzt braucht jetzt

02:03:56.960 --> 02:04:12.920
braucht das image irgendein irgendeine gut oder so golang gut was haben wir da gibt

02:04:12.920 --> 02:04:36.560
es aber etwas eingebautes i o utils ist nicht so gerne gesehen weil warum nicht

02:04:36.560 --> 02:04:50.640
warum ist es nicht gerne gesehen macht auch einen sinnvollen eindruck aber bei random reicht

02:04:50.640 --> 02:05:12.920
ja auch random wobei ja s of go ok moment s of go 1.16 ok das ist noch nicht so alt

02:05:12.920 --> 02:05:34.200
same functionality is now provided by package i o or package os ok also also os write file

02:05:34.200 --> 02:06:02.440
oder wie oder i o write file naja gut macht ja macht ja keinen wirklichen unterschied da

02:06:02.440 --> 02:06:11.240
nehmen wir halt nehmen wir halt os os write files ok normalerweise was anderes wie sah

02:06:11.240 --> 02:06:18.800
hier noch mal die response von aus nil api das ist auch schon unic hintendran oder da

02:06:18.800 --> 02:06:26.760
müssen wir auch doch wir machen das generate gut go muss man kurz klima anmachen viel zu

02:06:26.760 --> 02:06:42.680
arm hier haben wir denn kenne ich nicht aber 27 grad oder so ok google good ops was jetzt

02:06:42.680 --> 02:07:03.760
zink nicht sort alter zink zink id new ja ok alles klar ich hoffe dass er passt irgendwie

02:07:03.760 --> 02:07:12.760
ist irgendwie sinnig was man was wir jetzt hier machen all die so und jetzt sagen wir

02:07:12.760 --> 02:07:24.880
os os und wie war das right feil ok also das heißt wir brauchen so was hier plus wie sind

02:07:24.880 --> 02:07:34.920
template strings in in go gibt es da so was sowas in der richtung gibt es gibt es da so

02:07:34.920 --> 02:07:57.560
was go lang template strings was die oder das denen meint es das muss irgendwie einfachere

02:07:57.560 --> 02:08:19.960
einfacher gehen

02:08:19.960 --> 02:08:34.600
ja sowas genau moment moment nur durch dass es richtig verstehe string formatierung ist

02:08:34.600 --> 02:08:46.240
in go noch schlimmer als in c++ kann doch gar nicht sein es kann eigentlich nix schlimmer

02:08:46.240 --> 02:08:52.120
sein als in c++ gut in c++ ist es auch nur nicht so schlimm weil die sich das von python

02:08:52.120 --> 02:09:16.920
abgeguckt haben muss man das wirklich so machen ich meine ich könnte doch bestimmt auch so

02:09:16.920 --> 02:09:40.760
machen oder das geht auch nicht und was will er was will er sonst noch haben data ich bin

02:09:40.760 --> 02:09:50.680
verwirrt sekunde warte mal image image response ja das ist das ist doof dass man das nicht

02:09:50.680 --> 02:09:55.920
inline schreiben kann jetzt müsste ich jetzt bräuchte ich zweimal bites ja jetzt bräuchte

02:09:55.920 --> 02:10:00.040
ich zweimal müsste ich jetzt bräuchte ich zweimal so und einmal so das ist doch bestimmt

02:10:00.040 --> 02:10:17.360
verpönt in go oder sowas doppelt zu benutzen an variablen

02:10:17.360 --> 02:10:33.700
ist es jetzt ein string string so ok so bei jetzt

02:10:33.700 --> 02:10:42.000
und was will er jetzt was hat er jetzt noch für schmerzen permission file mode will er

02:10:42.000 --> 02:10:48.520
was will er da haben unix permissions oder so also irgendwie sowas was ich 600 oder oder

02:10:48.520 --> 02:10:57.720
so oder schau mal hier zeig mal hier also ja super example alles klar ok ja dann ja

02:10:57.720 --> 02:11:08.400
sollen wir recht sein ganz ehrlich reicht mir so ok das ist aber müll wie das formatiert

02:11:08.400 --> 02:11:21.240
ist also wie musste man das jetzt richtig von der s print f ne s ne fmt s print f format

02:11:21.240 --> 02:11:38.560
string ok prozent s hoffe ich mache das richtig so chat ergibt das sinn passt das so ist das

02:11:38.560 --> 02:11:53.440
richtig ok also read ich habe es ich habe das doch schon geredet ok und jetzt gibt es

02:11:53.440 --> 02:12:00.960
den fad ne moment ich muss das tatsächlich außerhalb außerhalb machen pass

02:12:00.960 --> 02:12:20.840
so ok alles gut und dann geben wir den fad zurück weil hier müssen wir die datenbank

02:12:20.840 --> 02:12:28.360
schreiben dass wir wissen was sache ist wo fehlen klammern da fehlt der klammern ok

02:12:28.360 --> 02:12:35.680
wunderbar so also wir lesen sachen ein random laden das bild runter speichern das bild im

02:12:35.680 --> 02:12:41.200
images folder wir machen leute wir machen mal nur wir machen mal nur fünf das reicht

02:12:41.200 --> 02:12:55.640
erst mal ok so db create sparen wir uns auch sondern machen einfach nur fünf mal muss

02:12:55.640 --> 02:13:06.760
ich das doch auch aus kommentieren mal einfach nur fetsch images prindeln moment warum gibt

02:13:06.760 --> 02:13:18.200
es print line und und fmt print line ok so jetzt sollten wir fünf images bekommen wenn

02:13:18.200 --> 02:13:27.920
das funktioniert was ich da gemacht habe vier images geht leute das funktioniert einfach

02:13:27.920 --> 02:13:39.520
da guckt vier images pepo pepo fett images easy so und jetzt schreiben wir das jetzt schreiben

02:13:39.520 --> 02:13:48.520
wir das in die datenbank jetzt schreiben wir das in die datenbank also fetsch images ne

02:13:48.520 --> 02:13:53.720
wobei fetsch image ist eigentlich falsch ist aus fetsch image muss das heißen so fetsch

02:13:53.720 --> 02:14:10.760
image uuid fetsch image so image world ist jetzt so wieso fakes du denn die daten eigentlich

02:14:10.760 --> 02:14:18.960
weil ich zuerst gefaked habe bevor ich die api abgefragt habe ich hab die api erst später

02:14:18.960 --> 02:14:24.840
gefunden für die bilder aber ich will das ja auch nicht eins zu eins aus der api übernehmen

02:14:24.840 --> 02:14:30.680
und bei mir die datenbank schreiben oder so wann wozu ich will da gar nicht so viel den

02:14:30.680 --> 02:14:40.400
da jetzt request schicken sonst muss ich am ende noch ein api key holen und ab dabei so

02:14:40.400 --> 02:14:45.480
wir kriegen jetzt eine datenbank mit mit vier bildern mit vier mit vier einträgen schauen

02:14:45.480 --> 02:14:55.160
wir mal ob das ob das muss ich noch safe oder sowas machen gorm muss man das muss man noch

02:14:55.160 --> 02:15:22.200
speichern create muss ich noch sowas machen wie db safe einfach nur safe was

02:15:22.200 --> 02:15:30.640
oder speichert er das oder speichert er das von alleine wenn ich da nicht safe safe callen

02:15:30.640 --> 02:15:38.240
ok probieren wir mal kriegen wir jetzt eine datenbank alles klar schauen wir mal sqlite

02:15:38.240 --> 02:15:56.080
browser food db warum genau hat er da so viele einträge ach so weil ich es vorher schon ein

02:15:56.080 --> 02:16:08.160
paar mal habe laufen lassen und da unten sind die neue vier neue pepo fat food einträge

02:16:08.160 --> 02:16:18.240
ok das ist nicht in memory man könnte in memory machen aber wir machen nicht in memory weil

02:16:18.240 --> 02:16:22.880
dann wird bei jedem start wir machen das nicht in memory da wird bei jedem start diese food

02:16:22.880 --> 02:16:28.840
api abgefragt und dann brauche ich irgendwann noch ein api key wir löschen die datenbank

02:16:28.840 --> 02:16:38.800
mal und lassen da jetzt 100 100 100 sachen anlegen und fertig und gut ist ich überlege

02:16:38.800 --> 02:16:44.600
gerade noch ist es sinnvoll was ist denn das beste format zum zurückgeben an in the web

02:16:44.600 --> 02:16:53.440
api ohne punkt da vorne eigentlich eigentlich einfach nur so und das sollte er ja auch checken

02:16:53.440 --> 02:17:06.640
wenn wir hier sind ok also go run machen wir mal machen wir mal eine anzeige wie weit wir

02:17:06.640 --> 02:17:15.280
sind 100 lieber den leading slash ok wenn ich den leading slash hier mache dann muss

02:17:15.280 --> 02:17:20.720
ich auf jeden fall noch ein punkt hier davor machen weil ansonsten schreibt er das nach

02:17:20.720 --> 02:17:30.160
slash beruht was es nicht gibt bei mir ist jetzt zwar ein bisschen eklig zu lesen aber

02:17:30.160 --> 02:17:51.040
ok alles klar x fatal für den sub also ran denn wir machen noch mal kurz fmt brindlen

02:17:51.040 --> 02:18:00.760
was ok ich muss an diese format sonntags geben creating food item und jetzt prozent ok lasst

02:18:00.760 --> 02:18:25.160
mich raten prozent d wie in c oder ist es prozent e das ist wahrscheinlich prozent e

02:18:25.160 --> 02:18:31.080
das ist ein prozent v ne prozent v ist doch bestimmt in den blödsinn chat ja jebaitet

02:18:31.080 --> 02:18:47.720
mich fmt print f au ist value ach ich mach das ja auch hier falsch es ist ja auch print

02:18:47.720 --> 02:19:02.120
f ok print effeln gibt es nicht verstehe kein print effeln so ok lassen lassen wir den

02:19:02.120 --> 02:19:18.120
mal ran 100 100 items creating food item flup flup flup flup flup flup flup flup nice sqlite

02:19:18.120 --> 02:19:25.400
explorer was haben wir hier zeigt her wunderbar übrigens ich bin total bescheuert ich muss

02:19:25.400 --> 02:19:34.120
es noch mal löschen ww root an das frontend zu liefern ist relativ bescheuert mein frontend

02:19:34.120 --> 02:19:43.280
muss images sein und nicht ww root wtb nochmal weg fällt mir gerade ein ist eigentlich total

02:19:43.280 --> 02:19:55.280
hängen geblieben so muss das sein so also das da das da muss eigentlich davor ansonsten

02:19:55.280 --> 02:20:15.480
klappt das nicht gibt es was wie pass kombin ne pass ne warte warte ne go pass kombin

02:20:15.480 --> 02:20:25.800
ich darf das hier nicht ich darf das hier nicht nicht pass nenn ich es fs pass oder

02:20:25.800 --> 02:20:36.920
so das kann ich pass join pass join ist es das dann nämlich viel besser in dem fall ist

02:20:36.920 --> 02:20:46.040
es ist wurscht aber so viel besser so f ww root images muss ich auch noch mal alle löschen

02:20:46.040 --> 02:21:03.520
sich toll alle weg please 103 files flup return fs pass alles klar es ist nicht wirklich fs

02:21:03.520 --> 02:21:17.200
pass das ist total bescheuert pass ne db pass image pass egal wenn das ist go land ich

02:21:17.200 --> 02:21:23.280
habe dieses jet brains all desktop package deswegen verwende ich den ganzen fern ich

02:21:23.280 --> 02:21:27.760
dann auch immer jet brain sachen wenn die was haben zumal die meistens auch was taugen

02:21:27.760 --> 02:21:33.600
ok jetzt aber ich hoffe die blocken uns jetzt nicht beim api zugriff creating food item

02:21:33.600 --> 02:21:51.680
sehr schön gut food item created browse data sehr schön guckte mal guckte mal da massive

02:21:51.680 --> 02:22:03.240
100 100 food items spicy chicken soup with hint of lemon grass and coconut milk und dann

02:22:03.240 --> 02:22:12.200
sinnloser random text ja die erhöhen den preis aber ich habe zum glück relativ lange laufzeit

02:22:12.200 --> 02:22:18.120
noch aber ja es wird teurer leider gut also function fedge image das funktioniert so weit

02:22:18.120 --> 02:22:25.920
passt gut also chat wir haben eine datenbank und jetzt brauche ich einen command line switch

02:22:25.920 --> 02:22:32.840
gibt so was wie args oder sowas ich möchte das hier nicht jedes mal bei jedem start machen

02:22:32.840 --> 02:22:37.480
ich möchte das eigentlich nur machen wenn ich einen speziellen command line switch angegeben

02:22:37.480 --> 02:23:06.520
hab so minus minus sieht oder sowas go lang args command line args command line flex what

02:23:06.520 --> 02:23:24.080
ist es mit so high iq flex string word for string also im prinzip eigentlich nur sowas

02:23:24.080 --> 02:23:35.800
hier oder also also quasi sieht die fall value ist das hier wahrscheinlich falls usage was

02:23:35.800 --> 02:24:05.200
ich sieht data data base and image directory sowas pointer ist sie mode ok if und dann machen

02:24:05.200 --> 02:24:22.080
wir diesen kram nämlich nur ok das funktioniert nicht das ist ein pointer warum ist das ein

02:24:22.080 --> 02:24:31.400
pointer blackpool ja also du musst nicht nicht nur so krass backseiten ich muss mir das erst

02:24:31.400 --> 02:24:38.200
mal selbst überlegen und wenn ich da nicht draufkomme dann frage ich schon ist sie ist

02:24:38.200 --> 02:24:46.480
das ein pointer warum ist das wo ist der sinn davon dass das ein pointer ist ach so das

02:24:46.480 --> 02:24:53.120
ist ja ein objekt wo noch mehrere sachen drin steht aber trotzdem ok das passt ich hätte

02:24:53.120 --> 02:25:02.320
eher gesagt dass man irgendwie sagen muss ist sieht mode und ks alda objekte hat das

02:25:02.320 --> 02:25:08.880
nicht ich hinterfragt es jetzt einfach mal gar nicht ich nehme das einfach so zur kenntnis

02:25:08.880 --> 02:25:18.800
dass das so funktioniert weil wenn ich das jetzt ausführe dann macht er nichts genau

02:25:18.800 --> 02:25:23.360
so und wenn ich das siedeln will dann würde ich jetzt nämlich alles löschen nochmal also

02:25:23.360 --> 02:25:39.720
sprich wir sagen wir sagen os remove os remove all ww root slash images remove denn an den

02:25:39.720 --> 02:25:46.720
verzei remove der das verzeichnis oder nur das was drinne ist der rufe der macht das

02:25:46.720 --> 02:25:52.360
ganze verzeichnis wahrscheinlich weg also muss ich sagen wie create muss ich dann wahrscheinlich

02:25:52.360 --> 02:26:18.000
noch mal sagen moment create directory directory mk dir

02:26:18.000 --> 02:26:34.080
ok das könnte sein dass das alles dass ich das alles mal wegschmeißen will aber noch

02:26:34.080 --> 02:26:55.120
ein bisschen mehr so jetzt würde er wahrscheinlich alles wegschmeißen an bildern wird die datenbank

02:26:55.120 --> 02:27:03.160
löschen wird die datenbank neu anlegen ja das sollte funktionen das ist aber auch ok

02:27:03.160 --> 02:27:09.480
das passt jetzt haben wir eine datenbank mit ganz vielen mit ganz mit ganz viel food drinne

02:27:09.480 --> 02:27:13.680
jetzt können wir uns mal der web anwendung wieder widmen also wir haben eine datenbank

02:27:13.680 --> 02:27:37.400
achso hier muss ich dann vielleicht noch so wie return aufhören alles klar so wie hier

02:27:37.400 --> 02:27:43.960
kriegen wir unser statisches unser statisches zeugs die filen die bilder und hier kriegen

02:27:43.960 --> 02:27:49.560
wir ein random food aus der datenbank das heißt im endeffekt hier muss ich jetzt einmal

02:27:49.560 --> 02:27:55.600
aus der datenbank random was auslesen wie lese ich random am besten aus der datenbank

02:27:55.600 --> 02:28:11.840
was aus random also ich lese ich lese quasi ich gucke wie viel einträge sind achso wie

02:28:11.840 --> 02:28:19.680
sieht das eigentlich aus haben die einen ordentlich durchnummerierten primary key nee achscheiße

02:28:19.680 --> 02:28:30.040
nee doch da haben sie die haben eine id ich hoffe das ist eine id ist das eine id oder

02:28:30.040 --> 02:28:41.640
ist das nee das ist einfach nur die einträge wie sieht das aus ich habe nicht wirklich

02:28:41.640 --> 02:28:50.040
eine ahnung von datenbank aber was aber den primary key brauchst du doch was davon ist

02:28:50.040 --> 02:29:00.560
denn jetzt der primary key name oh das ist eine gute idee zarex du hast recht ja das

02:29:00.560 --> 02:29:15.360
machen wir besser so du hast du hast recht kurze mal im moment du hast recht aber es

02:29:15.360 --> 02:29:22.600
braucht irgendwas muss doch der primary key sein oder aber das hier oben hin jetzt sagen

02:29:22.600 --> 02:29:31.160
wir db kann ich eine datenbank droppen nachdem ich sie geopent habe ja ich muss hier erst

02:29:31.160 --> 02:29:40.200
open auch openen dass ich sie droppen kann also würde ich dann quasi sagen die b nicht

02:29:40.200 --> 02:29:56.440
dp dp dp drop nee was machst du was sagst du migrator drop table und food ok das ist

02:29:56.440 --> 02:30:09.880
feifettig das ist das ist massive feifett gorm model ah das ist gut das ist gut zu wissen

02:30:09.880 --> 02:30:13.280
dann will ich das haben dann dann will ich das haben was heißt das brauchen wir hier

02:30:13.280 --> 02:30:18.520
gar nicht dann will ich das haben also sprich ich müsste das jetzt quasi erben oder was

02:30:18.520 --> 02:30:30.700
also sprich gorm nee ok jetzt wird es advanced gorm model es hat eine row id das würde das

02:30:30.700 --> 02:30:58.680
würde auch gorm id created ad aber sowas in gorm nee wie erbt man was in in in go geht

02:30:58.680 --> 02:31:09.760
das überhaupt oder was heißt er oder sagen dass er das als interface also oder das interface

02:31:09.760 --> 02:31:29.840
implementieren davon ok go lang implement interface

02:31:29.840 --> 02:31:51.840
gorm models type user struct

02:31:51.840 --> 02:32:20.760
also ich haue das einfach nur hier rein

02:32:20.760 --> 02:32:29.440
und dann macht er das alles für mich oder wie ok da muss ich mich jetzt dran gewöhnen

02:32:29.440 --> 02:32:33.920
das ist wirklich mal komplett anders wie sagen wir jetzt die scharpe oder so weil internet

02:32:33.920 --> 02:32:37.280
wäre das relativ easy gewesen da hätte ich hier irgendwie sowas gemacht wie doppelpunkt

02:32:37.280 --> 02:32:42.720
was weiß ich base model und dann hätte ich control alt gedrückt hätte gesagt implement

02:32:42.720 --> 02:32:49.760
interface oder implement missing oder oder oder i base model oder was auch immer ok verstehe

02:32:49.760 --> 02:32:55.860
alles klar das ist nicht schlecht das ist nice gut zu wissen da können wir auch gleich

02:32:55.860 --> 02:33:02.440
checken comment können wir auch gleich checken ob unsere sieht function ordentlich funktioniert

02:33:02.440 --> 02:33:09.080
also nochmal kurz durchgehen ob das sinnvoll ist also ich entferne erstmal alle images

02:33:09.080 --> 02:33:16.600
aus www root images und dann lege ich das verzeichnis neu an dann drop ich die table

02:33:16.600 --> 02:33:28.200
dann lege ich das alles neu an und dann ok also sprich minus minus wahrscheinlich muss

02:33:28.200 --> 02:33:51.480
man so machen minus minus sieht ok aber warum erkennt er mein parameter nicht

02:33:51.480 --> 02:34:06.400
reicht ja aber das müsste beides funktionieren oder ja dann sind wir sind mal so frei und

02:34:06.400 --> 02:34:21.320
machen fmt prinden ist sieht mode was er dann sagt moment moment falls trotsch systems

02:34:21.320 --> 02:34:36.080
ok warte mal go lang flex bool bool flex bool oder pass habe ich auch falls ah gucke mal

02:34:36.080 --> 02:34:53.240
da also einfach so aha ja ja gut ok ok alles klar muss man wissen ergibt ergibt irgendwo

02:34:53.240 --> 02:35:03.400
auch sinn wenn man es weiß sieht creating food item er hat die alten items gelöscht

02:35:03.400 --> 02:35:10.080
und legt jetzt die neuen items an hoffe ich dass er das macht hoffe ich dass er das macht

02:35:10.080 --> 02:35:35.560
images ist leer wie genau kann images leer sein

02:35:35.560 --> 02:35:53.320
ey das wäre ich glaube nicht dass ich im ap rate limit bin ich meine wir können ja

02:35:53.320 --> 02:36:01.240
mal hier ein bisschen ein bisschen debug ausgabe machen part stimmt nicht beim schreiben ja

02:36:01.240 --> 02:36:21.800
aber warum freund hat er auch gestimmt ww root images ich will es jetzt nicht noch ich will

02:36:21.800 --> 02:36:43.280
es jetzt nicht noch noch öfters ausführen weil sonst lande ich wirklich im

02:36:43.280 --> 02:36:53.960
es ist eigentlich komplett richtig was der macht chat warum macht er denn so komische

02:36:53.960 --> 02:37:08.360
dinge es ist nicht da soll ich mal das da weglassen wobei das ja eigentlich nichts damit

02:37:08.360 --> 02:37:30.520
zu tun haben denn das kommt ja später

02:37:30.520 --> 02:37:57.320
da der art der der htp requester wird schon funktionieren oder

02:37:57.320 --> 02:38:15.520
ja warum sollte ich auch 100 machen ich stelle mal auf 2 runter das reicht ja auch

02:38:15.520 --> 02:38:41.400
weil zumindest anlegen müsste das ok wir müssen jetzt doch mal wir müssen jetzt doch

02:38:41.400 --> 02:38:54.440
mal er auschecken was er was er für schmerzen hat

02:38:54.440 --> 02:39:15.280
ich meine von der idee müsste es ja funktionieren ww root images

02:39:15.280 --> 02:39:25.200
macht er das denn ok vorher vorher hatte ich ja so stehen zwar zwar nicht schön aber

02:39:25.200 --> 02:39:48.920
hat funktioniert was unter bild so egal also ich vermute tatsächlich jetzt auch vielleicht

02:39:48.920 --> 02:39:57.880
haben wir echt api api rate limit oder so also wo haben wir denn die jason response

02:39:57.880 --> 02:40:12.160
hier api root also das das hier scheint ja zu mal rückgängig das hier scheint wir

02:40:12.160 --> 02:40:21.160
müssen jetzt wirklich die bank glaube ich was zum hä ich hatte das doch vorhin so

02:40:21.160 --> 02:40:32.120
der springt dann gleich eins runter geht das ist pepega also wir setzen mal wie setzt

02:40:32.120 --> 02:40:46.600
man hier breakpoint so ok also wir gucken mal rein an der stelle was add configuration

02:40:46.600 --> 02:41:04.000
was hat er jetzt für schmerzen excellent alles klar go build

02:41:04.000 --> 02:41:26.000
einfach so ja

02:41:26.000 --> 02:41:44.200
so ja der geht ja da gar nicht rein moment ja not ok ok so jetzt ist die baga time angesagt

02:41:44.200 --> 02:41:58.280
also was was ist denn jetzt was juju id ist alles klar das funktioniert

02:41:58.280 --> 02:42:08.400
bites funktioniert auch das funktioniert das da ist das der macht da wirklich was

02:42:08.400 --> 02:42:16.360
der müsste das anlegen und da schreibt auch was also leute bin ich im falschen verzeichnis

02:42:16.360 --> 02:42:29.000
einfach nur jetzt blick ich aber echt nicht mehr durch warum wo ist denn jetzt das problem

02:42:29.000 --> 02:42:47.160
juju id passt auch ich meine das hier ist ja das wichtig das in bites was drinne steht

02:42:47.160 --> 02:42:54.480
also dating dating das ist das ist das ist dieses image image data das hat wohl funktioniert

02:42:54.480 --> 02:43:00.280
an der stelle moment hä das muss doch was ganz offensichtliches sein dass ich ins falsche

02:43:00.280 --> 02:43:05.680
verzeichnis schreibe oder so ich ist total hängen geblieben oder was ist denn hier los

02:43:05.680 --> 02:43:25.320
os write files ok wir machen das mal anders home max wo sind wir denn hier wir machen

02:43:25.320 --> 02:43:30.120
das wir machen das ja so dass er das gar nicht falsch schreiben kann so home max p

02:43:30.120 --> 02:43:42.400
profet ww root slash so und dann images images und anders image hinten dran so ran

02:43:42.400 --> 02:44:01.840
was ist das was so wie geht das in go so nee so

02:44:01.840 --> 02:44:16.600
was doppelt slash wo ist doppelt slash was denn deswegen benutzt ja pass join dass er

02:44:16.600 --> 02:44:23.080
das dass er das weg macht das sollte pass join ja schon checken dass es doppelt ist

02:44:23.080 --> 02:44:31.280
so also fmt prindeln error falls wenn er haben geht das so macht man das so weiß nicht

02:44:31.280 --> 02:44:47.360
ich weiß woran es liegt ich weiß woran es liegt guckt mal ich kann es euch sagen weil

02:44:47.360 --> 02:44:52.680
es 600 das ist klar 600 permissions ist ja auch für ein ordner falsch ordner müssen

02:44:52.680 --> 02:45:02.640
700 permission haben sonst funktioniert nicht wo wo leg ich den ordner noch mal an hier

02:45:02.640 --> 02:45:10.200
hier mk dir da 700 muss das sein ordner brauchen immer execute rechte ohne execute rechte kannst

02:45:10.200 --> 02:45:20.280
du in ordner nicht rein da wäre ich ja nie drauf gekommen jetzt heckl alter da ist es

02:45:20.280 --> 02:45:33.640
ok passt meine güte das war jetzt das war jetzt schwere geburt so jetzt kann er wieder

02:45:33.640 --> 02:45:43.760
ignorern alles gut er hat er hat sein ziel erfüllt ja ist so du musst du musst ja genau

02:45:43.760 --> 02:45:53.120
funktioniert guckt ja du musst 70 du musst execute machen auf der also der user oder

02:45:53.120 --> 02:46:04.400
die gruppe braucht execute rechte dass man in ordner rein kann ja er hat check wieder

02:46:04.400 --> 02:46:12.680
weg ok fest das war jetzt wirklich schwer schwere geburt wir können übrigens noch was

02:46:12.680 --> 02:46:17.880
machen man könnte man sich lieber nach wieder aus wie machen wir das guck mal wir machen

02:46:17.880 --> 02:46:33.400
ich buhl wir machen ein int default value ist 100 so und und was ist denn das jetzt

02:46:33.400 --> 02:46:47.840
muss ich jetzt sowas hier machen wie ist wait a minute wenn das jetzt ein optionales flag

02:46:47.840 --> 02:46:54.480
ist wobei need and flag and flag kann doch gar kein int sein oder sonst wäre es ja kein

02:46:54.480 --> 02:47:15.000
flag go lang flags int geht das geht tatsächlich flag int aber wie lese ich denn jetzt aus

02:47:15.000 --> 02:47:31.040
ob das überhaupt gesetzt ist

02:47:31.040 --> 02:47:36.120
das meine ich ja das ist kein flag das ist dann eher so eine option quasi das das das

02:47:36.120 --> 02:47:46.680
meine ich nehmen also eigentlich müsste ich da zwei sachen draus machen doch du hast verpasst

02:47:46.680 --> 02:47:51.160
dass wir jetzt die datenbank und datenbank gefüllt haben und bilder drin haben ja weil

02:47:51.160 --> 02:47:56.720
jetzt ist die fall value 100 aber ich will ja nur ich will ich will es ja angeben können

02:47:56.720 --> 02:48:25.880
oder nicht oder muss ich quasi dann sowas machen wie minus minus eins und dann checken

02:48:25.880 --> 02:48:35.480
ob es ob es ob es nicht minus eins ist aber ich will es ja haben also sprich wenn ich

02:48:35.480 --> 02:48:40.920
es angebe wenn ich das angebe dann will ich ja dass es default 100 weißt du was ich bleib

02:48:40.920 --> 02:48:51.920
ich bleib bei buhl fertig aus äh die erste sprache ich hab relativ also ich hab mal vor

02:48:51.920 --> 02:48:55.760
uhr uhr uhrzeit mal zehn bisschen gemacht aber da habe ich nichts mit anfangen können

02:48:55.760 --> 02:49:00.160
das war aber ist ja auch keine gute einsteiger sprache und dann habe ich irgendwann mal mit

02:49:00.160 --> 02:49:05.760
dotnet angefangen 2002 oder sowas einfach weil ich irgendwie weil es mich interessiert

02:49:05.760 --> 02:49:11.800
hat und mich interessiert es bis heute noch mehr neue sachen anzugucken sonst würde ich

02:49:11.800 --> 02:49:17.240
mir jetzt nicht irgendwelche go sachen geben ok also wir füllen jetzt die datenbank mal

02:49:17.240 --> 02:49:31.000
ok stack overflow sagt flack command line look up actuals ok das ist das ist hochgradig

02:49:31.000 --> 02:49:55.200
kryptisch also was flack command line command line look up ja aber stack overflow wenn

02:49:55.200 --> 02:50:00.680
es stack overflow schreibt dann muss es richtig sein stack overflow liegt nie falsch genauso

02:50:00.680 --> 02:50:13.320
wenig wie der twitch chat flack visit wait das ist noch was anderes

02:50:30.680 --> 02:50:36.520
was zum das das ist das ist dass das hier finde ich tatsächlich die schönere variante

02:50:36.520 --> 02:50:46.800
was was er schreibt also ok dann machen dann probieren was noch mal ist ist sieht mode

02:50:46.800 --> 02:50:55.120
oder ist ist ja blöd ja sieht man äh int default value ist 100 und jetzt will ich checken

02:50:55.120 --> 02:51:09.560
if also quasi das da if kommt da rein ok alles gut nachdem ich returne kann ich mit dem rest

02:51:09.560 --> 02:51:38.360
sparen look up so so so wahrscheinlich so und dann

02:51:38.360 --> 02:51:57.680
ist hier ah ne erst mal die die die referenzen wir machen mal zwei ob das funktioniert zwei

02:51:57.680 --> 02:52:03.600
jetzt mal eine doofe frage warum muss ich denn da jetzt überhaupt was angeben wenn

02:52:03.600 --> 02:52:09.040
ich doch in die fall value gesetzt habe ich wollte es eigentlich so machen dass ich dass

02:52:09.040 --> 02:52:13.200
ich entweder so angeben kann er macht 100 oder ich gebe so an und dann macht das muss

02:52:13.200 --> 02:52:26.920
ich mit zwei flex machen wahrscheinlich kommt er sagt er sagt die fall zwei aber wenn ich

02:52:26.920 --> 02:52:34.120
nix angebe mag er es nicht die logik verstehe ich nicht was das sinn von default ist an

02:52:34.120 --> 02:52:41.720
der stelle da kann ich nämlich einfach bei buhl bleiben aber es funktioniert prinzipiell

02:52:41.720 --> 02:52:53.200
schon mal dass ich mich macht es rückgängig komm ja weg damit nicht so lange mit dem krempel

02:52:53.200 --> 02:53:01.160
hier aufhalten so passt also alles klar so jetzt legen wir erst mal wieder die datenbank

02:53:01.160 --> 02:53:08.920
an und machen jetzt mal mit der web anwendung weiter sqlite explorer gleich anschmeißen

02:53:08.920 --> 02:53:17.520
gucken ob das alles passt gucken wir mal so also wenn jetzt hier in der in der datenbank

02:53:17.520 --> 02:53:27.000
alles drin steht ach ja guckt mal jetzt ist der ganze krempel drin die id ist drinne created

02:53:27.000 --> 02:53:34.360
ad ist drinne deleted flag ist drinne was bescheuert ist was wir gerade gar nicht brauchen

02:53:34.360 --> 02:53:40.360
name vom essen ist drinne description vom essen ist drinne und ein link zum bild ist

02:53:40.360 --> 02:53:42.960
drinne jetzt ist alles gut wunderbar so muss das sein

02:53:42.960 --> 02:53:52.880
sehr schön gut dann können wir uns das jetzt ja sparen können wir den kram wieder ausführen

02:53:52.880 --> 02:53:58.960
und gucken ob es passt ok so jetzt kommen wir mal zur web anwendung weiter im text nämlich

02:53:58.960 --> 02:54:08.920
das was ich eigentlich machen wollte ankommen das ist eine gute frage ich gehe mal davon

02:54:08.920 --> 02:54:17.520
aus dass da würde nicht funktionieren weil das ist ja meistens die kurzvariante also

02:54:17.520 --> 02:54:25.320
sprich so oder halt also das minus s wäre kurzvariante ich glaube das müsste man wahrscheinlich

02:54:25.320 --> 02:54:34.160
hier noch definieren bei dem weiß nicht ob der auch die kurzschreibweise definieren kann

02:54:34.160 --> 02:54:48.760
kann man sich eigentlich die hilfe anzeigen lassen hier von jetzt string backseating chat

02:54:48.760 --> 02:54:52.640
wie macht man hier von jetzt die kurzvariante das hier ist minus minus sieht und wie würde

02:54:52.640 --> 02:54:57.640
ich jetzt definieren dass es minus s ist die kurzvariante wahrscheinlich einfach zweimal

02:54:57.640 --> 02:55:06.360
flex wahrscheinlich müsste ich dann beides anlegen naja ok jetzt müssen wir random aus

02:55:06.360 --> 02:55:17.200
der datenbank was auslesen irgendjemand hat gesagt es ist kein random order aber ich glaube

02:55:17.200 --> 02:55:22.180
nicht dass wir das ich mein an sich ist die idee ziemlich cool da können wir auch gleich

02:55:22.180 --> 02:55:29.240
mal gucken wie wir ein raw sql query darin absetzen können also wir kriegen wir surfen

02:55:29.240 --> 02:55:39.440
alle files aus www root und haben einen endpunkt slash food so und wenn ich slash food aufrufe

02:55:39.440 --> 02:55:46.680
mit curl dann will ich ein random food eintrag aus der datenbank zurückbekommen also data

02:55:46.680 --> 02:56:03.640
ist db und was war das jetzt feind ne first ach first or create gibt es da auch aha also

02:56:03.640 --> 02:56:08.440
sprich ich könnte abfragen und wenn es nicht da ist auch einfügen das finde ich ganz praktisch

02:56:08.440 --> 02:56:21.160
gibt es sowas wie select sehr schön das ist gut wo haben wir denn noch mal die die gorm

02:56:21.160 --> 02:56:35.240
die gorm hilfe seite hier select ok ich brauche mal ein beispiel query also take take one

02:56:35.240 --> 02:56:50.280
record no specified order first id 1 ne order by id so last first row ich bin ich bin jetzt

02:56:50.280 --> 02:56:54.640
gerade wie kriege ich da am besten ein random ein random wert raus ich meine ich könnte

02:56:54.640 --> 02:57:01.240
gucken was ist die letzte id und dann in random aber schön schön ist es nicht oder

02:57:01.240 --> 02:57:21.240
ok hier kann man auch die id angeben also ich könnte jetzt theoretisch sowas machen

02:57:21.240 --> 02:57:29.720
ich meine ich weiß ja dass das 100 sind aber was ist das mit select es gab es gab es gibt

02:57:29.720 --> 02:57:36.640
ja hier wohl irgendwie nen select was macht das select ach ne das sind die das sind wenn

02:57:36.640 --> 02:57:47.020
ich nur verschiedene felder abfragen will also ne das ist was anderes also ich will

02:57:47.020 --> 02:57:55.600
wahrscheinlich first haben ich will first food ok chat wie war das ich muss food verwenden

02:57:55.600 --> 02:58:07.800
wenn ich es nicht initialisiere so und food so id und jetzt kommt was wo ich mir nicht

02:58:07.800 --> 02:58:15.360
ganz sicher bin wie man das am besten machen random und wenn faker kann auch nen random

02:58:15.360 --> 02:58:35.440
int ne ne math math random oder random random random random int random int ich will aber

02:58:35.440 --> 02:58:53.000
doch sagen von bis go lang random int from to genau monka was

02:59:05.440 --> 02:59:24.520
ist denn das das ist das jetzt soll nicht den hier in ernst oder das ist was es gibt

02:59:24.520 --> 02:59:46.280
und es gibt int ach so moment int 31 ach so weil es exclusive ist oder wie int 31 also

02:59:46.280 --> 02:59:50.280
die benahmung könnte man noch ein bisschen verbessern ich glaube die wollen uns sagen

02:59:50.280 --> 03:00:00.920
weil es wahrscheinlich nicht inclusive null ist oder so man muss seinen random sieben

03:00:00.920 --> 03:00:12.040
ne muss müssen muss man wahrscheinlich nicht geht bestimmt auch so also int und das ist

03:00:12.040 --> 03:00:18.400
jetzt quasi also das das mag ich nicht ich mein warum warum können die das nicht ordentlich

03:00:18.400 --> 03:00:26.120
benennen ich mein n warum steht da nicht warum steht da nicht zum beispiel sowas ab to n

03:00:26.120 --> 03:00:36.800
inclusive oder sowas dass man wenigstens weiß was damit gemeint ist ok int first und jetzt

03:00:36.800 --> 03:00:50.480
die id int ist jetzt das ist das inclusive null ist das inclusive 100 oder ohne 100 oder

03:00:50.480 --> 03:01:19.080
in in inten int returns in int as non negative sorry ok also null ist dabei es ist null bis

03:01:19.080 --> 03:01:30.560
99 quasi so das geht schon mal nicht null bis 99 weil wait a minute ah wir machen nur

03:01:30.560 --> 03:01:38.080
100 ok null ist auf jeden fall ist auf jeden fall nicht ok also müssen wir quasi 99 machen

03:01:38.080 --> 03:01:51.920
plus eins so dann kommt dann maximal 99 raus aber nie null das ist wichtig das ist das

03:01:51.920 --> 03:01:57.600
allerwichtigste das ist bei go bei go und bei bei rust projekten dann ist es eigentlich

03:01:57.600 --> 03:02:01.600
weniger wichtig ob was das projekt macht sondern ist wichtig dass gleich in der ersten

03:02:01.600 --> 03:02:08.320
seite drin steht written in go written in rust also vor allem umso abgedrehter und seltener

03:02:08.320 --> 03:02:12.520
die programmiersprache ist umso größer musst du das hervorheben dass es written in einer

03:02:12.520 --> 03:02:22.460
speziellen programmiersprache ist ja das ist wenn wenn ich was ich was ich übergebe

03:02:22.460 --> 03:02:32.960
minus null ist hier aber ich will ja sicherstellen dass es von 1 bis 99 ist inklusive nee muss

03:02:32.960 --> 03:02:40.640
ich nicht weil es ist inklusive es ist exklusive 99 das heißt es kann maximal 98 plus 1 99

03:02:40.640 --> 03:02:53.240
rauskommen irgendwann kommt noch go runtime written in rust das wird dann alles erfüllen

03:02:53.240 --> 03:03:08.160
das wird dann alles erfüllen die rakete muss rein ganz wichtig das rakete das raketen emoji

03:03:08.160 --> 03:03:13.560
ich genau die habe ich auch im titel event guckt euch mal guckt euch den stream titel

03:03:13.560 --> 03:03:21.480
von heute an das ist der bescheid ja turbo charged ist auch sehr beliebt aktuell turbo

03:03:21.480 --> 03:03:33.160
charges your development experience schreiben wir dann rein

03:03:33.160 --> 03:03:41.160
turbo charging and blazingly fast ich habe nicht unendlich viel ram aber ich habe 32

03:03:41.160 --> 03:03:48.920
gigabyte ram was gar nicht so wenig ist batteries included ja das gut dass das stand ja früher

03:03:48.920 --> 03:03:53.520
sogar für die bei der pyson stellart library dabei ok also mal langsam ich habe jetzt

03:03:53.520 --> 03:03:59.520
hier einmal food ausgelesen das heißt von der idee her wenn ich das jetzt starte nur

03:03:59.520 --> 03:04:04.400
mal so dass ich dass ich jetzt nicht den faden komplett verlieren wenn ich das starte und

03:04:04.400 --> 03:04:10.840
ich rufe jetzt hier mal ein food item ab sollte ich ein random food item bekommen das klappt

03:04:10.840 --> 03:04:21.200
guckt mal leute pass mal auf wir gucken mal wie performant das ist ehrlich gesagt ist

03:04:21.200 --> 03:04:26.320
hauptsächlich das terminal dass das das karl braucht mehr als das go guckt euch mal an

03:04:26.320 --> 03:04:31.160
wobei denn die coolen leute verhörten ja betop mittlerweile ja guckt mal karl und betop machen

03:04:31.160 --> 03:04:40.120
die cpu auslastung rest go go langweilt sich kann auch mal hardtop machen na ja go langweilt

03:04:40.120 --> 03:04:55.600
sich na ja ok geht so kooper netus und nen sqlite cluster leute ein sqlite cluster und wenn

03:04:55.600 --> 03:05:05.320
ihr sagt max ergibt keinen sinn doch das gibt es nennt sich github nennt sich so das

03:05:05.320 --> 03:05:15.400
ist ein aufsatz für clustering von sqlite und hat 10.000 github sterne aber die idee

03:05:15.400 --> 03:05:20.600
ist cool die idee ist wirklich nice man denkt bloß nicht dass es sowas gibt geklastert

03:05:20.600 --> 03:05:31.240
ist sqlite ja ok wir können leute wir machen jetzt mal richtige richtige richtige auslastung

03:05:31.240 --> 03:05:55.120
richtig richtig richtig auslastung aber jetzt mal hey 100 localhosts localhosts 80 80 o

03:05:55.120 --> 03:06:09.240
ttp muster vor sp wange bob wange bob danke schön für den sub ok mal gucken wie hoch

03:06:09.240 --> 03:06:22.280
die auslastung jetzt gleich ist 100 prozent cpu last aber ich mein es sind auch es sind

03:06:22.280 --> 03:06:29.480
halt auch zwei millionen requests zwei millionen requests sind halt schon ein bisschen was

03:06:29.480 --> 03:06:52.880
blazing fast leute blazing fast ok aber guckt mal als wir können es auch ein bisschen realistischer

03:06:52.880 --> 03:07:02.480
requests oder 2000 requests oder mal mal 20 20.000 requests also wir kriegen wir kriegen

03:07:02.480 --> 03:07:11.040
recht viel wir kriegen ordentlich viele requests durch guckt mal also hier guckt mal wir haben

03:07:11.040 --> 03:07:23.920
summary pro request wir kriegen 39.000 requests die sekunde durch response time schwankt halt

03:07:23.920 --> 03:07:37.480
ein bisschen aber tja von auszugehen aber die meisten haben kaum ach ja man muss ja

03:07:37.480 --> 03:07:42.200
slash food hinten dran machen keckel alter ich nupe ist ja gar kein datenbank abfrage

03:07:42.200 --> 03:07:53.680
dabei ja ok ist ein bisschen langsamer gewesen aber jetzt kriegen wir nur 17.000 requests

03:07:53.680 --> 03:07:58.640
stimmt und es läuft sogar noch im debug mode leute das geht sogar noch schneller wir müssen

03:07:58.640 --> 03:08:11.880
einfach sagen go run go run release mode wie macht man das auto bild nicht bild gibt es

03:08:11.880 --> 03:08:27.520
in go überhaupt sowas debug und release builds gibt es sowas überhaupt also

03:08:41.880 --> 03:09:06.080
es gibt es nicht ok also es ist immer es ist es ist es ist immer so ok also ich muss

03:09:06.080 --> 03:09:13.600
nix ich muss nix machen also das heißt wir können uns das hier angucken ich kläre das

03:09:13.600 --> 03:09:36.560
noch mal so ok also wir haben woops

03:09:36.560 --> 03:09:45.400
you can remove simple and debug info das brauche ich jetzt nicht das ist beinahe ein bisschen

03:09:45.400 --> 03:09:52.760
kleiner also wir haben 17.000 requests die sekunde ich würde sagen das ist in ordnung

03:09:52.760 --> 03:10:01.120
zumal wir es ja vom gleichen rechner ausführen heute nächsten stream deployen wir das auf

03:10:01.120 --> 03:10:07.600
die in die hetzener cloud und dann testen wir wie schnell es wirklich ist ok weiter

03:10:07.600 --> 03:10:12.560
weiter im text also das ist also ich muss sagen geschwindigkeitstechnisch geht das geht

03:10:12.560 --> 03:10:19.120
das durchaus in ordnung er hat 17.000 requests die sekunde ich weil wir machen ja auch nix

03:10:19.120 --> 03:10:25.520
wir machen eine datenbank random randomized datenbank abfrage irgendjemand hat gesagt

03:10:25.520 --> 03:10:31.040
ich muss mein random sieben wenn ich den nicht siede ist es dann immer null das können wir

03:10:31.040 --> 03:10:49.400
relativ einfach ausprobieren ok so wir kriegen als erstes id 24 nochmal neu starten wir kriegen

03:10:49.400 --> 03:10:57.360
all die 24 wait a minute ich muss wirklich den random generator sieden dass es nicht

03:10:57.360 --> 03:11:14.080
immer die gleiche reinfolge ist warum macht er das denn nicht von sich aus auf der anderen

03:11:14.080 --> 03:11:20.120
seite eigentlich eigentlich ist es gar nicht so schlecht ja alles was explizit da steht

03:11:20.120 --> 03:11:26.240
ist keine magic unter der haube das ist ist ok lass ich lass ich mir gefallen also muss

03:11:26.240 --> 03:11:38.720
ich muss ich jetzt hier erstmal so was machen wie renn sieht was war das unix nano ne nano

03:11:38.720 --> 03:12:01.000
ok ich habe vergessen hier time now unix nano alles klar massive seed run ja jetzt ist es

03:12:01.000 --> 03:12:07.160
auch richtig random also es ist vorher auch nein es ist nie richtig random und es war

03:12:07.160 --> 03:12:11.720
vorher auch nicht richtig richtig random und es war vorher genauso random wie jetzt nur

03:12:11.720 --> 03:12:17.200
dass er jetzt immer an einer anderen stelle startet oder mit einem anderen seed startet

03:12:17.200 --> 03:12:25.760
ok wunderbar so also wir haben unsere food api am start euch das mal an unsere food api

03:12:25.760 --> 03:12:33.660
gibt jetzt wenn man abfragt immer die id creator deleted name das den basilikum tomatensalat

03:12:33.660 --> 03:12:39.320
mit einem bild dazu ich wette mit euch das bild ist definitiv kein basilikum tomatensalat

03:12:39.320 --> 03:12:51.400
ist halt irgendwie random bild ok das funktioniert wunderbar jetzt müssen wir jetzt müssen

03:12:51.400 --> 03:12:54.960
wir doch irgendwie mal checken ob wir das auf der webseite angezeigt kriegen müssen

03:12:54.960 --> 03:13:03.320
wir back end technisch noch irgendwas machen nö oder passt doch eigentlich ach ja doch

03:13:03.320 --> 03:13:08.400
ich will das doch eigentlich gar nicht an ans frontend ans ans frontend verteilen alles

03:13:08.400 --> 03:13:22.440
von der lernkurve der dank dem fahrer high IQ pfeiffer chat alles in ordnung kann ich

03:13:22.440 --> 03:13:35.120
dem irgendwie sagen dass er das ok go lang jason ignore ist das random 5 ja das haben

03:13:35.120 --> 03:13:48.440
die damals diesen gag haben die damals gebracht zum debian random generator falls sich noch

03:13:48.440 --> 03:14:05.040
irgendjemand an den kaputten random generator erinnert remove feels vom struct hiding jason

03:14:05.040 --> 03:14:31.240
doppelpunkt minus kann man das so dahinter machen was warum muss man ok jetzt wird mir

03:14:31.240 --> 03:14:43.480
die syntax aber ein bisschen abgedreht backticks jason doppelpunkt quotes minus also jetzt

03:14:43.480 --> 03:14:54.520
haben sie es echt ein bisschen übertrieben so ein bisschen übertrieben ja aber es funktioniert

03:14:54.520 --> 03:15:02.440
ok wir kriegen jetzt wirklich bloß nehmen kinder was sind kinder kalt essen die da irgendwie

03:15:02.440 --> 03:15:22.720
kratzen oder was ne was sind was sind kinder kinder kalt deutsch laksalat sandwich ach das

03:15:22.720 --> 03:15:31.360
ist irgendeine super markt kette kann das sein oder was ist das kinder kalt wer ist

03:15:31.360 --> 03:15:51.280
kinder kalt das ist kinder kalt nein ich habe kein schimmer wer kinder kalt ist aber kinder

03:15:51.280 --> 03:16:12.280
kalt ist also kinder kalt zu sein oder kalt kalt kalt kalt kalt kalt kalt kalt kalt kalt

03:16:12.280 --> 03:16:25.360
Also jetzt unsere API macht jetzt schon mal was es soll, so wir kriegen ein Essen, sinnlosen

03:16:25.360 --> 03:16:26.360
Text und ein Bild.

03:16:26.360 --> 03:16:30.320
So jetzt müssen wir mal kurz gucken, dass wir das auf unserer Webseite angezeigt bekommen.

03:16:30.320 --> 03:16:35.960
Leute ich mach keine Frontend Frameworks oder sonst was, das wird die billigste Webseite

03:16:35.960 --> 03:16:37.640
die ihr je gesehen habt.

03:16:37.640 --> 03:16:38.960
Auch hier im Stream.

03:16:38.960 --> 03:16:47.520
Vor Spaces, eigentlich wollte ich Two Spaces, ich mach jetzt nicht Whistle Studio Code dafür

03:16:47.520 --> 03:16:48.520
auf.

03:16:48.520 --> 03:16:54.960
Wir machen kein Svelte, wir machen auch kein View, wir machen gar nichts, pepo fetter,

03:16:54.960 --> 03:17:05.000
wir machen Script, Script, ich mach nie, ich mach nie in, für Frontend ist tatsächlich

03:17:05.000 --> 03:17:06.640
Whistle Studio Code das was ich verwende.

03:17:06.640 --> 03:17:23.600
Fetch, so Fetch, okay Fetch, Food, Await, ach Moment Top, gibt es schon Top Level Await,

03:17:23.600 --> 03:17:29.600
Browser Support, ne oder das kann auch kein Browser, noch nicht.

03:17:29.600 --> 03:17:43.800
Ja Moment Modules, Modules, doch, doch, doch gibt es anscheinend schon, aber nur in Modules,

03:17:43.800 --> 03:17:59.560
ne Modules, ich weiß nicht mal wie man das macht, so, Kekl Alter, wir brauchen kurz noch

03:17:59.560 --> 03:18:04.720
ein Browser hier, es wird langsam ganz schön voll, mal hier neben ausblenden, es wird langsam

03:18:04.720 --> 03:18:12.840
unübersichtlich, Local Host 8080, pepo fetter alles klar.

03:18:12.840 --> 03:18:37.240
Noch ne Debug, Konsole, das brauchen wir nicht mehr, Top Level Await, Ach Type, Module, okay

03:18:37.240 --> 03:18:52.480
das hat funktioniert, Let, Response, Jason gleich, Jason Await, jetzt hab ich natürlich

03:18:52.480 --> 03:18:59.840
noch nicht mal Auto Reload, Leute cooles Auto Reload Plugin für JetBrains Dinger, normalerweise

03:18:59.840 --> 03:19:03.720
mach ich das wenn überhaupt mit dem Whistle Studio Code Dev Server oder eben mit dem was

03:19:03.720 --> 03:19:16.600
im jeweiligen Framework eingebaut ist, es läuft, es läuft, alles gut, Log, Jason, hey es funktioniert

03:19:16.600 --> 03:19:24.240
guck mal, wir kriegen unseren Crampel in Browser, Description und Images, alles klar.

03:19:24.240 --> 03:19:35.240
Jetzt fällt mir wieder auf, dass ich von Raw Javascript absolut keinen Plan habe, wie macht

03:19:35.240 --> 03:19:40.840
man denn jetzt sowas hier richtig, Div, mal ein bisschen Raw Javascript kann ja auch nichts

03:19:40.840 --> 03:19:55.680
schaden, hallo, ich will, what the fuck, Div jetzt müssen wir ID's verwenden oder, hier

03:19:55.680 --> 03:20:13.440
Title, Desk, ohje, jetzt, ohje das wird was, also, wie geht das jetzt, Document, Get Element

03:20:13.440 --> 03:20:33.640
by ID, Name, Moment, Log, ja das funktioniert, alles klar, also, Element, so und jetzt Text,

03:20:33.640 --> 03:20:52.840
ne, Inner Text ist es glaube ich, Inner Text gleich Jason Punkt Name, ok was habe ich falsch

03:20:52.840 --> 03:21:09.360
gemacht, ach es heißt Name, da haben wir es doch, Name, Kalua Hot Chocolate, alles klar,

03:21:09.360 --> 03:21:17.520
so Inner Text, dann brauchen wir noch, boah, Alter das ist ja eklig, Moment ich muss mal

03:21:17.520 --> 03:21:34.720
kurz anders machen, Function, Set Text, Element Name, wir basteln uns jetzt ein eigenes JQuery,

03:21:34.720 --> 03:21:50.040
nur in schlechter, weil ich keine Sachen verwenden will, Set Text, Name, ach so, ne, Sekunde,

03:21:50.040 --> 03:22:08.920
ach fuck, Moment, ne, Text, Jason Dot Name, ok funktioniert und Description, Description,

03:22:08.920 --> 03:22:20.080
ohje funktioniert, funktioniert ja, ist ja schonmal was, Unresolvable Vari, was, Laber

03:22:20.080 --> 03:22:27.800
nicht rum, ok und jetzt kommt das wichtigste, das Image, Image, ne warte, wie mache ich

03:22:27.800 --> 03:22:40.440
denn überhaupt, wie mache ich jetzt ein Image, denn, warte mal, Div, MonkaS Image, das muss

03:22:40.440 --> 03:22:52.920
ich, muss ich selbst erzeugen, das Element und was da einfügen, ja, oh jetzt wirds,

03:22:52.920 --> 03:23:00.000
jetzt wirds, jetzt wirds advanced, also sprich, ach ne, Image Source, du hast recht, stimmt,

03:23:00.000 --> 03:23:08.720
das kann man ja tatsächlich setzen, Image, ID Image, weil man kann natürlich so machen,

03:23:08.720 --> 03:23:16.560
das könnte man übrigens hier überall so machen, by the way, oder auch nicht, dann

03:23:16.560 --> 03:23:29.200
halt nicht, ist ok, ist ok, ist gut, ist gut, Closing Tag ist redundant, wie darf man einfach

03:23:29.200 --> 03:23:37.480
so Image schreiben oder was, ach so Source is required, das ist mir doch egal ob Source

03:23:37.480 --> 03:23:52.040
required ist, ich will, document, getElement, by i, oh Gott, raw Javascript, image Source,

03:23:52.040 --> 03:23:58.240
Source gleich Cackle, nur mal gucken ob es jetzt ein Fehler gibt, not found Cackle, schonmal

03:23:58.240 --> 03:24:10.320
gut, schonmal gut, so, und jetzt Source, Jason gleich, wie habe ich den Campbell genannt,

03:24:10.320 --> 03:24:21.680
Image Url oder so, Image Url, ach Moment, jetzt sind wir in den Javascript, jetzt macht

03:24:21.680 --> 03:24:29.440
man ja wieder Semikolons, die können sich auch, warum gibt es kein super krasses übergreifendes

03:24:29.440 --> 03:24:36.160
Sprachen Konsortium oder so, was einfach festlegt, ja macht gefälligst über, da ist es Leute,

03:24:36.160 --> 03:24:41.960
guckt mal, also das ist übrigens, das ist ein griechischer Salat, falls ihr das nicht

03:24:41.960 --> 03:24:52.600
erkannt habt, und das hier ist, das ist Chocolate Coconut Dreambars, falls, also die Bilder sind

03:24:52.600 --> 03:25:07.680
mir bewusst, die passen nicht dazu, aber darum ging es ja auch nicht, so, wollen wir noch

03:25:07.680 --> 03:25:15.000
so nett sein und es ein bisschen CSS stylen, weil das sieht jetzt halt schon mega beschissen

03:25:15.000 --> 03:25:22.000
aus, blazingly fast Leute, blazingly fast, Favicon braucht kein Mensch, komm ein bisschen,

03:25:22.000 --> 03:25:38.600
ein bisschen stylen können wir es noch, wie stylt man das so, Style, ne, Style, ok, Raw

03:25:38.600 --> 03:26:02.480
not allowed hier, ok, style in head, ne, doch, OMG, also, Name is font size XXXlarge, jawoll,

03:26:02.480 --> 03:26:09.600
so sieht jalapeño Pepper Jelly Chicken aus, ok, das könnte, ohne Mist, das könnte noch

03:26:09.600 --> 03:26:13.720
am ehesten hinkommen von dem, was wir bisher hatten, ich mein, weißt du, ob da jalapeños

03:26:13.720 --> 03:26:24.640
und ein Hähnchen vielleicht drin sind, kann doch sein, möglich, sieht zwar nicht so aus,

03:26:24.640 --> 03:26:43.320
aber, dass das hier kein German Apple Cake ist, das sollte man glaube ich erkennen, das

03:26:43.320 --> 03:26:54.160
ist nicht C-Line, das ist Goland, so, ok, jetzt haben wir schon mal eine Überschrift,

03:26:54.160 --> 03:27:01.480
wir brauchen noch eine ordentliche Schriftart, wie macht man eine Default Schriftart so,

03:27:01.480 --> 03:27:13.440
Body, Font, Family, ja hier areal, beste, ah ok, ja Roboto haben die wenigsten halt

03:27:13.440 --> 03:27:21.440
installiert, wenn ich das halt, wenn ich halt Roboto schreiben würde, dann würden das halt

03:27:21.440 --> 03:27:32.080
nur Leute bekommen, die Roboto installiert haben, ich bleib mal bei areal, areal haben

03:27:32.080 --> 03:27:36.880
sie alle, so, als nächstes, nächste, nächste übrigens hier ist Description, Description,

03:27:36.880 --> 03:27:44.120
ok, wenn wir mal, wenn wir mal XXlarge, und das ist XXlarge, nur nur XXlarge, alles klar,

03:27:44.120 --> 03:27:58.680
ok, das sieht mega kacke aus, einfach nur large, ja ok, kann ich mitleben, margin, bottom,

03:27:58.680 --> 03:28:09.760
2em, ein bisschen viel, was ist der Unterschied zwischen rem und em, das eine macht eben noch

03:28:09.760 --> 03:28:25.140
dpi und das andere nicht oder, relative, ok, das sieht tatsächlich ganz brauchbar aus

03:28:25.140 --> 03:28:30.800
jetzt, ein schönes was anderes, aber ok, wir machen das Bild, wir machen das Bild noch

03:28:30.800 --> 03:28:43.000
ein ticken kleiner, image, so, image size, ok, das ist komplett mobile first, guck mal,

03:28:43.000 --> 03:28:47.680
guck mal wie responsive, seht ihr das, guck mal wie responsive sich das an die Bildschirmbreite

03:28:47.680 --> 03:28:54.720
anpasst, huge responsiveness, mehr responsive geht ja kaum, so, aber wir können noch das

03:28:54.720 --> 03:29:01.600
image sein, wir können noch sagen, Breite von dem Bild ist, screen, ne, ne, wie ging

03:29:01.600 --> 03:29:18.240
das, h-screen, ne, screen, v-screen, ne, ah ne, das war tailwind, 100 view war das richtige,

03:29:18.240 --> 03:29:28.160
genau, komm mal jetzt, jetzt ist es richtig responsive, jetzt size, size das image mit,

03:29:28.160 --> 03:29:50.320
das ist massive image, image resize, komm mal her, porgel, hide, hide, was, hide, auto,

03:29:50.320 --> 03:30:10.480
ah, das ist nicht standardmäßig, kein unterschied, so, bam, also, massive, hier, nice food api

03:30:10.480 --> 03:30:19.040
mit go, oh, you're blazingly fast, Leute, wollen wir mal gucken, wie schnell ich refreshen

03:30:19.040 --> 03:30:28.240
kann, Achtung, wir testen das mal, blaze, oh Mist, blazingly fast, Leute, massive, huge

03:30:28.240 --> 03:30:40.600
fast, also, okay Leute, ich geb zu, die Webseite ist sicherlich nicht die schönste, die es

03:30:40.600 --> 03:30:55.240
irgendwie auf der Welt gibt, aber ich finde, durchaus ganz in Ordnung, ja, wie kriegt man

03:30:55.240 --> 03:31:01.640
das Bild jetzt in die Mitte, wie krieg ich das Bild jetzt allein in der Mitte von der

03:31:01.640 --> 03:31:09.840
Seite, normalerweise würde ich einfach Flexbox drumherum machen, aber, das dürfte tatsächlich

03:31:09.840 --> 03:31:21.400
relativ easy sein, was, margin, null, geht das automatisch, ja, margin, null, auto, der

03:31:21.400 --> 03:31:31.480
Chat ist high IQ, der weiß sowas, nee, geht nicht, reicht nicht, bringt nix, also, ich

03:31:31.480 --> 03:31:44.040
dachte, wir könnten jetzt sowas hier vielleicht machen, if, was, und jetzt, jetzt soll ich

03:31:44.040 --> 03:31:50.360
nochmal probieren, margin, null, auto, wenn der Chat das sagt, dann klar, nee, geht immer

03:31:50.360 --> 03:31:56.160
noch nicht, ich hätte jetzt gesagt, wir machen jetzt hier sowas, pass mal auf, wir machen

03:31:56.160 --> 03:32:10.600
jetzt inline style, Flex, nee, wie hin das überhaupt, ich kenn bloß noch die Tailwind-Abkürzung,

03:32:10.600 --> 03:32:19.680
ich weiß gar nicht, wie man ordentliches normales Flexbox macht, ach, Display Flex, Flex, so

03:32:19.680 --> 03:32:28.960
und jetzt muss ich items, align, Flex, align, heißt das so, nee, nee, align, align items,

03:32:28.960 --> 03:32:36.600
center, align content, center, bin mir gar nicht sicher, ob das, okay, das funktioniert

03:32:36.600 --> 03:32:46.040
nicht, weil ich zu blöd bin, normales TSS zu machen, aber so müsste man das eigentlich

03:32:46.040 --> 03:32:50.000
machen, wenn man jetzt noch wüsste, wenn man jetzt noch die richtigen Sachen wüsste,

03:32:50.000 --> 03:33:03.760
ja, justify content ist es, justify content, ah, ja, yes, excellent, so ist es, genau,

03:33:03.760 --> 03:33:12.600
so, beste Image Random Mizer Seite überhaupt und ich sag euch, demnächst wirds in die Cloud

03:33:12.600 --> 03:33:30.200
Deployed mit Clustered SQLite Datenbank für noch mehr Placingly Fast Performance, ja,

03:33:30.200 --> 03:33:33.480
also was haben wir denn gelernt, lasst doch mal gucken, wir haben gelernt, wie man in

03:33:33.480 --> 03:34:02.080
Go einen Web Server macht, da fehlt noch, was fehlt noch, das Favicon fehlt ja aber

03:34:02.080 --> 03:34:09.400
ich hab doch gar keins, also du meinst, ich muss einfach noch die Rakete auf die Seite

03:34:09.400 --> 03:34:21.920
machen, du meinst, ich soll, okay, okay, okay, ist gut, das muss sein, ja, ihr habt recht,

03:34:21.920 --> 03:34:31.840
gewisse Sachen sollten so sein, ja, wo macht man das hin, hier in Het, Favicon, ja, das

03:34:31.840 --> 03:34:37.120
ist, jetzt sagt er mir wahrscheinlich, dass er es nicht laden kann, ist ja klar, will

03:34:37.120 --> 03:34:53.280
plus wissen, ob er es nicht laden kann, ja, so und jetzt Rocket Emoji Rocket, ja, welche

03:34:53.280 --> 03:35:04.000
nehmen wir denn, Twitter, Twitter Emojis, beste oder welche Rakete, oh guck mal, Skype ist

03:35:04.000 --> 03:35:16.200
sogar animiert, ja, das ist Twitter, was wir im Chat haben Leute, das ist Twitter, das

03:35:16.200 --> 03:35:40.120
ist das da, Achtung, CD, WWW Route, WGET, MV Rocket 2, wie hab ich gesagt, ja nicht

03:35:40.120 --> 03:36:06.680
SVG, Alter, PNG, und, achso, PNG, zack, Leute, Rakete am Start, also jetzt ist, jetzt ist

03:36:06.680 --> 03:36:20.400
es kaum noch zu übertreffen, es ist noch Plasingly Faster, Roasted Broccoli, okay,

03:36:20.400 --> 03:36:35.320
wo genau, okay, also lass mal kurz gucken, was, was, was haben wir gelernt, wir haben

03:36:35.320 --> 03:36:39.520
gelernt, wie man bei Goan einen Webserver macht, also im Prinzip haben wir alles hier

03:36:39.520 --> 03:36:43.640
gelernt, weil ich keine Ahnung davon hatte, so macht man den Goan einen Webserver, registriert

03:36:43.640 --> 03:36:47.840
sich, jetzt aber Chat noch mal eine andere Frage, was genau ist jetzt der Vorteil davon,

03:36:47.840 --> 03:36:53.400
irgendwelche Frameworks zu verwenden, also mal genommen, ich würde so was wie Fiber

03:36:53.400 --> 03:36:57.960
oder so verwenden, was wäre jetzt der Vorteil, dass ich beispielsweise nicht mehr jeden einzelnen

03:36:57.960 --> 03:37:04.880
Schritt wie, wie Jason Serialize von Hand machen muss oder Header setzen von Hand machen

03:37:04.880 --> 03:37:20.440
muss und so was, ja, okay, ich verstehe.

03:37:34.880 --> 03:37:52.560
Ja, okay, ja, alles klar, verstanden, ja, leuchtet ein, also wir haben geguckt, wie man,

03:37:52.560 --> 03:38:03.440
wie man einen Webserver startet, wie man Routen registriert, wie man random Zeugs macht, wie

03:38:03.440 --> 03:38:10.960
man Jason Serialisiert deserialisiert, wie man eine Datenbank mit einem ORM Mapper verwendet,

03:38:10.960 --> 03:38:22.800
man Header setzt, wie man statische Files surft, wie man eine Datenbank seedet, dass

03:38:22.800 --> 03:38:30.360
der Ordner 7.0 Berechtigung braucht, dass es in Go drei verschiedene Sachen gibt Variablen

03:38:30.360 --> 03:38:40.360
anzulegen, wie man Jason Ignore ganz ehrlich, also da haben sie echt übertrieben, das ist

03:38:40.360 --> 03:38:45.520
ja mal wirklich absolut reudig des Sonntags, da muss ich sagen, in.NET hätte man das

03:38:45.520 --> 03:38:54.520
so gemacht, nur mal so als Beispiel, dort hätte man sowas gemacht, was ich irgendwie

03:38:54.520 --> 03:39:04.400
schöner finde, als das da, das ist wirklich eklig, dass man Errors nicht braucht, korrekt,

03:39:04.400 --> 03:39:23.040
bloated Errors, das nächste Mal dann Kontext für Timeout und Cancellation, ja, wäre vielleicht

03:39:23.040 --> 03:39:26.000
gar nicht so schlecht, jetzt nicht, es gibt jetzt auch noch gerade hier nicht viel was

03:39:26.000 --> 03:39:45.000
Timeouten kann, nix längeres aber, so wie man HTTP Requests macht haben wir gelernt,

03:39:45.000 --> 03:39:51.760
wie man Files speichern in Go haben wir gelernt, dass man ganz schön viele Imports braucht

03:39:51.760 --> 03:40:00.840
Packages habe ich gelernt, na das muss man halt sagen, in dem Fall, wir hätten, wenn

03:40:00.840 --> 03:40:08.160
wir sowas wie ASP.NET Core verwendet hätten, wir hätten nichts an Zusatzpackages gebraucht,

03:40:08.160 --> 03:40:14.360
das wäre eingebaut, das wäre eingebaut, doch doch, Faker, Bogos hätten wir gebraucht,

03:40:14.360 --> 03:40:23.200
ja das hätten wir gebraucht tatsächlich, ansonsten halt keine, moin Michi, lieber CSS

03:40:23.200 --> 03:40:29.080
landen, du brauchst, um CSS ein bisschen kommt man nicht drum herum, ich meine, ich habe

03:40:29.080 --> 03:40:34.080
auch keine große Ahnung von CSS, guckt euch das hier mal an, da habe ich mir schon schwer

03:40:34.080 --> 03:40:40.120
getan, aber, ähm, ein bisschen Ahnung, wie man was macht ist nicht verkehrt, ich persönlich

03:40:40.120 --> 03:40:46.880
mag ja Tailwind, weil es CSS ist, aber halt nicht ganz so painstampig zu schreiben wie

03:40:46.880 --> 03:40:56.720
CSS, aber sowas wie Bootstrap ist auch nicht verkehrt, aber ein bisschen CSS, so wie man,

03:40:56.720 --> 03:41:03.320
ähm, beispielsweise, so was weiß ich, wie man Grid macht oder wie man Flexbox verwendet

03:41:03.320 --> 03:41:09.480
oder wie man was zentriert und sowas, das sollte man sich schon mal angucken, weil das

03:41:09.480 --> 03:41:17.200
wird man bei Bootstrap auch ab und an brauchen, das kenne ich, das wird aber leider nicht

03:41:17.200 --> 03:41:29.960
mal weiterentwickelt, das letzte Update war von 2014 oder so, ja, siehste, da gibt es

03:41:29.960 --> 03:41:57.880
mittlerweile, gibt es mittlerweile neuere Sachen, haben wir das geforkt oder was, ja,

03:41:57.880 --> 03:42:03.360
es gibt, CSS Sachen gibt es massig und selbst Bootstrap, ich meine mit Bootstrap hat dieser

03:42:03.360 --> 03:42:10.600
ganze CSS Framework Sachen, Kram so richtig angefangen, aber es gibt ja so viele Sachen

03:42:10.600 --> 03:42:20.040
mittlerweile, was CSS Frameworks gibt, ähm, stimmt wohl, da gibt es Tausende mittlerweile,

03:42:20.040 --> 03:42:28.040
ja, und manche, manche sind auch noch irgendwie Framework spezifisch, also es gibt, allein

03:42:28.040 --> 03:42:34.880
für React gibt es ja schon irgendwie 20 verschiedene CSS UI Frameworks, gut, das ist dann die Kombination

03:42:34.880 --> 03:42:41.680
aus CSS und React Komponenten, für Vue gibt es auch ein paar, ähm, also da gibt es so

03:42:41.680 --> 03:42:48.440
viel, ich glaube, wenn man nach CSS, Moment, da gibt es doch bestimmt ne Liste von, List

03:42:48.440 --> 03:43:00.080
auf, oh, es war so klar, dass es da schon wieder irgendeine Liste von gibt, ja, Agile Content

03:43:00.080 --> 03:43:13.880
Management, wunderbar, Pog, furchtbar akil alles, ich mein, guckt euch das mal an, das,

03:43:13.880 --> 03:43:22.880
es gibt so viel, ok, Moment, es gibt classless, ok, classless bedeutet im Endeffekt, das

03:43:22.880 --> 03:43:30.520
style die Default Elemente und alles andere musst du selbst machen, dann hast du very

03:43:30.520 --> 03:43:35.680
lightweight, das sind die, da musst du selbst classless eintragen, aber, du musst dich

03:43:35.680 --> 03:43:42.000
selbst darum kümmern, und dann hast du general purpose, da ist ein Bootstrap dabei, Foundation

03:43:42.000 --> 03:43:48.840
sind dabei, UIKit, ich dachte, UIKit ist, ist, ist, ähm, React, oder, bring ich das

03:43:48.840 --> 03:44:06.160
jetzt durcheinander, ne, anscheinend nicht, doch immer, Foundation, Foundation gibt es

03:44:06.160 --> 03:44:10.480
richtig lang, Foundation war damals so ein bisschen die Konkurrenz zum Bootstrap, das

03:44:10.480 --> 03:44:25.160
gibt es schon seit, seit 10 Jahren, oder so, Carbon Components, das ist die Microsoft

03:44:25.160 --> 03:44:31.360
Geschichte, gell, Carbon Components, ah ne, IBM, IBM, ich hätte ja auch nicht gedacht,

03:44:31.360 --> 03:44:42.040
dass IBM mal ein CSS Framework hatte, Fomantik, Pico CSS, Blaze, UI, Base, Turret, Vanilla

03:44:42.040 --> 03:44:47.120
Framework, Material Design Framework, ok, Tailwind ist tatsächlich cool, das passt

03:44:47.120 --> 03:44:53.120
hier gar nicht so wirklich rein, weil man muss halt CSS machen, nur, dass es ein bisschen

03:44:53.120 --> 03:45:01.080
besser zu schreiben ist, und das sind, bei weitem, noch nicht alle, wette ich mit euch.

03:45:01.080 --> 03:45:15.600
Ja, so, ich bin jetzt 3 Stunden 45 on, ich glaube, das reicht für heute, morgen früh,

03:45:15.600 --> 03:45:28.040
ihr müsst aufwachen, streamen, wieder wie immer, so kurz, so kurz vor 9 um 9 um, eigentlich

03:45:28.040 --> 03:45:32.040
wollte ich noch ein Video machen heute, aber ich glaube, jetzt ist es ein bisschen spät,

03:45:32.040 --> 03:45:41.480
wir haben 7 Uhr, 17 Uhr 5, ich wollte eigentlich ein Video heute machen, das, das habe ich

03:45:41.480 --> 03:45:50.120
euch ja gestern kurz erzählt, ne, also, YouTube ist gerade der Meinung, mein Windows 11 Video,

03:45:50.120 --> 03:46:03.280
ne, das da, die promoten das gerade, wie verrückt, das hat innerhalb von paar Tagen irgendwie

03:46:03.280 --> 03:46:12.120
50.000 Views bekommen, oder so, oder ob drauf, also, das hatte vorher schon irgendwie so 60k

03:46:12.120 --> 03:46:18.900
oder so, 60, 70k, und jetzt geht es voll ab, und hier schreiben so viele Leute, ich will

03:46:18.900 --> 03:46:27.240
auf Linux, ich will auf Linux und sonst was, und ich wollte einfach ein Video machen, dass

03:46:27.240 --> 03:46:41.040
für viele Leute Linux nicht die Lösung ist für ihre Windows Probleme, viele Leute erwarten,

03:46:41.040 --> 03:46:46.360
dass quasi dann, dass sie dann quasi ein Windows bekommen, ohne die Probleme von Windows,

03:46:46.360 --> 03:46:49.800
aber das ist nicht so, das ist ein komplett anderes System, und wenn man sich nicht darauf

03:46:49.800 --> 03:46:53.880
einlässt, dass das ein anderes System ist, dann wird das auch nichts, die meisten Leute

03:46:53.880 --> 03:46:58.720
wären tatsächlich, wenn sie keinen Bock mehr auf Windows haben, und einfach was haben wollen,

03:46:58.720 --> 03:47:05.720
was funktioniert, und wo sie auch, ja, vielleicht ein bisschen Videoschnitt und Krams, vielleicht

03:47:05.720 --> 03:47:10.720
Programme, die sie schon haben, weiter verwenden können, teilweise, da sind die wahrscheinlich

03:47:10.720 --> 03:47:18.760
wirklich, wenn sie keinen Bock haben auf Windows, mit Mac noch besser bedient als mit Linux,

03:47:18.760 --> 03:47:29.840
was cool an Mac ist, dass es eine ganz nette Kombination ist aus sinnvollem User Interface,

03:47:29.840 --> 03:47:38.160
aber auch halbwegs gutem Unix Unterbau, also du hast ein ordentliches Terminal, du hast

03:47:38.160 --> 03:47:42.480
deine Shell Befehle, du kannst vieles im Terminal machen, du hast einen ordentlichen Package

03:47:42.480 --> 03:47:50.200
Manager fürs Terminal, also aus den Gesichtspunkten ist Mac OS um vielfaches besser geeignet für

03:47:50.200 --> 03:47:55.120
Windows Umsteige erstmal als Linux, man kostet was, und mittlerweile brauchst du halt auch

03:47:55.120 --> 03:48:00.000
wahrscheinlich, ja, an Apple Hardware kommst du ja im Endeffekt auch nicht vorbei, das

03:48:00.000 --> 03:48:11.380
heißt, ja, geldtechnisch ist so ein Ding, das Jahr des Linux Desktop ist höchstens

03:48:11.380 --> 03:48:23.720
in WSL, Apple Hardware ist arm CPU, ja, und man ist arm, wenn man sie gekauft hat, glaube

03:48:23.720 --> 03:48:45.800
ich nicht, das glaube ich nicht, ja, das sind aber wahrscheinlich auch nicht so die Leute

03:48:45.800 --> 03:48:51.360
mit dem typischen Windows Workload, also die typischen Windows Benutzer, das sind ja nicht

03:48:51.360 --> 03:48:59.520
welche, die nur Mails lesen, also Leute, die wirklich nur Mails lesen und surfen, die kommen

03:48:59.520 --> 03:49:04.480
wahrscheinlich mit einem Tablet heutzutage aus, ja, ich glaube die meisten Windows User

03:49:04.480 --> 03:49:16.920
haben so eine relativ durchwachsene Userverhalten, die wollen ab und zu mal Fortnite spielen

03:49:16.920 --> 03:49:21.800
oder ein paar neue Spiele auf Steam spielen, vielleicht wollen die irgendwelche Adobe Programme

03:49:21.800 --> 03:49:33.840
verwenden oder ein paar Video, Bilder, Sachen zusammenklicken, dann wollen sie vielleicht

03:49:33.840 --> 03:49:41.240
den Fitness-Tracker anschließen, sie wollen ihr Telefon sünden und solche Dinge, also

03:49:41.240 --> 03:49:44.320
wenn die wirklich nur surfen und so, dann ist das alles kein Problem, dann kommst du

03:49:44.320 --> 03:49:48.600
mit mehr oder weniger jedem Betriebssystem hin, was ein Browser hat, aber wie gesagt,

03:49:48.600 --> 03:49:53.640
ich glaube die meisten Windows User machen halt eher das, was ich gerade gesagt habe,

03:49:53.640 --> 03:49:59.880
und da wirst du über kurz oder lang, wenn du rangehst an Linux mit, es ist ein besserer

03:49:59.880 --> 03:50:07.640
Windows Ersatz, nicht glücklich, weil es ist kein Windows, es ist auch kein Windows Ersatz,

03:50:07.640 --> 03:50:12.400
allein schon das der 0815 Anwender Angst hat vom Terminal, und warum hat der Windows der

03:50:12.400 --> 03:50:17.800
0815 Anwender Angst vom Terminal, wegen diesem Ding hier unter Windows, weil Microsoft diesen

03:50:17.800 --> 03:50:27.160
Rotz hier ausliefert seit Jahren, mittlerweile gibt es aber zum Glück was besseres, und

03:50:27.160 --> 03:50:44.240
die Leute Panik bekommen, wenn sie dieses Fenster sehen, ich denke auch, dass vielen

03:50:44.240 --> 03:50:48.120
heute tatsächlich ein Tablet reicht, und ich könnte mir vorstellen, dass sogar relativ

03:50:48.120 --> 03:50:55.840
viele Leute nicht mal mehr ein Desktop PC haben, die machen alles übers Tablet, für

03:50:55.840 --> 03:51:05.520
ganz normale Leute, die vielleicht sogar in diesem Apple Kosmos leben, die ein iPhone

03:51:05.520 --> 03:51:11.280
haben und ein iPad haben, vielleicht ein Apple Fitness Zeug, die kommen damit auch wunderbar

03:51:11.280 --> 03:51:17.800
klar, und selbst mit einem Android Smartphone, du kommst theoretisch relativ gut klar ohne

03:51:17.800 --> 03:51:33.480
Desktop, zumindest so die 0815 Sachen, ja doch Anti-Cheat ist tatsächlich schwierig,

03:51:33.480 --> 03:51:39.880
es sei denn es ist Anti-Cheat, was ein bisschen da mitspielt, und ich glaube BattleEye spielt

03:51:39.880 --> 03:51:46.400
mit, und der Valve Anti-Cheat spielt halbwegs mit, wenn du sowas wie Valorant probierst,

03:51:46.400 --> 03:51:57.920
oder ganz abgedrehte Sachen, mail.ru Anti-Cheat, wir gucken mal, ProtonDB Valorant, Valorant,

03:51:57.920 --> 03:52:18.320
ach Moment, das sind nur Steam, ok das ist ja nur Steam, Moment,

03:52:18.320 --> 03:52:44.040
ach wird nicht aktualisiert, aber kannst du wahrscheinlich vergessen, der Typ, it's fun

03:52:44.040 --> 03:52:51.680
when it works, ja, das Problem dabei ist halt auch, dass du dich nicht darauf verlassen

03:52:51.680 --> 03:52:59.440
kannst, dass es funktioniert, wenn du Windows hast, kannst du Steam, Epic Store, GOG, es

03:52:59.440 --> 03:53:03.120
gibt GOG, gibt es übrigens glaube ich auch nicht für Linux, kannst du dich halt drauf

03:53:03.120 --> 03:53:08.200
verlassen, du kaufst ein Spiel, installierst das Spiel und das geht, und bei Linux kannst

03:53:08.200 --> 03:53:13.880
du sagen, ja es gibt viele Spiele, die funktionieren, aber wenn du ein neues Spiel kaufst, das ist

03:53:13.880 --> 03:53:19.200
dann erstmal, du kannst dir halt nicht sicher sein, ja, deswegen denke ich die meisten Leute

03:53:19.200 --> 03:53:24.600
sind relativ schnell wieder unter Windows, wenn sie das als Windows Ersatz nehmen, sie

03:53:24.600 --> 03:53:41.280
einfach nur sagen, ja ich will halt ein Windows, was nicht die Windows Probleme hat, ja, ja

03:53:41.280 --> 03:53:54.200
Gott, der hat recht, du hast dann halt auch immer so Leute, ich will es jetzt gar nicht

03:53:54.200 --> 03:53:59.480
unterstellen, dass das nicht stimmt, ja, aber ich kenne das, gerade auf Reddit und in Foren,

03:53:59.480 --> 03:54:04.360
dann posten die Leute sowas wie, das und das funktioniert bei mir nicht, da kommen als

03:54:04.360 --> 03:54:10.600
ersten Antwort immer, als Antwort so, also ich weiß nicht, was bei dir los ist, aber

03:54:10.600 --> 03:54:18.720
bei mir funktioniert das alles in den höchsten Settings ohne Probleme, war im Wald PogChain

03:54:18.720 --> 03:54:42.640
doch, war schon morgen schon, die Sache ist halt einfach, dass du dich nicht drauf verlassen

03:54:42.640 --> 03:54:51.640
kannst, das ist schon allein für die meisten Leute dann nicht brauchbar, weil wenn du dir

03:54:51.640 --> 03:54:55.240
ein Spiel auf Steam kaufst, den die Leute gewöhnt, du klickst auf install und du spielst

03:54:55.240 --> 03:54:59.880
das und musst nicht erst noch eine Woche warten oder vielleicht irgendwelche krassen Hacks

03:54:59.880 --> 03:55:04.400
und Tweaks machen, dass es funktioniert, das ist jedes mal so ein bisschen Zitterpartie,

03:55:04.400 --> 03:55:08.960
ja, neues Release gehts oder gehts nicht, klar es geht schon viel mehr als es noch vor

03:55:08.960 --> 03:55:23.680
10 Jahren ging, keine Frage, aber immer noch nicht genug, alles Pog aktuell, nee, der Typ

03:55:23.680 --> 03:55:30.200
hat das ganz gut zusammengefasst, wenns geht ist es gut, problematisch ist nur wenns nicht

03:55:30.200 --> 03:55:44.960
geht, Twice Baked Potatoes, ja so sieht das aus, alles klar, das kann aber auch nur so

03:55:44.960 --> 03:55:51.440
viel machen wie es machen kann, dort muss es erstmal Hacks geben, es muss erstmal bekannt

03:55:51.440 --> 03:55:56.840
sein, dann müssen sie ihre Datenbank updaten, es gibt vieles was man machen kann, aber es

03:55:56.840 --> 03:56:00.760
ist einfach weit davon entfernt zu sagen, jawoll ich kauf das und kann mich dann drauf

03:56:00.760 --> 03:56:06.880
verlassen, dass es geht, es ist eher so, ich kauf das und ich denke mit ein bisschen Glück

03:56:06.880 --> 03:56:21.000
gehts, ne Switch, was hat denn jetzt die Switch mit dem Steam Deck zu tun, das Steam Deck

03:56:21.000 --> 03:56:29.640
ist ein PC mit Steam OS drauf und die Switch ist eine Nintendo Konsole mit eigenen Spielen

03:56:29.640 --> 03:56:56.360
dafür, Pog ist verfügbar, danke falls du gesagt hast ich habs übersehen, also es ist

03:56:56.360 --> 03:57:05.880
halt ein bisschen Paynes Champ noch, bei anderen Sachen, ich weiß nicht wie es aussieht wenn

03:57:05.880 --> 03:57:11.360
es Leute gibt die tatsächlich sagen, ich hab irgendwie ein Adobe Abo und will den Kram

03:57:11.360 --> 03:57:15.760
unter Linux verwenden, ich hab keine Ahnung ob das annehmbar läuft aktuell, ich würde

03:57:15.760 --> 03:57:21.400
darauf tippen nicht und spätestens wo es aussteigt ist wahrscheinlich wenn du dann

03:57:21.400 --> 03:57:29.280
mit GPU rendern willst oder sowas, es ist halt so ein Zitterding, du weißt nicht ob

03:57:29.280 --> 03:57:36.440
es geht, Leute die beispielsweise ihre Steuersoftware verwenden, da wäre ich vorsichtig ob ich die

03:57:36.440 --> 03:57:42.120
über Wine laufen lassen würde, die meiste Steuersoftware ist ja 0815 Windows Anwendung

03:57:42.120 --> 03:57:47.760
die ganz gut laufen, aber ganz ehrlich, ich weiß nicht ob ich bei sowas risikoreichen

03:57:47.760 --> 03:57:52.240
irgendwie Steuern riskieren würde, dass das irgendeine Library nicht richtig lädt und

03:57:52.240 --> 03:58:00.320
vielleicht nicht ordentlich rechnet oder was weiß ich, ne ich würde einfach, ich würde

03:58:00.320 --> 03:58:12.040
das Sache nicht trauen, dass 100%ig das richtige Ergebnis rauskommt, ja oder, also deswegen

03:58:12.040 --> 03:58:18.040
das ist ja das was ich sage, wenn du alles im Browser verwendest, dann ist nahezu egal

03:58:18.040 --> 03:58:22.760
welches Betriebssystem du verwenden, da können sogar Tempel OS, wobei hat Tempel OS, hat

03:58:22.760 --> 03:58:40.480
das einen Browser, Tempel OS Browser, haben die sowas, oh Moment Tempel OS ist, GNU mag

03:58:40.480 --> 03:59:06.160
Tempel OS nicht, was ist da los, ne es gibt keinen, es gibt keinen Browser auf Tempel

03:59:06.160 --> 03:59:29.800
OS, ja Jesus braucht keinen Browser, da Spring braucht das Tempel OS auch nicht, so Leute

03:59:29.800 --> 03:59:36.760
4 Stunden bin ich am Start, passt auf die Sekunde, ich gehe jetzt off und wir sehen

03:59:36.760 --> 04:00:03.760
uns morgen früh spätestens, bis dann machts gut, see you.

