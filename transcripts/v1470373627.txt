Moin oder wie die Tagesschau
sagen würde guten Abend, weil ich so was aus Prinzip nicht sag. Ich sag meistens was geht.
Achja Leute, Woche vorbei. Ich sag euch, diese Woche wollten sie echt alle was,
also parallel, mehrfach, weirdchamp, höchst weirdchamp. Ich mein, Chico was machst du da?
Ja jetzt guck nicht so Chico. Chico schmeißt dir irgendwelche Sachen vom Schrank gerade runter.
Ja Chico, da guckste ja. Er hätte sich auch denken können, dass es mir nicht gefällt,
wenn du Sachen vom Schrank runter schmeißt. Das kann man sich nicht, das ist unmöglich,
das kann nicht sein. Was läuft sagt man heute? Achja ok, ich hab mal gesagt was geht. Ist das
quasi das neueste, wobei was läuft und was geht ist ja nicht viel Unterschied. Aber vielleicht
ist das so der Boomer Indikator, wenn man sagt was geht, das ist oldschool, wenn man sagt was
läuft ist besser. Das ist moderner, keine Ahnung. Sataris Chao Gong, da sind wir 23 Minuten zu spät.
Kann man auch jetzt ein bisschen leiser machen. Das ist mir fast schon zu relaxing die Musik,
da penne ich ein Leute. Ach ne ich sag euch ey, das wird ein Wahnsinn die Woche gewesen,
wo sie sich überlegt haben, dass 5 Leute parallel irgendwas von mir wollen. Ich frag mich wie die
sich das vorstellen. Kennt ihr das? Und wenn ihr dann sagt, es geht jetzt gerade nicht,
ich hab keine Zeit, dann hast du Leute die sind beleidigt. Ok, damit komme ich ja noch klar. Oder
es sind die Leute, die ignorieren das einfach. Kennt ihr das? Leute schreiben euch an und ihr
sagt gerade ich hab gerade keine Zeit und die schreiben einfach weiter. Oder sagen dann lese
einfach später, das ist ja auch ganz ok. Aber es gibt Leute die ignorieren das und sagen dann
noch sowas wie ach das geht doch schnell, kannst du nicht doch mal kurz gucken? Nein ich hab keine
Zeit. Ja aber guck doch mal kurz. Das ist immer nervig, vor allem wenn du halt Homeoffice im
Rechner sitzt und dann Teams die ganze Zeit macht. Moment ich simulier das mal kurz,
wenn dann Teams die ganze Zeit macht. Da machst du halt nix ne. Bonker ist. Oder wenn du in
Zustand, ja das ist egal. Das beste ist, aber das ist Recycled Story, ich weiß nicht ob die
Recycled Story Command User schon da sind. Das beste was mal war, ich wollte nett sein und
hab auf eine E-Mail geantwortet, die offensichtlich bei uns falsch gelandet ist. Und der hab ich
geantwortet, also ich kenn das nicht, aber wenn sie mir sagt um welches System es geht,
dann kann ich vielleicht an die richtige Stelle weiter weiterleiten. Und hat die Folge nervt
drauf geantwortet, es geht natürlich um das System mit dem wir täglich arbeiten. Und dann
dachte ich mir so, weißt du was, leckt mich alle, dann nicht. Was ist das für eine Antwort? Niemand
weiß doch was. Ich weiß, also ich mein, wenn ich schonmal nicht weiß wer das ist und was die will,
weiß ich bestimmt nicht welches System sie brauchen um täglich damit zu arbeiten. Das ist
also typisch, ich antworte normalerweise auf sowas gar nicht, weil du hast im Endeffekt wenn
du nett sein willst bei sowas, hast du mehr Stress als wenn du es einfach ignorierst. So blöd das
klingt, ja. Anstatt dass die Leute sich freuen, wenn du einfach sagst, ey ich versuchs mal weiter
zu leiten, bin ich nicht mehr zuständig, denken sie dann noch dich nerven zu müssen, weil du hast
ja respondet, weil wenn du respondet hast, bist du automatisch für verantwortlich so nach dem Motto.
Übrigens, wisst ihr was ich, ups jetzt hab ich irgendwo, irgendwo irgendwas getippt und ich weiß
nicht genau wo. Was ziemlich monkaessig ist. Ich weiß jetzt nicht ob ich irgendwas gestartet hab
oder so. Das ist nicht monkaessig, das ist monkaesg. Ach nee, ich hab gar nichts gestartet. Der
verkackte Avira ist immer noch drauf, ich hab den immer noch nicht auf meinem Stream Vorschau
Rechner gelöscht. Warum eigentlich nicht? Was mach ich damit? Das ist komplett useless,
der Crap. Braucht kein Mensch. Ähm ja, was ich euch erzählen wollte. Herzlichen zu Keller,
Dankeschön für den Zap. Sorry falls ich irgendwas übersehen hab Leute. Was ich auch lustig fand,
vielleicht hat das ja auch der ein oder andere auf der Arbeit. Wir haben um Hardware und wie
nennt man das? Wie nennt man das so schön heutzutage? Assets heißt das ja, um unsere
Assets zu, was heißt eigentlich Assets auf deutsch? Teile oder so was, Vermögenswert. Ah ja,
alles klar. Okay, okay, jetzt ergibt das Sinn. Ja, wenn man viele Assets hat, dann braucht man
einen Asset Manager. Das ist keine Person, das ist irgendeine Software und vielleicht kennt das ja
auch einer von euch. Wir haben, ungelogen, ich hab heute mal, wir haben uns heute drüber unterhalten,
wir haben fünf, fünf verschiedene Datenbank Management Tools, die nur ich kenne und die nur
wir, also nicht nur ich kenne mein ich, also es sind fünf, die ich kenne. Das heißt nicht,
dass es fünf insgesamt auch nur gibt. Und wisst ihr, wisst ihr was der Hit ist? Das hab ich so
gar nicht realisiert die ganze Zeit vorher. Wir haben fünf verschiedene und drei davon. Kein
Spaß Leute. Drei davon werden automatisch befüllt aus einer Excel Liste, die irgendein einzelner
Typ pflegt. Da fragt man sich natürlich, was ist die Existenzberechtigung dieser Systeme? Warum
sind die überhaupt da? Diese Systeme sollen Excel Listen überflüssig machen. Also ich, okay,
es stimmt nicht. Es stimmt nicht, es stimmt nicht ganz, was ich gesagt hab. Die werden nicht
komplett befüllt aus einer Excel Liste. Aber der Teil, wofür die Excel Liste da ist, der wird aus
der, quasi für Hardware Zuordnung, der wird aus der Excel Liste befüllt. Wobei es ja eigentlich
genau anders sein sollte. Es ist total, es ist total angeblieben. Ja, schön, dass ihr
ein wenig hergefunden hast. Wobei ich bin's ja gar nicht. Ich bin ja, ich bin ja Wubblors.
Aber, aber er leckt keine Critical Information. Er weiß es, wie es aussieht. Ja, das wird aus
irgendeiner Excel Liste gespeist. Kennt irgendjemand zufälligerweise diese Software hier, glaubt
sowas ist das. Kennt jemand die, die Asset, Asset Management Software von denen? Leute,
wenn ihr sie nicht kennt, macht einen riesen Bogen drum. Ihr müsst euch, ihr müsst euch mal
das Web Interface angucken. Guck mal, die haben immer Screenshots auf ihr. Ah, hier,
hier ist es. Exzellent. Guckt euch das mal an. Guckt euch das mal an. So sieht das aus, mann.
Im Jahr 2022. Guckt euch das an, Alter. Das ist so schlecht, mann. Das ist so schlecht. Das ist
irgendeine Software, wo du deine Server, VMs und Hardware drin verwalten kannst. Ein, wie man
Neudeutsch so schön sagt, ein richtiges Enterprise Programm. Wie man Neudeutsch so schön sagt,
ein Asset Management. Ja. Kennt jemand, kennt jemand von euch, Atlassian Inside? Das ist auch
ein Asset und Konfiguration. Das haben wir auch. Das haben wir auch zusätzlich. Das sieht dann,
das sieht dann so aus ungefähr. Wie viel kostet es? Ich habe keine Ahnung. Unsinnig viel
wahrscheinlich. Ach, die Zertifikat Story. Ja, das hat funktioniert. Hätte es nicht,
ich habe euch doch gesagt, hätte es nicht funktioniert, hättet ihr groß auf Heise oder
sonst wo lesen können, irgendwie Ausfall vieler öffentlicher Seiten von einer größeren deutschen
Bank. Das hätte es bestimmt auf Heise geschafft, wenn das Zertifikat ausgelaufen wäre. Hat
gerade funktioniert. Ja, aber ich sage euch Leute auf den alle noch eine noch geile noch geile
Story. Ich muss euch, muss euch das ja ab und zu mal immer erzählen und zwar das Zertifikat
sollte getauscht werden und ich weiß nicht, ob ich euch erzählt habe. Hab ich euch erzählt,
wann es abläuft? Ich weiß es gar nicht mehr. Ich glaube, Dienstag Abend oder so wäre das
theoretisch abgelaufen oder Mittwoch, ist auch egal. Nein, Dienstag tatsächlich. Nein,
Mittwoch. Ich glaube, Mittwoch, Mittag oder so ist abgelaufen. Ist auch wurscht. Zumindest
war das jetzt so, die haben es geschafft, den Zertifikatstausch unter 24 Stunden bevor
das Zertifikat ausläuft zu machen. Also normalerweise sagst du ja, okay, also mal so
zwei, drei, vier Tage vor. Also normalerweise ist Zertifikat easy mode. Ich weiß nicht,
wie das bei euch ist. Tut ihr euch da, wo ihr arbeitet, falls ihr in dieser Richtung arbeitet,
tut sich dieses Unternehmen auch so schwer mit Zertifikatsmanagement? Aber normalerweise
ist Zertifikatsmanagement von der Idee her relativ simpel, weil du weißt schon zum Zeitpunkt,
wenn du das Zertifikat bekommst, wann es abläuft. Das heißt, es sollte dir eigentlich nie passieren,
dass du irgendwie in die Verlegenheit kommst, es zu spät zu merken. Aber egal. So und sie
haben es geschafft, das so weit rauszuzögern mit dem Zertifikatstausch, dass es weniger
als 24 Stunden Zeit war, bis das Zertifikat abgelaufen ist. Das war schon, das war schon
grenzwertig. Aber jetzt kommt der Hit. Wisst ihr, warum sie das gemacht haben? Weil eigentlich
wäre Montag Zeit gewesen, Dienstag Zeit gewesen, überhaupt gar kein Problem. Kein Ding. Und
hätte man machen können, bis das abläuft. So, was hat man nicht gemacht? Das muss ich
euch die große Welt des Business Enterprise Stonks Business Managements erklären. Irgendwann
haben unsere Ober-Fivehead-Gurus sich mal überlegt, wenn wichtige Termine sind, dann gibt es einen
globalen Change Freeze. Das bedeutet, wichtige Termine können alles sein von der Vorstand
hält irgendwo eine Präsentation in Spanien oder es gibt irgendwie ein wichtiges Teilsystem
Release neuer Software. So, und mittlerweile ist es so, dass wir, also auf der einen Seite
tun wir es so, als sind wir super agil, aber die Realität ist jetzt das, was ich euch erzähle.
Wirklich agil ist da wenig. Und mittlerweile ist es so, dass wir, wenn es schlecht kommt,
ungefähr ein Drittel bis 50 Prozent des Monats komplettes Change Freeze haben. So meistens
irgendwas um 30, 35 Prozent, so würde ich mal sagen. Also ein Drittel des Monats ist
immer Freeze. Was bescheuert ist, weil viele Bereiche miteinander gar nichts zu tun haben.
So, zumindest hat sich ein Fiveheadiger Ober-Guru bei uns Folgendes ausgedacht. Wenn globaler
Change Freeze ist, dann darfst du nur was machen, wenn du persönlich oder irgendein
Change Manager oder so zu ihm gehst und ihm erklärst, warum dieser Change jetzt unbedingt
gemacht werden muss. So, und dreimal dürft ihr raten, was jetzt passiert. Wenn du jetzt
chat überlegt es euch mal. Ihr habt jetzt die Auswahl zu warten, bis der Change Freeze
vorbei ist, auch wenn das weniger als 24 Stunden bis das Zertifikat abläuft ist. Oder ihr
geht persönlich zum Ober-Ober-Ober-Chef und sagt, dieser Change muss heute noch gemacht
werden. Da sieht man mal, was solche Entscheidungen für absolut sinnlose Auswirkungen haben können,
weil was jetzt passiert ist, die Leute hätten eigentlich das Zertifikat locker drei, vier
Tage vorher tauschen können. Aber da war ja ein globaler Change Freeze und niemand traut
sich oder hat Bock, deswegen zum Ober-Ober-Ober-Chef zu laufen und zu sagen, wir müssen den Change
trotzdem machen. Und deswegen haben sie jetzt gewartet quasi 22 Stunden bevor das Zertifikat
ausläuft, weil da ist der Change Freeze ausgelaufen, das Zertifikat noch nicht ausgelaufen und
deswegen müssten sie dann auch nicht zum Ober-Ober-Ober-Chef laufen, deswegen wurde
das Zertifikat erst 22 Stunden bevor es ausgelaufen ist getauscht. Also ganz ehrlich, manchmal
fände ich es cool, wenn sich unser Big Brain Five Head Management die Auswirkungen ihrer
eigenen Entscheidungen öfters mal geben müsste. Und das ist auch so ein Ziel, was ich mir
für dieses Jahr vorgenommen habe, dass ich nach Möglichkeiten, wenn es irgendwas gibt,
von denen ich genau weiß, dass es an irgendwelchen Entscheidungen hängt, dass ich versuchen werde,
die Management eben öfters mit ihren Entscheidungen zu konfrontieren und zu sagen, das geht jetzt
nicht, weil ihr gesagt habt, das geht nicht. Nicht, weil wir nicht können, weil ihr gesagt
habt, das geht nicht. Und mal gucken, es kann zwei Sachen passieren, entweder können die
mich alle danach überhaupt nicht mehr ab, weil man hört ja selbst sowas ungern oder
sie ändern wirklich was. Die Wahrscheinlichkeit, dass was ändert, ist aber glaube ich relativ
gering. Ja, so sieht das echt aus. Es sieht wirklich super modern aus. Ja, ich weiß nicht,
was ich euch erzählt habe. Im Endeffekt ist es glaube ich, ich glaube, Mittwochabend
oder so oder Mittwoch irgendwie 18 Uhr oder irgendwas ausgelaufen. Ich hatte das nicht
so genau im Kopf. Ich habe es jetzt immer noch verdrängt schon wieder. Aber irgendwas
Mittwoch, Donnerstag, irgendwie so ist es abgelaufen. Ich glaube, Mittwoch. Ja, das
ist gut. So sollte man das eigentlich machen. Ja gut, mit Let's Encrypt ist es natürlich
was anderes. Ja, da geht das praktisch. Richtig, so sollte man das auch machen. Genauso sollte
man das machen. Also sprich, wenn man das Zertifikat bekommt, dann weiß man, wann
das abläuft, dann kann man das ohne Probleme schon einplanen. Mit automatisch verlängern,
das ist auch so geil. Mit automatisch verlängern haben wir es nicht so, weil wir hatten einen,
der war maßgeblich verantwortlich für das Zertifikatsmanagement bei uns. Steinartler5,
danke für den Sub. Der hat immer erzählt, Let's Encrypt Zertifikate sind nicht gut.
Und da hat er sich dann so Dinger ausgedacht, wie ja, das ist nicht so vertrauenswürdig
wie ein echtes Zertifikat. Das ist ein echtes Zertifikat. Mein Browser vertraut der Sache.
Warum soll man dem nicht auch vertrauen? Das ist außerdem alles interessiert aus irgendein
Endkunde, wenn er mal eine Webseite aufmacht, ob das ein Let's Encrypt Zertifikat ist oder
sonst was anderes. Ich meine, guckt euch mal Komodo an. Kann sich noch einer an den
Komodo-Rootkey-Klau erinnern? Rootkey-Diebstahl von Komodo vor ein paar Jahren? Also, dass
die jetzt wahnsinnig viel sicherer werden als Let's Encrypt, habe ich auch meine Zweifel.
Overwatch-Rent? Ja, ich habe mich ja heute ein bisschen drüber auf Twitter aufgeregt.
Gut, was soll ich sagen? Ich meine, hat irgendjemand ernsthaft einen Plan, warum Blizzard Overwatch
2 wirklich Overwatch 2 nennt? Ich nicht. Alles, was ich sehe, sieht nach irgendeinem etwas
größeren Season-Update oder so aus, vielleicht. Aber doch nicht nach Overwatch 2. Overwatch
2 sieht und schreit Overwatch 1 mit ein bisschen extra Content. Das ist das, was Fortnite in
einem, keine Ahnung, viertel Jahr zusätzlich an Content reingepatcht hat, zumindest als
die noch ordentlich abgegangen sind. Der Sprung von Overwatch 1 auf Overwatch 2, keine Ahnung,
was mit dem los ist. Ich glaube, ja, das ist so entstanden, Leute. Guckt mal, habe ich
Overwatch auf der linken? Ich glaube, die haben so gemacht, guckt mal. Die hatten auf
dem Desktop, hatten die Overwatch und dann ist dann irgendeiner von Blizzard hingegangen
und gesagt, fuck, was machen wir denn jetzt? Ja, hm, was können wir jetzt machen? Create
a shortcut können wir machen. Ah, Overwatch 2 ist am Start. Irgendwie sowas, was anderes
kann ich mir da nicht mehr erklären. Nee, das heißt das ja nicht. Das heißt ja nicht,
wenn Change Prince ist, dass man nichts macht, man muss ja auch Changes vorbereiten und so.
Keine Ahnung. Das ist halt die Business Enterprise Welt. Natürlich, die China-Chinesen und Russland-Hacker
müssen sich dran halten. Wenn wir Changefrees haben, dann wird da auch nichts gehackt, ist
doch ganz logisch. Wisst ihr, was witzig ist, dass die teilweise so weltfremd sind, dass
die ernsthafter Meinung sind, jetzt haltet euch fest, dass die ernsthafter Meinung sind,
dass wenn wir Changefrees machen und die Telekom parallel Wartungsarbeiten am Backbone macht,
dass das nicht durchgeführt werden soll. Das muss man sich mal vorstellen, als interessiert
das die Telekom, weil wir Changefrees machen, Alter. Aber das schwebt denen wirklich vor
und die sagen auch teilweise auf irgendwelchen Change-Runden dann zu unserem Provider, also
zu den Vertretern von unserem Provider, die da ab und zu mal anwesend sind, ja, könnte
man das nicht mit der Telekom klären, die Wartungsarbeiten zu verschieben. Da denke
ich mir immer, Alter, das ist doch nicht euer Ernst. Die Telekom wird ein Teufel tun, irgendwelche
Wartungsarbeiten zu verschieben, weil wir sagen irgendwo, keine Ahnung, der Vorstand
hält eine Präsentation, das ist doch verschieben die doch keine Wartungsarbeiten. Das System
und die Infrastrucke muss so aufgebaut sein, dass sie das abkann, dass eine Sache mal nicht
geht. Also das verstehe ich nicht. Ja, so Sachen sind auch immer beliebt. Wobei das
gar nicht so schlecht ist manchmal, wenn du dir was überlegen sollst, weil wenn das Leute
sind, die gerne einfach nur Sachen, die ihnen vorgelegt werden, abnicken, dann hast du
dann halt dementsprechend gute Möglichkeiten, das zu beeinflussen, was am Ende dann auch
gemacht wird. Aber ja, das haben wir natürlich auch so was. Übrigens, es gibt Neues. Es
gibt Neues von, ich muss mich jetzt mal ein bisschen, es ist Freitag, ich hab die Woche
nicht gestritten, ich muss mich jetzt mal ein bisschen auslassen. Es gibt Neues von
unseren Massive Fivehead Entwicklern, wobei es kann sein, dass ich euch das schon erzählt
hab. Im Rahmen dieses Zertifikats Tausches, was ich euch ja berichtet hab, hat ein Entwickler
gemeint, wir müssen das Zertifikat doch gar nicht tauschen. Wir haben gesagt, warum? Warum
müssen wir das nicht tauschen? Da meinte er, ja er hat nachgeguckt, das läuft bis 2050.
Wir haben gesagt, nein, das läuft noch drei Tage oder so, das läuft nicht bis 2050. Und
da hat der Kerl bei der RU-CA geguckt. Äh, nicht bei der RU-CA, bei der Zertifikat von
der CA, die das ausstellt. Nicht wirklich unser Zertifikat. Also, warum sind hier alles
so ahnungslos? Ich bin auch ahnungslos, ich sag ja gar nichts, ja. Ich mach auch oft genug
kacke und hab keine Ahnung. Aber wenn ich so tue, als kenne ich mich aus, deswegen tue
ich meistens nicht so, als kenne ich mich aus, wenn ich keine Ahnung hab. Also, wenn
ich, wenn ich sage, ich kenne mich aus, dann hab ich zumindest ein bisschen Ahnung von.
Aber es gibt Leute, die schaffen das wirklich, die haben, die ihre Lebensaufgabe ist, möglichst
kompetent wirken, ohne einfach eine Ahnung zu haben. Panda Code Live, danke für den
Sub. Oh, ich bin noch in Software- und Spielentwicklung, was mach ich denn da? Das ist doch komplett
falsch. Musste Just Chatting, heute wird nix entwickelt. Cack Wade, Alter. Falsch, falsche
Kategorie. Steinhalter, danke für den Sub. Ich weiß gar nicht, wann Overwatch 2 Release
ist. Ich glaube, ich glaube, so genau ist das noch gar nicht. Alter, YouTube, Mann. Das
kommt, Moment, kommt, nicht YouTube, was laber ich denn? Ich Google, aber Moment, kommt das
wirklich da raus? Bevor ich mich jetzt drüber lustig mache. Ich dachte, das ist noch gar
nicht rar. Die Season startet, ne, das ist doch, ne, das ist irgendwas anderes. Ich glaube
nicht, dass es da rauskommt. Der Label Drucker, ne, da hatte ich die Woche, hab ich nicht
viel dran gemacht. Ich hab ne Startseite programmiert mit dem Label Drucker, wo man Label speichern
kann, aber laden geht noch nicht. Das ist wohl wahr, aber ich glaube, ganz im Ernst,
ich glaube, Battlefield 2042 sollte hoffentlich Preyge Leute, Preyge, Battlefield 2042 sollte
nicht der Maßstab werden für aktuelle Spiele und Spieleentwicklung in Zukunft, weil das
wäre ganz schön schlecht, wenn das der Fall ist. Also stell euch mal vor, ich mein, es
ist jetzt nicht so, dass Battlefield 2042 in der heutigen Zeit irgendwie so krass ausgefallen
ist, aber es war schon ein neuer Negativpunkt. Also das Spiele unfertig rauskommen und kaputt
ist ja normal, aber Battlefield 2042 war nochmal ein Negativhighlight. Aufgeräumt der Desktop,
klar, ich find alles hier, alles da, easy. Kannst du was zum Softwarestack bei euch sagen
um welche Technik? Ja, kann ich sagen, was willst du wissen? Wir haben gesammelte Werke
aus bestimmt 30 Jahren IT-Geschichte und noch mehr, aber ich mein, wir haben noch IBM
Großrechner mit Kobol und sowas. Wir haben gesammelte Werke der letzten 50 Jahre bei
uns, aber wir haben auch was Neues. Wir haben auch relativ vieles in Azure, sowohl als VMs
als auch mit einem Managed Kubernetes Cluster. Oder was sind die hier? Einem sind mehrere.
Wie viel du donaten musst? Du musst gar nichts donaten. Du musst gar nichts donaten, weil
ich glaube, es kann mich fast nichts dazu bringen, jetzt Battlefield 2042 anzuwerfen.
Pan Timbo. Jetzt ist die Musik wieder leiser. Kannst wieder nicht entscheiden, die Playliste,
welcher Lautstärke es laufen soll. Ja. Kann das sein, dass das daran liegt, dass das andere
alles Ultra-Boomer sind, die das geil fänden, so uralt Stacks zu haben, sowas. Ich mein,
mit uralt meine ich jetzt nicht nur unbedingt uralt, weil da PHP drin vorkommt. Mit uralt
meine ich wirklich sowas wie irgendwelche Cobol Legacy Sachen und sowas. Keine Ahnung,
damit mache ich zu wenig. Keine Ahnung. Wahrscheinlich haben wir irgendwelche, du machst das wahrscheinlich
einfach nicht. Wahrscheinlich haben wir irgendwelche Microsoft Consultants gekauft, die das für
uns machen. Nee, habe ich nicht mitbekommen. Habe ich nicht mitgekriegt. Ja gut, das eine
Gear kann man nicht so einfach gegen das andere austauschen. Ich meine, es ist auf jeden Fall
eine richtig nice Sache, wenn man Docker-Erfahrungen, oder generell Linus-Container-Erfahrungen,
was ja in 90% der Fälle bei den meisten irgendwie am Anfang erstmal Docker ist, bringt natürlich
schon was. Gerade wenn du Images bauen musst. Ja, also das ist ja kein Docker-Standard, das
ist ja mittlerweile, wie heißt das, Open-Container-Standard oder so. Dieses Format, wie man das schreibt,
das ist nicht schlecht, wenn man das kann im Vorfeld. Ansonsten kann man es aber nicht
so wirklich vergleichen. Ich meine, Docker ist ein Linus-Container-Frontend, genauso
wie es Kubernetes ist im Endeffekt. Also unter der Haube sind das ja alles, oder LXC oder
Podman. Also von oben betrachtet sind das ja alles einfach nur Frontends für Linus-Container,
für die Kernel-Funktionalität für Linus-Container. Mit dem Unterschied, dass halt bei Kubernetes
das eigentlich fast der kleinste Teil ist. Da ist das ganze Cluster-Management, die ganze
Deployment-Geschichte und sonst was ist da ein viel, viel größeres Thema. Oder das
ganze automatisches Skalieren und sonst was. Also da ist Linux-Container ein kleiner Bestandteil
von. Zwar der Kern, ohne dass es nicht geht, aber es sind schon komplett zwei unterschiedliche
Welten eigentlich. Ja, 10k im Monat, da spiele ich auch Battlefield 2042. Und, ähm, keiner
was für Games gab es da noch, die ich in letzter Zeit so richtig beschissen fand. Da spiele
ich sogar Anthem oder Assassin's Creed Unity oder was auch immer. Ist mir egal, da spiele
ich was ihr wollt. Wobei ihr kennt mich, wahrscheinlich würden noch nicht mal das, wahrscheinlich
hätte ich da nach einem Monat keinen Bock mehr oder so. Und ich denke mir, who cares,
dann lass ich's bleiben. Oh, 12 Jahre Web. Ah, 12 Jahre Web heißt wahrscheinlich JQuery,
oder? JQuery war doch, also 2010 war JQuery eigentlich jetzt nicht mehr der neueste Shit,
aber immer noch ganz gut angesagt. Kam das erste Bootstrap nicht so in dem Dreh sogar
aus? Kam nicht, kam nicht, als es noch Twitter Bootstrap war, kam das nicht so 2010 rum
raus? Moment, das müssen wir mal kurz gucken. Wikipedia, Twitter, Bootstrap. Moment, warum
gibt es Framework und Frontend Framework? Achso, das ist deutsche Seite und. Ja, 2011, guck
mal, war ich gar nicht so schlecht, oder? Smartie, Smartie kenne ich, Smartie kenne ich. Das
ist irgendein PHP Template Framework, oder? Wenn ich nicht, wenn ich nicht so Template
Sprache für PHP, oder? Wenn ich das jetzt noch richtig zusammen kriege. Sponsors, allcasinos.japa,
das klingt super, super, das. Sonntags. Ja, das ist Smartie, genau. Crap, Alter, richtig,
richtig abartig. Ja, das kenne ich. Ich hatte aber glücklicherweise nie die Ehre, dass
ich da drin was machen musste. Es ist PHP, ohne Scheiß, Leute. PHP ist gar nicht so
schlecht. Also PHP mit Laravel oder irgendwas. Das geht, das ist nicht schlecht. Was schlecht
ist, ist entweder uralt PHP Legacy Zeug zu machen, oder aber, wenn man der Meinung ist,
auch in 2022 alles von Hand zu machen, ja? Also irgendwelche Cookie Geschichten von Hand.
Login, generell, login. Ich würde im Leben nicht auf die Idee kommen, in der heutigen
Zeit Authentifizierung selbst zu machen. Nie, nie würde ich Authentifizierung selbst machen.
Also, wenn es ein öffentlicher Service ist. Ja, wenn es was Internes ist, dann sieht das
wieder anders aus. Wenn es ein öffentlicher Service ist, würde ich nie Authentifizierung
selbst machen. Es gibt so viele Sachen vom Microsoft-Account bis zum GitHub-Account,
bis zum Google-Account, mein, welche Facebook-Account. Die haben alle irgendwelche OAuth und Token-Geschichten,
kannst alles supporten, Apple-ID, was auch immer. Das ist für den Public Service alle
mal besser, als diesen Krämpel selbst machen. Du magst Golang? Ja, ich muss sagen, ich muss
mir unbedingt Go mal wieder angucken, jetzt wo es Generics hat. Leute, jemand schon Generics
verwendet in Go? Das ist ja erst ein Monat oder so raus. Ist das, haben sie das gut gemacht?
Ich habe auch ein bisschen was mit Go gemacht, die letzte Zeit. So haben wir sogar im Stream,
glaube ich, mal ausprobiert. Ich hatte mir so eine WebRTC-Kamera-Stream-Seite gebaut
für meine Kameras, die ich glücklicherweise nicht mehr brauche, weil Home Assistant es
mittlerweile eingebaut kann. Und da habe ich das WebRTC-Zeug mit Go gemacht. Und Go, ich
weiß nicht, ich werde mit Go nicht so richtig warm. Ich meine, wenn ich die Auswahl habe
zwischen irgendwie so abartigen Sachen wie C++ oder so oder Go, dann ist es ganz klar,
dass ich Go nehme. Aber so richtig warm werde ich mit Go nicht. Ich verstehe manche Sachen
in Go nicht. Du hast auf der einen Seite irgendwie drei, vier verschiedene Möglichkeiten, wie
du Variablen anlegen kannst, schön und gut. Aber dann hast du so Sachen wie, ja, mach
mal drei nested vorschleifen, weil wir keine gescheite Filterfunktion für den Array haben
oder sowas. Und die Syntax ist teilweise auch irgendwie merkwürdig. Aber man sieht
es, Go natürlich nicht schlecht. Da sieht man allein schon daran, wie viele Projekte
auf GitHub. Ich glaube, wenn du auf GitHub guckst, dann dürfte Go wahrscheinlich hinter
JavaScript oder so mit die... Bei was? Da gab es doch hier so eine Umfrage, GitHub. State
of the Octaverse, genau. Programmiersprachen, was ist denn hier am liebsten? Hier, Python,
okay, nee. Top Languages, JavaScript, Nummer eins, Python auf zwei, Java Teil... Das kann
nicht sein. Wo ist denn Go? Go muss da dazwischen sein. Hä? Gerade da sind so viele Sachen
in Go, das kann nicht sein, dass Go da nicht drinsteht. Also Go ist doch definitiv vor
Ruby, man. Oder vor Shell. Und bestimmt auch vor C-Sharp. Moment, das muss doch sonst
wo stehen. Das glaube ich nicht. Das glaube ich nicht. So neu ist das auch gar nicht,
genau. Ich glaube, Golang ist auch schon 20... Nee, 20 Jahre netter. Aber zehn Jahre
auf jeden Fall schon. Wann kam denn die erste Go-Version raus? 2009, ja. Siehst du mal,
das ist 13 Jahre alt. 12. Was? Oh nee. Nee, hör mal auf. Du meinst C++23. Dazu kann
ich nur sagen, das richtet sich jetzt an C++23. Bloß nicht. Das ist schon... Allein schon,
wenn ich die C++23 Vorschläge lese, beziehungsweise sämtliche Vorschläge sind ja quasi, was
jetzt eingeplant wurde zum Aufnehmen in C++23, da kriege ich Anfälle. Ich mein... Passt
mal auf. Ich zeige euch das mal kurz. Wir gucken uns das nicht an. Ich will plus. So.
Moment. Ja. Ich mein, String bekommt jetzt eine Contains-Funktion. Das ist ja schon mal
ganz toll. Ich dachte eigentlich, das hatte schon seit 15 Jahren, aber hat es anscheinend
nicht. Wobei es sich ja hier nicht um String handelt, sondern um Basic String. Und weil
das C++ ist, weiß wahrscheinlich auch niemand so genau, was der Unterschied zwischen Basic
String und String ist. Wobei ich weiß es, weil ich habe nachgeguckt. Basic String ist
quasi das Interface für jegliche Stringtypen und Standard String ist quasi die Implementierung
dieses Interfaces für Character-Based Strings. Was auch immer. Was ist die Existenzberechtigung
davon? Ich weiß es nicht. Aber C++ Leute haben sich gedacht, yep, das ist eine gute
Idee. So muss das sein. Man könnte ja eine eingebaute Stringklasse machen, die vielleicht
mit irgendwie, also ich lehne mich jetzt mal ganz weit aus dem Fenster, aber vielleicht
eine eingebaute Stringklasse, die mit UTF-8 klarkommt. Oder Unicode in irgendeiner Variante.
Kann auch UTF-16 sein. Also die C-Sharp-Strings intern sind glaube ich UTF-16. Aber man könnte
ja, also es wäre ja möglich, dass man eine gescheite Stringklasse einbaut. Weil ich glaube,
es gibt nichts mehr in C++ als unterschiedliche Stringklassen. Jeder hat eine eigene Stringklasse.
Arduino hat eine eigene Stringklasse. Qt hat eine eigene Stringklasse. Die Standard Library
hat 50 Stringklassen. Jedes Framework hat eine eigene Stringklasse, weil C++. Ja, das
ist Rust übrigens auch. Rust ist übrigens auch UTF-8 only. Und ich glaube Flutter auch.
Also Dart. Zymfony habe ich schon nie benutzt. Ich habe das einzige PHP, was ich je benutzt
habe, mal ernsthaft, war Laravel. Und ich habe ganz, ganz früher mal ein paar Sachen
gebaut in PHP. Zum Beispiel Forum-Signaturen für Online-Spiele. Das war aber 2005, 2006
oder so rum. Das ist lange her. Da habe ich für Forensignaturen PHP gebaut, weil die
Leute wollten dort, für dieses MMO, was ich gespielt habe, wollten in ihrer Signatur
Kills, KD und so was in der Richtung, sag ich jetzt mal, Punkte und so was, wollten die
Leute in ihrer Forum-Signatur haben. Und da habe ich so gemacht, ich habe ein PHP-Programm
auf dem Serverseite laufen lassen, was Signaturbilder mit Text-Overlay hatte. Das war PHP ganz
cool, weil PHP hatte eingebaut ein Modul, wo du auf PNGs rummalen konntest. Eigentlich
ziemlich cool für die damalige Zeit. Da habe ich Forum-Signaturen generiert. War der letzte
Schrei, fanden sie super. Hat sich alle gefreut. PHP, also nicht über PHP, über ihre Forum-Signatur.
Das war natürlich alles hardcoded, ja. Also wenn einer eine Signatur haben wollte, musste
er mich anschreiben im Forum per PN, musste seine ID, seine Dings und die Stats, die er
haben wollte, mir sagen. Und das Hintergrundbild, weil ich das Hintergrundbild haben will, da
habe ich ihm quasi das Copy-Pasted die Datei und habe es angepasst. Also ich hatte dann
am Ende irgendwie, keine Ahnung, 120 PHP-Files, weil Input-Parameter und so Dinger, pff, was
kommen wir denn dahin? Du sagst immer, PHP hat den Vorteil, dass es überall ist. Das
ist richtig, ja. Aber das ist ja kein direkter Vorteil der Sprache, sondern das ist so. Da
hast du recht. Aber es ist nicht, dass du draussen den Vorteil von PHP, wo der jetzt
kommt, ist ja egal. Aber ja, das macht PHP nicht unbedingt zur besseren Sprache, aber
PHP läuft überall. Jedes billige, nur nach 15,50 Cent Webhosting hat PHP. Versuch da mal
irgendwas in.NET drauf zum Laufen zu bringen oder mit Node oder sonst was kannst du knicken.
Naja, das ist alles Server-Side, solange es Klein-Side ist. Also, nee, was ein Satz
wieder, Alter. Das ist alles Server-Side, bis es Klein-Side ist. Exzellent. Leute,
heute habt ihr was gelernt. Also, es ist alles Server-Side, bis es Klein-Side ist. Wobei,
die Sache da ist ja, wie sieht das mit Server-Side oder nee, wie nennt sich dieser neueste Krämpel?
Server-Side, nee, nicht Server-Side Rendering, sondern Server-Side Generation oder so, wo
du die Seite initial Server renderst. SSG, genau, wo du die Seite auf dem Server renderst,
aber dann an kleinen schickst und der weitermacht. Das ist ja so ne Mischung.
Der Schule noch PHP beigebracht, ohne irgendwelche Frameworks. Oh, das ist eklig. Ganz ehrlich,
das ist ein bisschen wie in den Schulen, wo die heute noch mit C oder C++ anfangen. Ich
meine, C mag ja gut und schön sein, aber nicht zum Einstieg und C++ ist eigentlich
so gut wie nie schön, außer du kommst nicht drum herum. Das ist eine gute Möglichkeit,
die Leute abzuschrecken. Also, wenn die Leute keinen Bock haben sollen, darauf programmieren
zu lernen, dann fangen mit C und C++ an. Oder PHP. Was heißt für dich warm? Weiß nicht.
Nee, ich weiß nicht mehr, worauf sich das bezieht, weil ich bin zu weit mit dem Chat
hinterher. Womit fängt man dann an zu programmieren? Ja, was, Crypto ist nicht schlecht. Dornett
ist auch nicht schlecht. Go ist nicht schlecht. Einiges. Ich brauche keine Code-Reviews. Selbst...
Äh, nee, was wollte ich sagen? Guter Code dokumentiert sich selbst. Das muss man nicht
reviewen. Und wenn man keine Fehler einbaut, auch nicht. Ist SSG das einfache, typische
Arterium, was man früher gemacht hat? Nee, nee, nee. Kann ich gleich was zu sagen. Nee,
aber ernsthaft jetzt dazu. Also meine Code-Reviews, das hält sich ja in Grenzen. Ist jetzt nicht
so... Ich gucke mir zwar den größten Teil des Tages, wobei in letzter Zeit weniger,
glücklicherweise, aber ich habe mir meine Zeit lang zwar zum größten Teil Code angeguckt,
weil andere Leute schreiben, aber, und da bin ich eigentlich ganz froh, wir haben das so
gemacht, ich habe dann im Prinzip nur noch mal drüber geguckt und da schon auch die
ein oder anderen Sachen gefunden, was weiß ich, von falschen Hostnamen, wo sich einer
vertan hat oder irgendwelche Bedingungen, die vielleicht falsch sind oder was auch immer,
aber wir machen das meistens so, zumindest bei uns im Team ist das intern so, dass derjenige,
der den Merchrequest aufmacht, der nimmt noch einen zweiten dabei und weiß dem das zu zum
Reviewen, der Ahnung von dem Thema hat. Also es bleibt dann glücklicherweise nicht an
mir hängen, was aber auch sinnvoll ist, weil ich von den meisten Sachen inhaltlich wenig
Plan habe. So, ich sollte das vielleicht mal weiterlesen. Also meistens weiß das ein oder
zwei Leute zu, die von dem Thema Plan haben, was ja auch sinnvoll ist. Das einzige, was
er nicht machen darf, ist sich selbst zuweisen. So, Bugfixes mit wenig Änderungen sind kein
Problem, aber bei größeren neuen Features weiß ich nie, wie genau ich mir das anschauen
soll. Tja, das gar nicht im Zweifelsfall, wenn du von dem Teil, also je nachdem wie
komplex das Ganze ist, kannst du da auch nicht auf die Schnelle durchblicken. Deswegen ist
ja grad der Sinn, am besten ist es, wenn jemand, zumindest mal für die groben Sachen, sich
das einer anguckt, der entweder von der Anwendung wofür das ist. Ich meine, das betrifft ja
irgendwie alles. Es ist jetzt egal, ob das eine Java-Anwendung ist, ob das vielleicht
Ansible-Code ist für Cloud-Server-Automatisierung oder sowas, ob das Webseiten-Kram ist, das
ist im Prinzip wurscht, ja. Aber wenn du jetzt quasi zentral dafür zuständig bist,
sagen wir mal, irgendwie das Repo zu betreiben, zu gucken, dass so die Abläufe eingehalten
werden, keine Ahnung, regelmäßig die Sachen zu taggen, zu merken, sonst was, dann kannst
du dir das im Zweifelsfall zwar angucken, aber hast keine wirkliche Ahnung, warum und
wie, weshalb das gemacht ist. Du kannst da zwar Comments dran schreiben, aber ich meine,
du kannst auch so einfache Sachen gucken, wie, keine Ahnung, hat er richtig eingerückt
oder sowas, wenn es sein muss. Ansonsten, ganz ehrlich, wahrscheinlich gar nicht. Ich
bin der Meinung, das sollen Leute machen, die sich in dem Fall mit der Anwendung auskennen.
Und ansonsten, wenn es natürlich eine Anwendung ist, mit der du dich auskennst und auch wenn
es eine Größeanwendung ist in dem Bereich, ja, dann fällt mir nichts anderes ein, wie
Comments posten zu den einzelnen Zeilen, wo dir was auffällt und wenn du es nicht verstehst,
was die Leute fragen, weil, achso, ja, braucht man Stunden, ja, kommt drauf an. Es kommt,
also, ja, also im Zweifelsfall, ja, wenn es was wirklich Großes, Umfangreiches ist,
was auch so kommen soll und quasi zusammenhängend ist, ja, dann dauert das eben eine Weile.
Das ist richtig. Es ist natürlich cooler oder praktischer, wenn man das irgendwie schafft,
ein bisschen unabhängig voneinander zu machen. Also es kann ja sein, zum Beispiel, dass man
jetzt denken wir uns mal irgendeinen Feature aus, ja, keine Ahnung, meine Anwendung soll
jetzt demnächst Twitch Emotes unterstützen. Jetzt kann ich natürlich einen riesen Pull-Request
machen, äh, Edit Support Twitch Emotes. Und ihr wisst, wahrscheinlich würde ich es auch
so machen, aber, aber das besteht ja wahrscheinlich aus unterschiedlichen Teilen, ja, keine Ahnung.
Du brauchst irgendwie in deinem Backend die Funktion, dass das überhaupt Twitch Emote
Fetched. Dann brauchst du in deinem Frontend irgendwas, was, ähm, vielleicht ein Emote
Selektor einbaut oder irgendwas, das Didioules zusammensetzt für FFZ und Better Twitch TV
oder keine Ahnung, irgendwas, was, äh, Doppelpunkt-Emote-Geschichten hier passt, irgendwas, was Vorschau anzeigt
oder sowas. Also da sieht man ja schon, dass ich sowas aus 5, 6 verschiedenen Sachen zusammensetzen
kann. Und das ist natürlich nice, wenn man das zusammen, äh, wenn man das getrennt anstatt
zusammen macht, wenn das geht. Weil dann ist das nicht so groß und im Zweifelsfall sind
die Dinger dann auch unabhängiger voneinander, was heißt, die Chance, dass du mit dem einen
was anderes kaputt machst, ist geringer. Aber das ist natürlich in der Theorie alles
schön und gut, am besten ist einfach keine Fehler programmieren und dann braucht man
das alles nicht. Aber wenn das was wirklich großes, komplexes, umfangreiches ist, was
zusammenhängt und sich nicht trennen lässt, dann dauert das. Ja, das ist richtig. Da kann
man nicht viel machen, glaube ich. Oder checkt, was sind eure Five Head Code Review Tipps.
Ja, leider geht Ruby so bergab, Leute. Ich mag Ruby. Ruby ist niemals.NET bzw. niemals
die Plattform, meine Lieblingsprogrammiersprache. Next.js. Ich habe jetzt rausgegeben, das Leute,
das müssen wir uns demnächst auch anschauen. Ich habe jetzt mitgegeben, dass Nuxt 3 rausgekommen
ist. Das ist sowas wie SvelteKit, bloß für View. C++ Gremium. Die Leute beim C++ Gremium
machen vor jeder Sitzung den hier. Du darfst sonst nicht rein. Das ist quasi mandatory
Vape Nation, bevor du überhaupt Einlass bekommst. Ja, so ist es. Guck mal, sag nichts Weißes.
Nein, Moment. Mario, danke für den Sub. Strangling in C ist immer eine Katastrophe. Es muss ja
nicht sein. Die könnten ohne Probleme irgendeine gescheite Stringklasse machen in C++. Ich
meine, die haben das hingekriegt. Guck mal, es gibt so viele Sprachen, im Prinzip so gut
wie jede Sprache, die in den letzten Jahren rausgekommen ist, hat eine halbwegs gescheite
Stringklasse. Von Swift, Rust, Go habe ich jetzt gar nicht im Kopf, wie featurereich
die ist. Die Stringklasse aus Dortnet, Ruby, Python, alles, alles besser. Und die sagen
doch immer so großkotzig, ja C++, nee nee, C++, komplex, kompliziert, man konnte sich
den Fuß schießen, nee nee, das ist nicht das C++ von heute. Modern C++ ist viel besser
und hat alles krasse Features und so und dann kommt sowas im Endeffekt. Leute, wo habe ich...
ich habe jetzt eine andere Option benutzt, manjaro mit i3wm, korrekt, Acrege. Naocchi
ist eine der besten Erfindungen des Internets. Da könnte man weitergehen und sagen, V8 ist
eine der besten Erfindungen, wobei das ja nicht das Internets ist. In dem Fall ist es
eine Erfindung von Google, V8, aber eine der besten Erfindungen seit Erfindungen des Internets
könnte man sagen, ja. Outdoor-Überwachungskameras, kann ich dir gleich was zu sagen, ja. Also
ich kann dir die empfehlen, die ich mir letztens gekauft habe, noch zusätzlich, die ist gar
nicht schlecht, mache ich aber gleich. Ich bin noch von einem Inhouse-PAP-Fra... oh,
das ist bitter. Selbstgestricktes PHP ist ja noch mal schlimmer als... also ne, Moment,
von anderen selbstgestricktes PHP, was man benutzen muss, ist noch mal schlimmer als
irgendwelche PHP-Sachen allgemein schon. Ich verstehe den Sinn gar nicht davon der heutigen
Zeit, ohne Scheiß. Nimmst du halt Laravel? Das ist das einzige, was ich kenne, es gibt
bestimmt noch mehr. Was gibt es denn sonst noch für gescheite PHP-Frameworks? Weiß
ich nicht. Und gut ist. Ja, aber Node.js ist wirklich eine gute Erfindung. Ich weiß das
mittlerweile auch zu schätzen, dass es Node.js gibt. Ich mache mich ja immer ganz gerne mal
ein bisschen über JavaScript und sowas lustig. Ah, noch mehr über Java, wenn man ehrlich
ist. JavaScript habe ich mittlerweile eigentlich wenig Probleme. Das JavaScript-Gremium, also
dieses ECMAScript-Konsortium oder was ist das überhaupt? Keine Ahnung. Die JavaScript-Dudes
da. Die könnten den C++-Jungs mal zeigen, wie man ordentlich neue Sprachversionen macht,
wo sinnvolle Features eingeführt werden, die auch vielleicht, keine Ahnung, die erprobt
wurden auch schon in anderen Sprachen, wo man nicht das gerade neu erfinden musste. Diese
ganze Async Await-Geschichte zum Beispiel haben die ja auch nur in Anführung geklaut,
so wie jede x-beliebige andere Programmiersprache auch, die es mittlerweile hat. Die haben viele
gute Sachen eingeführt in JavaScript die letzten Jahre über. Und C++ schafft es halt
nicht. Und wo Node.js tatsächlich richtig nice ist, das ist mir jetzt erst wieder aufgefallen
als ich am Label-Champ programmiert habe, ich habe mir überlegt, man könnte es doch
so machen, dass die Server-Seitig die Labels über eine API ein bisschen ändern kann,
anderen QR-Code ran, andere Namen rein, falls jemand da drüber mal ein Namensschild oder
so drucken will. Und dann könnte ich nämlich das komplette Browser, den kompletten Browser-Code
für den Label-Editor nehmen und in Node.js laufen lassen und dort was malen lassen, ohne
dass ich wirklich einen Browser brauche. Also Node.js ist schon eine gute Erfindung. Ich
muss aber sagen, ich bin natürlich nicht der krasse JavaScript-Hackermann. Ich habe
noch keine große Node.js-Backend-Anwendung gemacht, habe ich auch ehrlich gesagt nicht
vor. Weil die Frage an die Leute, falls das jemand von euch schon gemacht hat, oder sei
es auch ein bisschen was größeres selbst gestrickt hat, ist es wirklich so ein großer
Vorteil, dass man Sachen zwischen Frontend und Backend scheren kann, von der Idee her.
Also man könnte ja sagen, irgendwelche JavaScript-Objekte, die sind halt im Backend und im Frontend,
das sind halt die gleichen JavaScript-Objekte, weil es ist halt JavaScript. Ist das wirklich
so ein großer Vorteil? Weil im Prinzip machst du, so stelle ich es mir zumindest vor, machst
du doch eh komplett anderes Handling mit irgendwelchen Objekten auf dem Backend wie
im Frontend und brauchst dann vielleicht auch ganz andere Felder und sowas. Wenn ich mir
zum Beispiel angucke, wenn ich mir irgendein Objekt in meinem.NET-Backend angucke, was
dann im Endeffekt vielleicht auch in der Datenbank landet oder so, das hat doch ganz
andere Felder als das, was ich letztendlich davon im Frontend hinschicke. Ich brauche
auch keine ID oder UID oder irgendwelche Timestamps oder sonst was. Das brauche ich im Backend
für irgendwelche Datenbank-Campel oder irgendwelche Magic-Logik, aber die brauche ich ja im Frontend
nicht. Okay, also der Chat sagt, das ist sinnvoll. EU-Voice-Video, zwei Social-Staaten in der
Pilot-Falle. Was? Was ist das? Stadt Bremerhaven-Block, das ist tatsächlich ein gutes Blog, ich
weiß nicht, warum es Stadt Bremerhaven ist. Das habe ich bis heute nicht verstanden. Warum?
Zwei Social-Media-Plattformen starten die Pilot-Falle im Moment. Das ist aber nichts
offizielles von der EU, oder? Das geht doch komplett nach hinten los wieder. Also, ganz
ehrlich, ich habe schon keinerlei Vertrauen in deutsche IT-Projekte. Aber in EU-IT-Projekte?
Anscheinend, ja. An der Pilotphase nehmen diverse EU-Institutionen Ämter sowie Agenturen
teil. Ist dann wahrscheinlich genauso erfolgreich wie die elektronische Gesundheitskarte. Oder
dass man mit seinem Pär sowas anlocken kann. Als Basis? Ah, okay, das kennt man, das kenne
ich nicht. Sag dir Web-Spell. Was? Und Ilsch? Ilsch? Was ist Ilsch? Ne, habe ich nie gehört.
ESSG. Ja, Server-Side-Generation. Ich glaube auch, dass C++ einfach aus historischer Sicht
noch da ist. Wenn man sich überlegt, dass so Sachen wie ein ESP32 ja schon ziemlich
verbreitete Plattform ist, hat sich da bis heute nichts anderes nennenswert durchgesetzt
als C++. Ich weiß, dass man den Krempel theoretisch mit Micropython und theoretisch auch mit Lua,
wobei ganz ehrlich, also bei Lua fällt mir auch nichts mehr ein. Weiß gar nicht, warum
so Leute heute irgendwas mit Lua machen. Ich weiß, dass man das theoretisch machen kann.
Aber gerade Micropython ist so ein Ding von der Idee her cool, aber ich habe mal nachgeguckt,
während du mit dem ESP32-Webserver sogar bis zu fünf Sessions gleichzeitig machen kannst
mit Verschlüsselung, schafft das Micropython gar keine Verschlüsselung. Also er kackt
ab out of memory, wenn du harte DPS-Verbindungen aufbauen willst. Also, tja. Ja, da sieht man
aber, der Kram ist halt wirklich tief verwurzelt. Und ich wundere, dass es noch keine gescheite
Entwicklungsumgebung bzw. halt generell Implementierungen, oder wie soll man das richtig nennen? Ja,
wir nennen das mal Implementierung für den ESP32 gibt. Nur Rust, es gibt ein paar Versuche,
aber wirklich benutzbar ist davon nichts. Genau, das meine ich. Patroclaws. Oh, das
ist exzellent griechischer Name hier. Server-side-generation plus hydration, das meine ich. Aber gerade
beim Thema Hydrate, ich muss mich hydraten. Exzellent. Ist das Eddy? Nee, irgendjemand
anderes. Ihr habt mit Wishful Basic angefangen. Ich habe mal einen Wishful-Basic.net-6-Kurs,
nee, nicht.net. Einen Wishful-Basic-6, wie komme ich auf.net? Das gab es damals nicht.
Ich hab mal, als ich sehr jung war noch, zu Zeiten als Half-Life 1 angesagt war, einen
Wishful-Basic-6-Kurs gemacht in der Schule. Ich würde behaupten, das geht doch wahrscheinlich
ganz gut klar, oder? Man sei froh, dass es nicht C++ ist. Womit man sonst anfängt zu
programmieren? Wie gesagt, JavaScript ist ein guter Einstieg, weil du brauchst halt
nichts außer einen Browser und einen Text-Editor. JavaScript ist ein guter Einstieg..net C-Sharp
ist ein guter Einstieg. Go ist ein guter Einstieg. Ich persönlich hätte ja früher gesagt Ruby,
aber Ruby ist vorbei. Python ist auf jeden Fall auch ein super Einstieg. Es gibt Leute,
die behaupten, C++ wäre auch ein guter Einstieg. Da muss ich aber immer kecken, wenn ich sowas
höre. Ich dachte immer, es soll jeder mögen, was er will, und machen, was er will. Solange
man andere Leute damit in Ruhe lässt, aber bei C++ hört der Spaß auf. Da ist es vorbei.
Als du den IT-Assi gemacht hast, ist das ein krasser Slangbegriff, oder ist das für Assistent-Abkürzung?
Haben wir zweier kompletten Mainfokus auf C++ gelegt. Jetzt in die AE-Ausbildung,
sie schaffen gar kein C++ mehr. Ja, ich verstehe es auch nicht. Es ist abfuck mit C++. Also
gerade zum Einstieg schreckst du die Leute doch extrem mit sowas ab. Ist ja auch so.
Ja, das ist eine gute Entscheidung. Das geht aber nur, wenn euer Lehrer kein ex-Matte-Lehrer-Boomer
ist, der mal vor 30 oder 40 Jahren ein bisschen programmiert hat und das jetzt in der Schule
unterrichten darf, weil sonst keine Ahnung hat. Dann endest du dann immer bei irgendwelchen
C-Leuten. Oder noch schlimmer. Ist SSG das einfache typische HTML, wie man es früher
gemacht hat? Nein. Also rein SSG, Server-Side-Generation, ist das typische HTML, wie man es früher
gemacht hat. Zumindest das, was am Ende rausfällt. Also du kompilierst quasi alles vor, wenn
man es so will, sodass alles statisch am Ende ist. Aber was ich damit gemeint habe, ist,
was zurzeit angesagt ist, ist die Mischung aus Frontend-Anwendung und Backend-generiertes
HTML, also Server-Side-Gerendertes. Also quasi Server-Side-Rendering plus Frontend. Und das
funktioniert folgendermaßen, dass Backend erstellt, soweit es kann, schon die Seite fix
und fertig. Also macht das HTML. Lässt auch JavaScript-Server-seitig laufen, deswegen
klappt das meistens nur, wenn da irgendein Node läuft. Lässt JavaScript-Server-seitig
schon laufen und macht die Seite so fertig, dass man sie rüber schicken kann zum Client.
So und dann kriegt der Client die Seite, also das HTML und alles geschickt plus quasi den
aktuellen, nennen wir es mal, State vom ganzen JavaScript-Gedöns. Und der Client setzt das
dann quasi fort an der Stelle, wo der Server aufgehört hat zu rendern. Also das ist dann
quasi, wie jemand geschrieben hat, Server-Side-Rendering plus Hydration, weil muss cool klingen. Und
das hat den Vorteil, dass du die Seiten relativ schnell gerendert bekommst plus sie dynamisch
sein können, wie man das halt mit einer Kleinzeit JavaScript-Anwendung kennt. Und Suchmaschinen-Optimierung
ist halt viel besser, weil die Suchmaschine auf die Seite geht und halt schon HTML-Sachen
findet. Wenn du reine Kleinzeit-Anwendungen hast, findet eine Suchmaschine ja nix. Außer
vielleicht entfällt diese Seite geht nicht ohne JavaScript. Ja, das finde ich gut, wenn
die Schule das so macht. Ich finde, es kommt beim Programmieren auf das, was man macht.
Das ist wohl wahr, aber die meisten Leute haben da noch gar keine so genaue Vorstellung
davon. Ja, das ist tatsächlich, das ist ja das, was ich auch oft sage. Also wenn man
zum Beispiel schon weiß, was man machen will, wenn man Sachen wie Webseiten machen, dann
ist klar. Wenn man sagt, man möchte irgendwelche Machine-Learning-Sachen vielleicht rumbasteln
oder so, dann weiß man auch klar, was man nimmt. Aber die meisten Leute wissen es ja
nicht. Die meisten denken, ich würde gerne mal ein bisschen was in der Richtung machen,
mir das angucken. Die sind quasi noch lange davor überhaupt zu wissen, was sie machen
wollen überhaupt. Und da finde ich eigentlich JavaScript im Browser und im Text-Editor immer
noch ganz gut, weil du siehst visuell was und du brauchst im Prinzip nichts zum Einstieg.
Du hast quasi schon alles auf dem Rechner drauf, was du brauchst. Wenn es nicht gerade
Notepad ist... Vollzeit C++-Dev, okay, das würde ich nicht lange machen. Entweder wäre
ich danach doppelt so fett wie jetzt, weil ich den ganzen Tag fressen müsste, dass ich
das aushalte. Oder ich würde abkratzen, das würde ich nicht auf die Reihe kriegen. Vollzeit
C++, ne, im Leben nicht. Wie sieht dein Arbeitsalltag aus? Außer langweilige Meetings. Oh ja, sehr
viele langweilige Meetings. Was kann man sich so vorstellen? Das ist ganz einfach. Ich
hab dazu ein Video gemacht. Musst du dir mal auf YouTube angucken. Guck mal, das heißt
sogar schon, das mache ich auf der Arbeit. Ich hab da sogar ein Video übers Gehalt gemacht
und sowas. Ach ja, und du kannst dir den Clip angucken, wo ich versuche, was ich dann auf
der Arbeit mache. Wobei man sich mal reinhören müsste, wie aktuell das ist. Das ist aus
2019. Ich wollte gerade sagen, eigentlich... Leute, das ist eine gute Idee. Ich mach mal
ein neues Video. Das mach ich. Ja, das ist eine gute Idee. Ich update das mal wieder.
Nice. Sozusagen... Eigentlich wollte ich ein Video machen, wo ich mich über Fernseh aufrege.
Und nicht, wie ihr denkt, über das Fernsehprogramm, sondern über Fernsehtechnik. Weil lineare
Fernsehtechnik, egal ob DVB-C, DVB-S, DVB-T, legales IPTV, das ist alles abfuck unbenutzbarer
Dreck. Der Label-Champ? Ja, wahrscheinlich am Wochenende. Du hast dich auf Twitter bereits
beschwert. Lel. Oh, hier haben wir jemand. Richtig, richtig Trending. Wobei, das sagt
man gar nicht mehr. Lel. Lel hat man früher gesagt, zu Zeiten, wo man in MMOs auch Hihi
geschrieben hat oder so. Das war zu Zeiten, wo man sich abheben wollte von Leuten, die
Lohl gesagt haben, hat man Lel gesagt. Heute sagt man nicht mal Lel, heute sagt man eigentlich
nur noch Lul. Alles klar? Kann man mir folgen, ja? Oder Lul V, Lul V ist auch okay. True,
Lul V. So sieht's aus. Lel eher 2016, na Lel ist eher 2010 oder so. Das wisst ihr daran,
dass der Friseur öfters mal Lel schreibt. Und der ist genauso Boomer wie ich. Das ist
eine gute Idee. Das finde ich cool. Ich meine, nachdem wir bei uns relativ viel Infrastruktur
und Automatisierungscode machen, kommen wir somit wahrscheinlich nicht hin. Aber das
finde ich ist eine gute Idee. Ja, wir hatten tatsächlich mal einen Pull-Request, da ist
der Browser gefriest, wenn du den Diff aufmachst. Da hatten wir aber noch GitLab, irgendeine
uralt GitLab Version. Der Browser ist gefriest für 15 Sekunden, als du das Diff vom Pull-Request
aufgemacht hast. Das musst du erstmal schaffen. Mittlerweile geht das nicht mehr, weil die
meisten dieser Frontend-Tools so schlau sind und große Dateien und lange Dateien oder
Binary oder so einfach nicht anzuzeigen. Der Elsa hat einen abgekriegt. Passiv. Passt ja,
gutes Timing. Da, wo ich ihn markiert habe. Ich weiß nicht, hast du randomized oder hast
du ihm explizit geschenkt? Bei dem Fall wäre das echt großer Zufall gewesen. Was habt
ihr jetzt anstatt von GitLab, äh GitHub? Also ne, wir hatten Bitbucket relativ lange
und jetzt GitLab. Leon, danke für den Prime-Sub. Ja, leider, leider, Ruby ist richtig geil.
Ruby bräuchte mal wieder irgendwie so irgendein Hype-Framework oder irgendwas. Ja, aber ich
mein, es muss was Neues sein. Cloudgedöns ist fest in der Hand von Go und ein bisschen
Python. Machine Learning ist Python-Zeug. Frontend-Sachen ist Javascript. NodeJS-Sachen
Javascript im Backend. Also die meisten Themen sind eigentlich gut besetzt und relativ stark
mit den jeweiligen Sprachen. Irgendwelche Flutter und Dart für irgendwelche Mobile-Geschichten
oder Swift für iOS-Kram. Die brauchen für Ruby mal wieder irgendwas. Die müssen, wenn
es irgendeinen neuen Trend gibt, müsste Ruby das mal aufgreifen und dort halt so die Sprache
der Wahl werden. Dann setzt sich Ruby auch weiter wieder durch. Beziehungsweise ist es
wieder hip, Ruby zu machen. Aktuell hast du noch ein paar Legacy-Rails-Anwendungen oder
so auf Ruby, ansonsten war es das. Ja, das ist ein gutes Video, das könnte ich auch machen.
Leute, wer Videoideen hat, sagt Bescheid, ich hab seit glaube 18 Tagen oder so kein
Video mehr gemacht. War GitHub nicht noch bis vor kurzem Rails? Ja, ich bin mir, ich
habe gar nicht mitbekommen, dass die jetzt kein Rails mehr sind. Twitter war auch mal
Rails. Twitter war Rails. GitHub ist Rails. War Airbnb oder so nicht auch Rails? Nee.
Relativ viele der ehemaligen Startups waren mal Rails. Twitter ist aber schon lange kein
Rails mehr. Twitter ist glaube ich irgendeine Mischung aus Scala oder so, Java, Java-VM
basiert im Krempel. Mittlerweile. Ja, gibt's, hat funktioniert. Zwar deutlich, ich hab's
am Anfang des Streams erzählt, deutlich zeitknapper, kritischer, also nein, wir haben es unter
24 Stunden vorm Ablauf getauscht. Das war Close, Close Champ. Ach ja, genau, also Kamera,
da wollte ich ja was zu sagen. Also, ich hab mir letztens folgende Kamera gekauft. Das
ist nix, wenn, das ist jetzt, ich sag mal so, das ist nix, wenn du irgendwie auf richtig
gute Qualität stehst und dementsprechend auch 6, 700 Euro ausgeben willst. Da gibt
es deutlich bessere Kameras, aber das will ich nicht. Ganz ehrlich, die China-Chinesen-Kameras
sind in der Regel gut genug und für den Preis, wo ich 7, 800 Euro und ihr wisst gerade was
Werkzeug angeht und sowas, da bin ich immer dabei, mir auch richtig gute teure Sachen
zu kaufen, aber für mich funktionieren die China-Chinesen-Kameras gut genug und dementsprechend
kann ich mir für den Preis 10 China-Kameras kaufen, was eine richtig tolle Markenkamera
kostet. Also, ich hab mir letztens die Kamera gekauft, ich muss mal kurz in meinen Amazon
Source-Kram gucken. Hier, das Ding. Danke für die Subs Leute, ich lese es gleich vor,
wenn ich soweit bin im Chat. Das Ding hab ich mir letztens gekauft, aber für weniger
Geld, zeig mal her. Ich hab bezahlt. View Order Details. Ich hab auf jeden Fall weniger
bezahlt. Ah, 95, exellent. So viel zu weniger. Ähm, ja. Ich hab nicht weniger bezahlt. Gut,
das Ding hab ich mir letztens gekauft, das ist Outdoor-tauglich, das hat Gummis und so
drin, aber ich würde es nicht wirklich Outdoor hinhängen, wo es hin regnet stark, ja. Also,
die sagen natürlich, die sagen natürlich, das geht, aber allein schon, dass der Netzteilstecker
nicht richtig isoliert ist oder so. Also, ich hab's im Hof hängen auf der Terrasse
um die Katze zu beobachten, wenn sie draußen rumstellt, aber das ist unter einem Vorsprung,
also da regnet's nicht direkt drauf. So, und ich hab mir das Ding gekauft, weil es preisleistungsmäßig
ganz okay erschien, ich schon zwei andere Reolink-Kameras habe und der wichtigste Punkt
für mich, es war drehbar, der Zoom brauch ich nicht, es war schwenkbar nach oben, unten,
links und rechts, und was für mich ganz wichtig ist, du brauchst keine App. Du brauchst weder
eine App zum Video gucken, zum Videofeed angucken, noch brauchst du eine App, um es
initial einzurichten. 99% der billigen China-Chinesen-Cams brauchen mindestens zum Einrichten initial
die App, um das WLAN-Passwort drauf zu übertragen oder sonst irgendwas. Das Gute bei denen war
gewesen, die stöpselst du einmalig an, per AN45-Stecker und gehst mit deinem Browser
drauf, richtest das WLAN ein und alles was du haben willst und dann hängst du's ins
WLAN. So, und ich glaube, die sind POE-tauglich. Oder auch nicht. Ich hätte jetzt eigentlich
gedacht, die sind POE-tauglich. Hot. Warum ist die hot? Hotte Grills. Kann die POE? Konnte
man Amazon-Bewertung nicht mal durchsuchen irgendwie? Konnte man nicht einmal... Ah,
ok. Er hat kein POE, das Ding. Ok, vergiss es. Kein POE. Ich mein, du kannst immer, du kannst
immer, immer noch einen POE-Injector oder so, aber dann brauchst du halt Strom da draußen.
Äh, nicht ein POE-Injector. POE-Injector bringt dir gar nichts. Du bräuchtest so einen
POE-Outjector. Also einen, der aus POE einen normalen Stecker macht für die Kamera. Gibt
es ja auch, kostet anders die Welt. Nee, dann würde ich wahrscheinlich was anderes
nehmen, wenn es POE-fähig sein soll. Elektron. Ja, da hab ich jetzt gar nicht dran gedacht.
Klar, wenn du Node.js sagst und Browser-Zeug und sonst was, dann musst du auch Elektron
sagen. Der Chain-Law ist auch da. Systema, du bist zu spät und ich bin, da war 56 Minuten,
jetzt ist eine Stunde 20. Das heißt, ich bin 25 Minuten zu spät bei mir angescrollt.
Hier benutzt Node.js Frontend und Backend teilweise mit Shareclips zusammen. Aha. Also
für irgendwelche Data-Transfer-Objects, wenn ich weiß, was das heißt. Das sind DTOs.
Äh, ich hatte Glück, ich hab mich zufällig an die Abkürzung erinnert. Und der Unterschied
zu, was, was, oh, wie nennen die Leute das sonst noch? DTOs? Da gibt es noch Pocos?
Gibt es da noch Plane-Old-Objects? Irgendwie sowas? Ähm, ach, das bleibt schon eine Abkürzung.
Ja, ich glaube, das ist eher aus historischen Gründen, weil viele Engines Lua als Scripting
und, und quasi, was weiß ich, Logik im Level-Editor und sowas verwendet haben. Ja, das ist Weirdchamp
hoch 10. Das, ähm, Pocos, genau. P-O-C-O, irgendwie. Poco-Objects. Plane-Old-CLR, das
ist irgendeine.NET-Geschichte, okay. Verwendet ich nie als Abkürzung. Poco-Objects, ja.
Warum haben wir eigentlich Poco nicht mehr aktiviert? Ja, das Lua-B-Erase-By-1-Anfang
ist wirklich Weirdchamp. Viele Logik ist Battlefield 3. Also, ich glaube, vom UI bis zu irgendwelchen
Scripting-Geschichten, so wann wie wo was passiert, ist Lua, ja. Was? Alles klar. Moment,
das kann man anklicken. Ich klick da lieber nicht drauf. Wie soll man sich mit denen bestellen?
Ich weiß, dass es die gibt und ich guck mir manchmal Vorträge an. Ähm, das war's. Madden
Gamer, Dankeschön für den Zapp. Ihr macht Nasi Schneiderman Diagramme. Oh je. Struktogramme
ist, glaube ich, eines der unsinnigsten Sachen überhaupt. Ich war geschockt, Herr Endpunkt
hat mir doch tatsächlich erzählt, die outgesorsten Inder würden manchmal von ihnen Struktogramme
bekommen. Damit sie, ähm, das dann auch ordentlich machen. Ich hätte es nicht ermöglicht
gehalten, dass irgendjemand ernsthaft Struktogramme verwendet. Ich mein, du brauchst doch jetzt
mal ernsthaft. Wenn du was outsourcen willst und du musst denen ein Struktogramm schicken
dafür, dass sie es programmieren, da kannst du es doch auch gleich selber machen, oder?
Ich mein, das Erstellen des Struktogramms für äh, nennenswert komplexe Probleme ist
doch wahrscheinlich anstrengender, als den Gramm selbst zu programmieren. Vielleicht
habe ich ihn auch falsch verstanden, vielleicht liefern die als Dokumentation mit Struktogramme
oder so kein Schimmer. Aber er hat gesagt, die verwenden Struktogramme. Ja, ich verstehe
das auch nicht, warum man diesen Müll noch lernt in der Berufsschule, also nicht Peißen,
sondern warum man noch Struktogramme in der Berufsschule lernt, das verstehe ich, das
werde ich nicht verstehen. Hast du schon mal GRPC Stream gemacht? Ne, ich glaube mit GRPC
haben wir noch nie was gemacht. Übrigens, für was steht denn das G in GRPC? Ich weiß,
dass es mal von Google sich ausgedacht wurde, aber ich glaube nicht, dass das noch für
Google steht, oder? Was steht das G in GRPC? Weiß man nicht. Doch, Google? General Purpose
Remote Procedure Calls. Ok, da stand mal für Google und die haben es unbenannt, dass es
nicht mehr Google ist. Ich kann den Namen nicht aussprechen. Bailon, sage ich jetzt
einfach, oder Bailion, oder? Keine Ahnung, danke für den Zap. Pog. Ich weiß nicht,
wo da die Pausen müssen in den Namen. Was, wie die Modemarke? Ach, wie die Modemarke?
Ich kenne mich nicht mit aus. Einzige Modemarke, die ich kenne, ist Gültestraße Louis Vitorstor
Style. Die Kollektion war f*** auf Sponsor. Das ist die einzige Modemarke, die ich kenne.
Frankfurt. Paints Jam, aber richtiger Paints Jam. Gibt es Haftbefehl? Ja, doch Haftbefehl
gibt es noch. Der hat sich in den Fuß geschossen letztens, habe ich in einem Newsbeitrag gelesen.
Oder ins Bein oder so, selbst. Am Anfang seiner Ausbildung hat der Sirpandi einen Druckertreiber
von Korn. Was ist Korn? Ich kenne das, das ist so eine, so eine, nennen wir es mal Heavy
Metal Band, aber das Programmiersprache Korn, habe ich noch nie gehört. Ach, Shell, Shell,
ja das kenne ich, aber ein Druckertreiber in Shell geht doch überhaupt nicht. Druckertreiber
sind irgendwelche C-Körnelgedönssachen. Wie kann man einen Druckertreiber in Shell
programmieren? Das wüsste ich gerne. Nun mache ich Tools für ein Managementprogramm.
Er kann bestimmt auch ziemlich Pain in the Ass sein oder so. Gerade diese super anstrengenden
Business Enterprise Software, mir würde es keinen Spaß machen. Aber ich weiß natürlich
nicht, was es ist, ja. Hat funktioniert ja dann. Google und Co kommen zumindest. Ich
weiß nicht mal, auf was ich das beziehe, weil ich bin zu, der Strukturizer von 2005, ja,
ich habe auch in der Berufsschule auch irgendeinen Struktogramm Maker oder sowas verwendet.
Oder ist das der Strukturizer? Ne, das habe ich nicht verwendet. Das habe ich nicht verwendet
zum Struktogramm machen. Der Struktogramm Editor. Uah, uah. Zählergestr- uah, ich
muss weg. So. Heui, heui, heui. Das war close, close call hier, das war ganz knapp. Also
fast wäre der Computer gecrashed. Strukturizer 64. Moment, 64, braucht der Strukturizer
aus irgendwelchen Gründen mehr als 4GB RAM. Ja gut, ist vielleicht in Java programmiert
oder sowas, weiß ja nie. Ich hoffe, ich habe nichts übersehen. 70% Meetings, 30%? Ja,
so ungefähr ist das bei mir auch aktuell. Eigentlich total bescheuert. Ich frage mich
immer oder immer öfter, haben die mich da wirklich, ich nenne zwar im allgemeinen Begriff
Techniker eingestellt oder haben die mich da irgendwie als heiße Luftverbreiter eingestellt?
Ich bin mir da teilweise nicht so sicher. Gerade, dass in letzter Zeit immer mehr Leute
von mir wollen, dass ich irgendwelche Sachen mitorganisiere, mit dran denke, mit plane
oder sonst was mache. Und ich sage dann meistens auch, ich will das nicht machen, ich bin
hier für Techniksachen zuständig, aber doch nicht, um irgendwelche Sachen zu koordinieren
und zu planen. Dafür haben wir Projektmanager, dafür haben wir irgendwelche Führungskräfte,
irgendwelche Abteilungsleiter, irgendwelche anderen organisatorischen Leute, das muss
ich doch nicht machen. Dafür sind die doch da. Ich mache das was ich gut kann und irgendwelche
Projektleute und Organisationstypen sollen das machen, was die gut können. Ich will
das gar nicht machen. Ich kann das nicht, ich will das aber auch gar nicht können.
Recycling Content, ja. Was für ein Ding? Was? Wie? Keine Ahnung. Ja, wie gesagt am Wochenende
machen wir irgendwann weiter. Hey Max, ich habe Probleme mit einem Pysonscript
und ich könnte das genauer ausführen. Ja, das kannst du natürlich genauer ausführen,
aber es ist immer sehr schwierig Remote sowas zu debuggen, weil man ja nicht weiß genau
warum einer was gemacht hat und man weiß vor allem nicht was es genau machen soll.
Das ist immer übrigens der riesen Vorteil, den derjenige hat, der Sachen in Auftrag gibt.
Der weiß meistens was er möchte, was am Ende rauskommt. Das muss er irgendwie versuchen
erstmal mitzuteilen und du musst es verstehen und dann musst du es noch so programmieren,
dass am Ende auch das rauskommt, was er haben will. Das ist glaube ich das Schwierigste
an kompletter Softwareentwicklung. Ihr kennt ja so dieses Bild, dieses Klassiker an Bild,
was weiß ich, what designer designt, what programmer irgendwie programmt, dieses Meme-Bildchen.
Wisst ihr was ich meine? Das mit dem Reifen, Reifenschaukel, Reifenschaukel, genau. Oh,
die Katze ist da, Chico, was ist? Was ist Chico? Ok, ich muss die Tür aufmachen,
sonst baut Chico euch hier gleich was. Ja, genau. Das meine ich. Ich wusste gar nicht,
dass es das auch auf Deutsch gibt. Das meine ich. Das ist wirklich sehr realitätsnah.
Ich habe früher auch gedacht, ach null, dieses uralt Oldschool-Bild, das ist ja auch schon
20 Jahre alt, wo das einer gemacht hat. Aber das hat tatsächlich viel mit der Realität
zu tun. Nur mit dem Unterschied, eine Sache stimmt nicht. Oder weiß man nicht. Man weiß
nicht auf welcher Sicht das Ganze hier ist, weil der Kunde erklärt das wahrscheinlich
eher nicht so, wenn ich mir das anhören würde. Also, das finde ich übrigens auch geil, wie
das Projekt dokumentiert wurde. Ja, das ist normal. Dokumentiert wird er prinzipiell.
Nichts. Deswegen einfach fehlerfreien Code schreiben, der sich selbst dokumentiert. Schon
braucht man nichts mehr dokumentieren. Du kannst es auf den Pastebin machen. Ja, das ist eine
gute Idee. Danke für den Sub. Wie gesagt, wir hatten lange Zeit GitLab, dann Bitbucket
und jetzt GitHub. Leon, danke für den Sub. Massive Subscriptions hier. Einfach genug
Kommentare schreiben. Ja, also am besten solche Kommentare hier. Keine Ahnung, wenn es jetzt
Javascript ist, dann braucht man unbedingt solche. Also, stell euch mal vor, ihr habt
irgendwie Javascript, Kekwe, Notepad, ja, ihr habt Javascript. Ganz wichtig, die allerwichtigsten
Kommentare sind, dass ihr schreibt, set to one. Check if E is greater than 4. Ganz wichtig.
Damit jeder versteht, was ein if macht. Nein, das ist nicht eins gemeint. Das sind die unsinnigsten
Kommentare auf der Welt. Die meisten Kommentare sind unsinnig. Richtig ordentliche Kommentare
erklären weniger, was diese Zeile macht, sondern warum diese Zeile das macht oder warum dieser
Blog das macht. Und noch geilere Fivehead-Kommentare erklären nicht nur, warum man sich dafür entschieden
hat, das so zu machen, sondern vielleicht auch noch die Hintergründe. Ja, es mag ja sein,
dass man irgendwas nicht optimal machen musste, weil mit der anderen Sache hat es Probleme
gegeben. Also richtig gut, jetzt schreiben wir noch ein bisschen Kontext dabei. Also,
es ist aber meistens so gut wie Niederfall. Nevoort schreibt, ich kann mich noch nicht
so genau anschauen, ob ich Systemintegration oder Anwendungsentwicklung wählen soll. Du
hast mittlerweile mehrere Sachen zur Auswahl. Es gibt nicht nur noch Anwendungsentwicklung,
es gibt auch noch vernetzte Systeme oder irgendwie sowas und Machine Learning oder neue Fachinformatiker
Berufe. Da gibt es doch jetzt noch andere Sachen. Digitale Vernetzung, Daten und Prozessanalyse
gibt es jetzt noch, genau. Die gibt es jetzt ja auch noch zur Auswahl. Tja, schwer zu sagen.
Weißt du was? Du passt damit eigentlich genau in das Schema rein, was man aktuell braucht
und das, wo du richtig gute Chancen später hast. Weil ich, also es ist meine Meinung,
aber ich denke auch, dass das die vorherrschende Meinung ist, die allgemeingültig so gesehen
wird. Die Unterschiede zwischen Systemintegration und Anwendungsentwicklung, das verschwimmt
immer weiter. Nicht unbedingt bei der Ausbildung und es gibt sicherlich auch noch klassische
Admin-Jobs oder klassische, ich hab den ganzen Tag Eclipse auf Boomer-Java-Programmierer-Jobs,
die dann aber nicht wissen, dass ihre Sache im Endeffekt auf dem Linux-Server läuft und
im Prinzip keinen Plan haben, wie man sich per SSH einloggt, gibt es bestimmt auch noch
alles. Aber gerade in der heutigen Zeit, wo immer mehr Sachen bei irgendwelchen Cloud-Services,
muss ja nicht Azure sein, es muss auch nicht AWS sein, irgendwas, bei immer mehr Cloud-Services
gehostet wird. Der Unterschied zwischen Administration und Programmieren und Infrastruktur, das
verschwimmt immer weiter. Es kommt heute ohne Frage relativ oft vor, dass Programmierer
beispielsweise auch Anwendungen deployen oder sowas. Oder dass jemand, der sich hauptsächlich
mit Infrastruktur auseinandersetzt, auch mithilft bei einer Anwendung und sowas. Das ist alles
nicht mehr so eine Seite, andere Seite. Das verschwimmt immer zunehmend. Und wenn du dich
interessierst für Sachen programmieren und dich aber auch für Cloud-Services interessierst,
ist das eigentlich das Beste, was du aktuell machen kannst. Ich meine, es ist nicht ohne
Grund so, dass aktuelles Passwort Full-Stack-Developer ist. Wobei so aktuell ist das Passwort gar
nicht. Alle suchen sie irgendwelche Full-Stack-Leute, wobei die meisten Leute, die Full-Stack schreiben,
denken sie suchen einen Mann für alles. Von der Telefonanlage bis zur Webseite, so nach
dem Motto. Das ist natürlich Schwachsinn, das ist nicht Full-Stack, das ist Full-IT-Abteilung.
Die suchen dann den Full-Stack-Biz-Sack-Dev-Ops-Architekt-Engineer oder sowas. Aber da bist du eigentlich
auf dem Weg, was zu lernen, was heutzutage angesagt ist. Ansonsten, ganz ehrlich, wenn
du dich überhaupt nicht entscheiden kannst, guck doch, wo du dich unternehmenstechnisch
lieber bewerben willst und geh dann dahin. Wenn du erst eine Firma hast, die dir viel
mehr zusagt, dann nimm die, ist doch egal, wenn du dich eh nicht entscheiden kannst.
Guck, was es bei dir in der Nähe gibt, such welche Firma dir am besten gefällt, so welches
beste Kombination hat, aus von Anfahrtsweg bis wie dir dieser Laden zusagt und sonst
was. Und was du danach machst, steht eh auf einem ganz anderen Platt. Danach steht es
auf einem komplett anderen Platt. Ganz ehrlich, gerade wenn du im Cloud-Bereich unterwegs
bist, vollkommen egal ob Anwängungsentwickler oder Systemintegration gelernt hast, da kommt
es auf den jeweiligen Aufgabenbereich an, was du dann genau machst. Und es ist auf jeden
Fall sinnvoll, wenn du programmieren kannst, es ist auf jeden Fall aber auch sinnvoll,
wenn du ein bisschen Ahnung von Linux und Infrastruktur hast. Gerade hier, gerade was
das angeht, das ist 99% Linux. Das mag jetzt vielleicht den Windows-AD-Admin-Clicker nicht
gefallen, aber Cloud ist 99% Linux, dort wo man überhaupt noch was von dem mitbekommt,
was unten drunter ist. Und das ist gut so, dass das 99% Linux ist. Ich könnte das nicht
machen, wenn das Windows wäre, da würde ich durchdrehen. Delux-Chat, genau. Hast du was
mit SharePoint zu tun? Nein, habe ich nicht. Zum Glück nicht. Bin ich froh drum.
Ja, oder man guckt sich, gibt ja auch so Analyse-Seiten, die das ausgeben. Ich habe mal tatsächlich
was nicht super komplex Großes, aber doch was auch für andere nützlich war, also ein
bisschen was umfangreicheres, mal in Groovy gemacht, weil, okay ich sage mal ganz kurz
was es war. Es war nicht wirklich ein Confluence-Plugin, es lief im Confluence-Prozess mit und hat,
wenn einer eine Seite aufmacht, dynamisch Sachen abgerufen und gerendert für die Seite,
für die Confluence-Seite. Und das habe ich in Groovy gemacht, weil du musst es in Java
machen, Confluence-Gedöns ist in Java und auf Java hatte ich absolut keinen Bock, also
habe ich den Groovy gemacht damals. Heute würde ich den Kotlin machen wahrscheinlich.
Ich habe jetzt einen Link für den Discord, ja mit der Ausrufezeichen Discord. Peraxx,
danke für den Sub. Massive Subscription. Mit Solar, nice. Hätte ich jetzt gar nicht
gedacht, dass da brauchst du was mit Akku. Übrigens, wir haben uns neue Notebooks auf
der Arbeit, ne das stimmt nicht, wir, ich gar nicht. Sie haben sich neue Notebooks auf
der Arbeit aufschwätzen lassen und jetzt kam raus, die neuen Notebooks, die neuen Notebooks
werden nicht von Windows 11 unterstützt. Keine Ahnung, was sie sich da haben aufschwätzen
lassen, aber in spätestens 3 Jahren oder so ist das Support-Ende für Windows 10 erreicht.
Dann müssen sie. Bei welchen Provider hast du eigentlich dein Internet, was hast du da?
Ich bin bei Vodafone, weil es das einzige ist, was bei mir nennenswerter Bandbreite
hat. Die Telekom capped bei mir bei 250 MBit Vectoring. Erzählen seit gefühlt 50 Jahren
schon was von Glasfaserausbau, ganz vergessen. Nee, habe ich nicht. Vodafone hat bei mir
bis zu einem Gigabit. Ich habe aktuell 440 ab, aber ich habe lustigerweise heute gerade
mit Vodafone geschrieben. Ich bin da überlegen, ob ich auf Vodafone Business umstelle. Für
das Internet, für Fernseh, was ich nicht benutze, aber noch Leute im Haushalt verwenden,
brauche ich dann wahrscheinlich noch was extra. Ja und ich habe einen richtig echten Dual
Stack. Ich bin den so lange auf den Sack gegangen, auch auf Twitter, ihr habt es ja
damals vielleicht mitbekommen, bis ich echt einen Dual Stack bekommen habe, weil es war
nicht benutzbar. Ich konnte mich noch nicht mal richtig VPN auf die Arbeit verbinden.
Wobei wir mittlerweile tatsächlich, muss man ja mal sagen, wir haben tatsächlich mittlerweile,
ich bin jetzt, wenn ich das so sage, gar nicht so sicher bin, ob das wirklich der Fall
ist, IPv6 am Eingang, wenn man VPN auf die Arbeit machen will. Ich glaube wir haben IPv6,
ich bin mir jetzt gar, jetzt wo ich sage, jetzt wo ich sage, bin ich mir da gar nicht
so sicher. Hast du dir das schon angeguckt? DevBlocks Direct Storage API, now available
on PC. Hä? Wie? Es gibt Ram oder SSD, was wollt ihr mir sagen? Hä? Das verstehe ich
nicht. Direct Storage Games? Was soll, was? SSD zu GPU, ach so. Das heißt die Grafikkarte
kann jetzt direkt von der SSD nachladen. Also sowas wie DMA quasi für SSD ist oder sowas.
Ja, das ist, das ist, das ist gut, das ist richtig gut. Und wisst ihr auch warum? Dass
jetzt genau der richtige Zeitpunkt ist, weil jetzt sich NVMe SSDs und sowas nennenswert
durchgesetzt haben. Vor ein paar Jahren hat das glaube ich auch nix gebracht. Schon spät,
oh Leute, schon spät, ich muss den Chat aber noch fertig lesen. Vor ein paar Jahren wäre
die Verbreitung zu gering gewesen, aber heute ist das glaube ich genau richtig. Das ist
richtig cool, Leute. Direct Storage API, das müssen wir uns, das müssen wir uns theoretisch
sogar mal angucken, ja. Mal gucken, ob wir, ob wir in der Lage sind das irgendwie überhaupt
zu machen, weil ich GPU-Programmierzeug habe ich keine Ahnung von. Interessant.
Macht keinen Unterschied. Ich muss es ja eh alles lesen um was zu sagen.
Ob ich muss ist die Frage, ja. Ich fühle mich dem Chat verpflichtet das auch zu beantworten
wenn es die Leute schon geschrieben haben, ja, auch wenn es schon spät ist. Das ist
die richtige Einstellung. Struktogramme so ein Scheiß machen wir nicht, genau das ist
die richtige Einstellung. Sogar der Struktogramm Erfinder hat ein paar Jahre später gesagt,
dass Struktogramme sinnlos sind. Nextors, danke für den Sub. Strukturizer 64-Bit, das
habe ich verwendet früher. Das kenne ich noch. Das habe ich in der Berufsschule verwendet
um Struktogramme zu malen. Genau an dieses hässliche Fenster kann ich mich noch erinnern,
ja. Das kenne ich noch. Draw IO ist beste. Struktogramme sind kein UML. Ich weiß gar
nicht, kann Draw IO Struktogramme? Sowas können die nicht, oder? Nassi, suchen wir mal.
Die können keine Struktogramme. Ja, genau das habe ich gemeint.
Leute, egal ob VWL oder BWL, das ist doch alles Payne's Champ. Spice Sache gefragt?
Ne, ich weiß nicht was du meinst. Das ist tatsächlich meistens schon komplett
ausreichend, wenn die Variablen ordentlich heißen und die Funktionen sinnvolle Namen
haben. Das ist schon mal nicht schlecht. Es muss nicht alles Temp oder X oder Blob oder
I heißen und nicht alles irgendwie Process und Fetch Data und sonst was. Wenn man das
sinnvoll benennt, da ist doch tatsächlich vielen Leuten schon mit geholfen, ja. Es
gibt eine Seite, die IF Schleife heißt. Wirklich? Geh die Seite, das ist doch Chebat. Ja, ist
richtig. Das ist korrekt, was da steht auf der Seite. Ja, mach genau alles rekursiv,
so dass keiner mehr versteht, was passiert. Deine Berufsschulklasse ist 90% Physis. Bei
uns war es so, dass Physis und Anwendungsentwickler in unterschiedlichen Klassen waren. Berufsschultechnisch.
Bei einem COD Streamer war gerade das Thema, das ständig Pack-and-Loss hat. Also fragt
man was für eine Route er hat, worauf er antworten Fritzbox. Du meintest ja, dass die ein guter
Allrounder wäre, aber wohl spezifisch mehr zu haben. Welches Router könnte man? Gar
nicht. Der kann mit seiner Fritzbox wahrscheinlich komplett zufrieden sein. Also es ist höchst
unwahr, also sehr, sehr, sehr unwahrscheinlich, dass der mit COD und Multiplayer Traffic irgendwie
eine Fritzbox Probleme macht. Es sei denn, er streamt nebenbei noch 4K, uploadt ein YouTube
Video, seine Frau unten guckt auch noch 4K und sonst was. Also wenn die Leitung nicht
gerade am Limit ist, fährt er mit einer Fritzbox gut. Der einzige Grund, warum es bei einer
Fritzbox und voller Leitung Probleme geben könnte ist, weil du vielleicht ein paar
QoS-Settings machen solltest, dass dein Game Traffic priorisiert wird. Das bringt dir
aber alles nichts. QoS-Settings sind nicht sinnvoll, wenn du eh die Leitung nicht auslastest,
also wenn, weil du musst nichts priorisieren, wenn genug Platz ist. Der Router sagt dir
nicht, ach guck mal, da kommt ein Paket. Ah, ich warte mal kurz 20 Millisekunden bevor
ich's weiterleite. Der schickt das gleich weiter, wenn die Warteschlangen nicht voll
sind. Ganz ehrlich, Paket Lost liegt wahrscheinlich, sehr, sehr wahrscheinlich nicht an der Fritzbox
und wahrscheinlich liegt es noch nicht mal an den Sachen, die in den eigenen vier Wänden
stehen, sondern an irgendwas vor, was da vorliegt. Vielleicht auf Provider-Seite, vielleicht
aber auch irgendwo auf dem Weg, wo die Pakete langlaufen, das kann man schlecht sagen. Generell
ist Paket Lost tatsächlich auch relativ schlecht, außer lokal, da kriegt man das gut diagnostiziert,
aber es ist schwierig im Internet rauszubekommen, an welcher Stelle denn da was kaputt geht
und wann und wie und wo, weil deine Pakete müssen doch nicht immer die gleiche Wege laufen
und so, also schwierig zu diagnostizieren. Und nur weil Call of Duty Paget Lost anzeigt,
das heißt ja noch lange nicht, dass es Paget Lost ist. Paget Lost ist ja, wenn die Pakete
wirklich verloren gehen unterwegs. Wenn ein Server zu hohe Auslastung hat und deswegen
ein Pakete droppt, dann sieht das vielleicht aus wie Paget Lost, ist aber netzwerktechnisch
streng genommen überhaupt gar kein Paget Lost. Und eine gewisse Anzahl an Paget Lost
ist auch okay, also Multiplayer Traffic geht ja zum größten Teil über UTP oder UDP, wie
das die coolen Leute sagen und dass da mal das ein oder andere Paket verloren geht, ist
kein Ding, das müssen Spiele abkönnen. Also ich sag jetzt nicht, dass jedes fünfte Paket
verloren gehen kann oder so, aber wenn von, keine Ahnung, wenn von tausend Paketen zwei,
drei, vier, fünf verloren gehen, das dürfte wahrscheinlich sogar noch relativ viel sein,
ist das nicht schlimm und damit muss das Game klarkommen. Und das siehst du auch beispielsweise
auf ganz anderer Ebene, wenn man sich mal die Fehler anzeigt auf einem Interface unter Linux,
du kannst die beste und teuerste Netzwerkkarte haben, den besten und teuersten Switch, das
beste und teuerste Kabel, ab und zu wirst du mal irgendeinen Transmission Fehler bekommen.
Auch intern, das geht nicht, das ist Netzwerk. Also wahrscheinlich hat er gar keinen Paget
Lost, zumindest nicht so wie er sich das vorstellt. Agile Defops ist angesagt. Ich hab am Donnerstag
auf einer Runde, wo so alle ab, ich weiß nicht, warum ich da war, aber ich bin öfters auf dieser
Runde, wo die ganzen Abteilungsleiter sind, weil ich da oftmals als Vertretung von meinem
Chef hingeschickt werde und da hab ich gedacht, ich mach mal einen, wie soll ich sagen, Witz,
in Anführungsstrichen und ich hab da unsere Punkte vorgestellt und hab dann gesagt, ja und
während dem Aufbau, also während Kollege XY dann hier die Systeme aufgebaut hat, während
dem Aufbau ist aufgefallen, dass auf dem einen Cluster-Knoten noch sehr viel CPU-Last ist
und daraufhin hat man sich dann, dann hab ich irgendwie sowas gehabt, daraufhin hat man
sich dann so richtig super, toll, agil, Agile, so wie man heute sagt, dazu entschieden, den
anderen Server aufzubauen anstatt den und ich hab gedacht, ich mach mich so ein bisschen
lustig über Agile, aber die fanden das, die haben das, die haben toternst geguckt alle,
die fanden es nicht lustig, dass ich mich da drüber lustig gemacht hab, das ist wahrscheinlich
auf dieser Ebene nicht die Art von Humor, wo man weiterkommt, geh ich mal von aus, glaub
ich hab gesagt, hyper Agile hab ich, hyper Agile hab ich gesagt, wir haben uns dann so
ganz hyper Agile, so wie man das heute macht, dazu entschieden, das andere aufzubauen und
da haben sie, da haben sie blöd geguckt, so nach dem Motto, keck wait, die haben wirklich,
ich hab's in der Kamera gesehen, die haben quasi eins zu eins keck wait geguckt, als
ich das so gesagt hab, also noch nicht mal, noch nicht, die haben noch nicht mal mitbekommen,
dass ich das eigentlich lustig gemeint habe, die haben einfach so ihren standard Meeting-Blick
draufgab, richtig, Patroclus, hyper Agile, die Emergency Demands gehandelt, korrekt,
das ist aber auch wichtig, das ist wichtig, damit man seine Synergie-Effekte nutzen kann,
um das Next Level zu erreichen, sind wir uns einig, Chet, oder, also ich hoffe, das ist
im Scope, ich hoffe, wir sind da quasi auf dem gleichen Nenner, also ich kann, ich kann
es nur hoffen, ja, ich meine, es ist wichtig, dass man agil auf neue Anforderungen reagieren
kann, dementsprechend kann man auch besser cross-funktional agieren, bei sowas, alles
natürlich im Sinne einer einheitlich skalierenden Cloud-Strategie, so muss das sein, seht ihr
auch so, gut, da bin ich ja beruhigt, bis SAC DEF Ops, korrekt, alles, full stack, bis
SAC DEF Ops, full stack, Architekt, Engineer, das ist richtig, das sind aber auch meistens
die, weshalb Start-ups aktuell so erfolgreich sind in Deutschland, ich habe letztens einen
Artikel drüber gelesen, dass wir sehr viele Start-ups bekommen haben, die letzten Jahre
über gegründet wurden, bzw. immer noch gegründet werden, und die auch zum größten Teil, nicht
zum größten Teil gehen Start-ups, sind die bald wieder weg, aber zu einem durchaus beachtlichen
Teil überleben und auch erfolgreich sind, und wisst ihr warum unsere Start-ups überleben
und erfolgreich sind?
Nicht, weil sie neue super innovative, tolle Sachen machen, nein, weil viele Start-ups
sich darauf spezialisiert haben, den Old-School-Boomer-Unternehmen zu helfen, ihren Rückstand ein bisschen aufzuholen.
Die sind so weit hinten dran in Deutschland mittlerweile, was das angeht, die brauchen
hippe, coole neue Start-ups, dass die überhaupt auch nur ansatzweise noch nicht mal den Anschluss
finden, aber nicht noch weiter zurückfallen.
Das ist, das ist Fallfett, ja, ich habe einfach immer Dark Seen, Windows-Container, OneKS,
wer benutzt denn sowas?
Arch Linux-Enjoyer, bitteschön, nicht irgendwie ein durchschnittlicher Linux-Enjoyer, ein
Arch-By-The-Way-Linux-Enjoyer.
Hast du den Bank-Artikel auf Heisen gelesen, nee, welchen, ist unser Zertifikat doch kaputt
gegangen?
Poste mal einen Link, können wir es gleich, würde gerne nach meiner Ausbildung Cyber-Security-Management-Berufsleiter
helfen, oh, da habe ich keine Ahnung zu, habe aber Angst davor, weil ich meine Vollzeit-Studie
abgebrochen habe, weil das zu, nein, keine Ahnung, kann ich hier leider nichts, gar nichts,
würde dir was zu sagen, wenn ich dir was zu sagen könnte, kann ich hier nichts zu sagen.
Ja, die sollten bei uns mal Glasfaser ausbauen, ich will es ja wenigstens haben, dann hast
du die Rentner bei uns in der Straße, wenn du die fragst und Glasfaser-Ausbau, ach, wozu
soll ich denn so schnelles Internet haben, das ist mir jetzt schon schnell genug, noch
schneller, dann überfordert mich das, die denken, die Leute denken dann, wenn ihr Internet-Zugang
mehr Bandbreite hat, ihr seht den Rechner doppelt so schnell oder so was, so nach dem
Motto, wisst ihr, Opa hat Probleme, den Start-Button zu drücken und wenn er jetzt doppelt so schnelles
Internet hat, denkt er sich auf einmal, er hat 12.000 DPI immer so, ho, ho, ho, ho, Gigabit-Internet,
ich treffe keinen Knopf mehr, ha, Gigabit, das Gigabit ist zu schnell, guck mal hier,
ich kann das Tab nicht anklingen, Gigabit-Internet, das funktioniert nicht, ja, also, es sind
halt alles Kacknubs, so wie ich in 99% aller anderen Sachen, die es auf der Welt gibt,
ich kenn mich halt mit einer Sache gut aus, halbwegs gut, IT-Line-Banken am Gehalt mangel
ist nicht, ok, das kann man uns, Leute, ich muss gleich betten, ich hab keine Zeit, mal
gleich betten, Moment, ich hab den, heise, ich hab den Artikel noch grad kopiert, Copy
Link-Adress, doch, so, ok, das hatten wir, was, welches Gerät rollt, ah, das Video,
mit Demo, Naisu, also man hat im Endeffekt nichts gelernt, wenn das Jahr mit Erase zu
Ende geht, Erase sind quasi die dritte Seite auf dem Programmier, in dem Programmierbuch,
man kann es mir jetzt nicht angucken, ich hab grad Zeit, ernsthaft, ey, das ist so painst
jam, ich musste damals auch, ähm, noch, noch auf Papier manchmal Sachen machen, alter,
das kann doch nicht sein, was sind wir eigentlich für ein krasses Entwicklungsland, was sowas
angeht, das ist echter Wahnsinn, das darf jetzt natürlich nicht fehlen, Leute, ich hab
den Chat geschafft, Poggers, also, was soll ich jetzt noch einholen, IT-ler in Banken am
Gehalt mangelt es nicht, doch, ich finde schon, darf ruhig mehr geben, sollte mehr geben,
ich seh nicht ein, dass die so billig davonkommen, also, ne, die Sache ist halt die, also, seriously,
wenn jemand wirklich erwartet, dass so zwei IT-ler am Arbeitsplatz aussehen, ähm, dann
ist kein Wunder, dass die niemand finden, also, allein schon der, allein schon der Arbeitsplatz,
der ist viel zu, viel zu ordentlich und dann mit Anzug und dann so Social-Skill-mäßig
und so, das kannst du, man zahlt 50% Steuer, ist das, ist das, ist das Spitzensteuer, sagt
ich 42%, man kann, glaub ich, gar gar 50% Steuer bezahlen, ich glaub, 48 ist das Maximale,
was irgendwie geht, oder sowas, hab ich irgendwie im Kopf, ich glaub, 42, war es nicht 42, ja,
selbst schuld, Cloud-Infrastruktur von Google und der Kostenstelle zum Geschäftsmotor, ja,
das müssen halt manche jetzt auch mal 20 Jahre später kapieren, dass der Kram nicht nur
Geld kostet, sondern ganz entscheidend dafür da ist, dass es das Unternehmen überhaupt
in ein paar Jahren noch gibt, ja, steigende Gehälter erwarten, Moment, es sind überall
steigende Gehälter zu erwarten, muss ich sagen, weil ganz ehrlich, mit der aktuellen
Inflation, was machen eigentlich meine Stonks, Leute, Moment, ich muss mal kurz meine Stonks
gucken, ob die sich mittlerweile schon wieder erholt haben, weil seit die China-Chinesen
in Shanghai ihre komische Blockade da gemacht haben, da gingen die Stonks, da gingen richtig
abwärts, was, das hat sich die letzten Tage über so schön erholt, jetzt ist es wieder
unten, das ist ja, Alter, gestern, gestern war es fast auf dem Weg wieder, minus 780
Euro, Pock, aber wie wir alle wissen, Minus ist erst Minus, wenn ich es verkaufe, Amazon
ist minus 13% heute gefallen, Alter, zum Glück ist da nicht viel Amazon dabei, Apple auch,
14,5, meine Güte, ich weiß, deswegen ist das nicht so schlimm, das Ding geht wahrscheinlich
eh Ende des Jahres noch, es werde dann zurückblickt so, nee, nee, da mach ich, ich muss da auch
überhaupt nicht täglich reingucken, nee, ich hab mir lieber ein World ETF gekauft,
weil dann bin ich zumindest mir insofern sicher, dass der Kram nicht heute um 50% fällt oder
so, was auch immer, das geht ja alles relativ langsam, ich mein, obwohl es jetzt die letzten
paar Tage und eigentlich die letzten paar Wochen auch schon richtig krass bergab geht,
ist jetzt im Prinzip das ganze nur um 3% insgesamt gefallen, nee, insgesamt 3,8, naja, ja, den
hab ich auch, wobei nicht direkt den, aber einen der mehr oder weniger genauso ist, alles
klar Leute, so, wir haben es geschafft, Bedgetime, ich geh jetzt pennen, hab ich noch die gute
Nacht, jawoll Leute, also, nein, falsch ist falsch, wir sehen uns, bis zum nächsten Stream
vielleicht mal morgen den Label-Champ weiter oder irgendwas anderes in der Richtung mal
anschauen, bis denn, wir sehen uns, CU.
