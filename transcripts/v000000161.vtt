WEBVTT

01:30.000 --> 01:55.840
So, schauen wir mal ob Twitch die Quality Options hin gekriegt hat, in letzter Zeit

01:55.840 --> 02:05.720
klappt das ja erstaunlich oft. In letzter Zeit klappt das ja relativ oft mit Quality Options,

02:05.720 --> 02:10.760
allerdings sehe ich das Stream ist noch nicht richtig live. Also ich sehe die Vorschau schon

02:10.760 --> 02:18.520
und jeder der auf dem Channel ist, sieht die Vorschau auch schon, aber Twitch hat noch

02:18.520 --> 02:23.120
nicht die Benachrichtigung raus geschickt, weil hätte Twitch die Benachrichtigung raus

02:23.120 --> 02:28.960
geschickt, würde ich das in der Viewerliste sehen. Aktuell bin ich das alleine mit dem

02:28.960 --> 02:38.760
Vorschau PC. Deswegen warte ich nochmal bis Twitch das auf die Reihe kriegt. Ah, jetzt

02:38.760 --> 02:43.080
hat es aktualisiert. Jetzt ist es nämlich auf Einschlag 14 und jetzt sind auch die ersten

02:43.080 --> 02:48.320
Leute im Chat. Jetzt ist das Stream wirklich live. Irgendwie lag das immer auf Twitch

02:48.320 --> 02:54.680
so ein bisschen. Das dauert so 2-3 Minuten bis das alles raus geschickt wurde an Benachrichtigung.

02:54.680 --> 03:02.200
Der Flixcoder ist auch wieder am Start. Der Tribolon. Ich muss echt sagen, ich bin begeistert.

03:02.200 --> 03:10.560
Man kennt die Leute mittlerweile schon. Wieso nur 48 FPS? Tja, Ressourcen schonend. Wir

03:10.560 --> 03:15.560
sind immer in Deutschland was das Internet angeht. Da kann man sich schon um 48 FPS

03:15.560 --> 03:26.680
freuen. 60 FPS macht der Internetanschluss von den meisten Leuten nicht mit. Übrigens,

03:26.680 --> 03:30.880
jetzt haben sie offiziell sogar zugegeben, dass die Breitbandziele 2018 verfehlt wurden.

03:30.880 --> 03:42.400
Da habe ich mir so, was? Wer hätte das nur vermutet. Ja, außerdem stimmt der Tribolon

03:42.400 --> 03:48.760
recht. Außerdem kann das Auge eh nur 12 FPS. Das Gerücht mit den 24 liegt daran, weil

03:48.760 --> 03:54.800
es eigentlich 2 Augen sind. Also 2 mal 12. Deswegen sagen die Noobs 24. Allerdings

03:54.800 --> 04:07.360
die Kenner wissen, dass das Auge nur 12 FPS sieht auf jedem Auge. Es lebt unglaublich.

04:07.360 --> 04:15.680
Ich habe jetzt die letzte Woche schon gestreben. Schauen wir mal in der History. 3 Streams

04:15.680 --> 04:24.560
in 4 Tagen oder so jetzt gemacht. Es ist 18 Uhr. Ich denke mal, die meisten Leute sind

04:24.560 --> 04:31.000
jetzt schon daheim. Mussten die heute arbeiten? War so in die Runde gefragt. Ich habe den

04:31.000 --> 04:42.640
Tag genutzt, nichts zu machen. Also den ganzen Tag. Ich habe dieses Jahr eh Glück, weil

04:42.640 --> 04:47.760
ich habe mir gleich mal alle Brückentage und Sachen, die irgendwie günstig sind zum Urlaub

04:47.760 --> 05:01.280
eingetragen, bis auf einen Tag. Habe ich mir so gedacht. Und hat auch funktioniert. Ich

05:01.280 --> 05:05.640
finde es immer toll, mein Copy-and-Paste-Tick, der verwirrt immer Leute, die neu in den Stream

05:05.640 --> 05:16.440
kommen. So, jetzt muss ich erstmal die Zellermusik ausmachen. Mehr als 10 Minuten hat immer das

05:16.440 --> 05:25.800
nicht aus. Machen wir wieder unseren Chill-out an. So, dann erzähle ich mal, was wir heute

05:25.800 --> 05:33.720
machen. Und zwar, die letzten paar Streams haben wir ja rumgebastelt. Außer der allerletzte.

05:33.720 --> 05:39.080
Der allerletzte haben wir die China-Steckdosen-Leiste geflasht. Allerdings, wobei ich kann das

05:39.080 --> 05:42.200
eigentlich auch alles in der Linux-VM zeigen. Es gibt keinen Grund, warum ich jetzt hier

05:42.200 --> 05:48.880
auf Windows wechseln muss. Die Streams davor, vor dem letzten, haben wir ja schon ein bisschen

05:48.880 --> 05:55.360
mit dem ESP32 und Arduino rumgebastelt. Da ging es ja um den Bodenfeuchtigkeitssensor.

05:55.360 --> 06:01.480
Da habe ich jetzt bei mir einen Prototyp von. Ich habe das fertig gemacht. Gerade auf der

06:01.480 --> 06:07.080
Terrasse stehen im Blumenbeet. So, und mal gucken, ob das jetzt alles so funktioniert,

06:07.080 --> 06:13.120
wie ich mir das gedacht habe. Und bevor der dann auf den Friedhof kommt. Und heute machen

06:13.120 --> 06:21.520
wir was, was ich auch schon lange machen wollte. Und zwar, wollte ich meinen Briefkasten 900er

06:21.520 --> 06:30.080
IQ verpassen. Und zwar, wie darf man sich das Ganze vorstellen? Ganz einfach. Ich muss

06:30.080 --> 06:33.920
jetzt keinen Briefkasten suchen. Die meisten Leute wissen wahrscheinlich, wie ein Briefkasten

06:33.920 --> 06:40.040
aussieht, gehe ich mal voraus. Mein Briefkasten sieht ungefähr, der ist ziemlich oldschool,

06:40.040 --> 06:46.480
den hat der Opa damals quasi von Hand zusammengeschweißt irgendwie. Der sieht auch ein bisschen speziell

06:46.480 --> 06:52.680
aus. Also der Briefkasten von mir sieht am ehesten, irgendwie sieht das alles anders

06:52.680 --> 07:03.040
aus als das, was der Opa gebastelt hat. Das hier kommt noch am ehesten hin. Das hier kommt

07:03.040 --> 07:10.840
noch am ehesten hin. Wobei, es hat keine Klappe. Der Briefkasten, den der Opa gebaut hat,

07:10.840 --> 07:14.600
der hat nur einen Schlitz oben und hat unten eine Klappe, wo man dann hinten raus, also

07:14.600 --> 07:21.880
die kann man vorne nicht aufmachen. Also, vielleicht eher sowas hier. Was ist das eigentlich

07:21.880 --> 07:32.360
für ein mega hässlicher Briefkasten? Ja. Oh, das ist der Design Briefkasten. Naja,

07:32.360 --> 07:38.640
zumindest sieht das bei mir ungefähr so aus, bloß ohne Klappe. Ich habe den Rohr für

07:38.640 --> 07:44.800
Magazine, Zeitung, sonst was und halt viel Werbung, was da immer so reinkommt und Briefkasten

07:44.800 --> 07:50.400
oben mit Klappe. Und hier ist halt ein Briefkasten mit so einem kleinen Einschubschlitz und hier

07:50.400 --> 07:57.560
unten ist halt keine Klappe bei mir dran. So, und das Ganze ist am Hoftor dran und ich

07:57.560 --> 08:01.640
habe gedacht, wir machen das jetzt mal so, weil im Laufe der Streams kommen eh immer

08:01.640 --> 08:07.000
die Fragen nach dem Motto, ja, was wird denn heute gemacht? Deswegen werde ich das mal

08:07.000 --> 08:12.080
ein bisschen anders machen diesmal. Bevor wir richtig anfangen, machen wir mal so ungefähr

08:12.080 --> 08:21.520
eine kleine Teile-Liste, was wir haben an Hardware und so ein Draw-IO-Bildchen, was gemacht werden

08:21.520 --> 08:26.000
soll, weil jedes Mal, wenn einer fragt, was wird gemacht, kann ich dann einfach auf das

08:26.000 --> 08:33.680
Bildchen switchen und dann kann ich es zeigen. Ja, irgendwie hat das keiner mit dem Briefkasten

08:33.680 --> 08:39.080
so, wie ich das habe. Das hier ist wahrscheinlich noch am ehesten dran, das ist eigentlich alles

08:39.080 --> 08:45.160
nicht so. Also bei mir ist nämlich, das macht es auch ein bisschen komplizierter, bei mir

08:45.160 --> 08:50.120
ist der Briefkasten nämlich am Hoftor dran, also sprich, wenn ich das, ja so hier, so

08:50.120 --> 08:58.160
ungefähr, so ungefähr, was ist denn das für ein Riesenkasten, aber von der Idee her

08:58.160 --> 09:02.200
ist es bei mir auch so, der Briefkasten ist am Hoftor dran, das macht es natürlich ein

09:02.200 --> 09:06.520
bisschen problematischer, weil das Ding ist nicht statisch, also sprich, das bewegt sich

09:06.520 --> 09:11.080
mit dem Hoftor auf und zu, was heißt, man kann da nicht so einfach jetzt irgendwie Kabel

09:11.080 --> 09:20.360
oder so dran machen. Aber ich glaube, man kann sich das schon so ungefähr ganz gut vorstellen.

09:20.360 --> 09:24.280
Ja, so sieht es so, so hier dann. Das heißt, ich kann jetzt auch nicht einfach ein Kabel

09:24.280 --> 09:27.680
irgendwie so ohne weiteres dran machen von der einen Torsack zur anderen, weil ich meine,

09:27.680 --> 09:31.960
da müssen denn Leute durchlaufen. Das macht das Ganze ein bisschen trickreicher und was

09:31.960 --> 09:37.120
ich in dem Zuge auch noch machen will ist, ja ungefähr so sieht das von hinten, so,

09:37.120 --> 09:41.600
fast genau so sieht das bei mir aus, das ist eigentlich ein ziemlich gutes Bild, auch

09:41.600 --> 09:46.680
von den zwei Häusern her, fast genauso sieht man hof aus, wie hier auf dem Bild, bloß

09:46.680 --> 09:52.080
dass der Briefkasten halt hier dran ist. Das heißt, der Briefkasten, der geht halt mit

09:52.080 --> 09:56.840
der Tür auf und zu. So, und was ich jetzt machen will ist, da kommt ein ESP32 dran,

09:56.840 --> 10:03.160
ein Stromsparender ESP32, kein Developer Board, allerdings heute machen wir es mit einem Developer

10:03.160 --> 10:09.040
Board. Ich habe mir eine Schalter gekauft für hier unten dran, der checkt, ob Tür auf

10:09.040 --> 10:19.280
und zu ist und hier oben an den Briefkasten, der jetzt bei mir da ist, kommt ein Entfernungssensor,

10:19.280 --> 10:24.680
ein Ultraschall-Entfernungssensor kommt da dran und, wobei das stimmt gar nicht, was

10:24.680 --> 10:32.480
ich erzähle, Mist, das ist falsch. Der Ultraschall-Sensor kommt in das Rohr für die Zeitung rein

10:32.480 --> 10:40.560
und der kann dann feststellen, ob was im Rohr drin ist. Das heißt, das Ganze wird dann ungefähr

10:40.560 --> 10:49.040
so aussehen, ob man da jetzt irgendwie Spielchen malen kann, ohne dass man das direkt speichern

10:49.040 --> 10:54.200
muss, also das Ganze wird dann ungefähr so aussehen. Wir machen erstmal eine Teileliste,

10:54.200 --> 11:00.800
was wir brauchen. Ach ja, und ich darf übrigens meine Secrets.h nicht öffnen, wenn ich meine

11:00.800 --> 11:08.160
Secrets.h öffne, ist das ziemlich doof, weil dann sieht jeder mein WLAN-Passwort. Das heißt,

11:08.160 --> 11:18.400
ich sollte da jetzt nicht draufklicken. Was jetzt? Konsole ist weg, Grip. Was passiert,

11:18.400 --> 11:27.400
hast du nicht mal Overwatch gespielt? Ja, das ist richtig, ich habe mal Overwatch gespielt.

11:27.400 --> 11:34.080
Ich muss mal kurz testen, ob nicht irgendwie die Vorschau das anzeigt, als wäre es eh zu

11:34.080 --> 11:39.520
spät gewesen, aber die Vorschau zeigt das glücklicherweise nicht an, was da drin steht.

11:39.520 --> 11:48.000
Alter, was ist mit der Konsole denn jetzt hier? Was ist da los? Gerade keine Lust auf YouTube,

11:48.000 --> 11:51.520
ja, das ist richtig. Nichts, sondern nicht viel. So, und ich dachte, wir machen mal eine

11:51.520 --> 11:57.800
Teileliste, was wir heute brauchen. Nachdem ja, jetzt kommt ja der Witz, das Ganze ist natürlich

11:57.800 --> 12:03.160
wie immer auf den ersten Blick einfach, auf den zweiten dann doch nicht. Die Sache ist

12:03.160 --> 12:06.400
die, das soll natürlich hier ans Hoftor dran, habe ich ja schon gerade gezeigt, das soll

12:06.400 --> 12:14.720
ans Hoftor dran, aber natürlich stromsparend, das bedeutet mit Batterie. Das heißt, man

12:14.720 --> 12:27.640
kann das Ganze jetzt nicht durchgängig laufen lassen. Was, man hat das Passwort in der Debug-Ausgabe

12:27.640 --> 12:42.360
gesehen? Echt? Ah, gut, weil ich wollte gerade sagen, wo? Ja, ich traue der Sache auch nicht

12:42.360 --> 12:47.640
so genau, allerdings, man muss ja sagen, selbst wenn ich das Passwort hier irgendwann mal

12:47.640 --> 12:52.080
zeige, das ist ein extra WLAN, was ich nur für den Streben anhab, wo man auch nirgends

12:52.080 --> 13:00.520
wohin kommt. Also insofern, eigentlich kann man damit nicht wirklich was anfangen. Was

13:00.520 --> 13:16.600
zum Teufel geht mit der Konsole gerade ab? Spack den mir ein bisschen rum. Perfekt abgesehen,

13:16.600 --> 13:24.520
ja ich kann eh nur jedem empfehlen, der bei sich daheim entweder Gäste im WLAN hat oder

13:24.520 --> 13:30.840
halt viele Geräte, die wie Kameras oder irgendwelche anderen Sachen, die vielleicht für Heimautomatisierung

13:30.840 --> 13:38.160
wichtig sind bei ihm, macht verschiedene WLANs auf, die unter der Haube dann auch in verschiedenen

13:38.160 --> 13:42.280
WLANs drin sind, weil dann habt ihr nie das Problem, dass irgendwo mal was aus Versehen

13:42.280 --> 13:47.760
drauf zugreifen kann. Stellt es einfach so ein, dass standardmäßig aus dem Gäste-WLAN

13:47.760 --> 13:53.040
oder aus dem Kamera-WLAN nirgendwo was irgendwohin darf. Das heißt, ihr müsst auch nicht irgendwelche

13:53.040 --> 13:57.280
Firewall-Regeln erstellen, das ist einfach dicht standardmäßig. Und macht Client Isolation

13:57.280 --> 14:09.320
an, dass die Dinger auch nicht miteinander reden können. Ja, also ich sehe das auch ein

14:09.320 --> 14:14.920
bisschen kritisch. Standardmäßig macht so eine Fritzbox glaube ich ein WLAN auf, ich

14:14.920 --> 14:23.080
weiß gar nicht, ob eine Fritzbox mehrere WLANs überhaupt... Kann eine Fritzbox mehrere WLAN

14:23.080 --> 14:34.240
SSIDs oder mehrere WLANs oft machen? In Gasnetz, ok, ja gut, da hat man wahrscheinlich nicht

14:34.240 --> 14:46.800
viel Einfluss drauf, was die macht. Naja, wie dem auch sei, ist eigentlich wurscht. Also

14:46.800 --> 15:11.080
was wir an Teilen brauchen... Teile... Teile... Gasnetz, Krücke, Krücke, so halber, ok. Ja,

15:11.080 --> 15:18.960
also ganz kurz die Sache mit den WLANs abzuschließen. Die ganzen China-Dinger, die es so gibt, und

15:18.960 --> 15:22.760
es gibt ja auch genug China-Dinger, die man nicht flashen kann jetzt mit Custom-Firmware,

15:22.760 --> 15:28.040
wie wir das im letzten Stream mit der Steckdose gemacht haben, die müssen einfach und auch

15:28.040 --> 15:32.480
sowas wie China-Kameras oder generell Sachen, wo man halt nicht so genau an der Sache traut

15:32.480 --> 15:36.960
von dem, was da drauf ist, die müssen einfach in ein extra WLAN, wo nirgendwo was hinkommt.

15:36.960 --> 15:43.720
Und am besten in den WLAN, wo die Geräte noch nicht mal selbst miteinander reden können.

15:43.720 --> 15:48.880
Also aktuell hab ich drei WLANs. Eins mein Streaming hier, WLAN, das ist halt einfach

15:48.880 --> 15:54.640
nur für den Stream an. Dann hab ich das normale WLAN, halt für alle möglichen Sachen wie

15:54.640 --> 16:01.360
Tablets und Smartphones und sowas. Und dann hab ich das China-WLAN, da sind die Kameras

16:01.360 --> 16:06.360
drin und andere China-Geräte, die ich dann flashen kann. Und in dieses WLAN kommt nichts

16:06.360 --> 16:12.520
raus. Es kommt im Prinzip auch rein schon. Von intern darf man eh überall hinzugreifen.

16:12.520 --> 16:15.640
Allerdings, das ist komplett dicht. Die Dinger kommen noch nicht mal ins Internet, noch nicht

16:15.640 --> 16:43.520
mal bei DNS, gar nichts. Die sind komplett von der Außenwelt abgeschritten im China-WLAN.

16:43.520 --> 16:49.240
Und das ist die DHL-Falle. Keine Ahnung, das hab ich mir noch nicht angeguckt. Gut, also

16:49.240 --> 16:55.560
was wir, wie gesagt, damit wir heute das realisieren können, erstmal ne Teile-Liste, was wir brauchen,

16:55.560 --> 17:01.920
was ich mir so im Vorfeld überlegt hab. Also, wir brauchen erstmal einen ESP32-66-Controller,

17:01.920 --> 17:07.920
da hab ich heute einen, werden wir jetzt im Stream zum Testen verwenden, einen Debron-Mini,

17:07.920 --> 17:14.120
dann brauchen wir einen ESP32, da nehm ich heute eine NodeMCU als Controller. Wir brauchen

17:14.120 --> 17:20.600
zwei, nämlich einmal der, der quasi, ähm, mal ich gleich, mal ich gleich auf, dann brauchen

17:20.600 --> 17:27.320
wir einen Schalter fürs Tor, da hab ich hier auf Amazon gekauft, ein, ähm, boah, wie hieß

17:27.320 --> 17:35.560
das Ding? Das ist nicht einfach ein normaler Schalter, der, der, der so klein und wackelig

17:35.560 --> 17:40.480
ist, sondern was richtig, was richtig stabiles. Das ist eigentlich ein Schalter für CNC-Fräsen

17:40.480 --> 17:49.680
irgendwie. Der da, ja, fast, fast genau der da ist, den ich gekauft hab, fast genau. Fast,

17:49.680 --> 17:56.280
fast genau der, den da hab ich, genau. So, der ist unten am Hoftor dran und wenn das

17:56.280 --> 18:04.400
Tor aufgeht, beziehungsweise wenn das Teil zugeht, dann schaltet das. Das ist halt ein

18:04.400 --> 18:10.840
ganz normaler Schalter. Ist halt Wind, Wetter, Regen, sonst war es fest und hält halt ein

18:10.840 --> 18:15.520
bisschen was aus. Darf man ja nicht vergessen, wenn man die Sachen Outdoor ans Hoftor macht,

18:15.520 --> 18:23.560
das muss alles auch ein bisschen, ein bisschen robust sein, ne. So, ähm, genau, sowas haben

18:23.560 --> 18:30.560
wir einmal, einen Schalter, schreiben wir mal hier dabei, Schalter haben wir, dann haben

18:30.560 --> 18:38.560
wir einen Ultraschall-Sensor, dann haben wir einen Ultraschall-Sensor, nämlich so ein Ding

18:38.560 --> 18:42.760
da, weil irgendwie ist gerade das Kabel vom Hatsan-Pegel gar nicht im Keks. Dann hab ich

18:42.760 --> 18:52.920
so einen, einen HCSR04, die Dinger haben immer super griffige Produktnamen. Das ist für

18:52.920 --> 19:00.360
die, äh, wie nennt man sowas, Zeitungsrolle, ne Zeitungsfach. Da kann man gucken, ob was

19:00.360 --> 19:13.560
drin ist. So, und dann brauchen wir noch Kabels, aber Kabels, Kabels muss ich jetzt nicht aufschreiben,

19:13.560 --> 19:18.040
halt Kabel. Am besten Kabel, die nicht unbedingt direkt kaputt gehen, wenn man ein bisschen

19:18.040 --> 19:27.400
länger, wenn es mal ein bisschen länger feucht draußen ist. Äh, warum hab ich hier eigentlich

19:27.400 --> 19:35.000
noch mein Rim-Config-Gedöns auf? So, so, mehr, das war es an Teilen eigentlich, ja,

19:35.000 --> 19:42.640
viel mehr brauchen wir nicht. Schalter, Ultraschall-Sensor, zwei Controller, ja gut, Kabels und vor allem

19:42.640 --> 19:51.200
halt ein paar, äh, so Jumper-Kabel, wo man halt an Pins stöpseln kann. So, und wie gesagt,

19:51.200 --> 19:56.440
so einfach wie das auf den ersten Blick aussieht, ist es jetzt wiederum nicht, denn ich versuch'

19:56.440 --> 20:02.240
das, ich versuch' das mal, ich versuch' das mal hinzumalen. Also, äh, haben die hier,

20:02.240 --> 20:09.640
haben die hier ein Tor? Oh krass, Tor? Ähm, also das ist mein Hoftor. Das stimmt auch

20:09.640 --> 20:13.440
so ziemlich genau, weil das eine schwingt nach da und das andere schwingt nach da. Bloß

20:13.440 --> 20:18.640
das ist, wow, bloß das ist bei mir, kann man das Seitenverhältnis irgendwie, kann man

20:18.640 --> 20:26.560
dem irgendwie sagen, scheiß auf Seitenverhältnis, geht das? Kann man dem, kann man dem irgendwie

20:26.560 --> 20:41.560
sagen hier, ja. Ja, es ist ja mal, ich bin schon wieder zu blöd, irgendwie ein Malprogramm

20:41.560 --> 20:53.760
zu verwenden. Gut, das ist im Prinzip auch wurscht. Ähm, also, wir haben das Hoftor

20:53.760 --> 20:58.000
hier. Äh, Frage nebenbei, was ist das für ein Lied? Das ist ein, das ist Manjaro mit

20:58.000 --> 21:07.880
I3-WM als Win-No-Manager. So, kann man da jetzt was draufschreiben? Hoftor, wow, Riesenschrift,

21:07.880 --> 21:23.200
Text. So, sehr schön. So, Hoftor. So, und da ist der Briefkasten dran. Briefkasten.

21:23.200 --> 21:39.120
Wie, wie ich mach das fertig, dass man den Kram nicht, dass man den nur Seiten, dass

21:39.120 --> 21:47.320
man den nicht einfach anders verschieben kann. Briefkasten. So, save. Kann man noch speichern.

21:47.320 --> 21:51.760
So, da ist der Briefkasten rein und hier geht das Tor auf. Das heißt, da ist der Schalter

21:51.760 --> 21:59.760
dran. Und jetzt sieht man auch gleich, warum das nicht so einfach ist. Ha, nee, so nen

21:59.760 --> 22:20.040
Switch wein ich nicht. Ich mein nen, naja, gut. Ich mein nen, nen Schalter. Machen

22:20.040 --> 22:28.200
wir jetzt einfach mal hier, so. Genau. Sieht zwar total eng geblieben aus. Genau. So, und

22:28.200 --> 22:34.360
hier kommt quasi an das Tor, kommt dann der Schalter dran, der feststellt, ob das Tor

22:34.360 --> 22:46.080
auf und zu geht. Links zwei einzelne Tür nehmen. Könnte man machen, aber ich glaub,

22:46.080 --> 22:55.040
man versteht das so auch schon ganz gut. So, und ähm. Heute noch StarCraft, ach. Natürlich,

22:55.040 --> 23:06.800
was sonst. Ähm. Haben die vielleicht ein Bildchen dafür? Nee. Haben keinen. Haben

23:06.800 --> 23:15.720
kein Bildchen, ne. Ein schönes Hardware Bildchen, ja, genau. So, und hier unter den Briefkasten

23:15.720 --> 23:26.040
an die Tür, da Briefkasten, da Controller, da Schalter. So, so sieht das ungefähr aus

23:26.040 --> 23:32.040
dann. Und, kann mal das komische, komische Pfeil weggehen. Und warum das nicht so einfach

23:32.040 --> 23:44.320
ist, ist folgendermaßen, das Ding läuft an der Batterie. Das Ding hängt an der Batterie

23:44.320 --> 24:07.440
dran. So, ich glaube, jetzt passt das eigentlich ganz gut. Besser so. Scheiße aus. Naja, zumindest

24:07.440 --> 24:13.200
das Ding hängt an der Batterie dran. Und deswegen, das haben wir in einem der letzten Streams

24:13.200 --> 24:19.320
schon gemacht, ist das Ding hauptsächlich im Deep Sleep. Und verbraucht relativ wenig

24:19.320 --> 24:29.800
Strom. Ähm. Das Problem ist, das hier muss ein ESP32 sein, weil ich mehrere Inputs brauche,

24:29.800 --> 24:36.280
wo er aufwachen kann. Das kann ein ESP8266 nicht. Das heißt, das muss auf jeden Fall

24:36.280 --> 24:44.760
ein ESP32 sein, auch noch aus anderen Gründen. Die Sache ist die, dass die ESP32 relativ

24:44.760 --> 24:52.400
langsam zum WLAN connecten. Also sprich, selbst wenn ich bei dem jetzt einstelle, wache auf

24:52.400 --> 24:57.960
bei GPIO15 und danach lockt sich im WLAN ein und schickt das Ganze. Das Problem ist, dass

24:57.960 --> 25:03.880
es über zwei Sekunden dauert, oder plus, minus ein bisschen was, bis ich so ein ESP32, gibt

25:03.880 --> 25:08.600
es übrigens auch auf GitHub ein Ticket. Also das ist bekanntes Problem im Endeffekt. Das

25:08.600 --> 25:14.080
ist ein ESP32, lange braucht es sich zum WLAN zu verbinden. Und für eine Sache, die an

25:14.080 --> 25:19.600
der Batterie läuft, ist das ziemlich doof, wenn was lange braucht, sich zum WLAN zu verbinden.

25:19.600 --> 25:34.480
Weil wir können das ja immer im Batterie Calculator uns mal angucken. Das macht nämlich einen

25:34.480 --> 25:40.520
riesen Unterschied. Wenn wir jetzt mal sagen, ok, irgendjemand macht die Tür auf, das Ding

25:40.520 --> 25:45.560
triggert und möchte die Nachricht raushauen, Tür ist offen. Also es ist erstens schon mal

25:45.560 --> 25:49.840
doof, dass es dann überhaupt mit zwei Sekunden Verzögerung kommt. In der Regel will ich,

25:49.840 --> 25:53.640
Tür geht auf, will ich direkt eine Benachrichtigung haben. In zwei Sekunden ist ja ein Typ schon

25:53.640 --> 25:58.440
fast um die Ecke gelaufen an die Haustür, wenn er schnell ist. Vielleicht möchte ich

25:58.440 --> 26:04.280
nämlich auch dann mit der Kamera, die eben in der Einfahrt hängt, vielleicht ein Bild

26:04.280 --> 26:09.600
schon machen, was auch immer. Kann man ja viel machen mit. Zumindest zwei Sekunden Verzögerung

26:09.600 --> 26:14.880
ist in jedem Fall scheiße. Und das ist vor allem auch scheiße für die Dauer, wie das

26:14.880 --> 26:19.240
Gerät an der Batterie betrieben werden kann. Also wenn wir jetzt zum Beispiel sagen, wir

26:19.240 --> 26:25.560
brauchen nur zwei Sekunden, um das zu verschicken, und da wäre ja alles dabei. Also quasi Wert

26:25.560 --> 26:35.200
auslesen, gucken, verschicken, connecten. So und dann schlafen wir, keine Ahnung, zwei

26:35.200 --> 26:40.360
Minuten, weil das nicht so ganz hinhaut, weil das ja eigentlich nur getriggert wird, wenn

26:40.360 --> 26:46.000
man die Tür aufmacht. Und das Problem ist, WLAN-Übertragung braucht 150mAh, das ist

26:46.000 --> 26:53.600
relativ viel. Und das halt im schlimmsten Fall halt dann zwar nicht über die zwei Sekunden,

26:53.600 --> 26:58.760
aber Laufzeit von zwei Sekunden ist halt problematisch. Man sieht das gleich. Im Deep Sleep braucht

26:58.760 --> 27:07.080
das Ding 11mAh, Batterie haben wir eine 2000mAh-Stunde, das ist 15. Man sieht schon, das Ding würde

27:07.080 --> 27:13.360
standardmäßig jetzt nur, also wenn man es alle zwei Minuten aufwachen lassen würde,

27:13.360 --> 27:19.960
nur 28 Tage laufen. Und 28 Tage Laufzeit ist scheiße. Oder? Da sind wir uns glaube ich

27:19.960 --> 27:29.920
einig. Es will keiner einmal im Monat die Batterie in dem Ding wechseln. Also das ist

27:29.920 --> 27:35.360
ziemlich Mist. Das ist ziemlicher Mist. Außerdem soll das Ding ja nicht nur eine Meldung schicken,

27:35.360 --> 27:42.120
und zwar sofort, wenn einer die Tür aufmacht, ist bei Sleep Mode nicht auf mA eingestellt.

27:42.120 --> 27:49.080
Das niedrigste, wo du so einen ESP32 kriegst, ohne dass du quasi einen externen An-Aus-Schalter

27:49.080 --> 28:04.560
dran hast, ist ungefähr 11mA. Passt doch. Du hast recht. Klar, 11mA. Das ist Absicht.

28:04.560 --> 28:20.080
Das Minimum, was geht mit einem der stromsparendsten ESP32-Module ist 11mA. Und das Board, was

28:20.080 --> 28:23.400
ich hier heute zum entwickeln habe, braucht viel mehr. Das lohnt sich ja überhaupt nicht

28:23.400 --> 28:38.560
als im Batteriebetrieb. Allerdings weniger kriegt man nicht. Und so und so. Ja warum

28:38.560 --> 28:54.280
baue ich wohl nichts unterm Hof durch? Also man sieht, dass es relativ kurz hält. Und

28:54.280 --> 29:03.160
man kann ziemlich einfach die Batterielebenszeit erhöhen, indem man diese Zeit hier, wie lang

29:03.160 --> 29:09.320
das Ding an sein muss, reduziert. Und wir reden jetzt ja von 2 Sekunden, das sind 2.000

29:09.320 --> 29:20.560
Millisekunden. Und 2.000 Millisekunden sind ziemlich lange Zeit. Ja, Flow 690, größere

29:20.560 --> 29:26.760
Akku geht natürlich auch. Allerdings ist das wahrscheinlich, ja, das ist so, wie man

29:26.760 --> 29:31.280
schlecht programmiert ist, auch meistens mit mehr Hardware erschlagen kann, macht es dann

29:31.280 --> 29:49.360
aber trotzdem nicht unbedingt besser. So und das Ding soll ja auch ungefähr alle, sagen

29:49.360 --> 29:55.920
wir mal alle, alle 5 Minuten oder sagen wir mal, bleiben wir in der Rechnung alle 2 Minuten

29:55.920 --> 30:02.680
aufwachen und mit dem Ultraschall-Sensor checken, ob Post da ist. So kommt ja auch noch dabei,

30:02.680 --> 30:08.600
soll er ja auch noch machen. So und dann sieht man schon, das Ganze braucht zu viel Strom,

30:08.600 --> 30:14.200
wenn es das macht. So und das Beste, was man machen kann, ist einfach die Zeit zu verkürzen.

30:14.200 --> 30:29.440
Das schafft er. Also der ESP866 schafft das in ungefähr 300 Millisekunden und der ESP32

30:29.440 --> 30:38.840
braucht da leider 1-2 Sekunden für, nur fürs Aufbauen der WLAN Verbindung. Ja, wir drehen

30:38.840 --> 30:41.880
gleich ein bisschen an den Zahlen rum, wir drehen gleich ein bisschen an den Zahlen rum

30:41.880 --> 30:47.240
und gucken, was dann am Ende rauskommt. Der ESP32 braucht da leider ein bisschen länger

30:47.240 --> 30:55.240
für und ja, Flo96, das ist gar keine schlechte Idee, wir machen nämlich sowas in der Richtung

30:55.240 --> 31:01.320
auch. Da komme ich jetzt aber gleich dazu, wir machen sowas ähnliches auch, wir machen

31:01.320 --> 31:06.240
das nämlich gar nicht mit normalem WLAN. Der Flo hat es schon erkannt, was wir nämlich

31:06.240 --> 31:14.880
machen ist, deswegen brauchen wir auch zwei Controller. Wir benutzen den WLAN-Chip auf

31:14.880 --> 31:22.440
den Controller, nicht als WLAN-Chip, sondern als Funksender oder Empfänger. Also wir scheißen

31:22.440 --> 31:28.400
auf den ganzen WLAN-Krempel drum herum. Zumindest so grob. Und ich habe das schon mal ausprobiert

31:28.400 --> 31:34.440
vor einer Weile. Das so zu übertragen ist verdammt schnell und ich glaube wir kommen

31:34.440 --> 31:45.280
da ungefähr auf fast sogar noch weniger, so ungefähr auf 50 ms pro Zeit. Und da sehen

31:45.280 --> 31:51.120
wir schon, die Code-Execution-Zeit ist unglaublich wichtig, für das wie lange der Scheiß am

31:51.120 --> 31:59.440
Ende läuft. Wenn wir jetzt nämlich von zwei Sekunden auf 50 ms runterkommen, oder selbst

31:59.440 --> 32:04.880
sagen wir mal 100 ms, das läuft halt einfach viel viel länger. So und wenn man jetzt noch

32:04.880 --> 32:18.520
sagt, ok, wir machen die Sleep-Zeit mal hoch auf, keine Ahnung, was sind, 300 oder? Jaja,

32:18.520 --> 32:24.960
300 Sekunden. Guck mal, da sind wir schon mal theoretisch, praktisch gesehen wird das

32:24.960 --> 32:29.880
nicht so lang sein. Ich meine das Ding entlädt sich auch noch selbst, also übern Daumen

32:29.880 --> 32:36.800
gepeilt. Dann, wenn man alle fünf Minuten checken ob Post da ist und eine reine Zeit

32:36.800 --> 32:45.880
von 100 ms haben wie das Ding an ist, dann sind wir ganz schön Stromsparend. Und das

32:45.880 --> 32:52.040
ist noch gar nicht mal großartig optimiert. Wir könnten hier auch mit so Späßen anfangen,

32:52.040 --> 32:59.080
dass wir den Ultra Low Power Prozessor nehmen, der da drauf ist und gucken ob Post da ist

32:59.080 --> 33:03.320
und nur dann aufwachen und das verschicken. Also ich gehe mal davon aus, wenn man das

33:03.320 --> 33:09.760
wirklich richtig gut optimiert, dann kann so ein Ding auch mal gut und gern drei, vier

33:09.760 --> 33:21.560
Jahre an einer 2000 mAh Batterie laufen. Kannst du dem auch sagen, es soll zum Beispiel nachts

33:21.560 --> 33:28.640
nicht prüfen? Das ist ein bisschen schwierig, weil das Ding kennt nicht so wirklich Uhrzeit.

33:28.640 --> 33:41.480
Ja, ich sag ja, selbst wenn du mit 5% Selbstentladung im Jahr rechnest, du kriegst ja die Zeiten

33:41.480 --> 33:46.000
hier und den Stromverbrauch, kriegst du ja noch massig runter, wenn du das wirklich richtig

33:46.000 --> 33:53.200
optimierst. Aber ich glaube so eine Hausnummer ist das ganze, wenn man sagt, das kann mal

33:53.200 --> 34:02.960
gut und gern zwei Jahre laufen. Damit bin ich zufrieden. Dann mache ich das alle zwei

34:02.960 --> 34:10.120
Jahre auf, stöpsel mal eine neue Batterie rein und gut ist. Übrigens das Board mit

34:10.120 --> 34:20.960
dem niedrigsten Stromverbrauch, was ich bisher gesehen habe, also das niedrigste ESP8266

34:20.960 --> 34:28.200
Board ist das hier, das ist von einem, von dem Typ hergestellt. Das kann man sich nur

34:28.200 --> 34:34.960
auf so einer Custom-Dings-Plattform kaufen und der macht das relativ clever. Der hat

34:34.960 --> 34:41.640
hier den ESP8266 dran und einfach einen An- und Ausschalter davor und einen Hardware-Timer,

34:41.640 --> 34:48.600
der das Ding einmal regelmäßig die Stunde aufbäckt. Das ist natürlich auch eine Option.

34:48.600 --> 34:55.280
Allerdings hat man dann keinerlei Möglichkeiten irgendwie etwas andere Sachen zu machen. Das

34:55.280 --> 35:00.800
Ding wacht, hardcoded auf einem GPIO auf und einmal die Stunde. Kannst du nichts dran

35:00.800 --> 35:07.200
ändern und wir haben hier einen voll funktionsfähigen ESP32, wo man alle möglichen Sleep-Options

35:07.200 --> 35:22.520
einstellen kann. Nein, das glaube ich nicht. Die Batterie ist denke ich mal ganz gut. Also

35:22.520 --> 35:33.280
gekauft habe ich die Batterie hier, warte mal. Da habe ich mir jetzt schon ein paar Batterien

35:33.280 --> 35:39.760
gekauft, die haben eigentlich, zumindest machen die einen ganz brauchbaren Eindruck. Ups,

35:39.760 --> 35:51.080
wie da glaube ich ist das. Genau. Schreiben wir hier noch in die Teile-Liste rein. Einen

35:51.080 --> 35:56.600
Akku braucht man natürlich auch. Überlebt das alles im Winter bei minus 15 Grad? Ja,

35:56.600 --> 36:10.000
ist kein Ding. Also ich glaube, ich glaube das Ding wacht bis minus 40. Also die Dinger

36:10.000 --> 36:15.200
sind wirklich ziemlich robust. Ich meine ich würde nicht unbedingt an die Grenze gehen.

36:15.200 --> 36:30.480
Minus 140 plus 125 ist schon nicht so realistisch für Deutschland. Es hält auf jeden Fall aus.

36:30.480 --> 36:41.800
Es gab gerade irgendwie noch eine Heimautomatisierungsfrage im Chat, habe ich gesehen. Genau, der Xo-Ut

36:41.800 --> 36:46.560
sagt, hallo Max, ich möchte bei mir in der Wohnung auch jetzt nach und nach Smart Home

36:46.560 --> 36:54.320
integrieren. Neben der Steuerung über iPhone, iPad möchte ich ein kleines Tablet am Eingang

36:54.320 --> 36:58.320
platzieren, womit ich auch nochmal alles steuern kann. Das ist eine sehr gute Idee, weil ansonsten

36:58.320 --> 37:02.520
braucht man viel länger, bis man ein Tablet gesucht hat, das unlockt hat, Browser aufgemacht

37:02.520 --> 37:06.760
hat und irgendwas gedrückt hat, wie einfach selbst den GENO was drücken. Und sobald das

37:06.760 --> 37:11.760
länger dauert, hat man eigentlich keinen Bock mehr, das zu benutzen. Ich habe absolut keinen

37:11.760 --> 37:18.120
Plan von PCs, also Computer anmachen und ausmachen kann ich. Das war es aber schon. Hast du Tipps

37:18.120 --> 37:23.920
oder sollte ich das Ganze lieber lassen? Es kommt so ein bisschen drauf an, was du vor

37:23.920 --> 37:27.880
hast. Ich meine, wenn du da überhaupt keine Ahnung von hast, wirst du wahrscheinlich auch

37:27.880 --> 37:34.160
nicht anfangen Sachen selber zu programmieren. Also du musst gucken, dass es schon mehr oder

37:34.160 --> 37:39.840
weniger die Sachen gibt, die du haben willst. Kommt drauf an, was du machen willst. Also

37:39.840 --> 37:47.320
was willst du denn machen? Also ganz davon abhängig. Ich verwende hier als Heimautomatisierungszentrale

37:47.320 --> 37:56.040
Home Assistant. Home Assistant ist zwar prinzipiell für jeden zu benutzen, man muss dafür eigentlich

37:56.040 --> 38:04.280
nicht programmieren können. Allerdings ist die Einstellung doch ein bisschen Gewöhnungssache.

38:04.280 --> 38:09.480
Also du kannst das alles über so Konfig-Dateien konfigurieren in Home Assistant, aber man

38:09.480 --> 38:13.680
muss schon sich ein bisschen einarbeiten. Dafür kannst du wirklich schöne Sachen machen

38:13.680 --> 38:19.760
im Endeffekt. Da kannst du den Raumplan anlegen, kannst da quasi sagen, hier Bewegungsmelder,

38:19.760 --> 38:24.600
hier will ich jetzt keine Ahnung, Licht anschalten, wenn da was reinkommt und dann wenn hier einer

38:24.600 --> 38:29.200
draufdrückt will ich dann die Szene für Fernsehgucken starten, was auch immer. Kannst du im Prinzip

38:29.200 --> 38:33.360
alles machen, wie du willst. Und das schöne an so einem offenen Hub wie Home Assistant

38:33.360 --> 38:36.440
oder Open Hub oder so, aber ich würde dir auf jeden Fall Home Assistant empfehlen, weil

38:36.440 --> 38:44.320
das auch für Einsteiger von den ganzen noch, würde ich sagen, mit am besten ja, erinnert

38:44.320 --> 38:49.480
es. So, ich vergesse, was ich sagen wollte. Lull. Ja, aber wie gesagt, ich würde dir

38:49.480 --> 38:53.960
auf jeden Fall Home Assistant ans Herz legen. Aber du musst dich ein bisschen reinarbeiten.

38:53.960 --> 39:00.880
Das ist nicht so hier einfach mal so zick und das ist da. Du kannst da halt wunderbar

39:00.880 --> 39:05.440
alles einrichten, so wie du das willst. Ach ja, was ich sagen wollte, genau. Das Schöne

39:05.440 --> 39:11.040
ist an so Hubs wie Home Assistant eben, dass es mit allen oder mit den meisten anderen

39:11.040 --> 39:17.200
Produkten zusammenarbeitet. Wenn du jetzt zum Beispiel irgendwie von Philips oder so

39:17.200 --> 39:21.680
einen Hub kaufst oder von Ikea oder sowas, dann arbeitet der in der Regel halt nur mit

39:21.680 --> 39:25.840
Ikea-Produkten oder der anderen nur mit Philips-Produkten zusammen. Und wenn du Home Assistant verwendest

39:25.840 --> 39:30.120
oder generell irgendeinen offenen Hub, dann können die in der Regel mit allen möglichen

39:30.120 --> 39:33.840
Geräten zusammenarbeiten. Oder was viel besser ist letztendlich, weil du bist nicht auf den

39:33.840 --> 39:37.760
Hersteller angewiesen und kannst das kaufen, was für die jeweilige Sache am besten ist.

39:37.760 --> 40:03.520
Lichter steuern möchte er machen, Musik in Räumen, Kameras, Staubsauger, Roboter, Startenbänden,

40:03.520 --> 40:11.640
TV-Programme, geht alles. Wie gesagt, Einrichtungen, braucht aber Zeit. Das ist ein Projekt, wo

40:11.640 --> 40:16.360
man sich im Klaren sein muss, also es sei denn, man kauft sich ein Fertigprodukt, das

40:16.360 --> 40:19.800
ist natürlich auch immer eine Option. Wenn man einfach nur das haben möchte, ohne sich

40:19.800 --> 40:23.520
damit zu beschäftigen, kann man sich auch ein Fertigprodukt kaufen, wobei man halt mit

40:23.520 --> 40:27.960
einem Fertigprodukt immer damit leben muss, dass es nie so sein wird, genau wie man es

40:27.960 --> 40:32.320
haben will. Und man immer auf Gedeih und Verderben darauf angewiesen ist, was der Hersteller

40:32.320 --> 40:38.800
macht. Das war für mich zumindest keine Option an der Stelle. Das ist keine Sache, die man

40:38.800 --> 40:44.080
von heute auf morgen macht, das ist eher so ein Projekt, was so nach und nach kommt. Ich

40:44.080 --> 40:50.800
würde mit den Automatisierungen Sachen anfangen, die am meisten bringen, also wo dir halt das,

40:50.800 --> 40:55.680
wenn du es von Hand machen musst, am meisten auf den Keks geht, die würde ich zuerst automatisieren

40:55.680 --> 40:59.240
und dann einfach ein bisschen Erfahrung sammeln und das Ganze nach und nach machen. Und eines

40:59.240 --> 41:02.160
kann ich dir sagen, wenn du damit angefangen hast und dir das halbwegs Spaß macht, du bist

41:02.160 --> 41:09.640
prinzipiell eh nicht fertig, du bist nie fertig. Du wirst nie sagen, jawoll, heute habe ich

41:09.640 --> 41:14.720
die letzte Automatisierung eingerichtet und jetzt bin ich fertig, nie. Wenn du eine Sache

41:14.720 --> 41:20.760
machst, fallen dir fünf neue Sachen ein. Wie ist die Performance von Home Assistant

41:20.760 --> 41:37.800
auf dem Pi? Scheiße. Ich würde Home Assistant nicht auf einem Raspberry Pi betreiben. Habe

41:37.800 --> 41:42.480
ich ganz am Anfang mal probiert, war mir viel zu langsam und jeder Neustart war ätzend

41:42.480 --> 41:54.400
lahm und ich habe es dann auch mal auf dem Pi 3 ausprobiert, war mir zu langsam. Mein

41:54.400 --> 42:19.520
halbautomatisierungszeug läuft zurzeit auf einem, ich glaube da drauf, eines dieser Boards

42:19.520 --> 42:23.520
in der Richtung, ich bin jetzt nicht sicher, ob es genau dieses Board hier ist, aber könnte

42:23.520 --> 42:31.880
es schon hinkommen. Also mein halbautomatisierungszeug läuft zurzeit auf einem Quad Core Atom. Es

42:31.880 --> 42:37.080
ist kein Atom mehr, die Dinger nennen sich jetzt Pentium Silber, weil Intel sich gedacht

42:37.080 --> 42:40.720
hat, nee also Atom klingt einfach zu mickrig, wir nennen das jetzt mal um, aber im Prinzip

42:40.720 --> 42:46.440
sind es Atoms, Pentium Silber, also auf der Plattform läuft gerade mein halbautomatisierungszeug

42:46.440 --> 42:53.200
und ich sag dir, oder sag euch, es sind Welten zwischen einem Raspberry und diesem Ding und

42:53.200 --> 43:04.080
wenn man dazukommt, der Kram kostet auch nicht viel. Oh, das ist aber ganz schön teuer geworden.

43:04.080 --> 43:12.840
Ich hab das doch für 70 oder so gekriegt. Also 70, 80 Euro für das Board, das ist im

43:12.840 --> 43:17.360
Prinzip halt nur das Board mit CPU, muss man klar sein, passiv gekühlt, da muss noch RAM

43:17.360 --> 43:22.360
dazu, da muss noch ein Netzteil dran, da muss noch was auch immer man braucht noch dran.

43:22.360 --> 43:29.320
Also so, sag mal mal, 200 Euro muss man dafür schon rechnen. Hast du Erfahrungen mit Domotex?

43:29.320 --> 43:33.040
Nein, hab ich nix gemacht bisher. Ich hab ein bisschen mit IO Broker rumgespielt in letzter

43:33.040 --> 43:37.880
Zeit, also nebenbei ein bisschen geguckt, das ist aber anders gelagert als Homocystein,

43:37.880 --> 43:42.240
das ist jetzt nicht so ein Hub, wo ich Sachen würde, ja man macht alles auf IO Broker,

43:42.240 --> 43:49.040
inklusive Webinterface und sowas, IO Broker sieht für mich eher so aus wie so eine Bridge,

43:49.040 --> 43:52.760
die ich dazwischen schalten kann, wenn ich halt sage, ok, Homocystein unterstützt vielleicht

43:52.760 --> 43:56.640
die ein oder andere Sache nicht oder die Integration gefällt mir nicht, dann würde ich IO Broker

43:56.640 --> 44:00.880
nehmen zum integrieren mit Geräten und ich würde als Frontend immer noch Homocystein

44:00.880 --> 44:07.400
nehmen, weil von allen Heimautomatisierungslösungen, die es so gibt, ok, ich sag mal, alle die

44:07.400 --> 44:11.120
ich mich mit beschäftigt habe und ein bisschen was gelesen habe, hat Homocystein, und das

44:11.120 --> 44:15.960
kann ich auch bestätigen von meiner eigenen Benutzung, das beste Interface, das Interface

44:15.960 --> 44:22.480
von Homocystein ist wirklich gut, vor allem seitdem sie seit einem halben Jahr oder so

44:22.480 --> 44:28.500
ihre neue Loveless Oberfläche haben, das ist wirklich nice.

44:28.500 --> 44:41.200
Mittlerweile kann man sogar seine Kameras einbinden direkt den Livestream, also unter

44:41.200 --> 44:46.880
der Haube ist das ganz normales HTS Streaming und ich hab mir was gebastelt, ich kann sogar

44:46.880 --> 44:52.960
per WebRTC, kann ich sogar meine Kameras einbinden in einem Iframe, da hast du keine Verzögerung

44:52.960 --> 44:55.800
drin, also das Webinterface von Homocystein ist wirklich gut.

44:55.800 --> 44:59.240
So, ich laber schon wieder ewig rum, wir haben noch nichts gemacht eigentlich, das wird

44:59.240 --> 45:11.240
leider Wahnsinn, außer dass ich wild copypaste.

45:11.240 --> 45:16.960
Kennt ihr Seiten wo man sich gut so was zusammenstellen bzw. durchlesen kann, also was ganz gut

45:16.960 --> 45:22.680
ist, ist das Reddit von Homocystein, kannst du dir angucken, das Homocystein Forum ist

45:22.680 --> 45:26.880
auch ganz gut, wenn es um Homocystein geht, was da besonders interessant ist, ist diese

45:26.880 --> 45:31.880
share your projects Sektion, wo Leute schreiben was sie damit umgesetzt haben, das ist eigentlich

45:31.880 --> 45:37.640
ganz cool, da sieht man dann ok, irgendein Typ hat sich einen LED Schalter oder so für

45:37.640 --> 45:43.280
die Wand gebaut, da kann man dabei gucken was einen interessiert und vor allem immer

45:43.280 --> 45:47.200
ganz interessant wie die es gemacht haben, weil das kann man auch für andere Sachen

45:47.200 --> 45:48.200
gebrauchen.

45:48.200 --> 45:51.760
Home Assistant Reddit, da gibt es noch das allgemeine Smart Home Reddit, das ist immer

45:51.760 --> 45:55.480
ganz praktisch, würde ich mal angucken, da würde ich mir auch noch das Self Hosted Reddit

45:55.480 --> 45:59.040
angucken, wo es darum geht, dass man eben die Sache nicht in der Cloud läuft laufen

45:59.040 --> 46:08.600
lässt, sondern bei sich selbst, ja glaube ich war das Einstieg ganz gut.

46:08.600 --> 46:19.880
Wie teuer ist so ein Ding, wie gesagt 70, 80 Euro, soll einfach auch im Video noch

46:19.880 --> 46:28.400
aktuell, trotz Kappa HD, halbwegs aktuell, weil die große Kiste ist immer noch im Einsatz,

46:28.400 --> 46:29.960
obwohl ich die ja schon längst ablösen wollte.

46:29.960 --> 46:42.040
Ja, das habe ich vor Video über meine Heimautomatisierung zu machen, das Problem ist,

46:42.040 --> 46:47.320
man sieht, so wie ich es jetzt eingestellt habe, sieht man ein bisschen viel Privates

46:47.320 --> 46:51.160
da drin, deswegen muss ich gucken, wie ich das mache, vielleicht benenne ich einfach

46:51.160 --> 46:55.320
für den Stream mal ein paar Sachen um und zeige es dann, dann sieht man beispielsweise

46:55.320 --> 46:57.520
auch die Fernsteuerung vom Staubsauger-Roboter und sowas.

46:57.520 --> 47:08.240
Der Evoli schreibt, ich habe ein Video gesehen, der hat sich ein Gerät gebaut, wo man in

47:08.240 --> 47:11.640
einem bestimmten Rhythmus an die Tür klopfen muss, damit sie aufgeht, ja genau für sowas

47:11.640 --> 47:13.680
sind so kleine Kontrollen richtig gut.

47:13.680 --> 47:26.280
Die Kiste mit der verdrehten Ladenkarte, richtig, also zurück zum Thema, wo ist mein Bildchen,

47:26.280 --> 47:34.680
genau, was habe ich gerade erzählt, genau, es dauert einfach viel zu lang, wenn es 2

47:34.680 --> 47:40.880
Sekunden ausführt, 2 Sekunden an ist und Daten überträgt, das dauert einfach viel

47:40.880 --> 47:45.800
zu lang, also Ziel ist, dass wir runterkommen auf deutlich unter 100 ms, die das ganze so

47:45.800 --> 47:52.880
dauert und an ist und da sieht man auch schon, die Akkulaufzeit geht viel viel höher, so

47:52.880 --> 48:00.360
und die Sache ist die, damit das funktioniert verwenden wir das WLAN Modul, nicht als WLAN

48:00.360 --> 48:09.040
Modul, sondern quasi mehr oder weniger einfach so als Funk Modul, ja und das geht und das

48:09.040 --> 48:15.560
geht mit sowohl mit dem ESP32 als auch mit dem ESP866 relativ einfach, weil der Hersteller

48:15.560 --> 48:23.040
hat schon was eingebaut, das ganze ist ESPNow, das ist ein eigenes Funk Protokoll, was über

48:23.040 --> 48:30.720
den WLAN Chip geht, es ist aber kein WLAN oder zumindest kein komplettes WLAN, wo mit

48:30.720 --> 48:37.880
verschiedene ESP Hardware miteinander kommunizieren kann, man kann damit auch Mesh Netze aufbauen,

48:37.880 --> 48:41.200
theoretisch könnte man ein ganzes Haus mit ESPs bestücken, die dann irgendwie untereinander

48:41.200 --> 48:45.560
miteinander über Kreuz kommunizieren und sowas, aber man wollte es ja nicht übertreiben,

48:45.560 --> 48:53.520
aber das schöne ist, ESPNow ist eben WLAN sehr sehr light, das heißt die ganzen Geschichten

48:53.520 --> 49:00.360
drum herum von WLAN kann man sich sparen und ich habe es mal getestet, das Übertragen,

49:00.360 --> 49:07.840
also das Connecten und das Übertragen mit ESPNow, also es dauert ungefähr zwei Sekunden

49:07.840 --> 49:12.080
sich ins WLAN zu verbinden an einem normalen Access Point und dann nochmal wahrscheinlich

49:12.080 --> 49:17.680
so eine Sekunde um die Sachen per MQTT zu übertragen, wenn man das ganze jetzt über

49:17.680 --> 49:25.680
ESPNow macht, von dem Sensor an der Tür zu einem zweiten Controller, der hier hinten

49:25.680 --> 49:41.400
im Haus drinne ist, also von hier nach hier machen wir mal einen, von da nach da übertragen,

49:41.400 --> 49:49.040
wobei wir machen, gibt es ja WLAN, ja genau, also das wird schon ein bisschen advanced

49:49.040 --> 49:56.040
aber ihr kennt ja die Streams, das ist immer ein bisschen advanced, weil so Easy Mode, Hallo

49:56.040 --> 50:05.800
Welt, das kann ja jeder, was ich allerdings nicht kann, sind Bilder ausrichten, und das

50:05.800 --> 50:18.960
ganze funkt da jetzt bei ESPNow, funkt den ganzen Mist von der Tür zu einem ESP866,

50:18.960 --> 50:38.360
der hier in der Steckdose steckt, soweit die Idee, Rust ist tatsächlich eine schöne Sprache,

50:38.360 --> 50:46.600
aber auch ziemlich nervig, dafür ist es richtig, wenn es kompiliert, meistens, was man in anderen

50:46.600 --> 50:55.200
Sprachen ja nicht so sagen kann, bei Rust schon, ich habe noch nicht so viel in Rust gemacht,

50:55.200 --> 51:02.600
aber die Idee hinter Rust ist wirklich gut, so ungefähr safe, wir speichern das mal,

51:02.600 --> 51:13.720
Wine Browser, ist klar, ich möchte es am besten jetzt direkt im EE öffnen, so ist

51:13.720 --> 51:23.440
ungefähr der Ablauf, das heißt wir brauchen zwei Controller, das hier ist ein ESP32, das

51:23.440 --> 51:45.080
ist ein ESP866, ich glaube jetzt ist relativ klar, was ich vorhabe, ich habe es mal ausprobiert

51:45.080 --> 51:52.160
vor einer Weile, was zu übertragen, per ESPNow, also quasi einfach über den WLAN Chip, ohne

51:52.160 --> 52:02.880
WLAN zu verwenden, dauert so 30 Millisekunden, im Vergleich zu zwei Sekunden mit einem ESP32

52:02.880 --> 52:06.920
über normales WLAN über ein Access Point, das ist natürlich ein riesen Unterschied,

52:06.920 --> 52:11.920
ob wir sagen wir mal insgesamt 100 Millisekunden brauchen, was zu übertragen, oder jedes Mal

52:11.920 --> 52:18.480
zwei Sekunden, zwei Sekunden sind für Batteriebetrieb definitiv viel zu lang, 100 Millisekunden

52:18.480 --> 52:24.040
sieht so mal über Daumen gepeilt, die Batterielebenszeit eigentlich ganz gut aus, wenn wir es richtig

52:24.040 --> 52:29.160
machen, kriegen wir sogar noch viel sparsamer, denn, was man nie vergessen darf, das da,

52:29.160 --> 52:41.520
die 150mA an Strom brauchen wir nur bei WLAN Datenübertragung, das heißt in 99% der Fälle

52:41.520 --> 52:46.240
machen wir ja gar keine WLAN Datenübertragung, weil wir gucken, ob Post da ist, und wenn

52:46.240 --> 52:54.400
keine Post da ist, dann schicken wir auch keine Benachrichtigung, und wenn Post da ist, dann

52:54.400 --> 52:58.680
merken wir uns einfach, dass Post da war, und schicken das nächste Mal auch keine Benachrichtigung,

52:58.680 --> 53:02.240
oder irgendwie so in der Richtung, könnte man das machen, also sprich, nicht jedes Mal,

53:02.240 --> 53:08.640
wenn wir aufwachen alle fünf Minuten, brauchen wir auch diese 150mA für diese Zeit, und

53:08.640 --> 53:15.680
das bewegt sich eher in der Region von 40mA, wenn er eben keine WLAN Übertragung macht.

53:15.680 --> 53:20.920
So, aber ich glaube jetzt ist ungefähr klar, was ich vorhabe, das heißt, als allererstes

53:20.920 --> 53:29.120
müssen wir jetzt den da einrichten hier, den da, der ESP2866, der die Daten vom Briefkasten

53:29.120 --> 53:34.120
und der Tür dann am Ende empfangen soll, muss wirklich alle fünf Minuten gecheckt werden,

53:34.120 --> 53:47.000
kann gecheckt werden, wie du willst, im Prinzip kannst du checken, wie du lustig bist, Scheiß

53:47.000 --> 53:56.240
C++, ja ich bin auch kein großartiger C++ Fan, aber sag mal so mit der Arduino Geschichte

53:56.240 --> 54:09.360
kommt man eigentlich ganz gut klar. Oh, der Eaxe ist auch da, nice. So, das heißt, als

54:09.360 --> 54:17.200
erstes werden wir jetzt anfangen, mal diesen ESP2866, der quasi als, so ein bisschen als

54:17.200 --> 54:26.160
Relay dient, vom Briefkasten ESP32 ins Netzwerk, weil der dann wiederum, der dann wiederum

54:26.160 --> 54:34.160
ins WLAN, ich brauch mal ein Access Point, WLAN, weil der dann wiederum, der geht ja

54:34.160 --> 54:48.560
ins WLAN, der geht ja ins WLAN und der schickt dann auch per MQTT das Ganze an meinen Smart

54:48.560 --> 55:01.720
Home. Ah, also der ESP32 am Briefkasten, der meldet einfach nur, ey, Poster, oder hier

55:01.720 --> 55:06.960
Tür wurde aufgemacht, der empfängt das per ESP Now und schickt es dann selber weiter

55:06.960 --> 55:15.160
per WLAN über MQTT an meine Heimautomatisierung. Wie lange wird der Akku denn umgefallen mit

55:15.160 --> 55:24.760
deinem Plan? Joa, also das hier ist ein bisschen utopisch, ja, das ist ein bisschen, ein bisschen

55:24.760 --> 55:31.840
sehr viel, aber ich denke, wenn man das ordentlich, wenn man das ordentlich optimieren, wahrscheinlich

55:31.840 --> 55:47.520
so 2-3 Jahre oder so. Ja, aber mit einem Jahr könnte ich auch leben, aber ich denke

55:47.520 --> 55:55.160
mal, also 2 Jahre sollten da eigentlich schon drin sein. Äh, Flow 96, das ist ja grad

55:55.160 --> 55:58.400
der Sinn davon, da ist ein Schalter dran und wenn er die Tür aufmacht, dann wacht das

55:58.400 --> 56:04.920
Ding direkt auf, GPIO 15 mache ich den dran, wacht das Ding direkt auf, schickt das hin

56:04.920 --> 56:09.520
und da haben wir eine Verzögerung von, keine Ahnung, 50-60 Millisekunden, wo ich mitkriege,

56:09.520 --> 56:13.480
dass die Tür aufgemacht wurde. Das ist natürlich schon relativ schnell. Okay, also fangen wir

56:13.480 --> 56:20.920
mal an, wir fangen jetzt an mit dem, ähm, mit dem ESP62, ich habe das Projekt ja auch

56:20.920 --> 56:27.640
schon mal ESP, ESP Now Server genannt, also sprich, das Ding ist dafür da, die Sachen

56:27.640 --> 56:33.760
vom Tor zu empfangen, ähm, sich ins WLAN zu connecten und die Sachen per MQTT zu verschicken.

56:33.760 --> 56:40.120
Woher kennst du dich mit diesen ganzen Microcontrollern aus, äh, gelernt für meine Heimautomatisierungsgeschichten?

56:40.120 --> 56:49.400
Die Tür wird mit dem Interrupt, ja, das wird GPIO Wake Up, GPIO 15 Wake Up, das ist einfach

56:49.400 --> 56:54.560
Übung und das, das, Arduino ist ne, also, Arduino ist, das ist ja kein Arduino, das

56:54.560 --> 57:01.480
ist Arduino-kompatibel, das Ding, ähm, aber so ein ESP32 und ein ESP866, hier mit Arduino

57:01.480 --> 57:07.440
als Framework, ist ne super Sache, damit einzusteigen. Okay, also, was brauchen wir jetzt? Das muss

57:07.440 --> 57:11.600
erst mal kurz in mich gehen, weil jetzt müssen wir anfangen, den, den, den Kram zu basteln.

57:11.600 --> 57:25.320
Also, wir brauchen erst mal, ähm, ich mach mal kurz einfach ne stinknormale Debug-Ausgabe,

57:25.320 --> 57:37.120
dass ich grad mal ein bisschen reinkomme, ich hab so lang gelabert. So, Serial, Beginn,

57:37.120 --> 57:46.560
also übrigens heute mal sehen, heute sind wir mal unterwegs, äh, unterwegs. So, Upload

57:46.560 --> 57:53.840
und gucken wir mal. Es sollt jetzt einfach nur Test-Test-Test ausgeben, also absolut

57:53.840 --> 58:07.080
Noob-Style, nicht viel besser als Hallo Welt übertragen, please. Ja, okay, das funktioniert,

58:07.080 --> 58:17.400
ähm, okay, also, was wir auf jeden Fall brauchen, ist die Möglichkeit, das Ding Remote uns die

58:17.400 --> 58:22.320
Ausgabe anzugucken. Ach ja, übrigens, was ich euch auch mal zeigen wollte, vielleicht

58:22.320 --> 58:28.400
interessiert es den ein oder anderen, wie man mit einem ESP32 oder mit einem Mercur-Controller

58:28.400 --> 58:34.640
wie man OTA machen kann, also sprich, Firmware-Update übers WLAN, ohne dass man das Ding immer per

58:34.640 --> 58:40.960
USB anschließen muss. Soll ich euch das mal zeigen, wie das geht, falls das den ein oder

58:40.960 --> 58:46.240
anderen interessiert. Passt nämlich ganz gut, weil das Ding, das hängt ja dann nicht

58:46.240 --> 58:51.720
am Rechner dran, sondern hängt hier irgendwo unten an der Steckdose, ähm, deswegen ist

58:51.720 --> 58:55.600
ziemlich beknackt, dass ich das dann für Firmware-Update immer abmachen müsste. Ich

58:55.600 --> 58:59.240
zeig euch jetzt mal, wie man Firmware-Update macht, das ist total einfach eigentlich,

58:59.240 --> 59:03.760
ähm, und wollte ich hier eh drinne umsetzen, deswegen passt das eigentlich ganz gut. Gibt's

59:03.760 --> 59:07.520
da eine Library für, ja klar, wir verwenden das, selbst machen tue ich das nicht. Obwohl

59:07.520 --> 59:10.720
ich hab's auch schon mal selbst gemacht mit dem eingebauten Web-Server, ist gar nicht

59:10.720 --> 59:15.400
so kompliziert, aber es ist viel einfacher, wenn man das mit einer fertigen Library macht.

59:15.400 --> 59:22.880
Leider gibt es diese Library nicht für Plattformer-O, das heißt, ich muss die selbst, muss die

59:22.880 --> 59:27.840
mal selbst Git clonen. Ich nehme meistens das Ding hier für, das ist ziemlich gut,

59:27.840 --> 59:31.800
das ist auch recht beliebt mit 109 Sternen auf GitHub. Wir klonen uns das jetzt einfach

59:31.800 --> 59:45.000
mal nach Documents-Platform-Io-Projects-Lib-Git-Clone-Git-Cleaner-Git-Clone-Bam. So, und wenn wir jetzt hier gucken,

59:45.000 --> 59:58.160
da ist es. So, da, oh, Include, Web, OTA, zack, alles drin. Und das witzige ist, im Prinzip

59:58.160 --> 01:00:01.160
war's es jetzt schon, das einzige, was man machen muss, also es ist mit der Library nämlich

01:00:01.160 --> 01:00:05.960
super einfach, das einzige, was man machen muss, ist Web-OTA-Handle in seiner Main-Loop

01:00:05.960 --> 01:00:11.200
aufrufen. Das ist alles, mehr muss man nicht machen. Und, äh, gut, man muss sich noch

01:00:11.200 --> 01:00:19.800
ins WLAN connecten, das machen wir jetzt erstmal. So, Wi-Fi, Begin. So, da musst du die SSID

01:00:19.800 --> 01:00:24.840
angeben, die hole ich hier immer aus meiner Secrets-Klasse, weil ich, wie gesagt, immer

01:00:24.840 --> 01:00:30.600
noch nicht will, dass irgendjemand mein Passwort und mein WLAN-Zeug sieht. Secrets-Passwort,

01:00:30.600 --> 01:00:41.000
zack. Jetzt müssen wir quasi sagen, ey, warte mal, bis, ähm, bis WLAN-Connected ist.

01:00:41.000 --> 01:00:49.120
Also, falls ich, Leute, falls ich irgendwas im Chat überlese, schreibts, schreibts einfach

01:00:49.120 --> 01:01:05.960
nochmal, kann sein, dass ich da gerade nicht ganz, nicht ganz durchblicke. Naja, zumindest

01:01:05.960 --> 01:01:13.360
müssen wir jetzt erstmal sagen, ähm, bis das Ding nicht Connected ist, das WLAN, dann

01:01:13.360 --> 01:01:18.000
warten wir so lang. Was machst du, was machst du genau beruflich? Boah, da hatte ich mal,

01:01:18.000 --> 01:01:22.760
da haben wir ein Kommando für. Ist das Sebaro oder irgendein Motta, der das Kommando kennt?

01:01:22.760 --> 01:01:27.000
Ich hab ein Kommando, da hab ich das nämlich schön, da hab ich das mal schön erklärt.

01:01:27.000 --> 01:01:40.960
Ich hab keine Ahnung, ist das vielleicht Ausrufezeichen Beruf? Es könnte Ausrufezeichen

01:01:40.960 --> 01:01:50.560
Beruf sein. Ja, genau. Wunderbar. Oder Arbeit. Das ist, Leute, ihr wisst ja, ich finde das

01:01:50.560 --> 01:01:55.640
toll, ihr wisst, die Sachen, meine Comments, besser als ich, als ich selbst. So, jetzt

01:01:55.640 --> 01:01:59.560
müssen wir erstmal warten, bis das Ding ins WLAN, bis das Ding ins WLAN Connected ist.

01:01:59.560 --> 01:02:05.440
Und zwar, kann man das ganz einfach machen, man kann hier einfach fragen, ist Connected?

01:02:05.440 --> 01:02:14.080
Und wenn es nicht Connected ist, dann warten wir einfach, bis es Connected ist. So, und

01:02:14.080 --> 01:02:24.640
dann geben wir irgendwie mal einen Punkt oder so aus und dann sagen wir Delay, Delay 500

01:02:24.640 --> 01:02:29.480
oder so. Und jetzt verbindet er sich zum WLAN, können wir uns jetzt schon mal angucken.

01:02:29.480 --> 01:02:34.200
Er verbindet sich jetzt zum WLAN und macht erstmal sonst nichts weiter, aber er verbindet

01:02:34.200 --> 01:02:39.040
sich zum WLAN, das ist schon mal, schon mal nicht verkehrt. Damit wir wissen, was das

01:02:39.040 --> 01:02:46.400
Ding für eine WLAN Adresse hat, müssen wir das Ganze natürlich ausgeben. Nämlich Dings

01:02:46.400 --> 01:02:53.880
Local IP. Jetzt connectet sich das Ding zum WLAN und gibt uns die IP, die er hat. Das

01:02:53.880 --> 01:02:57.880
ist ganz praktisch, weil die IP brauchen wir und die MAC brauchen wir auch gleich noch.

01:02:57.880 --> 01:03:11.200
Einfach mal so, weil es mir da nach ist. Pull-Request kontrollieren, schnellst nicht mehr. Äh,

01:03:11.200 --> 01:03:17.600
mir macht das eigentlich meisten Spaß. So, guck, jetzt gibt es hier schon aus, unter

01:03:17.600 --> 01:03:21.680
welcher Adresse man, ja, also würde es, wenn man es richtig schreibt, ausgeben, unter

01:03:21.680 --> 01:03:29.880
welcher Adresse man neue Firmware hochladen kann. So, laden wir das nochmal hoch, dass

01:03:29.880 --> 01:03:34.560
es uns die IP ausgibt und dann gucken wir mal, dann zeige ich euch, wie man das mit Firmware

01:03:34.560 --> 01:03:43.160
Update übers Netzwerk macht, weil das ist eigentlich total simpel. Aber vorher brauchen

01:03:43.160 --> 01:03:48.360
wir noch eine weitere Library, nämlich für Debug, beziehungsweise für Status-Ausgabe

01:03:48.360 --> 01:04:00.240
über Telnet, weil das Ding hängt ja aktuell hier per USB-Kabel dran. Connected. So, das

01:04:00.240 --> 01:04:05.040
ist die IP von dem Ding. So, und wenn ich jetzt mit dem Browser da drauf gehe, Port

01:04:05.040 --> 01:04:10.400
8080 ist Default, WebOTA, kann ich hier neue Firmware hochladen. Der Rest handelt diese

01:04:10.400 --> 01:04:16.160
Library für mich. Das ist natürlich extrem nice. Ich kann euch das mal zeigen, wir machen

01:04:16.160 --> 01:04:19.680
jetzt einfach mal, wir erstellen mal eine neue Firmware und laden die übers Webinterface

01:04:19.680 --> 01:04:24.200
hoch. Um welche Hardware geht es gerade? Wir machen, ich hab mich nämlich extra, diesmal

01:04:24.200 --> 01:04:31.120
machen wir was besser als die letzten Male. Heute haben wir einen ESP-866 und einen ESP-32.

01:04:31.120 --> 01:04:44.320
Aktuell basteln wir gerade an dem da rum. Is connected, bla bla bla. Okay, vielleicht

01:04:44.320 --> 01:04:50.600
mache ich jetzt noch etwas Sinnvolles da drinnen. Ja, genau, ich binde noch die Debug-Library

01:04:50.600 --> 01:04:55.800
ein. Dann nehme ich meistens die hier dafür. Das Ding muss man einfach installieren und

01:04:55.800 --> 01:04:59.920
dann startet es ein Telnet-Server, wo man sich darauf verbinden kann und sieht dann quasi,

01:04:59.920 --> 01:05:04.920
wenn das Ding im WLAN hängt, auch die Debug-Ausgaben, ohne dass man es eben per USB-Kabel angehängt

01:05:04.920 --> 01:05:10.160
haben muss. Und mit diesen zwei Sachen haben wir eigentlich auch schon alles, was wir brauchen,

01:05:10.160 --> 01:05:14.880
um das Ding eben nicht mehr an einem USB-Kabel anschließen zu müssen. Wir können Firmware

01:05:14.880 --> 01:05:23.200
hochladen und wir können uns die Debug-Ausgabe angucken per Telnet. Also eigentlich alles,

01:05:23.200 --> 01:05:38.760
alles was man, was man so braucht. Ne, das klingt irgendwie anders. Genau. Debug-Beginn,

01:05:38.760 --> 01:05:42.760
ein Hostname brauchen wir noch. Okay, machen wir ein Hostname. Wie nennen wir das Ding?

01:05:42.760 --> 01:05:59.400
Hostname ESP Now Server. Wir nennen es einfach mal so wie unser Projekt. Wie unser Projekt.

01:05:59.400 --> 01:06:09.760
Hostname. Zack. Dann müssen wir ihm noch sagen, dass er auch alle, dass er auch serielle Ausgabe

01:06:09.760 --> 01:06:14.240
machen soll, was sonst ein bisschen doof wäre, wenn er das nicht macht. Debug-Beginn können

01:06:14.240 --> 01:06:19.280
wir erst machen, nachdem WLAN initialisiert ist. Eigentlich relativ logisch. Und jetzt

01:06:19.280 --> 01:06:25.320
in Zukunft verwenden wir einfach Debug anstatt Serial, um Sachen auszugeben. So. Und ich

01:06:25.320 --> 01:06:28.200
kann euch auch gerade mal zeigen, dass das funktioniert. Ich kompiliere das jetzt mal

01:06:28.200 --> 01:06:33.960
schnell. Dann laden wir die neue Firmware per Web-Interface hoch, dass man auch mal sieht,

01:06:33.960 --> 01:06:38.680
wie man eben Firmware-Update machen kann, ohne dass die Kiste direkt per USB dranhängt.

01:06:38.680 --> 01:06:47.120
Gut. Neue Firmware ist kompiliert. Ich gehe jetzt hier auf die Webseite von meinem Controller.

01:06:47.120 --> 01:06:52.960
Da müssen wir hier browse. So, da muss ich jetzt erst mal Documents, Platformer, Broadcheck,

01:06:52.960 --> 01:07:00.640
ESP-NOW. Und die Firmware liegt, glaube ich, hier drunter. Ne. Obwohl lag die kompilierte

01:07:00.640 --> 01:07:09.160
Firmware immer drunter. Ich kann mir das jetzt mal nehmen. Ja. Da, oder? Ah, hier. Da liegt

01:07:09.160 --> 01:07:15.400
die Firmware drunter. So. Und die können wir jetzt ganz einfach flashen. OTA, also in

01:07:15.400 --> 01:07:22.280
dem Fall halt über den Browser auf die Kiste drauf. Update. So. Und danach sollten wir

01:07:22.280 --> 01:07:28.240
uns auch per Telnet verbinden können. Und das Ding funktioniert wieder. Soweit. Soweit

01:07:28.240 --> 01:07:42.200
die Theorie. Hoffentlich haben die Kiste jetzt neu gestartet. Gucken wir mal, was die Serial-Ausgabe

01:07:42.200 --> 01:07:56.680
sagt. Sie sagt nichts. Okay, gucken wir mal, ob das mit dem Telnet funktioniert. Ne, so

01:07:56.680 --> 01:08:07.640
ganz scheint das nicht zu funktionieren. Ähm. Okay. Aber Firmware-Update hat, glaube ich,

01:08:07.640 --> 01:08:14.520
schon mal funktioniert. Kann es sein, dass Eigenbau Smart Home echt ein Mammutprojekt

01:08:14.520 --> 01:08:21.840
ist? Ja, wenn man alles so machen will, wie man, wie man möchte. Klar, ja. Aber da ist

01:08:21.840 --> 01:08:34.320
der Weg das Ziel. Das macht man auch nicht, um fertig zu werden. Ah, ich hab noch was

01:08:34.320 --> 01:08:42.160
vergessen. Deswegen ging das Scheiß nicht. Ich muss hier noch sagen, Debug, Debug-Handle

01:08:42.160 --> 01:08:46.800
muss ich noch sagen. Dann funktioniert das nämlich auch. Okay Leute, wir laden die neue

01:08:46.800 --> 01:08:50.880
Firmware noch mal per Web-Interface drauf, dass man sieht, dass der Scheiß auch funktioniert.

01:08:50.880 --> 01:09:07.880
Fertig kompiliert. Zack. Firmware-Update. So. Und jetzt sollten wir uns auch per Telnet

01:09:07.880 --> 01:09:25.080
verbinden können. Und das sollte funktionieren. Ha, funktioniert. Jetzt haben wir nicht zugeguckt.

01:09:25.080 --> 01:09:29.560
Das funktioniert. Also sprich, wir können jetzt per Web-Interface, können wir Firmware

01:09:29.560 --> 01:09:34.880
hochladen, neue und wir haben eine Debug-Ausgabe per Telnet. Also quasi alles, was man so braucht,

01:09:34.880 --> 01:09:38.960
um das Ding betreiben zu können, ohne dass es per USB am Rechner hängt. Natürlich ist

01:09:38.960 --> 01:09:43.520
es, wenn man da jetzt, Debug entwickelt immer noch praktisch, das Ding per USB an den Rechner

01:09:43.520 --> 01:09:50.160
zu hängen, aber wenn das fertig ist und man hat es dann irgendwo an der Steckdose hängen,

01:09:50.160 --> 01:09:54.880
also am Arsch der Welt, in Zweifel unter dem Dach oder so, dann will man da vielleicht,

01:09:54.880 --> 01:09:59.160
wenn man kleine, kleine Firmware-Updates drauf spielen will, will man ja vielleicht nicht

01:09:59.160 --> 01:10:06.120
unbedingt jedes Mal per USB dahin. Kannst du mal anzeigen lassen, wie viel RAM frei ist.

01:10:06.120 --> 01:10:17.960
Ganze 40, 40.000 Bytes sind frei. So 40 KB oder so. Also richtig viel Massive-Huge-RAM

01:10:17.960 --> 01:10:29.960
hier, 40 KB. Oder ist das schon in Kilo Byte oder sind das sogar 4MB? Weiß ich gar nicht

01:10:29.960 --> 01:10:45.720
gerade. Wahrscheinlich ist das schon in Byte oder? 4MB wäre viel zu viel. Okay, weiter

01:10:45.720 --> 01:10:55.400
im Text. Also wir haben uns jetzt per WLAN verbunden. Machen wir noch mal eine Sache

01:10:55.400 --> 01:11:06.480
und zwar, wir gucken mal, was das für eine Geschwindigkeit standardmäßig hat. 74.000,

01:11:06.480 --> 01:11:13.360
da stellen wir nämlich jetzt mal unsere Geschwindigkeit für die seriöse Schildstelle ein und sagen

01:11:13.360 --> 01:11:23.680
hier Monitor Speed gleich. Und dann uploaden wir den Kram nochmal. Gut, okay, also wir

01:11:23.680 --> 01:11:29.520
können weitermachen. Wir haben uns jetzt verbunden zum WLAN. Bisher haben wir nichts

01:11:29.520 --> 01:11:40.240
Großartiges gemacht und wir haben unsere WLAN IP ausgegeben. Also alles noch kein

01:11:40.240 --> 01:11:48.120
großartig kompliziertes Ding. Schauen wir mal Farben an, Farben sind nie verkehrt. Ach

01:11:48.120 --> 01:11:52.480
so, eine Sache, die ich eigentlich sonst immer mache, habe ich hier vergessen. Nämlich

01:11:52.480 --> 01:12:00.400
ich sage immer nach jedem Neustart, hey WLAN Disconnect, Access Point Disconnect, nur für

01:12:00.400 --> 01:12:06.000
den Fall der Fälle, dass irgendwas hängen geblieben ist und Persistence Falls. Sonst

01:12:06.000 --> 01:12:09.840
packt das manchmal rum und versucht sich irgendwo hin zu verbinden, was es eigentlich gar nicht

01:12:09.840 --> 01:12:18.720
machen soll oder sowas. So ist das nämlich viel besser. Dann geben wir noch hier mal

01:12:18.720 --> 01:12:22.400
eine Zeile aus, so nach dem Motto, jetzt geht's los. Das mache ich auch immer ganz gerne

01:12:22.400 --> 01:12:26.240
am Anfang, dann sieht dann die Debug Ausgabe hier unten auch ein bisschen schöner aus.

01:12:26.240 --> 01:12:34.720
So, genau, jetzt geht's los. WLAN verbinden, wir wollen jetzt mit dieser Kiste ja sowohl

01:12:34.720 --> 01:12:42.440
in ESP Now Gateway aufmachen als auch uns normal ans Klein ins WLAN verbinden. Was bedeutet

01:12:42.440 --> 01:12:50.000
Persistence Falls, man kann dem Ding sagen, dass er sich WLAN Daten speichert, also man

01:12:50.000 --> 01:12:55.040
kann ihm sagen, dass er beispielsweise die Zugangsdaten aus seinem Flash Speicher speichern

01:12:55.040 --> 01:12:59.360
soll, da muss man die hier nicht Hardcoden und man kann ihm beispielsweise auch sagen,

01:12:59.360 --> 01:13:03.080
glaube ich zumindest, ich habe das nie überprüft, ob das wirklich so ist, der kann sich auch

01:13:03.080 --> 01:13:10.640
seine DHCP Reservierung und sowas per Flash merken, dann ist theoretisch, aber nur theoretisch,

01:13:10.640 --> 01:13:17.880
das macht unterm Schrich nicht viel aus, das Connecten schneller. Aber mir ist es lieber,

01:13:17.880 --> 01:13:27.320
ich weiß den Stand, was passiert. So, ich mache noch mal einen Delay rein, man weiß

01:13:27.320 --> 01:13:33.800
ja nie, das ist ja auch nicht die Kiste, die an der Batterie hängt am Ende. So, also was

01:13:33.800 --> 01:13:39.040
wir jetzt noch machen müssen, wir müssen den Modus umstellen von unserem WLAN Controller

01:13:39.040 --> 01:13:47.800
auf dem ESP 2866 und zwar müssen wir einstellen, dass der eben weder im Access Point Modus noch

01:13:47.800 --> 01:13:54.400
im Station Modus, das ist ein bisschen bescheuert die Bezeichnung für WLAN Modi, Station Modus

01:13:54.400 --> 01:13:58.200
ist ein ganz normaler WLAN Client, also das was man mit einem Tablet und einem iPhone

01:13:58.200 --> 01:14:07.040
auch macht. Access Point ist, man macht einen Access Point auf dem Controller auf, wo sich

01:14:07.040 --> 01:14:11.720
andere dran connecten können oder man macht so eine Mischung, sowohl Access Point als

01:14:11.720 --> 01:14:15.520
auch Client Modus und das ist das was wir machen wollen, denn wir wollen den Access

01:14:15.520 --> 01:14:20.680
Point aufmachen für unsere ESP Now Kommunikation, wir wollen allerdings auch selbst als WLAN

01:14:20.680 --> 01:14:25.680
im WLAN hängen, das heißt wir brauchen in dem Fall beides, wir brauchen Access Point

01:14:25.680 --> 01:14:31.800
Modus und Station, das heißt übrigens nicht Static, es heißt Station Modus, ich dachte

01:14:31.800 --> 01:14:38.600
früher auch immer das heißt Static. So, dann setzen wir noch mal schnell den Host,

01:14:38.600 --> 01:14:45.600
den Hostname, dass ich in meiner DHCP Reservierung auch sehe, was was ist, ja und dann machen

01:14:45.600 --> 01:14:53.920
wir unseren Beginn. So, dann warten wir bis WLAN Connected ist, ja das war's eigentlich.

01:14:53.920 --> 01:15:03.480
So, jetzt sind wir WLAN mäßig Connected, als nächstes müssen wir unseren ESP Now Gateway

01:15:03.480 --> 01:15:09.440
aufmachen, das ist auch relativ einfach, man weiß was man verwenden muss für Funktion,

01:15:09.440 --> 01:15:12.080
dass das ganze allerdings funktioniert, ich guck übrigens hier nebenbei ein bisschen

01:15:12.080 --> 01:15:15.760
ab, ich hab mir vorher, ihr wisst ja ich bereite das immer so ein bisschen vor, dass ich das

01:15:15.760 --> 01:15:20.560
nicht komplett blind mache, ich hab mir schon vorher ein bisschen was raus kopiert, wie

01:15:20.560 --> 01:15:27.160
das prinzipiell funktioniert, dauert das ja alles immer so lang. So, dann muss man erstmal

01:15:27.160 --> 01:15:35.000
den Header einbinden für ESP Now, ohne eingebundenen Header, kein ESP Now und jetzt kann man beispielsweise

01:15:35.000 --> 01:15:44.800
sagen, ähm, mach mir mal einen Access Point auf, für ESP Now, so und jetzt kommt der

01:15:44.800 --> 01:15:49.560
Witz da dran, wir wollen gar keinen richtigen Access Point aufmachen, wir wollen so einen

01:15:49.560 --> 01:15:55.720
Access Point Lite aufmachen, äh, glaubst du man kann sowas komplett ohne Hardwarekenntnisse

01:15:55.720 --> 01:16:01.000
also löten und so machen, ja, jaja, kannst du machen, also du kannst dir einfach zum

01:16:01.000 --> 01:16:06.800
üben, früher über kurz oder lang, wirst du dir eine Load Column kaufen, eine Load Station

01:16:06.800 --> 01:16:12.480
kaufen und ein bisschen mehr machen, aber auch zum Anfang brauchst du das nicht, du

01:16:12.480 --> 01:16:16.720
kaufst den NodeMCO, ich würd eigentlich sagen kauf dir gleich den ESP32, damit kann man

01:16:16.720 --> 01:16:22.760
im Endeffekt mehr machen, der ist schon komplett fertig, der kommt mit angelöteten Pins und

01:16:22.760 --> 01:16:27.880
alles fertig und USB Anschluss, kannst du einfach an den Rechner anstöpseln, Visual Studio

01:16:27.880 --> 01:16:36.120
Code, Platform IO, ähm, drauf als IDE, das war's, dann kannst du, hallo Welt, Delay 1000,

01:16:36.120 --> 01:16:44.000
gib ihm, Upload, ähm, und die meisten Sensoren muss man auch nichts löten, die meisten Sensoren

01:16:44.000 --> 01:16:51.600
kannst du ganz normal einfach mit, mit Kabels holst du dir bei Amazon hier irgendwie so

01:16:51.600 --> 01:16:57.760
ein 40er Pack, ähm, das sind übrigens 3er, du holst dir einfach ein 40er Pack, kost 2,50

01:16:57.760 --> 01:17:02.640
oder so, holst dir noch ein 40er Pack Jumperkabel oder DuPornkabel, wie auch immer man das genau

01:17:02.640 --> 01:17:09.920
nennt, und dann kannst du Sensoren anschließen, also die meisten Sachen musst du nicht löten,

01:17:09.920 --> 01:17:12.960
je nachdem was du dann später machen willst ist es auf jeden Fall aber nicht verkehrt,

01:17:12.960 --> 01:17:19.040
ja, aber so zum Anfang ein bisschen zu basteln, also die meisten Sachen, die ich hier habe,

01:17:19.040 --> 01:17:25.880
hier ist auch nichts großartig gelötet, das einzige, wo ich öfters löten muss ist, ähm,

01:17:25.880 --> 01:17:29.200
wenn ich halt Controller verwende, die keine Pins dran haben, dann musst du ja entweder

01:17:29.200 --> 01:17:33.200
die Sensoren und Sachen direkt dran löten oder du lötest halt, du musst die Pins dran

01:17:33.200 --> 01:17:39.880
löten, ja, genau, äh, Predboards kannst du auch nehmen zum stecken, also du musst nicht

01:17:39.880 --> 01:17:45.160
löten, aber auf der anderen Seite muss man sagen, ich dachte früher auch das ist ein

01:17:45.160 --> 01:17:53.680
großer Akt, aber löten ist äh, tatsächlich nix, nix wildes, also, es ist wirklich nichts,

01:17:53.680 --> 01:17:57.840
wo man irgendwie bedenken haben müsste, dass man es nicht hinkriegt, wichtig ist nur, dass

01:17:57.840 --> 01:18:06.160
man sich ordentliche Lötstation oder Lötkolben kauft, sonst kotzt man, ja, wenn man sich

01:18:06.160 --> 01:18:12.760
zum Beispiel, sowas gibt es wirklich, Amazon, wenn man sich zum Beispiel den USB-Lötkolben

01:18:12.760 --> 01:18:20.320
kauft, sowas gibt es, ähm, hat auch schon dementsprechend kack Bewertung, der funktioniert

01:18:20.320 --> 01:18:29.040
zwar prinzipiell, aber Spaß macht es damit nicht, ich hab mir mal auch Spaß so eingekauft,

01:18:29.040 --> 01:18:34.520
ja, weil ich einfach mal wissen wollte, ob das wirklich funktioniert, ähm, aber, ja,

01:18:34.520 --> 01:18:39.440
der funktioniert aber, es ist scheiße damit zu arbeiten, mit dem USB-Lötkolben, das ist

01:18:39.440 --> 01:18:50.320
wirklich Müll, äh, was richtig gut ist, ähm, ne, nicht Esra, Ersa, genau, die hab ich,

01:18:50.320 --> 01:18:54.560
die ist extrem gut, würde ich mir niemals kaufen, einfach so, wenn ich nicht weiß,

01:18:54.560 --> 01:18:58.720
dass man es braucht, ja, das ist jetzt nur so eine Sache, wenn man schon weiß, dass man,

01:18:58.720 --> 01:19:01.880
dass man eben eine Lötstation haben möchte, dann kann ich das Ding empfehlen, das ist

01:19:01.880 --> 01:19:06.640
wirklich gut, das ist die beste Lötstation, die ich je hatte, oder besser gesagt, der

01:19:06.640 --> 01:19:14.160
beste Lötkolben, den ich je hatte, äh, ist wirklich super, die hat auch auswechselbare

01:19:14.160 --> 01:19:19.120
Spitzen, also das Ding ist richtig gut, das hat nen flexiblen, flexibles Kabel zum Lötkolben,

01:19:19.120 --> 01:19:23.440
der Lötkolben ist nicht viel größer als ein dicker Stift, du kannst, du kannst die,

01:19:23.440 --> 01:19:28.720
ähm, kannst die Spitzen austauschen, vorne relativ einfach, es heizt sau schnell, machst

01:19:28.720 --> 01:19:33.360
er an, 10 Sekunden später, 350 Grad, ähm, es ist alles dabei, also, wenn man wirklich

01:19:33.360 --> 01:19:36.840
sagt, ich möchte eine Lötstation haben, ist das Ding wirklich gut, die gibt's auch noch

01:19:36.840 --> 01:19:41.320
ein bisschen, ein bisschen, ein bisschen kleiner, gibt's die auch noch, da kostet es dann nur

01:19:41.320 --> 01:19:47.480
150 Euro, ähm, aber die ist wirklich gut, ansonsten kann man doch erstmal mit nem USB-Lötkolben

01:19:47.480 --> 01:19:54.840
ein bisschen rumfuddeln, ja, oder man kauft sich so nen 20 Euro-Lötkolben, klar geht

01:19:54.840 --> 01:20:01.800
auch, ok, also wir müssen jetzt unseren ESP Now Access Point starten, äh, und dazu würde

01:20:01.800 --> 01:20:06.520
ich sagen, definen wir mal noch ein paar Sachen, wir müssen dafür nämlich einstellen, ähm,

01:20:06.520 --> 01:20:13.160
tja, was müssen wir eigentlich genau einstellen, was das Ding für eine ID hat, was das Ding

01:20:13.160 --> 01:20:19.840
für ein Passwort hat, für einen Channel und ob die SSID hidden ist oder nicht, allerdings,

01:20:19.840 --> 01:20:24.880
wohlgemerkt, das sieht zwar so aus wie normale Access Point Konfiguration, ist es allerdings

01:20:24.880 --> 01:20:29.760
nicht, das ist, das ist kein Access Point, wo später dann irgendwie ein iPhone oder

01:20:29.760 --> 01:20:34.720
so drüber joinen könnte, das ist rein ein Access Point, wo ESP Now drüber konfigurieren

01:20:34.720 --> 01:20:44.480
kann, da geht nicht so viel mit, also so wie wir es einstellen jetzt, ok, also wir brauchen

01:20:44.480 --> 01:20:53.240
hier, was brauchen wir, definen Access Point Name, ähm, wie nennen wir denn das Ding,

01:20:53.240 --> 01:21:04.040
Mitch Stremsor, ne, irgendwie, irgendwie hat er es, keine Ahnung, äh, ESP Now, ist

01:21:04.040 --> 01:21:12.280
eigentlich vollkommen egal, wie das Ding heißt, so, dann müssen wir noch definen sowas wie

01:21:12.280 --> 01:21:23.280
WLAN Channel 1, ähm, ist übrigens egal, man kann 1 nehmen, man kann, man kann alles mögliche

01:21:23.280 --> 01:21:27.360
nehmen, ja, aber ich nehme mal, ich nehme mal 1, äh, weil eine Sache muss einem klar

01:21:27.360 --> 01:21:31.480
sein, dass das funktioniert, das ist auch das, wo ich am Anfang übelste Probleme mit

01:21:31.480 --> 01:21:37.680
hatte, ESP Now und WLAN gleichzeitig zum Laufen zu bekommen, der Channel vom WLAN, was man

01:21:37.680 --> 01:21:45.400
hier joint, äh, der Channel vom WLAN, was man hier joint, muss der gleiche Channel sein,

01:21:45.400 --> 01:21:46.640
den man auch für ESP Now verwenden.

01:21:46.640 --> 01:21:58.880
Ja, also ich würde, ich würde auch empfehlen, weiß auch nicht, was im Chat diskutiert wird,

01:21:58.880 --> 01:22:03.240
also ich würde empfehlen bei Lötkolm oder bei der Heißloft Pistole oder sowas, da würde

01:22:03.240 --> 01:22:07.360
ich gucken, dass ich mir nicht unbedingt die billigste China-Kacke kaufe, weil man, man

01:22:07.360 --> 01:22:17.080
sieht das, man sieht das ganz gut an den Amazon-Bewertungen zum Beispiel, wenn man jetzt mal sucht, Heißloft,

01:22:17.080 --> 01:22:23.080
so, ähm, wenn man hier zum Beispiel danach sucht, hier, das ist das billigste Ding, was

01:22:23.080 --> 01:22:29.880
es gibt, das ist für 14,99, das ist, hört sich zwar deutsch an, aber es ist wahrscheinlich

01:22:29.880 --> 01:22:36.320
innen drinne billigster China-Crap, weil wenn man sich die, die, ähm, Bewertungen durchschließt,

01:22:36.320 --> 01:22:41.000
Vorsicht, Achtung, bei dem einen sprüht das Ding Funken, bei dem anderen löst sich, löst

01:22:41.000 --> 01:22:48.560
sich auf und fackelt ab, stinkt, brennt, ähm, so, also, wahrscheinlich ist es keine gute

01:22:48.560 --> 01:22:50.760
Idee hier 10, 20 Euro zu sparen.

01:22:50.760 --> 01:22:58.400
Das ist dann eher so die Premium-Variante.

01:22:58.400 --> 01:23:12.280
Von Steinel hab ich auch eine, allerdings eine andere, ich hab eine, wie heißt die,

01:23:12.280 --> 01:23:21.760
HL, 19, 20 E, man sieht schon, da sind da einfach mal 30 Euro Preisunterschied dazwischen,

01:23:21.760 --> 01:23:26.560
aber von der Qualität her merkt man das, bei der hab ich beispielsweise keinen, die kann

01:23:26.560 --> 01:23:30.680
man, die kann man hinten aufstellen, die ist so gemacht, dass quasi hier eine, hier gerade

01:23:30.680 --> 01:23:34.120
ist, das heißt, die kann man auch hochkant hinstellen, hier hab ich keine Bedenken, dass

01:23:34.120 --> 01:23:38.920
das Ding anfängt zu fackeln, dass das Ding umfällt oder sonst was, das stinkt auch nicht,

01:23:38.920 --> 01:23:43.160
ja, das, das kokelt nicht, das funktioniert einfach und ist auch schnell heiß.

01:23:43.160 --> 01:23:51.200
Wofür braucht man so ein Ding, meinst du jetzt die Lötstation oder heiß, heiß Dings, äh,

01:23:51.200 --> 01:24:20.280
Heißluftpistole, zum Blasen, null alter, null, ja, genau, zum Beispiel für Schrumpfschläuche

01:24:20.280 --> 01:24:27.120
oder aber auch, um manche Sachen zu löten, also richtig, im Prinzip benutze ich hauptsächlich

01:24:27.120 --> 01:24:33.720
für Schrumpfschläuche, es stimmt und ich hab's früher, ja, ich hab's früher auch

01:24:33.720 --> 01:24:37.840
mit einem Feuerzeug gemacht, im Feuerzeug ist es schwierig, die Dinger gleichmäßig

01:24:37.840 --> 01:24:42.920
hinzukriegen, außerdem fackelt man mit dem Feuerzeug gerne mal Kabel an, die im Schrumpfschlauch

01:24:42.920 --> 01:24:49.960
drin stecken, also es geht mir eine Heißluftpistole deutlich besser als mit dem Feuerzeug, ich

01:24:49.960 --> 01:24:56.880
hab's früher auch mit dem Feuerzeug gemacht, du kannst auch sagen, um festgelötete Teile

01:24:56.880 --> 01:25:01.120
abzulösen, ist es zum Beispiel auch ganz, ganz praktisch, dann tust du dir, dann brichst

01:25:01.120 --> 01:25:05.480
du dir mit dem Lötkolben einen ab, das einzige, wie du das hinkriegst mit dem Lötkolben ist,

01:25:05.480 --> 01:25:10.600
ähm, mit ein bisschen Kupfer oder halt mit so einem Sauge-Ding, also das löst hinwegkriegst,

01:25:10.600 --> 01:25:15.280
ähm, aber mit so einer, mit so einer Heißluftpistole ist es eigentlich ganz praktisch, dann kannst

01:25:15.280 --> 01:25:20.040
du das komplette Ding aufheizen und dann nimmst du die Zange und ziehst es ab oben, zum Teilen

01:25:20.040 --> 01:25:23.160
ablöten, oder wenn du SMD-Teile hast, kannst du dich natürlich toll damit ablöten oder

01:25:23.160 --> 01:25:30.040
auch anlöten, ja, ja, gut, aber wir wollen jetzt den Access-Point aufmachen, also, oh

01:25:30.040 --> 01:25:35.440
Gott, ich lass mich heute wieder übel sidetracken, oder? Wir haben wieder noch fast nichts geschafft,

01:25:35.440 --> 01:25:43.440
also, okay, Channel brauchen wir, ähm, okay, lass mal kurz in mich gehen, Access-Point-Name

01:25:43.440 --> 01:25:50.320
brauchen wir, Access-Point, ähm, Access-Point-Passwort brauchen wir, ja, brauchen wir leider, aber

01:25:50.320 --> 01:25:55.120
wir brauchen es nicht, also wir stellen es nur ein, ohne dass wir es brauchen, klingt

01:25:55.120 --> 01:25:59.640
jetzt bescheuert, aber die Funktion möchte ein Passwort haben, auch wenn wir es im Endeffekt

01:25:59.640 --> 01:26:04.560
nicht verwenden, also brauchen wir ein tolles Passwort, also haben wir hier sowas hier,

01:26:04.560 --> 01:26:15.680
SMD-Debated-Poggers, bestes WLAN-Passwort aller Zeiten, sidetracks or FPS, ja, ist schlimm,

01:26:15.680 --> 01:26:37.520
okay, damit können wir den Access-Point starten, also sagen wir, PName, AP-Passwort, ähm, Channel,

01:26:37.520 --> 01:26:41.480
wir heiten bei unserer SSID, auch wenn es überhaupt nichts bringt, Max Connections

01:26:41.480 --> 01:26:48.580
4 ist okay, so, ähm, wohlgemerkt, wir werden den für ESP-Nau verwenden, der funktioniert

01:26:48.580 --> 01:27:01.720
gar nicht als normaler Access-Point, so, ähm, jetzt müssen wir uns noch ausgeben lassen,

01:27:01.720 --> 01:27:07.640
ob das Ganze funktioniert hat, also sprich, wenn Result nicht okay ist, dann geben wir

01:27:07.640 --> 01:27:23.480
aus, ähm, sowas wie, wie, keine Ahnung, ähm, AP-Failed, ne, was soll das, und, äh, wenn

01:27:23.480 --> 01:27:31.120
es okay ist, dann sagen wir, ne, dann sagen wir nix, das juckt mich nicht, wenn es okay,

01:27:31.120 --> 01:27:37.000
ich gehe davon aus, wenn es nichts ausgibt, dass es okay ist, glaub, das ist der bessere

01:27:37.000 --> 01:27:41.320
Ansatz in dem Fall, so, was wir jetzt auf jeden Fall machen müssen, ist noch, wir müssen

01:27:41.320 --> 01:27:47.960
uns die, ähm, Mac vom, äh, vom Access-Point ausgeben lassen, weil die Mac vom Access-Point

01:27:47.960 --> 01:28:00.480
ist nicht gleich der Mac von unserer Netzwerkkarte, so, also brauchen wir sowas wie AP-Mac, und

01:28:00.480 --> 01:28:09.280
dann, ähm, irgendwo hier gibt es was, Mac-Adress, genau, so, dann gucken wir mal, ob das jetzt

01:28:09.280 --> 01:28:17.400
funktioniert, dann solltet ihr den Access-Point aufmachen und uns ne Mac-Adresse raushauen,

01:28:17.400 --> 01:28:33.880
so, ich kommentiere das, das OTA mal wieder aus, weil wir machen jetzt eh kein OTA über

01:28:33.880 --> 01:28:44.000
den Browser, ob man so einen 8266 als Repeater verwenden kann, gute Frage, wahrscheinlich,

01:28:44.000 --> 01:28:54.640
wahrscheinlich, ob's Sinn macht, ist wieder was anderes, im Prinzip machen wir ja sowas,

01:28:54.640 --> 01:28:58.280
bloß dass wir auf der einen Seite ESP-NOW sprechen, auf der anderen Seite sprechen wir

01:28:58.280 --> 01:29:13.760
halt normales WLAN, gehen müsste es wahrscheinlich, das Ding als Repeater zu verwenden, ja, das

01:29:13.760 --> 01:29:21.280
Ding, das ist ja so, so, WLAN-Connection, bla bla bla, bla bla bla bla bla bla, connected,

01:29:21.280 --> 01:29:25.320
übrigens, dass die Debug-Ausgabe hier so aussieht, liegt daran, dass wir jetzt Debug

01:29:25.320 --> 01:29:30.440
und nicht Serial-Print verwenden und das Farben ausgibt für die Kommandozeile, ok,

01:29:30.440 --> 01:29:43.840
sechstes Point Mac, speicher ich mir mal hier gerade, die brauchen wir nämlich gleich noch

01:29:43.840 --> 01:29:55.800
für den anderen, für die andere Kiste, so, jetzt müssen wir ESP-NOW initialisieren,

01:29:55.800 --> 01:30:02.760
das ist relativ einfach, ESP-NOW init, das war's, das muss man nicht machen, ESP-NOW,

01:30:02.760 --> 01:30:09.320
achso, vielleicht sollte ich mal gucken, ist ok, machen wir es anders, machen wir es wieder

01:30:09.320 --> 01:30:20.720
wie oben, ist not ok, schreiben wir auf Debug raus, ESP-NOW init failed, ich gehe nicht

01:30:20.720 --> 01:30:26.160
davon aus, dass init failed, aber wenn init failed, dann möchten wir es wissen, so, gucken

01:30:26.160 --> 01:30:37.600
wir mal, ob das jetzt funktioniert, so, ähm, genau, als nächstes müssen wir unseren callback

01:30:37.600 --> 01:30:46.720
registrieren, wenn neue Daten empfangen werden, also im Prinzip ist das so, man übergibt

01:30:46.720 --> 01:30:53.240
dieser Funktion eine Funktion, die dann aufgerufen wird, wenn neue Daten empfangen werden, spielst

01:30:53.240 --> 01:30:58.000
du das neue Gears 5, wenn's rauskommt, ja auf jeden Fall, alle Gears gespielt, auch wenn

01:30:58.000 --> 01:31:01.880
ich das letzte ziemlich langweilig fand, ich fand das 3er schon ziemlich langweilig

01:31:01.880 --> 01:31:06.880
und ehrlich gesagt sogar schon das 2er zum Teil, das 1er ist das beste Gears, da nehmen

01:31:06.880 --> 01:31:12.880
sie sich vor allem noch nicht so ernst, in allen anderen Gears Teilen machen sie so auf

01:31:12.880 --> 01:31:21.040
Story und Emotionen, was halt Gears nie gewesen ist, von am Anfang, ja, deswegen fand ich

01:31:21.040 --> 01:31:31.200
den ersten Gears Teil eigentlich am besten, so, jetzt müssen wir der ganzen eine callback

01:31:31.200 --> 01:31:37.600
Funktion übergeben, oder aber, wir machen jetzt hier auf krasse C++ Owner und verwenden

01:31:37.600 --> 01:31:45.360
mal ein C++ Lambda, da kann ich mir allerdings die Sündachs immer nicht merken, ich glaube,

01:31:45.360 --> 01:31:52.000
ich glaube, vom Prinzip her ist die Sündachs relativ simpel so, das ist jetzt halt ein Lehrer,

01:31:52.000 --> 01:31:57.680
Lambda, genau, so, das brauche ich natürlich noch Funktion, wie muss denn so eine ESP Now

01:31:57.680 --> 01:32:08.560
überhaupt aussehen, ESP Now REC, die haben ja auch wieder tolle, tolle, wo ist denn sowas

01:32:08.560 --> 01:32:18.720
aussehen, 12, die backen wir mal, die backen wir mal, ah ja, hier steht es, das brauche

01:32:18.720 --> 01:32:28.640
ich, das brauche ich als Parameter, ah ja, U8 MAC Address, U8 Data, U8, ne, warum meine

01:32:28.640 --> 01:32:34.880
ich U8, normalerweise verwendet man hier unter Arduino eigentlich eher das da, wahrscheinlich

01:32:34.880 --> 01:32:42.000
im Prinzip alles das gleiche unter der Haube, so, funktioniert man Lambda jetzt, hey, funktioniert,

01:32:42.000 --> 01:32:47.480
krasser Scheiß, äh, Multiplayer habe ich Gears Over nie großartig gespielt, der Friseur ging

01:32:47.480 --> 01:32:53.200
übelst ab, der hat Gears Over Multiplayer bis zum Erbrechen gespielt, ok, so, und was

01:32:53.200 --> 01:32:57.560
machen wir in unserem Lambda, in unserer Funktion, wenn wir neue Daten empfangen, geben wir einfach

01:32:57.560 --> 01:33:24.720
das, äh, Ahnung, gehen wir da auf, ok, Gott Packet, eh was, mehr machen wir erstmal nicht,

01:33:24.720 --> 01:33:29.000
wir wollen ja gucken, ob die Datenübertragung überhaupt funktioniert, so, wir haben ein

01:33:29.000 --> 01:33:36.520
Callback, der sagt aktuell einfach nur, ey, ich habe was gekriegt, wenn er was kriegt,

01:33:36.520 --> 01:33:51.080
ähm, oder lasse ich den schon was, komm, wir lassen den, wir lassen den, wir lassen

01:33:51.080 --> 01:33:58.160
den die Daten ausgeben, wir lassen den die Daten ausgeben, da muss ich jetzt einmal gucken,

01:33:58.160 --> 01:34:05.520
dass hier mit meinen C++-Skills nicht an die Grenze kommen, von dem was ich C++-mäßig

01:34:05.520 --> 01:34:10.040
auf die Reihe kriege, so, wie mache ich denn jetzt da draus irgendwas, was ich gescheit

01:34:10.040 --> 01:34:16.720
ausgeben kann, den fahren wir, klar, der fahren wir, der, der, der, du kannst, geh mal iFrisi

01:34:16.720 --> 01:34:22.240
auf Twitch ein, der streamt öfters, also ich müsste da draus jetzt ja eigentlich sowas

01:34:22.240 --> 01:34:32.000
wie, wie einen String machen können, mit Länge, geht das, kann ich den String da draus machen

01:34:32.000 --> 01:34:44.120
mit Data und Länge, ich meine U8 ist ja im Prinzip, im Prinzip ein Chaar, wir machen

01:34:44.120 --> 01:34:52.360
das jetzt mal ganz einfach, ich gebe einfach nur, ähm, ich gebe einfach nur das erste,

01:34:52.360 --> 01:35:03.680
das erste Byte aus, sonst nix, boah, was zum Teufel, was hat er jetzt für Probleme, warum

01:35:03.680 --> 01:35:17.720
kann ich das nicht printen, muss ich das jetzt erst casten oder was, ähm, liebe C++-Profis,

01:35:17.720 --> 01:35:28.440
was hat er jetzt für Schmerzen eigentlich, so, was war, wo war, was will er jetzt, warum

01:35:28.440 --> 01:35:38.920
geht das nicht, warum kann ich nicht einfach nen Byte nehmen und zu Chaar casten, ach PrintF,

01:35:38.920 --> 01:35:43.360
ich will ja gar nicht, ich will nur Print, haha, richtig, äh, ja, der Chat wusste es

01:35:43.360 --> 01:35:47.200
mal wieder, im Prinzip hab ich's richtig gemacht, ich hab die falsche Funktion verwendet, ja,

01:35:47.200 --> 01:35:50.160
genau, so wollen wir das haben, dann muss ich das ganze wahrscheinlich auch nicht casten,

01:35:50.160 --> 01:35:56.160
sondern das kriegt er wahrscheinlich sogar selbst auf die Reihe, rewrite in Rust, genau,

01:35:56.160 --> 01:36:02.000
so, ok, geben wir mal, wir können's aber auch einfach so machen, äh, wir machen einfach

01:36:02.000 --> 01:36:17.040
ne Schleife, äh, bis dahin und geben einfach jedes Byte aus, was er bekommt, so, so, das

01:36:17.040 --> 01:36:22.840
ist nicht schlecht, ok, ähm, dann sind wir soweit mit dem Sender, äh, mit dem Empfänger

01:36:22.840 --> 01:36:28.960
eigentlich fertig, das mit MQTT verschicken machen wir dann danach, würde ich sagen, wenn

01:36:28.960 --> 01:36:47.120
das funktioniert, dass der was kriegt, ok, send, äh, nicht send, upload, so, dann stöpsel

01:36:47.120 --> 01:36:57.080
ich den ab, dann stöpsel ich den ab und, ähm, mach den eigentlichen ESP32 dran, der

01:36:57.080 --> 01:37:07.720
für die Tür und für den Briefkasten drankommt, ich hoffe ich hab nix vergessen, ja, ich mein,

01:37:07.720 --> 01:37:10.000
gut, wenn ich was vergessen hab, muss ich dann wieder mal schnell anstöpseln oder über

01:37:10.000 --> 01:37:26.040
das W dann hochladen, WebOTA ist aber aus, stimmt, ja dann schließe ich den an, das wird

01:37:26.040 --> 01:37:29.640
schon funktionieren, ich hab das ja schonmal, ich hab das schonmal gemacht, das müsste eigentlich,

01:37:29.640 --> 01:37:35.640
müsste eigentlich prinzipiell gehen, ok, ähm, ich stöpsel den jetzt mal, ich stehe

01:37:35.640 --> 01:37:51.760
jetzt auf und stöpsel den in die Steckdose daneben dran rein, delete, und jetzt gucken

01:37:51.760 --> 01:38:07.240
wir mal, ob wir da Remote per Telnet draufkommen, ähm, ha, bam, äh, BeatBroad, ja, ja, auf

01:38:07.240 --> 01:38:11.400
jeden Fall, Rust ist ne super Sache, ich, was ich an Rust lustig finde, Rust gibt's

01:38:11.400 --> 01:38:14.840
ja auch schon ein paar Jahre, es ist gar nicht so neu, ähm, ich mein, im Vergleich

01:38:14.840 --> 01:38:19.040
zu C und C++ ist es natürlich super neu, gibt's aber auch schon seit 4-5 Jahren als

01:38:19.040 --> 01:38:25.480
Rust, ähm, was ich bei Rust immer witzig finde, egal wo, auf Reddit oder in irgendwelchen

01:38:25.480 --> 01:38:32.880
Foren oder in Kommentarsektionen, ähm, ist die Rust Task Force immer am Start, also

01:38:32.880 --> 01:38:38.400
sobald es irgendwie darum geht, ähm, mit anderen Sprachen ist sofort einer dann am

01:38:38.400 --> 01:38:44.640
Start und sagt, ja, aber Rust, immer so, an sich ist Rust ne super Sprache, zwar ne

01:38:44.640 --> 01:38:49.640
Sprache, in der es irgendwo nervig ist zu programmieren, weil es halt einem vieles verbietet,

01:38:49.640 --> 01:38:53.960
allerdings oftmals zurecht, ja, also wenn Rust sagt, es ist nicht sicher, dann liegt

01:38:53.960 --> 01:38:57.400
es in der Regel nicht daran, dass Rust zu doof ist, sondern dass man selbst zu doof ist.

01:38:57.400 --> 01:39:05.400
Da muss ich ein bisschen an diese ganze Checker-Geschichte gewöhnen, von Rust, dann ist es eigentlich

01:39:05.400 --> 01:39:06.400
echt nice.

01:39:06.400 --> 01:39:19.200
Kann man mit Artstilungs immer noch punkten, wusste ich gar nicht, okay, ähm, wir haben

01:39:19.200 --> 01:39:25.320
den Kram geuploadet, äh, er läuft und jetzt machen wir ein neues Projekt für unseren

01:39:25.320 --> 01:39:33.440
ESP32, ich hab schon den Schalter angestöpselt und ich hab auch schon den Ultraschall-Sensor

01:39:33.440 --> 01:39:34.440
angestöpselt.

01:39:34.440 --> 01:39:48.880
Das heißt, wir können gleich loslegen, wenn ich das USB-Kabel dran krieg, krieg das USB-Kabel

01:39:48.880 --> 01:39:49.880
aber nicht dran.

01:39:49.880 --> 01:39:50.880
Warum krieg ich das USB-Kabel nicht dran?

01:39:50.880 --> 01:39:53.480
Alter, wo ist das Problem?

01:39:53.480 --> 01:40:02.520
Ah, jetzt, connect to virtual machine, remember choice, zack, okay, das heißt wir brauchen

01:40:02.520 --> 01:40:14.160
jetzt ein neues Projekt, und zwar brauchen wir ein ESP Now Client, nennen wir den jetzt

01:40:14.160 --> 01:40:23.160
einfach mal, da haben wir aktuell ein NodeMCU dran, ja, okay, auf gehts.

01:40:23.160 --> 01:40:52.800
Die Insiders sind am Start, so, so, ähm, aber hier zu, so, ESP Now.

01:40:52.800 --> 01:40:57.760
Als erstes setzen wir mal hier, weil es ein NodeMCU ist, unseren Monitor-Speed auf, ich

01:40:57.760 --> 01:41:03.520
kanns mir immer nicht merken, 11500, ne, ah, wie ist das?

01:41:03.520 --> 01:41:08.520
Ich kanns mir immer nicht merken, es ist 2, ne, so, oder?

01:41:08.520 --> 01:41:11.560
Ja, genau, haha, passt.

01:41:11.560 --> 01:41:23.200
Ah, bilden wir das ganze mal, äh, und jetzt machen wir unsere Main auf.

01:41:23.200 --> 01:41:28.280
So, was wir hier natürlich auch wieder brauchen ist include ESP Now, sonst funktioniert das

01:41:28.280 --> 01:41:36.640
ganze nicht, und wir messen auch gleich mal von Anfang an, also, die, die, die Loop hier

01:41:36.640 --> 01:41:40.120
unten werden wir gar nicht brauchen, wir machen das alles in Setup, weil wir gehen ja dann

01:41:40.120 --> 01:41:50.840
in Deep Sleep, also, so, ähm, muss ich mal kurz auf meinen Spickzettel gucken, dass ich

01:41:50.840 --> 01:42:00.000
hier nix, äh, nix übersehe, was wir machen müssen, so, also wir werden auf jeden Fall

01:42:00.000 --> 01:42:04.680
erst mal jetzt messen, wie lange das dauert, weil das ganze hat natürlich nur Sinn, wenn

01:42:04.680 --> 01:42:08.720
wir deutlich schneller sind, wie gesagt, wir gucken uns ja noch mal unsere Batterie, äh,

01:42:08.720 --> 01:42:16.480
die Calculation an, ähm, wenn wir nicht viel schneller sind, als, äh, normal WLAN an Access

01:42:16.480 --> 01:42:20.360
Point zu connecten, dann hat das ganze auch keinen großartigen Sinn, das heißt, wir müssen

01:42:20.360 --> 01:42:25.360
auf jeden Fall gucken, äh, wir sind nicht in SieSharp, ähm, wir müssen auf jeden Fall

01:42:25.360 --> 01:42:31.320
gucken, wie schnell der ganze Mist ausgeführt wird, das heißt, wir merken uns jetzt mal

01:42:31.320 --> 01:42:36.000
die Millisekunden am Start, und äh, ziehen dann die Millisekunden am Ende von ab, und

01:42:36.000 --> 01:42:48.920
dann wissen wir, wie lange das ganze gelaufen ist, so, Beginn, äh, übrigens, falls ich

01:42:48.920 --> 01:42:53.240
hier ein bisschen zu sehr vor mich hin, äh, schwubbele und mache, und man irgendwas überhaupt

01:42:53.240 --> 01:42:57.880
nicht checkt, oder dem man was wissen will, schreibts einfach ganz normal, wie, wie immer,

01:42:57.880 --> 01:43:02.080
ja, macht das ja schon, äh, in Chat, ich muss jetzt mal in Chat reingucken, falls ich was

01:43:02.080 --> 01:43:14.240
übersehen habe, ähm, ne, hab ich nicht, ok, also weiter im Text, wir nehmen die Zeit

01:43:14.240 --> 01:43:27.040
vom Start, jetzt machen wir mal sowas wie, ähm, weil wir jetzt gleich jede Menge Ausgabe

01:43:27.040 --> 01:43:31.720
kriegen, machen wir mal hier ein paar New Lines davor, dann machen wir mal wieder unsere

01:43:31.720 --> 01:43:40.120
übliche, oder Max, Max Entry Message, so, mach ich eigentlich bei jeder, bei jeder Geschichte,

01:43:40.120 --> 01:43:43.640
da seh ich, ok, wenn, wenn hier ne Reihe mit Gleichheitszeichen kommt, dann, dann gehts

01:43:43.640 --> 01:43:54.000
los, so, ähm, jetzt müssen wir erst mal ESP Now initialisieren, machen wir uns ne eigene

01:43:54.000 --> 01:43:58.720
Funktion dafür, wobei, ne, wir probieren erst mal aus, ob, ob's theoretisch funktioniert,

01:43:58.720 --> 01:44:14.920
äh, if SP Now in it, not ok, ja, das ist ein bisschen doof, beim ESP 866 heißt es ok,

01:44:14.920 --> 01:44:30.960
beim ESP 32 heißt es ESP ok, weil China, keine Ahnung, was schreibt's nicht, dann macht

01:44:30.960 --> 01:44:37.400
er nicht weiter, ne, ähm, ok, also wenn wir das da drinnen haben, ich muss jetzt erst

01:44:37.400 --> 01:44:40.800
mal überlegen, in welcher Reihenfolge man das Ganze machen muss, muss ich mal kurz abgucken,

01:44:40.800 --> 01:44:53.720
ne, pass schon, mach ich richtig, ESP Now in it, wenn das nicht ist, dann, haha, ne, ne,

01:44:53.720 --> 01:45:05.760
wir brauchen, wir brauchen noch ein bisschen mehr, dass hier nämlich richtig sehe, wenn

01:45:05.760 --> 01:45:10.960
ich das hier nämlich richtig sehe, brauchen wir noch ein bisschen mehr, wir brauchen nämlich

01:45:10.960 --> 01:45:22.720
noch, ähm, wir brauchen nämlich noch ein paar Datensstrukturen, die wir nachher, wobei,

01:45:22.720 --> 01:45:36.240
dann warten wir's mal ab, ok, ähm, wenn ESP Now in it failed, dann, print, was ist, ESP

01:45:36.240 --> 01:45:37.280
Now failed, return, ach ne, return können wir nicht machen an der Stelle, weil es noch

01:45:37.280 --> 01:45:43.960
keine Funktion ist, so, ähm, failed, so, als nächstes, muss man, oder davor besser gesagt,

01:45:43.960 --> 01:45:50.000
muss man erst mal komplett, äh, muss man erst mal sagen, wir wollen eigentlich an Wlan

01:45:50.000 --> 01:45:57.960
gar nicht großartiges was verwenden, was muss man da vorher einbinden, so irgendwie Wi-Fi,

01:45:57.960 --> 01:46:08.040
ja, äh, Mode, diesmal müssen wir sagen, hey, wir wollen das Wlan in Station Mode verwenden,

01:46:08.040 --> 01:46:11.960
allerdings, wie gesagt, das ist eh nur fake, das ist ESP Now und unter der Haube hat das

01:46:11.960 --> 01:46:15.560
eigentlich mit normalem Wlan überhaupt nichts zu tun, dann sagen wir wieder Persistence

01:46:15.560 --> 01:46:20.280
Falls, frag mich nicht warum, weil ich das immer sag, und dann sagen wir wieder Disconnect,

01:46:20.280 --> 01:46:31.600
weil ich das jedes Mal so mach, so, ESP Now in it und jetzt gucken wir mal, ob der prinzipiell

01:46:31.600 --> 01:46:48.360
funktioniert, schauen wir mal, ha, hallo coin, ja, ich, äh, bin unter anderem namen auf,

01:46:48.360 --> 01:46:56.720
auf Twitch, oh, oh, eine, eine, eine Donation, da muss ich jetzt tatsächlich ja mal nachgucken,

01:46:56.720 --> 01:47:04.160
wann kommt neue Folger, Team, Dankeschön, äh, Leona Bomber 1997 für 5 Euro, ähm, tja,

01:47:04.160 --> 01:47:09.560
so gute Frage, ich kanns dir nicht beantworten, weiß ich nicht, ich hab mir allerdings schon

01:47:09.560 --> 01:47:15.200
genug Themen aufgeschrieben, ähm, für, für neue Videos, ich muss aber, ich muss es halt

01:47:15.200 --> 01:47:19.680
einfach mal machen, ja, aber ich, ich hab's die letzten Livestreams und so schon gesagt,

01:47:19.680 --> 01:47:24.720
ich hab nicht so wahnsinnig viel Bock auf, auf YouTube, als Plattform irgendwie, und

01:47:24.720 --> 01:47:28.800
ich mein, sowas, was ich hier mache, ich find's ja eh voll, total abgedreht, irgendwie,

01:47:28.800 --> 01:47:32.440
dass mir irgendwie teilweise, sag mal jetzt, 87 sind wir jetzt, manchmal sind wir sogar

01:47:32.440 --> 01:47:38.720
über 150, wenn ich irgendwelche abgedrehten Dinger programmier, wo wahrscheinlich die

01:47:38.720 --> 01:47:41.640
Hälfte der Leute, oder mehr als die Hälfte der Leute, die zuguckt, so wahrscheinlich

01:47:41.640 --> 01:47:49.240
und immer genau checkt, um was es hier überhaupt geht, äh, äh, könntest du eigentlich mal

01:47:49.240 --> 01:47:56.800
ein Stream machen, in dem wir ein Hack für irgendein Game programmieren, oh, also erstens

01:47:56.800 --> 01:48:03.840
wollt ich dazu sagen, da kenn ich mich nicht so gut aus, ähm, so ein paar Sachen, so ein

01:48:03.840 --> 01:48:07.320
paar Basics-Sachen, irgendwie versuchen Ram auszulesen oder sowas, krieg ich schon noch

01:48:07.320 --> 01:48:13.080
gebacken, ähm, da müssen wir uns halt auch in ein Spiel raussuchen, wo wir nicht gebannt

01:48:13.080 --> 01:48:21.400
werden, also wir könnten mal was machen in der Richtung, dass wir ein Overlay basteln,

01:48:21.400 --> 01:48:27.080
der dann irgendwas anzeigt, während man das Spiel auf hat, wir können ja sowas billiges

01:48:27.080 --> 01:48:34.200
nehmen wie Solitär oder so, irgendwas, irgendein Mist, der halt nicht über Steam läuft oder

01:48:34.200 --> 01:48:41.480
so, da können wir mal gucken, ja, das könnten wir mal machen, das ist eigentlich keine schlechte

01:48:41.480 --> 01:48:54.120
Idee, aber da bin ich jetzt nicht so der Pro drinnen, smarten Briefkasten, der hättest

01:48:54.120 --> 01:48:58.080
du gerne, ja, vielleicht, vielleicht ist da noch was dabei, es gibt, glaub ich, nix

01:48:58.080 --> 01:49:03.200
gescheites Fertiges, ok, also, wir haben jetzt unser ESP Now installisiert, wir testen jetzt

01:49:03.200 --> 01:49:10.160
einfach mal, ob wir was schicken können, und dazu müssen wir eine ganz wichtige Geschichte

01:49:10.160 --> 01:49:17.120
machen, nämlich, wir müssen sagen, ESP Now, und dazu brauchen wir jetzt die Mac Adresse

01:49:17.120 --> 01:49:20.240
von unserem Access Point, und den haben wir ja vorher aufgeschrieben, wir müssen jetzt

01:49:20.240 --> 01:49:24.760
nämlich sagen, ESP Now add pair, und daran sieht man auch, das ist kein WLAN, das ist

01:49:24.760 --> 01:49:29.600
eigentlich einfach nur Funk auf der WLAN Frequenz, was diese Dinger da machen, deswegen ist es

01:49:29.600 --> 01:49:39.160
auch so viel schneller, oh, äh, nicht Secrets anklicken Max, nicht Secrets anklicken, Teile

01:49:39.160 --> 01:49:47.760
anklicken, das hier ist die Mac Adresse, die wir brauchen, so, die Mac Adresse, und damit

01:49:47.760 --> 01:49:52.520
wir die Mac Adresse verwenden können, müssen wir da erstmal ein Array draus machen, und

01:49:52.520 --> 01:50:01.520
quasi ein Element pro byte reinschreiben, also die Mac Adresse, also, wir brauchen jetzt

01:50:01.520 --> 01:50:15.840
quasi einen byte Array aus der Mac Adresse, also, hier Konst, uint, remote mac, so, und

01:50:15.840 --> 01:50:30.280
da initialisieren wir das Ding jetzt mit 0x3, 0x71, 0xbf, 0x3a, Mac Adressen tippen, ist

01:50:30.280 --> 01:50:39.720
ganz, ganz fein, 0x09 und 0xfd, so, jetzt haben wir unsere Mac Adresse hier drin stehen,

01:50:39.720 --> 01:50:44.440
dann müssen wir jetzt nämlich sagen, hey, wir möchten mit dieser Mac Adresse kommunizieren,

01:50:44.440 --> 01:51:11.840
das machen wir ganz, ganz einfach, so, jetzt machen wir hier einen

01:51:11.840 --> 01:51:20.840
über die Leute, die so extrem ausflippen, wie dankbar sie allen sind, wenn sie zugucken und sowas.

01:51:20.840 --> 01:51:26.840
Und ich hab ja, ich hab ja damals immer gesagt, alles, alles, alles, alles gelogen, ja.

01:51:26.840 --> 01:51:33.840
Aber ich muss sagen, mittlerweile, glaube ich, ist bei manchen wirklich was dran.

01:51:33.840 --> 01:51:36.840
Ich glaube, das ist bei vielen wirklich so.

01:51:36.840 --> 01:51:44.840
Die übertreiben es natürlich massiv, ja. Und bei manchen und bei den meisten wird es zwar wirklich einfach berechnend sein,

01:51:44.840 --> 01:51:46.840
weil die wissen, die Leute hören das gerne.

01:51:46.840 --> 01:51:50.840
Aber ich glaube, bei vielen, bei vielen ist es tatsächlich so.

01:51:50.840 --> 01:51:52.840
Die freuen sich wirklich.

01:51:52.840 --> 01:52:00.840
Und letztendlich, weil ich meine, ich merke es an mir, wenn ich jetzt hier so Dinge mache, die halt jetzt wirklich nicht Mainstream sind, ja.

01:52:00.840 --> 01:52:07.840
Ich freue mich da wirklich drüber, wenn jetzt gerade 90 Leute zugucken.

01:52:07.840 --> 01:52:09.840
Das ist halt, das ist halt ultra nice, ja.

01:52:09.840 --> 01:52:13.840
Und was ich auch immer ganz toll finde, ist halt einfach, wenn im Chat was los ist.

01:52:13.840 --> 01:52:19.840
Man muss ja sagen, hier im Chat bei mir ist ja gefühlt mehr los, als bei Leuten, die 500 Zuschauer haben.

01:52:19.840 --> 01:52:22.840
Oder 1000 Zuschauer bei einem oder anderen.

01:52:22.840 --> 01:52:26.840
Du hast Leute, ich gucke ja immer noch die einen oder anderen Overwatch-Streams zum Beispiel,

01:52:26.840 --> 01:52:31.840
da ist total viel los und du hast manche, da ist quasi nichts los, haben aber trotzdem 2000 Zuschauer.

01:52:31.840 --> 01:52:32.840
Das ist übelst krass.

01:52:32.840 --> 01:52:37.840
Und dafür ist bei mir wirklich enorm viel los für jetzt 86 Zuschauer.

01:52:40.840 --> 01:52:41.840
Ja, das stimmt.

01:52:41.840 --> 01:52:44.840
Und ich bin eine einzig relativ große, relativ große, ja.

01:52:44.840 --> 01:52:46.840
Also mein 680 im Vergleich zu nichts.

01:52:46.840 --> 01:52:49.840
Und im Vergleich zu YouTube-Aufrufen ist das Ganze auch nichts.

01:52:49.840 --> 01:52:51.840
Aber trotzdem macht es mir irgendwie mehr Spaß.

01:52:51.840 --> 01:52:53.840
Schon merkwürdig, ne.

01:52:53.840 --> 01:52:59.840
Also ich habe quasi die Wahl, 25.000 am ersten, ja doch, ungefähr,

01:52:59.840 --> 01:53:05.840
sagen wir mal 20.000 Aufrufe am ersten Tag auf YouTube oder um die 90 Zuschauer auf Twitch.

01:53:05.840 --> 01:53:07.840
Und mir macht es irgendwie mehr Spaß.

01:53:11.840 --> 01:53:12.840
Ich finde das ist cool.

01:53:12.840 --> 01:53:15.840
So, also jetzt müssen wir uns mal einstellen, an welche Mac-Adresse wir das schicken wollen.

01:53:15.840 --> 01:53:17.840
Wir machen jetzt einfach mal unsere Testnachricht.

01:53:17.840 --> 01:53:23.840
So, dazu brauchen wir die Mac-Adresse von unserem ESPNOW Partner.

01:53:23.840 --> 01:53:26.840
Also der jetzt hier quasi an der Steckdose hängt rechts.

01:53:26.840 --> 01:53:29.840
Mac-Adresse ist hier, haben wir ja einge-, kann ich das mal oben löschen.

01:53:29.840 --> 01:53:30.840
Mac-Adresse haben wir eingestellt.

01:53:30.840 --> 01:53:35.840
So, und damit das Ganze funktioniert, brauchen wir jetzt, weil, weil halt, ne,

01:53:35.840 --> 01:53:38.840
das schreibe ich jetzt ab, weil ich keine Ahnung habe, warum das so sein muss,

01:53:38.840 --> 01:53:40.840
weil der Hersteller einfach nur sagt, das muss so sein.

01:53:40.840 --> 01:53:43.840
Leute, ihr müsst echt nicht donaten.

01:53:43.840 --> 01:53:47.840
Ein Euro, Flow 690, danke schön, ich fühle mich nicht genügend, sehr schön.

01:53:47.840 --> 01:53:51.840
Das ist ja gut, wenn du dich da nicht dazu genügend fühlst.

01:53:51.840 --> 01:53:58.840
Also wir brauchen jetzt ein ESPNOW per Info.

01:53:58.840 --> 01:54:02.840
Sagt der Hersteller, also wenn ihr auf der Herstellerseite guckt, das ist Democode,

01:54:02.840 --> 01:54:08.840
den ich entweder von GitHub irgendwo kopiert habe oder von der Herstellerseite, eins von beidem.

01:54:08.840 --> 01:54:12.840
Ich glaube, der, der Abstand ist aber tatsächlich von der, von der Herstellerseite.

01:54:12.840 --> 01:54:19.840
So, ESPNOW per Info.

01:54:19.840 --> 01:54:22.840
Ich kann euch das nicht so genau erklären, weil, weil der Hersteller halt sagt,

01:54:22.840 --> 01:54:29.840
dass das so sein muss.

01:54:29.840 --> 01:54:32.840
So, mehr müssen wir an der Stelle aber auch nicht machen.

01:54:32.840 --> 01:54:39.840
Und jetzt können wir sagen, was für ein Pair wir kommunizieren wollen.

01:54:39.840 --> 01:54:43.840
Nämlich mit dem da. Und da müssen wir vorher in die Struktur noch ein bisschen was reinschreiben.

01:54:43.840 --> 01:54:52.840
Da müssen wir nämlich sagen...

01:54:52.840 --> 01:54:56.840
Hab ich verguckt. Ach ja, genau, wir müssen sagen, welchen WLAN-Channel wir verwenden wollen.

01:54:56.840 --> 01:55:00.840
Nämlich eins, das ist das, was ich vorhin gesagt habe, dass das WLAN, was wir verwenden

01:55:00.840 --> 01:55:06.840
und die ESPNOW-Kommunikation müssen auf dem gleichen Kanal laufen, sonst funktioniert das Ganze nicht.

01:55:06.840 --> 01:55:11.840
Und wir wollen das Ganze nicht verschlüsseln. Das können wir irgendwie später mal machen.

01:55:11.840 --> 01:55:32.840
Security First ist nicht so angesagt.

01:55:32.840 --> 01:55:36.840
Benutzt du für deine persönlichen Projekte Git nur offline-comment oder auch online-push?

01:55:36.840 --> 01:55:41.840
Ich benutze es nicht bei allem, weil, sind wir mal ehrlich, wenn man hier irgendwie sagt,

01:55:41.840 --> 01:55:46.840
ich skript SH und schwuppelt sich dann hier irgendwas zusammen, scheiß drauf,

01:55:46.840 --> 01:55:52.840
das check ich auch nicht ins Git ein, sobald ich im 1, 2, 3, 4 Stunden je nachdem dran sitze an irgendwas

01:55:52.840 --> 01:55:57.840
und dann sag, äh, jetzt bist du da schon eine Weile zugange oder wenn so der Punkt ist,

01:55:57.840 --> 01:56:00.840
dass ich was umstricken will und aber einen funktionierenden Stand behalten will,

01:56:00.840 --> 01:56:04.840
dann mach ich immer Git-init im jeweiligen Ordner. Aber mach ich eigentlich hauptsächlich bei mir lokal

01:56:04.840 --> 01:56:11.840
und ich hab ne GitLab, äh, nicht kein GitLab, ich hatte früher ein GitLab.

01:56:11.840 --> 01:56:17.840
GitThea heißt Frontend hier am Start, sieht ein bisschen aus wie GitApp in Thean,

01:56:17.840 --> 01:56:21.840
aber eigentlich könnte ich das löschen, weil ich push da eh so gut wie nie hin.

01:56:21.840 --> 01:56:26.840
Ich werde Git eigentlich zum größten Teil lokal. Ah Leute, jetzt hört aber auf.

01:56:26.840 --> 01:56:39.840
What the fuck? Ja, abonnieren geht nicht. Abonnieren geht nicht. Abonnieren ist nicht möglich.

01:56:47.840 --> 01:56:53.840
Ähm, so, okay. Wir machen hier gerade richtig Progress, jetzt lenkt mich mal halt ab.

01:56:53.840 --> 01:56:58.840
Okay, also wir haben den Kram jetzt geadded, ähm, jetzt müssen wir noch und das sagt auch der Hersteller,

01:56:58.840 --> 01:57:03.840
dass das so geht, jetzt müssen wir noch die Mac-Adresse, die wir hier oben haben,

01:57:03.840 --> 01:57:08.840
dieses Byte-Array müssen wir jetzt noch da rein kopieren.

01:57:08.840 --> 01:57:13.840
Das geht bestimmt, also ich bin mir jetzt gar nicht so sicher, was ich hier eigentlich treibe.

01:57:13.840 --> 01:57:18.840
Das ist, das ist Democode vom Hersteller. Also ich vermute mal, dass das Folgendes macht,

01:57:18.840 --> 01:57:24.840
das kopiert einfach sechs Elemente aus diesem Remote-Mac, kopiert das eben hier da rein.

01:57:24.840 --> 01:57:32.840
Also wahrscheinlich, wahrscheinlich hätten wir hier oben das auch direkt schreiben können, oder?

01:57:32.840 --> 01:57:40.840
Ach nee, hier oben geht das natürlich nicht. Warum gibt es kein Progress-Emote,

01:57:40.840 --> 01:57:48.840
weil auch keiner ein Progress-Emote gemacht hat? Ganz einfach.

01:57:51.840 --> 01:57:58.840
Okay, so, und jetzt sind wir eigentlich bereit mit unserem ESP-NOW-Gateway zu kommunizieren

01:57:58.840 --> 01:58:04.840
und mal gucken, ob das Scheiß funktioniert. Ich weiß, nachdem ich mehr oder weniger den Beispiel-Code genommen habe,

01:58:04.840 --> 01:58:09.840
sollte das jetzt eigentlich funktionieren, aber schauen wir mal, ob das funktioniert.

01:58:09.840 --> 01:58:18.840
Vielleicht habe ich hier irgendwo was vergessen. Also, um was zu sehen, jetzt geht es aber los hier.

01:58:22.840 --> 01:58:26.840
Perdition, dass Max Partner wird. Ja, wie gesagt, ich muss noch ein paar Tage streben,

01:58:26.840 --> 01:58:30.840
dass ich mich wieder Partnern bewerben kann. Was ist dieses ESP-NOW eigentlich?

01:58:30.840 --> 01:58:40.840
Das ist ein ganz, ganz light-white WLAN-Ersatz, wenn man zwischen zwei Microcontrollern kommunizieren will.

01:58:40.840 --> 01:58:44.840
Problem ist, ich weiß nicht, ob du am Anfang dabei warst, Problem ist halt das hier.

01:58:44.840 --> 01:58:53.840
Ich möchte an meinem Briefkasten einen ESP32 hinhängen, der mir Bescheid sagt, wenn ein Post da ist,

01:58:53.840 --> 01:58:56.840
und der mir Bescheid sagt, wenn einer die Hoftür aufmacht.

01:58:56.840 --> 01:59:02.840
Das Problem ist, das Ding soll an der Batterie laufen, was heißt, jegliche Zeit, wo das an ist,

01:59:02.840 --> 01:59:06.840
und nicht im Sleep, ist zu viel Zeit, weil dann die Batterie schneller leer geht,

01:59:06.840 --> 01:59:13.840
und das Verbinden zum WLAN-Access-Point von einem ESP32 dauert ungefähr zwei Sekunden,

01:59:13.840 --> 01:59:17.840
und das Versenden der Daten und Verbinden zu MQTT dauert noch mal 1,5 Sekunden.

01:59:17.840 --> 01:59:27.840
Wir sind wahrscheinlich zwei bis drei Sekunden an mit relativ hohem Energieverbrauch, weil wir eben WLAN-Pakete verschicken,

01:59:27.840 --> 01:59:35.840
und das ist zu lang. Dann macht es das Ding, keine Ahnung, zwei Monate an der Batterie, und dann ist es leer.

01:59:35.840 --> 01:59:45.840
Das Ziel ist jetzt, dass wir ESP-NOW verwenden zur Kommunikation von der Kiste zu einem anderen ESP.

01:59:45.840 --> 01:59:51.840
Der hängt am Strom, und der nimmt die Daten per ESP-NOW entgegen und schickt sie dann weiter übers WLAN.

01:59:51.840 --> 02:00:02.840
Klingt ein bisschen sehr, äh, was machst du, was gegen Witterungseinflüsse, äh, eine Plastikkiste mache ich gegen Witterungseinflüsse, Einflüsse, Flüsse.

02:00:02.840 --> 02:00:05.840
Einfach eine Plastikkiste drumherum.

02:00:05.840 --> 02:00:18.840
Hier, EP, 65 Box, äh, eine kleine, wenn es geht. Ja, irgendwie sowas hier kommt da drum. Was Kleines, ist viel zu groß, viel zu groß.

02:00:18.840 --> 02:00:26.840
Einfach eine Staub, Wind, Wetter, ding, feste, festes Gehäuse. Ich glaube, das habe ich. Ja, das habe ich, glaube ich.

02:00:26.840 --> 02:00:33.840
Das habe ich mir mal bestellt, ein Pack von Volvo, ordentliches Gehäuse, kannst du auf AliExpress kaufen, ist noch viel billiger.

02:00:33.840 --> 02:00:39.840
Ja, ich würde die Kisten mit dem 3D-Druckersatz austrunken, aber 3D-Drucken, wasserdicht, äh, ist so ein, so ein Ding, ja.

02:00:39.840 --> 02:00:49.840
Da kommt der, da kommt der Controller rein, die Batterie rein, ja, das ist die Batterie, Batterie rein, Controller rein, Loch reingebohrt mit dem Kegelbohrer.

02:00:49.840 --> 02:01:01.840
Übrigens, eine der Tools, die man unbedingt braucht, hätte ich nie für möglich gehalten, dass man sowas braucht, aber es ist eines der besten Erfindungen ever, Kegelbohrer.

02:01:01.840 --> 02:01:07.840
Wenn man, wenn man in Plastik und Holz und sowas schöne Löcher bekommen will, Kegelbohrer, beste.

02:01:07.840 --> 02:01:15.840
Kannste nämlich stufenlos vergrößern, da fängst du hier nebenan, machst das kleinste Loch rein, machst, nimmst die nächste Stufe, machst ein Loch rein,

02:01:15.840 --> 02:01:29.840
dann machst du es genauso groß, das Loch hier neben an der Box, was du brauchst, um ein Kabel durchzukriegen und ähm, an das Kabel kommt dann der Schalter dran für das Hoftor.

02:01:29.840 --> 02:01:39.840
Oder machst halt so, dass genau das Kabel durchpasst, entweder ist es schon dicht, weil es halt so knapp bemessen ist, oder du schmierst noch ein bisschen Kleber drum herum, dann ist es auf jeden Fall dicht.

02:01:39.840 --> 02:01:48.840
Ja, oder machst vorne so einen Ring und hinten so einen Ring davor, das wird auf jeden Fall dicht, damit, weil mit so einem Kegelbohrer kannst du wirklich das Loch genauso groß machen, wie es sein muss.

02:01:48.840 --> 02:01:52.840
Das braucht man, das ist wirklich sehr enorm praktisch, hätte ich auch nicht für möglich gehalten.

02:01:52.840 --> 02:02:01.840
So, also wir senden jetzt was über ESPNOW. Ähm, hab ich noch, hab ich noch irgendwas vergessen, Leute, ich muss mal kurz noch auf meinen Spickzettel gucken.

02:02:01.840 --> 02:02:17.840
Ähm, ne, probieren wir mal. ESPNOW send. Ähm, so, hier kann ich, hier kann ich jetzt die Daten angeben.

02:02:17.840 --> 02:02:26.840
Da schreiben wir einfach mal 0xFF, also 255, Länge 1. Geht das so?

02:02:26.840 --> 02:02:34.840
Das geht natürlich nicht. Kann ja einen Int nicht einfach so konvertieren. Ja, ok, dann, äh, Uint.

02:02:34.840 --> 02:02:40.840
Geht's jetzt? Geht auch nicht. Alter, was ist denn jetzt wieder das Problem, ey?

02:02:40.840 --> 02:02:48.840
Ach so, ha, ich muss da einen Error draus machen, dass es funktioniert. Ok, also, Uintdings, da war irgendwie was, was ich...

02:02:48.840 --> 02:03:06.840
Data 1 gleich das da. Manchmal geht mir C echt auf den Sack. So, ha, jetzt geht's doch.

02:03:06.840 --> 02:03:19.840
Jetzt funktioniert's. Ok, ähm, ähm, tja. Wollen wir mal gucken, ob's funktioniert, ha?

02:03:19.840 --> 02:03:25.840
Nachher eins habe ich noch vergessen. Wir müssen noch einen Callback registrieren, der uns Bescheid sagt, wenn der Sendeprozess fertig ist.

02:03:25.840 --> 02:03:30.840
Das müssen wir noch machen. Sehe ich hier gerade, ähm, das mache ich hier davor.

02:03:30.840 --> 02:03:37.840
Diesen Teil können wir noch schöner machen, der gefällt mir irgendwie nicht. Der sieht auch so, so nicht C++ mäßig aus, sondern so, so extrem rotsy.

02:03:37.840 --> 02:03:46.840
Wir müssen nämlich noch sagen, registerSendCallback. So, und dann machen wir wieder ein Lambda dran.

02:03:46.840 --> 02:03:53.840
So, und der Lambda kriegt, da müssen wir wieder gucken, was der für Optionen kriegt.

02:03:53.840 --> 02:04:01.840
Wie not found. Wie soll ich denn nachgucken, was der für Dinger braucht, wenn er nur, ach, da steht's doch.

02:04:01.840 --> 02:04:16.840
Und warum kann ich nicht zur Definition springen, wenn es, wenn es doch, wenn es doch da steht?

02:04:16.840 --> 02:04:27.840
Okay, das brauchen wir. Hab ich noch was im Chat übersehen?

02:04:27.840 --> 02:04:35.840
Was hältst du von Blockchain-Technologie?

02:04:35.840 --> 02:04:47.840
Der kann ich jetzt, ich bin auch ehrlich gesagt nicht sonderlich, sonderlich, kenne ich da auch nicht sonderlich, sonderlich gut mit aus.

02:04:47.840 --> 02:04:55.840
Ich bin da glaube ich der Falsche für, zumindest ist es keine Lösung einfach überall Blockchain dran zu schreiben, dass man hip ist.

02:04:55.840 --> 02:05:16.840
Welche Idee ist das? Das ist Visual Studio Code mit Plattform I.O. für die Arduino-Geschichte.

02:05:16.840 --> 02:05:25.840
Ja, man muss dazu sagen, diese Visual Studio, äh, die, die Plattform I.O. Plugin, das gibt's glaube ich auch nur für, für VS Code.

02:05:25.840 --> 02:05:36.840
Okay, also, sagen wir jetzt hier Print, Print, dann schreiben wir jetzt einfach nur irgendwie sowas wie, ähm, ähm, Send, okay.

02:05:36.840 --> 02:05:42.840
Oder was sagt der Hersteller dazu, wie man das macht? Ich, ich copy paste mir das jetzt einfach.

02:05:42.840 --> 02:05:52.840
Ähm, der Hersteller sagt man schreibt da noch den Sendestatus hin und der Sendestatus, achso, der Sendestatus, den hab ich ja da hinten.

02:05:52.840 --> 02:06:09.840
Äh, also sag ich hier Print, Send, okay, äh, und Status, Print, achso, Printline, Status.

02:06:09.840 --> 02:06:20.840
So, okay, jetzt gucken wir, ob der Scheiß funktioniert. Ich verbind, also, der müsste jetzt hier Pakete senden und da müssten, müssten die Pakete ankommen.

02:06:20.840 --> 02:06:44.840
Ich hoffe, das funktioniert. Scheiße, kommt nix an. Fuck.

02:06:44.840 --> 02:06:54.840
Okay, es funktioniert schon mal nicht. Aber, geb ich da drüben überhaupt was aus?

02:06:54.840 --> 02:07:16.840
Ja, jetzt ist die, jetzt ist die Frage, woran's liegt. Das ist natürlich jetzt ziemlich doof, ja. Send, okay.

02:07:16.840 --> 02:07:27.840
Kann ich den hier neu starten über diese Debug-Ausgabe? Nee. Tja.

02:07:27.840 --> 02:07:37.840
Woran könnte das jetzt liegen? Das ist eigentlich mehr oder weniger Example Code vom Hersteller.

02:07:37.840 --> 02:07:54.840
Hab ich noch irgendwas vergessen?

02:07:54.840 --> 02:08:09.840
Wir starten mal neu, sollte das Initialisieren failen.

02:08:09.840 --> 02:08:19.840
Ja, also wenn ihr Ideen habt, dann schießt's los. Wie sie sehen, sehen sie nichts.

02:08:19.840 --> 02:08:27.840
Also, ich würde jetzt mal sagen, der sendet schon korrekt, das ist okay. Wir sollten noch mal gucken, ob wir die MAC-Adresse richtig haben, glaube ich.

02:08:27.840 --> 02:08:39.840
Doch, wir sollten mal gucken, ob die MAC-Adresse richtig ist. Vielleicht, vielleicht habe ich die MAC-Adresse falsch geschrieben.

02:08:39.840 --> 02:08:49.840
Gucken wir mal. Ich, ich ziehe mal den anderen wieder rein und raus, dann gucken wir mal, ob das funktioniert.

02:08:49.840 --> 02:08:59.840
Gucken, ob ich schnell genug bin und...

02:08:59.840 --> 02:09:07.840
Nee, ich war wahrscheinlich nicht schnell genug. Dann muss ich das andere nochmal aufmachen und gucken.

02:09:07.840 --> 02:09:16.840
Ja, aber prinzipiell funktioniert es. Guck doch mal. In der Zeit, wo ich es rausgezogen habe, konnte er nicht senden, oder?

02:09:16.840 --> 02:09:21.840
Ach nee, keine Ahnung.

02:09:21.840 --> 02:09:32.840
Tja, dann stöpseln wir den anderen nochmal an und gucken, wo das Problem ist.

02:09:32.840 --> 02:09:39.840
Vielleicht habe ich die MAC-Adresse falsch. Schauen wir mal.

02:09:39.840 --> 02:10:00.840
Ja, ich, ich stöpsel es nochmal um.

02:10:00.840 --> 02:10:06.840
Warum macht man USB-Kabel immer falsch rum rein?

02:10:06.840 --> 02:10:14.840
Ja, connect.

02:10:14.840 --> 02:10:18.840
So, also, wo ist jetzt genau das Problem?

02:10:18.840 --> 02:10:21.840
Erstmal wieder uploaden.

02:10:21.840 --> 02:10:28.840
Wo ist das Problem? Eigentlich hätte ich erwartet, dass da so was wie Package Received kommen.

02:10:28.840 --> 02:10:41.840
Hab ich da irgendwas vergessen?

02:10:41.840 --> 02:10:46.840
Müssen wir mal, müssen wir mal schauen jetzt. Wahrscheinlich habe ich die MAC-Adresse falsch oder so.

02:10:46.840 --> 02:10:50.840
Irgendwas in der Richtung, irgendwas in der Richtung wird schon sein.

02:10:50.840 --> 02:10:58.840
Hier, MAC.

02:10:58.840 --> 02:11:00.840
Warum geht denn das jetzt?

02:11:00.840 --> 02:11:04.840
Oh, ich habe die Debug-Ausgabe falsch gemacht. Das ging die ganze Zeit.

02:11:04.840 --> 02:11:18.840
Ich habe, ich lasse über Serial ausgehen und nicht über Telnet. Das hat die ganze Zeit funktioniert.

02:11:18.840 --> 02:11:28.840
Na gut, wenn wir gerade dabei sind, da können wir noch die Ausgabe ein bisschen schöner machen.

02:11:28.840 --> 02:11:34.840
Package Received 255, ja.

02:11:34.840 --> 02:11:41.840
Das hat die ganze Zeit schon funktioniert.

02:11:41.840 --> 02:12:01.840
Ach, der Bostick hat es erkannt.

02:12:01.840 --> 02:12:07.840
Tja, so ist es. Manchmal hängt es an kleinen Sachen.

02:12:07.840 --> 02:12:12.840
Gut, dann kann ich jetzt hier wieder umstöpseln.

02:12:12.840 --> 02:12:18.840
Ja genau, der Unterschied bei Debug ist, dass es eigentlich nur Debug heißt.

02:12:18.840 --> 02:12:24.840
In Wirklichkeit hier diese Remote-Debug-Klasse verwendet, wo man sich dann bei Telnet verbinden kann.

02:12:24.840 --> 02:12:30.840
Und normal Serial ist halt über USB.

02:12:30.840 --> 02:12:44.840
Ah, dann stöpsel ich das mal wieder um.

02:12:44.840 --> 02:12:54.840
Das ist so facke.

02:12:54.840 --> 02:13:02.840
Jetzt können wir nämlich zur eigentlichen Geschichte kommen, nämlich dem ESP für den Briefkasten.

02:13:02.840 --> 02:13:08.840
Das ist ja daher. Nachdem wir jetzt wissen, dass die ESP-Now-Kommunikation funktioniert.

02:13:08.840 --> 02:13:20.840
Da, da, siehst du, 255. Ich kann euch auch zeigen, dass es funktioniert. Wir senden jetzt mal hier, keine Ahnung, eins.

02:13:20.840 --> 02:13:34.840
So, und wenn der jetzt sendet, dann sendet der eins. Wer hat das gedacht? Funktioniert.

02:13:34.840 --> 02:13:38.840
So, also wir sehen, dass im Prinzip klappt das.

02:13:38.840 --> 02:13:46.840
Okay, wir machen das Ganze jetzt mal ein bisschen schöner. Wir machen uns eine Send-Funktion.

02:13:46.840 --> 02:13:54.840
Aber wahrscheinlich brauchen wir das noch ein bisschen öfters hier. Also send data.

02:13:54.840 --> 02:13:58.840
Und jetzt nehmen wir mal ein bisschen C++-Gedöns, damit es wahrscheinlich der Patrick vor ist.

02:13:58.840 --> 02:14:01.840
Ist er überhaupt da? Wird er sich wahrscheinlich freuen.

02:14:01.840 --> 02:14:07.840
Nämlich dann nehmen wir hier mal einen Vektor für data.

02:14:07.840 --> 02:14:13.840
Da können wir nämlich ein neues C++-Feature ausprobieren, was ich letztens in irgendeinem Stream gesehen habe.

02:14:13.840 --> 02:14:18.840
Ich mache normalerweise relativ wenig in C und C++.

02:14:18.840 --> 02:14:23.840
Aber ich habe letztens in Stream geguckt, wo irgendwie einer die neuen 2017er Features vorgestellt hat.

02:14:23.840 --> 02:14:27.840
Und eine Sache fand ich da eigentlich ganz cool.

02:14:27.840 --> 02:14:34.840
Moment, wo ist jetzt das Problem? Was hat er hier für Schmerzen?

02:14:34.840 --> 02:14:39.840
Achso, ja.

02:14:39.840 --> 02:14:43.840
Genau, dann nehmen wir einen Vektor für. Wann soll es eigentlich funktionieren?

02:14:43.840 --> 02:14:49.840
Ja. Und zwar können wir jetzt sagen.

02:14:49.840 --> 02:14:53.840
Genau, send, bla bla. Ich zeige es euch gleich.

02:14:53.840 --> 02:14:57.840
Wir packen das nämlich jetzt mal hier rein. Schmeißen das weg.

02:14:57.840 --> 02:15:06.840
Data sagen wir hier den Inhalt vom Vektor und als Länge die Size vom Vektor.

02:15:06.840 --> 02:15:12.840
Und dann machen wir ein Delay hinten dran. Ein kleines Delay von 5 Millisekunden oder so.

02:15:12.840 --> 02:15:14.840
Das sollte eigentlich reichen zum Senden.

02:15:14.840 --> 02:15:21.840
So, und jetzt kann man, das ist wohl neu in C++, also zum Beispiel in C Sharp geht das schon ewig.

02:15:21.840 --> 02:15:24.840
Jetzt kann man hier sagen send data.

02:15:24.840 --> 02:15:29.840
Und dann kann man so ein Listen Initialisierungs-Ding hier übergeben.

02:15:29.840 --> 02:15:36.840
Und sagt dann sowas hier wie 0xff, 0x, keine Ahnung, 1.

02:15:36.840 --> 02:15:46.840
So, und dann macht er da draus quasi schon für ein, ein Vektor und wandelt das um in Bytes und schickt das.

02:15:46.840 --> 02:15:50.840
Das habe ich letztens gesehen in einem Stream.

02:15:50.840 --> 02:15:52.840
Das gibt es noch nicht so lange.

02:15:52.840 --> 02:15:56.840
Das geht erst seit C++17. Ich bin mir nicht sicher, ob es seit 17 geht.

02:15:56.840 --> 02:15:59.840
Aber es ist auf jeden Fall eines der neueren Standards, wo das geht.

02:15:59.840 --> 02:16:05.840
Ich bin da nicht so auf dem Laufen, was, wie C++-Twan dabei gekommen ist.

02:16:05.840 --> 02:16:09.840
Der Kenpachi sagt, das gibt es seit 11, ja, das kann auch sein.

02:16:09.840 --> 02:16:15.840
Es ist zumindest relativ neu für C++-Verhältnisse.

02:16:15.840 --> 02:16:21.840
Guckt, und jetzt empfängt er zwei Pakete, einmal mit 255 und einmal mit 1.

02:16:21.840 --> 02:16:31.840
Das könnte in Java Code auch mal kommen. Gibt es doch, also in C Sharp kannst du was Ähnliches machen.

02:16:31.840 --> 02:16:41.840
Was du in C Sharp machen kannst, was sehr praktisch ist, du kannst sowas hier machen.

02:16:41.840 --> 02:16:43.840
Sowas hier in der Richtung.

02:16:43.840 --> 02:16:53.840
Das heißt dann, dass du unendlich viele Int-Parameter übergeben kannst.

02:16:53.840 --> 02:16:56.840
Da musst du nicht direkt einen Error übergeben.

02:16:56.840 --> 02:17:13.840
Und ich könnte wetten, sowas gibt es doch in Java bestimmt auch.

02:17:13.840 --> 02:17:16.840
Ach so, ja, das stimmt, das gibt es nicht. Ja, das ist richtig.

02:17:16.840 --> 02:17:21.840
Wobei, wobei, das kannst du in C Sharp zumindest auch machen.

02:17:21.840 --> 02:17:31.840
Du könntest ein IE-Nummerable-Dings nehmen von Int als Parameter und damit dann deinen Vektor initialisieren.

02:17:31.840 --> 02:17:34.840
Aber das stimmt schon, das hat was, das ist eigentlich ganz schick.

02:17:34.840 --> 02:17:41.840
Das ist wirklich ganz schick, so direktes Äquivalent gibt es da, glaube ich, nicht.

02:17:41.840 --> 02:17:46.840
So, okay, und jetzt müssen wir eigentlich, um mal was Sinnvolles zu machen,

02:17:46.840 --> 02:17:51.840
jetzt müssen wir unseren Schalter einrichten, den wir haben.

02:17:51.840 --> 02:17:55.840
Ich mache jetzt noch mal eine Funktion aus, ich räume das mal ein bisschen auf.

02:17:55.840 --> 02:18:00.840
Boyd-init-esp-now.

02:18:00.840 --> 02:18:02.840
Ich kann gerade nicht tippen.

02:18:02.840 --> 02:18:09.840
Now, da lagern wir den ganzen Mist hier mal aus.

02:18:09.840 --> 02:18:18.840
Da muss ich mir dieses hässliche Zeug hier unten mal angucken.

02:18:18.840 --> 02:18:23.840
Init-esp-now.

02:18:23.840 --> 02:18:26.840
Format-Document. Boah.

02:18:26.840 --> 02:18:28.840
Fuck.

02:18:28.840 --> 02:18:30.840
Warum?

02:18:30.840 --> 02:18:37.840
Warum fällt das Formaten?

02:18:37.840 --> 02:18:41.840
Unused Variable Start. Ach ja, stimmt, die Ausführzeit brauchen wir noch.

02:18:41.840 --> 02:18:47.840
Also, wir müssen mal dran denken, es dauert über WLAN ungefähr drei Sekunden,

02:18:47.840 --> 02:18:51.840
bis ich mich per WLAN verbunden habe und per MQTT was geschickt habe.

02:18:51.840 --> 02:18:55.840
Das müsste mit it-esp-now hier jetzt deutlich, deutlich kürzer sein.

02:18:55.840 --> 02:18:59.840
Das probieren wir aber aus, nachdem wir was verschickt haben.

02:18:59.840 --> 02:19:02.840
Wir machen mal hier den Kram aus der Loop wieder raus.

02:19:02.840 --> 02:19:08.840
Und jetzt machen wir mal das, was wir eigentlich machen wollen für die Haustür.

02:19:08.840 --> 02:19:22.840
Nämlich sagen, geh in Deep Sleep, allerdings Wache auf, wenn der Schalter auf GPIO 15 gedrückt wird.

02:19:22.840 --> 02:19:25.840
Ja.

02:19:25.840 --> 02:19:30.840
Okay, also machen wir hier noch mal einen Define oben hin.

02:19:30.840 --> 02:19:39.840
Define, Wake Up Pin ist gleich GPIO 15.

02:19:39.840 --> 02:19:43.840
So, GPIO 15 ist Wake Up Pin.

02:19:43.840 --> 02:19:49.840
So, das muss man ihm jetzt sagen, dass er aufwachen soll.

02:19:49.840 --> 02:19:54.840
Hier machen wir Init, dann sagen wir ESP Sleep.

02:19:54.840 --> 02:20:04.840
Genau, Wake Up auf GPIO 15.

02:20:04.840 --> 02:20:06.840
Und zwar, wenn der High ist.

02:20:06.840 --> 02:20:16.840
Also in dem Fall, ich habe das Ding angeschlossen auf Normally Open.

02:20:16.840 --> 02:20:19.840
Guck mal, dass ich meinen Schalter richtig angeschlossen habe.

02:20:19.840 --> 02:20:21.840
Ich sehe es jetzt gar nicht, ehrlich gesagt.

02:20:21.840 --> 02:20:31.840
Da werden wir gleich sehen, ich glaube, ich habe ihn.

02:20:31.840 --> 02:20:33.840
Okay, was auch immer, wir werden gleich sehen, ob es funktioniert.

02:20:33.840 --> 02:20:40.840
Wenn nicht, muss ich es auf Low stellen und dann geht es auch.

02:20:40.840 --> 02:20:46.840
Würde das auch klappen, wenn du quasi ein normales Array initialisierst und in eine Variable vom Typ Auto steckst?

02:20:46.840 --> 02:20:49.840
Ich habe keine Ahnung.

02:20:49.840 --> 02:20:52.840
Na gut, der alter Typ ist ja nicht Auto.

02:20:52.840 --> 02:20:53.840
Der Typ ist ja der Typ.

02:20:53.840 --> 02:21:06.840
Typ ist wie wahr in C Sharp, das ist im Prinzip einfach nur Syntax Form Compile.

02:21:06.840 --> 02:21:15.840
Meine Uhr, ja wahrscheinlich, weil die einfach nicht gestellt ist.

02:21:15.840 --> 02:21:23.840
Ich stelle mal kurz meine Uhrzeit.

02:21:23.840 --> 02:21:26.840
Irgendwann ist dann meine Uhrzeit auch gestellt.

02:21:26.840 --> 02:21:28.840
So, meine Uhrzeit ist gestartet, ich warte.

02:21:28.840 --> 02:21:40.840
Also, so viel hinten dran war ich jetzt nicht.

02:21:40.840 --> 02:21:50.840
Okay, also Sleep, wir wollen aufwachen, wenn GPIO 15 auf High geht.

02:21:50.840 --> 02:21:55.840
Und das wollen wir Enter, Enter, Deep Sleep machen.

02:21:55.840 --> 02:22:01.840
Sleep, Enter, Alter, Enter, Sleep, die Funktionsnamen.

02:22:01.840 --> 02:22:07.840
Sleep, Start, Deep Sleep, Start.

02:22:07.840 --> 02:22:13.840
So, jetzt sollte es eigentlich, jetzt sollte er eigentlich einschlafen.

02:22:13.840 --> 02:22:17.840
Okay, wir müssen übrigens mal das Delay hier weg machen.

02:22:17.840 --> 02:22:27.840
Er sollte jetzt angehen, einschlafen und wenn ich dann den Schalter drücke, sollte er wieder angehen.

02:22:27.840 --> 02:22:33.840
Das heißt, dann lassen wir uns jetzt mal hier die Zeit ausgeben, wie lange er an war.

02:22:33.840 --> 02:22:51.840
Weil wir wollen ja erreichen, dass er so kurz wie möglich an ist.

02:22:51.840 --> 02:22:55.840
Das funktioniert doch nicht.

02:22:55.840 --> 02:23:03.840
Da wäre ich, das ist gerade C++GBate, wette ich mit euch, das ist, das ist der Ultra C++GBate, das hier.

02:23:03.840 --> 02:23:08.840
Dass das kompiliert, da kommt bestimmt nicht raus, was ich mir denke.

02:23:08.840 --> 02:23:12.840
Da kommt bestimmt irgendwie, irgendwie, irgendwas raus.

02:23:12.840 --> 02:23:19.840
Da kommt garantiert nicht raus, Exact Time plus die Millisekunden.

02:23:19.840 --> 02:23:23.840
100% nicht, da kommt, da kommt, das ist, das ist C++GBate.

02:23:23.840 --> 02:23:35.840
Da kommt wahrscheinlich jetzt irgendwie, Exact Time plus das, was an der Speicheradresse steht, wo gerade die Millisekunden hinzeigen oder sowas.

02:23:35.840 --> 02:23:38.840
Irgendwie, wollen wir mal gucken, was da rauskommt.

02:23:38.840 --> 02:23:44.840
Memory Access Violation, sowas gibt es auf dem ESP32 nicht.

02:23:44.840 --> 02:23:50.840
Es gibt Crash oder es geht.

02:23:50.840 --> 02:23:55.840
So, mal den Knopf drücken.

02:23:55.840 --> 02:23:59.840
Ich sag's euch doch, guck mal, was da rauskommt.

02:23:59.840 --> 02:24:05.840
Random irgendwas im Flash wird ausgelesen, ey.

02:24:05.840 --> 02:24:12.840
Random irgendwas im Flash.

02:24:12.840 --> 02:24:18.840
Gut, tja, keine Ahnung, dann machen wir irgendwie sowas, das geht bestimmt dann.

02:24:18.840 --> 02:24:20.840
Oh, oder auch nicht.

02:24:20.840 --> 02:24:24.840
Ne, da fehlt jetzt ne Klammer.

02:24:24.840 --> 02:24:29.840
Lol.

02:24:29.840 --> 02:24:38.840
Das ist wirklich, so Dinger, dass das, ich find's ehrlich gesagt Fail, dass das überhaupt einfach so syntaktisch in Ordnung geht.

02:24:38.840 --> 02:24:43.840
Das lädt doch geradezu ein, irgendeinen Scheiß zu machen.

02:24:43.840 --> 02:24:51.840
Okay, Accept Time, 68 Millisekunden, das ist natürlich saumäßig schnell, deutlich schneller als 2 Sekunden, die wir eigentlich haben wollten.

02:24:51.840 --> 02:24:55.840
Die wir ursprünglich hatten, aber wir versenden hier auch noch nix.

02:24:55.840 --> 02:25:00.840
So, also, man sieht schon, er wacht auf, ne.

02:25:00.840 --> 02:25:05.840
Er wacht auf immer, wenn ich hier klick, Achtung, klick, Auffahren.

02:25:05.840 --> 02:25:11.840
Also ihr seht's, das geht relativ schnell.

02:25:11.840 --> 02:25:15.840
Ab und zu schwankt's mal, warum auch immer.

02:25:15.840 --> 02:25:22.840
Hatte jemand mal links zum Akkulaufzeitrechner, hier guck, da, da.

02:25:22.840 --> 02:25:26.840
Da.

02:25:26.840 --> 02:25:29.840
Okay.

02:25:29.840 --> 02:25:32.840
Ich hab Hunger, fällt mir grad auf.

02:25:32.840 --> 02:25:33.840
Mal was futtern.

02:25:33.840 --> 02:25:42.840
Okay, also wir verschinken jetzt, jetzt müssen wir noch gucken, von was wir aufgeweckt werden.

02:25:42.840 --> 02:25:53.840
Werden wir aufgeweckt vom Timer oder werden wir aufgeweckt vom Interrupt, GPIO Interrupt?

02:25:53.840 --> 02:25:56.840
Also, brauchen wir sowas hier.

02:25:56.840 --> 02:26:04.840
Ja, cause gleich wake up, eins muss man den Chinesen in dem Fall so gut halten oder von welchen.

02:26:04.840 --> 02:26:08.840
Ne, Koreaner sind's glaube ich sogar, oder?

02:26:08.840 --> 02:26:21.840
Sind's Koreaner?

02:26:21.840 --> 02:26:29.840
Espresso, wo kommen die, wo kommen die her?

02:26:29.840 --> 02:26:44.840
Koreaner?

02:26:44.840 --> 02:26:47.840
Achso, der chinesische, der chinesische Firma Espresso, okay.

02:26:47.840 --> 02:26:53.840
Wobei, ich bin mal nicht, also ich.

02:26:53.840 --> 02:26:59.840
Ich bilde mir irgendwie eine Sendung aus Korea.

02:26:59.840 --> 02:27:01.840
Ah, okay, nein, okay, alles klar.

02:27:01.840 --> 02:27:07.840
Okay, es ist aus China, ja.

02:27:07.840 --> 02:27:11.840
Ja, aber mal davon abgesehen, dass es aus China ist.

02:27:11.840 --> 02:27:13.840
Die Funktionsnamen und so.

02:27:13.840 --> 02:27:17.840
Und generell dieses ESP-Framework, was sie da haben, das ist ganz gut.

02:27:17.840 --> 02:27:22.840
Also, da scheinen schon Leute zu sitzen, die wissen, was sie machen.

02:27:22.840 --> 02:27:27.840
Soll's, soll's auch bei chinesischen Herstellern geben.

02:27:27.840 --> 02:27:33.840
Heutzutage kommt auch alles aus China, ja, genauso wie Samsung, ne?

02:27:33.840 --> 02:27:42.840
Weil Samsung auch so chinesisch ist.

02:27:42.840 --> 02:27:45.840
ESP-Koll, ich glaube, das ist ein Laubensauce-Projekt, ja.

02:27:45.840 --> 02:27:49.840
Das kann man auf GitHub sogar mitmachen, glaube ich, wenn man will.

02:27:49.840 --> 02:27:55.840
Das ist auf jeden Fall auf GitHub.

02:27:55.840 --> 02:28:01.840
Okay, ähm, wir gucken jetzt, warum wir aufgewacht sind.

02:28:01.840 --> 02:28:07.840
Und, ähm, ach, das kann der nicht autovervollständigen, okay.

02:28:07.840 --> 02:28:11.840
Also, uns interessieren eigentlich nur zwei Fälle, weshalb wir aufwachen.

02:28:11.840 --> 02:28:17.840
Und zwar einmal, wir wachen auf wegen Timer.

02:28:17.840 --> 02:28:30.840
Oder wir wachen auf wegen, ähm, wegen GPIO wird gedrückt.

02:28:30.840 --> 02:28:33.840
Das sind eigentlich die zwei, die zwei Sachen, die wir haben.

02:28:33.840 --> 02:28:38.840
So, das heißt, wir müssen jetzt den Timer noch setzen.

02:28:38.840 --> 02:28:42.840
Wo ich immer nicht merken kann, wie das, wie das, wie das funktioniert.

02:28:42.840 --> 02:28:48.840
Sleep, wake, wake up, Timer?

02:28:48.840 --> 02:28:51.840
Timer, wake, Timer?

02:28:51.840 --> 02:29:03.840
Ah ja, so, ähm, wir wollen aufwachen, alle, alle fünf Sekunden wollen wir mal aufwachen.

02:29:03.840 --> 02:29:13.840
Ähm, einfach schon, xr, wir wollen alle fünf Sekunden wollen wir aufwachen und dann gucken wir mal.

02:29:13.840 --> 02:29:15.840
Warum rückt der das hier eigentlich nicht ein?

02:29:15.840 --> 02:29:21.840
Ähm, Timer, wake up oder aber GPIO?

02:29:21.840 --> 02:29:26.840
Gucken wir mal, ob das funktioniert.

02:29:26.840 --> 02:29:30.840
Wozu eigentlich der Timer, ähm, zum Nachgucken, ob Post da ist?

02:29:30.840 --> 02:29:33.840
Die hat ja keinen Schalter.

02:29:33.840 --> 02:29:43.840
Da muss er alle fünf Minuten mit einem Ultraschall-Sensor gucken, ob was im Rohr steckt.

02:29:43.840 --> 02:29:45.840
Und den Timer habe ich hier unten ja definiert.

02:29:45.840 --> 02:29:48.840
Okay, Timer aufwachen funktioniert.

02:29:48.840 --> 02:29:52.840
Und GPIO aufwachen funktioniert auch.

02:29:52.840 --> 02:30:01.840
Das ist doch sehr, sehr nice.

02:30:01.840 --> 02:30:08.840
So, dann können wir jetzt einstellen, was der ganze Kram verschickt wird.

02:30:08.840 --> 02:30:19.840
Also könnten wir jetzt eigentlich sagen, ähm, ja gut, dann müssen wir uns jetzt überlegen, was wir verschicken.

02:30:19.840 --> 02:30:22.840
So ein bisschen, wie bauen wir das auf?

02:30:22.840 --> 02:30:25.840
Also wir könnten jetzt sagen, ah, ich habe eine Idee.

02:30:25.840 --> 02:30:29.840
Was passiert denn, wenn ich den Knopf gedrückt halte?

02:30:29.840 --> 02:30:32.840
Ich habe da so eine dofe Vermutung.

02:30:32.840 --> 02:30:35.840
Achtung, ich halte mal gedrückt.

02:30:35.840 --> 02:30:42.840
Ja, der wacht auf, geht schlafen und wacht direkt wieder auf.

02:30:42.840 --> 02:30:45.840
Das ist natürlich dumm.

02:30:45.840 --> 02:30:48.840
Das heißt, den müssen wir eigentlich blocken.

02:30:48.840 --> 02:30:58.840
Den müssen wir blocken, äh, bis, bis, bis das nächste Mal der Ping low ist.

02:30:58.840 --> 02:31:04.840
Oder wir blocken den Wake Up, bis das nächste Mal der Zeitungstimer aufgeht.

02:31:04.840 --> 02:31:08.840
Weil innerhalb von fünf, na, wobei innerhalb von fünf Minuten könnte schon einer die Tür aufmachen.

02:31:08.840 --> 02:31:11.840
Also ich würde eher sagen, wir machen das anders.

02:31:11.840 --> 02:31:18.840
Wir lesen hier einfach ein, welchen, welchen Zustand der Pin gerade hat.

02:31:18.840 --> 02:31:21.840
Und ähm, negieren das dann einfach.

02:31:21.840 --> 02:31:27.840
Also sprich, wenn der Pin gerade low ist, ist unser, unsere Sache, wir wollen nur bei high aufwachen.

02:31:27.840 --> 02:31:30.840
Und wenn es gerade high ist, wollen wir nur bei low aufwachen.

02:31:30.840 --> 02:31:35.840
Das klingt doch eigentlich relativ sinnig, oder?

02:31:35.840 --> 02:31:39.840
Äh, wie habe ich das Ding genannt, Wake Up Pin?

02:31:39.840 --> 02:31:44.840
Das muss ich allerdings vorher noch sagen.

02:31:44.840 --> 02:31:49.840
Pin Mode.

02:31:49.840 --> 02:31:52.840
Wake Up.

02:31:52.840 --> 02:31:56.840
Mode, Input, Pull Up.

02:31:56.840 --> 02:31:59.840
Bei einem Schalter ist den Pull Up einzuschalten eh nicht verkehrt.

02:31:59.840 --> 02:32:23.840
Da wird man wahrscheinlich der Flow 690 recht geben.

02:32:23.840 --> 02:32:32.840
So.

02:32:32.840 --> 02:32:36.840
So und jetzt, wenn ich jetzt gedrückt halte.

02:32:36.840 --> 02:32:38.840
Siehste, wenn ich jetzt gedrückt halte, wacht er nicht mehr auf.

02:32:38.840 --> 02:32:41.840
Weil er liest hier ein, aha, Pin ist eins.

02:32:41.840 --> 02:32:43.840
Und wir wachen erst wieder auf, wenn Pin null ist.

02:32:43.840 --> 02:32:45.840
Jetzt lasse ich los.

02:32:45.840 --> 02:32:46.840
Jetzt löst er nochmal aus.

02:32:46.840 --> 02:32:48.840
Gut, wenn ich schnell drücke, dann macht das eh nur einmal.

02:32:48.840 --> 02:32:53.840
Das war eigentlich ganz gut.

02:32:53.840 --> 02:33:00.840
Der Elektriker kann mir recht geben, dass ich hier den Pull Up Resistor aktiviert habe für meinen Schalter.

02:33:00.840 --> 02:33:09.840
Für meinen GPIO Eingang, wo der Schalter dranhängt.

02:33:09.840 --> 02:33:16.840
Da weiß ich zumindest auch, dass eins wirklich eins ist.

02:33:16.840 --> 02:33:19.840
Und nicht einfach.

02:33:19.840 --> 02:33:21.840
Es hat einer zu laut gefurzt auf der Straße.

02:33:21.840 --> 02:33:24.840
Ich werde jetzt eins.

02:33:24.840 --> 02:33:26.840
Also das ist auf jeden Fall die bessere Idee.

02:33:26.840 --> 02:33:28.840
Das denke ich auch.

02:33:28.840 --> 02:33:32.840
Okay, also die Ausführzeit ist jetzt schon ziemlich knapp.

02:33:32.840 --> 02:33:35.840
Vergiss das Test.

02:33:35.840 --> 02:33:42.840
Also ich habe jetzt eigentlich keine großartiges Bouncen vom Schalter gemerkt bisher.

02:33:42.840 --> 02:33:46.840
Drück das und gut ist.

02:33:46.840 --> 02:33:49.840
Wobei ich das ja damit eigentlich schon fast wieder, naja.

02:33:49.840 --> 02:33:52.840
Also wenn ich damit Probleme habe, muss ich da irgendwie noch ein Delay einbauen.

02:33:52.840 --> 02:33:53.840
Und mal kurz warten.

02:33:53.840 --> 02:33:54.840
Aber erst mal gucken.

02:33:54.840 --> 02:33:59.840
Das scheint ja so zu funktionieren.

02:33:59.840 --> 02:34:03.840
So, und nun müssen wir die Daten einfach nur noch verschicken, oder?

02:34:03.840 --> 02:34:08.840
Und dann gucken wir uns nochmal, oder mal gucken, ob wir das heute machen, uns den Ultraschallsensor nochmal an.

02:34:08.840 --> 02:34:11.840
Mit Entfernungsmessungen.

02:34:11.840 --> 02:34:15.840
Aber erst mal versenden wir jetzt noch den Kram.

02:34:15.840 --> 02:34:16.840
Übrigens, danke für die ganzen Follows.

02:34:16.840 --> 02:34:19.840
Ich sehe nur gerade den, irgendwas mit Sebi.

02:34:19.840 --> 02:34:23.840
Ich habe es nur noch im Augenwinkel gesehen.

02:34:23.840 --> 02:34:24.840
Ja, danke für die ganzen Follows.

02:34:24.840 --> 02:34:25.840
Ich bin echt begeistert.

02:34:25.840 --> 02:34:29.840
Letzten Streams teilweise 14 Follows aus heiterem Himmel gehabt.

02:34:29.840 --> 02:34:31.840
Ja, in den letzten paar Streams.

02:34:31.840 --> 02:34:35.840
10, 15, 14 irgendwie total viele Follows.

02:34:35.840 --> 02:34:37.840
Also anscheinend gefällt das doch einig.

02:34:37.840 --> 02:34:40.840
Ich bin schwer begeistert, ja.

02:34:40.840 --> 02:34:43.840
Und vor allem scheint tatsächlich auch Leute zu interessieren.

02:34:43.840 --> 02:34:48.840
Also es ist nicht einfach für die Katze irgendwie.

02:34:48.840 --> 02:34:53.840
So, und jetzt verschicken wir den Kram nochmal.

02:34:53.840 --> 02:35:01.840
Also wenn wir aufmachen vom Timer, dann will ich eigentlich gucken mit dem Ultraschallsensor, ob was drin ist.

02:35:01.840 --> 02:35:05.840
Das machen wir jetzt nicht.

02:35:05.840 --> 02:35:15.840
Wir verschicken jetzt, wenn der GPIO-Pin gedrückt wird, verschicken wir einfach mal was.

02:35:15.840 --> 02:35:19.840
Da kann ich mir jetzt vollkommen frei ausdenken, was ich da verschicke.

02:35:19.840 --> 02:35:23.840
Ich würde nämlich vorschlagen, ich verschicke einfach 255.

02:35:23.840 --> 02:35:28.840
Wenn 255 ankommt, dann wurde der Schalter gedrückt.

02:35:28.840 --> 02:35:32.840
Und wenn 0 ankommt, dann ist der Schalter aus.

02:35:32.840 --> 02:35:36.840
Wobei, das kriege ich als Event gar nicht mit.

02:35:36.840 --> 02:35:43.840
Also wenn es 255 ankommt, ist eigentlich total simpel, dann wurde der Schalter gedrückt.

02:35:43.840 --> 02:35:49.840
Das ist glaube ich so, das kann man nicht mal Protokoll nennen.

02:35:49.840 --> 02:35:53.840
Moment, was ist das?

02:35:53.840 --> 02:35:57.840
Genau.

02:35:57.840 --> 02:36:00.840
So, jetzt gucken wir mal, ob das ankommt.

02:36:00.840 --> 02:36:04.840
Klick, ha ha, 255, klick, 255.

02:36:04.840 --> 02:36:07.840
Und man sieht schon, das Delay, das Delay ist wirklich klein.

02:36:07.840 --> 02:36:10.840
Hör mal, guck mal.

02:36:10.840 --> 02:36:12.840
Also hören und gucken.

02:36:12.840 --> 02:36:17.840
Also hier ist ein komplettes audiovisuelles Erlebnis hier schon fast.

02:36:17.840 --> 02:36:20.840
So, Achtung.

02:36:20.840 --> 02:36:22.840
Seht ihr, wie schnell das geht?

02:36:22.840 --> 02:36:30.840
Deshalb macht keiner die Tür auf und wieder zu.

02:36:30.840 --> 02:36:37.840
Und das ist jetzt wohlgemerkt, das ist ja nicht die Debug-Ausgabe von dem Ding, was am Briefkasten hängt.

02:36:37.840 --> 02:36:43.840
Das ist die Debug-Ausgabe der Kiste, die es schon über WLAN empfangen hat.

02:36:43.840 --> 02:36:47.840
Also man muss sich ja mal überlegen, was da alles drin steckt in dem Klick.

02:36:47.840 --> 02:36:55.840
Der Klick sorgt dafür, dass erstmal der ESP32 aufwacht, sich ESP Now initialisiert.

02:36:55.840 --> 02:37:00.840
Dann 255, also ein Byte verschickt.

02:37:00.840 --> 02:37:02.840
Danach geht er wieder schlafen, das ist egal.

02:37:02.840 --> 02:37:06.840
Der andere das empfängt und in die Debug-Ausgabe packt.

02:37:06.840 --> 02:37:18.840
Also...

02:37:18.840 --> 02:37:22.840
Ja, aber das ist doch schon sehr nice.

02:37:22.840 --> 02:37:24.840
Warum dann Fullscreen Mario Kart Bild durch?

02:37:24.840 --> 02:37:25.840
Weil das mein Hintergrund ist.

02:37:25.840 --> 02:37:29.840
Außerdem kein Mario Kart Bild, das ist Mario Galaxy Bild.

02:37:29.840 --> 02:37:30.840
Das ist mein Hintergrund.

02:37:30.840 --> 02:37:42.840
Wenn man Workspaces wechselt, dann lag der manchmal ein bisschen und man sieht den Hintergrund.

02:37:42.840 --> 02:37:44.840
Jetzt fehlt nur noch ein Display.

02:37:44.840 --> 02:37:48.840
Kann man alles machen, Displays habe ich auch dafür.

02:37:48.840 --> 02:37:53.840
So, also das funktioniert schon mal, wir kriegen 255 geschickt.

02:37:53.840 --> 02:38:01.840
Wenn, da waren wir doch heute, das müsste man echt jetzt, was sagen wir, im Vergleich zu dem Side-Track,

02:38:01.840 --> 02:38:07.840
die letzten Male und heute ja auch, waren wir doch relativ effektiv, oder was wir hier gebaut haben.

02:38:07.840 --> 02:38:13.840
Okay, per MQTT haben wir noch nichts verschickt.

02:38:13.840 --> 02:38:23.840
Aber das ist jetzt ja im Prinzip nur noch ein weiterer Schritt.

02:38:23.840 --> 02:38:29.840
Also, ich habe als Display so ganz kleine...

02:38:29.840 --> 02:38:34.840
Die können aber nichts großartig, ne?

02:38:34.840 --> 02:38:41.840
Display, ich glaube 80 x 200 oder so, 80 x 120.

02:38:41.840 --> 02:38:43.840
Ich glaube, die habe ich.

02:38:43.840 --> 02:38:46.840
Wobei das ganz schön teuer ist, ne?

02:38:46.840 --> 02:38:48.840
Ja, ich glaube, die sind das.

02:38:48.840 --> 02:38:53.840
Man bezahlt ungefähr, ich kaufe eigentlich nichts unter 3er-Pack.

02:38:53.840 --> 02:38:59.840
Weil, eine Sache bei diesen ganzen Elektroteilen, bei einer Sache hast du so schnell mal geschrottet.

02:38:59.840 --> 02:39:02.840
Ich kaufe eigentlich immer nichts unter 3er-Packs.

02:39:02.840 --> 02:39:05.840
Am besten sind eigentlich immer 5er-Packs, da hat man immer genug.

02:39:05.840 --> 02:39:17.840
Ja, es ist schon nicht so günstig, ne?

02:39:17.840 --> 02:39:20.840
Zahlst du auch irgendwie deine 4€ oder so pro...

02:39:20.840 --> 02:39:22.840
Ne, nicht ganz.

02:39:22.840 --> 02:39:24.840
Was bezahlst du denn da?

02:39:24.840 --> 02:39:26.840
Ah, doch, bisschen mehr.

02:39:26.840 --> 02:39:31.840
450 oder so bezahlst du pro Display.

02:39:31.840 --> 02:39:35.840
Das ist tatsächlich für einen Teil ziemlich teuer.

02:39:35.840 --> 02:39:38.840
Die haben es wirklich verkackt mit ihrem Namen, ne?

02:39:38.840 --> 02:39:44.840
Die hätten sich Eats Delivery nennen können, aber haben sich Ats Delivery genannt.

02:39:44.840 --> 02:39:48.840
Also Eats Delivery, da wäre ich dabei gewesen.

02:39:48.840 --> 02:39:50.840
Aber Ats Delivery ist langweilig.

02:39:50.840 --> 02:39:54.840
Das ist nix.

02:39:54.840 --> 02:39:56.840
Also, es ist schon relativ teuer.

02:39:56.840 --> 02:40:06.840
Wenn du dir überlegst, du kriegst für 15€ fast 3 komplette Controller von Ali Express.

02:40:06.840 --> 02:40:15.840
Guck mal, für den gleichen Preis, sogar ein bisschen weniger, kriegst du 3 NodeMCU ESP266.

02:40:15.840 --> 02:40:20.840
Was die Displays kosten.

02:40:20.840 --> 02:40:26.840
Also, aber ich find sie dran, das Klick, zack, Paket kommt an.

02:40:26.840 --> 02:40:28.840
Ja, was machen wir jetzt?

02:40:28.840 --> 02:40:33.840
Der Kram funktioniert jetzt ja tatsächlich, ne?

02:40:33.840 --> 02:40:35.840
Wir müssen noch...

02:40:35.840 --> 02:40:37.840
Ach ja, den wollen wir jetzt noch...

02:40:37.840 --> 02:40:39.840
Also Leute, ich sag euch, ich hab übelst Hunger, ne?

02:40:39.840 --> 02:40:43.840
Aber wollen wir noch den Ultraschall-Sensor mal schnell ausprobieren?

02:40:43.840 --> 02:40:49.840
Zum Abstand messen.

02:40:49.840 --> 02:40:55.840
Ja, machen wir.

02:40:55.840 --> 02:41:07.840
So, das müssen wir dann hier drinnen machen.

02:41:07.840 --> 02:41:14.840
So, den Ultraschall-Sensor, da muss ich mir jetzt mal gucken, wie man den verwendet.

02:41:14.840 --> 02:41:20.840
ESP32-SR-H, ach du Scheiße, wer ist das Ding?

02:41:20.840 --> 02:41:22.840
HC, ja, so.

02:41:22.840 --> 02:41:27.840
HC-SR04.

02:41:27.840 --> 02:41:31.840
Nehmen wir mal die englische Seite.

02:41:31.840 --> 02:41:34.840
Okay, wo ist der Code?

02:41:34.840 --> 02:41:38.840
Der Code, da ist er.

02:41:38.840 --> 02:41:42.840
Also, was macht der Typ hier, wie funktioniert der denn?

02:41:42.840 --> 02:41:44.840
Ultrasonic-Dric-Pin.

02:41:44.840 --> 02:41:46.840
Ultrasonic-Echo-Pin.

02:41:46.840 --> 02:41:48.840
Bla, bla, bla, bla, bla.

02:41:48.840 --> 02:41:49.840
WLAN, bla, bla, bla.

02:41:49.840 --> 02:41:51.840
Pin setzen, okay.

02:41:51.840 --> 02:41:53.840
So.

02:41:53.840 --> 02:41:55.840
Wo ist denn die Funktion, die den Sensor ausliest?

02:41:55.840 --> 02:41:59.840
Ach hier.

02:41:59.840 --> 02:42:03.840
Duration-Distance.

02:42:03.840 --> 02:42:04.840
Was ist das denn?

02:42:04.840 --> 02:42:12.840
Moment, was?

02:42:12.840 --> 02:42:14.840
Ach, so ist das.

02:42:14.840 --> 02:42:27.840
Ich glaube zumindest ungefähr zu verstehen, was es macht.

02:42:27.840 --> 02:42:33.840
Ich vermute mal, dass das Ding so funktioniert, weil auch wenn ich hier drauf gucke, das Ding hat zwei Pins.

02:42:33.840 --> 02:42:35.840
Also eigentlich hat es vier, ne?

02:42:35.840 --> 02:42:38.840
Crown und VCC lassen wir mal außen vor.

02:42:38.840 --> 02:42:41.840
Es hat zwei Pins.

02:42:41.840 --> 02:42:43.840
Trigger und Echo.

02:42:43.840 --> 02:42:50.840
Ich vermute mal, dass man sagt...

02:42:50.840 --> 02:42:51.840
Ah, okay.

02:42:51.840 --> 02:42:53.840
Man sagt Trigger-Pin.

02:42:53.840 --> 02:43:02.840
Man lässt den quasi irgendwie 10 Mikrosekunden, lässt man den irgendwelche Ultraschallwellen ausschicken.

02:43:02.840 --> 02:43:05.840
Da sind auch zwei Dinger vorne dran, die ein bisschen aussehen wie Lautsprecher.

02:43:05.840 --> 02:43:14.840
Ich zeige euch jetzt mal, wie das Ding aussieht.

02:43:14.840 --> 02:43:16.840
So sieht das Ding aus.

02:43:16.840 --> 02:43:23.840
Also ich vermute mal, dass die hier irgendwelche Ultraschallwellen aussenden und hiermit das empfangen.

02:43:23.840 --> 02:43:34.840
Und dann zählen sie einfach, wie viel habe ich empfangen in der Zeit.

02:43:34.840 --> 02:43:38.840
Und daran kann man ja dann ungefähr ausrechnen, wie weit ein Objekt weg ist.

02:43:38.840 --> 02:43:47.840
Das ist quasi Fledermaus-Sensor, Fledermaus-Style.

02:43:47.840 --> 02:43:50.840
Irgendwie so in der Richtung wird das sein.

02:43:50.840 --> 02:43:56.840
So, allerdings, wir machen jetzt einmal eine riesen Copy-Paste-Aktion.

02:43:56.840 --> 02:44:06.840
Weil ich keinen Bock habe, das jetzt nochmal nachzubasteln.

02:44:06.840 --> 02:44:08.840
Measure distance.

02:44:08.840 --> 02:44:10.840
Wenn wir das Ding...

02:44:10.840 --> 02:44:13.840
Ups.

02:44:13.840 --> 02:44:15.840
Und da ist mir das reincopy-pastet.

02:44:15.840 --> 02:44:17.840
Bam.

02:44:17.840 --> 02:44:21.840
Copy-paste-master-race.

02:44:21.840 --> 02:44:28.840
Und dann tragen wir das da oben ein, wobei die Pin-Benahmung ein bisschen doof.

02:44:28.840 --> 02:44:31.840
Wir machen hier einen Träger-Pin.

02:44:31.840 --> 02:44:38.840
Wir wissen, dass das für den Echo-Pin...

02:44:38.840 --> 02:44:40.840
So, und ich habe die Dinger dran.

02:44:40.840 --> 02:44:43.840
Muss ich jetzt mal gucken.

02:44:43.840 --> 02:44:44.840
Ich habe...

02:44:44.840 --> 02:44:46.840
Wo ist das Echo?

02:44:46.840 --> 02:44:49.840
26 und 27.

02:44:49.840 --> 02:44:57.840
26 und 27 sind die Dinger dran.

02:44:57.840 --> 02:45:00.840
GPIO 27.

02:45:00.840 --> 02:45:07.840
Okay.

02:45:07.840 --> 02:45:13.840
Ups, das habe ich jetzt gemacht.

02:45:13.840 --> 02:45:14.840
So.

02:45:14.840 --> 02:45:17.840
Und das Ding, das...

02:45:17.840 --> 02:45:23.840
Wo haben wir denn int draus?

02:45:23.840 --> 02:45:28.840
Und das returnen wir jetzt mal.

02:45:28.840 --> 02:45:29.840
Int.

02:45:29.840 --> 02:45:31.840
Okay.

02:45:31.840 --> 02:45:35.840
So.

02:45:35.840 --> 02:45:38.840
Das ist auch wieder so ein schönes C-Fallstrick.

02:45:38.840 --> 02:45:41.840
Es könnte immer noch sein...

02:45:41.840 --> 02:45:47.840
Es könnte immer noch sein, dass ich hier uninitialisierten Crap zurückgebe.

02:45:47.840 --> 02:45:53.840
Wahrscheinlich kriegt man da einen Warning.

02:45:53.840 --> 02:45:55.840
Wird für solche Embedded-Sachen...

02:45:55.840 --> 02:45:57.840
Die meisten haben hier GCC.

02:45:57.840 --> 02:46:02.840
Da ist auch ein GCC drunter.

02:46:02.840 --> 02:46:08.840
Hier ist ein GCC drunter.

02:46:08.840 --> 02:46:16.840
GCC kann ja mittlerweile auch 50 Millionen Plattformen gefühlt.

02:46:16.840 --> 02:46:18.840
So.

02:46:18.840 --> 02:46:20.840
Get sleep, get wake up.

02:46:20.840 --> 02:46:24.840
Blah.

02:46:24.840 --> 02:46:28.840
Wir testen jetzt mal kurz, ob der Sensor funktioniert.

02:46:28.840 --> 02:46:30.840
Wir testen jetzt mal schnell, ob der Sensor funktioniert.

02:46:30.840 --> 02:46:32.840
Ach so, eine Sache habe ich noch vergessen.

02:46:32.840 --> 02:46:37.840
Ich muss die Pins in den richtigen Modus stellen.

02:46:37.840 --> 02:46:39.840
Zack.

02:46:39.840 --> 02:46:41.840
Träger-Pin.

02:46:41.840 --> 02:46:43.840
Wie lange bin ich eigentlich schon on?

02:46:43.840 --> 02:46:46.840
Ich bin schon eine ganze Weile on, oder?

02:46:46.840 --> 02:46:50.840
Uptime.

02:46:50.840 --> 02:46:53.840
Na ja, geht doch eigentlich.

02:46:53.840 --> 02:46:55.840
Geht doch eigentlich.

02:46:55.840 --> 02:47:02.840
70 Leute für Freitagabend, kann man sich nicht beschweren.

02:47:02.840 --> 02:47:05.840
Blah, Blah, Blah, Output.

02:47:05.840 --> 02:47:10.840
Okay, wir machen jetzt hier einfach mal eine Runde Endlosschleife.

02:47:10.840 --> 02:47:16.840
Und gucken, ob das funktioniert.

02:47:16.840 --> 02:47:22.840
Ob das Ding jetzt die Distanz measuret.

02:47:22.840 --> 02:47:25.840
Komm, machen wir den Abstand mal ein bisschen kleiner.

02:47:25.840 --> 02:47:28.840
200 Millisekunden, ja.

02:47:28.840 --> 02:47:34.840
Mal gucken, ob es funktioniert.

02:47:34.840 --> 02:47:36.840
Ha.

02:47:36.840 --> 02:47:39.840
Aha, funktioniert.

02:47:39.840 --> 02:47:42.840
Ich mache gerade mal eine Hand davor hin und her.

02:47:42.840 --> 02:47:45.840
Also, so ist Entfernung bis zur Decke.

02:47:45.840 --> 02:47:48.840
Wahrscheinlich, wobei.

02:47:48.840 --> 02:47:51.840
Moment, das ist in Zentimeter.

02:47:51.840 --> 02:47:55.840
180 Zentimeter bis zur Decke.

02:47:55.840 --> 02:47:57.840
Kommt sogar ungefähr hin.

02:47:57.840 --> 02:48:01.840
Gar nicht mal so schlecht.

02:48:01.840 --> 02:48:05.840
Krass, ey, der erkennt wirklich ganz gut den Abstand bis zur Decke.

02:48:05.840 --> 02:48:08.840
Jetzt habe ich es, jetzt habe ich es schepp.

02:48:08.840 --> 02:48:10.840
Ah, cool.

02:48:10.840 --> 02:48:12.840
Jetzt hebe ich es gerade hoch.

02:48:12.840 --> 02:48:14.840
Also, ungefähr den Abstand bis zur Decke erkennt er.

02:48:14.840 --> 02:48:15.840
Und das ist ganz schön weit.

02:48:15.840 --> 02:48:18.840
So, jetzt mache ich mal die Hand drüber.

02:48:18.840 --> 02:48:19.840
Oh, ich muss es drüber halten.

02:48:19.840 --> 02:48:24.840
Abstand ungefähr, ähm, ungefähr 10 Zentimeter.

02:48:24.840 --> 02:48:25.840
Es kommt hin.

02:48:25.840 --> 02:48:27.840
Hand weiter drüber.

02:48:27.840 --> 02:48:28.840
Fünf.

02:48:28.840 --> 02:48:30.840
Was passiert denn, wenn ich die Hand drauf lege?

02:48:30.840 --> 02:48:32.840
Okay, geht kaputt.

02:48:32.840 --> 02:48:36.840
Ähm, jetzt habe ich die Hand eigentlich mehr oder weniger direkt dran.

02:48:36.840 --> 02:48:38.840
Vier Zentimeter, fünf Zentimeter.

02:48:38.840 --> 02:48:39.840
Jetzt habe ich es aufgelegt.

02:48:39.840 --> 02:48:41.840
Jetzt siehst du gleich.

02:48:41.840 --> 02:48:46.840
Ja, aber ich meine, das wird wahrscheinlich mit einer Zeitung nicht passieren, oder?

02:48:46.840 --> 02:48:47.840
Was haben wir hier?

02:48:47.840 --> 02:48:49.840
Machen wir mal hier was drauf.

02:48:49.840 --> 02:48:53.840
Okay, wenn was aufliegt auf dem Sensor, ist der Abstand extrem hoch.

02:48:53.840 --> 02:48:57.840
Das heißt, den Fall muss ich noch abfangen, wenn wirklich einer die Heizung, äh, die Heizung,

02:48:57.840 --> 02:49:03.840
die Zeitung so in das Rohr reinsteckt, ähm, dass es direkt dran ist.

02:49:03.840 --> 02:49:07.840
Ich sage einfach, wenn Wert größer 2000 ist, dann ist auch, soll er auch auslösen.

02:49:07.840 --> 02:49:10.840
Vielleicht, was, gibt es eigentlich eine Möglichkeit?

02:49:10.840 --> 02:49:12.840
Git checkt, ob es Passwörter in einem Commit ist.

02:49:12.840 --> 02:49:18.840
Also, ich würde erstmal ein Git-Ignore-File, äh, ich würde erstmal in mein Git-Ignore-File reinschreiben,

02:49:18.840 --> 02:49:23.840
dass die Dateien, die Passwörter enthalten, erst gar nicht mit Committed werden.

02:49:23.840 --> 02:49:27.840
Sollte es doch mal reinrutschen, kannst du natürlich einen Hook machen,

02:49:27.840 --> 02:49:32.840
wenn du ungefähr sagen kannst, wie das Passwort aussieht.

02:49:32.840 --> 02:49:37.840
Kannste, da würde ich aber einen Pre-Receive-Hook nehmen, weil nur bei einem Pre-Receive-Hook,

02:49:37.840 --> 02:49:40.840
das ist übrigens das, womit ich mein Geld verdiene auf der Arbeit,

02:49:40.840 --> 02:49:44.840
ähm, nur mit einem Pre-Receive-Hook kannst du Commits noch ablehnen.

02:49:44.840 --> 02:49:47.840
Post-Receive ist zu spät.

02:49:47.840 --> 02:49:53.840
Post-Receive kannst du verwenden, wenn du Sachen, äh, beispielsweise von deinem Git-Repo,

02:49:53.840 --> 02:49:57.840
nochmal woanders hinschieben willst, oder irgendwie automatischen Pull-Request aufmachen willst,

02:49:57.840 --> 02:50:02.840
oder irgendwas, aber Passwort und Filter und ablehnen musst du immer im Pre-Receive machen.

02:50:02.840 --> 02:50:05.840
Du kannst übrigens auch einen lokalen Hook nehmen.

02:50:05.840 --> 02:50:17.840
Du kannst ein After-Commit-hook nehmen. Also ich habe bei uns im Repo eigentlich nur einen Hook,

02:50:17.840 --> 02:50:26.840
nein, zwei. Wir haben einen riesen Pre-Receive-Hook, der so Sachen macht wie Syntax-Check,

02:50:26.840 --> 02:50:33.840
ob jemand so fail gewesen ist, Windows-Line-Endings zu verwenden,

02:50:33.840 --> 02:50:35.840
Style-Guide-Check

02:50:35.840 --> 02:50:37.840
Jammel-Sündags-Check

02:50:37.840 --> 02:50:39.840
sowas, macht der Hook

02:50:39.840 --> 02:50:41.840
und wenn es nicht stimmt, dann lehnt das einfach ab

02:50:41.840 --> 02:50:43.840
mit der passenden Fehlermeldung

02:50:43.840 --> 02:50:45.840
achso und wenn der Pranschnabel verkehrt ist

02:50:45.840 --> 02:50:47.840
weil

02:50:47.840 --> 02:50:49.840
ich hab mal irgendwann

02:50:49.840 --> 02:50:51.840
beschlossen

02:50:51.840 --> 02:50:53.840
dass man

02:50:53.840 --> 02:50:55.840
Branches irgendwie

02:50:55.840 --> 02:50:57.840
sinnvoll benennen soll

02:50:57.840 --> 02:50:59.840
dass ich im Nachhinein noch checken kann

02:50:59.840 --> 02:51:01.840
von wem was ist

02:51:01.840 --> 02:51:03.840
und ich hab

02:51:03.840 --> 02:51:05.840
natürlich

02:51:05.840 --> 02:51:07.840
bis auf die Branches, die ich für

02:51:07.840 --> 02:51:09.840
unsere Releases verwende

02:51:09.840 --> 02:51:11.840
die heißen halt, so wie man es sich vorstellt

02:51:11.840 --> 02:51:13.840
wir haben eine Master-Branche, wir haben quasi

02:51:13.840 --> 02:51:15.840
eine Testing-Branche, wir haben eine Live-Branche

02:51:15.840 --> 02:51:17.840
und sowas

02:51:17.840 --> 02:51:19.840
aber die Feature-Branches

02:51:19.840 --> 02:51:21.840
die entwickelt wird, habe ich mal gesagt

02:51:21.840 --> 02:51:23.840
die sollen kürzel slash

02:51:23.840 --> 02:51:25.840
Feature-Name sein

02:51:25.840 --> 02:51:27.840
und wenn einer was versucht zu pushen

02:51:27.840 --> 02:51:29.840
was nicht so heißt, dann wird es auch gleich

02:51:29.840 --> 02:51:31.840
abgelehnt mit dem Hinweis

02:51:31.840 --> 02:51:33.840
Branchname ist fail

02:51:35.840 --> 02:51:37.840
das ist ganz praktisch

02:51:37.840 --> 02:51:39.840
weil dann sehe ich schon sofort am Kürzel

02:51:39.840 --> 02:51:41.840
vom Branch

02:51:41.840 --> 02:51:43.840
wer es verbrochen hat

02:51:43.840 --> 02:51:45.840
oder ich sehe auch, wer beispielsweise

02:51:45.840 --> 02:51:47.840
noch 80 offene Branches hat

02:51:47.840 --> 02:51:49.840
ist nicht schlimm, macht geht nicht

02:51:49.840 --> 02:51:51.840
wirklich langsamer, aber ist vielleicht

02:51:51.840 --> 02:51:53.840
ein Hinweis drauf, dass er irgendwie was vergessen hat

02:51:55.840 --> 02:51:57.840
so

02:51:57.840 --> 02:51:59.840
also ich bin begeistert

02:51:59.840 --> 02:52:01.840
der Ultraschall-Sensor funktioniert

02:52:01.840 --> 02:52:03.840
das heißt wir können jetzt sagen

02:52:03.840 --> 02:52:05.840
hier, zack, measure distance

02:52:05.840 --> 02:52:07.840
send data

02:52:09.840 --> 02:52:11.840
measure distance

02:52:11.840 --> 02:52:13.840
wobei das ein ganz schöner Fail

02:52:13.840 --> 02:52:15.840
ist ehrlich gesagt

02:52:17.840 --> 02:52:19.840
darf man sowas hier eigentlich machen?

02:52:19.840 --> 02:52:21.840
ne oder?

02:52:21.840 --> 02:52:23.840
das geht natürlich nicht, das dynamisch zu initi..

02:52:23.840 --> 02:52:27.840
Moment, geht doch

02:52:31.840 --> 02:52:33.840
ok

02:52:37.840 --> 02:52:39.840
allerdings ist das jetzt ein bisschen Fail

02:52:39.840 --> 02:52:41.840
was ich hier mache, weil es könnte in beiden

02:52:41.840 --> 02:52:43.840
Fällen 255 übertragen werden

02:52:45.840 --> 02:52:47.840
es ist eigentlich nicht so clever, was ich da mache

02:52:47.840 --> 02:52:49.840
ehm

02:52:51.840 --> 02:52:53.840
na auf der anderen

02:52:53.840 --> 02:52:55.840
ohne Scheiß, eigentlich könnte man das so lassen

02:52:55.840 --> 02:52:57.840
eigentlich könnte man das

02:52:57.840 --> 02:52:59.840
echt so lassen, ich könnte mir 0 und

02:52:59.840 --> 02:53:01.840
1, könnte ich mir reservieren

02:53:01.840 --> 02:53:03.840
für Hof-Tor auf und zu

02:53:03.840 --> 02:53:05.840
also generell kriege ich ja eh nur

02:53:05.840 --> 02:53:07.840
die Benachrichtigung Hof-Tor auf, also 1

02:53:07.840 --> 02:53:09.840
1 ist Hof-Tor auf

02:53:09.840 --> 02:53:11.840
oder ich könnte auch sagen 0 ist Hof-Tor auf

02:53:11.840 --> 02:53:13.840
das verwirrt dann noch mehr

02:53:13.840 --> 02:53:15.840
und ehm

02:53:15.840 --> 02:53:17.840
ne 1, 1 brauche ich

02:53:17.840 --> 02:53:19.840
weil hier kann der 0 rauskommen

02:53:19.840 --> 02:53:21.840
und ehm 1 kommt bei dem

02:53:21.840 --> 02:53:23.840
Distanz-Messen-Eni raus

02:53:27.840 --> 02:53:29.840
ja das ist einfach, warum nicht?

02:53:29.840 --> 02:53:31.840
ja warum nicht?

02:53:31.840 --> 02:53:43.840
gucken wir mal

02:53:45.840 --> 02:53:47.840
dann muss ich immer nur 1 Byte übertragen

02:53:47.840 --> 02:53:49.840
dann geht es schön schnell, ansonsten müsste ich

02:53:49.840 --> 02:53:51.840
noch so einen Mini-Header da dran basteln, was ich gerade

02:53:51.840 --> 02:53:53.840
übertrage

02:53:53.840 --> 02:53:59.840
ok, Timer-Wake-Up

02:53:59.840 --> 02:54:01.840
kann der Timer mal

02:54:01.840 --> 02:54:03.840
ein bisschen schneller

02:54:03.840 --> 02:54:05.840
ok, also

02:54:05.840 --> 02:54:07.840
ich habe die Hand drüber

02:54:07.840 --> 02:54:09.840
6, guck

02:54:09.840 --> 02:54:11.840
passt, mal gucken

02:54:11.840 --> 02:54:13.840
ob der echt so nah

02:54:13.840 --> 02:54:15.840
nicht messen kann

02:54:15.840 --> 02:54:17.840
eh warum 1 nie

02:54:17.840 --> 02:54:19.840
rauskommt, es ist ja unwahrscheinlich

02:54:19.840 --> 02:54:21.840
dass 1 rauskommt, weil der

02:54:21.840 --> 02:54:23.840
Ultraschall-Sensor das nicht checkt

02:54:23.840 --> 02:54:25.840
wenn die Sachen so nah dran sind

02:54:25.840 --> 02:54:27.840
also wir können ja mal gucken, was das kleinste ist

02:54:27.840 --> 02:54:29.840
was ich hinkriege, jetzt habe ich die Hand mehr oder weniger

02:54:29.840 --> 02:54:31.840
direkt drüber, 4

02:54:35.840 --> 02:54:37.840
2, ich glaube nicht, dass wir auf 1 runterkommen

02:54:39.840 --> 02:54:41.840
4, ne

02:54:45.840 --> 02:54:47.840
also auf 1

02:54:47.840 --> 02:54:49.840
schaffen wir nicht

02:54:49.840 --> 02:54:51.840
0 schafft der eh nicht

02:54:51.840 --> 02:54:53.840
deswegen sorgen wir dafür, dass

02:54:53.840 --> 02:54:55.840
auch nie 0 übertragen wird

02:54:55.840 --> 02:54:57.840
selbst wenn der

02:54:57.840 --> 02:54:59.840
Ultraschall-Sensor misst

02:54:59.840 --> 02:55:01.840
was ja vorkommt, wenn man misst

02:55:01.840 --> 02:55:03.840
dann

02:55:05.840 --> 02:55:07.840
ist doch bloß der Fabian

02:55:07.840 --> 02:55:09.840
ist mal an

02:55:13.840 --> 02:55:15.840
dann sorgen wir nämlich dafür, dass der

02:55:15.840 --> 02:55:17.840
einfach jetzt

02:55:17.840 --> 02:55:19.840
9999

02:55:19.840 --> 02:55:21.840
überträgt

02:55:23.840 --> 02:55:25.840
selbst wenn er misst

02:55:25.840 --> 02:55:27.840
das heißt wir können ihm sagen

02:55:27.840 --> 02:55:29.840
wenn da 0 drinne steht

02:55:29.840 --> 02:55:31.840
dann ist es auf jeden

02:55:31.840 --> 02:55:33.840
fall Tür auf

02:55:33.840 --> 02:55:35.840
wir können sogar so weit gehen und uns Tür auf

02:55:35.840 --> 02:55:37.840
und Tür zu können wir 0 und 1 machen

02:55:37.840 --> 02:55:39.840
wir machen 1 Tür auf

02:55:39.840 --> 02:55:41.840
und 0

02:55:41.840 --> 02:55:43.840
das muss ich noch gucken, wie man das mit dem Schalter machen

02:55:43.840 --> 02:55:45.840
und 0 ist Tür zu

02:55:45.840 --> 02:55:47.840
da kann ich nämlich auch messen

02:55:47.840 --> 02:55:49.840
wie lang es dauert, also wie lang die Tür offen war

02:55:53.840 --> 02:55:55.840
das war eigentlich ganz nice

02:55:55.840 --> 02:55:57.840
ich mein, okay

02:55:57.840 --> 02:55:59.840
das ist jetzt nicht die

02:56:01.840 --> 02:56:03.840
also rein von der Logik her

02:56:03.840 --> 02:56:05.840
die schönste Variante

02:56:05.840 --> 02:56:07.840
weil wir könnten immer noch aus Versehen Werte übertragen

02:56:07.840 --> 02:56:09.840
und dann was falsches interpretieren

02:56:09.840 --> 02:56:11.840
aber ich glaube

02:56:11.840 --> 02:56:13.840
die Chance, dass der Ultraschall-Sensor 0 und 1

02:56:13.840 --> 02:56:15.840
misst

02:56:15.840 --> 02:56:17.840
sind es relativ gering

02:56:23.840 --> 02:56:25.840
aber ich finde

02:56:25.840 --> 02:56:27.840
ich finde das echt nice, guck mal hier

02:56:27.840 --> 02:56:29.840
der Ultraschall-Sensor funktioniert

02:56:29.840 --> 02:56:31.840
ich halte ihn jetzt mal auf den Schreibtisch runter

02:56:31.840 --> 02:56:33.840
Bäm, 9 cm, da kommt er hin

02:56:33.840 --> 02:56:35.840
jetzt mal ganz nah

02:56:35.840 --> 02:56:37.840
4

02:56:37.840 --> 02:56:39.840
sonst lege ich ihn auf

02:56:39.840 --> 02:56:41.840
jetzt wird er wahrscheinlich sonst was ausliefern

02:56:41.840 --> 02:56:43.840
38

02:56:43.840 --> 02:56:45.840
obwohl er aufliegt

02:56:45.840 --> 02:56:47.840
ich mache ihn jetzt nur ein ganz kleines Stückchen

02:56:47.840 --> 02:56:49.840
oben drüber

02:56:49.840 --> 02:56:51.840
38, noch ein Stückchen höher

02:56:51.840 --> 02:56:53.840
5

02:56:53.840 --> 02:56:55.840
also kommt man hier hin

02:57:03.840 --> 02:57:05.840
genau, Flo69

02:57:05.840 --> 02:57:07.840
genau, das könnte ich machen

02:57:07.840 --> 02:57:11.840
das ist eine gute Idee

02:57:13.840 --> 02:57:15.840
if Distance

02:57:15.840 --> 02:57:17.840
kleiner

02:57:17.840 --> 02:57:19.840
2

02:57:19.840 --> 02:57:21.840
dann

02:57:21.840 --> 02:57:23.840
dann 2

02:57:23.840 --> 02:57:25.840
oder Distance

02:57:25.840 --> 02:57:27.840
ups

02:57:27.840 --> 02:57:29.840
wenn man das also richtig macht

02:57:29.840 --> 02:57:35.840
jetzt haben wir das auch abgefackelt

02:57:35.840 --> 02:57:37.840
also sprich

02:57:37.840 --> 02:57:39.840
im Endeffekt

02:57:39.840 --> 02:57:41.840
das kleinste

02:57:41.840 --> 02:57:43.840
da kann ich hier oben auch wieder

02:57:43.840 --> 02:57:45.840
auf 0 initialisen

02:57:45.840 --> 02:57:47.840
also es heißt

02:57:47.840 --> 02:57:49.840
das kleinste

02:57:49.840 --> 02:57:51.840
was unseren Entfernungssensor misst

02:57:51.840 --> 02:57:53.840
ist 2

02:57:53.840 --> 02:57:55.840
das heißt ich habe 2 Bits

02:57:55.840 --> 02:57:57.840
frei für Tür auf und zu

02:57:57.840 --> 02:57:59.840
ich bin begeistert

02:57:59.840 --> 02:58:01.840
ich bin begeistert

02:58:01.840 --> 02:58:03.840
ich bin begeistert

02:58:03.840 --> 02:58:05.840
ich bin begeistert

02:58:05.840 --> 02:58:07.840
achja und

02:58:07.840 --> 02:58:09.840
was wir noch brauchen ist

02:58:09.840 --> 02:58:11.840
wenn ich das Ding nämlich komplett abdecke

02:58:11.840 --> 02:58:13.840
dann kommt dann irgendwie was über 1000 bei raus

02:58:13.840 --> 02:58:15.840
oder auch nicht

02:58:15.840 --> 02:58:17.840
eben kam da zumindest was über 1000 bei raus

02:58:17.840 --> 02:58:19.840
wenn ich es abdecke

02:58:19.840 --> 02:58:21.840
jetzt, jetzt, jetzt nicht

02:58:21.840 --> 02:58:23.840
ok

02:58:23.840 --> 02:58:25.840
aber man hat es doch eben

02:58:25.840 --> 02:58:27.840
hä warum macht er das jetzt nicht mehr

02:58:27.840 --> 02:58:29.840
achso ha weil 1000 nicht in den byte reinpasst

02:58:29.840 --> 02:58:31.840
ok

02:58:31.840 --> 02:58:33.840
ja

02:58:33.840 --> 02:58:35.840
dann müssen wir das glaube ich nochmal kurz hier ausgeben

02:58:35.840 --> 02:58:37.840
dass ich das hier sehe

02:58:45.840 --> 02:58:47.840
Distance

02:58:47.840 --> 02:58:49.840
Distance

02:58:55.840 --> 02:58:57.840
übrigens ich muss eh gucken

02:58:57.840 --> 02:58:59.840
dass es unter 255 ist

02:58:59.840 --> 02:59:01.840
weil sonst komme ich mit dem byte da eh nicht hin

02:59:03.840 --> 02:59:05.840
Hallo Tante Micha

02:59:05.840 --> 02:59:07.840
so jetzt machen wir mal die Hand drauf

02:59:07.840 --> 02:59:09.840
Achtung

02:59:09.840 --> 02:59:11.840
ja 2000 irgendwas

02:59:11.840 --> 02:59:13.840
also haben wir noch ein paar mehr

02:59:13.840 --> 02:59:15.840
wenn die Sache kleiner ist als 2

02:59:15.840 --> 02:59:17.840
dann wollen wir 2

02:59:19.840 --> 02:59:21.840
das wird mir jetzt in dem one liner ein bisschen zu viel

02:59:31.840 --> 02:59:33.840
also machen wir so

02:59:33.840 --> 02:59:35.840
if

02:59:35.840 --> 02:59:37.840
Distance

02:59:37.840 --> 02:59:39.840
Deiner 2

02:59:39.840 --> 02:59:41.840
Return 2

02:59:41.840 --> 02:59:43.840
ähm

02:59:43.840 --> 02:59:45.840
as if

02:59:45.840 --> 02:59:47.840
Distance

02:59:47.840 --> 02:59:49.840
Distance

02:59:49.840 --> 02:59:51.840
über 200

02:59:51.840 --> 02:59:53.840
Return 200

02:59:53.840 --> 02:59:55.840
irgendwie sowas in der Richtung so

02:59:55.840 --> 02:59:57.840
so und ansonsten

02:59:57.840 --> 02:59:59.840
Return Distance

02:59:59.840 --> 03:00:01.840
das scheint mir doch jetzt ganz sinnvoll zu sein

03:00:03.840 --> 03:00:05.840
was hatte hier für schmerze

03:00:05.840 --> 03:00:07.840
unused variable start

03:00:07.840 --> 03:00:11.840
eh doch ganz woanders

03:00:25.840 --> 03:00:27.840
ich mein man könnte das inline schreiben

03:00:27.840 --> 03:00:29.840
aber das wäre dann glaube ich ein bisschen

03:00:31.840 --> 03:00:33.840
bleibt voll immer oh ist sehr langsam warum

03:00:33.840 --> 03:00:35.840
es kompiliert fast schneller

03:00:35.840 --> 03:00:37.840
die richtigen wie normales

03:00:43.840 --> 03:00:45.840
was machst du da ha

03:00:45.840 --> 03:00:47.840
das dachte ich mir

03:00:47.840 --> 03:00:49.840
weil die frage öfters kommt habe ich das ganze

03:00:49.840 --> 03:00:51.840
im vorfeld schon aufgemalt

03:00:51.840 --> 03:00:53.840
ich versuche

03:00:53.840 --> 03:00:55.840
meinem briefkasten beizubringen

03:00:55.840 --> 03:00:57.840
dass der mir schickt wenn

03:00:57.840 --> 03:00:59.840
neue post da ist

03:00:59.840 --> 03:01:01.840
gleichermaßen soll er mir

03:01:01.840 --> 03:01:05.840
sagen wenn er die hoftür aufmacht

03:01:09.840 --> 03:01:11.840
das heißt ich habe hier einen controller

03:01:11.840 --> 03:01:13.840
der hat einen schalter dran

03:01:13.840 --> 03:01:15.840
der erkennt wenn die tür aufgeht

03:01:15.840 --> 03:01:17.840
und der hat einen ultraschall sensor

03:01:17.840 --> 03:01:19.840
der misst quasi den abstand im briefkasten

03:01:19.840 --> 03:01:21.840
das heißt wenn einer den brief einwirft

03:01:21.840 --> 03:01:23.840
ist der abstand im briefkasten

03:01:23.840 --> 03:01:25.840
natürlich geringer

03:01:25.840 --> 03:01:27.840
und

03:01:27.840 --> 03:01:29.840
der läuft an einer batterie

03:01:29.840 --> 03:01:31.840
deswegen braucht er ein paar

03:01:31.840 --> 03:01:33.840
effizienz energiesparmaßnahmen

03:01:33.840 --> 03:01:35.840
dass das auch an einer batterie funktioniert

03:01:35.840 --> 03:01:37.840
und der wacht nur ganz kurz

03:01:37.840 --> 03:01:39.840
auf immer guckt nach

03:01:39.840 --> 03:01:41.840
ob da irgendwie

03:01:41.840 --> 03:01:43.840
ob da post da ist oder ob er

03:01:43.840 --> 03:01:45.840
vom schalter getriggert wurde

03:01:45.840 --> 03:01:47.840
dann überträgt er das ganze an einen weiteren controller

03:01:47.840 --> 03:01:49.840
das geht ganz schnell 50

03:01:49.840 --> 03:01:51.840
millisekunden und dann

03:01:51.840 --> 03:01:53.840
legt er sich wieder schlafen

03:01:53.840 --> 03:01:55.840
und der andere controller überträgt das ganze dann

03:01:55.840 --> 03:01:57.840
per wlan

03:01:57.840 --> 03:01:59.840
das ist mit relativ schnell

03:01:59.840 --> 03:02:01.840
wenn man hoftor aufgeht

03:02:01.840 --> 03:02:03.840
und

03:02:03.840 --> 03:02:05.840
wenn post im briefkasten ist

03:02:21.840 --> 03:02:23.840
jo

03:02:23.840 --> 03:02:27.840
ja

03:02:27.840 --> 03:02:29.840
die

03:02:29.840 --> 03:02:31.840
ja

03:02:31.840 --> 03:02:33.840
ja

03:02:33.840 --> 03:02:35.840
also

03:02:35.840 --> 03:02:37.840
dass

03:02:37.840 --> 03:02:39.840
ja

03:02:39.840 --> 03:02:41.840
ja

03:02:43.840 --> 03:02:45.840
ja

03:02:45.840 --> 03:02:47.840
ja

03:02:47.840 --> 03:02:49.840
ja

03:02:49.840 --> 03:02:51.840
ja

03:02:51.840 --> 03:02:58.580
Also mit einer Waage ist schwierig. Mit einer Waage kannst du es noch ein bisschen weiter spinnen, da kannst du sogar ungefähr sagen, wie viel drin ist.

03:02:58.580 --> 03:03:02.960
Das ist noch mal, das ist noch mal, noch mal eine Runde advanceder.

03:03:02.960 --> 03:03:09.440
Allerdings stelle ich mir schwierig vor, eine Waage, das mit einer Waage zu machen, allein schon halt einbautechnisch.

03:03:09.440 --> 03:03:16.840
So ist es relativ einfach. So brauche ich einfach einen Schalter am Hoftor für das Erkennen von Hoftor auf und zu

03:03:16.840 --> 03:03:21.440
und einen Ultraschall-Sensor im Briefkasten. Und der Ultraschall-Sensor ist halt relativ klein.

03:03:21.440 --> 03:03:25.640
Den kann ich einfach unten durch die Klappe machen, zack, und er erkennt es.

03:03:25.640 --> 03:03:30.040
Eine Waage wäre eine größere, größere Bauaktion.

03:03:30.040 --> 03:03:39.140
Dafür wäre damit noch, noch detailliertere Sachen möglich, wobei mir das eigentlich egal ist, also ob ich jetzt weiß, dass es zwei oder drei Briefe sind

03:03:39.140 --> 03:03:43.140
oder, dass überhaupt was drin ist, ist mir eigentlich egal.

03:03:43.140 --> 03:03:54.240
Mit einer Waage wäre das, stelle ich es mir deutlich komplizierter vor.

03:03:54.240 --> 03:04:01.940
Ich habe mir mal Hardware gekauft, wo man eine Waage bauen kann.

03:04:01.940 --> 03:04:05.640
Load Cells habe ich mir gekauft und einen Controller dafür.

03:04:05.640 --> 03:04:08.240
Habe ich aber noch nicht damit rumgebastelt.

03:04:08.240 --> 03:04:15.540
Ich wollte mit den Load Cells ein Bett-Detection-Sensor machen.

03:04:15.540 --> 03:04:30.640
Also quasi, wenn man sich ins Bett legt, dass dann, sobald da nach 22 Uhr ist und länger als 5 Minuten Gewicht drauf ist,

03:04:30.640 --> 03:04:33.240
dass er dann quasi alles ausschaltet, was ich vergessen habe auszuschalten.

03:04:33.240 --> 03:04:34.540
Habe ich aber noch nicht gemacht.

03:04:34.540 --> 03:04:45.040
Was ich mir kompliziert vorstelle, ist, wenn man, also, kann ja durchaus sein,

03:04:45.040 --> 03:04:50.540
dass das Gewicht im Bett sich teilweise mal bei speziellen, bestimmten Aktionen verteilt anders.

03:04:50.540 --> 03:04:55.340
Ja, dann weiß man nicht, was der Sensor macht.

03:04:55.340 --> 03:04:57.340
Da geht dann Licht an, Licht aus, Licht an, Licht.

03:04:57.340 --> 03:04:59.340
Also das ist vielleicht auch nicht so, so stimmungsvoll.

03:04:59.340 --> 03:05:17.940
Ist da wahrscheinlich ein Stimmungskiller, wenn ein Licht an und aus geht.

03:05:17.940 --> 03:05:31.140
Aber das könnte man natürlich auch wiederum beheben,

03:05:31.140 --> 03:05:36.540
indem man da eine Logik einbaut, die quasi sagt, hey, du machst einfach einen Durchschnitt.

03:05:36.540 --> 03:05:42.640
Und wenn du da zu zweit sogar drauf legst, dann ist ja auch das Gewicht doppelt so hoch.

03:05:42.640 --> 03:05:45.940
Das heißt, das ist, naja, nicht ganz.

03:05:45.940 --> 03:05:50.740
Also ich würde sagen, ich mache trotzdem den größten Teil des Gewichts aus, ja.

03:05:50.740 --> 03:05:53.040
Aber das Gewicht ist dann zumindest höher.

03:05:53.040 --> 03:05:55.040
Das könnte man dann wahrscheinlich auch wieder rausrechnen,

03:05:55.040 --> 03:05:59.940
wenn man ganze abgedrehte Sachen machen will.

03:05:59.940 --> 03:06:04.340
Aber man könnte es auch einfach negativ machen, indem man sagt, hey, das Ding wurde getriggert

03:06:04.340 --> 03:06:12.640
und dann ist es einfach innerhalb der nächsten fünf Minuten nie so und so lang wieder ohne Gewicht gewesen.

03:06:12.640 --> 03:06:17.940
Dann könnte man das auch relativ sicher erkennen, egal was da gerade passiert.

03:06:17.940 --> 03:06:22.140
Na ja, gut, also so viel dazu.

03:06:22.140 --> 03:06:28.240
Gut, aber man muss sagen, der Scheiß funktioniert, den wir gebaut haben.

03:06:28.240 --> 03:06:31.740
Ultraschall-Sensor triggert.

03:06:31.740 --> 03:06:35.340
Switch triggert.

03:06:35.340 --> 03:06:41.340
Ja, Switch, Switch Ross.

03:06:41.340 --> 03:06:49.840
Ich bin damit wirklich ziemlich zufrieden, ehrlich gesagt, jetzt.

03:06:49.840 --> 03:06:52.040
Ich sehe nur ein Problem bei der ganzen Geschichte.

03:06:52.040 --> 03:06:55.540
Ich habe das jetzt ja an einem ESP32 NodeMCU dran.

03:06:55.540 --> 03:07:00.340
Das ist ja nicht das Board, was ich unten an Briefkasten hänge.

03:07:00.340 --> 03:07:04.440
Unten an Briefkasten kommt ein deutlich sparsameres Board.

03:07:04.440 --> 03:07:09.640
Und ja, das könnte man auch machen, BeatBroad.

03:07:09.640 --> 03:07:13.340
Der Ultraschall-Sensor braucht zwingend 5 Volt.

03:07:13.340 --> 03:07:19.340
Und der FireBeatle ESP32, das ist ein ziemlich stromsparendes Board,

03:07:19.340 --> 03:07:27.640
der hat bloß, wenn man das an Batterie betreibt, hat er nur 3,3 Volt Ausgang.

03:07:27.640 --> 03:07:30.840
Was da dazu führt, dass ich den Ultraschall-Sensor nicht verwenden kann.

03:07:30.840 --> 03:07:37.540
Fällt da dem Elektriker was dazu ein?

03:07:37.540 --> 03:07:41.240
Ich brauche den Spannungswandler dazwischen noch, oder?

03:07:41.240 --> 03:07:45.940
Der von 3,3 Volt auf 5 Volt, das...

03:07:45.940 --> 03:07:52.540
Naja, mein Board, was ich unten an Briefkasten hänge, das hat bloß 3,3 Volt.

03:07:52.540 --> 03:07:57.840
Und der Ultraschall-Sensor braucht 5.

03:07:57.840 --> 03:08:07.840
Was, ein LT, oder was? LT1618.

03:08:07.840 --> 03:08:11.540
Gibt es nicht zu kaufen.

03:08:11.540 --> 03:08:15.740
Grip.

03:08:15.740 --> 03:08:18.740
Also ich habe ja welche da, ich zeige dir die mal,

03:08:18.740 --> 03:08:24.040
und du kannst mir mal sagen, ob ich die dafür verwenden kann.

03:08:24.040 --> 03:08:35.940
Muss ich mal kurz bei Amazon gucken.

03:08:35.940 --> 03:08:39.940
Nein, ich möchte keine Mobilfunknummer hinzufügen, Bestellungen.

03:08:39.940 --> 03:08:41.140
Ups.

03:08:41.140 --> 03:08:46.440
Ach, ich bin im falschen Amazon-Account.

03:08:46.440 --> 03:08:49.240
What the fuck, Alter?

03:08:49.240 --> 03:08:51.140
Warum mit dem falschen Amazon-Account?

03:08:51.140 --> 03:09:00.940
Ah, jetzt. Genau, ich habe den hier am Start.

03:09:00.940 --> 03:09:08.740
Hab ich es denn?

03:09:08.740 --> 03:09:12.940
Habe es gleich.

03:09:12.940 --> 03:09:19.640
Ja.

03:09:19.640 --> 03:09:21.940
Jetzt gerade mal gucken, was davon was war.

03:09:21.940 --> 03:09:23.540
Ich glaube, der da ist das.

03:09:23.540 --> 03:09:39.640
Da habe ich 10 Stück von da.

03:09:39.640 --> 03:09:42.840
Amazon, ja, Amazon, da.

03:09:42.840 --> 03:09:45.340
Ich muss so viel nachgucken.

03:09:45.340 --> 03:09:48.340
Quasi, ich weiß, dass ich mal irgendwo was bestellt habe,

03:09:48.340 --> 03:09:50.640
oder ich weiß, dass ich sowas habe, aber ich weiß nicht wo.

03:09:50.640 --> 03:09:53.540
Da gucke ich immer bei Amazon nach und stelle dann fest,

03:09:53.540 --> 03:09:55.840
aha, das hast du ungefähr dann und dann bestellt,

03:09:55.840 --> 03:09:58.140
und dann und dann heißt es ungefähr in diesem Karton,

03:09:58.140 --> 03:10:00.540
und dann weiß ich auch ungefähr, wo ich hingestellt habe.

03:10:00.540 --> 03:10:03.040
Amazon ist alles in einem, ja.

03:10:03.040 --> 03:10:06.040
Also davon habe ich welche da.

03:10:06.040 --> 03:10:07.740
Die sind aber ziemlich groß.

03:10:07.740 --> 03:10:11.440
Die sind eigentlich viel zu unsinnig groß dafür.

03:10:11.440 --> 03:10:30.740
Die sind, die sind so, so, so, bisschen größer wie ein Daumennagel, würde ich sagen.

03:10:30.740 --> 03:10:40.840
Da ist eigentlich, da ist eigentlich viel zu overdimensioniert dafür, ne.

03:10:40.840 --> 03:10:43.940
Over, was für ein Scheißwort, oder, Alter.

03:10:43.940 --> 03:10:47.640
Overdimensioniert ist es.

03:10:47.640 --> 03:10:49.340
Das könnte von Fabian sein.

03:10:49.340 --> 03:10:52.240
Das kann ich mir richtig gut vorstellen, wie er BDO spielt,

03:10:52.240 --> 03:11:05.440
und dann auf einmal, einmal erzählt, dass es over, over, over, ja, was auch immer.

03:11:05.440 --> 03:11:11.040
Overdimensioniert, ja.

03:11:11.040 --> 03:11:12.940
Das ist aber, ah, das ist doof.

03:11:12.940 --> 03:11:17.140
Ich muss gucken, ob es ein anderes Ultraschallmodul gibt.

03:11:17.140 --> 03:11:21.240
Weil mir fällt gerade ein, warum das noch doof ist.

03:11:21.240 --> 03:11:27.640
Selbst wenn ich das Ultraschallmodul mit so einem Step-Up-Converter anschließe,

03:11:27.640 --> 03:11:31.640
von 3,3 Volt auf 5 Volt,

03:11:31.640 --> 03:11:37.840
die Pins, also der Ausgang ist ja auch 5 Volt vom Ultraschallmodul,

03:11:37.840 --> 03:11:41.440
und die GPIO-Pins sind eigentlich alle 3,3 Volt.

03:11:41.440 --> 03:11:45.440
Ich meine, ich gehe nicht davon aus, dass das Board kaputt gehen würde,

03:11:45.440 --> 03:11:50.540
aber ich will es auch nicht ausprobieren.

03:11:50.540 --> 03:11:54.440
Ja genau, Flo, das sage ich, das meine ich ja gerade.

03:11:54.440 --> 03:11:59.140
Das heißt, das ist doof.

03:11:59.140 --> 03:12:03.540
Das ist, das ist blöd.

03:12:03.540 --> 03:12:05.840
Nee, ich glaube nicht, dass das Board kaputt gehen wird,

03:12:05.840 --> 03:12:08.540
weil das Board hat, wenn man es per USB anschließt,

03:12:08.540 --> 03:12:12.840
hat es auch einen 5 Volt-Ausgang und die kann man auch an GPIO-Pins stöpseln.

03:12:12.840 --> 03:12:17.140
Also das scheint schon entsprechend abgesichert zu sein,

03:12:17.140 --> 03:12:18.440
aber ich will es eigentlich nicht ausprobieren,

03:12:18.440 --> 03:12:21.440
weil ich weiß nicht, ob es das auch alles aktiv hat,

03:12:21.440 --> 03:12:23.440
wenn man es auf Batterie laufen lässt,

03:12:23.440 --> 03:12:25.840
weil das ist gerade beim Fire Beetle so die Sache,

03:12:25.840 --> 03:12:29.240
die schalten vieles ab, wenn es nicht per USB angeschlossen ist.

03:12:29.240 --> 03:12:31.440
Es kann durchaus sein, dass es kaputt geht.

03:12:31.440 --> 03:12:35.840
Flo690 habe ich schon ausprobiert, geht nicht.

03:12:35.840 --> 03:12:38.840
Also wir können es live im Stream ausprobieren.

03:12:38.840 --> 03:12:44.140
Also jetzt ist der Ultraschall-Sensor dran, Hand drüber.

03:12:44.140 --> 03:12:49.840
So, was auch immer, Hand drüber.

03:12:49.840 --> 03:12:55.440
Und jetzt stöpsel ich das mal um von 5 Volt auf,

03:12:55.440 --> 03:12:57.240
Moment, mein Crown ist nicht richtig dran.

03:12:57.240 --> 03:13:00.340
Das kann in die Hose gehen.

03:13:00.340 --> 03:13:03.240
Jetzt stöpsel ich das mal um von 5 Volt auf 3,3 Volt

03:13:03.240 --> 03:13:12.640
und dann werden wir sehen, es funktioniert nicht.

03:13:12.640 --> 03:13:18.940
Es liefert immer 2 zurück, weil es kleiner als 2 ist.

03:13:18.940 --> 03:13:21.740
Nee, ich glaube, ich bestell mir einfach einen Ultraschall-Sensor mit,

03:13:21.740 --> 03:13:23.640
der mit 3,3 Volt funktioniert.

03:13:23.640 --> 03:13:29.040
Wird es doch bestimmt, wird es doch bestimmt geben.

03:13:29.040 --> 03:13:31.640
Ultrasonic.

03:13:31.640 --> 03:13:34.240
Habt ihr, wo ich gerade sagte, Ultrasonic,

03:13:34.240 --> 03:13:37.240
habt ihr den Trailer zum Sonic-Film gesehen?

03:13:37.240 --> 03:13:42.140
Ich fand das Ding so zum Fremdschämen, ey.

03:13:42.140 --> 03:13:52.140
Also als ich das Viech gesehen habe, es sah gerade schlecht aus.

03:13:52.140 --> 03:13:59.840
Moment, was macht der da?

03:13:59.840 --> 03:14:02.740
Was geht mit dem ab?

03:14:02.740 --> 03:14:05.440
Was macht der da?

03:14:05.440 --> 03:14:15.240
Der macht Resistor dran zwischen Crown und Echo

03:14:15.240 --> 03:14:18.540
und nochmal einen Resistor zwischen Echo und irgendwas von diesem Pin.

03:14:18.540 --> 03:14:34.240
Ich hab keine Ahnung, was das tut.

03:14:34.240 --> 03:14:36.240
Das könnte tatsächlich ein Spannungsteiler sein.

03:14:36.240 --> 03:14:38.040
Wobei müsste der dann, wenn es ein Spannungsteiler ist,

03:14:38.040 --> 03:14:43.540
müsste der nicht eigentlich von VCC auf Crown,

03:14:43.540 --> 03:14:51.740
also quasi da einen Widerstand, da einen anderen Widerstand.

03:14:51.740 --> 03:14:54.140
Also du brauchst es ja quasi,

03:14:54.140 --> 03:14:56.240
du musst ja quasi das, was du,

03:14:56.240 --> 03:14:59.140
die geteilte Spannung hast ja zwischen den zwei Widerständen.

03:14:59.140 --> 03:15:00.340
Oder ist da auch VCC?

03:15:00.340 --> 03:15:09.940
Eigentlich müsste der das noch da dran machen.

03:15:09.940 --> 03:15:11.340
Stimmt, ja.

03:15:11.340 --> 03:15:13.740
Aber wahrscheinlich könnte er es auch einfach da dran machen, oder?

03:15:13.740 --> 03:15:18.740
Du hast aufs Gleiche rausgegangen.

03:15:18.740 --> 03:15:24.640
Ach nee, das wird dann wahrscheinlich rumspacken, oder?

03:15:24.640 --> 03:15:25.740
Stimmt, dann ist immer High.

03:15:25.740 --> 03:15:27.240
Jaja, klar, logisch.

03:15:27.240 --> 03:15:28.540
Stimmt, du willst ja.

03:15:28.540 --> 03:15:31.540
Ja, aber so ein Mod, ich meine, könnte ich machen.

03:15:31.540 --> 03:15:33.740
Ich meine, die Dinger sind relativ groß.

03:15:33.740 --> 03:15:35.540
Widerstände habe ich auch genug.

03:15:35.540 --> 03:15:37.340
Was hat er denn da für welche?

03:15:37.340 --> 03:15:40.640
Ich habe ja mal so ein AliExpress Widerstandset gekauft.

03:15:40.640 --> 03:15:44.140
Das sind irgendwie, keine Ahnung, 200 Widerstände.

03:15:44.140 --> 03:15:47.640
Und insgesamt habe ich jetzt, keine Ahnung, 20 verwendet vielleicht.

03:15:47.640 --> 03:15:49.240
Das ist alles wirklich drin.

03:15:49.240 --> 03:15:49.840
Was hat er denn?

03:15:49.840 --> 03:15:53.040
2,7 Kiloohm und ein 4,7 Kiloohm.

03:15:53.040 --> 03:15:56.040
Ja gut, das macht wahrscheinlich, wenn man es ausrechnet,

03:15:56.040 --> 03:15:59.840
macht es wahrscheinlich von 5 auf 3,3, oder?

03:15:59.840 --> 03:16:14.140
Gehe ich mal stark von aus.

03:16:14.140 --> 03:16:17.440
Ja, man, das könnte, ganz ehrlich, das könnte man eigentlich machen.

03:16:17.440 --> 03:16:23.140
Das sieht jetzt nicht super kompliziert aus.

03:16:23.140 --> 03:16:26.840
Ah, das ist schon, also das da oben dran zu löten, ist verdammt klein.

03:16:26.840 --> 03:16:30.940
Das sieht auf dem Bild nicht so wild aus, aber das ist schon ziemlich fummelig.

03:16:30.940 --> 03:16:34.840
Aber ich habe ja mal ein 0,2 Millimeter Lötspitze mal irgendwann gekauft,

03:16:34.840 --> 03:16:37.240
dann kann ich den übrigens mal verwenden.

03:16:37.240 --> 03:16:38.740
Dann mache ich das einfach so.

03:16:38.740 --> 03:16:43.440
Da brauche ich keinen neuen Sensor.

03:16:43.440 --> 03:16:46.740
Da fällt mir nur noch dazu ein.

03:16:46.740 --> 03:17:02.140
Wie weit ist denn der Ultraschall-Sensor vom Empfänger entfernt?

03:17:02.140 --> 03:17:02.840
Gar nicht.

03:17:02.840 --> 03:17:07.840
Das hier ist der Sender und das hier ist der Empfänger.

03:17:07.840 --> 03:17:09.040
Sonst funktioniert es ja nicht.

03:17:09.040 --> 03:17:12.040
Das ist so wie eine Fledermaus im Endeffekt.

03:17:12.040 --> 03:17:16.640
Hiermit schickt das Ding Schallwellen aus und damit empfängt es die Ultraschallwellen.

03:17:16.640 --> 03:17:20.240
Und daraus kannst du dann errechnen, je nachdem, wieviel Pulse du bekommst,

03:17:20.240 --> 03:17:23.440
also in welcher Geschwindigkeit die Pulse zurückkommen,

03:17:23.440 --> 03:17:26.440
kannst du ausrechnen, wie weit das Objekt davor entfernt ist.

03:17:26.440 --> 03:17:31.440
Und aktuell ist es der Meinung, mein Objekt ist,

03:17:31.440 --> 03:17:35.640
ach so, Moment, das steckt noch an der falschen Spannungsquelle.

03:17:35.640 --> 03:17:39.240
Ich muss erst mal wieder umstecken, schlüpseln auf 5 Volt.

03:17:39.240 --> 03:17:46.240
So, aktuell liegt es schräg auf dem Tisch und meint, es ist 16 Zentimeter entfernt.

03:17:46.240 --> 03:17:50.040
So, und wenn ich es jetzt auf den Kopf stelle, dass es Richtung Deckel geht,

03:17:50.040 --> 03:17:53.040
dann ist er der Meinung, es sind ungefähr, ja, 180 Zentimeter.

03:17:53.040 --> 03:17:58.040
Wenn ich jetzt meine Hand drüber mache, dann sagt er 7 Zentimeter.

03:17:58.040 --> 03:18:01.640
Hat deine Batterie denn 5 Volt?

03:18:01.640 --> 03:18:06.040
Nee, meine Batterie ist, ähm, hat 3,7.

03:18:06.040 --> 03:18:17.040
Voll geladen, 4,2.

03:18:17.040 --> 03:18:22.040
Und mal da jetzt davon abgesehen, es bringt ja auch nix,

03:18:22.040 --> 03:18:24.040
weil für den Mod brauchst du den Sensor immer noch 5 Volt.

03:18:24.040 --> 03:18:26.040
Stimmt eigentlich, ja.

03:18:26.040 --> 03:18:39.040
Der Mod sorgt ja nur dafür, dass ich quasi 3,3 Volt GPIO ausverwenden kann daran.

03:18:39.040 --> 03:18:42.040
Ja gut, aber da kann ich mir so einen Mini-Spannungswandel oder so kaufen,

03:18:42.040 --> 03:18:50.040
so ein Stecknadelding, was ganz kleines.

03:18:50.040 --> 03:18:55.040
Oder aber ich guck mal, was es für Ultraschallsensoren gibt, die 3,3 Volt brauchen.

03:18:55.040 --> 03:18:57.040
Das ist wahrscheinlich die einfachere Variante.

03:18:57.040 --> 03:19:04.040
Guck mal hier, da haben wir doch schon einen, RCW001.

03:19:04.040 --> 03:19:10.040
Ja.

03:19:10.040 --> 03:19:22.040
Das ist der Fake, das ist die Fake-Sache, das ist das China-Fake von dem.

03:19:22.040 --> 03:19:25.040
Ah, da könnte man sich so einen holen.

03:19:25.040 --> 03:19:29.040
Mal ganz davon abgesehen, der Preis ist ganz schön happig, äh.

03:19:29.040 --> 03:19:36.040
Die Dinger kosten normalerweise, ja, und noch billiger,

03:19:36.040 --> 03:19:50.040
je nachdem, wenn man die sich in China kauft, kriegst du den 10er-Pack für 5 Euro oder so.

03:19:50.040 --> 03:19:53.040
Also da muss ich mal gucken, was es da gibt.

03:19:53.040 --> 03:20:02.040
Da bin ich jetzt so noch nicht ganz zufrieden.

03:20:02.040 --> 03:20:10.040
Bei 3,35 Volt Ultrasonic-Sensor hat Aliexpress, na zeig ich mal her, was hat denn Aliexpress?

03:20:10.040 --> 03:20:20.040
Da sieht man mal wieder, dass Aliexpress ziemlich in Bullshit schreibt teilweise.

03:20:20.040 --> 03:20:31.040
Weil genau diesen Sensor hab ich da und der funktioniert mit 3,3 Volt nicht.

03:20:31.040 --> 03:20:33.040
Wann zockst du mal wieder?

03:20:33.040 --> 03:20:42.040
Ja, On-Stream hab ich kein Game so wirklich für.

03:20:42.040 --> 03:20:46.040
Das ist ja die Sache.

03:20:46.040 --> 03:20:53.040
Wenn ich ein Game hätte, würde ich auch mehr Gaming stremen.

03:20:53.040 --> 03:21:02.040
Das Ding sieht ja abenteuerlich aus, äh.

03:21:02.040 --> 03:21:06.040
Ich muss mal gucken, was es für 3,3 Volt Ultrasonic-Sensoren gibt.

03:21:06.040 --> 03:21:09.040
Da gibt es bestimmt welche.

03:21:09.040 --> 03:21:14.040
Und dann nehm ich einfach den und dann wird nicht rumgebastelt.

03:21:14.040 --> 03:21:18.040
So Leute.

03:21:18.040 --> 03:21:22.040
Hallo Markus YouTube.

03:21:22.040 --> 03:21:23.040
Fuck.

03:21:23.040 --> 03:21:26.040
Ja Leute, also ich hab jetzt zwei Probleme.

03:21:26.040 --> 03:21:29.040
Ich hab übelst Hunger und ich muss mal übelst aufs Klo.

03:21:29.040 --> 03:21:35.040
Und außerdem sind wir heute ziemlich weit gekommen, oder?

03:21:35.040 --> 03:21:42.040
Also für meine sonstigen Verhältnisse, wo wir ja immer viel schwätzen und wenig machen,

03:21:42.040 --> 03:21:52.040
eigentlich haben wir heute ziemlich viel gemacht.

03:21:52.040 --> 03:21:53.040
Ja, das könnte ich auch machen.

03:21:53.040 --> 03:22:04.040
Ich könnte mir auch so einen ganz kleinen Spannungs-Dingswandler da holen und

03:22:04.040 --> 03:22:06.040
dann ein paar Widerstände dran löten.

03:22:06.040 --> 03:22:10.040
Könnte ich auch machen.

03:22:10.040 --> 03:22:13.040
Aber an sich fände ich es eigentlich nicht schlecht, wenn ich eine schöne,

03:22:13.040 --> 03:22:18.040
keine Ahnung, wenn ich so ein 10er-Pack Ultraschall-Sensoren finde, die 3,3 Volt unterstützen,

03:22:18.040 --> 03:22:20.040
dann muss ich dann das nächste Mal nicht modden.

03:22:20.040 --> 03:22:23.040
Weil das Problem werde ich ja immer wieder haben.

03:22:23.040 --> 03:22:31.040
Weil alles, was ich irgendwie nicht direkt an USB betreibe, die Dinge haben halt nur 3,3 Volt.

03:22:31.040 --> 03:22:37.040
Weil halt die ESPs intern auch bloß mit 3,3 laufen.

03:22:37.040 --> 03:22:39.040
Ich gucke einfach mal, was es da so gibt.

03:22:39.040 --> 03:22:40.040
So, jetzt testen wir nochmal was.

03:22:40.040 --> 03:22:43.040
Ich hab jetzt den Ultraschall-Sensor an.

03:22:43.040 --> 03:22:46.040
Ich leg den jetzt mal in meine Richtung.

03:22:46.040 --> 03:22:48.040
Wenn der jetzt mal liegen bleibt.

03:22:48.040 --> 03:22:52.040
Jetzt laufe ich mal hier so ein bisschen hin und her.

03:22:52.040 --> 03:22:54.040
Ach so, der misst ja nur alle 5 Sekunden.

03:22:54.040 --> 03:22:55.040
Na ja, gut.

03:22:55.040 --> 03:22:58.040
Aber so prinzipiell sollte man es erkennen, dass wenn ich hier hin und her laufe,

03:22:58.040 --> 03:23:03.040
dass das unterschiedlich, dass da unterschiedliche Sachen bei rauskommen.

03:23:03.040 --> 03:23:10.040
Aber ich glaube, da ist es richtig gut, um zu messen, ob Zeitungen drin sind und Briefe drin sind und sowas.

03:23:10.040 --> 03:23:15.040
Zeitung, also Briefe oder ob es von mir eine neue CT drin ist.

03:23:15.040 --> 03:23:19.040
CT habe ich ja auch schon seit 15 Jahren abonniert.

03:23:19.040 --> 03:23:23.040
Und zumindest die letzten 5 Jahre lese ich die eigentlich gar nicht mehr.

03:23:23.040 --> 03:23:27.040
Aber ich bloß immer noch abonniert.

03:23:27.040 --> 03:23:28.040
Ja.

03:23:28.040 --> 03:23:35.040
Und nachdem ich Hunger habe und mal aufs Klo muss, würde ich sagen, wir waren heute relativ produktiv.

03:23:35.040 --> 03:23:38.040
Wir machen jetzt Schluss an der Stelle.

03:23:38.040 --> 03:23:40.040
Hallo, Quit.

03:23:40.040 --> 03:23:44.040
Ich hoffe, euch hat es gefallen.

03:23:44.040 --> 03:23:45.040
Macht's gut.

03:23:45.040 --> 03:23:46.040
Bis zum nächsten Mal.

03:23:46.040 --> 03:23:47.040
Tschüss.

03:23:47.040 --> 03:24:15.040
Tschüss.

