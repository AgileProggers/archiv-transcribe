Das war's für heute und wir sehen uns beim nächsten Mal wieder, bis dahin, tschüss, tschüss, tschüss, tschüss.
Wir sehen uns beim nächsten Mal wieder, tschüss.
Hey!
So, wir sehen uns beim nächsten Mal wieder, tschüss.
So, wir sehen uns beim nächsten Mal wieder, tschüss.
So, Leute, da bin ich.
Ich bin am Start. Oh, ich muss was zu trinken holen.
Ich muss gleich in der kurzen Minute weg.
Sonst geht das nicht.
So, Leute, jetzt passt's aber.
Also, ich bin heute ein bisschen früher da als sonst, weil heute machen wir wirklich was.
Gestern war ja viel zu spät, da haben wir nichts mehr auf die Reihe gekriegt.
Heute machen wir ein bisschen Rust.
Und ich bin motiviert, was zu machen.
Und wir können sehen, ich bin höchst motiviert.
Ich bin höchst motiviert. Maximale Motivation.
Er muss schon wieder weg.
Proc oder not proc.
Ja, also heute machen wir was.
Und zwar, wir schnappen uns das Tool vom letzten Mal, was wir im Donet programmiert haben.
Und versuchen das in Rust zu programmieren.
Nein, bin ich nicht, weil ich von Game Engines überhaupt keinen Plan habe.
Generell von Spieleentwicklung keinen Plan habe.
Heute kam eine neue Rust-Version raus, wirklich?
Das wird natürlich super, super poggers passen, ja?
Rust slang.
Releases.
Nö. Heute kam keine neue Rust-Version raus.
Wie kommst du da drauf, dass es heute eine neue Rust-Version gab?
Moment. Ach, die haben einfach keine Release-Notes geschrieben, Alter.
Nee, nee. Das ist schon richtig.
Das kam wirklich heute raus. Die haben einfach keine Release-Notes geschrieben.
Wir müssen hier in die Releases gucken, okay.
Ach so, ja gut. Das ist eben in meiner Release gewesen. Ja, das ist jetzt auch nicht so spannend.
Und hier passiert einiges. So, dann gehen wir mal rüber in die VM.
Ich habe das Tool heute auf der Arbeit den Leuten vorgestellt, die Linux-Server verwenden.
Wir sind ja mehrere Teams, die da für die ganzen Kisten zuständig sind.
Und das fanden alle ziemlich pog, dass man einfach nur noch Set-Down-Time machen muss und Monitoring-Silences eingetragen werden.
Also, wir haben auf jeden Fall schon mal Leute, die es benutzen.
Was echt praktisch ist, weil ganz im Ernst, es ist immer dumm, irgendwas zu entwickeln oder irgendwas zu bauen, am Ende benutzt es keiner.
Das macht man selbst vielleicht ab und...
Ich bin verwirrt. Ich muss doch mal rebooten.
Ich habe das Gefühl, da hat die VM nicht richtig gestartet gerade.
Irgendwas stimmt da nicht.
Gottes Abbild hat Prime-Subscribed und aus irgendwelchen Gründen doppelt.
Da bin ich natürlich wunderbar. Ich meine, Gottes Abbild kann auch ruhig doppelt Subscriben. Dankeschön für den Sub.
Was läuft bei dir ein Linux? Das ist Manjaro mit i3-WM.
So, jetzt ist die VM auch richtig gestartet.
Also, Mond-Parsen oder sowas.
Der Mond selbst ist immer die gleiche Seite, die man sieht.
Das ist interessant. OK. Mond-Champ.
Wer hat Subscribed? OK, jetzt ist es FelizSpeak. Das ist auf jeden Fall schon mal Man.
Mai? Aber Null? Mein Man?
Ich bin nicht so ganz sicher, was das FelizSpeak betrifft. Melon? Ach, das ist ein L.
Es könnte auch Mai-on-Man sein.
Aber das ist L. Melon Man. Alles klar. Dankeschön für den Sub.
Umso mehr man das Ganze verliegt, FelizSpeak nicht zwangsläufig immer zu erkennen.
Mal kurz hier zu. Alter, wie viele Tabs habe ich denn hier auf meine? Mal kurz schließen und neu öffnen.
So, zack, Pork. Und einmal Update machen. Man weiß ja nie, neueste Rust-Version drauf.
Bei Rust-Version machen wir eh über Rust ab.
Also, wer denkt, ich habe davon einen Plan, weil ich ja gestern gesagt habe, manchmal habe ich für einen Stream schon Sachen im Vorfeld ausprobiert.
Heute habe ich nichts im Vorfeld ausprobiert. Ich habe keinen großen Wahnsinnsplan von Rust.
Und es ist auch schon eine Weile her, dass ich wirklich ein bisschen was in Rust gemacht habe.
Also, mal gucken. Ich bin gespannt, wie das Ganze läuft.
Sariks, moin. Der Chat ist ja so cute heute wieder.
Cuties United hier.
Das ist witzig, wie gut das Sound... Hast du ein Handy, das du unter Wasser hängen kannst oder wie?
Heute, heute sweeps in.
Die Namers müssen out bleiben.
Ja, mein Rust ist rusty. Lul. So schlecht wahrscheinlich.
Ich habe diesen Witz schon 30 Milliarden Leute gebracht.
Ja, es ist schon eine ganze Weile her. Ich warte jetzt erstmal bis die ganzen Updates durch den Wristle Studio Code Update.
Jetzt ist die Frage, wo haben wir das letzte Mal Rust gemacht für diesen WebAssembly Test?
Haben wir das in Wristle Studio Code gemacht oder haben wir das mit dem C-Line Rust Plugin gemacht?
Ich glaube, wir haben es mit dem C-Line Rust Plugin gemacht.
Also, ich glaube mein iPhone, bin ich mir gar nicht sicher.
Leute, ist mein iPhone Wasserfest? Ich habe ein iPhone 11, ist das Wasserfest?
Ich wüsste es gar nicht.
Ja?
Cap ausprobieren?
Ja, ganz bestimmt.
Na dann?
Dann könnte ich mein iPhone ja mal in die Badewanne schmeißen.
Wer hat es davon abgesehen, dass ich keine Badewanne habe?
Aber ich könnte.
Also sprich, wenn man vergisst, das Handy aus der Badehose zu nehmen, wenn man ins Wasser spritzt.
Ins Wasser springt, nicht ins Wasser spritzt.
Wenn man ins Wasser springt, dann gleich wieder rausklettert, geht wahrscheinlich nichts kaputt.
Pool ist nur 1,50.
Der Schwimmbad bei uns ist schon ein bisschen tiefer.
5 Monate Subscription, Hyper Subscriber.
Ja, selbst schuld.
Ehrlich gesagt, war mir das nicht klar.
Aber warum nicht?
GCC kann auch Go kompilieren, ich weiß nicht, ob das irgendjemand macht.
Naja, LVM ja auch.
Was?
Hast du die neue Sprache von Google gesehen als C++ Nachfolger?
Moment.
Google?
Was?
Carbon?
Warum macht denn Google?
Ach Gott, Google ist ja auch random.
Es wird nie einen Nachfolger für C++ geben in der Form.
Wer will denn ernsthaft auf C++ Geschichten aufbauen, kompatibel richtig zu C++ zu sein,
kannst du eh vergessen.
100% Interop mit C++, das glaube ich erst, wenn ich sehe.
Das einzige, was ich mir vorstellen kann ist, dass die das nach C++ kompilen und dann durch
den C++ Compiler jagen, vielleicht.
Also sowas wie Kotlin, was Java angeht, kompatibel zu C++, das glaube ich nicht.
Es wäre auf jeden Fall nicht schlecht, weil ganz im Ernst, C++ ist einfach die größte
Rottsprache überhaupt.
Wenn es da irgendwas gibt, was kompatibel ist mit C++, dass du dann auch beispielsweise
Unreal und sowas da drin programmieren kannst, dann wäre es nicht schlecht.
Dann ist Qt gleich ein viel besseres Framework, weil Qt, also das da.
Man spricht also übrigens Qt aus, so wie Qt Chat.
Aber das kennen wahrscheinlich die, haben die ein neues Logo?
Das Logo ist neu.
Moment, das ist, na gut.
Was magst du an C++ nicht?
Okay, du bist relativ neu im Chat.
Ich bin mir nicht sicher, ob das Chebat ist oder nicht.
Moment.
Nee, du hast bis hier nur 6 Messages geschrieben, du meinst das tatsächlich, du meinst das
noch ernst.
Weil diese Frage stellen die Leute im Chat auch immer, wenn sie mich Chebaten wollen,
dass ich jetzt eine halbe Stunde darüber rumrente, wie beschissen C++ ist.
Und ich werde das heute sein lassen, weil ansonsten artet das wieder aus.
Sonst kommen wir heute wieder zu nichts.
Extra zweite Count gemacht für die Frage, ja.
Scheint echt so.
Ich kann da heute nichts zu sagen.
Wenn ich davon anfange, machen wir bis 20 Uhr wahrscheinlich nichts Sinnvolles.
Es gibt nicht eine ultimative Antwort.
Es gibt zum Beispiel, pass mal auf.
Okay, Sekunde.
Habe ich das noch von gestern?
Moment, Moment.
Ich zeig dir nur, hier.
Meinst du, es ist eine gute Sprache, wo sowas erlaubt ist?
Oder sowas?
Das fällt mir nur daran, was wir gestern hatten.
Es ist vieles wild in C++, vor allem was gar nicht wild sein müsste.
Beispielsweise auch ganz wild in C++, dass es lange Zeit nicht mal die Möglichkeit gab,
mit Standard String, den in Groß- oder Kleinschreibweise zu konvertieren.
Das gibt es jetzt mittlerweile.
Ja, aber Qt ist wirklich nice.
Und wenn man das mit einer ordentlichen Programmiersprache noch programmieren könnte.
Okay, jetzt seid mal ja karbonlang.
Warum versuchen sie nicht einfach?
Jetzt mal eine ganz dumm, ganz blöde Frage von mir.
Warum versucht Google, den Go, C und C++ interop nicht besser zu machen?
Ich meine, da haben sie schon eine Sprache mit massig Libraries und allem,
und es würde Go unglaublich helfen.
Kennst du Argument-Dependent-Lookup?
Vielleicht, die ganzen C++-Spezialnamen sagen nicht unbedingt was, wenn ich sehe, vielleicht.
Aber C++ hat schon ganz viele wilde Sachen.
Es sieht ein bisschen rustmäßig aus, so ein bisschen, so ein kleines bisschen.
Aber was ist denn das schon wieder für eine ekliche Syntax?
Ach so, ja gut.
Wenn die 100% C++-kompatibel sein wollen,
dann müssten sie ja auch den ganzen Crap unterstützen von C++.
Und dementsprechend brauchst du dann irgendwelche komischen Movable-Sachen
und Template-Sachen und sonst was, die du auch unterstützen musst.
Naja, mal gucken.
Also sonderlich, wie soll ich sagen, sonderlich schick finde ich das jetzt nicht
vom ersten Eindruck her, wie es ausschaut.
Ich meine, okay, es ist deutlich besser lesbar als C++.
Das sieht für mich aus, als haben sie sich doch relativ stark an Rust inspirieren lassen,
weil guck mal, gerade auch so Sachen, also wenn das mit Movable-Sachen und so Bestandteil der Sprache sein sollte.
Rust ist nicht schick, das stimmt.
Optisch hübsch ist Rust wirklich nicht.
Ja.
Ja, mal gucken.
Ich meine, komplette Kompatibilität zu C++ ist natürlich wirklich nice.
Das würde nämlich bedeuten, wenn das, wenn das, wenn das gut gemacht ist,
man könnte damit auch seinen ESP32 programmieren,
wobei ich irgendwie eine doofe Vermutung habe, dass es aus irgendwelchen Gründen wahrscheinlich nicht funktionieren würde.
Weiß ich nicht, kann man damit seinen ESP32 programmieren?
Wahrscheinlich nicht, ja.
Naja, also machen wir mal Rust auf, beziehungsweise machen wir mal C-Line auf mit dem Rust-Plugin.
Erstmal alles aktualisieren.
Update, ja, gib ihm, update.
Ah, das ist, ok, ok, ach ja.
Ah, ok, also das heißt, die übersetzen nicht Carbon in C++ und an C++ nach Target,
sondern die übersetzen direkt in Plattform, Native, Zeug,
verstehen aber so weit C++, dass du C++ Libraries und so verwenden kannst.
Ok, nee, dann wird es wahrscheinlich nicht auf dem ESP32 funktionieren.
Du musstest durch irgendeinen GCC, du musstest quasi Zwischenschritte in C++ rausbekommen,
die du dann durch deinen ESP32 GCC-Fork jagen könntest.
Das würde funktionieren, so wird es wahrscheinlich nicht funktionieren.
Naja, ok.
Warum ich GoLand aktualisiere, hat keinen tiefen Sinn, ich will einfach nur, dass es aktuell ist.
Brauchen tun wir das heute nicht.
Wie viel Platz habe ich denn eigentlich noch genau?
34G.
Warum stehen da nur 33G?
Das ist sich nicht ganz einig.
Also, auf, mach mal hinne.
Können wir uns mal Fancy-Auslastungsprompt angucken?
Aha, aha, alles klar.
Jetzt wissen wir Bescheid, Leute.
So, Next, aktualisiert.
Jetzt habe ich mir auch gerade komplett unsinnig.
Gut, zack, dann kann man den Krempel wieder zumachen, sobald das gestartet ist.
Und dann machen wir mal auf.
Hello, oh nee, das ist noch unser Rust WebAssembly Projekt.
Erste Mal, erste Mal einen neuen Ordner machen. CD, gibt es Sea-Line-Projects oder sowas?
Ne, anscheinend nicht, wo hat denn der das angelegt?
Zack.
Repos, na gut.
Fangen wir mal hier.
Äh, warte mal, wie war das?
Rust, Rust Up, Rust Up?
Oh, Show?
Active Toolchain, Rust Up, Update.
Also, wie gesagt, mein Rust ist eingerostet.
Ich bin mir nicht ganz sicher, ob das alles so stimmt, was ich hier treibe.
Ich muss erst mal auf die neueste Rust-Version aktualisieren.
1662, äh, 1662.1.
Ja, das kam heute raus.
Okay, das passt.
Self-Update ist Disable.
Muss ich das dann hier nochmal updaten?
Habe ich ja schon gemacht.
Okay, und nicht, Moment, Rust Up.
Und wie stellt man da jetzt ein, was hat die hier?
Default, Rust Up, Default, Stable x86, Unknown Linux GNU.
Ist das richtig?
Ne, glaube nicht, oder?
Man muss es, es gab doch, es gab doch, ne, das ist nicht richtig.
Es gibt doch irgendeine extra Toolchain, mit der man Static kompilieren kann.
Rust Up, Static.
Compile, irgendein Musel-Dings.
Musel-C-Lib oder so.
Muss man da installieren.
Rust Up.
Ja.
Rust Up Target.
Okay, das brauchen wir.
Das brauchen wir.
Gut.
Excellent.
Und jetzt, Rust, Rust Up Default.
Und woher weiß ich jetzt, was ich da setzen kann?
Schau.
Hier, Rust Up Default.
So, ha?
Hä?
Äh.
Das muss man machen, weil wenn wir das nicht machen, dann funktioniert das nicht.
Wie ich mir das, wie ich mir das vorstelle.
Target.
Ach hier, das gibt man, das gibt man im Bild an später.
Ach so, ah.
Okay, okay.
Alles klar.
Gut, also, Repos.
Schon mal mit Lua gearbeitet.
Ja.
Aber nicht viel.
Wie gesagt, es ist allein schon Sus für mich, wenn Arrays mit 1 anfangen.
Rust ist Five Head Only.
Das ist, das ist richtig.
So, also, wo haben wir denn unser, das, den Krempel können wir zumachen.
So, wir machen mal Rider auf.
Nicht, weil wir heute.NET machen, sondern weil ich abgucken will, was ich in.NET gemacht habe, um das dann zu übersetzen in Rust.
Beziehungsweise halt zu gucken, was wir eigentlich alles machen müssen.
So.
Also, offen.
Repos.
So, wie ging das jetzt?
Cargo.
New.
Lip.
Nee.
Ah.
MK Dear.
Postchamp.
Rust.
Postchamp.
Rust.
Vielleicht sollten wir unser Rust Plugin noch aktualisieren.
Plugin.
Gucken, wie alt das ist.
Plugin.
Maps.
Rust.
Installed.
Wie macht man Check for Update?
Ach, hier.
Okay, das ist ja auch blöd, dass, dass man hier rüber gehen muss.
Bist du komplett von Wishl Studio weg?
Von dem normalen Wishl Studio bin ich komplett weg, ja.
Wishl Studio Code verwende ich hauptsächlich für Frontendsachen oder für Arduino ESP32.
Rest benutze ich nur noch JetBrains Sachen, wenn's was gibt, weil ich hab mir vor ein paar
Jahren dieses All Desktop Pack gekauft und das muss, das muss Value bringen, wenn ich
schon bezahle.
So Leute, das, das, das Theme muss ich nochmal umstellen.
Install Theme.
Will das Rider.
Ich will das Rider Theme haben.
Leute, mal Frage an euch, die JetBrains Sachen verwenden.
Was ist euer Lieblings Theme?
Was, was, was verwendet ihr gerne?
Standard.
Dracula.
Standard Dunkel.
Ich weiß nicht, ich mag das Standard Dunkel Theme von JetBrains ehrlich gesagt nicht.
Ich mag die Ideen, aber das Standard Theme gefällt mir nicht gut.
Deswegen, kann man nicht hier einfach suchen irgendwie?
Rider.
Ja, nehmen wir nämlich einfach das Rider UI Pack und Gutes.
Apply.
Zack.
So war das nicht gedacht.
Ja, schon besser.
Nicht ReSharper.
Rider Dark.
Ja, das will ich haben.
Oder Rider Melon Dark oder Wishill Assist Dark.
Nee, nee.
Rider Dark will ich haben.
Es sieht auch aus wie Rider, ne?
Ein bisschen heller.
Nee, guck mal.
Ein bisschen heller ist der Hintergrund noch.
Ein bisschen.
Sag mal, können die ihre eigenen Themes nicht richtig machen oder was?
Oder muss ich ReSharper Dark nehmen, dass der Hintergrund, dass der Hintergrund passt?
Ich halt ReSharper Dark.
Sollen wir auch recht sein.
So, dann muss ich noch Font Size einstellen.
Und dann passt das.
Ein Hack.
Hack 18, jawoll.
So.
Ja, reicht.
Alles klar.
Also, dann legen wir mal ein neues Projekt an.
Cargo New.
Ich hoffe, ich mach das richtig.
Console App.
Wie macht man das?
Cargo New?
Cargo New, ups.
Was Reddit?
Was Cat Pudgin Theme?
Was für ein Ding?
Soothing Pastel Theme.
Das ist mir wahrscheinlich zu wenig Kontrast.
Ja.
Es ist ja auch komplett unsinnig, einen Screenshot zu machen, Leute.
Also jetzt mal ernsthaft.
Wer erwartet denn bitteschön bei einem Repo für einen Color Theme einen Screenshot?
Nee, das ist obv- obv- obviusly nicht erforderlich, Screenshots zu machen.
Screenshots bei Themes ist komplett hyperplod.
Ich hab ehrlich gesagt wirklich keine Ahnung, wo ich jetzt hier ein ordentliches Screenshot
sehen würde.
Das ist doch der Witz, kann doch nicht sein.
Rider.
IntelliJ muss ich wahrscheinlich gucken, ne?
JetBrains?
Ah, JetBrains.
Ach, hier gibt's...
Oh, nee.
Nee, das gefällt mir nicht.
Da bleib ich hierbei.
Gutes.
So, aber ich wollt mal gucken.
Cargo New Console App.
Wie funktioniert das?
Ach, einfach nur Cargo New.
Okay, also Cargo New.
Postchamp Rust.
Nee, heck ist nicht die Vorschrift von Visual Studio.
Okay, oh komm, jetzt haben wir Postchamp in Postchamp.
Ja, okay.
So, dann öffnen wir das mal.
Open.
Repos.
Postchamp Rust.
Auf geht's.
Ja, ja, wir trusten, wir trusten.
Ich truste.
Alles gut.
Wir trusten denen komplett.
Source, Main.rs.
Alles klar.
Terminal auf.
Zack.
D-Max auf.
Wir müssen nach Repos, Rust, Champ...
Nee.
Das war sogar dafür.
Das war sogar...
Äh, nee, nicht Rust.
Postchamp.
Postchamp Rust.
So, jetzt wie ging das?
Cargo Run.
Hello World.
Okay, passt.
Guck mal.
Sogar...
Das ist ja geil.
Sogar das Default Programm generiert ein Warning.
Nice.
Targets.
Das haben wir für Git Ignores angelegt.
Targets.
Das finde ich schön, dass das...
Wisst ihr?
Das könnten die echt bei dem.NET Template auch machen.
Ordentliche Git Ignores bei.NET New reinpacken.
Wird die Schriftgröße gut oder soll ich noch eins größer machen?
Also eins größer würde ich noch machen, dass man...
Also auf 20 würde ich es hochstellen.
Dann ist es nämlich exakt so, wie man es in Rider haben.
Ja, dann sieht man es, denke ich, auch ganz gut.
Oder auch auf Handys und sowas sieht man es dann ganz gut.
So, also.
Jetzt wird es kompliziert.
Jetzt müssen wir Rust Zeug machen.
Also wir fangen mal easy an.
Also was wir...
Also das Ziel ist folgendes.
Ich erkläre es noch mal.
Ich habe ein Tool in.NET.
Was das macht ist, wenn du es ausführst...
Die ganz, ganz kurze Variante, ja.
Wenn du es ausführst...
Es gibt ein paar Kommandozeilen Argumente hier.
Und was es macht ist, wenn du das ausführst, geht es zum Monitoring System
und trägt für das System, auf dem du es ausführst, eine Downtime ein.
Das ist dafür gedacht, wenn Admins Wartungsarbeiten machen
und vergessen haben Monitoring, Downtimes oder Maintenances einzutragen,
dass sie es direkt vom Server aus machen können.
Weil ich weiß, wie faul die Leute sind.
Ich kenne das ja von mir.
Wenn man dann erst mal anfängt, hat man keinen Bock,
oftmals noch irgendeine Maintenance zusammenzuklicken
oder beim Support anzurufen oder sonst was zu machen.
Dann rebootet man einfach und hofft,
vielleicht fällt man nicht in den Ping-Tick rein, dass es das feststellt.
Und ich habe das heute auf der Arbeit gezeigt, das Tool.
Ich habe ja die.NET-Variante.
Die Leute fanden es super.
Deswegen ist das, glaube ich, eine gute Sache.
Und ich habe mir jetzt vorgenommen, wir nehmen dieses Tool
und programmieren dieses Tool in...
Nicht heute alles, sage ich gleich dabei.
Also C Sharp, die Implementation gibt es ja schon.
Wir machen das gleiche Tool in Go, in Python, in Rust, in JavaScript.
Und vielleicht in PowerShell, Bash.
In PowerShell und in Bash.
Wobei Bash ekelig wird.
Für sowas, das kann ich euch jetzt schon sagen.
Ich mag Bash als interaktive Shell.
Ich mache auch recht viele Bash-Scripts.
Aber sobald das mehr als ein paar Zeilen sind, ist das immer...
Kannst du überhaupt den Maintenance-Server ansprechen?
Ja, sonst hätte es ja keinen Sinn.
Das funktioniert.
C++ habe ich geskippt, weil den C++ will ich nicht machen.
Der Chat wollte, dass ich den C++ mache.
Aber der Chat ist manchmal, obwohl er 5-head ist, doch nicht so 5-head.
Also ob ich das mache, keine Ahnung.
Nee, in Perl nicht.
Also falls ihr noch in irgendeine andere Sprache einfällt,
in der wir das machen sollen, ja, können wir machen.
Aber in Perl machen wir es bestimmt nicht.
Und in Cobol machen wir es auch bestimmt nicht.
Wie hast du die verschiedenen Theme-Typen angewählt?
Ich habe das Rider-Theme-Plugin installiert.
Guck.
Hier.
Rider-UI-Theme-Pack.
Da kannst du auch in Sea-Lion-Rider-Themes verwenden.
Oder du drückst...
Oder meinst du das Switchen der Themes?
Hier, so.
Du gibst hier einfach Themes ein in deinem Quick-Action-Menü.
Und da kannst du es auswählen.
Du kriegst dann auch immer so...
Du kriegst dann auch so eine Vorschau.
Ja.
Ah.
What the fuck?
Clap.
Clap habe ich schon gefunden.
GitHub.
Clap.
Das werden wir auch jetzt verwenden.
Das werden wir jetzt verwenden.
Max soll das Tool in C++...
Na ja, wenn ihr da so scharf drauf seid.
Aber nicht heute.
Das sage ich euch gleich.
Heute machen wir es nicht.
Heute machen wir nur die Rust-Variante.
Das ist ein Rust-Command-Line-Parser.
Gut, also wir fangen relativ easy an.
Wir gucken mal, dass ich Kommando-Zeilen-Argumente gepasst bekomme in Rust.
Also wie gesagt, das Tool ist von der Idee her nicht sonderlich kompliziert.
Das hier unten ist nur für Jason-Parsen.
Das braucht man gar nicht unbedingt.
Also...
Das ist auch...
Also das Tool ist insgesamt 180 Zeilen.
Und 180 Zeilen C-Sharp...
Könnte ich mir vorstellen, sehen in anderen Programmiersprachen auch nur 140 Zeilen.
Das ist teilweise schon ein bisschen...
Verbose das Ganze.
Heißt das eigentlich Verbose oder Verbis?
Da kann man sich immer...
Da kann man sich...
Weiß nicht, ob man sich...
Wie das...
Was richtig ist.
Na du kannst...
Du kannst Maintenance setzen.
Du kannst sagen, wann die anfängt.
Wie lange.
Wie lange.
Wie lange.
Wie lange.
Wie lange.
Wie lange man die anfängt.
Wie lange.
Ein Grund angeben oder kannst auch aktuelle Maintenances löschen und listen.
Also im Prinzip ist das Programm relativ simpelt.
Es besteht im Prinzip nur aus ein bisschen...
Kommandozeilen-Argumente, Pssen,
3-4 Web-Requests machen
und Konsolenausgabe.
Sonst nichts.
Das ist ein super Programm,
um das mal mit mehreren Sprachen zu vergleichen.
Und deswegen habe ich mir auch überlegt,
überlegt, wir können das in diesen ganzen Programmiersprachen mal implementieren und am Ende
gucken wir mal, was sich für diesen Zweck besser eignet. Ich meine, es gibt zig
hunderte Performance-Vergleiche zwischen den Programmiersprachen.
Am Ende ist es für solche Tools gar nicht so entscheidend, wie performant das ist. Mein Performance ist immer nice, aber für
ein bisschen Kommando-Zeilen-Ausgabe und Argumente-Parsen und 3 Web-Requests machen,
ob das jetzt eine Millisekunde braucht oder zwei Sekunden, wäre fast egal. Muss jetzt mal übertrieben auszudrücken.
Deswegen
mal gucken, in welcher Programmiersprache sowas am einfachsten dann am Ende
programmiertechnisch geht, auch am einfachsten von der Hand
und am Ende auch, wie einfach sich das ganze deployen lässt, beziehungsweise wie groß das Binary ist. Ich glaube, da wird Go,
was Deployment angeht, die Nase vorn haben, weil Go, das ist halt eines der riesen Vorteile von Go.
So, und jetzt machen wir das ganze mal, jetzt machen wir das ganze mal in Rust. Das heißt, das erste, was wir machen müssen, ist Argumente-Parsen.
Zwar müssen wir eine Rust-Anwendung programmieren, die diese Argumente parset. List, kurzschreibweise L,
Clear, kurzschreibweise C, Duration, Start, Reason.
Übrigens, wisst ihr, was heute witzig war? Ach so, noch, das kann ich kurz noch beantworten.
Äh, nein, ich hab das hier verwendet für Commando-Signal-Tools.
Kekona, leider falsch geschrieben.
Das da.
Warum lädt eigentlich GitHub gerade so ultra langsam? Ach, das liegt am Dark-Theme. Ja, das da, das hab ich verwendet.
Nicht System-Command-Line.
Wie ist das herangehen in Rust? Geht man objektorientiert vor? Ich hab keine Ahnung von Rust. Wir werden uns das jetzt alles angucken.
Ich hab keinen Plan. Ich krieg, ich krieg mit Ach und Krach in Rust
Commando-Signal-Shell-Ausgabe hin. Ich hab wirklich keinen Plan.
Ich hab noch nicht viel Vergleich zu System-Command-Line. Es hat mich aber von der GitHub-Seite schon angesprochen.
Also, fangen wir mal an. Commando-Zeilen-Argumente-Parsen in Rust.
Wie gehen wir denn da vor? Also, ich kopier mir mal den C-Sharp-Campel rein, den wir brauchen.
What the fuck? Ich will nicht zum Master-Committen.
Äh, Moment. Shortcuts.
Äh, Keymap.
Ähm.
Also, erstmal Move-Line.
Move-Line.
Äh, wat?
Move-Line.
Down.
Keyboard-Shortcut. Alt-Down. Ja, ja.
Remove. Brauche ich keinen Mensch.
Line-Up. Alt-Up.
Remove. Ähm.
Comment. Wozu hat das? Jetzt dreh ich durch.
Comment-Width-Line-Block.
Ctrl-K-C. Oh, nee. Moment.
Ctrl-K.
Ctrl-C.
Remove.
Remove. Kurz mal gucken, ob das funktioniert.
Hey, Pog. Alles klar. Klappt.
Okay, also, Rust-Commando-Zeilen-Argumente-Parsen.
Der Chat sagt, ich soll die Library-Clap verwenden.
Das mache ich auch.
Das habe ich nämlich tatsächlich vorher schon mal ein bisschen gecheatet und geguckt, was es da so gibt.
Und da ist das tatsächlich am Start.
Okay. Cargo-Add-Clap-F-Derive.
Siehste? Jetzt fängt es schon mal an.
Ich habe keine Ahnung, was minus F-Derive macht.
Cargo-Add. Ach so, das ist ja nicht...
Das ist ja nicht...
Cargo-Add-Minus-Minus-Help.
Feature-Aktivieren. Ah, minus F ist Feature.
Feature-Flag.
Okay, man kann Libraries mit verschiedenen Feature-Flags adden.
Das ist ungewohnt für mich. In.NET macht man das anders.
Man installiert die Library und hat dann irgendeine Config-Methode oder so, die man beim Starten aufruft.
Das ist dann zwar nicht Compile-Time, aber...
Derive.
Was für Dinger?
Okay, Rust ist von der ersten Minute schon Ultra-Five fertig.
Derive-Parser.
What?
Okay, das ist schon High-IQ.
Das startet schon. Das startet schon so, dass ich nicht verstehe.
Aber...
Ich füge das jetzt einfach. Ist wirklich zu feifett.
Ich füge das jetzt einfach mal hinzu.
Also eins muss man sagen, was Rust richtig gut macht, ist, dass sie standardmäßigen Package-Manager dabei haben.
Ich meine, die meisten modernen Programmiersprachen auf standardmäßigen Package-Manager dabei, aber Cargo ist wirklich gut.
Und, ach, hier kann man Feature-Flags und sowas setzen.
Color, Terminal, Color, Requex. What the fuck?
Interessant.
Das heißt, man kann Color, Terminal und sowas machen und Kommando-Zeilen-Argumente parsen. Na gut.
Okay, wie parsen man Kommando-Zeilen-Argumente?
Okay.
Clap-Parser.
Args-Pars.
Benutzt lieber die Bilder-Syntax. Ja, das mache ich.
Das mache ich, wenn du mir sagst, hier Bilder-Tutorial.
Alles klar.
Use-Clap-Arg-Command-Value-Parser-Arg-Action-Command.
Okay, ich copy-paste die mir das mal, weil ich eh keinen Plan habe, was die mir damit sagen wollen.
Alles klar. So. Und jetzt?
Main.
Matcher-Command.
Oh, das ist extremster Fivehead schon wieder, wenn ich die Syntax sehe.
Leute, Rust ist definitiv nicht ausgelegt für so große Schriftart.
Da blickst du nicht durch.
What the fuck?
Was bin ich sehend hier gerade?
Okay, wir machen mal eine Sache. Ich weiß nicht, ob man das...
Leute...
Ist das verpönt in Rust, was anderes als vier Einrückungspaces oder Tabs zu verwenden?
Also ich mag ja zwei Spaces überall.
Reformat.
Ja, kann man vielleicht auch besser lesen.
Okay, das ist schon...
Requires Cargo-Feature.
Haben wir das Cargo-Feature?
Wir haben das Cargo-Feature gar nicht.
Also muss ich noch mal sagen.
Cargo-Clap und wahrscheinlich Komma.
Der zeigt... Nochmal Minus F.
Ha, Fivehead.
Jetzt haben wir auch das Cargo-Feature.
Ja, Chico guckt auch schon komisch.
Okay, also was sehe ich denn hier überhaupt jetzt?
Let Matches, Command-Macro-Arc, Optional Name to Operate...
What the fuck?
We don't have Syntax?
Okay, Sub-Command brauche ich auf jeden Fall schon mal nicht.
Kann man das nicht in eine Zeile schreiben, oder ist das...
Was ist, wenn ich jetzt sage Reformat?
Geht doch.
Moment.
Kann es sein, dass das Format, dass es automatisch formatieren irgendwie ein bisschen suckt?
Ich meine, sollte nicht jeder Zeichen hier wegmachen?
Trier Value Pulser.
Boah, das ist ja richtig high IQ, Alter.
Was passiert denn hier?
Okay, also ich will ja eigentlich nur...
Ich finde es auch mega kompliziert zu lesen, Alter.
Das beblickt doch keiner durch.
Ich probiere das mal, wenn nicht, machen wir das da.
Warum gibt es eigentlich da schon wieder zwei verschiedene Varianten oder drei verschiedene Varianten?
Es gibt einmal das hier...
Oder ist das hier und...
Derive Syntax das Gleiche.
Ich sehe schon, wenn Kommandozeilen Argumente einen überfordern, ist alles klar.
Also, ich probiere es mal auf die Anweis.
Okay, Argument.
Das hier ist wahrscheinlich die Beschreibung und das hier ist, wie es heißen soll.
Also, ich will als Argument haben List.
Nee.
Ich will minus minus List oder minus L haben.
Das ist der Hilfetext.
List all...
So, irgendwie sowas.
So, dann kann man sagen, ob es required ist oder nicht.
Was er uns hier mit Value-Parser sagen will.
Custom-Type.
Nee, sowas habe ich nicht.
Schmeiße ich das mal weg.
Action, Arg-Count-Count.
Okay, was passiert denn jetzt, wenn ich das runne?
Er bildet erstmal.
Sagt wahrscheinlich gleich Syntax-Fehler oder sowas.
War klar.
Unexpected-Talking-L.
Warum ist das Unexpected?
Ach so, Moment.
Muss geklammert werden?
Zum Geher.
Hä?
Moment.
Okay, warte, warte.
Also, Arg.
So, ich will mit L oder L oder Liss-Talk.
File will ich nicht.
Okay, List all for this host.
So, ich will nicht, dass es required ist.
Also, irgendwelche Custom-Sachen parsen will ich auch nicht.
Also, einfach nur so.
Aber jetzt funktioniert.
Was hatte er jetzt?
Unused-Import, ja.
Kann man das irgendwie ignorieren?
Hier, ja.
Warn-Unused-Imports.
Unused-Imports will ich nicht gewarnt werden.
Moment, Leute, vielleicht kriege ich...
War das not-warn?
Nee.
Not-unused?
Das ging doch irgendwie.
Rust-Disable-Warning.
Hab ich doch richtig gemacht.
Allow.
Ach, Moment.
Hä?
Moment, Allow muss ich davor schreiben.
Und dann ein Ausrufezeichen davor.
Warum einmal mit Ausrufezeichen...
Moment.
Hä?
Warum?
Warum Ausrufezeichen und kein Ausrufezeichen?
Warum geht beides?
Allow-Dead-Code will ich auch.
Das will ich, dass ihr mir das Leben schwer macht.
Okay, da braucht man anscheinend kein Ausrufezeichen davor.
Und Unused-Variables will ich auch haben.
So.
Sonst dreh ich am Rad beim Entwickeln.
So.
Should have snake-case-name.
Okay, mein Crate heißt falsch, Leute.
Wo stelle ich denn den Crate-Namen überhaupt ein?
In meiner...
Ah, hier, nee.
Package?
Oder wo nervt er denn hier?
Unused-Imports.
Allow Unused-Imports.
Snake-case.
Okay, jetzt hat er anscheinend wirklich nur...
Hä?
Warum warned er mich immer noch bei Unused-Imports jetzt?
Muss man das doch mit Ausrufezeichen machen?
Ach so, das hier ist global?
Und das bezieht sich auf die Zeile, auf nur eine Zeile unten drunter, oder wie?
Five-Header, Alter.
Five-Head-Time.
Rust-Champ.
Okay.
Also, Porsche should have snake-case-name.
Gut, also gehe ich jetzt hier rein und sage Package-Name ist nicht
Post-Champ-Rust, sondern...
sondern Post-Champ-Rust, oder?
Ach, mit, mit, mit Dings.
Post-Champ-Rust, so, oder wie?
Okay, einfach nur Post-Champ nennen, so, okay.
Okay, gut.
Also, wir haben kompiliert ohne Warnings und ohne Fehler.
Ich meine, okay, wir haben die Hälfte abgeschaltet, aber ganz ehrlich,
ähm, das sind so nervige Dinger.
Ha, echt?
Stand das, wo das steht?
Nee.
Stand nur, dass es, dass es nicht...
Ach so, da steht hinten, wie es heißen soll, ja.
Gut, also, wenn ich jetzt Help mache, checkt der das dann?
Minus, minus Help?
List.
Ja, es checkt er.
Okay, okay, minus L.
Okay, okay, also, Debug?
Warum habe ich Standard-Mission minus, minus Debug?
Richtige Pros würden das, äh, das finde ich gut.
Und, und dann, und dann Description, Description, ähm,
Written in Rust for five only, only for Fivehead.
Es ist ganz wichtig, dass man immer, wenn man was in Rust schreibt,
dabei schreibt Written in Rust.
Das, das, das, das fühlt sich dann wichtiger an.
Ach so, das Debug habe ich definiert, tatsächlich.
Arc-Action-Count, was?
Specify the behavior and parsing and argument.
Arc-Action.
Hä?
Placingly fast, fantastic, äh, ne, Placingly fast, Rust, Rustation,
Postchamp-Tool Written in Rust wäre schon dann richtig.
Was Zeile sieben und zehn sind, oh, du hast recht.
Also, ich, ich weiß nicht, was das macht, wenn ich ehrlich bin.
Aber ich will dieses Debug eh nicht haben, okay.
Also, das bedeutet, hier würde ich jetzt meine Argumente auflisten.
Also, ich will haben a list, a clear, clear.
So, wir sparen uns mal den Hilfetext, wow.
Wir sparen uns den Hilfetext, also ich will clear haben.
Ich will Duration haben.
Duration, das wird glaube ich schon kompliziert genug,
weil ich will ja hier parsen, ob es eine Duration ist,
beziehungsweise ob es so eine Art Time-Span ist,
falls es so was in Rust gibt.
Duration, Start und Reason.
Ich spar mir jetzt mal Hilfetexte, weil es ist so obviously
natürlich alles selbst erklären, wer braucht DoCo
und wenn man einen perfekten, fehlerfreien Rust-Code schreibt,
braucht man selbstverständlich auch keine Hilfe.
So, okay, das funktioniert.
Alles bloated.
So, und jetzt ist natürlich die Frage,
wenn ich jetzt Duration angebe, ja, also sagen wir mal,
ich gebe jetzt an, minus minus Duration.
So, in.NET würde ich jetzt sowas angeben, zum Beispiel 15 Minuten.
So, und dann sagt er Found Argument wasn't expected
or isn't valid in this context, alles klar.
Ja, ich sage mir überhaupt nicht, welche Typen das sind.
Ich sage ja auch nicht, was es für Typen sind, die ich da habe.
So, wie mache ich das denn?
Ich finde es immer verwirrend, wenn es zwei grundsätzlich
unterschiedliche Sachen in der Library gibt.
Okay, hier kann man, also die andere Variante wäre
DeriveParserDebug, da habe ich keine Ahnung, was das einem jetzt sagt.
Okay, wir gucken uns aber erstmal an, wie das hiermit funktioniert.
Also, args, ach, das ist nur, was der ausgibt, quasi auf der Kommandozeile
bei Help, das hat nicht wirklich was damit zu tun,
was der wirklich haben will.
Oder müsste ich dahinter schreiben?
Ah, nee, es könnte ja auch sein, dass ich dahinter schreiben muss
Duration und dann quasi Time oder so.
Ja, irgendwie so, dann Help.
Duration, Duration, so, und jetzt, aber selbst wenn ich jetzt
minus D angebe, sollte das jetzt ja noch nicht,
noch nicht funktionieren.
Ich muss den, hä, Moment, jetzt geht das, aber woher weiß der denn
überhaupt jetzt was er, wohin er das speichern soll.
Das ist wirklich high IQ hier.
Matches get one string, ach, und das kann man dann danach auslesen.
Auch ein Value-Parser.
Ah, da kann ich dann angeben, was es quasi ist.
Da kann ich angeben, was es für ein Typ ist.
Ach, jetzt, okay, jetzt habe ich glaube ich verstehen.
Da gebe ich dann an, was es für ein Typ ist,
dass der mir schon checken kann, ob das, ob das sinnvoll ist.
Okay, wir tun einfach mal so als wäre es ein String,
dann, dann muss ich nicht so viel machen, so.
Value-Parser.
So, es ist nicht Pars-Buff, sondern ist einfach nur
Value-Parsers.
Oh, jetzt ist, jetzt kommt, jetzt kommt Rust.
Rust-Strings, Sekunde, Pfeiffer-Time.
String, String, String und Str.
Okay, das funktioniert, alles klar.
Äh, und was ist Str?
Geht nicht, okay.
Und Str, Str-Slice-Dings, geht natürlich auch nicht.
Okay, da bin ich zu low IQ für.
Da müsste ich mir mal ein Tutorial angucken,
was eigentlich genau der Unterschied ist.
Moin, Menschen, das ist Rust.
Das ist Rust.
Okay, und wie greife ich da jetzt drauf zu?
Da steht ja auch ein Beispiel.
Da muss ich dann sowas hier machen, Name zum Beispiel.
Okay, also, if some, Name.
Wo kommt der Name überhaupt her?
Ach nee, das ist Variable Assignment.
Das ist, ach, das ist diese, ja, das ist, das guckt ja,
dass da überhaupt ein Wert drinne steht, ja.
So, Matches, Get, Won, Moment.
Jetzt muss ich gar nicht angeben, dass es ein String ist.
Standardmäßig geht da wahrscheinlich davon aus,
dass es einer ist.
Duration würde ich jetzt angeben, wahrscheinlich.
Okay, nein.
Oh, jetzt habe ich es kaputt gemacht, hier, Moment.
Hier, Klammer fehlt.
Get, Value Name, hier, Value for Cackle.
Value for Cackle ist 0015.
Alles klar.
Okay, ja, Derive werden wir dann mal gleich aus, nicht Drive.
Derive werden wir dann auch gleich mal ausprobieren.
Und jetzt machen wir Value Paser mit Datum, genau.
Das wollte ich nämlich auch ausprobieren,
ob die sowas in Rust eingebaut haben.
Also jetzt würden wir nämlich an der Stelle sagen, Value.
Nee, Moment.
Value Paser.
Oh Gott, jetzt muss ich mir...
Wie war das Beispiel dafür nochmal?
Value Paser.
Okay.
Value Paser.
Äh, wat?
So viele Klammern.
Value Paser.
Warum ich hier einen Makro in einem Makro brauche?
Der generiert mir einen Value Paser aus dem Typ dann,
für den Typ oder was.
Okay, also Rust Date Time.
Chrono Date Time.
Ist das Standard Lip?
Oder ist das eine Github Live?
Woher kenne ich jetzt, ob das Standard Lip ist oder nicht?
Use.
Chrono, nee, nee.
Use.
Isn't great, okay.
Time.
Use Standard Time.
Okay, schauen wir mal nicht schlecht.
Ich habe keine Ahnung, wie die Time Library funktioniert von Rust.
Das ist nicht Ryder, das ist Sea Lion.
Guter Ratschlag, Tommy Kekkel.
Ja, ich habe es absichtlich das Farbsteam von Ryder genommen und jetzt Time.
Und dann geht das nicht, weil
Expected Time Found Module.
Ah, Moment.
Time.
Okay, ich habe keine Ahnung, wie es funktioniert.
Das ist das Module, das ist, okay, Time.
Duration.
System Time, instant.
Instant.
What?
What?
Das ist ja noch schlimmer als C++ und, und, und, und.
Okay, Sixhead Time.
Keine Ahnung.
Phantom Data Marker.
Doesn't satisfy.
Alles klar.
Jetzt, obviously, jetzt weiß ich Bescheid.
Okay, Duration.
Gucken wir mal, ob man das so frisst.
Nee.
Okay, das, das, das geht so nicht.
Keine Ahnung.
Wie funktioniert die Time Library von Rust überhaupt?
Okay.
Hat Chattern Rust mittlerweile sowas wie String Templates oder sowas?
Alles eats und logisch, sowas?
Geht das, geht das mittlerweile in Rust?
Nee, anscheinend nicht.
Format.
Nee.
Ich will da direkt den String schreiben und nicht die Argumente dahinter.
Rust, String, Enter.
Ja, sowas suche ich, genau.
Oder auch nicht, fast.
Ach, Moment, geht doch.
Klammer fehlt nach Duration, okay.
Ach ja, okay, das ist gut, dass das funktioniert.
Was?
Moment.
War?
Ah, nee, let, let, let, kackel, gleich, eins?
Nee.
Ah, das geht.
Okay, Variablen geht einsetzen, aber irgendwelche beliebigen Ausdrücke einsetzen geht nicht.
Okay, gut zu wissen.
Wie funktioniert Standard Time Library?
Time instant.
Now?
Okay, okay, gut, gut, gut, alles klar.
Okay, prindeln.
Now.
Nee.
Was?
So?
Hm.
Okay, das kann man schon mal nicht ausprobieren.
Okay, das kann man schon mal nicht ausgeben.
What the fuck?
FMT?
Alter, ich hab keinen Plastischimmer, was hier geht.
Wenn du das machen möchtest, kannst du auch Debug, was?
Debug?
Time?
So?
Warum gibt es denn da mehrere Sachen?
Achja.
Ach, das dumpt dann quasi so den ganzen Struct, oder wie?
Instant TV?
Das kann aber schon viel Zeug.
Okay.
Okay.
Also ich will jetzt hier irgendwie Date-Time parsen drinnen.
Times.
Ah nee, Times.
Masuchen hier.
Time.
Date?
Rust?
Ich weiß nicht nach was ich suchen soll.
I want to accept standard time duration on commandline, jawoll, 5 heads, stack overflow,
6 headers erklärt mir was ich machen muss.
Boah ich finde das mega schwierig um solche Rust Sachen mein head around zu rappen.
Das ist wohl nicht eingebaut, das ist wohl nicht eingebaut wenn ich das schon mal richtig
sehe.
Der Chat kann nicht, ich merke es, ich merke es, das ist wohl nicht eingebaut dass man
Duration passt.
Also ich hätte jetzt ja gedacht man kann wirklich sowas hier machen.
Ja auf geh weg.
Ja ich hätte wirklich gedacht, mein Gott was haben wir alles getippt.
Ich hätte gedacht man kann sowas hier machen, Duration, so und dann BAM, aber das geht ja
nicht.
Time Duration, ja dann habe ich keinen Plan wie ich das an der Stelle richtig mache.
Ich meine das ist nicht schlimm, ich kann es von Hand parsen aber schön ist das nicht.
Ok wie würde ich das denn jetzt überhaupt von Hand parsen.
Also ich habe einen String der 0015 enthält oder sagen wir mal 15 Sekunden oder sowas.
Wie würde ich denn daraus eine Standard Time oder Time Duration machen?
Also Let Time wie in das Doppelpunkt so, nee Let Mut muss man da glaube ich doch machen,
das war Rust.
Äh New, nein, boah Shit, ich habe so keinen Plan davon, Time Duration Rust Example.
Duration, ach Duration New, aha Duration New und das sind jetzt 5 Sekunden und so kann
man mehrere Sachen importen, Instant, Duration, Tommy danke für den Sub, so Duration New
5 Sekunden und was geht das jetzt, Debug 5 Sekunden, Found Struct Duration, nice, alles
klar, Print 5 Sekunden, das geht wahrscheinlich auch nicht weil es kein Display implementiert,
ok, was muss ich machen, Punkt, ok 5 Sekunden, ok nice, ok das ist wirklich high IQ Printing
hier, das sind 5 Sekunden und warum gibt der 5S aus, jetzt mal ganz durch, wenn er doch
Format nicht implementiert hat, woher weiß der denn dann, dass er 5 seconds ausgeben
muss oder 5S, was macht denn überhaupt Doppelpunkt Fragezeichen, ok gibt es sowas wie Duration
Pass, Pass, nö, From, nee, Try From Sex, From, nee, Rust Duration Pass, ich sehe schon,
das ist ziemlich fife hätte ich das zu machen, ok also hier, Moment das ist ein Crate, das
ist ein Standardlip, Monkers, Alter Monkers, ich will doch kein Crate verwenden um ne Duration
zu passen man, ich mein ich könnte das selbst machen, ich könnte das Splitten irgendwie,
Rust, Rust, Rustation Way to Pass Daytime, what, jetzt ernsthaft, was ist das für ne
Wall of Text, ok Chrono ist wahrscheinlich die Library schlechthin, so vermute ich mal
weil das sehe ich total oft, ok, hat 2k Sterne das verwenden wir jetzt, ok also jetzt machen
wir Crate, Cargo, Cargo, Add, nee was war das, Cargo, Add, ok Cargo, Add, Chrono und
das hat auch verschiedene Clock, Lip C, Old Time, Standard Time, das hat er wahrscheinlich
jetzt hier reingeschrieben oder, Chrono, ja, also sprich, ok dann lass ich, dann lassen
wir das mal weg, dann sagen wir, was haben wir jetzt auch noch, Duration, wir importieren
einfach alles, easy und das lassen wir weg, dann probieren wir das mal mit dem Value Parser
nochmal aus, ob das dann funktioniert, Value Parser, Duration, wahrscheinlich funktioniert
immer noch nicht funktionieren, ups, Run, nee, also das mit dem Value Parser funktioniert
schon mal überhaupt nicht, ich sehe schon wir kriegen manchmal einfaches Argument gepasst
in Rust heute Abend, ok also das mit dem Value Parser ist kein Ding, was der mag, das interessiert
den schon mal nicht, ja, ja wir können nochmal, Clap, Pass, Chrono, Duration, Passing mit
Chrono, ja Chat immer her damit, Copy Link Address, suchen wir einfach mal danach, Duration,
Issues, ok, keine Ahnung, ok, Passing String into Date Time Struck, ja genau, sowas will
ich machen, Main, Date Time Pass, naja Date Time, ich habe eher so eine Art, ich habe
hier eine Duration, die API für mein Archive ist down, was, wirklich, Archive, oh, da macht
der Serious Max gerade Updates, wie es aussieht, Downchamp, siehste, Postchamp Set Downtime
nicht ausgeführt vorher, ok, also dann haben wir hier eine String, Duration, so wir wollen
das Parsen, also sagen wir jetzt Duration, Pass, all das hat auch kein, wie kriege ich
denn das da jetzt rein, From, ne, Try From Value, Into, was, Native Time, ich habe aber
eine Duration, ich habe 15 Sekunden oder sowas, Native Time, Pass, ne, Moment, das ist aber
nicht das was ich haben will, Rust, Chrono, Pass, Duration, jawoll, warum brauche ich
da einen extra Krate für, kann doch nicht sein, ne, ja ich mein, ich kann den, Moment,
was ist das, Five Head, Five Head Time, ok, Five Head Time, es ist kein Date Time, es
ist eine Duration von 15 Sekunden, Native Date, From, From was, ach hier Months Date, ok nur
dass ich das jetzt richtig, richtig, richtig checke, die legen hier ein Fake Date an und
dann ziehen sie die voneinander ab, sodass ich eine Duration raus bekomme, ok, das ist
eher C++ Workaround Shit, den ich hier sehe, also was die machen ist quasi, ja Moment,
bringt mir doch gar nichts, das bringt mir doch gar nichts so, mein Gott ich will doch
einfach nur eine Duration haben ohne dass ich selbst passen muss, ok machen wir was anderes,
From HMS, From, da setzt er aber wahrscheinlich das heutige Datum davor dann, naja gut probieren
wir es mal aus, From HMS, ja da muss ich aber selbst splitten alles, das will ich ja gar
nicht, ich will dass er den String passen kann, aber das geht anscheinend nicht, boah
das bereitet mir Kopfschmerzen, das bereitet mir Kopfschmerzen, warum, ich mein ich müsste
jetzt wirklich sowas machen wie, nur mal vorwärts, Split, Split am Doppelpunkt und dann könnte
ich das, aber das ist doch, ok Leute, wir machen die Suntags einfach anders, das ist
nicht Duration, also diese Suntags ist ja eh nur weil standardmäßig dort net das so gepasst
hat, Native Time Pass Forms 3, ah guck mal da, Native Time Pass Forms 3, Duration und
dann das Format hinten dran und mein Format, naja gut mein Format ist ja nicht zwangsläufig
so, ja mein Format, was, ach naiv Time nicht Native, hab ich verlesen, ja ok also mal gucken
ob das jetzt funzt, Moment das muss weg, das hat ja noch nie funktioniert hier oben, aber
ist schon ziemlich doof dass der Terminal Passing Library keine Duration passen kann
standardmäßig, man weiß nicht, ok ok 15 Minuten, alles klar, das Funktion, das Dumme
ist jetzt halt, sowas funktioniert nicht mehr, es muss dann halt exakt, oder kann man Optional
passen, geht das, kann ich, kann ich irgendwie Optional, Optional oder irgendwas sagen, Trust,
Optional, From, Passes a String, See, ne anscheinend nicht, ne du musst, du musst, du musst wirklich
exakt angeben, also irgendwelche Optional Sachen gehen wahrscheinlich nicht, keine Ahnung,
das ist, das ist wirklich schon hardcore umständlich alles, so also jetzt haben wir zumindest schon
mal ein Argument gepasst, da muss man, muss man das halt so angeben, meinetwegen, naja,
das H kann ich weglassen, aber es gibt halt die Möglichkeit, entweder gibt es einer so
ein, oder, oder es gibt einer, keine Ahnung, was weiß ich, lässt, lässt die Sekunden weg
oder so, oder schreibt nur 15 hin, naja gut, ich mein besser als nix, besser ist, ist ok,
ist ok so, passt, also Duration haben wir jetzt am Start, ok, Let, Duration, so das gibt es
zwar jetzt doppelt und dreifach, mein Duration haben wir ja schon, wie kriege ich denn das
jetzt in der Variable zugewiesen überhaupt, also ich will, ich will ja im Endeffekt sowas
machen, Let, Duration gleich, so, aber Duration gibt es ja an der Stelle gar nicht, also beziehungsweise
das, ich mein, das werde ich wahrscheinlich so da nicht reinschreiben können, oder, ne,
Unwrap, ok, das geht wahrscheinlich so, mein hübsch, hübsch ist was anderes, ja, aber
ok, dann, was, was macht denn E-Printeln, ok, das ist nervig, wenn man das immer so
schreiben muss, Duration, sollen wir mal gucken, ob das jetzt funktioniert, was ich da gemacht
hab, ok, das würde funktionieren, alles klar, so, dann machen wir mal die Logik, dann machen
wir mal die Logik von meinem.NET Programm, so der Reihe nach, also Duration und danach
guck ich mir diese komische Derive-Syntax an, wenn das einfacher ist, ja, müssen wir
mal anschauen, also, Duration, so, ich will jetzt gucken, ist Duration gesetzt, also,
will ich tatsächlich dieses If hier machen, wenn ich das richtig sehe, If, Gott, ne, das
ist optional, aber wenn ich das hier natürlich reinschreibe, ohne dass da was drinsteht,
klar, dann wird's wahrscheinlich abkacken, ja, Moment, was, Moment, das soll optional
sein, nicht required, required, false, konnte man hier reinschreibe, ah ja, ok, ok, na gut,
jetzt panicked ja und unwrapped, das ist, das ist ja relativ klar, also, ich will jetzt
quasi Duration setzen, wie mach ich das denn jetzt gescheit, ich mein, ich zeig's euch
mal, wie ich's in.NET hab, ja, in.NET hab ich, Duration ist ein optional beziehungsweise
annullable time span und wenn das nicht gesetzt wurde, will ich ein defaultwert setzen, also,
ich will jetzt ein defaultwert setzen, also, if some duration, aber dann bräuchte ich
quasi, irgendwie sowas hier oder so, Moment, wenn legt, gibt es Duration hier unten drunter
wieder, ne, ne, Duration gibt es nur in dem If, so, und wenn ich, und wenn ich das mache
und es ist nicht gesetzt, dann kackt er, kackt er dann auch ab, ne, was jetzt, Moment, Moment,
ich kann jetzt noch sagen, Duration, oder mein ich, keine Ahnung, wie ich sagen, Duration
String oder so, gut, das funktioniert und das ist jetzt ein optional type, so, es gibt
doch jetzt irgendwie diese Rust-Magic, dass man jetzt irgendwie sagen kann, Match, boah,
fuck, wie ging das nochmal, also, dass man quasi jetzt sagen kann, der Returnwert von
dem Cremple, den ich da jetzt mache, kommt nach Duration rein, ober er bringt mir das,
ja doch, Rust-Led, ja doch, doch, das weiß ich, das muss ich mir noch angucken, Match,
boah, wie ging das denn nochmal, hier, das meine ich, Let Binary Match, ne, das meine
ich nicht, oder meine ich das, Let Duration Match, oah, Alter, das ist richtig high IQ
Shit, hier ist so, das da, so, ja ne, und jetzt, warum schlägt der, warum schlägt der
mir jetzt hier naiv Time vor, das hat doch damit überhaupt nichts zu tun, das Autocomplete
ist auch nicht so pfeifädig, Sam, Sam was, oder einfach nur Sam, ah, Sam, und dann, und
dann, ok, ok, ok, ich glaube so ungefähr, ok, also, wenn da was drinne steht, dann will
ich es parsen, also, naiv Time, also das da, warte mal, ah, Monka, ne, aber wo kriege
ich jetzt den Parameter her, wo kriege ich denn her, was ich hier an der Stelle reinstecken
will, kann ich Duration da und da verwenden, oder dass er meckert, ok, so, ok, naiv Time,
und, ich will, ich will doch eigentlich gar keine, ich will ja keine Zeit, ich will eine
Duration haben, kann man da irgendwie Duration draus machen, oder so, ok, wie kriege ich
denn jetzt, ach du Scheiße, ok, wir probieren das mal, wir probieren das mal anders aus,
so, now, gibt es doch bestimmt auch, nein, gibt es natürlich nicht, wäre ja auch zu
einfach, was ist es denn, Current, ne, was ist es, ok, from, meinetwegen, from Stunden,
Minuten, Sekunden, eh, from null, 15 Minuten, null Sekunden, ok, so, das ist mein Default,
so, kann ich da jetzt einen Block machen, geht das, ja, das funktioniert, das ist glaube
ich das gleiche, also ich glaube so und, und die Klammern weglassen ist das gleiche, weil
der returnt doch die letzte Zeile, ne, sowas wie return gibt es doch glaube ich nicht,
oder, ne, ich glaube, ich glaube man muss es in der letzten, in der letzten Zeile stehen
lassen, dass es funktioniert, warte mal, gucken wir mal, ob das noch kompiliert, natürlich
nicht, was, expected enum, ach so, ach so, Moment, weil er das parsen, das parsen fehl
schlagen kann, jetzt funktioniert es, ok, gut, mal eine Noobfrage, sollte man da Iso
oder Anzi Layout benutzen, was, das ist vollkommen egal, benutzt das Tastatur Layout, wo du am
meisten dran gewöhnt bist, eisfreak, dankeschön für den Sub und danke auch für die ganzen
Subscriptions, die ich jetzt, weil ich mich hier drauf konzentriert habe, nicht gesehen
habe, Moment, ich guck mal kurz rein, benutzt das Tastatur Layout, also das halte ich für
unsinnige Optimierung, du bist ja eh nicht zu 90% am tippen, sondern zu 90% am googeln
und nachdenken, Tommy, danke für den Sub, Kanetos, wobei, nee, passt euch, hatte ich
ja alle schon, alles gut, ich hab nix übersehen, so, also jetzt ist das zumindest schon mal
halbwegs sinnvoll, was hier rauskommt, das spricht, das muss ich mir unbedingt als Makro
machen, für was steht dann dieses Doppelpunkt, Doppelpunkt Fragezeichen da überhaupt, so,
also das funzt, jetzt kann ich ihm sagen, the run, 15, 15 Minuten, ok, das heißt, wenn
ich nichts angebe, sind's 15 Minuten, wenn ich eine Duration angebe, 00, 00, 30, 00,
dann sind's 30 Minuten, das passt, Format String, das wäre dann quasi, wie wenn ich
hier FMT mache, oder wie, also wäre quasi, das hier, das gleiche, nee, Kackel, nee,
dann hab ich keine Ahnung, was der Unterschied ist, Moment, ich könnte, ich könnte sowas
hier machen auch, oder wie, ok, Rust ist schon ziemlich high IQ, das muss man wirklich mal,
muss man wirklich sagen, ok, ich hab's, ich hab's jetzt, nach einer Stunde geschafft
tatsächlich, eine, ein Date Time zu parsen, nicht schlecht, oder, ziemlich pock, also,
so, das Problem ist ja, ich will ja eigentlich gar keine, ich will ja eine Duration haben,
und keine Date Time, also das bedeutet, ich muss, ok, Duration ist einfach, das krieg
ich hin, Duration from Stunde, Stunde links, ok, das passt, jetzt passt natürlich unten,
hier oben drüber, das passt, Form String, nicht mehr, könnte ich da jetzt sowas machen,
be, let, time, Duration, new, oder from, wie ist das, from HMS, Moment, from HMS gibt's
da für Duration gar nicht, from, hä, new, äh, statt, ach, Moment, ich hab da das Simikolon
vergessen, deswegen mag der glaube ich nicht, oh, meine Güte, Alter, ist das komplizierend,
Bono, Duration, ich will, also eigentlich hab ich jetzt sowas vorgehabt, guck mal,
minute, ja, time, second, sowas hatte ich jetzt eigentlich vor, was aber wahrscheinlich
nicht funktionieren wird, nein, natürlich nicht, weil, not found, kann man new machen,
äh, Alter, wie lege ich denn so eine fucking Duration an, man so kompliziert kann das
doch nicht sein, Duration, was gibt's denn da, days, from, Duration von einer anderen
Duration, ja super, das bringt's mir jetzt auch richtig, Vector, from, jetzt mal ernsthaft,
man muss doch irgendwie eine Duration anlegen können, ja, das ist besser als C++, das ist,
das hat gewisse Konsistenz im Vergleich zu C++, das mach ich doch hier, aber es gibt
keine new Methode dafür, dass ich das überhaupt machen kann, wie sind wir bei C++ gelandet
auf einmal, piss dich, Aldo, Rust, Rust, Chrono, Chrono, Chrono, Rust, Duration, ok, also
ich hab wirklich keine Ahnung, wie legt man das denn, ja genau, wie legt man das denn an,
ach Moment, days, also muss ich jetzt quasi sowas hier machen, hours und dann, what the
fuck, also ok, ok, muss ich jetzt wirklich sowas da machen, net, Duration, gleich, nee,
Moment das funktioniert doch gar nicht, pack, alter wie kompliziert möchtest du eine Zeitlibrary
machen man, hours, time, hours, alter man, wo ist denn dein Problem, ok, seh ich das
richtig, time von naivtime, Moment, die Stunden von naivtime sind ein anderer Datentyp als
die hours von duration, ja gut, ist ja logisch, ist ja logisch, die hours von daytime können
ja maximal 24 sein im Endeffekt und von duration kann ja beliebig viel sein, was war ich denn
da, se64, se64, ach tatsächlich, ok, so und jetzt kann ich sagen, duration, minutes, falls
ich das darf, so an der Stelle, ach Moment, seconds geht auch, jetzt mal ernsthaft, warum
hat das Ding nicht einen ordentlichen new oder constructor, dass ich das angeben kann, das
ist nicht ziemlich cringe, so duration pass gab es ja auch nicht, hast du schon mal was
jeet benutzt, nee, was, alter das kann doch nicht euer ernst sein oder, ich mein man muss
doch eine duration von 15 minuten da irgendwie sinnvoll anlegen können, ohne sich irgendwie
ein bein auszureißen bei, nee also das ist wirklich nicht so, guckt mal, die standard
library rust hat new, warum hat jetzt das chrono ding rust kein new, muss ich dafür
irgendeinen feature aktivieren, ok, cargo add, clock lib, ich steh komplett auf dem schlauch,
ich kann auch einfach hier nur dings verwenden und dann use standard time duration oder so,
da sag ich jetzt nix zu chat, keckel, wobei jetzt geht es lustigerweise, weil jetzt verwende
ich ja die standard time duration, also jetzt kann ich nämlich sagen, duration new, tatsächlich
jetzt funktioniert das nämlich, jetzt kann ich sagen, time, hour, was nanos, nee, alter
gibt es da nicht mehr, warum krieg ich da keinen sinnvollen vorschlag, es gibt doch
mehr als ein new, nanos, was, moment, es geht nur mit sekunden, also wie abfacken willst
du eigentlich deine library benutzer, was ist denn das, das kann doch nicht sein, warum
kann ich bei einer duration nicht einfach sagen, 15 minuten, ich will doch nicht selber 15
minuten ausrechnen müssen, in sekunden, was ist das, wer hat sich das ausgedacht, was
ist das, so, wir probieren das jetzt nochmal anders, also, wir machen das jetzt so, duration,
ich meine ich kann den kram selbst ausrechnen, seconds oder from, nee wie war das, from,
nee, seconds, ja, das gibt es ja nicht from seconds in der chrono duration, warum auch
immer es da nicht gibt, aber es in der standard duration anscheinend doch, kein plan, so ich
meine wir können das hier mit seconds machen, das funktioniert ja, also wir können quasi
sagen time, minutes, mal 60, so, dann haben wir es in sekunden, für die minuten, aber
das ist doch abfack, alter, das kannst du doch keinem erzählen, kann ich es nicht vielleicht
doch so machen, dass ich sage, ok, dass ich sage hours, hours, was ist e64, so, duration,
nee, ich muss das selbst ausrechnen, ich muss das wirklich, ich muss das wirklich selbst
ausrechnen, sehe ich das richtig, also ich muss wirklich sagen, hours, nee, ja, also
ich muss jetzt wirklich, gibt es nicht so was wie duration, ok, das kann man mal ausprobieren,
hours, duration, and, ok, das geht, rhs, alles klar, rhs, obvious, was rhs bedeutet,
das weiß doch jeder, logisch, rhs, obvious, was da rein muss, oder, and, ein chrono, warte,
ich finde den scheiß auch nicht mehr, chrono, duration, add, wo stehts denn hier, da, oder,
duration, hier, so, add, add, nee, hier, add, check, check, hä, da steht von add überhaupt
nix, add two durations, nein, ich will Sekunden adden, also ich verstehe es nicht, wie das
so kompliziert gemacht werden kann, das ist mir wirklich unbekannt, also entweder verstehe
ich was Kunst, was hier durchaus sein kann, nicht, oder es ist wirklich richtig dämlich
gemacht, mein, warum, ich mein, was ich jetzt machen muss ist, ich muss sagen, hours, mal
60, mal 60, so, plus, plus, time, minutes, mal 60, plus, time, seconds, das kann doch
nicht euer ernst sein, ok, was intu soll ich machen, intu, what, klammern, intu, gibt
es gar nicht, äh, moment, new, minutes, minutes, 15, es gibt kein duration from 6,
chat, mensch, erzähl mir doch nicht alles, was ich schon seit 50 Minuten ausprobiere,
es gibt das nicht in dieser library, du kannst dort nichts anlegen, das existiert nicht,
das ist nicht das standard library duration, weil das standard library duration zwar funktioniert,
aber standard library daytime sucked, mensch, also, immer der gleiche scheiß, alter, also
ich hab echt keinen Bock mehr, das ist mega kompliziert, das kann doch nicht sein, jetzt
mal ernsthaft, ich will, ich will ihm sagen, leg ein duration objekt an mit 15 Minuten
und was weiß ich wie viele Sekunden, es kann doch nicht sein, dass das so abfuck kompliziert
ist, oder, also das wäre in go deutlich einfacher, nicht dass ich der große go fan bin, aber
ich mein ich kann den kram noch mal klammern oder so, falls das, falls das irgendwas bringt,
es ist auch schon mal geil, dass er mir überhaupt keine Fehlermeldung anzeigt hier in der ide,
aber es geht da nicht, vielleicht duration minutes, oh chat, five hat time, wie gesagt,
ich lass mir die option offen, dass ich keine ahnung habe von was ich, was ich mache, vielleicht
geht es auch so, also let duration gleich sechs, fünf, ne, ne ne leute das geht so nicht, also
okay, ah chat, das ist ne gute ide, das ist ne gute ide, das, das müsste wahrscheinlich
dann sogar funktionieren, auch wenn es unglaublich kompliziert ist, aber okay, so duration, add
duration, minutes, time minutes, add seconds, time seconds, was ist das Problem, so, so
und jetzt return wird, ne Moment, Moment, Sekunde, ist das falsch, Moment, let duration,
ich muss das erstmal speichern, so, kompiliert der Krampel denn jetzt überhaupt, nein natürlich
nicht, so, geht auch mit plus, ah, du meinst quasi so,
so, so, man sieht jetzt nicht hübsch aus, aber okay, so und return wird, hey, es kompiliert
Leute, aber es ist nicht gesetzt, es sind null, add must be used, ah, ah, okay, ne, was hat
ein add für ein return value, muss ich das mutable machen oder, wobei ne, ich kann es
ja einfach so, einfach so returnen wahrscheinlich, ne, das hier funktioniert, okay chat, zeig
mal her, was postet, was postet, was, midnight, from num seconds, from midnight, ne, das mach
ich doch, time signed duration, ja das bringt mir doch nix, was soll ich damit jetzt anfangen,
ach so, ne doch, Moment, natürlich bringt mir das was, Moment, signed duration since
midnight, okay, ich verstehe die Intention dahinter, aber warum ein workaround um eine
duration anzulegen mit 15 minuten, ach, das semicolon muss weg, okay, ah, ja, okay, gut
zu wissen, okay, es funktioniert was ich gemacht hab, also 15 minuten, 30 minuten, okay, funktioniert,
aber also der workaround für eine duration zu bekommen von einem string in dem eine duration
steht ist schon ziemlich, naja, ich weiß nicht, aber es funktioniert, okay, man kann 2 zeiten
voneinander abziehen, ja klar, gleich, ja klar kann man das machen, aber ich will eine duration
haben, so, also das haben wir jetzt ja, passt ja, also wir haben es jetzt nach 2 stunden
oder so geschafft oder eineinhalb stunden tatsächlich geschafft eine zeile.net code
zu übersetzen, nämlich das hier, seriously, das ist genau diese eine zeile, mehr ist es
nicht, das hier ist die eine zeile, also das hier, das hier ist das, mehr ist es nicht,
es ist ein bisschen übertrieben, also, effizient, schnell ist es mit sicherheit und es ist wahrscheinlich
am ende, moment, wie geht das, ich kompiliere das mal kurz, hier, rust, build, target, blablabla,
release, pass mal auf, das ist natürlich viel kleiner und natürlich viel schneller als
mein.net programm, gehe ich mal von aus, ja, target, target, release, nee, da, release,
build, wo legt denn mein binary jetzt, nee, moment, target, release, build, wtf, wo legt
denn mein binary, ach, gibt es nur ein ordner, der release heißt, nee, target, release, wo
ist mein binary, hat das kompilieren nicht geklappt, nee, ich hab doch release gebildet,
release, ja, wo ist es denn, oder doch da, release, da ist es, da ist es, 4,5mb, ok,
das ist halt einfach 10 mal so klein wie das, ok, das.net programm hat aber auch noch
ein bisschen mehr Sachen, ja, also, ja, minus, minus help, minus duration, 00, 30, 00, funktioniert,
alles klar, kannst auch das hier nehmen zum passen, wie widersprebt das sich überhaupt,
ich will hier einen create brauchen, um duration zu passen und vor allem will ich keine crates
haben mit 5 github sterne und die keiner mehr maintain nach 2 wochen, statisch gelingte
lip ist recht groß, ja aber dafür brauchst du auf dem server nix, ok, aber in ordnung,
ordnung alles klar ist ok ist ok also die erste zeile wir haben jetzt ok erste zeile haben wir
übersetzt passt so jetzt könnt ihr euch aussuchen wollen wir die nächste zeile auch noch übersetzen
oder wollen wir uns anstatt diesen komischen bilder syntax mal diese derived syntax angucken
klep hier derived syntax ok also cli cli pass
nächste zeile haben wir dann gleich
ah ok ich glaube ich habe es verstanden das hier ist dann quasi so die globalen
argumente und hier könnte ich beispielsweise wenn ich wirklich einzelne commands hätte wie
list und sonst was also sprich mache ich dann so was hier nur dass nur gucken ob das richtig
checken also strack cli das ist quasi die globalen die globalen sachen so da habe ich
ja aktuell genau gucken dass ich das optional name ja das ist doch das ist doch schon mal viel
besser also dann würde ich quasi sagen moment value parser nee value parser hat ja nicht
funktioniert value parser ist ja abfuck das das das ging ja nicht ja mach mal kurz ich
mach mal kurz diesen krempel hier weg also subcommand brauche ich nicht turn debug information on
ich brauche im prinzip eine sache die sich nennt duration und die ist vielleicht geht
jetzt ja in dem fall keine ahnung time duration aber das wird die gleiche fehler meldung geben
wie das letzte mal auch und dann sage ich let cli pass und dann crash da dann crash da beim starten
beim weil was ok
also sprich lasse ich das hier an der stelle weg wie war das mit dem string mit dem string
passen einfach einfach so dann check that moment if you try to supply minutes ach so ich muss
ihm ja sagen wie der kram heißen soll short ach so aha ok short long aber wie kann ich
ihm sagen wie short heißen value parser wollen wir nix wir wollen ja nichts value parsen
value name duration ja kokt jetzt funktioniert es und wenn ich jetzt help angebe dann sagt
er mir duration short nimmt er wahrscheinlich standardmäßig den ersten burschtarm wenn
man aber könnte ich auch sowas machen keck nö na gut in dem fall ist in ordnung weil
ich will es ja wirklich wirklich so lassen so das heißt dann im endeffekt auch dass
ich den ganzen restlichen krempel weglassen kann und wie passt man das jetzt im prinzip
genauso muss single quote sein also quasi short gleich d oder gleich k achja das ist
gut zu wissen ich lasse es mal so dass ich dran denke das nächste mal also dann können
wir uns das jetzt gerade mal sparen aber das hier brauchen wir nach wie vor weil der pass
ist da oben ja nur als string was relativ blöd ist weil ich würde schon gern das in
daytime parsen auslagern dass da direkt eine fehlermeldung generiert so nach dem motto
ja ist not valid duration oder so so und wie machen die das jetzt hier cli name s ok also
im prinzip brauche ich jetzt nicht das sondern duration so was bräuchte ich jetzt ran 15
genau minus duration 00 45 minuten 45 minuten sind 2700 sekunden ok ok ja ok leute ich
muss zugeben das ist tatsächlich wobei das hier geht doch das hier geht doch eigentlich
auch klar was er baut baut gibt es auch baut gibt es nicht tatsächlich ne version
keine ahnung was das da oben mir dann sagen soll aber auch keine baut version ist ok
was was findet ihr die schönere syntax die variante ich meine wir brauchen noch die
anderen argumenten ja also wir haben ja die vari also die hier unten die variante hier
unten oder die cli variante die diese derived parser variante also ich muss sagen ich könnte
mir vorstellen wenn es ein bisschen länger wird ist das hier die übersichtlichere variante
die variante ja die würde ich wahrscheinlich auch bevorzugen in tatsächlich in dem fall
so also sprich im prinzip würde das dann so aussehen nicht duration wir brauchen noch
so was wie clear hier dann brauchen wir noch so was wie list list das ist ein buhl ob der
buhls parsen kann buhls das sollte hoffentlich funktionieren value name es gibt kein ah nee
moment value name ist dann wie ich da unten drauf zu nee die welt das ist das hier so
wollen wir help list ist ein buhl ist ja ich weiß nicht ob das so convention ist das so
einzugeben aber ich denke mal damit damit kann man erst mal leben also clear list durations start
start brauchen wir noch start heim date time oder so ja das ist gut checkt er das denn jetzt auch
dass das dass das ist ein buhl ist oder muss ich dann irgendwie value parser oder so zeug
erzählen ach so moment start also checkt er jetzt auch das option im buhl ist ohne dass
ich da irgendwas mit value parser und gedöns mache requires a value nee das ist ja blödsinn
es braucht kein mehr das ist long was macht long an der stelle ja man weiß es nicht es
ist steht steht halt da ach so das ist da könnte ich angeben wie die lange lange schreibweise
davon ist ok nee wir brauchen kein value brauchen kein list list requires a value
warum required list jetzt eine value gibt so was wie optional oder so was
es gibt keinen sinn dass der in value
possible values true fault ja moment ich wieder soll ein flag sein ein flag ist gesetzt automatisch
und wenn der checkt ist doch hier oben auch ob es gesetzt ist oder nicht ach so ach ok
ich glaube ich habe es verstanden der stört sich daran dass ich es angebe aber nicht dann
quasi true dahinter schreibt oder so true 0w mal ganz davon abgesehen das ist ziemlich
wie würde ich es überhaupt angeben ok ja das ist natürlich bescheuert wie macht man
hier options drinne also flex wie macht man flex debug einfach nur was ist wenn ich option
dann weglasse ich meine ich hätte gedacht dadurch wird es quasi auch optional moment
nur durch das jetzt mal ach nee ok wenn ich es option nenne dann muss ich was angeben
das heißt wenn ich das jetzt weglasse dann geht's wo ist der sinn von option wo ist
der wo ist das sinn von option jetzt mal ganz ganz blöd gefragt ich meine es ist nicht
required dass ich minus l angebe
wahrscheinlich nur weil es ein bool ist oder ok duration noch mal kurz checken was ist
wenn ich von duration die option weglasse was passiert dann ok das muss das muss irgendwas
mit mit zu tun haben als bool ist oder nicht weil es seinen flag ist also für bool ist
anscheinend ok das wegzulassen also ein bisschen konsistent scheint es mir schon zu sein long
action für was ist action
was ist action ah flex flex kann auch also be switched
also be switched that can be on off switches that can be on off this is aha aber es funktioniert
doch auch so ok value parser brauche ich anscheinend oder minus l ach so ja so nice steht da sogar
da muss man vielleicht mal fertig lesen ja gut dann kann man das ja im prinzip so lassen
so also das heißt jetzt wenn ich das jetzt mal ausgebe nicht nur nicht nur duration sondern
ich gebe jetzt mal aus hier CLI CLI list so das sollte es angeben true nö ach ok das
braucht man dann nicht einfach nur so true ok wenn ich es weglasse ist es als ja das
ist ok das ist ja im prinzip genauso wie hier list und clear genau ja es ist richtig
so so mit minus mit mit clear wird es wahrscheinlich genauso funktionieren denke ich mal zeigt
mal her wenn man nix minus c minus l ja ok gut dann ist es tatsächlich so wie gut das
heißt zumindest bei bool muss man keine großen verrenkungen machen das funktioniert einfach
das heißt wir können tatsächlich mal eine sache machen die wir auch hier oben schon
haben im dotnet code also das ist ganze wait und geduldens das können wir uns natürlich
sparen wir wollen gucken wenn list gesetzt ist also wenn list gesetzt ist dann führen
wir was aus und wenn clear gesetzt ist dann führen wir auch irgendwas spezielles aus
ach braucht man keine klammern ok return ok return ist so ok gut return eins alles klar
gut also da hätten wir das auch schon mal dann machen wir doch mal weiter wir haben
es jetzt wir haben es bis jetzt ja nur geschafft die erste die erste zeile da irgendwie sind
sinnvoll zu übersetzen ok also so weit so gut ja das ist egal das bleibt ja nicht so das
ist einfach nur dass irgendwas passiert ok dann machen wir mal die eigentliche die eigentliche
logik regex und tickets sachen lasse ich jetzt mal bleiben wir brauchen noch einen string
der sich nennt er reason genau so den müssen wir auch setzen also sprich
ne da müssen ja doch doch also den müssen den müssen wir auch setzen ok gehen wir einfach
mal gehen wir einfach mal der reihe nach vor duration haben wir gesetzt start time start
time müssen wir noch setzen also sprich wir gucken jetzt ist das überhaupt gesetzt also
muss ich wieder wie würde man das kann man das in rust irgendwie anderweitig sinnvoll
machen also ich würde ich würde im prinzip gerne gerne sowas hier machen if hier cli warum
hatten das kein auto complete dachte das ist in rust alles statisch und sonst wie wahrscheinlich
weil es von irgendeinem makro kommt vermute ich mal oder oder was meint ihr wahrscheinlich
weil das irgendwie makro generated kram ist ich erwarte dass ich da cli punkt mache und
dann stehen die die variablen drin hiervon man ist ja in sucht jetzt müsste er ja eigentlich
kennen oh es ist unknown aber dafür für das dass es andere ist funktioniert erstaunlich
gut also was ich eigentlich machen will ich will gucken ist ist start gesetzt also quasi
ist sam sam cli start sowas will ich machen ja so print haben wir hier keckel also sprich
wenn ich wenn ich start gesetzt habe o mann wo ist jetzt schon wieder das problem was
ach so ich ich ich retorne nix nee ich muss doch gar nichts retorne was was
andere nee ich will doch checken ob es ich will checken ob das gesetzt ist
da kommt jetzt ruder falls raus oder was stört ihn überhaupt jetzt gerade an meinem return type von
mann kann only return type set implement termination ok wirst du was dann dann halt dann halt kein return type
warum warum geht das warum geht das nicht rast if sam ja erklär zeig her
und da jetzt cli start nee ach nee das ist die variable für für innen drinne also so im endeffekt
so start requires a value but it's not supplied ok das passt keine ahnung 12 12 1212 ganz toll ok
dass das das passt matched so also was ich jetzt machen will ich will ich will in default value
setzen also quasi das da was ich da oben gemacht habe aber geht das geht das nicht einfacher kann
ich nee kann ich nicht also was ich jetzt was ich gerne machen würde ja wäre quasi das hier
moment nee if if moment ich will ich will ich will checken if nan if nan start sie
er ist hier ein start alter oder muss ich muss ich muss ich da auch so machen
so also was ich gerne machen würde wäre so was also sprich wenn es nicht gesetzt ist dann würde
ich es gerne auf den default wert setzen und in dem fall den default wert duration now aber das
geht ja nicht weil das ist ein string also ich will eigentlich sowas dann machen let start gleich
now nee das gibt es nicht macht man das jetzt system time local now
wahrscheinlich
now genau sowas will ich haben nur dass ich gerne den start da oben kann ich sowas machen
let start gleich mit let start moment das geht nee nee ich ich muss das ich muss das so machen
wie hier oben oder dass das das funst glaube ich nicht anders so irgendwie so so die kurz
variante davon gibt es gibt es nicht irgendeine kurz kürzere schreibweise davon dass ich quasi
sage hier guckt mal ist das ist das gesetzt und wenn nicht dann schreibt was rein also im
prinzip will ich das hier machen ganz dumm gesagt aber ich glaube ich glaube den den
operator gibt es nee das will ich gar nicht machen vergiss es blödsinn also ich glaube
ich glaube ich muss tatsächlich wieder sowas hier machen also sprich let start match cli start
muss ich da irgendwie so komisches zeug noch hinten dran schreiben wahrscheinlich start so und wenn
es nichts wenn es nichts gesetzt hat dann will ich das hier haben so fertig so und wenn es was
gesetzt hat oder muss ich das jetzt wieder passen weil aber da gibt es doch bestimmt
ein pass naiv time from oder pass from string oder so hier from start so nee was ist das problem die
unresolved das steht doch da wie kann wie kann das unresolved sein kackel jetzt erzählt die ide
jetzt mist oder wer hat jetzt recht guckt mal nach an rap oder mache ich mache ich wer lügt
denn jetzt hier von pass from string ok klar wo ist wo ist das problem muss ich noch format angeben
kann man das format nicht weglassen also ok ich muss muss er jetzt ein format angeben so
wie es aussieht ist aber auch doof er sollte eigentlich automatisch ein paar durchbrennen
also ich muss jetzt quasi sowas hier machen also quasi vor da weiß ich die weiß ich die
standard dinger nicht keine ahnung day day nee das glaube ich klein d na klein d komm lass mal
erst mal so gucken ob das jetzt funst ran nein geht nicht weil das muss ich anrappen
wir uns funktioniert nicht jawoll nee ach das ist jetzt nicht komponent naiv time und daytime
ist nicht kompatibel oder was gibt es denn gibt es denn loco pass oder so
oder was ist pass naiv time ging bei mir nicht im parser wir können es noch mal ausprobieren
also sprich an der stelle chrono naiv time oder so was nur wenn das was für
ein sehr sehr de oder sehr de rast sehr de framework for serializing deserializing rast
data structures damit hätte ich jetzt nicht gerechnet aber ok das funktioniert doch einfach
so damit es geht was contains invalid characters nee warum contains das invalid characters das
ist doch ein gültiges datum ok wahrscheinlich muss ich die uhrzeit machen 12 uhr 12 und
0 sekunden ami format da muss man wahrscheinlich ok also datum sagen wir mal hier 21.07.2022
invalid characters also muss man wahrscheinlich slashes machen dann weiß ich es auch nicht
Matt
Days, ne Moment, oder auch nicht. Ja Moment, was ist es denn dann? Es ist nicht naiv Time,
sondern es ist, ähm, was ist es denn dann? Date, nee. Date Time? Naiv Date Time könnte
es sein. Warum ist das eigentlich naiv und normal, nicht naiv, im Moment nicht naiv,
es gibt es auch. Was ist denn da der Unterschied jetzt? Oh, was will der jetzt von mir? Was will
der jetzt von mir? Äh, wie 23? Ich hab keine Ahnung was ich da überhaupt eingebe, also
warum ist es halt nicht. Ach, die Time Zone Muster. Ach so, ah. Time Zone. Ach so, und
die naiv Variante hat diesen ganzen Müll wahrscheinlich nicht, oder? Also, ach jetzt
versteh ich das. Das eine ist quasi mit Time Zone Support und das andere ohne. Ok. Invalid
Value. Darf ich jetzt 19, darf ich jetzt 1, 1, 1 eingeben oder so? In welchem Format
willst du es denn von mir? In welchem Format darf es denn sein? Ach, mit Bindestrichen,
Bindestrichen im Kokona Format. Bindestrichen im Kokona Format, ok. Nee. Contains invalid
Characters. Aber, wenn das Serde Feature nicht aktiviert wäre Chat, dann würde das
doch gar nicht funktionieren, oder? Nee, ist, ist, oder muss ich das aktivieren? Minus F.
Also, Cargo Add Chrono minus F. So? Ist jetzt aktiviert, ja. Mal gucken ob es jetzt funktioniert.
Nö. Ach, man muss das in ISO, ISO, nee, Dings Format Standard angeben, oder wie? Also,
ich kopier mal kurz den Flixcoder. Ja, aber das kannst du doch keinem zumuten sowas einzutippen.
Ah, ok, das funktioniert. Gut, das will ich aber nicht. Das ist ja, niemand, niemand,
den ich kenne, könnte ernsthaft sowas aus dem Kopf tippen. Und wenn ich nicht naiv Date-Time
nehme, sondern ich nehme richtig echtes Date-Time mit Zeitzone, Time Zone. Ok, Moment. Latest
Release. Date-Time. Gibt's da? Hä? Die gibt's hier angeblich gar nicht. Aber das ist Chrono-naiv?
Ich will nicht Chrono-naiv, ich will echtes Chrono. Boah, bisschen, bisschen eklig ist
es schon, ja. Ich will echtes Chrono haben. So. Crates, Chrono, Moment. Suche Date-Time.
Genau, das will ich haben. Date-Time, Doppelpunkt, Doppelpunkt, U-T-C? Alter, was denn das für
eine Sündachs, da wäre ich ja im Leben nicht draufgekommen. What the fuck? Da wäre ich
ja nie draufgekommen, das so zu schreiben. Never wäre ich da draufgekommen, das so zu
schreiben. Nie. Ich mein. What? Nee. Pretty much the end of input. Aber das geht anscheinend
jetzt wieder nicht. Punkte schreiben oder so? Ok, ich will ja als Time Zone auch nicht
U-T-C haben, sondern. Ey, was gibt's denn sonst noch für Time Zones? From? Boah, ist
das belastend, also. Ok, gehen wir mal von aus, das ist U-T-C. Wie würde ich jetzt das
Datum dann da richtig eingeben? Gehen wir mal clap. Clap, Date-Time. Steht da was drin?
Rust. Rust. Also es ist nicht sonderlich verständlich alles, muss man sagen. Kann es sein, dass
er das nicht parsen kann? Well. Pretty much the end of input. Ok, nice. Und wenn ich Punkte
reinmache, muss ich noch irgendwie irgendwie Z2 oder irgendwas? Nee. Ich muss da hinten
noch ein Set für Time Zone angeben. Ja, das kannst du doch niemanden zumuten, das so einzutippen.
Ich glaube, ich muss, ich muss das, ich muss das selbst machen. Also was, was mir vorschwebt
ist folgendes, ja. Was mir vorschwebt ist folgendes. Man gibt, man gibt ein 18 Uhr 12
und 12 Sekunden und da hängt das aktuelle Datum davor, wenn du kein Datum eingegeben
hast oder du gibst das ein und ähm, er macht daraus, er nimmt ja unsere Zeitzone und rechnet
das um. Aber ansonsten ist das, ja. Aber wir probieren nochmal was anderes, ob das mit
Duration funktioniert. Minus Duration 00 15 00. Ach, das funktioniert einfach so dann.
Moment, nee, ich pars den Krempel ja noch. Also was würde angeblich gehen? Duration würde
angeblich gehen. Nee. Duration funktioniert nicht. Moment, das ist was anderes. Deswegen
funktioniert Duration nicht. Ja, CLI. CLI Duration, deswegen funktioniert das nicht.
Nee, funktioniert auch sonst nicht. Also ich weiß nicht, wer im Chat erzählt hat, Duration
wird gehen, aber anscheinend geht Duration so nicht. Aber Date-Time geht. Naiv-Time geht,
naiv-Date geht. Äh, könnte ich an der Stelle anstatt eine Duration naiv-Time nehmen, wenn
es nur Time ist? Ah, das geht auch. Ja, ok, wenn das geht, das kann es ja quasi mehr oder
weniger wie Duration verwenden. Ja, das sind jetzt, das sind jetzt, keine Ahnung, 22 Minuten.
Ja, funktioniert. Das finde ich gut, was passiert, wenn ich sowas hier mache. Ah, damit dann
mag er nicht, dann mag er nicht. Vielleicht, vielleicht nicht mit der schönsten, mit der
schönsten Fehlermeldung, aber es ist ok. Invalid-Value for Duration. Es wäre cool,
wenn man hier eine Custom-Fehlermeldung angeben könnte. So nach dem Motto hier, guck mal und
ansonsten, gib ihm. Und irgendjemand, ich sollte mir Unwrap or Default angucken. Also das heißt,
wenn ich jetzt checken will, äh, wenn ich checken will, ob Start gesetzt ist. Easy-Clap-Annotation,
ja, das, ich finde es ja gar nicht mal übel, ja, also ich erkenne schon, dass das alles
viele Möglichkeiten hat, aber es ist schon irgendwie nicht so einfach da durchzuplicken.
Gleich, so und jetzt was werde ich, CLI, Start, Unwrap, Moment, das gibt es ja nicht. Unwrap,
Unwrap, was, or. Und da würde ich dann angeben. Moment, Moment, wartet mal. Nur mal, nur mal
so, um das nochmal zu testen, dass es funktioniert. Oder machen wir es, machen wir es doch einfach
mit, machen wir es doch einfach mit Duration. Machen wir es mit Duration, nicht mit, nicht
mit Start. Ne, mach hier mit Duration, ok. Ok, also nehmen wir einfach Duration, so. Also
ich will gucken, ob Duration gesetzt ist. Das ist ja eine Option, guck, das ist eine
Option, da. So, und wenn es nicht gesetzt ist, dann will ich ein Naiv Time, dann will
ich das da haben, äh, From, From HMS, 0, 15, 0, 15 Minuten. So, mal gucken, ob das,
ich nenne es mal Duration, mal gucken, ob das funktioniert. Das wäre nämlich die deutlich
kürzere, ja viel besser Leute. Das ist doch mal eine sinnvolle Schreibweise, guckt mal.
Also bevor ich diesen Crap hier oben mache, dann auch lieber so. Ja, ok, GGEs. Ja, das
ist der Suntags, damit lass ich, damit kann ich mich anfreunden, ja. Das ist ok. Ja und
das mit dem Duration können wir uns im Prinzip auch sparen, weil, Naiv Time funktioniert
genauso. Ne, das wird wahrscheinlich nicht gehen. Also die Duration muss, wobei, du hast
recht, die Duration muss kleiner, die Duration muss kleiner als, ähm, ein Tag sein wahrscheinlich,
ja, ist out of range, genau. Aber Duration parsen kann ich nicht. Duration parsen mag
er nicht, guck, bam. Duration parsen, nein, From String ist nicht, nicht möglich. Aber
ganz im Ernst, das ist ok. Eine Duration, na wobei, ganz ehrlich, ich kenne durchaus
Leute, die drei Tage Duration setzen. Einfach, wenn die Warnungsarbeiten irgendwie übers
Wochenende gehen oder so. Das ist Sea Lion mit dem Rust Plugin. Es ist echt dumm, dass
Duration nicht geht. Clap, pass, glaube ich brauche irgendeinen Custom Parser dafür.
How can I accept Standard Time? Ne, das hatten wir doch gerade schon. Man braucht einen Custom,
man braucht einen Custom Parser. So, und zwar, clap, pass, try, From String, pass, Duration.
Also ich kann dem quasi eine Custom, ja, da probieren wir das doch mal aus. Also, der
kriegt clap, easy clap, easy clap, pass, try, From String, soll er diese Implementierung
verwenden? Ok. Pass, Duration, String, Result, Standard Time, Duration. Ne, soll er nicht
und zwar, ich mache das mal kurz weg, weil ich will gucken, ob er das checkt. Also, pass,
Duration, also quasi den Input umzuwandeln in ein Duration Element, was auch immer. Würde
ich jetzt sagen, hier kriege ich den String rein. Ach, ich däpp, jetzt habe ich den Kram
schon wieder gelöscht, 0W. Sollen wir erstmal schön rückgängig machen. So, und was würde
ich jetzt machen? Also, ich will ja kein String, ich will ja Chrono, Chrono Duration haben,
als Rückgabe. Genau, also im Prinzip so. Pass, Error, Int, Error, ja gut. Oh, guck mal, ok.
Und jetzt würde ich sagen, Duration, ja From und so gibt es ja nicht, jetzt muss ich wieder,
jetzt muss ich, Moment. Meine Logik hier oben funktioniert ja gar nicht. Wenn es größer
als ein Tag ist, wäre das auch schon abgekackt. Warum, ich verstehe immer noch nicht, warum
es keine Duration gibt. Wisst ihr was, ich nehme einfach Standard Time Duration, da funktioniert
das. Duration, so, da kann ich eben sagen, From. Also, ich glaube, die sind noch nicht
auf die glorreiche Idee gekommen, dass jemand andere Durations als Sekunden, Microseconds
und Nanoseconds irgendwie haben will. Duration von 15 Minuten oder so ist outdated, overrated,
gebadet, das braucht man nicht. Schon etwas merkwürdig, ja. Rust Standard Duration Minutes,
Duration Seconds. Oder halt, oder halt, oder halt so. Aber da muss ich den String selber
splitten. Das ist schon echt richtig kacke. Weil ich kann sagen, naiv Time Pass vom String,
ja ja, das funktioniert schon. Aber eine Time kann ja maximal 24 Stunden haben. Also,
es ist mir aktuell noch überhaupt nicht klar, wie man mit Kombination, entweder Krone oder
Standard Clip eine Duration von, sagen wir mal, 2 Stunden, 30 Minuten und 10 Sekunden
irgendwie oder sagen wir mal von 28 Stunden, 30 Minuten und 5 Sekunden ordentlich passen
könnte. Und das kann doch nicht sein, dass das nicht geht. Das muss doch irgendwas sein,
was ich übersehe. Also mal angenommen, ich hätte hier so unten den String. Können wir
mal simulieren hier. Let's drill gleich. 28 Stunden, 30 Minuten, 15 Sekunden. Wie kriege
ich das in eine Duration gepasst? Das muss doch gehen. Pass Duration. Es gab hier immer
welche Strings, äh, irgendwelche Fragen. Würdest du sagen, deine Arbeitskollegen sind
alle in Ordnung oder sind das sehr komische Typen dabei? Meinst du jetzt in der gesamten
Firma oder wirklich nur die Leute, mit denen ich wirklich, mit denen ich viel arbeite?
Also, in der gesamten Firma sind sehr viele komische Typen dabei. Nicht komisch so im
allgemeinen Sinne, sondern halt irgendwelche BWL-Stonkstypen, wo ich mir immer so denke,
Alter, was wollt ihr? Ähm, so mit den direkten Kollegen, die sind eigentlich alle ganz normal.
Nein, was heißt normal? Die sind wahrscheinlich normaler als ich normal bin, ja. Aber es ist
jetzt aktuell keiner dabei, der mir richtig auf den Keks gehen würde. Es gab früher
mal einen, der mochte mich nicht und den mochte ich auch nicht. Ich glaube, so kann man das
zusammenfassen. Aber der ist schon eine ganze Weile weg. Und die meisten Leute bei mir
stehen auf der Arbeit, die schon länger dabei sind, die wissen auch genau, wie ich meine.
Aber ihr natürlich nicht und ich sag's euch auch nicht. Nein, gibt keine Vor- gibt kein,
wie heißt das, Tress, Code, Kleiderordnung? Gibt es nicht. Ich hab manchmal ein Hemd an,
aber ein kurzärmliches. Damit ich Opa werden kann, müsste ich selbst erst mal Nachwuchs
machen. Also Opa FPS ist demnächst nichts in Sicht. Warum gibt es da Crates dafür,
um Durations zu passen? Das macht mich immer noch fertig. Läuft mit Rust besser? Ja, wir
haben schon einiges gemacht. Nur die Sache ist halt die, dass Rust manchmal keine Sachen
hat, die ich nicht verstehe. Zum Beispiel, wie kriege ich diese Duration gepasst in eine
Duration? Da gibt es anscheinend nichts für. Das muss an der Sicherheit liegen. Die sagen
nur, ich soll komische, komische Crates dafür verwenden. Ja, ich soll das Crates Duration
verwenden und sowas. Aber warum? Ich mein, das sind irgendwelche Leute, irgendwelche
Guitar-Projekte mit 5 Sternen oder so, mit 10 Sternen, die kaum noch maintenance werden
und sowas. Die will ich nicht verwenden und ich will es aber auch nicht selber machen.
Ich möchte, dass man die großen Libraries bzw. die Standard-Libraries sowas hat. Was
es da zu maintain gibt? Ja, das ist tatsächlich eine gute Frage. Entweder passt das den String
oder nicht. Aber vielleicht gibt es ja einen Bug und kein Juckz. Du stellst nach einem
halben Jahr fest, Mist, das Ding hat einen Bug und frisst dann doch nicht alle Formate
richtig. In dem Fall bei dem geht es. Aber das weißt du halt nicht. Angenommen, du benutzt
das jetzt, dein Projekt ist 2 Jahre alt und die Library wurde zuletzt aktualisiert vor
3 Jahren. Da musst du es dann forken und selber fixen. Das finde ich blöd. Deswegen
finde ich es gut, wenn so banale Sachen wie Duration Parsing from String in der Standard-Library
drin sind. Doch, mache ich. Mache ich. Ich nehme so gut wie nie Libraries, die nur 5
oder 8 Sterne haben und vor 10 Jahren aktualisiert wurden. Ich nehme eigentlich nur, also zumindest
wenn ich Libraries nehme, die ich regelmäßig verwende, dann nehme ich eigentlich so gut
wie nur Sachen, die relativ beliebt sind und viele Commits haben und viele Sterne haben
oder sagen wir zumindest eine gewisse History haben. Ich bin wieder am Duration Parsen,
als wenn man heute einleuchtet, dass es das gibt, dass es das nicht gibt. Das gibt es
nicht. Es gibt keine Standard Duration from String. Das gibt es nicht. Das will ich nicht
wahrhaben. Ja, das ist wieder was ganz anderes. Ja, das ist echt Fail. Wir haben ja was. Was
prinzipiell funktioniert, das Problem ist nur, das hat halt jetzt schon einen Bug, ist
nämlich die Duration größer als die Stunden, mehr als 24 Stunden, dann funktioniert es nicht.
Dann kackt es ab. Ja, das ist ein bisschen Bane's Champ. Ich meine, wir können diese
komische Grades. Man kann das verwenden. Wie passt man denn hier? Zeigt man ja Pars String
to Standard Time Duration und Chrono Duration. Also wie funktioniert das? Duration? New.
Die wollen ernsthaft, dass man das selbst ausrechnet. Ja, wir haben die zweite Zeile
schon geschafft, aber wir sind gerade wieder bei der ersten. Hier Pass One Day. Das will
ich nicht parsen. Wer will denn sowas parsen? Ich will pass. Okay, dass sowas unterstützt
wird, finde ich tatsächlich ganz nice. Ja, das ist okay. Aber warum wird nicht sowas
wie 15.00 unterstützt und so? Niemand will doch sowas parsen. Aber 15.20 oder sowas
willst du vielleicht passen. Das schreibt doch kein Mensch so hin. Ein M plus 3, niemand
würde das überhaupt auf die Idee kommen, im Terminal so einzugeben als Option. Ist
es nicht eher ein Date, was du parsen willst? Nein, ist es nicht. End Datum ergibt sich
aus Startzeit plus Duration. Ab jetzt für 48 Stunden zum Beispiel. Ja, das könnte man
mit einem Date wahrscheinlich direkt machen. Aber es ist ja nicht immer Now. Vielleicht
ist es doch gar keine so schlechte Idee, das über einen Date zu lösen. Überlege ich gerade,
ob das irgendwie sinnvoll funktionieren würde? Nee, würde nicht sinnvoll funktionieren.
Ich müsste es ja irgendwie ausrechnen, wann das End Date ist. Und das kann ich nicht ausrechnen.
Also wenn ich das richtig sehe, kann ich hier nicht eingeben zum Parsen. Für 12 Uhr kann
ich nicht eingeben 12.05.10. Für eine Duration von 12 Stunden kann ich nicht eingeben 12.05.30.
Ja, Date plus X, genau, das ist das Problem. Das Plus X kriege ich nicht gepasst. Das Ausrechnen,
wenn ich eine Duration und ein Startdatum habe zum Enddatum, das ist einfach. Also ich habe
einen String, 28.30.15. Das bedeutet 28 Stunden 30 Minuten 15 Sekunden. Und den will ich parsen
in eine Duration. In.NET ist das in der Tat äußerst simpel mit Timespan Pars. So, und
da kann ich jetzt reinschreiben, 28.15 und da kommt Timespan raus mit 28 Stunden 30 Minuten
15 Sekunden. Fertig. Ich meine, okay, vielleicht können wir das auch verwenden, weil wenn
sowas supportet wird wie 30 Minuten oder 3 Tage oder so ist das doch auch okay. Das ist
glaube ich ganz in Ordnung. Warte mal, ich binde das mal ein. Also was muss ich denn da
für jetzt machen? Cargo add, Cargo add, sowas hier. Okay, und jetzt machen wir die ganz simple
Variante und zwar. Moment, ich kommentiere das mal aus. Ich mach das hier auch mal wieder
weg. Ich probiere jetzt einfach mal was aus, ob das, ob das funktionieren würde. Nehmen
doch ein Date-Time-Span. Ja, sowas will ich haben, aber sowas gibt es nicht. Oder keine
Ahnung, ob das das ist, was ich haben will. Ne, wahrscheinlich ist es nicht das, was ich
haben will. Mein Date-Time-Span klingt sehr nach Duration. Das ist Sea Lion mit dem Rust
Plugin. Also probiere das doch mal aus. Also, Moment. Use Duration Pass, jetzt gehen wir
von Hand ein. Also sowas hier. Duration Pass, Trink, Let Duration. So, gut. Print, wobei
das Print kopiere ich mir. Bis ich das getippt habe, ist morgen soweit. Duration, so, und
jetzt muss man was machen? Unwrap, das ist Funst. So, Run. Wow, erstmal wieder viel kompilieren.
Okay, Nom, Nom habe ich installiert, okay. Was auch immer Nom ist. Ja. Moment. Ey, nervt
jetzt nicht, weg damit. Ich will jetzt einfach nur ausführen. Unknown Feed, Alter. Jetzt,
geht fort. Okay, das kann er nicht passen. So, aber sowas wie 3 Tage, das kann er passen.
Ja, das funktioniert. Und sowas wie 60 Minuten kann er auch passen. Ja. 30 Seconds. Naja,
ich meine, wahrscheinlich ist das sogar besser als das, was ich ursprünglich hatte. Weil,
mal chat, guckt mal. Wenn irgendjemand eine Duration eingibt, dann gibt er doch lieber
sowas ein als sowas, ja, oder, oder. Moment, Tage, stimmt ja gar nicht. Also, wenn einer
28, 28 Stunden als Duration angeben will, dann gibt er doch, dann gibt er doch lieber sowas,
sowas da an als, als sowas. Ich meine, was du mit dieser Schreibweise nicht machen kannst,
ist 28 Stunden und 15 Sekunden. Oder 15 Minuten, oder würde das so funsten? Ey, das würde
funktionieren. Nee, aber dann wäre das mit dem Doppelpunkt schon wieder, schon wieder
schöner. Ja, aber das checkt er ja nicht. Ja, ich kann das schon selbst machen, aber
ich finde es halt echt ziemlich blöd, dass eine Standard Library Duration Klasse, oder
wie auch immer man das nennt, genau, in Rust, kein Duration passen kann vom String. Das
ist schon fail. Aber, aber ich denke, also, also ich glaube, ich kann damit leben. So,
sowas hier. Damit kann ich leben. Was würde aber eine Zeit implizieren, keine Dauer? Hast
du schon mal auf so eine Stoppuhr geguckt, was da so drauf steht? Digitale Stoppuhr?
Also, das, das steht da halt auch so drauf. Ja, also ich würde jetzt nicht sagen, dass
diese Schreibweise, also ich würde jetzt nicht unbedingt sagen, dass so eine Schreibweise
irgendwie super uncommon ist für eine Duration. Nee, guck mal, das ist eine Stoppuhr. Da
steht drauf 34 Doppelpunkt 25. Was ja auch sinnvoll ist. Ich mein, was soll denn da sonst
draufstehen? Soll da, soll da, soll da wirklich, soll da dann draufstehen, soll da dann draufstehen,
eins M, nee, soll da dann draufstehen, drei M plus 13 S plus 29 MS oder so. Guck mal,
sogar mit Tagesanzeige oder so vorne dran. Also, ich kenn keine Stoppuhr, wo das so drauf
steht. Mag ja sein, dass es das gibt, aber allein schon, wenn man hier nach, oder Stop,
Watch, Digital sucht. Guck mal, vielleicht ist es bei den Amis anders, aber nö, da
ist es auch so. Also, es passt schon. Alter, was ist jetzt hier los? G-Bait, Alter, G-Bait,
wer hat geradet? Der Platinenmacher, Dankeschön Platinenmacher für den, für den Zap. Hier
ist überhaupt nix die Lieder, das ist Massive, Massive G-Bait, Alter. Ich hab euch durch
Shoutchat, keine Chance. So, also das mit dem Duration Pass scheint mir nicht so einfach
zu sein, den Rust, wie ich mir das vorgestellt hab. Ja, Dankeschön für den Host, ich hab
glaub ich gesagt, Dankeschön für den Zap, ich bin schon ein bisschen, Rust hat mich,
hat aus 5-Hat nicht 6-Hat gemacht, sondern eher Low IQ für heute. Genau so. Seid nicht
aus, ich seid aber durchschaubar. Größte von Jett, der hat mich überredet. Ach, nice,
ja, den haben wir auch schon ein paar Mal gehostet und ab und zu springt er hier auch
im Stream rum. Ja, Leute, also ihr kommt, also ich freue mich über den Host, aber ihr kommt
zu einer ungelegenen Zeit, weil ich bin ja schon ein alter Sack und 22 Uhr ist bei mir
normalerweise Schluss. Weil Boomer müde, Boomer schlafen. Du hast heute Gentoo Linux installiert
und wie viel Stunden hast du kompiliert? Warum überhaupt Gentoo, warum nicht Arch by the
Way, das einzig wahre, wissen wir doch alle. Boah Leute, ich glaub mir reicht es mit Rust
für heute, es war echt anstrengend, wir haben zwar so gut wie kein Progress gemacht,
aber es war ziemlich wirr unkompliziert. Ich bin mir nicht sicher, ob ich das Tool wirklich
fertig programmiere in Rust. Müsste ich eigentlich machen, einfach, dass man es ordentlich vergleichen
kann. Ja, ich hab zwei Zeilen, tatsächlich, ich hab, ich hab von dem ursprünglichen.NET
Programm eigentlich, also wir haben das Kommando Zeilen Parsing hingekriegt. Wir haben ja zwei
Zeilen, im Prinzip haben wir zwei Zeilen geschafft. Ja, wir haben tatsächlich diese zwei Zeilen
noch nicht mal richtig fertig geschafft. Rust braucht ein anderes Mindset, ja, es ist wirklich,
es sieht echt so aus. Ohne Mist, ich glaube, auch wenn mir C++ mega auf den Sack gehen
wird, ich glaube, dass es in C++ tatsächlich schon nahezu fertig wäre. Wobei, hat die C++
Standard Library einen HTTP-Klient? Wahrscheinlich nicht, oder? Ne. Ey, das ist natürlich, sowas
essentielles ist ja auch bloat. Wer braucht im Jahr 2022 schon einen ordentlichen HTTP-Klient?
Aber ernsthaft, haben die keinen HTTP-Klient in der Standard Library? Wirklich? Ich denke,
immer mal jede Programmiersprache der letzten 15 Jahre, die rausgekommen ist, hat in der
Standard Library einen HTTP-Klient. Die haben noch nicht mal Sockets? Echt nicht? Haben sie
nicht? Wird ja immer unsinniger, das Ganze. Haben die wirklich keine Sockets? Gut, ich
meine, es ist C, du kannst immerhin noch die ganzen Betriebssystemeigenen Sachen importieren,
aber will man ja nicht, wirklich. Boost zählt nicht als Standard Library. Probier mal Boost
auf Measp32 zu machen. Boost wird vielleicht irgendwann mal ein paar Sachen daraus Standard
Library. Ja ok, das ist natürlich schon ein bisschen cringe. Das Wort cringe ist an sich
schon cringe. Hört sich sehr cringy an, wenn man es ausspricht. Cringe. Cringe. Es sagen
die Zoomer so, habe ich gehört. Rust hat auch keine. Ok, das macht es mir nicht sympathischer.
Rust HTTP Standard Library. Dafür wollen sie aber ganz schön viel in ihrer Standard
Library machen und nichts davon richtig. Dafür haben sie jetzt die 500. Chrono Erweiterung,
dass du dann demnächst schreiben musst, Chrono Doppelpunkt, Doppelpunkt, was weiß ich, Standard,
Timer Doppelpunkt, Doppelpunkt, From, Milliseconds, To, Convert, To, Local, Timesounds Doppelpunkt,
C, E, S, T, Doppelpunkt, Keckel. So, das könnte fast Standard C++ Code sein, also
viel Unterschied ist da nicht. Guckt euch mal die offiziellen Docs von der C++, nicht
Timer, der Timelibrary, der sieht so aus. Ach Gott, aber egal, ich will jetzt nicht
anfangen von C++, dass ich nichts von C++ halte, wisst ihr. Das ist wirklich so, ja.
Ja, soll mir auch recht sein. Ganz ehrlich, in Rust finde ich sogar weniger schlimm, wenn
es einen ordentlichen Art HTTP Client nicht in der Standard Library gibt, weil du hast
einen ordentlichen Package Manager. Ist ja auch was, was es für C++ nicht gibt. Es gibt
für C++ zwar 20 Package Manager, aber das sind alles irgendwelche Fanprojekte. Du brauchst
bei jeder ordentlichen Sprache einen Package Manager und nicht irgendwelche komischen Headerfiles
rumkopieren, wo du dann im Zweifelsfall noch Konflikte hast, weil die Dinger gleich heißen.
Ich muss sagen, wir haben ja letztens auch ein bisschen Peilzeug gemacht. Ich fand's
nicht schlecht. Es war ein paar Sachen sind gewöhnungsbedürftig, aber man plickt durch
und in der Regel kannst du von ausgehen, dass das, was du suchst, da ist, nur dass du noch
nicht weißt, wie es heißt. Es ist alles abartig. Also wenn ich Makefiles sehe, ist es schon
Makefiles, wo du dann Doppelpunkten die richtige Eindrückung brauchst, sowas. Es ist alles
ein bisschen, ja. C finde ich insofern aber noch in Ordnung irgendwie. Die wollen ja wirklich
minimalistisch sein, aber C++ will ja nicht mal minimalistisch sein. Ich weiß ehrlich
gesagt nicht, was C++ eigentlich sein will. C++ ist ein zusammengewürfelter Haufen, wo
jeder die Sachen sogar aus der Standard-Library anders implementiert. Kennst du Julia? Ja,
die war bei uns mal am Empf- ne, der Witz ist so schlecht. Das ist selbst unter meinem
Niveau, diesen Witz. Ja, aber die Programmiersprache kenne ich. Habe ich aber noch nichts drin
gemacht. Oh, es blitzt. Ja, habe ich noch nichts drin gemacht. Ich kenne es vom Namen
her, aber ich bin da immer skeptisch, ob sich das wirklich lohnt. Das ist eher so just
for fun, mal angucken. Ich bin da ein bisschen skeptisch, ob es sich insofern lohnt, wenn
es nicht eine breite Userbase hat. Das ist jetzt sicherlich nicht die Sprache mit wenigsten
Verbreitungen. Ich weiß, gerade im Science- und mathematischen Umfeld scheint Julia wohl
sehr beliebt zu sein. C++ ist plonen, C++ ist Crapware. Einzige, was ich heute von Rust
gelernt habe ist, dass man einen extrem großen Kopf braucht und dass manche Sachen nicht
da sind, von denen man erwartet, dass sie da sind. In Julia beginnt der Index bei 1.
Kackel, Alter, was ist das? Da freuen sich die ganzen Lua-Programmierer. Die fühlen
sich dann wieder heim. Julia-Example-Hello-World, wie sieht das aus? RIP-Tutorial, alles klar.
Guck mal, mal wieder eine Sprache, die da drauf steht, Function und Endplöcke zu haben.
Erinnert mich ein bisschen an Ruby, auch wenn es da nicht Function hieß. Oder wie die ganzen
alten Pascal-Leute, war Pascal oder? Finden das bestimmt auch toll. Aber sieht tatsächlich
relativ lesbar aus. Wishedle-Basic, ja, Wishedle-Basic, stimmt, Wishedle-Basic hat das auch so gemacht.
Leute, ich werde müde. Es ist aber auch schon fast so weit. Bad-Git-Time, Leute, Bad-Git-Time
rückt näher. Brainfuck ist ja dafür gemacht, um das Brain zu fucken. Sachen wie Rust und
C++ sind ja nicht dafür gemacht, um das Brain zu fucken, aber C++ fuckt das Brain trotzdem.
Den haben wir uns am Anfang mal kurz angeguckt. Da weiß ich noch nicht so genau, was ich von
halten soll. Also ein Nachfolger wird das garantiert nicht. C++ wird C++ bleiben und
weiter ekelig C++ sein. Ich finde es von der Idee her cool, dass sie sagen, sie machen
quasi einen Kotlin für C++. Das, was sie mit Java und Kotlin gemacht haben mit C++
und Carbon. Vom Ansatz her finde ich es okay. Leider kann ich es für die einzige Sache,
wo ich öfters C++ verwende, nämlich für ESP32 zu programmieren, nicht verwenden,
weil es wohl nicht erst Carbon zu C++ übersetzt und dann durch einen Compiler haut, sondern
weil es wohl Carbon direkt über LVM zu Native Zeugs umwandelt und es deswegen nicht für
einen ESP32 geht. Sonst hätten wir uns einen der nächsten Streams angeguckt. Die Sündags
hat mich erstmal nicht so geschockt von Carbon, aber es ist auch schwierig. Wenn du hundertprozentig
zu C++ kompatibel sein willst, musst du auch den ganzen Schmodder von C++ unterstützen.
Das heißt du kannst wahrscheinlich gar keine hübsche Sündags bringen. Aber ich glaube,
dass C++, also wirklich Leute mit C++ Erfahrung, dass sie so die meisten Sachen doch halbwegs
schnell auf die Reihe kriegen. Du musst halt in C++ nur an Gott an die Welt denken und
so viele Sonderfälle und Abweichungen im Kopf haben und damit klar kommen, dass manche Sachen
unglaublich umständlich gemacht sind. Ich mein, Unreal ist auch in C++. Und ja, ich
weiß, du kannst Unreal mittlerweile, gibt es auch irgendwelche Scriptaufsätze, aber ich
gehe mal davon aus, ich kenne mich damit nicht wirklich gut aus, aber ich gehe mal davon
aus, wenn du wirklich was sinnvolles in Unreal machen willst, dann kannst du entweder drei
Jahre lang Blueprint-Kacheln rumziehen, bis du simple Logik hast oder du machst halt C++.
So stelle ich mir das vor, ich habe keine Ahnung von Unreal. Ihr müsst aber doch euren
alten Kram noch weiter supporten. Also, zu dieser Hau-Ruck-Umstellung stelle ich mir
immer nicht so erfolgreich vor, ehrlich gesagt. Du hast dann 15 Jahre verschiedene Projektentwicklungsstufen
von Sachen und wenn du sagst, von heute auf morgen, wir machen alles in Go, ja was ist
mit dem alten Krempel, der schreibt sich ja nicht mal einfach neu in Go. Und wenn die
Sachen halbwegs komplex sind, dann hast du die auch nicht von heute auf morgen in Go
neu programmiert. Dann brauchst du erst mal drei Jahre, bis du irgendwas Feature-gleiches
hast, dann musst du was neues programmieren und gleichzeitig das Alte weiter maintainen
und wenn du das Neue dann fertig hast, das ist fast genauso eklig wie das Alte, wenn
es alles unterstützt. Also ja, würde mich auch mal interessieren, von wo nach wo steigt
ihr um und wie viele Projekte habt ihr, die ihr jetzt irgendwie umziehen müsst. Ne,
Unreal-Geduld, das machen wir nicht. In Java, okay, in Pearl, oh jetzt wird es aber richtig
Legacy hier. Ja, wenn es nicht so viel ist, dann mag es gehen. Aber ansonsten stelle ich
es mir in der Theorie gut vor und Aufbruchstimmung ist dann bestimmt auch da, aber in der Praxis
ist es dann wahrscheinlich eklig, weil mal ernsthaft, wenn man jetzt irgendeine alte
Anwendung hat, sagen wir mal in Pearl oder Java, wenn man eine relativ komplexe Anwendung
in Java hat und man sagt man macht die in Go jetzt neu mit allen Funktionen, dann ist
wahrscheinlich die neue Anwendung in Go auch nicht wirklich großartig leichter zu durch
schauen, ja. Du kannst ein paar Altlasten weglassen, sicherlich, aber die wird dann
trotzdem groß und komplex werden. Mein bestes Beispiel dafür ist auch unter Linux die Leute,
die Wayland angefangen haben, also hier neuen Display Manager, ne nicht Display Manager,
neuen Display Manager, ne, was ist Wayland überhaupt, also X, ich meine X und Wayland,
was ist denn da Kramler, ne, Windows System, Windows System, okay, ja, also die Leute,
die gesagt haben, ach X ist Scheiße, wir machen jetzt Wayland, das haben die vor 15
Jahren oder so gesagt, das ist schon ewig her, Wayland Release Date, ja mal gucken wann
das erste sinnvolle rauskommt, ja 15 Jahre ist das her und man ist damit ins Rennen gegangen
und hat gesagt, ja wir machen das jetzt alles neu und besser und die X Altlasten werfen
wir raus und heute haben sie immer noch nichts was sinnvoll, naja, ne in manchen Bereichen
funktioniert sinnvoll, aber heute haben sie immer noch nichts was umvergleichs sinnvoll
funktioniert, 15 Jahre später, was ist halt wieder belegt, dass wenn du neu anfängst,
dann allerdings den ganzen Krempel einbaust, der im alten drin ist, weil die Leute das
brauchen und benutzen, dann hast du in der Neuentwicklung auch nicht viel gewonnen, nope,
kannst du nicht, kannst du nicht, du kannst kein, beispielsweise, ich hab Sway verwendet,
Sway ist ja so der E3 für Wayland, der refresh noch nicht mal das Bild, ist kein Witz, das
Bild refresht nicht, du kannst die Maus nicht bewegen, weil das Bild nicht automatisch
refresht, ja nicht in einer VM, korrekt, ja das ist natürlich mein Problem, ich verwende
es halt in der VM und in der VM ist es halt nicht usable, wo wir wieder bei dem Punkt
sind, du kannst es doch nicht umfassend nutzen und dann kam der nächste Hit, man kann das
mit irgendwelchen Environment Variablen fixen und dann stellt man fest, copy paste is broken,
ja in der VM, ok, aber das ist mir doch egal, ich will es halt in der VM verwenden und ich
kann X verwenden und sonst nix, wir sind ein bisschen weitergekommen Patrick, also wir
haben es geschafft zwei Zeilen.net zu übersetzen und jetzt habe ich erstmal keinen Bock mehr,
ja ist wirklich so, das habe ich auch schon gelesen, dass Elektron Sachen öfters Probleme
haben, ja und die müssen jetzt halt nachziehen, die Leute verwenden das und dann gibt es die
übliche Diskussion unter Linux, dass dann die Wayland Leute sagen, ja das ist doch nicht
unser Problem wenn die Anwendung das falsch macht, da mögen die auch bedingt damit Recht
haben, aber die Leute die die Anwendung verwenden am Ende ist das doch scheiß egal, ob das
am Windows System liegt, ob das an der Anwendung liegt, ob das an Linux selbst liegt, das interessiert
die doch überhaupt nicht, ja das ist genauso wie unter Linux mit GPU Decoding im Browser
für Videos, da gab es jahrelang, wo das übrigens unter Mac und Windows jahrelang schon ging,
gab es jahrelang Diskussionen, an wem liegt das jetzt, liegt es an den Grafikkartentreiber
programmieren, liegt es an den Grafikkartenherstellern, liegt es an den Browserherstellern, liegt
es am Windows System, liegt es an den Desktop Entwicklern, wer hat denn jetzt da schuld dran
dass das geht und jeder hat gesagt, nee nee bei uns muss das nicht implementiert werden
und was ist die Folge daraus, es geht jetzt so halbwegs, es geht jetzt wenn du die passenden
Settings und Flags hast in Chrome mit den passenden Treibern und der passenden Grafikkarten,
den passenden Mesa Treibern und den passenden Zwischenschichten und Gedöns, dann funktioniert
es und trotzdem funktioniert es dann auch nicht richtig, zum Beispiel H.264 funktioniert,
VP9 ist jetzt seit neuestem wieder kaputt, das ist halt Müll, ja das ist halt leider
so, das hab ich ja auch im letzten Video gesagt und da waren Leute dabei, denen hat das überhaupt
nicht gefallen, ich mein ich verwende jetzt auch schon seit über 15 Jahren Linux und
ich hab's schon öfters probiert auf dem Desktop oder auch mal ein bisschen neuere Sachen zu
schauen, wie ist das jetzt mit GPU Decolling, vielleicht ist das vielleicht mit Wine Emulation
geht und jedes mal wenn ich wirklich sage ja, ich setz mich jetzt mal damit ein bisschen
näher auseinander, hat sich die letzten 2-3 Jahre was getan, stell ich fest ja es hat
sich was getan, aber es ist immer noch nicht so wie man's haben will, am besten war der
Typ heute, mein Herz tut weh wenn du über Linux flamest, der war, der war geil, wo ist
er denn, Moment, wo ist er, wo ist er, Herz, hm keine Ahnung, finde ich nicht, irgend einer
hat geschrieben, mein Herz tut weh wenn du Linux flamest, lass mich doch in Ruhe, fast
eins zu eins so, ja, aber die meisten Leute, das fand ich gut, die meisten Leute von denen
du auch anmerkst, dass das Hand und Fuß hat was sie schreiben, geben ja den meisten Punkten
recht ja, was so die Streitpunkte sind ist zum Beispiel, ja ist es nicht vielleicht doch
für irgendwie eine Oma gut mit einem Laptop, dass sie sich keine Viren einfängt und so,
da muss ich sagen ja kann durchaus, durchaus sein ja, oder manche sagen ja das ist gar
nicht so schlimm, anderes also, aber in der Regel, würde ich sagen die meisten Leute
stimmen mir bei der Sache auch zu, gibt halt so ein paar kleine strittige Punkte, aber
prinzipiell sagen sie ja stimmt schon, außer halt irgendwie so die Ultra-Fanboys die das
gar nicht abkönnen, aber die meisten sind ja hier, das finde ich übrigens auch richtig
pork bei mir in YouTube, die meisten Kommentarschreiber sind normal im Kopf, was ich nicht verstanden
habe sind die Leute die gesagt haben, VM würden sie nicht empfehlen wegen Performance, hatte
die heute irgendwelche Performance, hatte die heute irgendwelche Eindrücke, meine VM
wäre zum entwickeln nicht performant genug und Performance ist bei VMs auch kein Problem,
CPU Performance ist in der VM mehr oder weniger Native, eigentlich ja jetzt der Chat wieder,
ja natürlich, jetzt muss jetzt aus Prinzip kommen jetzt wieder welche die sagen ja,
so und CPU Performance ist in der VM nahezu Native, das wirst du mit A und Krach vielleicht
mal messen können, wo es halt in der VM Probleme gibt, ist wenn du wirklich irgendwelche advanced
3D Sachen machen willst, also so simple Sachen tun, ja also ich kann ja ohne Probleme GLX,
Moment, weiß gar nicht was man für GLX Gears installieren muss, Mesa Uthills, ok ja, also
so simple Krämpel wie GLX Gears kannst du machen, du kannst sogar diesen 1D Benchmark
laufen lassen, der hat dann aber Probleme mit den Effekten, na Pass Thru ist nicht so
einfach in dem Fall, zumal Pass Thru an sich immer Probleme macht, weil du dann beispielsweise
noch ein extra Kabel an Monitor brauchst, weil ja du hast dann einmal einen Desktop
und einmal ein Pass Thru auf der Grafikkarte und so, das macht es im Handling auch nicht
einfacher, also 3D Sachen gehen auch, aber sobald es advanced Funktionen braucht, also
ich gehe nicht davon aus, dass Blender gescheit funktioniert in der VM, genauso wenig wie GPU
Decoding, Encoding, hast ja keinen Zugriff auf die Hardware und solche Sachen, das funktioniert
nicht, aber alles andere, was jetzt nicht irgendwie 3D Rendering ist oder so oder Spiele
oder sowas, das funktioniert in der VM relativ gut, korrekt, deswegen habe ich das ja auch
im Video gesagt, wenn du Windows und Linux in der VM parallel benutzt, so wie ich das
hier mache, ich habe hier auch ein Linux, ich habe hier ein Linux in der VM und hier
in Windows, da kannst du nämlich Spiele und 3D Sachen einfach unter Windows machen und
alles andere kannst du unter Linux machen, du kannst theoretisch auch normale Surfen unter
Linux machen, wenn du nicht gerade Videos gucken willst wegen GPU Decoding, dann bist
du auch prinzipiell immer sicherer aufgestellt, für ich fange mir über ein Browser irgendwelche
Windows Malware ein, also da kannst du echt nichts sagen.
Ich meine man muss natürlich auch das passende Setup nehmen, ich habe hier beispielsweise
i3, erstens weil ich i3 mag und zweitens weil i3 halt keine fancy Window Effects hat oder
so, das einzige was ich habe ist Transparenz, ist hier guckt, ist Transparenz oben in meiner
Leiste, das ist aber auch wirklich das einzige, ja ich meine letztendlich soll das ja jeder
machen wie er will, ne das ist wahrscheinlich eher ein Ubuntu Ding, es kann ja im Endeffekt
jeder machen was er will, für meinen Anwendungszweck und das ist ja auch das was ich im Video beschrieben
habe, ja aber nicht mit Vmware Workstation, vielleicht mit Hyper V oder sowas, ja und
das was ich im Video beschrieben habe war ja mein Einsatzzweck und mein Einsatzzweck
ist Linux hier auf dem zweiten Desktop, Windows auf der anderen Seite, ja Videos schneiden,
OBS streamen, spielen, so Sachen mache ich unter Windows, Sachen basteln und programmieren
mache ich unter Linux, ganz einfach, man muss ja nicht so sehr sich auf diese Windows vs
Linux Diskussion einlassen, unterm Strich sollte man einfach das System nehmen was sich für
das was man machen will jetzt in der Situation am besten eignet und wenn man Anwendungen
hat wo es am besten ist das unter Windows zu machen dann macht man es unter Windows
und den Rest macht man unter Linux, fertig, so diese ganzen Glaubenskriege so Linux vs
Linux oder doch eher Mac oder Android vs IOS oder Xbox vs Shitbox oder Playstation vs
Shitbox und hast du nicht gesehen ist alles kompletter Unsinn, einfach das nehmen was
für das jeweilige Anwendungsgebiet am sinnigsten ist und fertig, das rumge Fanbeue wird dir
keine Firma danken am Ende und wenn es TempleOS ist, weil du gerne betest im Terminal dann
neben TempleOS, wobei ich glaube TempleOS hat kein Browser du kannst ja nicht mal ins
Internet, aber das Internet ist wahrscheinlich auch will Jesus auch nicht dass du ins Internet
gehst, das sind so viele fiese Sachen, ja genau, warum nicht, genau so, na gut wenn
es um alles machen geht dann kannst du prinzipiell auch DOS verwenden, so rein von der Theorie
wie her alles machbar, es geht ja um den Aufwand und wie gut das Handling ist und gerade wenn
es um Terminal Benutzung geht, da bist du halt unter Linux um Längen besser aufgehoben
als unter Windows und nachdem bei mir entwickeln oftmals eine Kombination aus IDE Editor und
Terminal ist und vor allem meine Software die ich entwickle auch für Linux zu 90% entwickelt
wird, macht es für mich keinen Sinn mehr das unter Windows zu machen, meinst du WSL,
ja WSL ist ganz ok, gerade WSL 2 mit WSL G ist eine coole Sache, für alle die keine
VM im Fullscreen laufen lassen können auf dem zweiten Bildschirm, wie machst du das
mit Updates, selten, ich glaube ich habe nur eine VMWare 16 Lizenz, aber also ich hatte,
das Problem hatte ich wirklich noch nicht, also ich habe es glaube ich noch nie geschafft
dass ein VMWare Update meine VM kaputt gemacht hat, also ich hatte schon mal, dass ich eine
VM nicht mehr booten konnte nach dem Update, weil meine Gerätesettings irgendwie inkompatibel
waren zur neuen VMWare Version, auch wenn das eigentlich nicht passieren soll, weil
die Versioniert sind mittlerweile die Gerätesettings, das hatte ich aber schon, da musste ich weiß
ich noch, ich glaube ich hatte damals irgendwie eingestellt Festplatte ist IDE und das ging
dann nicht mehr, da musste ich umstellen irgendwie auf Festplatte ist SATA oder so, was der emuliert
und dann ging es auch wieder, also aber das Daten wirklich futsch waren durch den VMWare
Update kann ich mir gar nicht vorstellen, weil deine Disks liegen doch in einem Orten
aber dir auf der Platte, das ist doch dem VMWare Update egal, wenn du es sagst wird
so gewesen sein, aber wundert mich ja 2003 mit.NET, da war.NET 2 gerade so absehbar
also Framework, das stimmt
aber noch besser ist es einfach unter Linux zu entwickeln, dann hast du die ganzen Probleme
nicht, ich meine ja für Deployments Sachen und Builds ist natürlich Docker ein Segen,
viele Probleme hat man damit gar nicht mehr, die man früher umschiffen musste, ja Virtual
Box kann sein, deswegen ich habe Virtual Box glaube ich installiert, habe ich Virtual Box
installiert, jetzt kommen gleich wieder die Leute an und sagen Monka ist der Desktop,
ja ich habe Virtual Box installiert, aber ich verwende es eigentlich gar nicht mehr,
habe ich überhaupt irgendwas mit Virtual Box, ja oft, startet noch nicht mal mehr Leute
guck mal, es launt noch nicht mal, es ist so kaputt, es ist so kaputt, dass es nicht
mal startet, ist auch schon ein bisschen älter, ach ich habe die Mac VMs damit gemacht, ja
stimmt du hast recht zum ausprobieren
Ich dachte erst du meinst du meinst visual basic deswegen war ich etwas etwas verwirrt
Vor allem ein workstation hier guck
Fullscreen fertig
Vor allem ein workstation beste du warst genau used man chromium zum surfen
Ok ich gebe zu dir die antwort war etwas gebadet ich weiß dass du das ich weiß dass du weißt dass es ein browser ist ja
Du machst damit das gleiche was du mit chrome machst nur dass es kein chrome ist eigentlich ist es reichlich unsinnig chromium zu verwenden
Ich habe chromium verwendet aus dem grund weil ich einen browser ohne chromecast haben wollte
Das war so der ursprüngliche grund damals und dann bin ich irgendwie drauf hängen geblieben
Also ich habe ja mehrere sachen also ich habe firefox installiert chrome
chromium und
Irgendwann hatte ich auch noch wie waldi installiert also ich mach das so firefox verwende ich exklusiv für youtube
Und sachen die damit zusammenhängen
chrome
Verwende ich exklusiv für homeoffice und die arbeit und chromium verwende ich für mich selbst für alles andere ja
Edge hast du auch noch drauf edge habe ich installiert das ist richtig aber edge verwende ich nicht
Ja unter linux kann dir das passieren
Aber in der regel geht es nach einem reboot wieder weil vor weil virtualbox über
Wie heißt das dkms dynamische köln module
Die dmks oder so geht du musst auf jeden fall rebooten nach dem köln abteil
Lass es wieder geht
So leute jetzt ist bettgetime
Ich habe alles beantwortet was es zu beantworten gab wir machen mit rust vielleicht die tage weiter ich glaube morgen mache ich was anderes da muss ich mein
mein hirn erst mal schonend vor rust
Shortcut der ist standardmäßig dabei
Control windows tasten und feile drücken feiltaste rechts feiltaste links feiltaste rechts feiltaste links
Könnten wir machen ja oder go oder so den kram in meiner etwas
Weniger anstrengenden programmiersprache machen
Ne in pearl nicht
Ich weiß nicht mal was das ist was ich an wie eine konferenz oder so
Ach so eier was du machen musst alles habe ich vergessen zu sagen
Du musst control alt vorher drücken
Control alt release den fokus aus der vm und dann kannst du control window taste feile machen ich habe das schon so verinnerlicht
Control alt control windows taste ich machte schon ganz automatisch
Nee ich muss wirklich ins bett
Okay geht das ist nice
Alles klar wir sehen uns bis denn macht's gut cu
