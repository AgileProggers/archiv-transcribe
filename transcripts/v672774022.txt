So, da sind wir ein bisschen später als gedacht.
Eigentlich habe ich gedacht, ich Kreiselgrinder heute Abend ein bisschen komme gar nicht on,
aber ich hatte irgendwie dann doch keinen Bock mehr.
Hab gedacht, komm, machst du noch, machst noch mal eine Stunde an, ey.
Oh, ich bin irgendwie voll kaputt heute.
Es war überhaupt schon jemand da.
Cute Chat.
Excellent Chat.
Ah, der KarniL10 ist schon da.
Bam, 2, 4, 6, okay, ein paar sind doch noch da.
Angeblich sind nur vier Leute da, das heißt wir haben jetzt schon 50% im Chat.
Quickmuffs.
Phoenix ist auch am Start, ne Leute, ich bin halt irgendwie total kaputt.
Kennt ihr das irgendwie, dass manchmal, dass ihr das Gefühl habt, also immer so die Leute,
die auch so IT und Umfeld arbeiten, habt ihr manchmal den Eindruck, dass ihr irgendwie
so Babysitter machen müsst für irgendwelche Projektmanager, weil die eigentlich das Projekt
managen sollen, aber gar keine Ahnung haben davon, was die eigentlich machen.
Ja, ist irgendwie sehr merkwürdig.
Was geht, wie gesagt, nicht viel.
Was gibt es eigentlich für sinnvolle IT-Zertifikate, das werde ich immer im Stream gefragt, so
nach dem Motto, Max, was hältst du von Zertifikaten, ich habe gar keine Ahnung, was ist für gute,
was es für gute Zertifikate gibt, müssen wir gleich mal so was, useful IT, komm, wir
suchen mal auf Deutsch, sinnvolle IT-Zertif, IT-Zertif, weil ich habe echt keine Ahnung,
was da für gute Sachen gibt.
Also ja, mal von den üblichen Verdächtigen, so was, wie ein CCNA abgesehen, aber ein CCNA
juckt doch im Endeffekt auch keinen, CCNA ist das, ist quasi der Cisco Noob, nur nicht
ganz, also der Cisco Einsteiger plus nicht mal ganz so Noob, CCNA Krieger hat doch, ja
hat doch entweder jeder, oder kannst du einem, was mit dem CCNA lernt, kannst du einem in
der Woche beibringen.
Jaja, also, ja, aber wie gesagt, jetzt wo ein bisschen mehr Leute da sind, kennt ihr
das?
Wenn ihr, wenn ihr das Gefühl habt, ihr müsst irgendwie Babysitter für irgendwelche Projektmanager
machen, weil die sonst ganz merkwürdige Dinge machen würden, also zum Beispiel, zum Beispiel
habe ich, habe ich bei uns ein Ticket gekriegt, da steht drinnen, ich soll, also nicht näher
definiert, irgendwelche Ressourcen schätzen.
So, da habe ich erstmal gefragt, ok, was genau meinste denn eigentlich?
Leute, Hardware, Cluster-Ressourcen, was, was denn für Ressourcen, da hat es großartig
ausgeholt, so nach dem Motto, ja alles, alles, und dann habe ich gesagt, ja, was wollt ihr
denn machen?
Ja, sie wollen das quasi einmal die komplette, komplette Infrastruktur klonen, habe ich auch
gemeint, so, seid ihr euch sicher, also ist, ist, ist euch klar, was ihr da gerade erzählt
oder nicht, komplette Infrastruktur klonen, auch noch ein drittes Rechenzentrum oder was,
oder wie, ähm, hast du das mitbekommen mit Google plus Deutsche Bank, nee, nee, habe
ich nicht mitbekommen, was denn?
Ne, ähm, so, und dann, und dann, was witziger war, jetzt lief es darauf raus, jetzt lief
es darauf raus, dass, wir haben ja auch ein paar Kubernetes, wir haben ja auch zwei Kubernetes
Cluster und ein paar Linux Container und sowas, ich habe halt gefragt, ok, was, was wollt
ihr denn für Ressourcen wissen bei, bei VMs oder gar bei Container, und da haben die
geschrieben, die Anzahl, mir gedacht, ok, das ist zwar überhaupt nicht das, was irgendwie
sinnvoll ist, aber, dann schreibe ich euch halt mal rein, wir haben, äh, ein Pod davon,
zwei Pods davon, drei davon, zwei davon und sonst was, wir mal gucken, was ihr davon
macht, ja, aber übrigens, dann habe ich nochmal die Hardware rausgesucht, worauf das läuft,
und dann haben sie erzählt, sie wollen irgendwie was, was komplett anderes, also, ich bin,
ich meine, ich muss doch nicht die Arbeit von irgendeinem Projektmanager machen, das
kann der machen, der soll mir sagen, was er haben will, ja, also, wenn er das nicht weiß,
da kriegt er halt genau das, irgendwas, weil woher soll ich es wissen, äh, das kommt meist
der, dass die Projektmanager zum Teil technologisch und nicht ansatzweise wissen, was da abgeht,
ja, das stimmt, aber es wäre schon mal allen Beteiligten geholfen, wenn sie da nicht so
tun würden, so tun, so tun würden, als ob sie es wissen, weil viele Projektmanager haben
so einen, haben wahrscheinlich einen Rhetorikkurs gemacht, so nach dem Motto, wie verkaufe ich
überzeugend, wovon ich gar keine Ahnung habe, das ist bestimmt ein sinnvoller Skill, wenn
es darum geht, Projekte irgendwie noch höhere Managementleuten zu, äh, präsentieren, allerdings
beim Einsammeln von Informationen sollte man diesen Skill deaktivieren, weil ansonsten
wirkt das so, als hätte man Ahnung, obwohl man gar keine Ahnung hat, dementsprechend
kriegt man gar nicht die Infos, die man haben will, das wäre ja schon immer ein erster
Schritt, wenn man das gleich mal sagt, so nach dem Motto, ok, ähm, erklär mal langsam,
bei uns ist auch immer geil, der interne Auftraggeber von einer internen Software kann sich nichts
vorstellen, also, alles erstmal bauen, sodass alles klappt und danach umbauen oder neue
exzellent effizientes Zeitmanagement, ja, ja sowieso ähnliche Dinge haben wir auch,
bei uns läuft das aber meistens so, irgendwelche Marketingköppe, ich hab eigentlich keine
Ahnung, weil das alles so ist, machen irgendwie ne ganz tolle Präsentation zu was, wovon
eigentlich auch keiner genau weiß, ähm, was es werden soll, ja, zum Beispiel, ich muss
das ein bisschen abändern, damit es nicht zu klar ist, um was es geht, oh Tainsaw geht
hier wieder ab, drei Subs, danke schön, wer kriegt denn was, der Twinkower kriegt was,
End of Function und der Akte, Poggers, exzellent, Big Brain, Huge Subscription, das ist ja quasi
fast schon, Moment, ich finde es nicht, exzellent, ähm, genau, und bei uns halten die immer
irgendwelche, irgendwelche geilen Präsentationen, bevor man genau weiß, was abgeht, so, und
wir haben jetzt was, da hat irgendjemand gedacht, ok, Tesla und Elon Musk und SpaceX und sowas,
ist grad voll angesagt, und hat dann gesagt, wir machen jetzt ein Projekt, ähm, unser
Flug zum Mars, es hat mit dem Flug zum Mars nichts zu tun, also nicht, das heißt einfach
nur so, ach ne, Elon Musk, nicht Elon Musk, Elon Musk, komm ich auf, Elon Musk, Elon Musk,
so, zumindest ist auch wurscht, mir gehts ja nicht, zumindest ist das grad angesagt,
SpaceX, Elon Musk, Tesla, alles mögliche, und da hat jetzt irgendjemand bei uns ein Projekt
ins Leben gerufen, unser Flug zum Mars, es hat, wie gesagt, ich hab es ein bisschen abgewandelt,
es ist ein bisschen anders, und wenn man da jetzt denkt, ok, wir wollen zum Mars, da bin
ich der erste, der sagt, ich flieg da garantiert nicht mit, wenn wir zum Mars fliegen, äh,
Fleege Express Twitch Prime, dankeschön, vier Monate, huge, so, und, um was es letztendlich
geht ist, und warum das so heißt, hat nur zwei Gründe, erstens, weil man Mars abgekürzt
hat zu irgendwas, frag mich nicht, blah, services, irgendwas, also, weil man gesehen hat, Mars
ist eine coole Abkürzung, und weil man eine Präsentation machen konnte, die, kein Witz,
aufgebaut ist wie eine Rakete, sieht aus wie eine Rakete, ja, so, sieht cool aus, hat natürlich
keinen Mehrwert, und was es im Endeffekt gehen soll ist, komplett abstrakt, dass alle services
quasi in die Cloud wandern sollen, so, komplett abstraktes Ding, so, und es hat da jetzt irgendeiner
präsentiert, und hat sich gefreut, dass das gut angekommen ist, weil es so eine stylische
Präsentation war, aber was jetzt damit gemacht werden soll, weiß keiner so genau, es ist
einfach da, gifted it here so once a Blockwatcher, Big Brain, der Blockwatcher hat was gekriegt,
dankeschön, für den fünften Sub hier schon, exzellente, naja, und sowas haben wir laufend,
und ich weiß, dass es woanders nicht viel besser läuft, man sagt immer so, oh, ich
brauche mal ein Wasser hier, wo habe ich denn, glaube ich im kleinen Wasserholen, ich höre
das ja auch von anderen, dass es da ähnlich läuft, wo ich mich immer frage, wo es mich
dann nicht wundert, dass manche Start-ups Sachen einfach eleganter und besser hinkriegen
als irgendwelche großen Dinger, wenn man sich überlegt, wie das bei uns sein wird,
also das Scam-Train läuft, der Scam-Train ist am Start, Lim Squizzy hat Twitch Prime
abonniert, dankeschön, der Chibay-Train läuft, ok, solange der Chibay-Train läuft, erzähle
ich euch das nochmal kurz weiter, das Scam-Train, ja, NicoCS Twitch Prime, sieben Monate, dankeschön,
aja ja, Poggers Subscription, so, was wollte ich jetzt sagen, genau, also das wundert
mich manchmal nicht, wie gut das Start-ups hinkriegen, weil da ist einfach viel Overhead
nicht vorhanden, ja, bei uns ist es teilweise so, jetzt mal ganz übertrieben gesagt, aber
es ist schon ziemlich nah an der Wahrheit dran, also bei uns ist es manchmal so, wenn
du es richtig machst, also so, dass es dir was bringt, dem eigenen Team was bringt und
alle anderen das Gefühl haben, es hätte was gebracht, dann musst du Folgendes machen
bei uns und wahrscheinlich ist das bei vielen, die in einem größeren Laden machen, ähnlich,
man tippt eine Zeile auf der Shell, die irgendwas halbwegs Sinnvolles macht, es ist gar nicht
mal so entscheidend, wie sinnvoll das ist und danach geht man in Gruppenleiter-Runden,
Abteilungsrunden, IT-Runden, Statusrunden und erzählt für den nächsten Monat, dass man
diese eine Sache gemacht hat und dann feiern sich alle richtig krass drauf ab, dass man
wieder so geile Sachen gemacht hat und am Ende hast du eigentlich nichts gemacht, richtig,
aber alle haben das Gefühl, es war richtig geil, was bei uns teilweise für kleine Dinge
riesig breit getreten werden und fünf Stunden Retrospektive, sonstige Abstimmungsdinger gemacht
werden, das nimmt teilweise total überhand. Scheiße, das ist bei uns genauso, ey ich
glaube, das ist bei den meisten so. Wir haben übrigens noch mehr Subs, hab ich gerade gesehen,
General Slane hat auch wieder Subs, drei Monate, dankeschön, excellent Subs, big brain. Ja
und der Witz dabei ist ja auch noch, warum ich das jetzt erzähle ist, der Captain Peng
spricht's gerade an, der Witz dabei ist auch noch, dass das alle lieber ist, wie man macht
in seiner Zeit was Sinnvolles. Wenn ich mir überlege, was ich hab, ich hab heute, glaube
von ungefähr acht Stunden, wo ich da war, hab ich Wartungsarbeiten-Meeting gedürnt
gemacht, eine Stunde, in einem Team-Meeting, in dem Team bin ich zwar nicht, aber da bin
ich öfters dabei, Besprechung, neues Release-Runde, eine Stunde, irgendwelche Ticket-Abstimmungs-Meetings
bestimmt auch noch mal eine Stunde und dann hab ich mit einem Kollegen nach der Runde
noch mal eine halbe Stunde über aktuelle Sachen geschwätzt. Also quasi, ich war bestimmt
viereinhalb Stunden mit zu 90% sinnlosen Laberstell-Sachen beschäftigt. Äh, was? Nee, also Skill-Killer,
da hab ich nix mit zu tun. Ich muss, ich muss, ich muss keine PR-Sachen, ach du weißt, Pull-Requests!
Ich dachte du meinst mit Werbung. Naja, also PR-Approven ist ein Teil davon. Das ist das,
was man unter anderem macht. Das war einfach, ist es ja nicht. Mit PR-Approven ist ja nicht
getan. Man muss sich ja auch erstens mal die Änderung angucken, die Änderung mit den
anderen Änderungen, die Leute machen, unter einen Hut bringen. Und oftmals funktioniert
es nicht, sich mit den Leuten zusammensetzen, gucken was es funktioniert. Das an die restliche
Welt verkaufen, das war übrigens heute, weil ich meinte Runde zum neuen Release. Heute
ist nämlich Release-Start in unserer Testumgebung. Und da war die Runde heute dafür. Der restlichen
Welt verkaufen, was für geile Änderungen haben. Da haben wir ein richtig langes Chainslot
mittlerweile zu, wo dann nach Möglichkeit für auch nicht ganz so IT-versierte Leute
drin steht, was passiert. Zum Beispiel, dass jetzt eine neue Domain verwendet werden kann
für Mails und sowas. Sowas steht dann da drin. Manche Sachen, die kompliziert sind,
schreibe ich da gar nicht rein, weil die Noobs damit nichts anfangen können, sondern wenn
ich die Auswahl habe, wie, ich schreibe rein, wir haben jetzt eine neue HA-Proxy-Version,
die Intel IES Hardware Encryption verwenden kann, oder ich habe die Möglichkeit reinzuschreiben,
wir können jetzt eine neue Absender-E-Mail-Adresse verwenden. Dann schreibe ich wahrscheinlich
rein, wir können eine neue Absender-E-Mail-Adresse verwenden, in das öffentliche Aushängeschild
Chainslot, weil mit der anderen Sache kann kein Mensch was anfangen. Was wir wahrscheinlich
machen würden ist, ich würde das umschreiben, ich bekomme einen Change, da steht drin, okay,
wir haben eine neue HA-Proxy-Version, die kann jetzt SSL-Beschleunigung mit der CPU machen,
wunderbar. Da steht er drin, das würde ich aber so nicht reinschreiben, sondern ich
würde irgendwie das in Performance Improvement umdichten, was es ja unter dem Strich auch
ist und das irgendwie als Load Balancing Performance Verbesserung oder so verkaufen. Das finden
wir wieder alle geil. Sind Merch-Konflikte bei euch Teil des Prozesses oder versucht
ihr das zu vermeiden? Also vermeiden kannst du es nicht. Also ja, das ist Teil, das vermeiden
kannst du es nicht. Also ich habe das bei uns als relativ klassische Git-Struktur da
aufgezogen, also sprich, wir haben, ich zeige euch mal ein Bild, wir machen das nicht genau
so, aber ich glaube da gibt es ein ganz gutes Bild, was Branches angeht. Leute, ich weiß,
Big Brain, ja so ungefähr ist es bei uns, genau. Das Big Brain, aber ich weiß auch
umgedreht, dass es ein paar interessiert. Also wir haben es folgendermaßen, ja doch,
das trifft es eigentlich ganz gut, wie es hier aufgemalt ist. Also wir haben eine Master-Branche,
da kommt alles Mögliche rein. Von Server-Config bis irgendwelche Mail-Config-Files, XML-Config
für Java-Gedöns, zumindest wenn es um Infrastruktur-Gedöns geht. So und das kommt da rein, per
Software ist es ähnlich. Ich weiß, Master-Branche ist voll verpönt aktuell, aber wie gesagt
bei Software ist es ähnlich. Also zumindest, wir haben eine Master-Branche und das heißt
bei uns auch tatsächlich immer noch Master, ich werde das auch nicht umbenennen, weil
ich da in so vielen Stellen was umbenennen müsste, dass das eigentlich den Aufwand nicht
rechtfertigt. Es sei denn, irgendjemand kommt auf die Ideen, fühlt sich getriggert dadurch
und unser Abteilungsleiter sagt, wir müssen das jetzt umbenennen, aber ich glaube, ganz
so verrückt sind sie noch nicht. Zumindest, wir haben eine Master-Branche und ähm, übrigens
da stimmt überhaupt nicht, was das Bild hier zeigt. Das ist gar nicht richtig. Äh, ne,
das, okay die Bilder sind voll für'n Arsch. Ne, stimmt nicht so. Wir machen's wieder Git-Model-Linux-Kernel,
wir machen's ziemlich genau wie der Linux-Kernel, aber halt nur vom, vom Branch. Äh, ja, so,
so in der Richtung machen wir's, genau. Ähm, das, das trifft's, das trifft's eigentlich
ganz gut. Also wir haben eine Master-Branche, von da kommt alles und da geht auch alles
rein. Also sprich, das hier ist irgendwie Stand X und irgendeiner ist jetzt der Meinung,
da kommen wir nämlich jetzt auch gleich, wenn wir das in Merge-Konflikten machen, ähm,
da kommt jetzt irgendeiner auf die Idee, okay, wir brauchen, was ich, neue Zertifikate oder
so, oder, äh, wir brauchen, neun, neun Mail-Domains oder so. So, und, oder er muss den, er muss
bei dem, er muss für die Java-Anwendungszeuge muss irgendwie den Zertifikat-Store updaten
oder sowas. Okay, ähm, dann macht er sich den Branch auf, vom Master hier, macht da
seine Commits drin und macht ein Pull-Request auf, zurück auf Master. So, jemand anderes
macht parallel auch was und, äh, entwickelt sagen wir jetzt an, an irgendeinem anderen
Feature ist egal was. So, und da können die hier parallel entwickeln und beide machen
ein Merge-Request auf, wenn's so weit ist. Der macht den hier auf, der macht den hier
auf und das ist dann die Stelle, wo ich mir das angucke, was die gemacht haben. Und das
passt meistens und es kommt halt nur zu Merge-Konflikten, wenn der und der parallel in den gleichen
Files rumwurstet. Und das ist recht selten, weil die meisten Leute ihre Aufgabenfelder
haben. Das kommt nicht so oft vor, kommt vor bei Basic-Geschichten wie SSL-Zertifikaten,
zum Beispiel im Zertifikat-Store, da kommt das öfters vor, weil da viele Leute mal dran
rumwursten. Ja gut, wenn's den Merge-Konflikt gibt, da siehst du den Pull-Request schon.
Das Beste ist, die Leute lösen das selbst, indem sie das rebasen auf Master vorher und
den Merge-Konflikt selbst lösen. Oder aber, wenn das nicht geht, dann nehm ich den da,
und mich und wir überlegen uns zusammen, wie die Änderung am Ende aussehen muss. Nicht
nur gleiche Files, sondern sogar gleiche Zeilen. Ja, richtig. Gleiche Files allein ist Git
teilweise recht clever, aber da muss man auch drauf achten, Git macht da manchmal, zwar
nicht oft, aber manchmal komische Dinger, wenn es die gleiche Datei parallel ändert.
An unterschiedlichen Stellen. Wo der Unterschied ist, dass die noch einen Develop-Branch haben,
wo sie was drauf machen, und hier wird alles auf Master gemacht. So, und das ist eigentlich
kein großes Ding mit Merge-Konflikten, muss man ehrlich sagen. Das lässt sich recht
easy handeln. Es gibt nicht viele, aber wenn's welche gibt, gibt's halt welche, die sind
teilweise echt eklig, aber 80% der Merge-Requests, oder ne, 80% der Konflikte, die wir haben,
sind wirklich kein großes Ding. Das kriegt man mit den beteiligten Leuten relativ gut
hin. Bei SSL-Zertifikaten ist es auch einfach, da brauchst du in der Regel einfach beides,
es ist nur parallel entstanden. Na gut. Und im gleichen Atemzug, wie hier der Pull-Request
ist, wird dann auch ein bisschen Infos dazu gesammelt, sprich, was genau macht das, wie
verkauft man das am besten, und wir schreiben das in unser Change-Log für die nächste Version,
und dann sind die Leute, die entwickeln, eigentlich fertig. Da müssen die sich nicht
mehr weiter drum kümmern. Das nächste mach ich, dann mach ich so ungefähr sowas wie
das hier, mach ich dann, ich mach nen Tag drauf irgendwann mal auf Master. Also man taggt
ja am Master nicht, mein Tag ist ja ne Zeige auf nen Commit, hat mit Branches überhaupt
nix zu tun, aber zu dem Zeitpunkt bin ich im Master, sag ok, keine Ahnung, an der Stelle
hier jetzt, jetzt ist es laut Kalender wieder soweit, da mach ich nen Tag drauf auf diesen
Commit hier, und dann kommt der Commit dahin. Das muss man machen, mit dem Tag, erstens
weil es besser nachvollziehbar ist, und weil man sich sicher sein will, dass wenn man
Hotfixes macht, wenn es nur so einfach ist wie hier, ist das kein Ding, aber bei uns
ist es noch ein bisschen komplizierter, dass man sicher ist, man bekommt nicht zwischendurch
irgendwelche Commits mit rein, die man gar nicht haben will. Zum Beispiel, was ich auch
schon gelesen hab, was einige Leute verkehrt machen, so hat die Motto, die taggen das hier,
das hier ist Tag 1, da machen sie hier weiter und sagen, das hier ist jetzt, oh fuck, bei
Version 1 ist was kaputt, wir brauchen jetzt nen Fix, und dann sagen, taggen sie das hier
als Version 1.1, das ist aber Fail, weil in der Zwischenzeit sind die ganzen Änderungen
dabei, das heißt, Version 1.1 wäre dann nicht Version 1 plus nen Fix, gleich Version 1.1,
sondern eigentlich wäre das hier unten dann Version 2 fast schon, also das geht so nicht,
deswegen muss man das taggen, und wenn man dann was fixen will, dann macht man das mehr
oder weniger so, ich nehm mir das aktuelle Tag, check das aus, cherrypick den Hotfix
Commit, deswegen leg ich auch immer Wert darauf, dass Hotfixes möglichst klein sind, nach Möglichkeit
auch nur ein Commit, weil da lässt sich das einfacher cherrypicken, dann check ich den
Tag aus, mach den Cherrypick von dem jeweiligen Hotfix Commit, und dann mach ich den neuen
Tag drauf, und dann hast du nur die alte Version plus den einen Fix, und dann ist gut, wo man
dann natürlich darauf achten muss, ist, dass wenn man Hotfix kriegt, dass der natürlich
auch in Master kommt, weil sonst sehen den die anderen Leute nicht, so machen wir das,
wir machen das ziemlich klassisch, so jetzt mal auf die anderen Sachen einzugehen, die
noch gekommen ist, kann man einen Pullrequest direkt auf einen Tag merchen, eh theoretisch
schon ja, ich weiß nicht ob das GitHub, Bitbucket oder sonst was unterstützt, Git technisch
ist das kein Problem, Git technisch geht das, also du kannst den Tag auschecken, kannst
dort einen Branch reinmerchen in diesen Stand, und danach einen neuen Tag draufsetzen, das
geht, das will man aber in der Regel nicht machen, weil dann hast du das Problem, die
Leute die sich das vom Master auschecken, stellt euch mal vor, das hier ist die aktuelle
Version, irgendeiner checkt sich einen Branch aus vom Master und sagt dann ja, ich möchte
den jetzt da rein, dann bringt der ja alle anderen Änderungen, die in der Zwischenzeit
zur nächsten Version passiert sind mit, das will man ja nicht, also deswegen macht man
das eigentlich anders, wenn man einen Hotfix hat für die aktuelle Version, dann nehmen
sich die Leute für ihren Hotfix Branch als Grundlage den aktuellen Tag, oder wenn es
was ganz kleines ist und sie das für Master eh schon gefixt haben, nimmst du einfach
das Comet und Cherrypicks rein und hoffst, dass es funktioniert, was meistens klappt,
aber wenn es was ein bisschen umfangreicheres ist, musst du als Grundlage für den Hotfix
Branch den aktuellen Live Produktions Tag nehmen, weil sonst bringst du aus dem Master
die halbe nächste Version mit, wenn du das mercht, das willst du ja nicht, deswegen wird
da auch nichts gemercht, sondern so gut wie immer rein Cherrypicked, was besonders gut
ist, wenn man halt nur ein, zwei Comets hat.
Cherrypicks sind für mich immer noch Kid Magic, da ist eigentlich relativ wenig Magic
dabei.
Sollte man nicht eh pro Release einen Branch sich gönnen, nö, also kann man, wenn man
mehrere Releases parallel supporten will, haben wir auch, wir haben da eigene Namen
für, aber im Endeffekt haben wir nen Testing Branch und nen Live Branch noch zusätzlich
aus dem Grund, weil es manchmal vorkommt, dass spezielle Änderungen nur für die Testversion
gemacht werden, um zu erproben, ob irgendwas funktioniert.
Das sind dann auch Comets, die nicht Bestandteil im aktuellen Release sind, die werden dann
quasi zusätzlich noch obendrauf in den aktuellen Testing Branch Cherrypicked, weil die dürfen
ja nicht ins Release, sonst kommen ja irgendwelche Testing Features live, das möchte man ja
nicht unbedingt.
Ja, aber ansonsten machen wir nicht pro Release einen Branch.
Der Colonel macht's, der Colonel hat so nen Old Stable und Older Stable und so komische
Dinger noch, das haben wir nicht, und eigentlich braucht man das auch nicht.
Also wir haben nen Master Branch, wir haben nen Testing Branch, so die Kurzvariante ist
das jetzt, und wir haben nen Live Branch, die drei Sachen haben wir, dann gibt's noch
hunderttausende Feature Branches von den Leuten, die Sachen entwickeln, aber das
war's.
So, und Hotfixen, wie gesagt, von dem jeweiligen Tag, per Cherrypick zurück, und du hast ja
das Tag auf das Comet, also du brauchst ja keinen Branch für das aktuelle Release noch
zusätzlich.
Wir haben nen Live Branch und dort kommt immer das aktuelle Release rein, wenn's soweit
ist.
Was ich ab und zu mal mache ist, dass ich die einmal im Jahr lösche und nochmal neu
aufmache.
So, aber ansonsten brauchen wir das, brauchen wir das nicht.
Wieso streamst du eigentlich in 48Hz, ist bei deinen YouTube Videos auch so, also Stream
in 48Hz mach ich, damit es besser aussieht und weniger Bandbreite als 60Hz braucht.
Also es sieht besser aus als 30FPS, und es braucht weniger Bandbreite als 60, ist eigentlich
die Big Brain Lösung, 48FPS Stream.
Wie oft habt ihr einen neuen Master-Comet pro Tag?
Boah, ganz schön viel, ähm, Tag ist einfach nur einem Comet einen Namen geben, korrekt,
das ist, denn Tag ist, dass du's einfacher wieder findest, das Comet, du könntest ja
auch selbst ne Tabelle machen mit Comets, aber wozu, wenn's Tags gibt, wie oft habt
ihr also, was haben wir denn so, 20, 20 Comets am Tag oder so, im Durchschnitt, na, wobei
das kommt, manchmal ist es deutlich mehr, manchmal ist es auch weniger, ich sag mal so
im Durchschnitt 20 Comets am Tag, ungefähr so, würd ich sagen.
Also was ich bei Merch-Konflikten immer ganz gern verwendet hab, ist VimDiv, aber da bin
ich mittlerweile auch von weggekommen, so ich mach das, ich mach's komplett von Hand über
den Editor, wenn man sich da dran gewöhnt hat, ist gar nicht schlecht, am besten ist,
wenn man, ähm, nen Editor mit Git-Plaim-Support hat, dass man sich direkt anzeigen lassen
kann, wer von wem welche Änderungen sind, aber ansonsten sind Merch-Konflikte, finde
ich, am einfachsten von Hand gelöst.
Äh, du machst, doch, doch, mach ich auch, allerdings jetzt nicht so ultratief, ich guck
mir an, ob's da, äh, irgendwelche Verschreiber gibt oder ob da offensichtlich Mist drin
ist.
Letztens hat einer nen, nen Python-Monitoring, äh, Change gemacht, also für, für die,
für unser Prometheus-Monitoring in nem Python-Skript geupdatet, da hab ich gleich gesehen,
die Eindrückungen stimmten nicht, sowas seh ich schon, im Detail kann ich's meistens
gar nicht genau beurteilen, ob das stimmt, ja.
Wenn da jetzt irgendwie einer sagt, ok, der Logik nach muss das kleiner 5 sein und es
stimmt nicht, dann glaub ich ihm das trotzdem, aber das, keine Ahnung, ob das stimmt, also
so sehr kenn ich mich damit nicht aus.
Äh, wie viele Feature-Branches kann man denn haben oder was ist die Regel, äh, unbegrenzt
viele, Git juckt das überhaupt nicht, wie viele Branches man hat, Git wird auch nicht
langsam durch.
Also wir haben Leute, die haben glaub ich schon 5 Jahre oder so nix mal aufgeräumt,
die haben 350 offene Branches, ich hab mir mal überlegt, ob ich was basteln soll, was
die Leute benachrichtigt, aber wozu, juckt nicht, kannst so viel haben, wie du willst.
Ähm, die Eindrückung, ja, das ist typische First World-Python-Problems, reicht da eine
Proof oder müssen das mehrere Leute erst bestätigen, das müssen mehrere Leute bestätigen
oder, ich weiß, klingt jetzt, klingt jetzt vielleicht sogar schon ein bisschen überheblich
oder ich, das reicht meistens auch, ähm, also wir haben es so gemacht, dass wenn es
ein Thema ist, wo es noch ein paar andere Leute gibt, die sich auskennen, zum Beispiel
haben wir einen Repo, da sind alle unsere DNS-Config drinne und wenn dort einer DNS-Changes-Committed
einreicht, dann haben wir es so gemacht, dass quasi, bevor ich drauf gucke, noch mal einer
drauf guckt, der auch aus dem gleichen Team ist und erst wenn noch ein fachlicher Kenner
es approved hat, approve ich es auch, aber die meisten Sachen, wenn ich sie mir angeguckt
hab und approve, äh, dann juckt das kein mehr, sondern wir nehmen es direkt, auch weil
es vielleicht nicht hundertprozentig richtig ist, aber das meiste wird nicht so arg reviewed,
wie es vielleicht sollte. Wie groß sind denn die ganzen Repos zusammen? Boah, also unser
altes, wir hatten mal ein altes Repo, wo wir alles in einem Repo gemacht haben, wirklich
alles, sogar RPM-Pakete, da waren wir aber noch big, big noob, ja, ähm, und da haben
wir teilweise Target-Sets und RPMs in das Git-Repo-Committed und das war am Ende, glaube
ich, acht Gigabyte oder so. Wenn du das geklont hast, neu, hast du erst mal ein halben Tag
Gefühl dargesessen. Also das war das alte Repo, das war richtig bepega, bebega war das.
Das haben wir dann aber nach einem Jahr oder so gecheckt, dass das keine gute Idee ist,
jetzt haben wir ein bisschen mehr Repos und wir checken auch keine großen Binaries mehr
drin, aber man lernt ja, man lernt ja. Also unser aktuelles Repo ist, glaube ich, so,
was wird denn das sein, so das Haupt-Repo, wo das meiste drin ist, wird so 250 MB sein.
So in dem Dreh würde ich jetzt mal, würde ich mal sagen, das allermeiste sind Text-Files,
die nehmen nichts weg. Es sind ein paar ganz kleine Go-Binaries drin, die sind aber vielleicht,
wenn es hochkommt, wenn es hochkommt, dann MB pro Binary, weil das Sachen sind die immer
tagtäglich da im Handling und auch so brauche. So und ich sag mal 200, 250 MB, ich weiß
es ehrlich gesagt gar nicht genau. Ich hab unser Repo ewig, also wirklich ewig nicht
mehr geklont. Wozu auch? Ich hab das ja eh permanent aktuell. Da wird, wieso? Stört
das, siehst du doch überhaupt nichts. Achso ja, damit es nicht, damit es nicht stört,
haben wir folgendes gemacht, das ist auch eine Sache, die ich empfehlen kann, wenn man
entweder Git managen bzw. vielleicht selbst besseren Überblick behalten will, macht
Namespaces davor oder Gruppierungen. Also in Git kann man z.B. machen, dass man einen
Branch nennt, so nach dem Motto, dass man Git einen Branch macht, der max slash neues
Feature heißt. Das ist ganz praktisch, weil alle Branches ohne Namespace davor sind meine,
also zum verwalten der ganze Geschichte, also sprich Master hat keinen Namespace davor,
also Testing und Live haben auch keinen Namespace davor, sprich da, das sind meine, da hab
auch ich Rechte drauf, aber andere können dann irgendwie, der Felix hat nen Branch,
das heißt dann irgendwie Omega, Lul und sonst was. Das heißt alle Branches mit Namespace
davor sind Feature Branches, da kann man das recht gut erkennen. Das wird auch von Git
von Haus aus unterstützt, das ist eigentlich ne ziemlich gute Sache, das so zu kopieren.
Kann man erkennen, von welchem Branch ein Branch abstammt? Ja und nein, du kannst erkennen,
von welchem Commit der Branch abstammt. Von welchem Branch ein Branch abstammt, gibt
es nicht, weil sowohl Text als auch Branches gibt es ja streng genommen in Git so, in
der History gar nicht. Also du hast Commits, du hast quasi ne Reihe von Commits, die aufeinander
basieren und in Tag ist ein Zeiger, nen Namen geben für nen Commit und ein Branch ist halt
nen Namen für nen Commit, wo man weitere Commits drauf machen kann. Also wichtig ist,
von welchem Commit man das aufmacht. Also sprich, wenn ich drei Branches habe, oder sag mal,
ich hab ne Master Branch und mach davon drei Branches auf, so und A, B, C und du machst
von C deinen Branch auf, dann kann ich nicht erkennen, ob du ihn von A, B oder C aufgemacht
hast. Das weiß ich nicht, ich weiß nur, dass du ihn aufgemacht hast zum Stand von Commit
X, Y. Also ich kann nicht erkennen, ob du ihn von Master aufgemacht hast, von A, von
B, von C. Ja, so ungefähr machen wir es auch. So ähnlich machen wir es auch. Einziger Unterschied
ist, wir machen Underscore, weil wir manche Branches als Puppet-Environment verwenden
zum Dingertest. Ja, da liegt auch Puppet-Config drin, jede Menge. Also das ist ein bisschen
umfangreich, da ist das Main-Repo, da ist ganz viel Puppet-Config drin. Und Puppet mag
Minus in Environment haben nicht, deswegen ist es bei uns in Underscore. Ja, so sieht
das aus. Puppet ist echt ein Krampf, ja das stimmt. Aber wir verwenden Puppet schon ewig.
Wir haben ja auch einen riesen Puppet-Code-Base. Als Erklärung, Puppet ist ein Tool, dem gibst
du das. Das ist noch vor der Zeit, aber mittlerweile nennt sich sowas ja Infrastructure as Code.
Nee, Code als Infrastructure as Code, ja, Baswords. Also sprich, man beschreibt, wie
ein System aufgebaut werden soll und hat nen Config-Programm, das lässt man laufen, nen
Config-Management-Programm und das baut aus der Meta-Config quasi die Config aus zusammen,
wie sie dann am Ende auf einem Server hinten rauskommt. So musst du zum Beispiel, wenn
du 50 Server aufbauen willst, die sich alle bis nur im Namen unterscheiden, so kannst
du quasi eine Puppet-Config machen, die du dann quasi applies auf 50 Server anstatt
dass du 50 Server einrichten musst, so weit von der Theorie her. Puppet ist doch Ruby-Kacke,
ja aber Ruby ist doch gut und es ist nicht Docker für Arme, es war ganz was anderes.
Ach guck mal, hier, er weiß wovon ich rede. Ich verwende, ach so, also ich verwende Privat
vmware, auf der Arbeit haben wir jede Menge Sachen, also wir haben zum größten Teil
vmware, das glaube ich kein Geheimnis, das haben die meisten im Enterprise-Umfeld, wir
haben allerdings mittlerweile auch jede Menge Container und solche Sachen und auch Dinger
in Azure und in der Cloud und ganz tolle Dinger. Aber zum größten Teil vmware und
die meisten Business-Enterprise-Geschichten, die du so antreffen wirst, die haben auch
vmware. Vmware ist in dem Umfeld einfach das etablierteste, was es gibt. Wir haben auch
witzigerweise ein paar KVM-Kisten, habe ich letztens gelernt. Wusste ich bis vorgestern
auch nicht, dass wir KVM haben. Boah, das ist viel zu kräll, da wirst du ja blind von.
Ne, ne, ne, wir haben die wieder. Wir haben wieder KVM. Hab ich heute gelernt, ja. Im Kubernetes-Umfeld
haben wir irgendwie KVM noch. Wusste ich bis vorgestern auch nicht, dass wir sowas haben.
Genau, so sieht das aus. Also das ist bei uns so die Geschichte. Und wie gesagt, Puppet
ist an sich ganz gut. Es ist halt ein bisschen bloated mittlerweile bei uns. Okay, ich glaube,
jetzt haben wir das alles. Kann man eigentlich Docker in Windows Home in vmware Ubuntu benutzen?
Klar. Wenn du dir eine Linux VM installierst, kannst du da drin alles funktionieren. Alles
verwenden, was du verwenden willst. Was ist denn Windows Home? Was ist denn Windows Home?
Ach, Home, das ist die Home und Professional. Ja, ja. Lul. Monarch S. Klar, in Virtualbox
geht das auch. Natürlich funktioniert das. Virtualbox und vmware, das ist beides voll
Virtualisierung. Das System, was da drin läuft, hat keine Ahnung, dass es in der, also realistisch
betrachtet weiß es natürlich, dass es in der VM läuft. Aber reine Lehre mäßig hat es
keine Ahnung, dass es in der VM läuft. Also sprich, du kannst in der Linux VM, die du
voll virtualisiert laufen hast, alles machen, was du willst, sofern es die Hardware hergibt.
Du hast keine Beschränkung. Also du kannst es sowohl in Virtualbox machen, du kannst
es auch in vmware Workstation machen, du kannst es in Parallels machen unter Mac und Fusion
unter Mac. Du kannst es in KVM machen, vollkommen egal. Also voll virtualisiert kannst du alles
machen, was die Hardware hergibt. Wie gesagt, sowas wie Spiele ohne GPU pass-through, was
ja nicht funktioniert mit vmware Workstation, Desktop, Windows, gibt halt die Hardware dann
nicht her. Aber hey, für SuperTuxCard reicht es immer noch. Geh weg. Also ich mein, wenn
SuperTuxCard geht, dann geht alles andere auch. Da sind wir uns ja einig. Ok, was war
denn jetzt eigentlich mit Google und Deutscher Bank, was ich angeblich wissen müsste hier?
Google hilft Deutscher Bank, ok. End of Function Zero, ja das funktioniert auch mehr schlecht
als recht. Aber Docker bzw. ne, was wolltest du verwenden? Docker ist keine nested Virtualisierung.
Ich find's immer noch blöd, dass das ganze Zeug Container heißt, muss ich ehrlich sagen.
Container klingt nach vm, ist es aber nicht. Den Container gibt es auf Linux-Ebene eigentlich
gar nicht. Man nennt das nur Container. Also sprich, ein Prozess, den du startest auf
deinem Linux-System, wenn du jetzt einfach ne Bash startest oder so, ist da erst mal fundamental
kein Unterschied dazwischen, ob du die Bash so startest oder die Bash über Docker in
nem Container startest. Beide Prozesse laufen nicht virtualisiert, sondern sind ganz normale
Prozesse, die der jeweilige Hostkernel ausführt. Also Bash in Docker ist nicht virtualisiert
und Bash ohne Docker ist als rechtlich virtualisiert. Der einzige Unterschied dazwischen ist, dass
es auf Kernel-Ebene sowas wie Namespaces und Cgroups gibt. Das ist so ein bisschen Sandbox-
Sandbox-Möglichkeiten, dass die Bash in nem Container vielleicht nicht Zugriff auf alles
vom Host hat. Aber das ist keine Virtualisierung. Also sprich, wenn du Docker in einer Ubuntu-VM
betreibst, dann ist das keine nested Virtualisierung, sondern das ist ein stinknormaler Prozess
wie alles andere auch, was du in dieser VM ausführst. Docker interessiert sich oder
generell Linux-Container interessieren sich absolut null für Virtualisierung. Und es
würde sogar nested-virtualisiert funktionieren. Also du könntest sogar ganz abgedrehte Sachen
machen wie, vor allem bei Workstation, darauf KVM und dann bei KVM-Linux-Kiste-Docker.
Aber dann ist nested-virtualisiert und dann ist die Performance auch im Arsch. Aber vor
allem bei Workstation, guck mal, ich verwende das doch hier auch laufen. Ich hab hier meine
VM bei Workstation und ich kann hier ohne Probleme sagen, Docker, PS, zack, läuft. Gar
kein Ding. Sollte mal an meiner Master-Thesis, das solltest du machen, ja, über was schreibst
du? Ach, übrigens hier, jung, oder Snorlax, weiß ich genau, was davon? Wie war so dein
Probearbeitstag heute? Google hilft deutscher Bank, ok. Was macht denn die deutsche Bank
da? Scheiß VDSL Telekom, warum das denn? Knäbier hast recht, ja, müsste ich mal echt
updaten. Also was, die deutsche Bank will ihre IT-Probleme unter anderem mit der Hilfe
von Google lösen. Na dann, easy as fuck, würde ich sagen. Sollen sie mal machen. Also beide
Firmen, blablabla, das Finanzinstitut bekommt Zugang zu den Cloud-Diensten der Alphabet-Tochter,
ok, Google, das finden die News-Schreiber immer geil, weil die suchen immer händrigen
Synonyme für die gleichen Sachen. Jetzt können sie anstatt Google schreiben, die
Alphabet-Tochter. Zudem wollen die Unternehmen die nächste Generation... blablabla, ok,
was machen sie denn jetzt eigentlich? Ok. Die deutsche Bank kämpft wie viele andere
deutsche Finanzinstitute mit technischen Problemen. Das sind hausgemachte Probleme. Wenn man das
ja auch 20 Jahre lang verschläft und verkackt, dann muss man sich nicht wundern.
Schon der frühere Konzernschaftler, kurz nach seinem Amt, hat er öffentlich als lausig
bezeichnet. Mich würde interessieren, wenn er die IT als lausig bezeichnet, was er damit
genau meint. Weil ich könnte mir vorstellen, dass die Leute, die da arbeiten, alles andere
als lausig sind, damit der ganze Scheiß auf der alten Infrastruktur und dem ganzen alten
Müll überhaupt noch funktioniert. Er meint wahrscheinlich, dass er und seine
Manager es verkackt haben, bzw. er, sein Vorgänger und seine Manager es verkackt haben.
Ex-IT-Chefin Kim Hammond, aha, ok, die Ex-IT-Chefin musste wieder weg. Zuvor hatte sie die Bank
als das dysfunktionalste Unternehmen, für das sie je gearbeitet haben, kann ich voll
und ganz nachvollziehen. Wenn ich mir das teilweise angucke, wie das bei uns läuft,
und ich arbeite nicht bei der deutschen Bank, aber so weit davon weg, also rein geografisch
gesehen sind wir nicht. Also, vieles ist bei uns auch sehr, sehr merkwürdig, wo man sich
fragt, wie zum Teufel funktioniert das überhaupt. Und genau das wird bei der Deutschen Bank
auch so sein. Ich kenne ja ein paar Leute, die bei uns gearbeitet haben, die auch vorher
bei der Deutschen Bank gearbeitet haben, die haben da auch wenig Gutes dran gelassen. Also,
von allem, was ich gehört habe, könnte ich das bestätigen. Die musste wahrscheinlich
gehen, weil sie gesagt hat, wie es ist. Die musste wahrscheinlich gehen, weil sie gesagt
hatte, Jungs, wenn wir das lösen wollen, müssen wir uns erstmal eingestehen, dass wir Scheiße
sind. Und das hört wahrscheinlich kein Manager gerne. Die haben sie eingestellt dafür und
wollten nicht hören, was was ist. Das kommt öfters vor, dass Leute eingestellt werden
so nach dem Motto, wir brauchen jetzt das hier, wir brauchen hier, wir brauchen jenes.
Und wenn man dann jemanden hat, der das wirklich nachhaltig lösen will, der muss dann erstmal
auf den Tisch packen. Okay, Leute, in diesen Bereichen haben wir 20 Jahre geschlafen, wir
sind viel schlechter als die Konkurrenz. Wir haben vielleicht eine gewisse Stellung, dass
sieht das nicht so aus wie, aber wir sind einfach Scheiße. Und das hören die Leute
halt nicht gerne. Ich meine, niemand stellt jemand gerne ein und kriegt dann von dem gesagt,
dass er Scheiße gebaut hat die letzten 20 Jahre. Aber wenn man Probleme lösen will,
muss man sich der Sache halt manchmal stellen. Da haben viele Manager anscheinend Probleme
damit. So und das betrifft die meisten großen deutschen IT Unternehmen, bin ich mit ziemlich,
also nicht IT und die meisten größten deutschen Unternehmen wird das betreffen, uns mit Sicherheit
auch. Und was soll ich jetzt sagen, also es ist ja kein Wunder, dass in Deutschland so
viele Startups mittlerweile erfolgreich sind, nicht etwa, indem sie das machen, was Startups
normalerweise machen, irgendwie tolle neuen innovativen Sachen ausprobieren und zu 80
Prozent failen und zu 19 Prozent verkauft werden und zu einem Prozent mal was großes
werden, sondern die Startups in Deutschland sind so gut im Geschäft, weil die den alten
großen Unternehmen helfen, wieder ein bisschen Anschluss zu bekommen. Also wir verdienen
quasi unsere Startups gibt es nur, weil es die großen Unternehmen verschissen haben.
So also weiter, das größte Problem der Deutschen Bank sind die vielen verschiedenen Systemen.
Christian bist du noch da? Da können wir auch ein Lied von singen. Das größte Problem
der Deutschen Bank, also das größte Problem bei uns, was wir haben ist auch ähnlich.
Wir haben auch sehr viele verschiedene Systeme. Das könnte ich so unterschreiben. 2012 hatte
die Bank SAP damit beaufragt, die Plattform zu harmonisieren, was jedoch scheitert. Also
wir fassen mal zusammen, die haben das Problem schon lange erkannt, aber sie kriegen es
nicht gebacken, was definitiv dafür spricht, dass es intern Widerstände dagegen gibt. Widerstände,
die sich nicht einfach durch einen neuen IT-Chef oder irgendwelche Konsultanten Leute
aus dem Weg schaffen lassen. Also höchstwahrscheinlich Widerstände auf einer ähnlichen Ebene, wie
hier oben die Leute einstellt. So, ob die das jetzt mit Google hinkriegen, wenn sie alles
so machen wie bisher, ist das auch fragwürdig. Neben dem Umbau der IT haben die Banken viel
mit Konkurrenz von Techland gekämpft, die wie Apple und Google ihre Marktmarkennutzung
und Teile des Zahlungsverkehrs. Warum muss ich das jetzt unbedingt lesen? So was Tolles
stand jetzt da auch nicht drin. Eins wird das auf jeden Fall machen, so eine Kooperation
zwischen Google und der Deutschen Bank. Es wird sehr viel Geld verbrennen, ob da am Ende
was Gutes rauskommt oder nicht, wage ich nicht zu sagen, dafür kenne ich mich mit der Deutschen
Bank zu wenig aus. Wie gesagt, die paar Leute, die ich kenne, die da gearbeitet haben, was
sie erzählt haben, so ein umfassendes Bild gibt es jetzt auch nicht. Es wird auf jeden
Fall sehr viel Geld verbrennen und Google wird sich an der Deutschen Bank die Haare raufen,
da bin ich mir ziemlich sicher. Da kommen dann irgendwelche super agilen Amis an oder
wer auch immer und meinen hier, das geht hier auch so und die werden dann erstmal konfrontiert
mit der Schwerfälligkeit eines großen deutschen Unternehmens im Finanzsektor. Die Schwerfälligkeit
kann sich ein Googler wahrscheinlich noch nicht mal in seinem Traum ausmalen, wie schwerfällig
sowas sein kann. Also es wird auf jeden Fall auch den härtesten Googler zur Verzweiflung
bringen, die Deutsche Bank. Mich würde mal interessieren, ob es dann irgendwann mal Berichte
gibt, wie es eigentlich gelaufen ist. Mein Probetag war nice, habe gesehen, wie die arbeiten,
wir waren beim größten Kunden, die haben einen 200.000 Euro Server im Rack mit Virtualisierung
im Keller stehen. Es gibt fette Systeme. Guckt euch mal IBM Großrechner an, IBM Host Geschichten
an, was das kostet. Und da bezahlst du auch noch die Rechenzeit, das ist so richtig oldschool.
Diese Season wieder relativ viel. Gut, also wir wollten uns ja mal, irgendwie hat mich
der Chat am Anfang da auf die Idee gebracht, angucken, was denn für IT Zertifizierung empfohlen
werden. Ich habe nämlich legit keine, what the fuck. Die besten IT Zertifizierung, ok
gucken wir mal, was gibt es denn da. Warum ist das gelb? Wie sieht denn die Seite ohne
Dark Reader aus? Ich bin blind. Welche Zertifizierung, 2018, ok. Die Top 10 IT Zertifizierung. EC
Concealed Certified Ethical Hacker, habe ich noch nie gehört. ESC 2 CESSP, habe ich auch
noch nie gehört. Degra Datenschutzbeauftragter, what the fuck, habe ich auch noch nicht gehört.
Certified Cloud Security Professional, klingt irgendwie ein bisschen nach Cisco, ist es
aber anscheinend, doch, ist es? Ne, ist es nicht. Ist es nicht, habe ich auch noch nicht
gehört. Cisco CCNA, ok, den kennt man. Vorbei ich echt meine Zweifel habe, dass ein CCNA
so beliebt ist. Ich habe auch ein CCNA gemacht vor Uhrzeiten. Hat bis jetzt nicht die Bohne
irgendjemand interessiert und ich meine so ein CCNA, so ein CCNA ist, das ist ein Inhalt,
das kannst du innerhalb von einer Woche easy lernen. CCNA ist nichts, also beim CCNA ist
nichts großartiges dabei. Da lernst du so Sachen wie, wie man mit einer seriellen Konsole
an den Cisco Switch geht, wie man da Enable Mode anmacht, wie man da ein paar Routing-Tabellen
konfiguriert, wie man, wie man OSPF einschaltet und das war es zum größten und ganzen. Also
viel mehr kommt da nicht bei rum. Kenn ich nicht, kenne ich auch nicht. IGIT. Axel OS
Prince 2. Das hört sich an wie ein griechischer, wie ein griechischer Millionär oder sowas.
Alexios Prince 2. Second, was auch immer, Foundation and Practitioner. Lean, oh je, das
ist, das ist BWL Stonks Zeug. Das ist doch nicht euer Arzt, das können doch nicht die
besten Zertifizierungen sein. Meine IT-Kerre, Überblick über die Wicht, ok, zeig mal her.
Ja, End of Functions, ich weiß, machen viele in der Schule, deswegen ist ein CCNA nur wirklich
nichts so Geiles. Erstens hat fast jeder einen CCNA und außerdem lernt man beim CCNA nichts,
was man nicht auch so in 1-2 Wochen lernen könnte. Beim Internet-Engineer sieht es dann
schon ein bisschen anders aus. CISM, CCNA, CCSP, KISO, KISO Certified Security Professional,
das kann ich mir tatsächlich vorstellen, dass das gar nicht so übel ist. ISTQB, das klingt
wie irgendeine, keine Ahnung, irgendeine Lobby-Gruppe für, mir fällt jetzt zu ISTQB nichts ein. Ok,
was ist denn International Software Testing Certification Board? Software Testing, hab
ich auch noch nichts von gehört. Oh Gott, ITIL, jetzt wollen sie es auch wissen. Excellent
ITIL. Oh, wir haben einen im Chat, der Nico hat ein ISTQB, er sagt, er ist trash. Excellent.
IREP, International Requirements, das sind doch keine Zertifikate, das sind BWL-Stonks-Dinger,
das ist doch nichts, was ein ordentlicher IT-Mann, der sich mit Technik auskennt hat. Was, ECDL
sagt mir gar nichts, was ist denn das? ECDL-Zertifikat. Was? Der Europäischer Computerführerschein.
Kann man den online machen? Den will ich machen. Ich will den Computer-Triving-License machen.
Kann man den online machen? Oh ne, das kann ich nicht. Das kann ich nicht. Textverarbeitung,
Tabelle, das kann ich nicht. Das ist durchgefallen. Die Österreicher machen es richtig, die nennen
es gleich Image-Editing. Ich will das machen, wo kann man das machen? Okay, ECDL, Online-Test-Free.
Begriff, teste dein Wissen. Quiz, okay, excellent. Quiz, online, online-Aufragen. Also, wir machen
jetzt den europäischen Computerführerschein. Auf geht's. Welche Zahlungsarten ist bei
einer Online-Bestellung für die Käufer am sichersten? Das kommt vom Bezahl, das hängt
vom Bezahl-Service ab. Bezahlung per Überweisung vor Lieferung der Ware, Bezahlung mit Abrechnungsaufgabe.
Was hat denn das mit Computer? Okay, am Rande, am Rande, ja. Abbuchungsauftrag, Bezahlung
mit Überweisung nach Erhalt. Na ja gut, Bezahlung vor Überweisung. Was? Nein, nein, nein. Das
habe ich falsch gelesen. Das habe ich falsch gelesen. Ich meinte, das ist Vorkasse. Das
ist aber gar keine Vorkasse, ne? Das da dann, ja. Ich dachte, das ist, ich dachte, das ist
Nachname. Nachname meinte, aber ist es nicht. Okay, Pepega, next. Also, was ist der Unterschied
zwischen Internet und World Wide Web? Das Internet ist... Staatliche Einrichtung verwenden
das Internet Firmen und Privat... What? Das WWW ist ein Dienst des Internets, muss es
eigentlich sein. Richtig. Jawoll. Next. Welche Web-Adresse könnte es wirklich geben?
Die sind nicht immer so ganz aktuell. Mittlerweile könnte es davon so ziemlich jede Adresse
geben. Okay, die hier, die hier nicht. Die hier könnte es nicht geben, aber die könnte
es geben. Das ist das, was die auch wissen wollen. Aber die könnte es mittlerweile auch
geben und die könnte es mittlerweile auch geben, weil die vergeben ja mittlerweile alle
möglichen Top-Level-Domains. Ich weiß nicht, ob sie Top-Level-Domains mit Minus vergeben.
Hab ich noch nicht gesehen, aber ich könnte mir vorstellen, wenn du genug Geld da auf
den Tisch legst, kriegst du auch Vienna Active als Top-Level-Domain. Aber was die wissen
wollen, ist das hier. Also Sub-Domain, Top-Level-Domain und wie nennen sie das eigentlich? Domain,
Top-Level-Domain, Sub-Domain. Aber mittlerweile könnte fast alles irgendwo sein. So, was
ist die Startseite eines Browsers? Ja, Pornhub, oder? Was ist die Startseite? Die Webseite,
die nach dem Starten des Browsers angezeigt wird. Die, echt jetzt? Es kommt übrigens
ganz entscheidend auf die Config an, weil die Startseite ist mittlerweile so ein Dashboard,
auch bei Firefox. Was sind Favoriten? Microsoft Edge. Sogar schon, das ist top aktuell, Leute.
Top aktuell, seht ihr das? Sogar Edge drinnen. Was sind Favoriten? Was ist denn das für
eine Pepega-Fragen, ey? Und guckt euch mal dieses Hi-Res-Commuter-Bild hier nebenan.
Gespeicherte Verknüpfungs-Webseite, okay, weiter. Auf welchen ist besonders, das 31
ist so eine Kackfrage. Na gut. Auf welchen Webseiten ist es besonders wichtig, Benutzern
ein Kennwort zu haben? Sie wollen das hören, okay. Ähm, auf, auf, na ja, also, streng
genommen ist das nicht das, ist Benutzern Passwort nicht das Wichtige, sondern dass
irgendeine wirksame Authentifizierung verwendet wird. Und eine wirksame Authentifizierung sollte
immer dann verwendet werden, wenn ich dort auf irgendwelche Sachen zugreifen kann, wodurch
ich drauf zugreifen kann. Das kann bei allen anderen auch der Fall sein, aber die wollen
eindeutig natürlich ein D hören. Wozu werden Daten verschlüsselt? Ähm, äh, damit die
Daten für Hacker unlesen? Das stimmt aber gar nicht. Das stimmt nicht. Das wollen die
hören, aber das stimmt nicht. In der Regel ist, während der Computer an ist, die ganze
Sache ja unanschlüsselt. Und wenn du dir den Keylogger oder irgendeinen anderen Trojaner
einfängst, dann kann der auf die unverschlüsselten Daten zugreifen. Also die wollen das hier
hören, aber das stimmt nicht. Das hier ist richtig, aber das stimmt nicht. Ähm, wo besteht
die größte Gefahr? Was ist das für Fragen, Alter? Das ist ja absolut Noobstyle. Wo besteht
die größte Gefahr? Beim Aktualisieren, beim Besuch, bei der Nutzung von Suchmaschinen,
beim Download von der Teilenprogramm? Ja, okay, next. Das mach ich nicht alles. Das mach
ich nicht alles. Das ist mir zu doof. Welcher Teil der E-Mail-Adresse Office and Easy-For-Me-Info
ist die Top-Level-Domain-Info? Das ist übrigens mal ne ordentliche Frage. Ist ja auch nur
für 7-8-Klessler. 7-8-Klessler können das auch schon besser. Was ist der wichtigste
Vorteil von E-Mail? Keine Sau verwendet mehr E-Mail. Außer PP-Gast, die diese Fragen erstellen.
Okay, was ist ein Vorteil? Dass es Spam gibt, dass es Mails gibt, verbale Kommunikation
ist nicht mehr notwendig, E-Mails erreichen den Empfänger in kurzer Zeit. Also, ähm,
für mich B, für mich B, allerdings wollen die wahrscheinlich A hören, wobei man aber
dazu sagen muss, das stimmt nichts. E-Mails ist kein irgendwie Echtzeit-Kommunikations-Medium.
Also, also für mich ist B richtig, aber B ist falsch, die wollen A hören. Siehste?
Bäm. Das ist kein Vorteil. Natürlich ist das ein Vorteil. Verbale Kommunikation zwischen
menschliche Interaktionen ist nervig. Windows-Click-Fragen, ich glaub es nicht. Das heißt doch nicht,
wie kriege ich in Windows was angeklickt, sondern Computerführerschein. Das ist so dumm.
Welche Aufgaben hat ein Internet-Service-Provider? Stell dir in der Stelle die Hardware-Garantie,
die Gerichtskanale. Okay, also, next. Welche dieser Seiten kommt aus Österreich? Die Schweizer
Seite natürlich. Was man übrigens auch nicht so genau an der Top-Level-Domain sagen kann,
es gibt sicherlich einige DE und AT-Info-CH Seiten, die weder sonderlich informativ sind,
aus der Schweiz kommen, aus Österreich kommen oder aus Deutschland kommen. Was sind das
für... Wo ist da der Unterschied? Ah, da ist ein Punkt, da ist ein Doppelpunkt. Okay.
Viele Websites miteinander verbunden, verlinkt, gedruckt, vertauscht. Ein Programm zum Betrachten
von Websites ist ein Surfer. Ein Modem. Okay, die Fragen gehen halbwegs. Welches dieser
Programme ist ein Browser? Firefox bzw. Internet-Explorer. Linux, eindeutig. Das ist richtig pepega. Was
ein Reisender möchte, laufend online über seine Erlebnisse berichten. Welches Werkzeug
eignet sich am besten dafür? Bluetooth. Da kann er sich mit seinem Handy verbinden und
daheim anrufen. Wie wird der Datenverkehr aus dem Internet kontrolliert? Firewall, USB-Stick,
externe Festplatte, WL... Hä? Die Firewall... Also, ich meine, die wollen A wissen, aber
das ist blödsinn. Alle Cookies löschen... Die Firewall aktivieren. Okay, da habe ich
jetzt keine Ahnung. Was sollte bei dem Besuch von sozialen Netzwerken beachtet werden? Sich
auch wieder abmelden, alle Cookies löschen, Cookies zulassen, ne? Cookies löschen? Cookies
löschen? Ja, abmelden bringt dir ja nichts ohne Cookies zu löschen. Ich sag Cookies
löschen. Okay, abmelden. Also, ohne Cookies löschen bringt dir abmelden nichts. Nach
welchen Informationen wird meine Hilfe... Oh Gott, geh weg. Was versteht man unter Spam?
Das ist ein Wahn. Das schmerzt ja. Ist die Favoritenleiste eingeblendet? Das weiß ich.
Achso, da, ja. Welches der Programme ist kein Browser? Edge. Internet Explorer. Das zählt
nicht als Browser. Ich weiß, dass es Word ist, aber das zählt nicht. Was ein Blödsinn.
Was ein Schwachsinn. Okay, für Siebklässler mag das ja ganz nett sein, aber wirklich
was draus ableiten kann man sich auch nicht. Okay, wir waren bei IT-Zertifikaten gucken.
Damit bekommst du einen Job. Das wäre echt armselig, wenn man damit einen Job bekommt.
Auf der anderen Seite, ich bin überrascht, wie wenig Ahnung jüngere Leute von Computerzeug
an sich haben. Ich hätte eigentlich gedacht, dass die Generation, die nach mir kommt und
die damit ja komplett aufwächst, dass alles easy as fuck kann. Dass sich da keiner mehr
von irgendwelchem Spamchi baiten lässt, dass sich da keiner mehr sinnlos irgendwelche Viren
einfängt, dass die Leute so Basic-Tasks im Internet können, aber irgendwie sind die
ja genauso bescheuert wie bei mir damals. Das kann doch nicht sein. Die meisten wissen
nur, wie man Snapchat und TikTok installiert. Ja, das kann ich mir vorstellen. Aber das
hätte ich nicht gedacht. Ich hätte wirklich gedacht, dass die Generation, die nach mir
jetzt aufwächst, komplett mit Computer, die Basics einfach Intos hat und kann ganz automatisch.
Aber ist anscheinend nicht so. So, was gibt es denn noch für tolle Zertifikate, die man
machen soll? Eitel. Nein. Das ist somit das bekannteste, was es gibt, aber nein. Gehen
wir weg mit Eitel. Ich musste auch schon Eitel-Kurse machen. Eitel-Kurse sind wirklich echt ätzend.
Ich musste, ich habe schon ein paar Eitel-Kurse gemacht. Einer schlimmer als der andere. Du
dürft, du dürft den Test nicht machen, das ist aber. Heute würdest du einfach anrufen
und sagen, du fühlst dich diskriminiert, darfst du den Test machen. Lernt man da, wie man
richtig agile und innovative Projekte macht? Nee, bei Eitel lernst du irgendwelche merkwürdigen
Best-Practice für Prozesse und Abläufe, die die Leute nicht nehmen als Vorschläge, weil
die meisten Leute einfach low-brain und dumm sind. Auch in solchen Positionen, wo das entschieden
wird, die Leute nicht einfach als Vorschläge nehmen, so könnte man das machen, sondern
das eher als Religion aufziehen, so nach dem Motto, Eitel sagt, man müsste das so und
so machen. Es ist scheißegal, was Eitel sagt. Eitel schlägt was vor und man kann sich davon
was rausnehmen, was passt. Das ist keine, keine Glaubensfrage. Mcse, Microsoft Certified Systems
Engineer. Ich glaube, das ist das, das ist ein wirklich sinnvolles Zertifikat, wenn
man in Microsoft Umgebung arbeitet. Das ist denke ich wirklich eines der wenigen sinnvollen,
die wir uns da angeguckt haben. Und viele, viele so Windows-Läden gucken da auch drauf.
PMP, Project, nein, ganz bestimmt nicht. PMF, Project Management, Moment, das ist genau
das gleiche, nur einmal in Deutsch und einmal in Englisch, oder was? Project Management,
Professional, Project Management, das ist doch genau das gleiche. Nur das Fachmann und Professional,
das ist doch genau das gleiche. Ach nee, das ist was anderes. Für erfahrene Project Manager,
mein Group Professional und Fachmann ist genau das gleiche. Welcher Pepega Two-Head-Kopf
hat sich das wieder ausgedacht, die Projekt, die Bezeichnung von diesem Ding, ey. Prince
II. Da habe ich schon mal was von gehört. Das ist auch irgendeine Stonks-Geschichte.
Six Sigma. Klingt nach einer Sache, wo ich einen großen Bogen drum machen will. Prost
dich. Welche Zertifikate bringen was? Okay, das ist, alle akzeptieren alle Cookies. Was
genau macht der da? Sind das die Zertifikate von ihm? Der hat sich gedacht, scheiße, man,
so viel Zeit das alles zu machen und alles bringt nichts. Wie heißt das Meme mit dem
Jungen, der das Kreuz vor sich hält, der? Ich habe keine Ahnung. Ich dachte immer, das
ist ein Mädchen. Vielleicht ist auch ein Junge. Keine Ahnung. Weiß ich nicht. Ich habe keine
Ahnung, wie das heißt. Musst du mal suchen. Wenn du Google suchst, bestimmt Child Holding
Cross Meme. Da findest du bestimmt neue Meme-Einträge, noch ein Löcher zu. Agile Zertifikate. Oh,
Scrum Master. Yes, yes, yes. Scrum Master. Agile Coach. Jawoll. Microsoft Certified Solution
Developer. Die Dinger, die haben immer so, die haben mittlerweile so richtige Big Brain
Namen, die ganzen Zertifikate. Du kannst dir anhand des Zertifikats gar nicht mal genau
überlegen, was das eigentlich bedeutet. Isakwap. Isakwup. Open Group Togath. Was ist, was? Togath.
Open Group Architecture Framework. Ja. Alles klar. Aytel. Nein, nein, nein, nein, nein,
nein. Geh's mir fort. Aytel kommt mir nicht, kommt mir hier nicht ins Haus. Es ist ja schon
wieder CISP. Oh, CISP. Das, das ist Privilege. Das dürfen nicht alle machen. Caesar Pen Test
Plus. Wer wird denn da penetriert bei dem Test, fragt man sich, ne? Der Wertschuss ist am Start.
Bin ich mal lang da? Acht Minuten noch. Als Scrum Lehrer muss man das echt i-Zahmbeschreibe
choose my name. Ja, du musst so Scrum Consultant sein oder sowas, ja. Too-Lang-Lütten-Treat.
In ein paar Berufen wie Administrator, Team Manager oder Tester sind Zertifikate auf Voraussetzungen
verwendet. Ich sollte das wirklich flächendeckend der Fall sein, halte ich es für total fail,
Zertifikate irgendwie vorauszusetzen. Der einzige Grund, wo ich es selbst für sinnvoll
halten würde, nach Zertifikaten zu gucken, ist, wenn du jemand suchst, sehr speziell
für ein gewisses Fachgebiet, sagen wir jetzt mal IBM Host-Entwicklung oder sowas in der
Richtung. Also wirklich ein sehr spezielles Fachgebiet und du willst wissen, dass der
auch echt ein bisschen Ahnung hat von dem, was er macht. Dann ist das ein guter Hinweis,
wenn er vielleicht so ein Host-Zertifikat hat oder so. Aber ansonsten einfach mal ausprobieren,
wie der mit aktuellen Problemen umgeht und... Scheiß auf Zertifikat, Alter. Ich meine,
hey, ich hab mal, als ich jung war, ganz ganz jung, hab ich mal einen Wishful-Basics-6-Kurs
gemacht an der Volkshochschule. Ich glaube, das Zertifikat sollte ich jetzt auch nochmal
beilegen. Vor allem Wishful-Basics-6? Ich glaube, da findest du heute richtig gut bezahlte
Jobs mit, wenn die noch was haben. Ey, wenn man heute noch Wishful-Basics-6-Anwendungen
hat, sucht bestimmt Händeregen nach Wishful-Basics-6 an Programmierern. Ups, das wollte ich auch
nicht sagen. Das ist ein bisschen wie Kobol. Das ist das Kobol von Microsoft, genau. Das
ist ein bisschen wie Kobol. Wishful-Basics-6. Du hast mal einen C++-Kurs an der Volkshochschule.
Okay, das sind zwei Dinge, von denen ich relativ wenig halte. Vor der Volkshochschule, weil
das alles, was ich da bisher vorhin gesehen hab, ziemlich ercrabt war, und C++. Zwei
Sachen in Kombination, die nicht gut ausgehen können. Chat, was ist mit euch denn jetzt
schon wieder los hier? Easykiller sehe ich ähnlich. Es gibt an unseren Schulen viel zu
wenig IT-Unterricht, den man auch wirklich so nennen könnte. Und ich sage damit nicht,
dass man den Leuten irgendwelche Mathe-Geschichten beibringen soll, oder irgendwelche Machine-Learning-AIs
programmieren lassen soll oder sonst was. Sondern, dass man denen einfach mal ein paar
Grundlagen, die Basics, also die Computer-Grundlagen beibringen soll. Und ich meine, mit Computer-Grundlagen
nicht Word-Texte eintippen. Sondern man fängt an mit Bedienung, so nach dem Motto, was für
unterschiedliche Programme gibt es auf dem aktuellen PC, was für unterschiedliche Betriebssysteme
gibt es so, warum gibt es unterschiedliche Programme in verschiedenen Kategorien, wie
verwendet man das Internet ordentlich ohne sich irgendeinen Mist einzufangen, so kann
man anfangen und da geht man über mit aus was bestehendem Computer, warum ist das ganze
so aufgebaut, Internet, Netzwerk, ein bisschen drumherum. Und dann am Ende vielleicht ein
bisschen programmieren. Das ist doch super. Das wäre doch schonmal mehr als das, was die
meisten Leute in 10 oder 12 Jahren in der Schule machen. Also für das, was man in der
Schule, also allein schon das, was da Informatik heißt, hat ja damit kaum was zu tun. Und das,
was man da macht, ist wahrscheinlich ziemlich easy mode. Also bei mir war der Informatikunterricht
an der Schule echt lächerlich. Das kann man überhaupt nicht so nennen. Wir haben Word-Dokumente
in Lila gemacht, weil das Leila Leila, weil der Lehrer das so geil fand, wenn Lila Schrift
drinne war. Und dann haben wir noch ein bisschen PowerPoint, Excel und AXS gemacht. AXS, kann
ich mir noch dran erinnern. AXS war echt die Höhe. Da hat nicht mal Verstanden uns richtig
erklären oder konnte sich immer richtig erklären, wozu man eine Datenbank braucht. Wir haben
Java programmiert ab der 10. Klasse. Ja, das ist gut. Da lernt man wenigstens was. Was
ich halt oft gesehen habe, ist, dass sinnvoller Informatikunterricht oftmals rein freiwillig
ist. Also sprich, es gibt irgendwie so einen Computerkurs oder irgendwie auch ein bisschen
etwa ein Programmierkurs und sowas, aber der ist freiwillig irgendwann nachmittags,
kaum einer macht, außer die Ultrageeks. Für was benötigt man eigentlich AXS? Ehrlich gesagt,
ich habe keine Ahnung, wofür man AXS verwendet. Ich habe ernsthaft keinen blassen Schimmer,
warum man sich AXS antut. Choose my name sagt, Informatik im IT-Abitur geht eigentlich ganz
klar. Java, Bizzle, Software Engineering, Datenbank, SQL, Semplicy. Ich glaube, du warst einer
der Ausnahmen, wo das so gut funktioniert hat. Der Informatikunterricht zum größten Teil
ist einfach crap. Falls es überhaupt gibt. Sunni sagt, er hat HTML gemacht und danach
Java. Ja, perfekt. Perfekt. So muss das sein. Es wird ja auch besser, aber es hat eigentlich
nichts mit der Realität zu tun im Jahr 2020. Das ist eh so ein Ding, wo ich sage, durch
die Bank weg, kriegt man eigentlich in der Schule viel zu wenig erzählt, was man später
interessantes Wichtiges braucht. Es wird ja immer gesagt, so nach dem Motto, in der Schule
lernt man fürs Leben und sowas ist kompletter Schwachsinn. So ein paar Sachen zum Thema,
was muss man machen, um ein Unternehmen in Deutschland zu gründen oder wie macht man
eine Steuererklärung oder solche Dinge. Hey, sowas sollte man den Leuten auch mal erklären.
Und man lernt in der Schule, finde ich auch nicht mal, weil es jemand gerade geschrieben
hat, wie man sich Wissen aneignet. Das lernst du vielleicht, wenn du was studierst. Was
du meistens in der Schule lernst, ist, wie man mit möglichst wenig auswendig Lernen
so gut es geht, durchkommt irgendwie. Wirklich lernen oder auch Wissen lernen oder so, wirst
du eigentlich nicht. Man entwickelt der Schule ein Gefühl für, was man sagen soll, was als
richtige Antwort akzeptiert wird. Mietverträge, ja, solche Sachen. Ich finde, so ein bisschen
Probleme des alltäglichen Lebens, die auf einen zukommen, sollte man in der Schule mal
zumindest thematisieren. Wie gesagt, sowas wie, wie miete ich mir eine Wohnung, wie mache
ich eine Steuererklärung, wie gründet man in Deutschland Unternehmen, worauf achtet
man so, wie sieht es mit Vermögens, was weiß ich, mit Haus kaufen in Deutschland aus,
wie sieht es mit Vermögensanlagen in Deutschland aus. Also generell so ein bisschen was, was
man im Leben auch was von hat. Dann müssen auch die Eltern was beibringen, ja klar. Letztendlich
kann es den Eltern keiner abnehmen, das zu machen. Aber guck mal, wenn einer acht, was
weiß ich, wie viele Stunden am Tag, fünf Tage die Woche in der Schule ist, dann ist
er nicht so viel verlangt, dass dort auch mal ein paar Sachen beigebracht werden, die
fürs alltägliche Leben später für jeden oder für nahezu jeden relevant sind. Und
ich sage gar nicht, dass man anderes jetzt gar nicht mehr machen soll, aber vielleicht,
vielleicht könnte man die ein oder andere Sache ein bisschen zurückfahren. Zum Beispiel
mein persönlicher Eindruck war, lassen wir jetzt mal Kunst, Musik und sowas mal weg.
Religion, Ethik, lassen wir mal weg. Also gehen wir mal von aus, das behalten wir bei,
da beschneiden wir nix. Zum Beispiel war Chemie. Chemie war so ein Ding, das hat man viel zu
viel gemacht für das, was auch nur ansatzweise wichtig ist später. Man hat irgendwelche
Masse von Atomen und Gedöns berechnet. Das mag durchaus sein, dass das elementare Bestandteile
unserer Umwelt sind, aber das sind keine elementaren Bestandteile unserer Umwelt, über
die man für das tagtägliche Leben Bescheid wissen muss. Es ist wichtig, dass man das
weiß, das sind so grundsätzliche Sachen, wie ist die Welt aufgebaut, wie ist Materie
aufgebaut. Klar, aber ob man Masse von Atomen und dichte Geschichten, ob man das wirklich
unbedingt dann alles so im Detail wissen muss, wage ich mal zu bezweifeln. Zumal man das dann
irgendwie auch in Klassen macht, dass man das später erstens mal weiß, sollte man es
noch mal brauchen. Und wenn man sich dafür interessiert und man sowas gar so was studieren
möchte, dann ist es eh egal, ob man das mal an der Schule gehabt hat oder nicht. Ich denke,
man könnte schon in einigen Bereichen da ein bisschen Platz machen, dass man eben alltägliche
Sachen lernt, die 90% oder ein Riesenteil der Leute später mal betreffen wird. Und
das wird in der Schule, finde ich, zu wenig gemacht. Außerdem wird generell in der Schule
zu viel auswendig gelernt. Religionsunterricht würde ich prinzipiell eh nicht machen, das
ist ja zum größten Teil auch schon Ethik. Weiß gar nicht, ob es klassische Religionsunterricht
noch gibt. Ja, auch so biologische Sachen. Da ist auch vieles dabei, wo man sagen will,
ok, Grundlagen an sich gut und schön, aber gar so im Detail muss man es gar nicht wissen.
Es ist schwierig. Was ich auf keinen Fall will, ist, dass man jetzt sagt, ok, da müssen
die Leute eben noch länger in die Schule gehen. Das kann ja nicht Sinn und Zweck der Sache
sein. Noch länger sollen die Leute nicht in die Schule. Wenn es nach mir geht, sollen
die Leute eher weniger in die Schule gehen. Es kann mir keiner erzählen, dass man wirklich
was lernt und auch was hängen bleibt, wenn man 12 Stunden am Tag hat. Wie soll denn das
funktionieren? Und wohlgemerkt, 12 Stunden, die total unterschiedlich sind. Wir hatten
teilweise Stundenpläne, die gingen bis nachmittags, selten gebe ich zu, aber hatten wir 12 Stunden,
und das war dann so was wie 4 Stunden Mathe, 2 Stunden Geschichte, Sport, Musik und dann
irgendwie nochmal hintendran Biologie oder so. Komplett zusammengewürfeltes Zeug. Ja,
wir hatten einen Tag mit, vielleicht erzähle ich jetzt auch Scheiße. Wir hatten saulang.
Ja, wir hatten auch noch 45 Minuten. Ach ja, mit Stunden, mit Stunden meine ich 45 Minutens
Stunden, ja. 45 Minutens Stunden. 45 Minutens Stunden, Doppelstunde war 90 Minuten, dann
gab es Viertelstunde Pause, außer um, ich glaube um 11 gab es dann eine halbe Stunde
Pause, irgendwie so. Weiß gar nicht mehr genau. Und ich bin mir jetzt eigentlich relativ
sicher, dass wir an einem Tag in der Woche, in der letzten Klasse, dass wir da 12 Stunden
haben. Das war irgendwann mittags, mittags 15.30 Uhr oder so war das irgendwie erst fertig.
Lass doch mal ausrechnen. Ja, sind 9 Stunden, passt doch. Das sind 9 Stunden, 9 Stunden Unterricht
mit Pause. Das ist ein bisschen sehr lang, oder? Aber ich bin mir jetzt, ich kann es
also ich kann es jetzt nicht beschwören, ja. Aber ich bin mir relativ sicher, dass wir
einen Tag hatten, das war 12 Stunden und dabei, da kannst du dir doch nichts merken. 6 Stunden
ist das höchste der Gefühle. 6 Stunden ist das wirklich das höchste der Gefühle, wo
du auch nur halbwegs aufmerksam sein kannst. Ich fände das viel sinnvoller, wenn es 6
Stunden wären und dafür 4 Stunden das eine und vielleicht noch 2 Stunden bisschen was
zum Ausgleich, also dass man irgendwie sowas hätte wie 4 Stunden. Na gut, wir haben angefangen,
glaub. Wann ging die Schule los? 7.45 Uhr? Ne, das kann nicht sein, dann habe ich Mist
erzählt. Das kann nicht sein. Das können keine 12 Stunden gewesen sein, weil das wären
allein schon 9 Stunden, das wären allein schon 9 Stunden bis 17, das kann nicht sein. Ne,
das muss weniger gewesen sein. Es können keine 12 Stunden und 45 gewesen sein mit Pause.
Egal, scheiß drauf, es war saumäßig lang. Ich fände das viel sinnvoller, wenn man dann
sagt, ok, es sind 6 Stunden, da kann man sich wenigstens ein bisschen was merken und dann
hast du aber die Sache wenigstens am Stück wahrgenommen, dann hättest du 4 Stunden Mathe,
jetzt mal Hardcore-Geschichte gesagt und dann hättest du nachmittags noch 2 Stunden irgendwas
zum bisschen abschalten im Kopf, sei es eine Doppelstunde Musik oder eine Doppelstunde Kunst
oder eine Doppelstunde Sport oder irgendwas, das wäre doch eigentlich ganz sinnvoll.
Ja und wie gesagt, ich fände es halt cool, wenn man den Leuten ein bisschen mehr Sachen
beibringt, die im alltäglichen Leben auch was bringen. Wie gesagt, sei es nur wie das
mit Steuererklärung, Mietverträgen aussieht, vielleicht auch mal angucken, ok, wie gucke
ich denn nach einem Ausbildungsplatz, wie gucke ich denn das einzelne Unternehmen an,
was könnte da was für mich sein, wie gründe ich ein Unternehmen in Deutschland vielleicht,
es gibt ja zig Themen, die vielen Leuten später was bringen würden. Du warst bestimmt 12
Stunden aus dem Haus und deshalb macht sich eingebrannt, ja das kann schon sein. Wirtschaft
und Recht, zumindest ein bisschen, ja genau. Ja, genau. So ein paar Sachen drum herum,
das wäre echt gut. Und ich hab jetzt schon, weil es hier gerade alle im Chat schreibt,
diese 30 Beispiele gab es alle bei uns, ich hab das jetzt auch schon von eingehört, dass
es ein bisschen mehr Einzug hält mittlerweile. Aber ich hab so meine Zweifel, ob das die
Leute wirklich gut für das Leben, was nach der Schule kommt, vorbereitet. Letztendlich
die meisten Erfahrungen musst du selbst machen, aber es ist doch nicht verkehrt, wenn du von
ein paar Sachen schon mal gehört hast. Der größte Jebait, den es bei mir jemals in
der Schule gegeben hat, war, wir hatten einen Wahlpflichtfach, das hieß selbstständig werden.
Und der Text war schon so geschrieben, als ging es da wirklich drum, so nach dem Motto,
wie gründet man Unternehmen in Deutschland, was gibt es da so für rechtliche Geschichten
und so. Und das war halt ein Thema, was mich damals auch schon echt interessiert hat. Da
hab ich mir gedacht, okay, meldest du dich dafür an. Und wisst ihr, was wir gemacht
haben, was die mit selbstständig lernen gemeint haben? Wir haben kochen gelernt. Die haben
einen Wahlpflichtfach angeboten, was sich gelesen hat nach ein bisschen minimal BWL
und rechtliche Geschichten und auch vom Text her und vom Titel her und am Ende hat man
gekocht. Nicht, dass es jetzt wahnsinnig schlecht wäre, ein bisschen kochen zu lernen, aber
der Jebait war, dass es komplett anders verkauft wurde. Ich fand das am Ende gar nicht schlecht.
Da haben wir Kekse gebacken und sonst was, das waren auch die letzten zwei Stunden am
Tag, da kann ich mich noch dran erinnern. Wahlpflichtfach, ja, sowas hatten wir, also
ich, du musst, du hattest irgendwie, keine Ahnung, vier Stunden in der Woche, da musst
du dir dann aussuchen, was du machen willst. Und ich fand das mit kochen gar nicht mal
schlecht, weil wir haben dann Kekse gemacht und solche Sachen und ich fand es aus so
fern nicht schlecht, weil das waren die letzten zwei Stunden, da hat man sich immer was zu
essen gemacht und ordentlich gefressen, bevor man nach Hause gegangen ist. Meine Oma hat
sich immer gewundert, warum ich nichts mehr zu essen wollte. Vielleicht warst du einfach
im falschen Raum, ja man weiß nie genau. Das war noch, ich fand es gar nicht schlecht,
was ich aber richtig jebaited fand, war halt einfach, dass die das uns anders verkauft
haben und das hat mich bis zum Schluss übelst angepisst. Sport war immer easy, auch wenn
man pepo fett war. Ja, damals war ich noch nicht pepo fett, damals war ich ziemlich
sportlich. Ich hab nie Strecken gemessen und sowas, aber ich weiß, dass ich teilweise
mehrere Kilometer geschwommen bin und auch rennen konnte, ohne dass ich irgendwie großartig
aus der Puste kam, also sprich heute, wenn ich mal Gas gebe und über den Bahnübergang
renne, denke ich mir so, war aber anstrengend. Captain Peng, das haben wir in diesem Kochen
Kurs auch gemacht. Wir haben auch ein bisschen was genäht. Naja, gut, also es ist 22.00
und ich muss ins Bett. Spontaner Stream heute gewesen. Außerdem schön, dass viele am Start
waren. Wir sehen uns, machts gut, bis morgen, oder so, see you.
