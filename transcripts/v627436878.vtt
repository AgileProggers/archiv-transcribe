WEBVTT

00:30.000 --> 00:32.000
Das war's für heute.

00:32.000 --> 00:34.000
Bis zum nächsten Mal.

00:34.000 --> 01:01.000
Das war's für heute.

01:01.000 --> 01:03.000
Das war's für heute.

01:03.000 --> 01:30.000
Das war's für heute.

01:30.000 --> 01:55.000
Das war's für heute.

01:55.000 --> 01:57.000
Das war's für heute.

01:57.000 --> 02:02.840
Microsoft, please. Mal gucken, ob uns Microsoft wieder enttäuscht, weil wir

02:02.840 --> 02:08.520
probieren heute WinUI 3.0 aus. Das kam vorgestern raus, erst im Review, da warte

02:08.520 --> 02:14.520
ich ja schon seit der Ankündigung drauf, weil es die erste gescheite Sache seit

02:14.520 --> 02:19.800
15 Jahren ist, die Microsoft für Desktop-Anwendungen rausgebracht hat oder

02:19.800 --> 02:25.440
rausbringen wird oder denkt, rauszubringen, was auch immer. Aber ich muss erst mal

02:25.440 --> 02:28.320
mal Streaming-Recher noch anmachen, also den zweiten, wo ich dann Vorschau habe

02:28.320 --> 02:34.640
und alles. Deswegen seht ihr euch jetzt hier selbst im Chat. Ja, und zwar das hier,

02:34.640 --> 02:42.840
guckt mal, WinUI 3.0, Review, Bre-View heißt ja Bre-View. Wir sind ja hier bekannt

02:42.840 --> 02:50.920
dafür, dass wir besonders exzellent exquisit korrekt immer alles auf

02:50.920 --> 03:01.720
Englisch aussprechen. So, Vorschau läuft. Vorschau läuft, wenn wir den ganzen Crap hier

03:01.720 --> 03:05.840
ausmachen. Leute, ich muss mir gleich noch ein neues T-Shirt anziehen, ich komme

03:05.840 --> 03:10.520
gerade von draußen, ich war hier, stellt euch mal vor, stellt euch das mal vor, ich

03:10.520 --> 03:17.160
war im Wald. Guckt euch das mal an. Das ist mal richtig

03:17.160 --> 03:23.120
MonkaS. Guckt euch das mal an.

03:25.120 --> 03:39.680
Ja, in der Sonne. Ja, Monarch, richtig, Monarch S. Das ist das beste E-Mode dafür. Alle

03:39.680 --> 03:51.400
einmal Monarch S. Das habe ich doch gar nicht drinne. Monarch S, das brauchen wir

03:51.400 --> 03:58.760
noch. Monarch S und zwar Transparent. Das haben wir nicht. Ah, Monarch S Transparent,

03:58.760 --> 04:12.080
exzellent. Gibt es das vielleicht auch in groß? Ah, meinetwegen, Safe Image. Monarch S, das

04:12.080 --> 04:15.720
brauchen wir noch, ganz, ganz wichtig.

04:17.880 --> 04:26.680
Monarch S, all das ist ein scheiß aufgelöstes GIF, äh, JIF, JPEG, JPG, was auch

04:26.680 --> 04:35.800
immer. Google suche Dark Mode, keine Ahnung, das ist hier der Dark, der Dark Reader, aber

04:35.800 --> 04:39.440
es gab irgendwie auch die Möglichkeit, glaube ich, mittlerweile, Chrome Native irgendwie

04:39.440 --> 04:43.320
auf Dark Mode zu schalten. Zumindest, was wir uns heute angucken, ist das hier, guckt

04:43.320 --> 04:51.600
mal hier, exzellent. Poggers, Five Head. Ähm, Leute, hat jemand von euch mal versucht,

04:51.600 --> 04:57.480
ihr Bild, Bild 2020, Webcast, sich anzugucken. Ich bin dafür zu dumm, ich kriege das nicht

04:57.480 --> 05:01.920
gebacken. Wenn man sich das hier anguckt und sagt, hier Sessions, Session Catalog, da gibt

05:01.920 --> 05:10.800
es nämlich den Talk von einer halben Stunde zum neuen WinUI und, ähm, ah, das da? Oh,

05:10.800 --> 05:20.480
wo ist der Talk? Der war doch schon. Wo ist er? Warum soll ich mich registrieren? Verstehe

05:20.480 --> 05:34.400
ich nicht. Das, das kapier ich nicht. Nee, nee, nee, Adplog, glaube ich nicht. Nö.

05:34.400 --> 05:40.360
Der Talk war schon, ich bin da einfach zu small brain für. Daddy Khan zwei Monate,

05:40.360 --> 05:47.640
vier Monate? Nee, Moment. Monarch S. Vier Monate und zwei Monate in Folge. Ah, exzellent,

05:47.640 --> 06:06.080
exzellent. Kein echter Gamer. Ja, ist so. Aber im Prinzip ziemlich, ähm, so Leute, ähm,

06:06.080 --> 06:09.960
wir müssen jetzt jetzt, wow, wow, wow, wow, wow, hier, hier stimmt, äh, hier stimmt der

06:09.960 --> 06:24.800
Dark Mode aber mal gar nicht an. What the fuck? Das sieht überhaupt, okay. Was auch immer.

06:24.800 --> 06:34.280
Oh, okay. Äh, also. Ah gut, warum nicht, machen wir da. Aber das Ding, das Ding kann

06:34.280 --> 06:38.400
man in Dark Mode stellen. Die Microsoft-Seite kann man, ich weiß, dass das geht. Ich hab

06:38.400 --> 06:42.120
die nämlich bei mir auf dem Desktop auch im Dark Mode. Man kann die Microsoft-Hilfe-Seite

06:42.120 --> 06:49.960
irgendwie in Dark Mode stellen. Wo war das nochmal? Irgendwo ging, das ging, das ging,

06:49.960 --> 07:00.080
ich weiß, dass das ging. Ja, hier, theme. Dark, exzellent. So, und das probier mal aus,

07:00.080 --> 07:04.360
Leute. Ähm, ich muss ja aber kurz mal schnell ein neues T-Shirt anziehen, weil ich bin

07:04.360 --> 07:09.120
noch etwas, äh, Monarch-S. Gleich wieder am Start.

08:34.360 --> 08:49.160
So, wieder am Start. So Leute, und wenn wir hier fertig sind, so in zwei Stunden oder

08:49.160 --> 08:56.520
so, mal gucken, so 13 Uhr rum, oder vielleicht 13.3, mal gucken, wann es losgeht, ähm,

08:56.520 --> 09:07.880
dann, ähm, und uns mit danach ist, dann machen wir Warzone-Stream Only-Only-Wins. Heute wird

09:07.880 --> 09:12.080
nur gewonnen. Hast du schon die neuen Features von C-Shop 9 angesehen? Wir haben uns ein

09:12.080 --> 09:17.040
paar Previews angeguckt, ja. Ähm, mir ist aber jetzt nix so richtig, eine Sache fand

09:17.040 --> 09:23.640
ich richtig cool, aber ich komm grad nicht mehr drauf, was das war. Eins fand ich mega

09:23.640 --> 09:35.080
praktisch. Was war das denn noch mal? Ähm, was war das denn hier noch mal? Das da war

09:35.080 --> 09:47.560
es nicht. Das war es, glaub ich, auch nicht. Equality. Das war ganz nice, aber es gab

09:47.560 --> 09:56.880
doch noch was anderes. Das war auch ganz cool. Parameter-Null-Checking. Ja, das war cool,

09:56.880 --> 10:01.200
aber das war klar, dass so was in der Richtung kommt. Lambda-Discords fand ich sehr praktisch,

10:01.200 --> 10:07.640
dass es jetzt endlich offiziell drin ist. Ähm, was war das denn? Irgendwas anderes

10:07.640 --> 10:17.840
fand ich ultra praktisch, aber ich hab vergessen was. Ja. Init-Only-Properties, ok, das ist

10:17.840 --> 10:27.280
ganz nett. Aber ist das schon Final? Oder sind das noch, ähm, wie heißt es, so RFC-mäßig?

10:27.280 --> 10:55.080
Oder ist das schon Final? Ahm, ähm, Records? Propositional? Hm. Wow! Wow, ok, ok, ok, ok,

10:55.080 --> 11:02.640
wow, ok. Das ist eigentlich ganz cool. Das ist dann eher so Richtung Go sieht das aus

11:02.640 --> 11:08.200
fast schon. Nee, nee, nee, nee, nee, nee. Go braucht ja auch eine Main-Function. Hier,

11:08.200 --> 11:17.000
das ist cool, das ist cool. Improved-Pattern-Matching ist cool. Ähm, das ist sehr, das ist sehr

11:17.000 --> 11:25.080
nice, dass man jetzt quasi das abkürzen kann und sich das New-Point sparen kann. Ähm,

11:25.080 --> 11:32.640
hier müssen wir uns echt mal im Detail angucken. Alter, Wald. So, ähm, also was brauchen wir

11:32.640 --> 11:36.080
denn dafür, dass wir den Kram ausprobieren können? Das ist mal zur Erklärung was das

11:36.080 --> 11:42.720
Ganze ist. Ähm, ich verstehe gar nicht warum das nicht mehr Hype auslöst. Das Ding ist

11:42.720 --> 11:52.440
seit 15 Jahren das erste UI, neue UI für Windows, was man verwenden kann richtig. Das

11:52.440 --> 11:58.600
letzte UI was man sinnvoll verwenden kann war WPF. Danach kam WinRT, UWP, haste nicht

11:58.600 --> 12:02.720
gesehen, geschiss. Das konnte man nicht richtig verwenden. Das Problem, um das nochmal kurz

12:02.720 --> 12:10.720
zu recapen, ähm, was das Problem an UWP ist, äh, der neue Package Manager für Windows,

12:10.720 --> 12:16.160
den schreibe ich mir mal auf, den wollte ich mir auch nochmal angucken, genau. Stream-Idee

12:16.160 --> 12:24.040
hatten wir doch hier irgendwo so eine, so, also, ähm, äh, Windows Package Manager, äh,

12:24.040 --> 12:29.600
9.0, C Sharp 9.0. Genau, um nochmal kurz zu erklären was das Problem an der ganzen Geschichte

12:29.600 --> 12:36.960
war, warum Windows UI so gesagt hat und warum, warum die meisten Windows-Software heute keine

12:36.960 --> 12:41.160
richtige Windows-Software ist, sondern eher so eine Mischung aus entweder Electron, also

12:41.160 --> 12:46.320
in Browser oder Qt oder sonst was. Das liegt daran, das letzte, ich glaube 2006 hat Microsoft

12:46.320 --> 12:54.000
UWP rausgebracht und danach kam nix mehr. Nach UWP kam WinRT und UWP und Crap. Und das

12:54.000 --> 13:03.280
Problem an UWP war, ähm, dass du heute eigentlich immer noch nicht UWP richtig verwenden kannst.

13:03.280 --> 13:08.920
Also meistens, UWP und WinRT ist so ein zusammenhängendes Ding, also sprich, jedes Programm

13:08.920 --> 13:15.000
was du machst hat, hat ne Sandbox drum herum. Was schonmal scheiße ist, ja. Es gibt Möglichkeiten,

13:15.000 --> 13:19.360
dass man das quasi sich rappt, da braucht man quasi, muss man den Prozess starten, der

13:19.360 --> 13:24.720
dann auf alles zugreifen kann und so, mega wirkt. Und das hauptsächlich Problem an UWP-Anwendung

13:24.720 --> 13:30.560
ist die, die Verteilung von den Anwendungen. Also sprich, man hat die eine Möglichkeit,

13:30.560 --> 13:38.520
das hier über den Microsoft Store zu machen, aber das ist ja nur wirklich, was anderes

13:38.520 --> 13:43.160
fällt mir zum Microsoft Store nicht mehr ein. Also niemand möchte wirklich auf den Microsoft

13:43.160 --> 13:48.200
Store angewiesen sein. Und das ist die eine Möglichkeit, UWP-Anwendungen zu verteilen.

13:48.200 --> 13:53.400
Die andere Möglichkeit ist, UWP-Anwendungen über den eigenen Installer zu verteilen.

13:53.400 --> 13:59.560
Das ist ja kein Ding, da sind ja die Windows Leute dran gewöhnt. Windows Leute mögen

13:59.560 --> 14:06.760
ja Installer, Setup, Exe und sonst was. So, das Problem ist jetzt, du brauchst ein Codesigning-Zertifikat

14:06.760 --> 14:13.140
um UWP-Anwendungen beziehungsweise um die selbst verteilen zu können. Und niemand, der einfach

14:13.140 --> 14:16.680
mal so Anwendungen entwickelt und nicht gerade in irgendeiner größeren Firma arbeitet,

14:16.680 --> 14:20.640
die die Anwendung entwickelt, kauft sich ein Codesigning-Zertifikat. Das kostet 300 Euro

14:20.640 --> 14:25.240
im Jahr über den Daumen gepeilt und nur das dafür, dass ich dann Windows-Anwendungen machen

14:25.240 --> 14:29.240
kann. Es hat noch ein paar andere Probleme, aber voll für den Arsch. So, und was Microsoft

14:29.240 --> 14:34.680
mit WinUI 3 macht, ist endlich seit 15 Jahren. Ohne Scheiße. Die letzten 15 Jahre war Microsoft

14:34.680 --> 14:42.240
so. Mit WinUI 3 ist Microsoft hoffentlich wieder so. Die haben ihre GUI-Geschichte von

14:42.240 --> 14:49.720
UWP genommen. Also das da ist zum Beispiel eine UWP-Anwendung. Ist jetzt ein scheiß

14:49.720 --> 14:55.040
Beispiel, weil der Taschenrechner ist abartig hässlich. Wir können uns auch mal den Kalender

14:55.040 --> 14:59.280
angucken. Das ist auch eine UWP-Anwendung, die sieht ein bisschen schöner aus. Also

14:59.280 --> 15:04.680
die haben ihre GUI-Geschichte genommen und haben gesagt, okay, wir erlauben jetzt auch

15:04.680 --> 15:10.960
ganz normale Windows-Anwendungen mit dieser Oberfläche. So, und das ist im Endeffekt,

15:10.960 --> 15:17.640
was hinter WinUI 3.0 steckt. So, jetzt müssen wir nur noch gucken, wie man den Kram installiert

15:17.640 --> 15:25.120
kriegt. Getting started. Wahrscheinlich müssen wir jetzt erst das halbe Internet installieren,

15:25.120 --> 15:30.720
weil es Microsoft ist. Also was brauchen wir? To use WinUI 4 Desktop Project. Make sure

15:30.720 --> 15:39.480
that you have Windows Version 13 Pro... Haben wir bestimmt, oder? Wo sieht man das überhaupt,

15:39.480 --> 15:46.400
was für eine Windows-Version man hat? WinFair, CMD. War das da WinFair? Excellent, haben

15:46.400 --> 15:59.400
wir. Das haben wir schon mal. Oh, okay. Soll ich noch ein Wishl Studio... Sind die das

15:59.400 --> 16:06.320
Wahnsinns? Ich hab Wishl Studio 17 drauf. 17 können wir mal remove. 17 können wir mal

16:06.320 --> 16:19.400
remove. 17, remove, remove. Piss dich alle. 17 können wir mal. Wobei... Ah, ich hab genug

16:19.400 --> 16:28.480
Platz für einen Dritter, easy. Okay, ähm... Nee, Moment, was? Install Wishl Studio 16.7

16:28.480 --> 16:37.760
Brifue 1. See? Wishl Studio Brifue muss ich installieren, okay? Community. Alles klar.

16:37.760 --> 16:45.760
Das geht relativ schnell, nachdem sich Vodafone jetzt ja eingekriegt hat. Piss dich alle!

16:45.760 --> 16:55.120
Äh, wie ist Community? 1, 2, 3, 4, 5, 6. Excellent Passwort. Wishl Studio Installer...

16:55.120 --> 17:17.640
Ja. Nicht Community. So, also das, was wir installieren. Ähm, dann brauchen wir... Was?

17:17.640 --> 17:25.640
Man muss.NET 5, Brifue 4, 32-Bit und 64-Bit installieren, okay? Ah, yes, excellent. Machen

17:25.640 --> 17:32.040
wir, machen wir alles. Ähm,.NET Desktop Development, UWP Development, wir installieren mal den...

17:32.040 --> 17:38.440
Oh, 14 Gigabyte, was ist da los? So ein Verarsch, ey. Was für ein Workload müssen wir installieren?

17:38.440 --> 17:45.720
Okay,.NET Desktop Development müssen wir auf jeden Fall installieren. Ich glaub, UWP

17:45.720 --> 17:50.440
können wir, können wir uns... Blend brauchen wir nicht. Entity Framework Tools brauchen

17:50.440 --> 17:57.880
wir auch nicht. Profiler, Just-In-Time-Debugger. Was brauchen da auf einmal so viel Speicherplatz?

17:57.880 --> 18:06.080
Eben war es, eben, eben war es doch noch angeblich 14, 14G. Hä? Habt, wo, wo ist das jetzt so

18:06.080 --> 18:18.240
vor einmal hin? Hä? Hä? What the fuck? Ist die Größenberechnung im Arsch oder so? Kann

18:18.240 --> 18:28.160
das sein? Ah, Blend brauchen wir nicht. Install while downloading. Ah, install, gut, geht

18:28.160 --> 18:34.400
ja schnell. Max, bist du bereits geleakt? Ich bin schon 20.000 Mal geleakt. Ich bin

18:34.400 --> 18:39.240
in der Suppe geleakt, ich bin im Fernseher geleakt, ich bin in der Verpackung geleakt,

18:39.240 --> 18:51.920
ich bin überall geleakt. Okay. PopOS hat mir nicht gefallen. Haben wir im Stream ausprobiert.

18:51.920 --> 19:01.480
So, also den müssen wir installieren. BrickView 1. Ich hau mir jetzt einfach mal die ganzen

19:01.480 --> 19:06.840
Crap drauf. Oh Leute, kann das sein, dass die, dass ihr nix seht? Kann das sein, dass

19:06.840 --> 19:19.360
ihr nix seht? Nee, oder? Ihr seht was? Ja, meine Vorschau, meine Vorschau spackt gerade

19:19.360 --> 19:32.360
richtig rum. Die ist, meine Vorschau ist hier. Monarch S. Ich glaube ich weiß woran das liegt.

19:32.360 --> 19:36.120
Windows hat bestimmt mal wieder die Soundsettings umgestellt. Das macht Windows nämlich gerne.

19:36.120 --> 19:51.760
Ja, okay, geht. Nein, geht nicht. Okay, also anscheinend sind die Soundsettings doch richtig.

19:51.760 --> 20:06.160
Woher kommt das? Ja, das ist neu. Okay. Während der Kram installiert. Close. Jetzt müssen

20:06.160 --> 20:09.080
wir das noch installieren. Wir haben wahrscheinlich jetzt erstmal 40 MB Microsoft Crap drauf

20:09.080 --> 20:20.000
installiert. Install. Und nebenbei nicht vergessen mal die OBS-Stats aufzumachen, dass nix

20:20.000 --> 20:29.440
abkackt. Seit ich VoiceMeter verwende, forscht mir Windows nicht mehr rein, okay. Jetzt hatte

20:29.440 --> 20:34.480
ich auch mal eine ganze Weile drauf, vielleicht soll ich das wieder installieren. VoiceMetors.

20:34.480 --> 20:39.800
Okay, das ist auch klar installiert. Das haben wir auch erzählt. Also, Visual Studio haben

20:39.800 --> 20:45.760
wir drauf..NET Core 5. Briefview haben wir. Oh, das heißt ja nicht mal Core. Sorry Leute.

20:45.760 --> 20:53.560
.NET 5. Die wollen ja die Leute verwirren. Also, nur mal zur Erklärung..NET 5 ist eigentlich

20:53.560 --> 21:00.280
.NET Core 5, beziehungsweise eigentlich.NET Core 4. Sie haben es jetzt allerdings das Core

21:00.280 --> 21:08.400
gestrichen.NET 5 genannt. Und nicht zu verwechseln mit dem.NET Framework 4.8. Man könnte ja

21:08.400 --> 21:16.080
denken, dass.NET 5 der Nachfolger des.NET Framework 4.8 ist. Aber das stimmt nicht..NET

21:16.080 --> 21:23.440
5 ist eigentlich.NET Core 4 und hat mit.NET Framework 4.8 nichts zu tun. Exzellent Microsoft

21:23.440 --> 21:31.600
Logik. Beste. Microsoft Benahmung, die haben es drauf. Was will er machen? Ich will WinUI

21:31.600 --> 21:38.680
3 ausprobieren. Okay, ich glaube, wir haben noch nicht alles installiert. So, bla, bla,

21:38.680 --> 21:50.400
bla, bla, bla, bla, bla. Download WinUI Briefview 1 Physics. Ah, das ist eine Visual Studio

21:50.400 --> 21:55.440
Extension. Ah, schon eine ganze Bewertung. Wir sehen ja Absolut Bleeding Edge heute dabei.

21:55.440 --> 22:05.840
Und was kann WinUI? WinUI ist quasi die GUI-Technologie, die unter den ganzen neuen Windows-Anwendungen

22:05.840 --> 22:11.440
drunter steckt, mit dem großen Unterschied, dass man keine UVP-Anwendung mehr machen muss,

22:11.440 --> 22:15.640
sondern so eine ganz normale Win32-Anwendung machen kann und dementsprechend darauf das

22:15.640 --> 22:19.440
komplette System zugreifen kann. Also ich habe mir überlegt, was wir heute ausprobieren

22:19.440 --> 22:25.440
ist. Wir gucken, ob wir Files auflisten können. Das ist da quasi Absolut Noob-Style. Dann

22:25.440 --> 22:31.640
gucken wir, ob wir einen GIF abgespielt bekommen, weil ich habe die Hoffnung, dass ich damit

22:31.640 --> 22:41.320
eine besseres GIF-Wiedergabe hinbekomme als mit meiner UVP-Anwendung. Und als letztes

22:41.320 --> 22:47.760
probieren wir dann auch Screenshots anzeigen. Also quasi Desktop-Capture. Desktop-Capture

22:47.760 --> 23:02.040
mit und dann in den Fenster rein. Mal gucken. So. Physics Installer. Exzellent. Und für

23:02.040 --> 23:09.200
welches Visual Studio installiert er das jetzt? Das wird in C-Sharp gebastelt. Visual Studio

23:09.200 --> 23:15.520
Preview. Exzellent. Perfekt. Ja in F-Sharp kannst du das auch machen, aber da sitzen

23:15.520 --> 23:29.600
wir morgen noch. Hast du morgen frei? Ja. Was installiert der dann da für 30 Milliarden

23:29.600 --> 23:45.800
Sachen? Aber. 20 MB Download und erstmal eine halbe Stunde installieren. Ach nee, der installiert

23:45.800 --> 23:52.080
die UVP-Geschichte. Was auch immer. Microsoft, mach einfach. Mach einfach. Vollkommen. Wie

23:52.080 --> 23:59.640
viel Festplattenplatz habe ich denn eigentlich noch? Ah, 53G. Das soll... Moment. Ich hatte

23:59.640 --> 24:11.200
80 davor. Hat das wirklich 30 GB gefressen gerade? Sehe ich das richtig? What the fuck?

24:11.200 --> 24:15.240
Was haben die mir denn da draufgehauen? Ist da schon die nächste Win-House-Version mit

24:15.240 --> 24:30.240
vorinstalliert? Genau, wie in Modern Warfare Update. Keg Triple U. Also wenn das Keg W

24:30.240 --> 24:45.240
ist, dann ist dann Keg Triple U ist dann... Oh, das war Payne's Champ-Witz, Alter. Monarch

24:45.240 --> 24:50.920
S. So, also jetzt haben wir das installiert. Ich glaube, das war es danach. Wenn der Kram

24:50.920 --> 25:06.440
durch ist, so in 20 Stunden, dann... Was installiert der da eigentlich alles? Leute, guckt euch

25:06.440 --> 25:22.000
mal den Verbraucher an. Es geht immer weiter runter. Gleich ist die Festplatte voll. Keg

25:22.000 --> 25:36.960
W. Das brauchen wir auch noch als Emote. Gibt's das transparent? Gibt's das transparent?

25:36.960 --> 26:05.000
Keg W. Nein, ich brauche Keg W als... Warum tauche ich unter Keg W auf? Okay. Okay,

26:05.000 --> 26:31.040
okay. Aha. Was ist denn das beste Keg W emote? Der da? Ne. Das ist übelste low quality emote.

26:31.040 --> 26:38.080
Das müssen wir anderweitig. Ich brauche ein ordentliches, hochaufgelöstes Keg W. Wie

26:38.080 --> 26:46.440
sieht es denn aus mit Pause-Champ? Gibt's das ordentlich hochaufgelöst? Ah, exellent,

26:46.440 --> 26:53.400
das brauchen wir. Pause-Champ. In der Zeit, wo Visual Studio hier am installen... Ach,

26:53.400 --> 27:04.480
du Scheiße, was macht... 50,7... Was installiert mir das alles? Monkeys. Ich glaube, ich muss

27:04.480 --> 27:29.200
erst mal Festplattenplatz freigeben, klar. Pause. Was? Pause-Champ. Was? Oh, oh, es

27:29.200 --> 27:42.960
hat sich selbst aufgeräumt wieder. Ich habe gedacht, 80 Gigabyte reichen für eine Briefview,

27:42.960 --> 27:56.000
Leute. Ich weiß, das ist ziemlich blöd gewesen, aber ich habe gedacht, 80G sind genug. Haben

27:56.000 --> 28:05.560
sich eigentlich Leute bei dem Geschlechts-Tweet über Telekom beschwerten? Ne, ne. Wir beobachten

28:05.560 --> 28:19.320
dich Windows-Installer. Der Windows-Installer wird genau beobachtet. Was macht das Ding

28:19.320 --> 28:26.000
denn da? Das installiert mir glaube ich wirklich irgendwie... Vielleicht hätte ich das besser

28:26.000 --> 28:30.040
in einer VM machen sollen. Das installiert mir da wirklich 30 Millionen Sachen drauf.

28:30.040 --> 28:51.160
Ich hoffe, man kann das ordentlich deinstallieren wieder. 50. Wir haben jetzt ziemlich genau

28:51.160 --> 28:56.880
30 Gigabyte verbraucht schon. Stimmt, wir haben keinen Pause-Champ drin. Warum haben

28:56.880 --> 29:09.440
wir das nicht? Das haben wir gleich, Leute. Franger-Faces-Z. E-Modes. Haben wir gleich,

29:09.440 --> 29:24.520
haben wir gleich, Leute. Gleich ist Pause-Champ drinnen. Pause-Champ. Oh, edit. Oh, ist

29:24.520 --> 29:30.520
das drinne, Leute. Kann sein, dass ihr Refreshen müsst. Es kann auch sein, dass es eine Weile

29:30.520 --> 29:36.680
dauert bis es gesyncht ist, aber ich habe es in FFZ eingefügt. Also Leute, die FFZ

29:36.680 --> 29:45.840
haben und den Chat Refreshen sollten es jetzt eigentlich gleich sehen. Pause-Champ. Ich

29:45.840 --> 29:50.840
hätte jetzt nicht gedacht, dass der da... Wir gucken mal mit dem Prozess-Explorer, was

29:50.840 --> 30:01.880
das Ding da macht. Nehradorn-Stufe 1 für 10 Monate. Exzellent. Exzellent-Subscription.

30:01.880 --> 30:13.640
Na ja, so wirklich viel machen tut er nicht, ne? Na gut, während er installiert, habe ich

30:13.640 --> 30:19.160
mal eine andere Frage an euch, Chat. Das ist bestimmt so der typische Microsoft-Installer.

30:19.160 --> 30:33.240
Der macht jetzt so und gleich... Ich habe eine andere Frage an euch. Und zwar, mein

30:33.240 --> 30:42.840
Mousepad ist übelst im Arsch. Also aktuell habe ich ja das da als Mousepad. Das Ding.

30:42.840 --> 30:54.120
Ne, das... Was haben die denn alles für Mousepads? Hiro Plus, Taito, Kanga. Kanga ist... Hier,

30:54.120 --> 31:09.200
das da habe ich aktuell. Und eine G403. So, ich bin jetzt gerade am Überlegen. Ah, Chat-Big-Brain-Empfehlung

31:09.200 --> 31:33.280
sehe ich hier gerade. Was ist mit der Handballen-Auflage? Dies ist auch nicht schlecht, oder? Naja, zumindest...

31:33.280 --> 31:41.480
Was will das denn? Zumindest habe ich mir jetzt überlegt, ob ich von diesem Rocket Hero und

31:41.480 --> 32:00.000
der G403, ob ich nicht umsteigen soll auf eine G Pro Wireless. Also quasi... Leute, was ist

32:00.000 --> 32:25.480
da der Unterschied? Was ist da der Unterschied? Außer 10 Euro. Deutsches Mouse-Layout. Ich

32:25.480 --> 32:35.400
habe echt keine Ahnung, was der Unterschied zwischen den zwei Dingern ist. Ah, die eine

32:35.400 --> 32:52.160
ist nicht auf Lager. Und die andere schon. Ah, verstehe. Big-Brain. Okay, also ich überlege,

32:52.160 --> 32:59.360
ob ich mir das hier holen soll. Und ein... Wie heißt das andere? G903. Ne, ne. Äh, äh.

32:59.360 --> 33:14.000
Wie heißt das? Wie heißt das Auflademaus-Pad nochmal? EU-Version bei einer Maus? Die deutsche

33:14.000 --> 33:34.760
Version ist breiter. Ne. Hä? Das ist eine Maus. Deutsches Maus-Layout. Ähm... Die Verpackung.

33:34.760 --> 33:50.200
Achso. Ah, gut. Okay, als... Okay, wie hieß dieses Wireless-Charging-Ding nochmal? Charging-Maus-Pad.

33:50.200 --> 33:58.560
Das da, genau. So, und ich habe mir überlegt, ob ich mir jetzt nicht die Kombi hier kaufe.

33:58.560 --> 34:11.320
G-Bro? Bro? Und, äh, ein G-Powerplay. Wie groß ist das? Das ist nice, so. Okay, hast

34:11.320 --> 34:25.720
du das, Tribolon? Ähm... Wie groß ist denn das? 27x32. Das müsste ziemlich so groß sein

34:25.720 --> 34:33.880
wie das, was ich aktuell auch habe. Aktuell habe ich das hier. Das ist noch ein bisschen

34:33.880 --> 34:42.840
älter. Ähm, wie groß ist das? 35x25, ja. Ey, das ist ziemlich genauso groß wie mein

34:42.840 --> 34:54.160
aktuelles Maus-Pad, ne? 27x32. 35x5. Ich glaube, das sind einfach nur die Abmaße irgendwie

34:54.160 --> 35:03.680
anders. Wobei, das ist eher hoch als breit, kann das sein? Ist das eher hoch als breit?

35:03.680 --> 35:13.440
Auf der anderen Seite, man kann es ja drehen, wie man will. Man kann es ja drehen, wie man

35:13.440 --> 35:17.120
will. Es spricht doch eigentlich überhaupt nichts dagegen, wenn ich das hoch kann drehe.

35:17.120 --> 35:28.760
Also sprich, wenn ich das hier am rechten Schreibtischrand nehme. Ich kann es ja drehen,

35:28.760 --> 35:35.320
wie ich lustig bin. Ich muss das ja nicht hochkant legen, ne? Also so wird es ja gegen

35:35.320 --> 35:39.040
die Richtung Monitor zeigen. Oh, wir sind fertig. Exzellent, wir haben es geschafft.

35:39.040 --> 35:47.600
Das G ist gedreht. Ja, das juckt mich ehrlich gesagt überhaupt nicht. Jurok ruft die Polizei.

35:47.600 --> 36:02.000
Da guckt einer, äh, Dings hier. Wie heißt er? Slap Like, wie heißt er? Davy, Davy 405?

36:02.000 --> 36:12.160
Der Bass, der Bass-Typ. Slap Like, der sagt auch immer I'm calling the police. Davy 504,

36:12.160 --> 36:19.040
genau, ja, so. Ok, wir sind fertig. Also wahrscheinlich hole ich mir die Kombi. Ich meine, ein bisschen

36:19.040 --> 36:23.600
größeres Mousepad wäre schon nicht schlecht. Da könnte ich meine Sensitivity vielleicht

36:23.600 --> 36:30.560
noch einen Ticken runterstellen. Aber die Kombi aus, ähm, Wireless und Wireless Charging

36:30.560 --> 36:36.120
ist irgendwie schon cool. Was nicht so cool ist, muss man auch ehrlich gesagt mal sagen,

36:36.120 --> 36:45.160
ich meine 240 Euro für ein Maus und ein Mauspad ist schon mal echt eine Hausnummer, ne? Muss

36:45.160 --> 36:50.160
man die oft aufladen? Ne, das Mauspad lädt ja auf. Deswegen ist es eigentlich wahrscheinlich

36:50.160 --> 36:55.800
ganz praktisch. Oder aber vielleicht lohnt es sich auch mit einem normalen Mauspad und

36:55.800 --> 37:02.400
wenn man die nur einmal alle drei Monate aufladen muss oder so, dann hm. Na gut, also wir haben

37:02.400 --> 37:10.720
alles installiert, dann gucken wir uns das ganze doch jetzt mal an. Ja Kio-kun, keine

37:10.720 --> 37:14.360
Ahnung ob sich das lohnt, das müssen wir erstmal gucken. Wofür gibst du denn sonst

37:14.360 --> 37:21.840
kein Geld aus? Ja gar nicht eigentlich. Die Logitech Mäuse sind viel zu schwer. Das andere

37:21.840 --> 37:31.240
was ich mir überlegt hab, ist das hier. Ähm, aber die musste die importieren, das ist auch

37:31.240 --> 37:42.160
für den Arsch. Äh, äh, wo gibts denn die Mäuse? Ach keine Ahnung. Die ist doch, die

37:42.160 --> 37:51.440
G Pro ist doch relativ leicht, oder? Guck mal. Was wiegt denn die? 80 Gramm, so. Ne G403,

37:51.440 --> 37:57.440
was wiegt ne G403? Moment, ne 80 Gramm ist mit Verpackung, ne? 80 Gramm ist mit Verpackung.

37:57.440 --> 38:20.560
Da müssen wir mal bei Logitech gucken. Äh, wait, wait. Äh, also 87 Gramm und die, alter

38:20.560 --> 38:35.320
Logitech, wo kann man suchen bei euch? G Pro Wireless? Die da wahrscheinlich, ne? Wiegt

38:35.320 --> 38:42.280
was? Nein, ich will nicht Subscribern. Höchstens, höchstens auf Twitch, aber nicht bei Logitech.

38:42.280 --> 38:52.800
Wiegt 80. Ähm, ist sogar noch ein bisschen leichter als meine G403. Wie viel wiegt denn

38:52.800 --> 38:58.960
ne Finalmouse? Was, warte mal. Pro Settings. Was hat ein Scream? Was hat ein Scream von

38:58.960 --> 39:04.640
ne Maus? Der hat glaub ich ne Finalmouse. Das sind die, das hier. Finalmouse Ultralight

39:04.640 --> 39:13.800
Sunset. Mal gucken, was das Ding wiegt. Ähm, steht das da irgendwo vielleicht? So ein bisschen

39:13.800 --> 39:18.520
Hardware-Informationen zu? Gibt's nicht. Das ist overrated. Hardware-Informationen braucht

39:18.520 --> 39:39.840
man nicht. Äh, nein. Die wiegt bestimmt nicht 227 Gramm. Der, der bearded Bob. Aha. What?

39:39.840 --> 39:46.560
67 Gramm. Da hätten sie es auch 69 Gramm machen können, oder? Ich mein, wenn schon,

39:46.560 --> 39:50.600
wenn man mal die, die Möglichkeit hat, der hätte man das auch gleich richtig machen

39:50.600 --> 40:01.720
können. Okay. Also, auf geht's. Ähm, jetzt müssen wir uns den Guide kurz angucken.

40:01.720 --> 40:11.960
Also. Getting started. Create WinUI 3 in Desktop App. Ähm, okay, es gibt anscheinend

40:11.960 --> 40:25.160
neue Vorlagen. Create New Project. WinUI. Win, Windows Runtime Component. UWP. Nein.

40:25.160 --> 40:31.320
Wir wollen eine Desktop Anwendung. WinUI in Desktop. Packaged. Nein, nein, nein, ich will

40:31.320 --> 40:42.880
nix. Ich will nix. Packaged. Plank App. Packaged. Okay. Language. C-Sharp. Ich will kein UWP.

40:42.880 --> 40:52.720
Class Library. Packaged. Hä? Nein, ich will das nicht über den Microsoft Store machen.

40:52.720 --> 41:01.680
Ich will ne stinknormale, publische Win32 WinUI Anwendung. Ich will nix sideloaden. Ich will

41:01.680 --> 41:09.120
nix über den Store. Wollt ihr mich veräppeln? Gibt's das nicht? Dann wird der Scheiß sofort

41:09.120 --> 41:23.080
installiert. Ich will das nicht über den Store machen. Das ist doch grad der Witz

41:23.080 --> 41:42.960
daran. Okay. Probiert, probiert. Plank App. Nee, das ist, Plank App ist UWP. Wir wollen

41:42.960 --> 42:01.000
keine UWP. Wir wollen, wir wollen ne Win32 Desktop. Okay, es gibt, das ist das Einzige.

42:01.000 --> 42:12.080
Na schauen wir mal. Okay, Create. Nein. Ich will kein UWP Shit. Geh weg. Was soll ich

42:12.080 --> 42:17.360
mit diesem verschissenen UWP kack? Das ist doch grad der Witz an dem, dass man den UWP

42:17.360 --> 42:24.600
Scheiß nicht mehr braucht. Ja, MSIX ist aber kacke. Da braucht man wieder irgendwelche

42:24.600 --> 42:33.920
Codesigning Certificates, dass man das ausführen kann. Okay, das probieren wir jetzt mal aus.

42:33.920 --> 42:46.360
Vielleicht ist das ja auch alles nur. What? Alter, Microsoft, wollt ihr mich verarschen?

42:46.360 --> 42:55.280
Ich will kein Store und ich will kein Site. Ich will ne beschissene, stinknormale Windows-Anwendung,

42:55.280 --> 43:02.600
die ich anklicken kann und starten. Ist das euer Ernst? Ihr wollt mir noch nicht wirklich

43:02.600 --> 43:07.800
erzählen, ihr habt den ganzen Aufwand gemacht, dafür, dass ich immer noch den gleichen Scheiß-Limitierung,

43:07.800 --> 43:15.720
okay, nicht alle, aber was, die ganze Zertifikatsgeschichte hab, die bei UWP sackt. Das wollt ihr mir

43:15.720 --> 43:37.360
noch nicht wirklich erzählen, Microsoft, oder? Okay, wir starten das Ding mal. He didn't

43:37.360 --> 44:00.480
know. Ja, als wüsstest du's. Ja, starten, please. Was? Was? Ist das euer Ernst? Ich

44:00.480 --> 44:10.800
soll wirklich den UWP-Scheiß noch machen, oder was? Nee, nee, also man muss den Developer-Mode

44:10.800 --> 44:16.760
anmachen, dafür, dass man sideloaden kann. Ich will nicht sideloaden, ich will eine ganz

44:16.760 --> 44:25.560
normale, stinknormale Win32-Anwendung machen. Okay, vielleicht kriegen wir den Kram selbst

44:25.560 --> 44:35.760
irgendwie gestartet. Wo ist, wo ist mein Main? Wo ist mein Main? Hier. So, wir gibaten das

44:35.760 --> 44:58.080
jetzt. Wir gibaten das jetzt. Also, WSB, wir gibaten das jetzt. Create New Project, Console,

44:58.080 --> 45:06.000
so kann man die.NET Core-Version auswählen. Okay, create. Wir bauen das jetzt nach, ohne

45:06.000 --> 45:11.600
den ganzen UWP-Crap, das geht aber wahrscheinlich nicht. Okay, Moment, erst mal Dark Mode, Dark

45:11.600 --> 45:16.920
Mode. Wie geht? Äh, Moment, ich hab schon lang kein Whistlestudio mehr auf gehabt, wo

45:16.920 --> 45:37.960
ging das jetzt hier? Dark, Theme. Wo ist das nochmal versteckt in Whistlestudio? Was, Direkt

45:37.960 --> 45:53.400
am Anfang? General? Ah, Dark. Ah, yes, okay, viel besser. Okay, viel besser. Gucken wir

45:53.400 --> 46:02.640
mal, ob wir jetzt die Konsolen-Anwendung starten können. Excellent. Es ist ein.NET 5, okay,

46:02.640 --> 46:09.600
dann, wir bauen das jetzt einfach nach, so. So, jetzt muss man natürlich irgendwas verlinken,

46:09.600 --> 46:29.320
dass das funktioniert. Was muss man hier referenzieren? Dependencies, Packages, Microsoft WinUI. Geht

46:29.320 --> 46:49.280
das Panuget, oder wie kann man das jetzt hier ver... WinUI? Wie kann man den Kram jetzt

46:49.280 --> 47:16.160
hier auswählen? Ja, excellent. Ja, den will ich haben. Microsoft WinUI heißt der Kram.

47:16.160 --> 47:34.360
Alter, Windows, Windows, please. Ich, ich werd garantiert keine UVP-Anwendung machen,

47:34.360 --> 47:40.880
die... Also, ich werd keine Win32-Anwendung machen, die, die UVP zeugt... Ah, Microsoft,

47:40.880 --> 47:50.920
das tut doch weh. Okay, ähm, wie kriegen wir denn Kram jetzt hin? Add? Add reference?

47:50.920 --> 48:00.120
Nee. Fuck, wie kriegt man hier überhaupt wieder normale... Reference? Ah, okay. Browse?

48:00.120 --> 48:16.760
Browse? Add? Nee, äh, build? Nate? Waaah! Include? Limp? Aha! Excellent! Da ist es.

48:16.760 --> 48:29.960
Okay, jetzt haben wir das ge-edit. Oh, geht mir das schon wieder auf den Sack. Ich hab

48:29.960 --> 48:36.240
schon wieder keinen Bock mehr auf den, auf den Microsoft Crap, Alter. Ah, jetzt müssen

48:36.240 --> 48:46.040
wir Windows, Windows müssen wir include. Windows SDK müssen wir include. Wo, wo, wo

48:46.040 --> 49:04.800
gibt's das her? Microsoft Windows SDK net. Wo kriegt man das her? Warum genau sollte

49:04.800 --> 49:08.680
man das statt Qt verwenden? Ja gar nicht, wenn das so scheiße ist, wie es hier aussieht.

49:08.680 --> 49:21.880
Okay, welche Version ist das? 6, 2, 3, preview? Okay, install, excellent. Kannst du nicht

49:21.880 --> 49:29.000
einfach das Startprojekt ändern? Ja, das ist eine gute Idee, das probieren wir mal aus,

49:29.000 --> 49:37.840
Kleil. Hat das jetzt installiert? Ah, excellent. Ha! Es startet schon mal, okay. So, und jetzt

49:37.840 --> 49:42.960
muss ich gucken, wie ich die Anwendung starte. Äh, wo, wo ist denn mein Main? Wo ist denn

49:42.960 --> 49:53.600
hier mein Main? Wo ist denn, wo ist denn hier Main, Main Window? App? Wo ist denn hier

49:53.600 --> 50:00.440
mein Main? Wo ist denn hier der Einstieg überhaupt? Wie geht denn das? Wie startet der, den Kram

50:00.440 --> 50:16.680
überhaupt? Es muss doch irgendwo eine Main geben, was den Kram lädt, oder nicht? Hm.

50:16.680 --> 50:21.280
Das wird ja auf den UWP Package Plot Check gesetzt. Ich habe keine Ahnung, wie der Kram

50:21.280 --> 50:25.560
funktioniert. Ich weiß nur, dass ich ein Codesigning Zertifikat dafür brauche für 300 Euro im

50:25.560 --> 50:31.640
Jahr, und Microsoft kann mich mal am Arsch lecken. Ähm, wie wird denn der Kram gestartet hier

50:31.640 --> 50:56.880
überhaupt jetzt? App, App Application? Das Main, wo ist der Kram? Äh, als Startprojekt,

50:56.880 --> 51:23.360
wurscht. Achso, hier oben meinste. Ähm, App 1. Das startet nix. Äh, RealRenax, doch,

51:23.360 --> 51:33.600
kannst du? Kannst du? Du musst, du musst irgendwie unten links bei der Windows 10 Installation

51:33.600 --> 51:40.320
musst du irgendwie auf, auf, man muss irgendwas, irgendwas anklicken. Ähm, und, und ich, wir

51:40.320 --> 51:45.240
haben es in der VM gemacht, kriegst du mal. Okay. Aber irgendwo muss doch ein Main, irgendwo

51:45.240 --> 51:54.680
muss doch mal ein Main sein. Irgendwo muss doch Main. Warum ist denn der Scheiß so kompliziert?

51:54.680 --> 52:03.800
Current Project, Main. Ah, this is the first line of other. Ah, Logical Equivalent to

52:03.800 --> 52:20.480
Main. Okay. Okay, denn Main, Main gibt's nicht. Okay, okay, okay. Window. Okay, okay. Kann

52:20.480 --> 52:26.400
man sagen, New, Window. Geht so was? Window. Und dann muss ich aber irgendwie erstmal

52:26.400 --> 52:33.920
Application, Application Run machen. Application. Ich, ich probier einfach mal rum. Ich hab Application

52:33.920 --> 52:42.720
Run. Nee, Start. Start so. Boah, fuck man, ich hab keinen Schimmer, wie das funktioniert.

52:42.720 --> 53:01.440
Wie startet man den Kram? Wie? Ich hab legit keine Ahnung, wie man den Kram startet. Ich

53:01.440 --> 53:29.960
vermute ja fast, das geht nur mit diesem ganzen UWP-Shit. Das ärgert mich. App. Ah,

53:29.960 --> 53:40.640
okay, man muss, man muss anscheinend. Ah, kann das sein, dass man sich ne eigene Klasse

53:40.640 --> 53:57.120
von dem App machen muss? Und dann was passiert? Setz mal nen Breakpoint. Das juckt den überhaupt

53:57.120 --> 54:02.800
nicht. Äh, wenn man das, wenn man das als Startprojekt hat, mag er nicht. Der macht,

54:02.800 --> 54:13.280
der macht gar nix, Alter. Der, der macht gar nix. Der sollte eigentlich das hier starten,

54:13.280 --> 54:23.080
macht er aber nicht. Okay, also, sagen wir mal hier. Application. Application. Und dann

54:23.080 --> 54:43.320
ne? Callback. Was muss der da callbacken? Was muss der da callbacken? Wie sowas? Okay,

54:43.320 --> 54:54.240
ich hab keine Ahnung, was da jetzt passiert. Kann Universal Studios mal formatieren, richtig?

54:54.240 --> 54:58.040
Class not registered. Okay, das ist okay, das leuchtet ein. Das muss man wahrscheinlich

54:58.040 --> 55:20.200
im Application starten machen. Ah, what? Das geht ohne den UWP-Shit nicht. Das geht mit,

55:20.200 --> 55:28.560
ich sag mal, wo ist denn da der Sinn von? Das versteh ich null, äh. Guckt mal, das

55:28.560 --> 55:34.160
ganze Zeug, angeblich, angeblich geht das ohne diesen ganzen UWP und Microsoft Store

55:34.160 --> 55:40.120
Shit. Aber dass es funktioniert, brauch ich UWP und Microsoft Store Shit. Wo ist denn

55:40.120 --> 55:44.640
da der Sinn dahinter? Okay, warte mal, wir machen nochmal ein neues Projekt. Renewal.

55:44.640 --> 56:00.720
Plank App, UWP. Nein, wollen wir schonmal nicht. Ich will kein UWP. Okay, C++, was gibt's

56:00.720 --> 56:19.080
da? Plank App Desktop. Das ist genau der gleiche Mist. Was war? DLL, aber das brauch ich ja

56:19.080 --> 56:41.720
nicht. Okay, wind github, github, wind ui. Das, das macht mich schon wieder fertig, ja.

56:41.720 --> 57:00.320
Ja, ja. Ja, genau das.

40:24.660 --> 57:28.040
was? Ich will keine Packaged App. Für eine Packaged App brauch ich dieses, dieses

57:28.040 --> 57:46.520
hässliche, brauch ich ein hässliches Codesigning Zertifikat. Was macht Microsoft denn da wieder

57:46.520 --> 58:03.840
für Dinger? Wo ist denn das Problem, Microsoft? Ihr bringt ein neues UI Framework raus, wo

58:03.840 --> 58:07.240
ich einfach eine App, wo ich einfach, ich sag schon eine App, wo ich einfach eine Anwendung

58:07.240 --> 58:23.680
erstellen kann, ohne irgendwas anderes. Issue 2179. Hatt ich das gerade? Nee. Ja, use

58:23.680 --> 58:46.120
mir nur wieder aus UWP. Not using, genau. Ja, genau, genau. Ja, schön, aber wir haben

58:46.120 --> 58:51.400
jetzt ja das Preview. Das ist, es ist Schwachsinn, es stimmt überhaupt nicht, was ihr da schreibt,

58:51.400 --> 59:10.200
Microsoft. Ich will kein UWP. Krieg, krieg Anfälle. Ich krieg echt Anfälle. Das ist

59:10.200 --> 59:17.840
das ganze UWP Shit. Wobei, ich sag mal, an sich, an sich ist es okay, dass es diese UWP

59:17.840 --> 59:22.640
im Windows Store Geschichten gibt. Für Sachen, für Leute, die die verwenden wollen, ist

59:22.640 --> 59:31.600
das okay. Aber ich will eine stinknormale Windows Anwendung, ohne 30 Milliarden Sachen

59:31.600 --> 59:38.200
vor allem, ohne 300 Euro Codesigning Zertifikat im Jahr. Also das Problem ist ja, nur mal

59:38.200 --> 59:43.880
um euch das nochmal zu verdeutlichen, so. Man braucht, dass man diese Anwendung starten

59:43.880 --> 59:49.600
kann. Also ich zeige es euch mal, wenn man die starten will. Sagt ihr mir ja immer, aktiviere

59:49.600 --> 59:53.440
den Developer Mode. Das ist glaube ich, ja, das war eben Pokémon Musik. Oder ist das

59:53.440 --> 01:00:00.280
jetzt immer noch? Kann sein. Das davor war glaube ich. So, der sagt hier, ich soll meine

01:00:00.280 --> 01:00:06.960
Developer, den Developer Account aktivieren, damit ich Apps sideloaden kann. So. Das geht

01:00:06.960 --> 01:00:11.960
bei mir lokal auf der Kiste, weil da stellt sich ein selbstsigniertes Zertifikat aus.

01:00:11.960 --> 01:00:17.040
Das Problem ist jetzt, wenn ich das programmiere und ihr ladet euch das runter und wollt es

01:00:17.040 --> 01:00:27.080
bei euch starten, dann geht es nicht. Es geht nur, wenn ihr vorher mein Zertifikat bei euch

01:00:27.080 --> 01:00:31.960
in den Trust Store importiert, dass euer Windows dann der Anwendung vertraut. Das macht kein

01:00:31.960 --> 01:00:37.120
normaler Anwender. Der denkt, Alter, was will der Typ von mir? Zumal du Adminrechte dafür

01:00:37.120 --> 01:00:43.400
brauchst. Du brauchst ja sogar Adminrechte dafür. Also du hast aktuell die Auswahl, du

01:00:43.400 --> 01:00:49.560
holst dir den Code Signing Zertifikat für 300 Euro im Jahr, dass du Windows Anwendung

01:00:49.560 --> 01:00:55.640
machen darfst in Zukunft. Moderne. Oder aber, du machst es über den Microsoft Store. Was

01:00:55.640 --> 01:01:02.560
ein Bullshit Microsoft. Alter. Oh Gott. Die kriegen, jetzt machen sie einmal was Gescheites

01:01:02.560 --> 01:01:11.800
seit 15 Jahren und dann funktioniert es nicht. Kuluki97, neun Monate, dankeschön. Exzellenz

01:01:11.800 --> 01:01:15.240
Subscription. Ich glaube, ich habe jede Menge Subscribers überszenen, oder? Ich muss mal

01:01:15.240 --> 01:01:24.520
nachgucken. Ich gehe jetzt Warzone spielen, Kleine. Nee, jetzt noch nicht. Erst in einer

01:01:24.520 --> 01:01:37.800
Stunde oder eineinhalb Stunden. Lerado hat auch Subscribed, dankeschön. Der Dekan auch.

01:01:37.800 --> 01:01:47.080
Exzellenz Subscriptions. Macht die Microsofts Sache nicht besser. Okay, also die Briefview

01:01:47.080 --> 01:02:03.520
ist explizit für Win32 Anwendungen. Das schreiben sie hier, guckt. Ich will keine Packaged App.

01:02:03.520 --> 01:02:14.520
Geht mir nicht auf den Sack. Ich will es nicht Packaged haben. Genau das hier, genau

01:02:14.520 --> 01:02:36.360
das. Das, was er schreibt. Der einzige Unterschied, den ich aktuell sehe, zwischen der UWP WinUI

01:02:36.360 --> 01:02:43.720
3 Anwendung und einer Win32 WinUI Anwendung ist, dass man keine Sandbox hat. Aber die

01:02:43.720 --> 01:02:50.320
ganzen anderen Scheiß, also der hauptsächliche Scheiß, nämlich ein Codesigning Zertifikat

01:02:50.320 --> 01:02:59.200
oder den Microsoft Store, braucht man immer noch. Komplett useless wasted, Alter. Der

01:02:59.200 --> 01:03:07.160
ganze Aufwand ist voll von Arsch. Kosta2570, Stufe 1, dankeschön. Exzellenz Subscription.

01:03:07.160 --> 01:03:25.440
So, wie lösche ich den Kram jetzt wieder? Weg. Wie lösche ich den überhaupt wieder?

01:03:25.440 --> 01:03:46.040
Fickt euch, ey. Ich habe mich da so drauf gefreut, dass man endlich im Jahr 2020 mal

01:03:46.040 --> 01:03:51.640
wieder ordentliche Windows Desktop Anwendungen machen kann. Ne, geht nicht. Man könnte ja,

01:03:51.640 --> 01:03:56.240
man könnte ja auf die Idee kommen, die wollen gerade, dass alles nur noch in Elektron gebastelt

01:03:56.240 --> 01:04:13.040
wird. Da gibt es auch einen Tipp von Microsoft. Ja, welchen denn? Der Tipp von Microsoft ist,

01:04:13.040 --> 01:04:21.560
man kann in den Browser, oder was? Codesigning ist doch dafür gut. Ja, natürlich, natürlich

01:04:21.560 --> 01:04:28.200
ist Codesigning seine Anwendungszwecke, aber so als 0815 normaler Entwickler, der daheim

01:04:28.200 --> 01:04:34.200
sitzt und irgendwas bastelt, ich kauf mir kein 300 Euro Codesigning Zertifikat. Seh ich

01:04:34.200 --> 01:04:39.400
überhaupt nicht ein. Und man braucht den Scheiß ja überhaupt nicht. Es ist komplett unsinnig.

01:04:39.400 --> 01:04:47.600
Man bräuchte einfach einen richtigen Paketmanager. Und nicht diesen Windows Store Crap. Ja,

01:04:47.600 --> 01:04:51.880
unter Anstellungsfunktion ist das auch wunderbar. Du hast entweder den offiziellen Package Manager,

01:04:51.880 --> 01:04:55.480
oder du hast die User Repos, wo du halt sagen musst, okay, ich traue dem User. Und das Paket

01:04:55.480 --> 01:05:00.840
hat halt, wenn du es runterlädst, hat das Ding halt eine MD5-Sommer oder eine Hash-Wert

01:05:00.840 --> 01:05:07.680
drüber. Du weißt, du hast das Richtige runtergeladen und gut ist. Ich kaufe mir doch kein Codesigning

01:05:07.680 --> 01:05:17.680
Zertifikat, dass ich das Windows Anwendung machen kann. Ja, den Package Manager gibt's,

01:05:17.680 --> 01:05:22.600
da sind sie gerade dabei, ich weiß. Aber bis das dann überhaupt richtig funktioniert,

01:05:22.600 --> 01:05:27.760
wird schon mal, ach das wird doch nichts. Ey echt, bei Microsoft ist echt alle Hoffnungen

01:05:27.760 --> 01:05:45.600
verloren manchmal. Ja, Flow 96 macht das. Als WPF-App kannst du das nicht verpacken.

01:05:45.600 --> 01:05:53.160
Du kannst ja schlecht zwei Mainloops laufen lassen, einmal für WPF und einmal für WinUI,

01:05:53.160 --> 01:05:56.720
das wird ja so nicht funktionieren. Aber anscheinend kann man keine Constant-Applications

01:05:56.720 --> 01:06:00.520
verstanden. Codespaces, ja ich hab mich für die Beta eingetragen, ich weiß nicht, ob

01:06:00.520 --> 01:06:08.560
das schon raus ist. Okay, man merkt vielleicht ein bisschen, dass ich angepisst bin über

01:06:08.560 --> 01:06:32.360
die Microsoft-Geschichte hier. Newst. Wie sie hier einfach Scheiße erzählt haben

01:06:32.360 --> 01:06:36.720
in diesem Issue. So nach dem Motto Ja, es kommt da mit der Briefview. Schwachsinn, kommt

01:06:36.720 --> 01:06:50.080
es, kommt es, es. Mhm.

01:06:50.080 --> 01:07:13.440
Wie hieß das Issue noch mal von dem anderen Typ, was wir eben aufhatten?

01:07:13.440 --> 01:07:21.680
Sonst probier doch den Package Manager aus. Ja, das machen wir, den Package Manager,

01:07:21.680 --> 01:07:44.560
das können wir uns echt angucken. Hat jemand, hat jemand mal einen aktuellen... wobei. Ja.

01:07:44.560 --> 01:07:58.240
Genau, so ist es. Genau, sie haben seit 20 Jahren nichts ordentlich modernes mehr rausgebracht,

01:07:58.240 --> 01:08:03.000
was man sinnvoll verwenden kann. Das ist, es ist so lächerlich. Erstmal abvoten,

01:08:03.000 --> 01:08:09.200
erstmal abvoten. Ich will jetzt abvoten. Ich bin nicht eingeloggt. Frag ich muss abvoten.

01:08:09.200 --> 01:08:32.720
Bin ich, bin ich im anderen Browser eingeloggt? Okay, ich muss es abvoten. Ah, easy. Ha! Da

01:08:32.720 --> 01:08:46.920
hat er, da hat er geabvotet. Oh Mann. Microsoft, Microsoft, Alter. Nee, nee, ich fasse es nicht.

01:08:46.920 --> 01:08:52.120
Okay, bei der Gelegenheit können wir das letzte Wishlist Studio mal updaten, das schadet nichts.

01:08:52.120 --> 01:08:58.520
Was war denn das letzte Sinnvolle, was die rausgebracht haben? Wishlist Studio Code?

01:08:58.520 --> 01:09:03.200
Nee, GUI-mäßig, GUI-mäßig war das letzte Sinnvolle, was sie rausgebracht haben, WPF.

01:09:03.200 --> 01:09:19.800
2006 oder so. Ja. WPF war das letzte Sinnvolle, was sie rausgebracht haben.

01:09:19.800 --> 01:09:32.080
Was sie ja dann irgendwie haben sterben lassen für WinRT und Zeug.

01:09:32.080 --> 01:09:46.000
Okay, vielleicht ist das gar nicht so schlimm, wie ich denke. Vielleicht ist das gar nicht

01:09:46.000 --> 01:09:52.560
so schlimm, weil vielleicht kommt das ja noch. Unpackaged Apps, vielleicht, vielleicht kommt

01:09:52.560 --> 01:10:01.400
das ja noch. Ansonsten, ansonsten macht vielleicht irgendein Community-Mensch was, der das Bild

01:10:01.400 --> 01:10:05.040
irgendwie, der das vereinfacht, weil aktuell habe ich noch nicht mal eine Ahnung, wie ich

01:10:05.040 --> 01:10:15.200
den Kram überhaupt starten soll, ehrlich gesagt. Das muss gehen, ansonsten ist das

01:10:15.200 --> 01:10:22.960
komplette Totgeburt, Alter. Ja, Henry, Qt ist wirklich das Einzige, was

01:10:22.960 --> 01:10:31.560
halbwegs geht, ja, leider. Also aktuell hast du ja Cross-Plattform im Prinzip, so richtig

01:10:31.560 --> 01:10:37.440
Desktop, auf dem Desktop, ja. Cross-Plattform hast du die Auswahl, Elektron oder Qt, das

01:10:37.440 --> 01:10:50.040
war's. Das sind eigentlich die zwei Sachen. Für mich, ich habe es ja schon öfters gesagt,

01:10:50.040 --> 01:10:55.040
für mich sind die zwei Kriterien, woran man sieht, ob man mit einem Cross-Plattform GUI

01:10:55.040 --> 01:11:01.080
Framework quasi alles Mögliche machen kann, sind zwei Sachen, wo man nachgucken muss,

01:11:01.080 --> 01:11:07.400
wo die meisten Sachen fehlen, und zwar gibt es einen Webview, einen ordentlichen Webview

01:11:07.400 --> 01:11:13.600
für HTML-Zeug und gibt es die Möglichkeit, 3D-Content einzubinden, also nicht mit 3D-Content,

01:11:13.600 --> 01:11:20.680
GPU-Accelerated-Content, also sprich, gibt es einen OpenGL-Widget oder einen DirectX-Widget,

01:11:20.680 --> 01:11:24.280
das sind so die zwei Sachen. Wenn es die gibt, dann taugt das wahrscheinlich was.

01:11:24.280 --> 01:11:38.840
WX-Widgets C++, habe ich mir vor einer Weile mal anguckt, sah irgendwie ziemlich wir aus

01:11:38.840 --> 01:11:47.080
und auch wenig, wenig Tutorials und aktuelle Sachen. Außerdem, das Schlimme ist ja, das

01:11:47.080 --> 01:11:53.760
kommt ja dabei, dass Qt selber C++ ist. Ja, es gibt ganz gute Python Bindings, was jetzt

01:11:53.760 --> 01:12:00.680
auch nicht für GUI-Anwendungen unbedingt so meine erste Wahl wäre. Die C-Sharp-Bindings,

01:12:00.680 --> 01:12:07.600
die es gibt, sind mittlerweile ganz ok, allerdings unvollständig, die haben nur QML. Und die

01:12:07.600 --> 01:12:15.600
IDE-Integration ist dumm. Hier, das, warte mal, was war das überhaupt genau? Das ist

01:12:15.600 --> 01:12:19.360
eigentlich ganz gut mittlerweile, leider ist die IDE-Integration, als ich das letzte Mal

01:12:19.360 --> 01:12:28.640
ausprobiert habe, nicht gut gewesen. Das Problem war, dass man das Frontend in Qt-Creator basteln

01:12:28.640 --> 01:12:34.640
muss und den Rest bastelt man in Visual Studio, weil der Qt-Creator natürlich keine.NETC-Sharp-Completion

01:12:34.640 --> 01:12:39.680
und alles hat und dann muss man immer hin und her schalten und das eine funktioniert

01:12:39.680 --> 01:12:44.000
dann mit dem anderen nicht richtig und es ist wir auf jeden Fall, es ist nicht schön,

01:12:44.000 --> 01:12:54.360
es ist nicht schön. Qt kann man nehmen, weil, also vor allem mit QML, also die neue Qt-Variante,

01:12:54.360 --> 01:13:01.160
wir reden jetzt nicht von, wie heißt das, Qt-Widgets, das alte, also da rede ich jetzt

01:13:01.160 --> 01:13:05.280
nicht von, ich rede nur von dem neuen, das kann man Cross-Plattform wirklich nehmen,

01:13:05.280 --> 01:13:11.360
weil das sieht Cross-Plattform auch gleich aus. Die malen ja ihre Widgets komplett selbst

01:13:11.360 --> 01:13:16.320
und ich sage ja auch immer, ein ordentliches GUI-Framework muss die Controls selber malen,

01:13:16.320 --> 01:13:22.760
ansonsten bist du immer darauf beschränkt, den kleinsten gemeinsamen Nenner aller Betriebssysteme

01:13:22.760 --> 01:13:28.160
zu nehmen. Das soll gleich aussehen, weil du hast das Problem, wenn das nicht gleich

01:13:28.160 --> 01:13:33.800
aussieht, dann hast du so ein Geschiss wie beispielsweise bei Xamarin, Xamarin, Xamarin,

01:13:33.800 --> 01:13:38.160
wie auch immer man das ausspricht, dass die ganzen Controls nichts können, weil die gucken

01:13:38.160 --> 01:13:44.920
müssen, dass das, was sie implementieren an ihren Controls, überall funktioniert. Das

01:13:44.920 --> 01:13:49.720
ist das einzig wahre, dass die ihre Controls selber malen. Natürlich sieht es dann Mac

01:13:49.720 --> 01:13:53.440
nicht aus wie Mac und Windows nicht aus wie Windows und Linux nicht aus wie Linux, sondern

01:13:53.440 --> 01:13:57.720
es sieht eben aus wie, ja wahrscheinlich wie eine Web-Anwendung zum größten Teil, bloß

01:13:57.720 --> 01:14:07.120
weil es keine Web-Anwendung ist. Den C++-Hate, naja, ich habe mich ja schon öfters über

01:14:07.120 --> 01:14:14.720
C++ ausgelassen. Es gibt so viele ekliche Sachen an C++. Man kann die auch selber malen

01:14:14.720 --> 01:14:19.360
und es auf jedem System so aussehen lassen. Ja, dann hast du aber das Problem, dass es

01:14:19.360 --> 01:14:24.640
halt nie so hundertprozentig passt. Entweder die einfachere Variante ist, du machst quasi

01:14:24.640 --> 01:14:32.640
einen eigenen Style, der dann halt überall gleich aussieht, ansonsten kannst du nur versuchen,

01:14:32.640 --> 01:14:37.800
die Sachen nachzubauen. Das wird nie so hundertprozentig funktionieren. Es gibt ja auch Windows-Skins

01:14:37.800 --> 01:14:44.880
für Qt-Caps früher, die sahen halt scheiße aus, oder Mac-Skins oder sonst was. Ja, das

01:14:44.880 --> 01:14:50.520
ist das. Also ich finde den Ansatz, wie du das mit Electron hast, eigentlich ganz sinnvoll,

01:14:50.520 --> 01:15:04.520
oder wie sie es in QML machen. C++ ist eklig. Zum Beispiel, mein Lieblingsbeispiel, warum

01:15:04.520 --> 01:15:10.640
C++ kacke ist, oder was sich zumindest das Standard-Cremium denkt, ist, warum gibt es

01:15:10.640 --> 01:15:22.920
in C++, im C++-String, warum gibt es kein To-Upper? Gibt es nicht. Ich meine allein

01:15:22.920 --> 01:15:27.560
schon, dass das Internet voll ist mit 206 Freestyles, wie ich in String To-Upper kaste,

01:15:27.560 --> 01:15:32.560
oder nicht kaste, To-Upper mache, in C++, dass sie teilweise empfehlen, man soll Boost

01:15:32.560 --> 01:15:39.560
für eine Boost-String-Implementierung dafür verwenden. Ich weiß, dass es das hier gibt,

01:15:39.560 --> 01:15:46.920
aber, also, ich sage es mal ganz ehrlich, guckt euch das mal an. Ich meine, ernsthaft, ein

01:15:46.920 --> 01:15:58.920
fucking String To-Upper, ist das euer Ernst, C++-Cremium? Was ist mit euch los? Was ist

01:15:58.920 --> 01:16:09.080
das Problem, bitte schön an String, oder was auch immer hier, Upper, oder so. Das ist

01:16:09.080 --> 01:16:13.760
doch hässlich wie die Nacht, das hier. Warum ist das nicht in der Standard-String-Klasse

01:16:13.760 --> 01:16:18.840
drin? Das ist so ein Ding, wo ich mich an vielen Stellen in C++ frage, warum ist das so inkonsistent

01:16:18.840 --> 01:16:26.160
und warum ist so einfache Sachen so kompliziert? Genauso, dass es drei oder vier verschiedene

01:16:26.160 --> 01:16:38.560
Varianten gibt, wie du Iterator machst. Spread the Beast, 11 Monate lang, schön, exzellent.

01:16:38.560 --> 01:16:45.160
Was genau macht das? Costa, das ist genau die richtige Frage. Weil ganz ehrlich, was

01:16:45.160 --> 01:16:52.600
genau macht das eigentlich? Und vor allem, wie scheiße lesbar ist das denn? Also was

01:16:52.600 --> 01:17:00.040
das macht, ist, es macht dieses hier, also Test-String, macht es zu Test-String nur in

01:17:00.040 --> 01:17:07.080
Großbuchstaben. Der loopt quasi über jeden einzelnen Character in diesem String drinnen

01:17:07.080 --> 01:17:15.440
und printet ihn dann quasi in Groß. Also schau mal, komplett wir. Dazu kommt ja noch

01:17:15.440 --> 01:17:24.000
einmal die Geschichte, dass das nur funktioniert, wenn es ein poplicher ASCII-String ist. Macht

01:17:24.000 --> 01:17:30.880
mal, wir haben es doch letztens probiert, macht mal UTF-8, oder Schwachsinn, nicht UTF-8,

01:17:30.880 --> 01:17:39.280
macht mal Unicode-Strings in C++. Alter, das ist Brechreiz, kompletter Brechreiz. Weil

01:17:39.280 --> 01:17:44.520
der Witz ist ja, wenn es eine gute Implementierung ist, dann kann es mir erstmal scheißegal

01:17:44.520 --> 01:17:52.840
sein, ob das intern UTF-8 ist, UTF-16, UTF-32 oder UTF-69. Ich will mich da ehrlich gesagt

01:17:52.840 --> 01:17:57.520
überhaupt nicht mit beschäftigen müssen. Bei.NET ist es teilweise auch schon ein bisschen

01:17:57.520 --> 01:18:02.960
fragwürdig..NET verwendet historisch gesehen, glaube ich, UTF-16 oder irgendein Vorgänger

01:18:02.960 --> 01:18:12.160
von UTF-16 für ihre Strings. Das ist zu 90% ok. Es wird eklig, wenn du 4-byte-Character

01:18:12.160 --> 01:18:19.680
hast wie Emojis zum Beispiel. Dann wird es schon im Handling ein bisschen abartig, ja.

01:18:19.680 --> 01:18:28.360
Aber in C++ ist es schon mal komplett wir. Quai, 5 Monate, danke schön. Hab ich vielleicht

01:18:28.360 --> 01:18:34.640
schon vorher gelesen, aber nochmal. Huge Subscription. Scrusix, 3 Monate, auch nochmal

01:18:34.640 --> 01:18:40.640
am Start, exzellent. Die Standard muss noch verbessert werden, dafür gibt es halt Boosts.

01:18:40.640 --> 01:18:45.280
Ja, leider, leider. Ich weiß nicht, was die seit den letzten 15 Jahren machen im C++-Cremium,

01:18:45.280 --> 01:18:49.000
dass die so einfache Sachen in der Standard-Library nicht drin haben. Zumal das Problem ja ist,

01:18:49.000 --> 01:18:54.040
mit Boost, wenn du zum Beispiel irgendeinen Arduino oder einen ESP bastelst, da ist halt

01:18:54.040 --> 01:18:59.800
außer Standard-Library nichts. Da ist mit Boost nichts. Max, wie machst du Emojis to

01:18:59.800 --> 01:19:19.120
upper? Gar nicht. To upper machst du logischerweise nur normale Characters. Ja, genau, in.NET

01:19:19.120 --> 01:19:30.520
ist das einfacher mit den Encodings. Ja. Und es gibt noch, wie gesagt, es gibt noch zig,

01:19:30.520 --> 01:19:35.680
zig, zig andere. Ich meine, manche meine Standard-Lieblingstage ist halt über C++ zu

01:19:35.680 --> 01:19:45.080
flammen. Was haben die sich zum Beispiel mit ihrer Lambda-Syntax gedacht? Ugly, genau,

01:19:45.080 --> 01:19:55.840
ugly as fuck. Guck mal, wenn die erste Autovervollständigung bei Google ist C++ Lambda-Syntax ugly, das

01:19:55.840 --> 01:20:11.360
sagt doch schon mal alles aus. Ey, oh, wenn ich das schon sehe. Das ist auch so was, was

01:20:11.360 --> 01:20:18.160
mich in C++ abfuckt. Diese Iterator-Geschichte, die total inkonsistent ist. War es denn, war

01:20:18.160 --> 01:20:26.600
es denn so schwer, war es denn so schwer, eine Array-Klasse zu machen oder eine List-Klasse

01:20:26.600 --> 01:20:33.160
oder eine Vector-Klasse, die eine Sort-Methode hat? Warum, warum, warum kann man, warum kann

01:20:33.160 --> 01:20:41.240
man in C++ nicht? Übrigens im Qt-Vector, in der Qt-List kann man das machen. Die haben

01:20:41.240 --> 01:20:48.320
das nämlich ordentlich gemacht und nicht wie die Kack-Standard-Library das macht. So,

01:20:48.320 --> 01:21:02.360
warum, warum kann ich, warum kann ich in C++ nicht sowas hier machen? Ist das zu kompliziert

01:21:02.360 --> 01:21:08.840
oder ist das zu einfach für C++-Leute, sagen die, oh nee, also das kann man schon ziemlich

01:21:08.840 --> 01:21:12.760
gut lesen. Das ist keine gute Idee, das müssen wir anders machen. So, und was machen die

01:21:12.760 --> 01:21:24.960
in C++ stattdessen? In C++ kommt dann Standard-Sort-V-Beginn-V-End. Ah, frag mich nicht wie der Kram

01:21:24.960 --> 01:21:30.520
überhaupt, wie geht denn das überhaupt in C++ richtig? Ja, haben wir hier eben ein Beispiel?

01:21:30.520 --> 01:21:46.120
What the fuck, Alter, was ist das denn? Ist das euer Ernst? Kann man, kann man direkt,

01:21:46.120 --> 01:21:55.200
kann man direkt so machen? Geht das mittlerweile? Ich glaube, das wäre ja schonmal ein Anfang,

01:21:55.200 --> 01:22:24.560
wenn das funktioniert. Nee, nee, geht nicht. Ja, ich mein, was, was, was ist, was ist los

01:22:24.560 --> 01:22:33.760
mit denen? Ja, das ist, wenn man nur, wenn man nur hier Range sortieren will. Ja, Ranges

01:22:33.760 --> 01:22:37.720
ist auch so ein Ding, ich könnte echt Stunden über C++ mich aufregen, aber ich mein sowas

01:22:37.720 --> 01:22:50.840
hier, was, was, was denkt man sich dabei denn? C++-Standard-Clip ist cancer. F, nee. Dazu

01:22:50.840 --> 01:22:59.280
kommt auch ne Sache, die in C++ einfach absoluter Crap ist, wo sie jetzt mit C++ 20 oder, nee,

01:22:59.280 --> 01:23:06.480
wie heißt denn, 0x oder so, nee, wie heißt denn das überhaupt? Also das neue C++, man

01:23:06.480 --> 01:23:10.400
kann sich ja in C++ noch nicht immer merken, wie die Standards heißen, also das neue, was

01:23:10.400 --> 01:23:17.680
jetzt rauskommt, dass man in C++ immer noch mit Header-Files rumhantiert. Es ist im Jahr

01:23:17.680 --> 01:23:25.040
2020 kompletter Witz, dass man solche Dinger hier braucht überhaupt in Header-Files noch,

01:23:25.040 --> 01:23:30.000
dass der Compiler nicht verreckt beim Compilen. Aber das ist nicht der Compiler, das ist wahrscheinlich

01:23:30.000 --> 01:23:33.880
der Linker vorher. Das ist nicht verreckt beim Compiler, dass ich so einen Kack überhaupt

01:23:33.880 --> 01:23:43.560
einfügen muss. Wo sind wir denn 2020? So, C++ braucht heute noch diese dämliche Unterscheidung

01:23:43.560 --> 01:23:50.800
von Header-Files und Programm-Code-Files anstatt, dass man es machen würde, wie jede andere

01:23:50.800 --> 01:23:54.440
Programmiersprache, die glaube ich in den letzten 10 Jahren, 15 Jahren, was auch immer

01:23:54.440 --> 01:24:00.320
rausgekommen ist, die ein halbwegs modernes, gescheites Modulsystem haben oder in irgendeiner

01:24:00.320 --> 01:24:08.800
Art und Weise Metadata haben, wo der ganze Kram drin steht. Kann man Visual Studio Code

01:24:08.800 --> 01:24:13.840
Programme kompilieren und ausführen? Klar, wenn du einen Compiler hast, kann er ja hier.

01:24:13.840 --> 01:24:23.360
Ups, warum habe ich das jetzt gestoppt? So. Warum? Verstehe ich nicht, warum das immer

01:24:23.360 --> 01:24:31.160
noch so ein Ding ist. Ich finde es gerade Amazon, wie du dich so aufrückst zu 10++, da kannst

01:24:31.160 --> 01:24:40.360
dich ja auch übelst aufregen. Es gibt übrigens auch keinen. Dadurch, dass die immer noch

01:24:40.360 --> 01:24:51.760
dieses komische Konstrukt von Pre-Processor, Header-Files und Includes verwenden, also

01:24:51.760 --> 01:24:55.920
wenn C++-Programme kompiliert werden, dann machen die es ja aktuell so, die Includen

01:24:55.920 --> 01:25:03.600
quasi alles in einen Riesen-File und dann kompilieren sie es. Das ist ja alles nur Copy-Paste,

01:25:03.600 --> 01:25:11.080
diese ganzen Include-Header-Geschichten. Dadurch, dass sie das immer noch machen und kein gescheites

01:25:11.080 --> 01:25:17.400
Modulsystem haben, kein gescheites Repo haben oder irgendwo, irgendwie eine Möglichkeit,

01:25:17.400 --> 01:25:22.600
dass du sagst, ja, mein Programm exportiert die und die Funktion, dass du irgendein Metadata-File

01:25:22.600 --> 01:25:27.080
hast, was auch immer, halt irgendein ordentliches Modulsystem, hast du auch keinen ordentlichen

01:25:27.080 --> 01:25:32.160
Package-Manager für C++. Jede Programmiersprache, die irgendwie in letzter Zeit rausgekommen

01:25:32.160 --> 01:25:42.920
ist, hat eine halbwegs sinnvolle Möglichkeit, Dependencies aufzulösen und Module bzw. Libraries

01:25:42.920 --> 01:25:47.720
zu installieren, die man braucht, die man dann auch gescheit gemanagt hat. In C++ ist

01:25:47.720 --> 01:25:58.840
es wie 1917 Header-Files Copy-Pasten von GitHub. Ja, ich weiß, es gibt ein paar Versuche,

01:25:58.840 --> 01:26:04.160
aber nichts hat sich durchgesetzt. Aber C++ ist nicht in letzter Zeit rausgekommen. Doch,

01:26:04.160 --> 01:26:21.360
die sind seit, glaub, was war die erste moderne C++-Version? Zehn? Dreizehn? Elf, elf, genau.

01:26:21.360 --> 01:26:29.400
So, die erste halbwegs moderne C++-Elf und die sagen seitdem, dass modern C++ quasi nichts

01:26:29.400 --> 01:26:35.640
mehr mit Oldschools C++ zu tun hat. Also, die heben das, die stellen das so weiter vor

01:26:35.640 --> 01:26:43.080
und die sagen es auch selbst, C++ ist eine neue Sprache. Mittlerweile. Und C++, vor allem,

01:26:43.080 --> 01:26:46.920
wenn man halt ein Gremium hat, was da jetzt schon zehn Jahre dran arbeitet, neue Sachen

01:26:46.920 --> 01:26:54.520
macht, C++ muss sich da auch am Standard mit modernen Sprachen messen können. Oder das

01:26:54.520 --> 01:27:04.560
können sie nicht. Ich mein, so ein Package-Manager. Und ich mein, damit nicht diese Community-Geschichten,

01:27:04.560 --> 01:27:09.560
sondern ein offizieller Package-Manager und ein offizielles Repo und ein offizielles

01:27:09.560 --> 01:27:18.400
Dependency-Management-Tool. Ja, sowas, wie es Jam ist bei Ruby, wie es NPM suckt, aber

01:27:18.400 --> 01:27:26.760
auch NPM ist für Node oder Cargo Rust. Rust macht das richtig gut. Rust ist eine Sache,

01:27:26.760 --> 01:27:32.960
die kann man sehr schön mit C und C++ vergleichen. Rust hat alles das gemacht, was man von einer

01:27:32.960 --> 01:27:37.760
modernen Sprache erwarten würde, um es dem User möglichst einfach zu machen. Wenn du

01:27:37.760 --> 01:27:47.200
Rust installierst, dann kriegst du einen Package-Manager und ein Projekt-Management-Tool und ein Projektverwaltungstool

01:27:47.200 --> 01:27:52.840
mit Cargo dabei. Du installierst Rust, du hast Cargo-Commando-Zeilen-Tool, damit kannst du

01:27:52.840 --> 01:28:00.480
neue Apps anlegen und du kannst gleichermaßen neue Dependencies auflösen und alles. Wunderbar.

01:28:00.480 --> 01:28:05.080
Top. Und das könnten die in C++ auch machen, das ist überhaupt kein Problem, aber sie

01:28:05.080 --> 01:28:13.160
machen es nicht. Die können das ja auch meinetwegen rückwärts kompatibel lassen, da spricht

01:28:13.160 --> 01:28:17.840
ja überhaupt nichts dagegen. Man muss ja nicht die alten Sachen rausschmeißen, um neue Sachen

01:28:17.840 --> 01:28:23.200
zu supporten, außer es widerspricht sich. Da müsste man sich das mal angucken. Alleinschauen,

01:28:23.200 --> 01:28:34.400
ich war jetzt gerade bei der Lambda-Syntax von C++. Die ist so unglaublich eklig. Also

01:28:34.400 --> 01:28:39.320
die Lambda-Syntax von C++ ist sowas hier. Ich hoffe, ich krieg's jetzt überhaupt richtig

01:28:39.320 --> 01:28:44.080
aus dem Kopf. Er macht erst einmal eckige Klammer, dann macht man geschweifte Klammer

01:28:44.080 --> 01:28:48.240
für Funktionsaufruf und dann macht man den Body für die Funktion. Also dann hier macht

01:28:48.240 --> 01:28:56.520
man dann sowas wie hier Printf. Also, das da ist quasi die eigentliche Logik, die ausgeführt

01:28:56.520 --> 01:29:02.440
wird. So, und das hier ist, wo man angeben muss, sprich, welche Variablen man captchern

01:29:02.440 --> 01:29:06.920
will. Es reicht in C++ nicht, wenn ich jetzt hier zum Beispiel sage, ich hab hier oben

01:29:06.920 --> 01:29:14.080
sowas wie, keine Ahnung, int a. So, wenn ich das hier mache zum Beispiel, das reicht

01:29:14.080 --> 01:29:18.600
in C++ nur manchmal, nur manchmal, ansonsten gibt's merkwürdige Compiler Errors. Ich müsste

01:29:18.600 --> 01:29:22.680
das hier, glaube ich, irgendwie angeben oben dann. Oder ich glaube, ich muss sogar sagen,

01:29:22.680 --> 01:29:27.440
dass ich nur eine Reference zu a will oder sowas. Also, ganz merkwürdige Geschichte.

01:29:27.440 --> 01:29:33.720
Meistens funktioniert's allerdings so. Und was ich bei der C++-Lambda-Syntax richtig

01:29:33.720 --> 01:29:42.160
eklig finde ist, warum hat man mal wieder Zeichen genommen, die in der Sprache schon

01:29:42.160 --> 01:29:53.920
an zig anderen Stellen verwendet werden? Warum hat man nicht, ich mein, ich bin kein

01:29:53.920 --> 01:29:59.320
JavaScript, ich bin kein JavaScript-Freund, ja. Aber in JavaScript würdest du zum Beispiel

01:29:59.320 --> 01:30:03.680
hier sowas machen. Oder nehmen wir die C-Syntax, die finde ich auch ganz schick. In C++

01:30:03.680 --> 01:30:11.440
könntest du sowas hier machen zum Beispiel. Das ist aber wahrscheinlich wieder für C++

01:30:11.440 --> 01:30:17.080
zu lesbar. Da hat das C++-Cremium gesagt, ah, fuck, also wenn das hier jeder lesen kann,

01:30:17.080 --> 01:30:20.520
dann brauchen wir keine Experten mehr. Und wer soll uns da noch Geld bezahlen, wenn das

01:30:20.520 --> 01:30:26.840
jeder lesen kann? Das geht nicht. Ja, und die etwas längere Variante in C-Sharp wäre

01:30:26.840 --> 01:30:32.200
dann das hier. So. Das ist Discard, den kann man übrigens auch weglassen, wenn man keine

01:30:32.200 --> 01:30:37.240
Parameter hat. Dann hätte man sowas. Das ist doch wunderbar lesbar, das ist doch top,

01:30:37.240 --> 01:30:46.280
da kann man sich überhaupt nicht drüber beschweren. Aber nicht so in C++. Vielleicht leuchtet

01:30:46.280 --> 01:30:53.400
mir nicht ein. Aber genug der ganze, wir wollten uns glaube ich noch den.NET-Paketmanager

01:30:53.400 --> 01:31:04.080
angucken. Was sind eigentlich Variablen? Oh, das ist jetzt aber, das ist jetzt ziemlich

01:31:04.080 --> 01:31:10.280
basic von den C++ Sachen. Variablen sind Speicher, man könnte es eigentlich im Prinzip

01:31:10.280 --> 01:31:23.920
Speicher mit einem Namen dran. Das ist eine Variable. Arbeitsspeicher mit einem Label dran.

01:31:23.920 --> 01:31:37.600
Ja, aber wie gesagt, es gibt zig, zig Varianten, wo ich mich über C++ aufregen kann. Dass

01:31:37.600 --> 01:31:42.680
das Ding zum Beispiel keinen gescheinen Inam-Support hat. Aber wir hören jetzt auf mit C++. Genug,

01:31:42.680 --> 01:31:49.840
genug C++. Wir wollen uns den Package Manager von Windows mal angucken. Windows Package

01:31:49.840 --> 01:32:00.160
Manager Review. 19. Mai. You are going to be able to win get. Die hatten sowas doch

01:32:00.160 --> 01:32:17.320
schon mal. Ich habe sogar mal ein Video dazu gemacht. One get hieß das Ding. Und warum

01:32:17.320 --> 01:32:23.680
gibt es da jetzt schon wieder 50 verschiedene Package Manager von Microsoft? Na gut. Win

01:32:23.680 --> 01:32:31.040
win. Das Problem, was ich sehe, ist, muss ich jetzt mal sagen, warum ich glaube, dass

01:32:31.040 --> 01:32:37.920
auch wieder nicht sich das Ganze durchsetzen wird, ist, Microsoft, es reicht nicht, einen

01:32:37.920 --> 01:32:42.560
Package Manager in Windows auszuliefern. Man braucht auch offizielle Repositories dafür.

01:32:42.560 --> 01:32:50.280
Einen Package Manager allein bringt gar nichts. Guckt euch in C++ an. Für C++ gibt es auch

01:32:50.280 --> 01:32:57.080
4-5 verschiedene Package Manager. Verwendet keiner, weil es kein offizielles Plast Repository

01:32:57.080 --> 01:33:03.280
gibt. Und das muss es von Microsoft geben. Okay, probieren wir das Ganze mal aus. Win

01:33:03.280 --> 01:33:08.720
get CLI. Ich glaube, das probieren wir mal an unserer Windows VM aus. Wir haben schon

01:33:08.720 --> 01:33:21.920
genug rumgebastelt. Haben wir überhaupt noch eine Windows VM? Wir haben keine Windows

01:33:21.920 --> 01:33:29.440
VM mehr. Na gut, dann haben wir es jetzt hier. Übrigens, was ich verwende als Package Manager

01:33:29.440 --> 01:33:38.120
aktuell ist halt der hier. Der ist ziemlich gut, finde ich. Ist ziemlich gut. Das Problem

01:33:38.120 --> 01:33:44.800
dabei ist halt auch, es ist kein offizielles Repository. Es ist kein offizielles Repository,

01:33:44.800 --> 01:33:51.120
das heißt, da kannst du dir relativ schnell, das wird von, keine Ahnung, 1-2-3 Leuten maintained,

01:33:51.120 --> 01:33:55.800
da fängst du dir halt relativ schnell, vielleicht mal, wenn die nicht aufpassen, ein Virus ein

01:33:55.800 --> 01:34:06.760
und das sollte damit nicht passieren mit einem offiziellen Package Manager. Oh. Windows 10

01:34:06.760 --> 01:34:14.760
ist ein Insider-Build. Wir müssen noch eine VM installieren, Leute. Okay, easy. Oh, wie

01:34:14.760 --> 01:34:25.600
spricht man das denn aus? Hulien? Okay. Become an Insider, excellent. Machen wir. Da ist

01:34:25.600 --> 01:34:50.240
es wieder. Da ist es wieder. Man kann das einfach runterladen. Win. Win CLI. Excellent.

01:34:50.240 --> 01:34:56.480
Patrick will Hulien mieten, okay. Ihr Patrick, Mieteser. Oh, die sind alle so glücklich

01:34:56.480 --> 01:35:04.880
immer auf den, oh, Leute, was ist da los? Das geht aber nicht. Die sind viel zu dicht

01:35:04.880 --> 01:35:32.200
beieinander. Okay, wir haben Hulien gemietet. Release. Aha. AppXBundle. Ja, wo wir gerade

01:35:32.200 --> 01:35:40.840
wieder bei dreckigen UWP-Packages wären. Die halten alle die Luft an. Ja, genau. Wahrscheinlich.

01:35:40.840 --> 01:35:46.520
Ja, stimmt. Irgendwie habe ich keinen Bock, den Kram zu installieren, aber mir offen System

01:35:46.520 --> 01:35:51.320
jetzt. Oh, was sagt denn der Windows Store? Der Windows-Store sagt, es gibt Updates.

01:35:51.320 --> 01:35:56.960
Habe ich das gerade richtig gesehen? Habe ich das gerade oben links? Oben links war doch

01:35:56.960 --> 01:36:04.680
gerade irgendwas mit Updates drin, oder? Stand da nicht gerade drei Updates? Ja, hier, guck

01:36:04.680 --> 01:36:11.560
mal. Stand da nicht oben irgendwas drei Updates gerade und ich habe es nicht gesehen? Die

01:36:11.560 --> 01:36:18.720
Xbox Game Bar, your phone. Was, mein Phone? Ich kann mein Phone upgraden, das ist ja poggers.

01:36:18.720 --> 01:36:25.600
Und der 3D-Viewer, ja. Dazu kann ich nur sagen, und gleich wieder weg damit.

01:36:25.600 --> 01:36:33.240
Ok, Microsoft Desktop App Installer. Leute, irgendwie ist es mir dazu, eine Windows-VM

01:36:33.240 --> 01:36:37.560
zu installieren für den Kram. Ich weiß auch nicht. Kennt ihr schon, ich zeige ihn immer

01:36:37.560 --> 01:36:47.760
wieder gerne. Ich zeige ihn immer wieder gerne, den ISO-Download-Hack. Passt mal auf,

01:36:47.760 --> 01:36:52.840
mal gucken, ob der noch geht. Ihr seht ja hier. Chat, nicht spoilern, nicht spoilern,

01:36:52.840 --> 01:36:59.840
weil das verdirbt immer den Effekt, ja. Excellent Trick. Also, man sieht ja hier, wenn man Windows

01:36:59.840 --> 01:37:06.880
10 ISO runterladen will, geht das nicht. Man kann dieses Tool runterladen, um dann, dass

01:37:06.880 --> 01:37:10.040
sich selbst ein ISO zu erzeugen. Ich zeige euch jetzt mal was, was man machen kann. Ihr

01:37:10.040 --> 01:37:17.280
geht einfach hier drauf und sagt Developer Mode und dann stellt ihr um auf irgendwie

01:37:17.280 --> 01:37:22.920
ein Mobile-Gerät, sagen wir jetzt irgendwie keine Ahnung, ein iPhone 6 oder sowas. Dann

01:37:22.920 --> 01:37:33.640
aktualisiert ihr die Seite und ISO-Download. Fertig, das war's. Easy. Easy as fuck. Easy

01:37:33.640 --> 01:37:44.680
as fuck. Jetzt können wir uns ISO runterladen. Bestätigen. Exellent. Englisch. International.

01:37:44.680 --> 01:37:56.320
Bestätigen. Sehr spät. Schon geil, oder? Das ist schon geil. Ja, und dann macht ihr

01:37:56.320 --> 01:37:59.640
die Developer-Tools aus. Ihr könnt auch die Developer-Tools ausmachen, dann bleibt die

01:37:59.640 --> 01:38:07.760
Seite offen. Und ihr seht, kaum sind die Developer-Tools aus, geht's wieder nicht mehr. Geht's wieder

01:38:07.760 --> 01:38:14.960
nicht mehr. Microsoft-Mitarbeiter hassen diesen Trick. Wie behemmert ist das eigentlich?

01:38:14.960 --> 01:38:22.280
Costa, es ist gar nicht so behemmert, weil, überleg dir mal, du bist ein User, der noch

01:38:22.280 --> 01:38:28.280
kein Windows hat. Wenn du noch kein Windows hast, kannst du ja auch nicht das Windows-Tool

01:38:28.280 --> 01:38:33.560
runterladen, um dir ein ISO zu erstellen. Also, die Seite schaltet halt um, sobald sie

01:38:33.560 --> 01:38:39.240
denkt, du bist kein Windows-User. Ist eigentlich ganz logisch, weil als nicht Windows-User brauchst

01:38:39.240 --> 01:38:46.960
du ja das Windows-ISO, um Windows installieren zu können. Also, ganz so low-brain ist es

01:38:46.960 --> 01:38:56.160
von Microsoft gar nicht, aber ich finde es trotzdem ziemlich fail. Frage für einen

01:38:56.160 --> 01:39:04.160
Freund, gibt es eine UDP-Porn-App? Wozu ist das Übertragungsprotokoll für eine Porn-App

01:39:04.160 --> 01:39:23.520
wichtig? Brauchst du Echtzeit-VR-Porn, da TCP ist bloated? Okay, wir installieren uns

01:39:23.520 --> 01:39:33.160
mal eine Windows-VM-Com. Scheiß drauf, machen wir mal. Schadet ja nix. New, Virtual Machine,

01:39:33.160 --> 01:39:47.040
Custom. Geht ja auch schnell, dauert 5 Minuten oder so. Custom, Windows 10. Ja, meinetwegen.

01:39:47.040 --> 01:40:03.640
Auch gut. 3 Cores, auch gut. 4096, ja, 5G-RAM, auch gut. Nutt, excellent, excellent, excellent,

01:40:03.640 --> 01:40:11.400
excellent. Single-File, 60, ja, 40G reichen auch. Excellent, excellent, excellent, alles,

01:40:11.400 --> 01:40:20.800
alles exquisite, excellent. Jetzt dreht er, jetzt dreht er durch. So, printer raus, Soundkarte

01:40:20.800 --> 01:40:32.280
raus, da kommt Cortana gar nicht auf die Idee uns voll zu texten gleich. So, save. Die CD,

01:40:32.280 --> 01:40:49.040
ist das ISO fertig? Nee, 40 Sekunden. ADB-Push, excellent, big-break-chat. UEFI einstellen,

01:40:49.040 --> 01:41:02.360
ja, warum nicht? Haben wir doch gerade gemacht. Oder muss man das noch mal machen vorher?

01:41:02.360 --> 01:41:29.400
Nee. Me-Came, 6 Monate, Dankeschön. Poggers. Chat, ich verteile mal wieder ein Gratis-Sub,

01:41:29.400 --> 01:41:41.120
und zwar, wir machen das ja ab und zu, gleich geht's los. Ihr müsst wieder erraten, aber

01:41:41.120 --> 01:41:46.120
erst wenn ich sag, dass es losgeht, ihr müsst wieder erraten, bei wieviel Subs ich gerade

01:41:46.120 --> 01:41:57.640
bin. Aber vorher muss ich erstmal wieder einstellen. Oh, mein FFZ ist kaputt. Mein FFZ ist kaputt.

01:41:57.640 --> 01:42:22.040
Leute, es geht noch nicht los.

01:42:22.040 --> 01:42:41.120
Chat, ich muss nämlich erstmal einstellen, dass ich im Chat möglichst viel sehe. Ich

01:42:41.120 --> 01:42:51.560
weiß, ihr spammt schon gerne, ne? Wo steht denn das in FFZ, dass ich die History einstellen

01:42:51.560 --> 01:43:17.880
kann? Hier Chat, Chat, Kanal, Chat, okay, Inline, Raum, Erscheinung, okay, Breite, Schriftgröße,

01:43:17.880 --> 01:43:27.800
ich brauche die Chat-History, wie kann man die verhalten, verhalten? Nee. Wie kann man

01:43:27.800 --> 01:43:31.760
den FFZ, ah hier, Länge des Chat-Verlaufs, 5000, das sollte doch eigentlich reichen,

01:43:31.760 --> 01:43:43.920
oder? Chat, das sollte eigentlich reichen. Also, okay, los geht's. Ihr müsst jetzt raten,

01:43:43.920 --> 01:44:13.040
wieviel Subs ich gerade habe, sobald ich das hier reinpoiste. So, jetzt. Okay. Drei, zwei,

01:44:13.040 --> 01:44:24.120
eins, stopp. Okay, also schauen wir mal. Richtige Antwort wäre 201 gewesen. Hat jemand 201?

01:44:24.120 --> 01:44:36.640
Neonominus hat glaube 201, sehe ich das richtig? Und Kawaii Shocks hat auch 201. Der eine,

01:44:36.640 --> 01:44:57.400
du weißt schon 201, oi oi oi. Okay, habt ihr gut gemacht, Leute. Dann kriegt ihr jetzt

01:44:57.400 --> 01:45:17.960
ein paar Abos, wenn es funktioniert. Kommen wir mal, gucken wir mal, ob das klappt. Geht

01:45:17.960 --> 01:45:29.000
das jetzt? Ah, excellent, nice. Funktioniert. Der Neonominus kriegt auch ein. Ihr habt echt

01:45:29.000 --> 01:45:34.120
Glück, alle, die die keine Abos haben, gewinnen. Die, die Abos haben, gewinnen gerade nicht

01:45:34.120 --> 01:45:37.880
mehr. Das ist gut, weil ich habe immer noch keine Ahnung, was ich machen soll, wenn mal

01:45:37.880 --> 01:45:41.600
einer gewinnt, der schon ein Abo hat. Der wird dann hochgestuft, der wird dann auf die

01:45:41.600 --> 01:45:48.200
nächste Tierstufe upgraded oder so, keine Ahnung. Aber ganz einfach abgesehen, das bringt

01:45:48.200 --> 01:45:55.880
ja eh nix, weil ich von meinen 22 Emote Slots oder so immer noch keine, keine, keine Emotes

01:45:55.880 --> 01:46:02.800
bei Pfeiffer gekauft habe. Dabei habe ich eine Riesenliste mit Emote Ideen. Schon ganz

01:46:02.800 --> 01:46:12.600
schön, ganz schön. Monarch, Monarch S. So, da habt ihr eine Runde Subs. Exzellent.

01:46:12.600 --> 01:46:26.960
Das ist der Neonominus, hast Glück gehabt. Und das Schöne ist, wer das hier regelmäßig

01:46:26.960 --> 01:46:36.200
verfolgt, der kann sogar sich ziemlich gut ableiten, wie viel Subs ich gerade habe, weil

01:46:36.200 --> 01:46:47.600
so sehr schwanken wird das wahrscheinlich gar nicht. Wo hast du die WinUI 3 DLL gefunden?

01:46:47.600 --> 01:46:55.520
Im Ordner von dem Testprojekt, was man mit den Standardvorlagen anlegen kann. So, jetzt

01:46:55.520 --> 01:47:01.960
müssten es 204 Subs sein, wenn ich richtig lege. Aber das Schöne ist, ich kriege ja

01:47:01.960 --> 01:47:06.000
die Hälfte wieder, wenn ich, nee 205. Habe ich was übersehen? Habe ich, habe ich was

01:47:06.000 --> 01:47:21.840
übersehen? Ach hier, x stürzt, was? x stürze dx, zwei Monate. Dankeschön, habe ich gar

01:47:21.840 --> 01:47:39.360
nicht gesehen. Exzellent. Huge IQ Sub. Und davor hat McCame resubbed, auch ganz schön.

01:47:39.360 --> 01:47:50.080
Sehr schön. Neonominus steht bei mir überhaupt nicht drin. Aber du hast schon eine. Ja,

01:47:50.080 --> 01:48:01.800
keine Ahnung. Ja, aber die Twitch Tracker stimmen nicht. Zumindest nicht was Subs angeht.

01:48:01.800 --> 01:48:15.440
Also ich habe gerade 5 Euro ausgegeben und davon bekomme ich 2,50 Euro wieder. Das lohnt

01:48:15.440 --> 01:48:35.080
sich natürlich richtig. Ach und steuern, klar. Any key. Win-win. Ja Twitch freut sich.

01:48:35.080 --> 01:48:53.560
Okay, Language, Englisch, Time Currency, German. Keyboard, German. So, German no dead key gibt

01:48:53.560 --> 01:49:05.640
es hier nicht. Install. Exzellent. I don't have a product key. Brauchen wir dafür auch

01:49:05.640 --> 01:49:16.880
nicht. Wir installieren Windows 10, Bro. Was ist eigentlich IBM German, so ein uralt Tastaturlayout.

01:49:16.880 --> 01:49:23.560
Weiß nicht was der Unterschied ist zwischen German und i-German IBM. Können wir gucken

01:49:23.560 --> 01:49:34.120
während wir installiert. Difference IBM German und German. IBM Keyboard German und

01:49:34.120 --> 01:50:02.560
German. Ah, caps lock ignoriert die Zahlen, okay. Wusste ich gar nicht. Für mich ist

01:50:02.560 --> 01:50:10.240
no dead key nur wichtig, was man unter Windows nicht richtig einstellen kann, dass der Kram

01:50:10.240 --> 01:50:23.740
hier richtig funktioniert. Ja, so sieht es aus. Exz, Windows Installation, läuft sehr

01:50:23.740 --> 01:50:29.400
schön. Haben wir Frametrops? Keine Frametrops Leute, obwohl davon scheinen richtig gut zu

01:50:29.400 --> 01:50:35.840
funktionieren gerade. Dafür funktioniert es bei meinem Warzone beziehungsweise COD Mitspieler

01:50:35.840 --> 01:50:40.040
nicht. Der hat jetzt auch rumgestellt auf Vodafone, bei ihm spackts jetzt übelst rum.

01:50:40.040 --> 01:50:50.760
Aber es haben ihm auch DualStack Lite aufs Auge gedrückt glaube ich. Vodafone, Vodafone

01:50:50.760 --> 01:51:13.880
Phone. DualStack Lite, größte Shit ever. So, ähm, ausreichend rumgeflagert, jetzt

01:51:13.880 --> 01:51:20.920
bist du VIP Traffic. Jetzt mal ganz ohne Witz, das ist kein Zufall. Es ist kein, ich kann

01:51:20.920 --> 01:51:28.400
mir nicht vorstellen, dass es Zufall ist, dass, ähm, in dem ab dem Moment, wo der Social

01:51:28.400 --> 01:51:36.040
Media Typ vermute ich mal von Vodafone geantwortet hat, dass es ab dann geht. Das kann ich mir

01:51:36.040 --> 01:51:42.920
nicht vorstellen. Der Zufall ist zu groß. Die haben gesehen, der Typ, dem gucken 20.000

01:51:42.920 --> 01:51:49.360
Leute zu, also auf Twitter 20.000 Follower auf Twitter und der flamet uns jeden Abend

01:51:49.360 --> 01:51:54.960
an öffentlich. Das ist scheiße, das geht nicht. Das müssen wir anders machen und schon

01:51:54.960 --> 01:52:03.520
gehts. Was halt eigentlich total für mich gut ist, aber insgesamt ziemlich scheiße,

01:52:03.520 --> 01:52:10.720
wenn man sich überlegt, dass dadurch es bei allen anderen ja auch nicht besser wird,

01:52:10.720 --> 01:52:15.240
sondern marginal schlechter dadurch, dass es bei mir besser ist, es müsste halt überall,

01:52:15.240 --> 01:52:19.600
man müsste sich halt überall wenigstens drauf verlassen können, dass ein Provider eben

01:52:19.600 --> 01:52:23.200
seinen Job erledigt und es kann ja nicht sein, dass man sich freuen muss, wenn es mal eine

01:52:23.200 --> 01:52:27.840
Woche funktioniert. Es sollte die Ausnahme sein, es sollte immer funktionieren und mal,

01:52:27.840 --> 01:52:33.040
mal kanns Probleme haben, aber bei mir war es mit Vodafone ja so, es hat mal funktioniert

01:52:33.040 --> 01:52:54.200
und die Ausnahme war eigentlich, die Regel war, dass es nicht funktioniert hat. Die Musik

01:52:54.200 --> 01:53:12.600
ist voll MonkaS gerade. Das war Luigi's Mansion, oder? War das Luigi's Mansion Musik? Ok, gucken

01:53:12.600 --> 01:53:19.600
wir mal meine Twitch-Statistik an, während Windows installiert. Oh, es gibt bei mir auch

01:53:19.600 --> 01:53:25.240
gleich Mittagessen und danach muss ich Warzone grinden. Vertress, wann wollt man anfangen?

01:53:25.240 --> 01:53:37.000
Also 13 Uhr gibt es bei mir Mittagessen, aber es geht schnell. Also wir können dann anfangen,

01:53:37.000 --> 01:53:56.680
wenn ihr wollt. Ich arbeite bei 1&1, wenn du günstiges DSL brauchst, HMU. Was ist denn

01:53:56.680 --> 01:54:24.480
HMU? Hau mich um? Nee, was ist HMU? Hit me up! Ah, nicht hau mich um. Wann immer ich will,

01:54:24.480 --> 01:54:32.080
so, ja dann. Ja, dann geh ich jetzt danach im Stream essen und dann gehts los. Leute,

01:54:32.080 --> 01:54:36.680
frage mal an euch. Ich weiß, die meisten Leute sind hier, weil sie Technik-Kram sehen wollen,

01:54:36.680 --> 01:54:43.560
sowas wie heute hier. Leider war heute eher Microsoft und C++ Frame. Soll ich danach

01:54:43.560 --> 01:54:48.880
unser Warzone Zeug streamen soern? Heute ist auch nur Windstream. Also heute verlieren

01:54:48.880 --> 01:55:02.880
wir auch nicht. Ist es correct? Yes, is right. Keyboard-Layout, nein, nein, nein, nein.

01:55:02.880 --> 01:55:06.720
Wollt ihr mich veräppeln? Das ist gar nicht das richtige Keyboard-Layout. Ich hab doch

01:55:06.720 --> 01:55:18.280
eben schon das richtige Keyboard-Layout ausgewählt. Haben ja noch nie verloren. Nee. Und ich

01:55:18.280 --> 01:55:28.680
bin auch noch nie sinnlos gestorben irgendwo. Nein. Zum Glück haben wir die Soundkarte ausgebaut

01:55:28.680 --> 01:55:57.040
sonst käme Cortana wieder an Start. Hi, I'm Cortana. Was ist das? Moment, was ist das?

01:55:57.040 --> 01:56:15.040
Loll. Ach du Scheiße. Ach du Scheiße.

01:56:15.040 --> 01:56:25.960
actually

01:56:25.960 --> 01:56:39.240
eine

01:56:39.240 --> 01:56:50.520
Okay, das war recht aufwendig das parallel zu Setup.

01:56:50.520 --> 01:57:01.640
Personal use, next, achja jetzt haben wir das Problem hier Offline Account muss man

01:57:01.640 --> 01:57:02.640
anklicken.

01:57:02.640 --> 01:57:05.340
Wir hatten doch eben jemanden im Chat der gefragt hat wie man Windows jetzt Offline

01:57:05.340 --> 01:57:06.340
aktivieren muss.

01:57:06.340 --> 01:57:10.800
Offline Account, da muss man zweimal sagen ja ich weiß, ich weiß, limited experience,

01:57:10.800 --> 01:57:25.280
ich weiß, ich weiß, ja es ist mir klar, so Tests, 1, 2, 3, 4, 5, 6, excellent Passwort,

01:57:25.280 --> 01:57:29.520
das geht mit der Home Version noch, oh weiß ich nicht, weiß ich nicht, Security Question,

01:57:29.520 --> 01:57:39.960
Chat Name, Security Question 2, Nickname und what is first name for your oldest cousin,

01:57:39.960 --> 01:57:58.760
ganz, ganz klar, cute chat, fuck, no, nein, nein, nein, nein, nein, nein, nein, nein,

01:57:58.760 --> 01:58:16.760
nein, nein, nein, nein, nein, nein, nein, achja, die Installation ist wirklich absolut

01:58:16.760 --> 01:58:21.680
failbar Windows immer, du musst erstmal eine halbe Stunde auf Ich will nicht klicken,

01:58:21.680 --> 01:58:34.060
das haben die bewusst gemacht garantiert die die hoffen dass die leute sagen ja die

01:58:34.060 --> 01:58:38.600
fault settings akzeptieren so nach dem motto das schneller geht total hängen geblieben

01:58:38.600 --> 01:58:48.880
bis gleich also ich gehe jetzt was essen gleich wenn ich hier fertig bin 13 uhr kurz nach

01:58:48.880 --> 01:58:56.160
13 uhr dann esse ich schnell was und dann gucken wir dann gucken wir dann gleich also irgendwie

01:58:56.160 --> 01:59:07.560
so 13 30 oder so geht es los mit control alt entf kann man skippen ja aber aber nicht aber

01:59:07.560 --> 01:59:20.080
nicht hier drin oder wie sendet man überhaupt control alt entf ich mache stream aus dann

01:59:20.080 --> 01:59:23.760
spiele ich mich kurz am abend da mache ich dann später stream wieder an was gibt es zu

01:59:23.760 --> 01:59:32.200
essen so hollandaise mit kartoffel und spargel und schinken so weiter jetzt müssen wir erstmal

01:59:32.200 --> 02:00:00.560
for ever tools installieren edge ja ich dich man k.s. weg typical install so ok also wie

02:00:00.560 --> 02:00:05.920
ist das ding jetzt win get win get kann man ausprobieren ok die windows vm höbe ich mir

02:00:05.920 --> 02:00:16.120
mal auf wir brauchen immer mal eine windows vm und zum sachen ausprobieren ok epilepsie

02:00:16.120 --> 02:00:26.040
warnung es ist nicht mal standard chrome edge stimmt es ist es ist alter alter richtig echter

02:00:26.040 --> 02:00:30.800
edge was ziemlich bescheuert ist dass es noch die fault ist weil der wird auch gar keine

02:00:30.800 --> 02:00:42.080
richtigen security updates mehr kriegen machen snapshot sehr gut excellent der chat heute

02:00:42.080 --> 02:00:57.640
wieder massive so also die erste amtshandlung was man mit edge macht wissen wir ja alle

02:00:57.640 --> 02:01:18.120
oder oder oder alternativ auch oder alternativ auch firefox oder opera gaming ja wie oft

02:01:18.120 --> 02:01:33.040
soll ich das noch machen except run ach nee moment es ist schon da ja den brechen wir

02:01:33.040 --> 02:01:46.400
jetzt ab als läuft ja schon ok also win get müssen wir installieren yes ach nee wir haben

02:01:46.400 --> 02:01:59.920
es doch schon ja ja ok was auch immer also github wie ist das win get win get cli ok

02:01:59.920 --> 02:02:23.520
release das da brauche wir ja das hier ist das übrigens der uv dieser komische uvp installer

02:02:23.520 --> 02:02:30.120
glaube ich und die sache ist halt die du brauchst halt ein kurz ein zertifikat dafür das ist

02:02:30.120 --> 02:02:32.880
das was mich vorhin auch so genervt hat dass es immer noch microsoft nicht auf die reihe

02:02:32.880 --> 02:03:01.800
gekriegt hat

02:03:01.800 --> 02:03:19.520
aha ok schön dass hier die hälfte wieder installiert wird so was ja ja ok und und und

02:03:19.520 --> 02:03:34.960
jetzt wie geht das jetzt win get ah cool ok also was kann man jetzt machen win get search

02:03:34.960 --> 02:03:41.680
ok also was haben wir da win get search gibt es auch so was wie list alles anzeigen nee

02:03:41.680 --> 02:03:50.920
das wäre zu das geht ja nett naja das ist ja das nette drinne search also was searchen

02:03:50.920 --> 02:04:04.640
wir mal firefox oh und visual studio code ist auch am start vim sogar vim ist da ok

02:04:04.640 --> 02:04:11.640
probieren wir install und dann muss man wahrscheinlich mal visual studio code weil microsoft gerne

02:04:11.640 --> 02:04:20.040
sachen mit lehrzeichen macht der kann keine dependencies das heißt der installiert einfach

02:04:20.040 --> 02:04:34.600
immer alles oder was ja gut kann ich mit leben nice endlich mal was gescheites von microsoft

02:04:34.600 --> 02:04:43.320
hier so probieren wir noch was anderes aus was haben wir noch search firefox mal gucken

02:04:43.320 --> 02:04:59.400
win get install firefox gibt es hier schon was ah please refine the input muss ich dann

02:04:59.400 --> 02:05:19.480
sagen minus version vielleicht so was oder die id vielleicht die id oh das ist eine

02:05:19.480 --> 02:05:41.600
gute id firefox add das wäre eine coole syntax wenn die funktionieren würde ok kann

02:05:41.600 --> 02:06:01.800
man sowas hier machen help install nee ähm weder kommandozeilen bedienung des todes so

02:06:01.800 --> 02:06:26.560
vielleicht nee ok da gehts schon los install ah komm mal da hinten steht doch was kann

02:06:26.560 --> 02:06:46.840
man kann man krepp ane ist ja windows crack weh feinst ist es unter windows ne für installation

02:06:46.840 --> 02:06:58.520
firefox win get install minus minus id oh jetzt wirds big brain time was und dann minus

02:06:58.520 --> 02:07:20.680
v ok das ist ähm komplizierter als ich gedacht hab

02:07:20.680 --> 02:07:49.560
schein wieder deutlich komplizierter zu sein als man so erwarten mag ah ok ok

02:07:49.560 --> 02:08:09.480
ahja also kann man den version angeben ok firefox 57.0 meine fresse microsoft kriegt

02:08:09.480 --> 02:08:31.200
ja überhaupt irgendwas hin

02:08:31.200 --> 02:08:47.080
als minus e was ist denn minus e exakt ok ok ah big brain moment root warum brauch

02:08:47.080 --> 02:09:01.240
ich root um firefox zu installieren ok jetzt ist die nächste frage kann man auch

02:09:01.240 --> 02:09:27.120
wieder deinstallieren remove nee äh was ist uninstall wie lösche ich denn was uninstall

02:09:27.120 --> 02:09:57.000
muss doch gehen bin get remove was was ah microsoft

02:09:57.000 --> 02:10:10.320
oh das tut ja weh warum ich hab grad echt mein kopf gegen so ein plastikding gekloppt

02:10:10.320 --> 02:10:15.880
äh warum macht man paket manager der kein uninstall support hat

02:10:15.880 --> 02:10:42.680
oh mein güt microsoft was ist denn mit euch los was ist denn los

02:10:42.680 --> 02:10:52.320
feature request uninstall feature request für ein paket manager wo du einen feature

02:10:52.320 --> 02:10:59.040
request aufmachen musst dass er sachen entfernen kann ist kein paket manager

02:10:59.040 --> 02:11:15.120
also ich muss mal ich muss meinen kopf noch ein bisschen gegen das plastik schlagen

02:11:15.120 --> 02:11:29.760
microsoft ich weiß ich weiß echt nicht was mit euch los ist ist doch nicht gedacht benutzt

02:11:29.760 --> 02:11:36.840
zu werden nur eine preview ja ernsthaft das erste was ich in paket manager einbau ist

02:11:36.840 --> 02:11:45.560
install remove search ich kann auch keine preview variante von was rausbringen was das

02:11:45.560 --> 02:11:51.040
ist das kann man nicht mal unfertig nennen was was nicht mal angefangen wurde zu programmieren

02:11:51.040 --> 02:12:10.320
da stand eine begründung ich kann echt okay im moment hallo windows komm an brah ich darf

02:12:10.320 --> 02:12:31.160
es nicht mehr starten es ist broken es ist kaputt oh jetzt jetzt gehts wow oh haben wir

02:12:31.160 --> 02:12:45.400
das jetzt okay okay ich starte ich starte es noch mal ich starte es noch mal okay okay

02:12:45.400 --> 02:12:57.880
die begründung die begründung muss was haben ja ja ja dafür ist ein paket manager da

02:12:57.880 --> 02:13:13.360
wie aber kann schokolade hier nicht deinstallieren das wäre auch übelst fail heilig sieben monat

02:13:13.360 --> 02:13:34.040
excellent subscription moment moment ich kann aber doch jetzt auch hier hingehen und sagen

02:13:34.040 --> 02:13:41.920
remove remove firefox warum kann man das da das kamen wenn ich das von hand über eine

02:13:41.920 --> 02:13:49.240
windows funktion machen kann dann kann ich das doch auch machen über eine komando zeile

02:13:49.240 --> 02:13:55.680
oder nicht und ganz ehrlich dann muss das microsoft da muss das microsoft forcieren

02:13:55.680 --> 02:14:01.400
dann müsste ich sagen ja okay damit ihr in unser offizielles repo reinkommt braucht ihr

02:14:01.400 --> 02:14:09.800
ein uninstall switch der funktioniert ganz einfach und wer sich nicht dran hält kommt

02:14:09.800 --> 02:14:16.200
nicht in das offizielle repo rein dementsprechend müssen sie das aber auch als die beste lösung

02:14:16.200 --> 02:14:21.480
zum software installieren pushen weil ansonsten sagen alle wieder hersteller scheiß uns noch

02:14:21.480 --> 02:14:35.760
drauf was microsoft macht gestern was schreibt real relax schreibt gestern wurde bei uns

02:14:35.760 --> 02:14:43.120
in der online vorlesung github als facebook der informatiker bezeichnet ja das ist genauso

02:14:43.120 --> 02:14:48.000
wie sie alle spiele die schwer sind sagen sie das ist das dark souls der jump and runs

02:14:48.000 --> 02:14:55.200
und sowas es gibt so ein paar dämliche sprüche also es gibt hier garantiert aber das ist

02:14:55.200 --> 02:15:00.160
never going to happen okay mal ich muss es dauernden ich muss es dauernden ich brauche

02:15:00.160 --> 02:15:10.720
ich brauche wir brauchen auf github github brauche ich ein cacw emote so ich habe gewartet

02:15:10.720 --> 02:15:24.440
ja das ist von mir wo blows reacted mit confused ja genau scoop kann das ja auch ich kann ja

02:15:24.440 --> 02:15:31.440
über über den sort party package kann das ja auch das ist das ist basic basic functionality

02:15:31.440 --> 02:15:37.720
which is perfect ja ja natürlich eindeutig ohne den remove was ist ein package manager

02:15:37.720 --> 02:15:41.080
ohne remove an ich muss essen das essen fertig krieg gerade schon nachrichten geschickt

02:15:41.080 --> 02:15:56.000
das ist fail ist das fail ich ich bin heute ist echt ein stream ohne scheiß ich bin mega

02:15:56.000 --> 02:16:04.560
enttäuscht von dem ganzen shit von microsoft erstens win ui komplett unusable useless crap

02:16:04.560 --> 02:16:13.200
mit dem ganzen uwp und code signing zertifikat restriktion sie es immer noch gibt und microsoft

02:16:13.200 --> 02:16:19.680
gehört github doch doch und jetzt kann der offizielle paket manager eine sache wo ich

02:16:19.680 --> 02:16:24.520
seit 100 jahren schon sage dass microsoft sowas mal für windows machen müsste kann

02:16:24.520 --> 02:16:28.960
ich mal pakete remove was ein schwachsinn okay leute dankeschön dass ihr dabei gewesen

02:16:28.960 --> 02:16:36.240
seid gibt es irgendjemand den wir raiden können ich bin in wahrscheinlich später in einer

02:16:36.240 --> 02:16:42.720
halben stunde stunde oder so bin ich wieder on und wir machen dann wie es ist wir streamen

02:16:42.720 --> 02:16:57.240
wortel und auldwins heute auldwins auldwins sonst sonst nix ne gibt keinen den man hosten

02:16:57.240 --> 02:17:07.680
kann so wirklich den ich kenne der es auch bräuchte ne okay leute also wir sehen uns

02:17:07.680 --> 02:17:27.560
echt enttäuschende enttäuschende microsoft stream bis später machs gut

