We are following the will of the one, through the dark age and into the storm.
And we're following the will of the one.
We are following the will of the one, through the dark age and into the storm.
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Follow me!
Good morning and welcome to Build 2019. It's fantastic to see you all in Seattle.
We are going to show you this demo using just the microphones built into this laptop and these two smartphones we have in front of us.
With these, we create a microphone array in the cloud that enables Azure Speech Services to provide accurate in-person meeting transcription even without a special meeting device.
For the next two minutes, we're going to have a rap battle of sorts.
Oh, God!
Cringe, it's hard!
And he's going to give us an example of some dev speak.
And Yusef is in healthcare marketing.
And he's going to dazzle us with a little bit of healthcare tech jargon.
Okay, what?
Oh, really?
This is going to be translated live?
Do you want text?
That's not bad at all.
You just don't know how far this is going to go live.
I mean, that's cool.
That's really nice.
YouTube has also tried to translate some of the videos.
It didn't work very well in the beginning.
But it's nice live.
There are enough people who can't hear what the people from a conference are saying.
And I'm sure not every conference or event has a native speaker.
That's a really cool story.
Do you think that will be announced at Company 3 this year?
Yes, I think so.
Okay, I think we can skip that.
Wait, what's going on?
What's he talking about?
What?
That was the bullshit bingo test or what?
There's a lot of people that don't understand that.
I don't know, whether it really understands live.
I could imagine that it was trained on it, that it understands the Microsoft-Buzzwords.
But if I think about something else, if I talk about Linux, LXC-Containers or something like that.
Ich glaube, das Ding tut sich schon schwer damit, das Live tatsächlich so korrekt zu übersetzen.
Also ich baah, da bin ich gar nicht so sicher, ob das so gut funktioniert, wie sie das dann darstellen.
Oh, er ist noch nicht fertig.
Äh, Zugabe, ja. Er will's wissen.
Hat er gerade gesagt, es ist HIPAAA?
Was hat er gesagt, es ist HIPAAA? Ist das richtig verstanden?
Also, ich muss euch ehrlich sagen, selbst wenn ich den Text lese, verstehe ich nicht mal, was er uns mitteilen möchte.
EHR-Integration durch ISV-Hersteller enthält Info-Clover-Leaf-Red... Was? Was zum Teufel ist das?
Okay, ich hab keine Ahnung, was es hier geht.
Das ist ein Ami-Ding. Ach, deswegen checken wir das nicht.
HL7FHIR ist HIPAAA.
Okay, Ami-Gesundheitszeug, keine Ahnung.
Ist eigentlich die Lautstärke okay?
Bisschen lauter.
Okay.
Moment, was erzählt er? Jetzt geht's um Cortana, oder? Er hat irgendwas von Voice Assistant, glaube ich, erzählt.
Es ist okay.
Was?
Wenn ich es richtig verstanden habe, wollte er uns sagen, dass es aktuell problematisch ist, wenn die Dialoge mit Dialogsystemen zu lang sind.
Und wahrscheinlich, dass es jetzt viel geiler ist mit dem, was Microsoft da jetzt zeigt.
Also, dass man nicht sagen muss, wie muss man bei Alexa sagen?
Ich verwende den Kram nicht, deswegen weiß ich es nicht.
Wenn du bei Alexa beispielsweise deinen Müllkalender fragen willst, dann sagst du ja auch nicht, Alexa, wann kommt die Müllabfuhr?
Dann sagst du quasi, wie ging das bei Alexa? Alexa, Talk to Müllkalender?
Und dann kannst du fragen, wann kommt die Müllabfuhr?
Wie geht das bei Alexa nochmal?
Ich sehe, ihr habt auch keine Ahnung.
Ach, Alexa, starte Müllkalender.
Okay, irgendwie so. Ich benutze das nicht, ich habe das nur ein paar Mal ausprobiert.
Und bei Google Assistant geht es ja auch irgendwie so. Du kannst ja nicht einfach sagen, okay Google, mach das Licht an.
Ich glaube, so einfach ist das nicht.
Du musst dann sagen, okay Google, tell Home Assistant to shut the lights off oder sowas in der Richtung.
Egal. Wahrscheinlich wird uns die nächsten zwei Minuten noch erzählen, wie grandios ihre neue Cortana ist oder sowas.
Multi-Domain Assistant.
And of course, lastly, most importantly, we need a multi-agent word.
The idea that you're always going to start with one wake word and one assistant is just not like how we start on the web, for example.
Just imagine, what is an open assistant future look like?
Ich habe keine Ahnung, aber ich bin mir sicher, du wirst es uns gleich erzählen.
Oh, oh, oh, jetzt kommt Cringe-Video. Diese Videos sind immer übelst zum Fremdschämen.
Ich mache mal ein bisschen weiter. Das ist die Videos, ich sehe schon die Eröffnungsszene von diesem Video
und weiß, du wirst dich Julis Fremdschämen bei.
Okay, also.
Okay, Moment, Moment, das müssen wir uns nochmal angucken.
Also, das ist ja ein Video, was uns jetzt quasi demonstrieren soll, wie die Zukunft der Voice Assistants aussieht.
Was mir jetzt auffällt ist, die läuft quasi auf hier rum, guckt immer noch auf den Bildschirm, läuft hier rum.
In der Zeit, die hätte quasi schon längst, während sie auf die nächste Drehtür gewartet hätte,
einfach mal kurz den Finger nehmen können, hoch swipen können, hätte in den Kalender gesehen.
Das ist auch mein Punkt, der für mich persönlich gegen Voice Assistants spricht.
Dass ich in der Regel alles viel schneller und viel direkter machen kann,
entweder mit Maus und Tastatur, gar keine Frage, oder aber auch mit Touch und ordentlichen Shortcuts auf dem Handy.
Und vor allem überlegt euch mal, die läuft so durchs Büro, das wird das Fakt doch alle ab.
Ja, okay, im Auto.
Ey, ohne Mist, Auto und beziehungsweise generell halt Sachen, wo du die Hände für irgendwas anderes brauchst.
Ich weiß, jetzt kommt die Leute gleich wieder hier mit irgendwas an.
Da ist so ein Voice Assistant nicht verkehrt.
Ja, also Navigationsgeräte, die man mit Stimme und so bedient.
Es ist ja nicht so, als hätte das alles gar keine Daseinsberechtigung.
Aber das zeigen sie uns ja hier nicht.
One on one mit Anjali.
Stellt euch mal vor, jeder läuft mit dem Handy so redend durchs Büro.
Das geht doch übelst auf den Sack, oder?
Jetzt ist es hier nur Angela, oder?
Nee, wer auch immer, jetzt ist es nur die.
Stellt euch mal vor, das macht jeder so.
Da kommt jeder morgens rein und erzählt dann zuerst mal, ja, was sind dann meine Termine?
Und hört dann dem Handy zu.
Und was noch viel witziger wird, wahrscheinlich beeinflussen die Dinger sich dann untereinander.
Das ist so, wie wenn ich, ich sag's jetzt nicht, weil ich weiß, das ist immer problematisch,
wie wenn ich im, wenn ich im Stream dann sowas, sowas halt sage, wie so, ne, hallo, a, l, e, x, a, oder so.
Dann, dann springen die immer an, oder wenn ich dann sag, ok, g, u, u, g, l, e, dann, ja, dann springen die Dinger an.
Und das könnt ich mir da auch so vorstellen.
Die läuft wirklich durchs Büro und schwätzt die ganze Zeit.
Und vor allem ist keiner da.
Das funktioniert auch alles nur so lang, wie du wahrscheinlich unten drunter als System Exchange nimmst.
Wenn überhaupt, wahrscheinlich musste Microsoft 365, Office, Cloud, sonst was so was verwenden,
dass der Kram funktioniert.
Die steht einfach im Büro und labert mit ihrem Handy.
Die hätte alles innerhalb von zwei Minuten mit dreimal Touchen erledigen können, anstatt fünf Minuten mit Cortana zu schwätzen.
Die App Kickoff.
Machen wir weiter.
So weit sind wir schon.
Die hat eine Verabredung am Tag, wo sie irgendwo anders hin muss und kann sich jetzt schon nicht merken, dass sie zum Liberty Cafe hin muss.
Die hat eine Verabredung, hat sie am Tag, eine Verabredung, außer irgendwie komisches Rumgemieten mit Angela.
Eine Verabredung, sie kann sich nicht merken, wo die Verabredung ist.
Die Timer ist raus.
Funktioniert in Deutschland schon mal gar nicht.
Ich meine, guckt euch mal die Webseiten und wie gut die Restaurants und Sachen eingebunden sind in Deutschland. Guckt euch das mal an. Wenn ihr Glück hast, findest du hierzulande eine Speisekarte auf der Seite von irgendeinem ordentlichen Restaurant.
Geschweige denn, dass die in irgendeiner Form, eine Art und Weise Microsoft mitteilen, sie haben eine Terrasse.
Und wenn ich da hinten sitzen würde, mich würde das übelst anpissen, wenn da alle zwei Minuten, wie willst du da arbeiten, alle zwei Minuten vorbei rennen die Leute. Sie reden mit Cortana und vor allem, Cortana redet mit ihnen.
Ohje, jetzt jetzt jetzt security-mäßig problematisch.
Die haben auch alle immer so krass griffige Namen. Benjamin McIntosh.
Mittlerweile ist es bei den ganzen Werbevideos so, die Leute heißen nicht mal normal. Du hast da keinen, keine Ahnung, keinen John Parker oder sowas. Du hast da dann Benjamin McIntosh.
Ja, wunderbar, wie das passt.
Ist euch eine Sache bei der ganzen Geschichte aufgefallen? Die erzählen die ganze Zeit, dass sie irgendwie nachmittags einen App-Lounge haben.
Ich frag mich, wann hatte ich eigentlich ihre App programmiert? Also wenn der ganze Tag so aussieht, dann wird das schwierig.
Cortana hat programmiert, genau.
Oh nee, jetzt kommt Office. Jetzt wird es ekelig, Leute. Jetzt wird es richtig schlimm, jetzt kommt Office.
Unglaubliches Feature. Unglaublich, das kann nur Edge.
Enterprise Search bingt acknowledge. Warum schreit die so? Weil ich wahrscheinlich zu laut habe.
Oh mein Gott. Was zum Teufel? Krasses Feature, da habe ich drauf gewartet.
Endlich, endlich. Ich hoffe, sie zeigen jetzt noch ein Beispiel, weil ich kann es kaum erwarten zu sehen, wie Internet Explorer Embedded in Edge irgendwie aussieht.
Das konnte ich mir in meinen kühlsten Träumen noch nicht vorstellen, allerdings Microsoft zeigt es uns jetzt.
Oh Gott. Teufelweiche, Alter. Ich weiß gar nicht, was für ein Emo drücken soll dazu.
2019. PFS, genau. Nee, ja, den eigentlich.
Gibt es auch die Möglichkeit, dass mich Third Parties gar nicht tracken? Ach ja, doch, hier. Strict.
Ich bin immer noch für sowas wie Dings hier, sowas da. Beste.
Oder im Firefox NoScript, da kannst du einfach genau einstellen, welche Seite denn was darf und welche Seite was nicht darf.
Strict, abgesehen von Microsoft Seiten, so sieht es aus.
Ja, Fabi, da ist was dran.
2019.
Was ist denn jetzt da jetzt neu?
Man kann Bilder und Text in irgendein Eingabefeld rein tracken droppen.
Und weiter?
Oder übersehe ich die Genialität davon?
Ultra cool.
Warum alles in der Welt muss ich das in Excel machen?
Was reitet die Leute, sowas in Excel zu machen?
Was, der Typ neben dem Bildschirm?
Was kommt als nächstes?
Die meine Katze, auch Chica.
Plus meine Chica, sieht so aus.
Und die Typed garantiert nicht den Internet Explorer.
Das ist ganz cool.
Das ist aber auch nichts Neues, dass man zusammen an einem Textdokument arbeiten kann.
Warum nicht, das ist ganz nice.
Moment.
Wie soll Live-Editing, also Collaboration-Dingsbums, also wie wird man es auf Deutsch?
Also geteiltes Edit, also zusammen an einem Dokument editieren.
Wie soll das zusammen mit On-The-Fly-Translation funktionieren?
Wie soll das funktionieren?
Es kann doch nie jemand auf Cyrillisch editieren am gleichen Text, wo jemand auf Englisch dran editiert und schreibt.
Die Wörter sind doch teilweise sogar in einer ganz anderen Reihenfläche.
Das kann doch nicht funktionieren.
Das glaube ich erst, wenn ich es sehe.
Ja, aber manche Sätze bestehen in der einen Sprache aus fünf Wörtern, in der anderen irgendwie aus acht,
dass sie sind ergeben oder da gibt es das eine Wort nicht, dafür gibt es andere.
Das bringt nichts, wenn du einfach die Wörter einzeln identifizieren kannst.
Ich kann mir nicht vorstellen, wie das On-The-Fly funktionieren soll mit verschiedenen Sprachen.
Jetzt überlegt euch mal zum Beispiel, da würde ich hier irgendwie das Wort acht löschen.
Und in der anderen Sprache ist das Wort acht nicht acht, sondern irgendwie zweimal vier.
Jetzt blöd gesagt.
Aber sinngemäß kommt ja sowas in unterschiedlichen Sprachen vor.
Und das sind dann zwei Wörter.
Das funktioniert nicht.
Nee, die haben doch gerade gezeigt, dass sie collaborative Dingsbums editen können.
Guck da unten.
Ach nee.
Ja, das ergibt Sinn.
Die Typen hier editieren, die haben die gleiche Sprache und die anderen gucken nur zu.
Ja, das funktioniert.
Das lasse ich mir gefallen.
Dass die zwei Typen, die sie in der gleichen Sprache haben editieren können und die anderen,
die sie übersetzt kriegen, gucken nur zu.
Das lasse ich mir gefallen.
Das kann ich mir gut vorstellen, dass es funktioniert.
Wir sind aber ganz schön collaborative hier am Start.
Die sind viel lauter jetzt als der andere.
Oh nee, das wird Hololens, das wird SoCringe, das weiß ich jetzt schon.
Und die Dinger sind immer übelst zum Fremdschirmen.
Ach nee, das ist Teams.
Hat der nicht gerade was von Hololens erzählt?
Eine VR hat er erzählt, oder AR.
Oh Gott, sieht das schlecht aus.
Oh Gott, sieht das schlecht aus.
Ich glaube, so etwas braucht man eigentlich in der Art und Weise gar nicht.
Aber Microsoft möchtecheers erzählen, dass man das braucht.
Es gibt ein paar coole Sachen.
Zum Beispiel dieses Microsoft Surface Hub.
Also ein großer Bildschirm, wovon du zusammen malen kannst und du kannst das dann auch Leuten
sharen, die nicht live dabei sind im Konferenzraum und so.
Das ist ganz cool.
ja aber das da mit hololens und und und zeug auf dem kopf ich glaube das wird
keiner wirklich
die neue finger handtracking in halloween 2
und was das sieht das sieht übel schlecht aus ich mein
das sieht überhaupt nicht aus nach der
it's so easy to quickly triage content
so i can quickly just grab the animation
and toss it right up there on our shared workspace so we can all take a look
if i want a man to check out something i can just pull it off the wall
und erstmal gegen die wand rennen
and toss it to her
what do you think of that one amanda
wow that looks great
and just to recap what happened here
i grabbed a holographic image on the wall as a real person in this room and threw it to an avatar who could be anywhere in the world
and let's make this life size
and zoom this up a little bigger
and you know amanda i'm thinking
why don't we show off
the new free hand annotation capabilities
and give her some accessories
absolutely
i think she really could use a bracelet
and of course
the finishing touch
a hololens
everyone needs a hololens
awesome
hey lynn it looks like lynn just joined
hey everyone
i love this
joining from my pc
i'm still able to participate in the experience
even without a hololens
so are you ready to see what i've been working on
yeah let's check it out
since i've joined from my pc
das sieht irgendwie nicht
nicht gesund aus
my laptop via the spacial tab in teams you saw earlier
i can easily browse
and upload content directly from my pc
and upload it to the meeting
check out this 3d model of a hover pack
this is cool
you know amanda since this
is mixed reality why don't you
jump in and give it a spin
of course let's try it out
oh
it's even cooler
oh nein
das tut so weh
das tut so weh
das schmerzt
es gibt wirklich Sachen die tun weh wenn du zuguckst
it's even cooler
on the inside
oh
so dope ist das
was?
meaasp.net
ich bin jetzt 20 min
wir haben doch gar nicht angefangen
zum glück ist es gleich vorbei
Zum Glück ist es gleich vorbei, ich kann mir das nicht lange angucken.
Jetzt kriegen wir noch ein Special gezeigt.
Ich kann nicht 42 Minuten an sein und wir sind erst bei 12 Minuten von dem Video.
Und noch nicht mal gesperrt.
Hey, man kriegt ein neues Handy, weil man vor dem Hauptquartier rumschimmelt, das ist
auch nice.
Hä?
Okay.
Also anscheinend gibt es irgendwie ein Minecraft Handy oder so?
Passt doch immer.
Man weiß es nicht.
Na gut.
Warten wir mal an.
Wupp wupp wupp.
Gechillt ist wupp wupp wupp.
Oder weiter eine Runde Heavy Metal.
Lass mal mal anmachen.
Wupp wupp wupp, okay.
Ich hab's ja schon geahnt, dass das ein bisschen zum Fremdschämen wird.
Aber es war schlimm, oder?
Ja, es war echt schlimm.
Okay, also jetzt sieht man noch mal ganz schön, was dieses Tool eigentlich machen soll, bloß
dann im Webinterface, was wir heute bauen.
Man sieht hier nämlich alle Fragen, die hier ankommen, bei mir im Chat, nämlich mit Ed
Korsi, blablabla, was war Copernetis noch, das ist Ebaro, das hat jetzt mit dem Thema
auch gar nichts zu tun gehabt, oder?
Copernetis ist quasi ein, wie nennen sie es, ein Orchestrierungswerkzeug für Linux-Container.
Sagen sie, glaube ich, selbst so oder so ähnlich.
Also im Prinzip Cluster-Manager so ein bisschen.
Bing Weather, ja, gut, warum sollte Microsoft nicht Bing verwenden, wäre irgendwie bescheuert,
wenn Microsoft auf einmal dann Google Maps oder so aufmacht.
Du glaubst nicht, wie viele Leute doch noch hier benutzen, oh doch, das glaube ich.
Kannst du eine Seite empfehlen, wo man sich am besten eine Domain kaufen kann?
Also, ich kann dir die Seite zeigen, wo ich meine zwei von drei Domains habe.
Ich habe ja einmal MaxFPS.de, die ist noch seit Ewigkeiten bei Nitrado, weil da hatte
ich mal einen Server, aber da würde ich jetzt nicht nur einfach eine Domain kaufen.
Ich habe meine Domains hier bei denen, die sind allerdings günstig und sonst haben sie
nicht allzu viel.
Bei denen habe ich die zwei anderen Domains, aber die sind nicht so toll in manchen Bereichen.
Die haben zum Beispiel keine ordentliche API, wo man DNS-Einträge anlegen kann.
MaxFPS.de, da gibt es aber nichts drauf, die habe ich mir einfach nur reserviert.
Timestamp, ja, das war mal alles und wie gesagt, ich habe meine Domains bei denen, das liegt
aber auch daran, wenn ich ein Let's Encrypt Zertifikat haben will, dann gehe ich halt
einmal von Hand in die DNS-Verwaltung und lege das Token an und dann kannst du es ja
danach aktualisieren.
Also die Domains bei denen sind relativ günstig oder war zumindest der günstigste Anbieter
für die zwei Sachen, die ich mir damals holen wollte, deswegen habe ich sie da geholt.
Es gibt zig, also die funktionieren ganz gut, ansonsten gibt es noch zig andere, genau Namecheap
ist auch relativ beliebt, ich glaube das dürfte somit auch das sein, was ich am häufigsten
so auf Reddit und so lese, wenn es um Domains und sowas geht, da kannst du eigentlich nicht
allzu viel verkehrt machen.
Ich würde gucken, dass ich nach Möglichkeit irgendeine Top-Level-Domain nehme, die nicht
so verbreitet ist, du kannst zum Beispiel hier irgendwie, keine Ahnung, nimmst du irgendwie
poggi.xyz, tja, wenn man sich, das ist so eine Domain, die kann man sich gut merken,
allerdings die ist billig und kein Mensch will die haben, wobei 9€ im Jahr, das geht
noch viel, viel, viel billiger.
Genau, GoDaddy gibt es auch noch, poggi.law, das law ist bestimmt teuer, und was richtig
teuer ist sind so die normalen Dinger, poggi.net, also die anderen, teilweise sind die richtig
teuer, ich würde einfach mal gucken, poggi, was gibt es für Möglichkeiten, was haben
wir hier, poggi.com, ist unavailable, pogginet, ist unavailable, poggi.eq, was auch immer
das für ein Land ist, oder was auch immer, keine Ahnung, ich kann mir überhaupt nichts
vorstellen, eq ist eine Unicode Library eigentlich, aber ich glaube nicht, dass das damit gemeint
ist, 6€ im Jahr, ich würde einfach mal ein bisschen gucken, poggi.chart, genau da habe
ich drauf gewartet, poggi.club, ja was auch ganz cool ist, poggi.house gibt es tatsächlich
auch, habe ich nämlich, eine meiner Domains für Heimautomatisierung ist poggi, also nicht
poggi.house, sondern was.house, allerdings, ganz ehrlich, günstiger als das hier, muss
mal gucken, also du kriegst ein Domain schon für 5$ im Jahr, wenn du dir die passende
Domain aussiehst, poggi.saxx, es gibt mittlerweile ernsthaft.saxx als Domain, poggi.saxx, ich
habe wirklich keine Ahnung, also könnte man da sowas machen wie, keine Ahnung, das ist
bestimmt schon belegt, 100% unavailable, es war klar, youtube.law ist noch frei, oh man
OMEGALUL.NET, relativ günstig, 10 Dollar,.US ist übelst günstig, aber ich glaube,
das darf nicht jeder beantragen.
Naja, genug Domains geguckt.
Aber ich bin echt froh, dass Microsoft uns jetzt erklärt hat, dass wir demnächst Internet
Explorer in Edge verwenden können.
Da hab ich echt drauf gewartet.
Zum Glück kommt das jetzt endlich.
Ok, eine Sache, warum wir das heute noch nicht machen ist, ich würde gerne.NET Core 3
als Preview probieren, weil.NET Core 3 hat ein neues, ganz lustiges Feature und zwar
das da, das kann man mit anderen Tools schon ewig machen, es ist nicht so, als wäre das
jetzt super neu.
Also man kann beispielsweise seit Jahrzehnten schon selbst extrahierende ZIP-Archive oder
sowas machen.
Da hast du aber immer noch ein bisschen Logik drumherum gebaut und in.NET Core 3 bauen
sie das zum ersten Mal ein, dass du jede Anwendung relativ easy als Single-File publishen kannst.
Das ist wirklich sehr praktisch.
Was du bisher machen konntest, ist, du konntest.NET Core Self-Contain machen, dann kam ein
Ordner raus, der alles enthält, was du brauchst, um deine Anwendung laufen zu lassen, allerdings
war es dir dann immer noch selbst überlassen, dass du den Ordner irgendwie verteilen musst.
Also du konntest dann natürlich den ZIP-Archiv draus machen oder irgendwas anderes oder irgendein
Installer, der dann in Appdata sich installiert oder so, allerdings hat man immer noch zusätzlich
was gebraucht.
Ja in Go, so wie es der Kwai sagt, in Go ist das natürlich schön, in Rust ist das auch
schön, Rust kannst du auch super statisch kompilen und es gibt schon, ich glaube Packer
hieß das Ding, ne, es gibt schon eine Weile ein ganz cooles Tool auf Rust-Basis, ich weiß
jetzt aber nicht mehr wie es hieß, hieß das nicht Packer, Bob, Warp hieß das, genau,
das ist ganz nice, das ist von der Idee her eigentlich ziemlich simpel, das ist ein Programm,
das quasi deinen Applikationsordner nimmt, ihn zippt und sich merkt welches Programm
quasi der Einstiegspunkt ist in deinem Ordner und dann packt es da draus quasi ein self-contained
File mit ein bisschen Code am Anfang, der dafür sorgt, dass die Anwendung quasi immer
im User-Verzeichnis entpackt wird und geupdatet wird und sich auch nicht jedes Mal neu entzerlebt
und sowas, das ist ein ganz cooles Ding, da kannst du quasi alle möglichen Anwendungen
zusammenpacken zu einer Single Axle, das ist ganz nice, ja und das ist mit.NET Core 3
ist das dann eingebaut, die machen das wahrscheinlich unter der Haube relativ ähnlich, so und das
wollte ich mal ausprobieren, ich mein gut, was du immer noch angeben musst ist, was
für eine Architektur, also nee nicht Architektur, was du für ein Target hast, also was du für
eine Plattform hast, aber das ist natürlich relativ simpel an der Stelle, du nimmst Windows
10 x64, Linux x64 und wahrscheinlich Davin x64, ich hab ehrlich gesagt noch nie was
für Mac gemacht und das wollte ich mal ausprobieren, deswegen müssen wir uns jetzt als erstes
mal.NET Core 3 Brifio installieren und ich hab gesehen, es gibt einen Snap, was ganz
nützlich ist, weil da muss ich überhaupt nichts von Hand machen, wenn ich jetzt noch
finde, was das richtige ist, install using Snap, ok das da brauchen wir, das ist nämlich
ganz nice, da versau ich erstens meine Windows Installation nicht mit irgendwelchen Zeugs
und ich kann es danach einfach wieder entfernen.
Willst du wissen, wie viel ich für den Renew der.tv Domains zahle, ja kannst du mal reinschreiben,
ich denk mal, dass es nicht so teuer ist, oder, ok installieren wir den Krampel mal,
was schön ist, wenn man das als Snap ist, 23 pro Domain pro Jahr, geht im Prinzip eigentlich,
.tv ist beliebt, geht eigentlich, aber du musst nicht 50 Domains irgendwie bezahlen
oder so, aber ich glaube 28 Euro ist ganz ok für eine.tv Domain, oh hier ist warm,
ich muss mal den Klimaanleiter einschalten, so installieren wir, ok ist installiert, net
3, die Anleitung ist irgendwie fail, ich hab nämlich letztens eine viel bessere Anleitung
gefunden, da konnte man nämlich, weil es ist jetzt so, dass man das nicht mit.net
starten kann, weil.net ist das normale, was ich installiert habe, sondern man musste
irgendwas, ach genau.net SDK.net musste man jetzt nehmen, das ist nämlich das, was
das Snap installiert hat, das ist ganz cool, weil wenn ich fertig bin,.net Core 3 zu testen,
dann kann ich nämlich einfach sagen, snap remove.net Core und es ist weg komplett,
hallo in 60, ok also sagen wir mal.net SDK new und dann gucken wir uns mal an, was es
für Projekte gibt, die wir erstellen können, ASP.NET Core Web App, MVC App, MT, Web API,
was wollen wir haben, wir wollen eine.net Web API Anwendung haben und dann starten wir
mal unsere IDE mit dem Verzeichnis und schauen wir mal, ob der das auch erkennt, ich hab gelesen,
das Rider das kann, der erkennt wohl automatisch, wenn man eine.net Preview Version installiert
hat, ich hab's jetzt ja im Prinzip nur hier im Stream verwendet und ein bisschen so nebenbei,
ich muss sagen, ich finde, das ist wirklich, haben sie wirklich gut gemacht, das muss ich
von Wishl Studio echt nicht verstecken und hat ein paar Sachen dabei, die sogar schöner
sind als in Wishl Studio, allerdings finde ich die Performance von Wishl Studio besser,
zumindest die Performance von Wishl Studio ohne zig tausend Plugins, Open Solution Project,
.NET 3 haben wir das genannt hier, zack, Open, gucken, ob das funktioniert,.NET STK,.NET,
.NET, ja ey, da muss ich nix draus machen, wie die Benahmung hier ist, das ist wirklich
Big Prane Benahmung, huge, massive Prane, Restoring Packages, oh er rödelt, warten wir
mal ab, was er macht, Restoring Packages, Restoring Packages, der Restored aber ganz schön lang
Packages, ich kann nicht mehr auf Packages zu Restoren, vielleicht hätte ich einmalig
die Sache hier per Kommandozeile starten sollen, aber wir gucken mal in die Settings, was er
ausgewählt hat für einen.NET STK, weiß gar nicht wie der Punkt heißt,.NET Version,
Tools Set and Build, klingt eigentlich gut, ja, ah, guck mal, da kann man die neue.NET
Version auswählen, also ich muss sagen, Rider, die haben wirklich sich die Mühe gegeben,
ich meine, das ist super easy jetzt, ne, hat der newer einen Fehler gegeben, oh, was ist
das denn, Moment Leute, ich mach mal zu, ich hab gar nix gesehen, SSL, oh das ist bestimmt
jetzt irgendwie ein Bug, Moment, warum kann ich jetzt nicht weiter hochscrollen, dafuk,
remote certificate ist invalid, das ist 100 pro irgendein Bug von der Preview Version,
oder ein Bug, weil es in Snap läuft, oder ein Bug mit der Preview Version unter Linux,
Anleitung zu dem Fehler ganz unten, ah, guck mal da, omegalo, what was ich denn wurde, wo
meine Certfile Location ist, run, ich versuch das mal zu runnen, dann wird er wahrscheinlich
auch meckern,.NET, SDK, ne, ach fuck, wie war das,.NET, Moment, new, ach ich hab kein
T-Mark-Span, deswegen alles rumgespackt, ok, unable to get repos, da machen wir mal so,
nope, was ist deine Meinung zu Bitcoin, ich hab mal ein Video dazu gemacht, wo im Prinzip
das Fazit war, dass man auf keine selbsternannten Profis hören soll, die einem erzählen, wie
es funktioniert und was demnächst passieren wird, sondern dass sich jeder selbst überlegen
muss, ob das was für ihn ist, und ich persönlich gar keine Ahnung von Kryptowährungen hab,
deswegen bin ich der Falsche, der dazu was sagen kann, ah gut, das hat den Fehler aber
nichts nicht gefixt, wir suchen da jetzt einfach mal, so war einfach nach dem Issue, wo das
drinne steht, ah, ähm, das ist bestimmt easy as a fuck zu lösen, nein, was war das, so
ist das, wenn man Preview-Versionen verwendet, das ist irgendwas anderes, ich muss da noch
mal eine.NET Core 3 suchen, noch mal Linux dabei suchen, obwohl wir haben ja schon einen
Teil SSL cert, ja, aha, Open SSL Verify, was, was machen die da, wupp wupp wupp wupp wupp
tja, aha, hier ist doch schon was, aha, sehr gut, Export, oder aber export.NET System net
use socket, was war das, keine Ahnung, ah, ah, geht das jetzt, äh, äh, er macht zumindest
was, geht, sehr schön, easy as a fuck, ok,.NET Run, wunderbar, so, können wir Rider
wieder starten und loslegen, hast du zu Hause eigentlich die Ducky One 2 oder die K70, ich
hab die, heißt das Ding K70, das Corsair Ding, die Ducky One Skyline hab ich auf der Arbeit,
ich weiß nur, dass das Ding irgendwas mit Platinum Corsair, Platinum hast du nicht gesehen
heißt, wenn der Tastaturname schon so kompliziert ist, dass man ihn sich nicht merken kann,
stimmt eigentlich irgendwas nicht, ok, stellen wir das mal um auf das neueste,.NET 3 SDK
und dann machen wir Rider noch mal zu und wieder auf, oh nee, ah, funktioniert direkt,
weiß, muss man gar nicht schließen und wieder öffnen, ok, machen wir die Schriftgröße
mal ein bisschen, ein bisschen rauf, warum ohne Material Theme UI Plugin, ich wusste
gar nicht, dass es das gibt, sieht doch aber auch so ganz gut aus, es sieht vom Farbschema
ziemlich genau aus wie Original Studio Dark Mode, was nicht schlecht ist, weil ich so
gut wie nie Rider sonst verwende, deswegen kann ich mich da wenigstens bisschen besser
zurecht finden, so, Startup, wir müssen die Schriftgröße anpassen, dass die nicht,
dass die Standarme nicht zu klein, das wisst ihr bestimmt, was ist denn der Knopf in Rider
oder in diesen ganzen Jetbrains Dingern für Command suchen, also das was Steuerung Shift
OP ist in Visual Studio Code, das gab es, das gab es hier auch, ich weiß bloß nicht,
was für ein Shortcut das ist, Doppelshift, Tatsächlich, oh, Doppelshift, Doppelshift,
Alt F4, Nope, das funktioniert hier nicht, wir sind unter Linux, da gibt es kein Alt
F4, ja gut, aber wenn ich das hier so mache, ist das wie wenn ich das hier mache und beim
nächsten Öffnen ist es wahrscheinlich wieder klein, Font Size, ah hier, aber das ist cool,
das ist sehr, sehr nice, ist doch sehr, sehr nice, nice, jetzt können wir hier einstellen
Font Size, ach nee, Custom Font, ich will nicht, ich will Dings haben, Hack will ich
haben, Hack Beste, Hack Shift Größe 18, Moment, ach fuck, das war fürs Interface, lol, das
war fürs Interface, wie mache ich das für ein Editor, Font hier, Size 18, ja das ist
eine schöne Größe, hallo, macht das jetzt was, äh, Datei neu öffnen, äh, ja, ja,
jebaited, ja, aber Editor, Font, ah Moment, das kann man nicht überschreiben, ah, ah ja,
ok, ähm, das heißt ich muss auf, ach ja, ok, das heißt hier kann ich jetzt auch umstellen
auf Hack und auf 18 und nochmal 20, jetzt geht das bestimmt, ah, ja, so ist das doch
schön, so gefällt mir das, ok, nice, ähm, dann starten wir den Krempel mal und gucken
mal was passiert, ich hab's ja schon, warte, Moment, äh, ich glaube Rider hat es kaputt
gemacht, weil wir es gestartet haben mit der alten.NET Version, kann das sein, ich lösche
das nochmal und öffne es nochmal neu, ja, jetzt funktioniert der Krempel hier auch,
Rider, doch, man kann das mit Steuerung plus machen, das Problem ist, er merkt sich das
nicht, wenn man das zumacht und wieder neu aufmacht, dann, ja, merkt er sich das nicht
und ich will ja, wenn ich ein neues Editorfenster aufmache, dass der immer eine ordentliche
Fontgröße hat und ich, äh, ab und zu mal, oder ich jedes Mal, jedes Mal öffnen, das
einstellen muss, deswegen muss man es anscheinend in Settings machen, es gibt übrigens auch
doppelt Control, aha, ok, ich glaube, jetzt hat er es gecheckt, wollen wir mal, Start,
Building, wey, und sogar ein Browser geht auf, ein Chrome geht auf, sehr schön, warum
auch immer der genau mit dieser Seite jetzt startet, weiß ich nicht, das ist bestimmt
irgendwo Hardcoded, erstmal einen Explorer zumachen, ein bisschen kleiner machen, sonst
hat man wieder überhaupt nichts von der, sieht man ja überhaupt nichts, äh, ich glaube,
können wir die Schriftgröße noch eins kleiner machen, oder sieht man es dann schlecht?
Ich glaube, wir können es noch eins kleiner machen, oder, wo war das jetzt, Editor, ich
habe vergessen, wo es war, ja, haben wir, 16, ich glaube, 16 ist ok, ja, äh, ein kleines
sein, so, oder, so ist doch schick, so sieht man alles und ich habe ein bisschen Platz,
oder, ich glaube, das sieht man jetzt ganz gut, ja, äh, ok, die ganzen sind ganz geschwobelt,
machen wir hier weg, brauchen wir alles nett, Developer Pages, Use MCs M3C, Use HTTPs Redirect
schon, habe ich das richtig jetzt erstellt, hat er ein Web API Projekt erstellt, ja, habe
ich gesagt, dass er ein Web API Projekt erstellen soll, was haben wir sonst noch zur Auswahl
eigentlich, äh, ein Web API Projekt, ein leeres, ein leeres, wir können auch MVC erstellen,
ich glaube, Web API müsste ganz gut passen, ist das jetzt auch ASP.NET Core 3, kann ich
die Version oder so machen, minus, minus Version, zwei, wat, ah, ich habe das falsche installiert,
oh, meine Fresse, äh, getto recto, so, und jetzt sieht man aber eine schöne Sache an
dieser ganzen Geschichte, wenn man es mit Snap installiert, Snap install,.NET SD, ich muss
wahrscheinlich Beta-Version oder sowas angeben, jetzt kann ich nämlich einfach sagen, Snap,
ich glaube, uninstall, remove, ich kann mir immer nicht merken, was es ist, delete, remove,
ok, jetzt, warum müssen die Ubuntu Leute das immer alles irgendwie anders machen, ach,
Moment, das ist ja auch das falsche, was ich remove, install, ich muss hier, meint, minus,
minus Classic,.NET SDK, ich muss auch das richtige remove,.NET SDK, ok, jetzt muss
ich nämlich mal gucken, wie man, wir wollen nämlich den 3er installieren, da muss man
bestimmt minus, minus Brivio oder sowas, sowas machen, Snap, allerdings wollen wir nicht
den 3er haben, sondern, ich glaube, den 6er ist das letzte, Snap install, minus, minus
Beta muss man machen, ja, gut, wenn man das richtige installiert, dann geht es wahrscheinlich
auch direkt,.NET 9908, jetzt habe ich das gleiche nämlich nochmal erzählt, wie es schon
installiert hat, das ist eigentlich total beknackt, übrigens Leute, wir müssen insgesamt heute
vielleicht ein bisschen beeilen, weil 18.30 oder so wird gegrillt, hot gegrillt, bis dahin
muss ich fertig sein, oder mal gucken, wann gegrillt wird, aber so in dem dreh wird es
wahrscheinlich sein, so, und jetzt gucken wir mal version, was wir jetzt haben, jetzt,
ja, jetzt haben wir.NET oder Brivio 6, jetzt können wir auch nochmal eine neue Web API anlegen,
hätte ich nämlich eben mal richtig geguckt, hätte ich festgestellt, dass ich im Rider
wahrscheinlich auch gar nicht das richtige ausgewählt habe, was für ein Grill, ich sag
doch, ein hotten Grill heute, kein hottes Grill heute, ist ja wirklich ein hotter Grill,
aber ich mein, Grills dürfen auch hot sein, und nicht nur Grills,.NET Version, jetzt
hat er das richtige, sehr gut, hoffentlich, ja hoffentlich funktioniert er gerade jetzt,
aber, Loading, Loading, Starting, bla bla bla, Startup, da sieht das nämlich auch schon
anders aus, ja, jetzt sind wir wieder bei der alten Frage angekommen, Routing oder Routing,
HTTPS Redirection brauche ich keine Ahnung, Security Features, overrated, debated, deactivated,
aber nicht, Run, Hallo Klarname, Value 1, 2, DG Eats, easy, hat es geklappt mit dem Zoom,
ja, ich hab einfach eingestellt, dass die Schriftgröße jetzt immer 17 ist, Security
Feature braucht das schon, ja, das ist schon komplett überbewertet, so, also wo fangen
wir denn jetzt am besten an, ich würde sagen, wir machen einfach mal eine statische Webseite,
die Liste anzeigt mit Fragen aus dem Chat, also, mal gucken, ob das hier funktioniert,
wir machen einen neuen Ordner, der www root heißt, ich hoffe das funktioniert oder.NET
Core 3 immer noch so, beziehungsweise ASP.NET Core 3, dann sagen wir App, File Server, dass
er auch die, dass er auch aus diesem www root die normalen statischen HTML Seiten auch ausliefert,
HTML File, Index, und da kommt jetzt irgendwie was rein, blablabla, so, dann starten wir
mal und gucken, ob das funktioniert, warum startet er immer diesen komischen API Controller
und warum, warum startet er den API Controller und startet nicht einfach Index, ok, aber
Indexseite funktioniert, das ist schon mal schön, der Editor ist ein bisschen klein,
da unten braucht eigentlich auch kein Mensch, kann man nämlich irgendwie abgewöhnen, dass
der einfach gar keinen Browser startet, dass der gar keinen Browser startet, das kann
man bestimmt in run machen, ah hier steht drinnen, kann ich das nicht ändern, ich will
das editieren, warum kann ich das nicht editieren, hallo, das darf ich editieren, das darf ich
nicht editieren, ist nur in der Pro Version, ja, hä, but why, ich gebaten den jetzt einfach,
ich stell das jetzt einfach auf Edge, weil Edge gibt's bei mir nicht, ha, Mist, der Scheid
macht ein dummes Popup, der soll kein Popup machen, wird das in der Projektdatei drinne,
nö, nö, ach stimmt, vielleicht muss man, das kann sein, dass man stoppen muss, bevor
man das editieren darf, aber das wär merkwürdig, Ops, jaja, stop, Tools, run, edit, hm, ha,
warum darf ich das nicht ändern, das ist doch, das ist doch doof, neun, kann ich einfach
neun machen, copy configuration, aha, beste, alter, ne, Moment, warum darf ich das nicht
ändern, ja ok, ich weiß nicht, warum ich meinen Browser nicht ändern darf, wir suchen
mal danach, autospill, what, edit, run, build, configuration, environment variable, ich bin
verwirrt, was, wo, click on environment variables box, ach da, na ne, da steht doch nichts drin,
ich verwirrt mich jetzt echt, warum ist das so blöd gemacht, click plus, simple to add
new environment variable, ich hab hier keinen plus, seht ihr irgendwo nen plus, oder auskennt
man das, da hat man was gepostet, da, das, der kennt sich aus, das weiß ich, der kennt
sich aus mit sowas, ganz unten, aha, what, what, what, launch settings, what, what, what,
launch settings, wo hab ich launch settings, hier, ich bleib da, ne, was ist das, das ist
ja noch ne unglaublich dämlich gemachte, das war, launch settings changed other properties
in the project, das haben wir doch hier, bin ich doch, properties, das ist most immersive
user experience ever, ich sehe das ist nicht so einfach wie ich gedacht habe, properties
ist ein ordentlich ist nichts drin hier, ach da, moment da drinnen, da ist aber, nee,
das glaube ich nicht, dass ich da irgendwas drin editieren muss, das wäre, das wäre schon
ganz schön merkwürdig, nee, im, im file browser, im writer, was, wo, app settings,
da ist nichts drin, da ist was anderes, ich sehe schon, das ist für das schon unglaublich
schwierig, das einzukriegen, wo, wo könnte das denn sein, unter dependencies, nee dependencies
kann nicht sein, dependencies sind meine libraries, die ich eingebunden habe, chat is, chat ist
übelst gebadet, ja, ach das da vielleicht, ach da, tatsächlich, ok, das ist ja beknackt
gemacht, ey, könnte man das nicht hier drüber ändern, wenn es ja schon da drinnen, da drunter
steht, ok, launch url, slash, application url, 5000, wir brauchen keinen, ok und jetzt,
jetzt gehts, sehr, sehr nice, aber was noch viel schöner wäre, wenn der, launch browser
falls machen wir einfach, weil dann bleibt der browser einfach auf, den klima nachaus
machen wird zu kalt, die url ist jetzt ein doppel slash, ach das werden wir überleben,
ich kanns jetzt auch noch, glaub, ich glaub das liegt aber an meinem browser, so, gut,
wir habens geschafft, nach 50 stunden haben wir jetzt den browser mit dem fenster auf,
wo drin steht, sehr, sehr nice, ok, also leute, wie fangen wir dann am besten an, als erstes,
machen wir mal einen controller, oder wir funktionieren den controller hier um, der
heißt nämlich nicht values controller, sondern den nennen wir um in questions controller,
weil letztendlich gehts ja darum, dass wir fragen aus dem chat in ne liste reinhauen,
so, was brauchen wir, wir brauchen nen get auf alles, was brauchen wir, wir brauchen
nen get auf ne einzelne nachricht, brauchen wir net, nen post zum updaten brauchen wir
net, nen put zum updaten brauchen wir net, nen delete brauchen wir, so, das wars, da
sieht der controller doch schon wieder deutlich übersichtlicher aus, ähm, dann brauchen wir
einen background service, der, der sich zum twitch chat connectet und die chat nachrichten
abfragt, directory services, da machen wir jetzt eine, eine neue klasse, die nennen wir
twitch chat, twitch chat chat service, irgendwie so, da machen wir das rein, was wir den letzten
stream programmiert haben, allerdings wird das ein I hosted service, das schöne daran
ist, dass asp.net core den campel für mich starten, stoppen, starten und stoppen kann
und im hintergrund läuft, mein, den thread muss ich selbst noch aufmachen, warum schreibst
du das in c-sharp, äh, in c-sharp, in c-sharp, alter, das hört sich an wie in irgendeinem
mmo, was spielst du für ne, für ne, ich spiel c-sharp, ähm, weil das meine, mein
lieblings framework eigentlich, die sprache, ist, ist, würd ich sagen, so halbe halbe mit
ruby, ruby ist find ich auch super, aber das dotnet framework gefällt mir gut und also
das gesamtpaket gefällt mir in dotnet eigentlich, macht mir am meisten spaß und ich komm auf
der arbeit sehr selten dazu überhaupt irgendwas in dotnet zu machen, deswegen mach ich hier
im stream ganz gern mal zeug mit dotnet, ok, return task completed, wir tun einfach so
als hätten wir was gestartet, also wir werden jetzt, weil das ist massiv debaten das ding,
dann gehen wir in unseren start up und sagen, service add, hosted service, ja, äh, und
dann twitch chat service, so und da müssen wir jetzt den campel reinmachen vom letzten
mal, welche sprachen brauchst du auf der arbeit, äh, also ich hab relativ viel in ruby, das
ist das zeug von mir, was ich gebastelt hab, äh, das ist zum größten teil in ruby, dann
braucht man natürlich ganz viel bash, also im shell script kommt, um shell scripts kommt
man, kommt man nicht drum rum, ich hab ein kleines ding in rust, ich hab ne automatisch
generierte übersicht über äh, unsere systeme, die ich mal gebastelt hab, die ist in groovy,
ähm, muss ich mal überlegen, also hauptsächlich, tagtäglich braucht man eigentlich hauptsächlich
bash und halt jede menge systemen, wie nennt man das, so, so, automatisierungscode, also
das ist bei uns, bei uns ist das puppet, puppet code mag ich überhaupt nicht, das ist voll
total eklig, ähm, in go, in go hab ich nicht viel gemacht, go hab ich bisschen rumgewurstet,
ähm, rust finde ich ganz nice, rust ist aber ein bisschen gewöhnungsbedürftig mit ihrem
checker, also ich find rust überhaupt nicht komfortabler als.net, rust ist äh, rust
ist eigentlich designed dich zu nerven, dass du es richtig machst, äh, was hältst du
von vim oder emacs als ide für c++, als ide für c++, ähm, emacs vielleicht, vim, vim
tut sich ein bisschen schwer, damit ich weiß es gibt ganz viele leute, die sagen ja, brauche
einfach nur editor, aber ich find so die, die, ähm, advanceden funktionen sind in vim
nur mit sehr viel gefrickel möglich, außerdem ist vim script ganz, ganz schlimm, ähm, also
ich würd als c++ ide, würd ich wenns was kostenloses sein soll, würd ich äh, den cute
creator nehmen, es gibt von jet planes, gibt's auch den sea lion, den hab ich aber nicht
verwendet, ähm, ich verwende meist den cute creator für c++, ja, genau, cute chat, ähm,
und die sharp ide gibt's eigentlich nur zwei sinnvolle, meiner mein nach nur zwei sinnvolle
sachen, das ist ähm, entweder visual studio unter windows, oder meinetwegen auch rider
unter windows, oder rider unter allem anderen als windows, wie gut visual studio vor mac
ist, keine ahnung, hab ich noch nie verwendet, so, äh, question controller, service, da sind
wir stehen geblieben, task completed, so dann machen wir den jetzt mal auf, wo hatte ich
denn das letzte mal hier twitch chat, da hab ich den crempel gespeichert, ähm, da, jetzt
gucken wir uns jetzt mal ab, ähm, also wir brauchen, das ding ist jetzt dazu da, um uns
zum twitch chat zu connecten, das heißt wir brauchen auf jeden fall ein private task,
irgendwie worker oder so, worker, dann brauchen wir einen, das kann ich mir kopieren, äh, channel
name, ups, kann ich mal so ordentlich kopieren hier, ist das möglich, ah, ähm, channel ist
ganz einfach, ach, äh, das ist nämlich mein channel hier, der wubblors, wubblors channel,
äh, host, isc, twitch, nickname, den nickname randomisen wir mal, ähm, kann man hier randomisen
oder auch da unten randomisen ist eigentlich wurscht, ähm, achso, na gut, die kann ich
natürlich nicht konzentrieren, ähm, port machen wir noch, vielleicht brauchen wir doch
mal einen anderen port, port war 6667, ne, genau, gut und da müssen wir das doch hier
oben machen, weil, ähm, read only dürfen wir nicht hier zuweisen, darf man nur im constructor
zuweisen, ähm, nickname, nickname, der big name, nickname is, ähm, justin fandings,
wobei wir das nicht so machen, sondern wir machen nen random generator, der uns den,
den random anteil von der nummer generiert, next und dann von, es muss glaub ich immer
fünfstellig sein, sonst mag er nicht, von 10.000 bis, nein nein nein, justring, so,
und jetzt können wir sagen, mein nick, oh, das geht nicht, alt, alt, feiltasten geht
in rider nicht, kann man bestimmt einschalten, so, und nick is, justin fand plus meine id,
ja, so, da haben wir unser nickname, typo in justin, ich glaube kaum, dass das rider
einschätzen kann, glaubst du, dass homo system auf dem raspberry pi 4 gut läuft oder empfiehlt
es immer auch die sd board, das sd board ist auf jeden fall schneller als der pi 4,
was, steuerung, steuerung plus shift hast du, gut, ich will das eigentlich verschieben
hier, steuerung, shift, ne, mag er nicht, das ist aber nicht so wild, steuerung altfeil,
ne, ach so, ich weiß warum das nicht funktioniert, weil, wahrscheinlich weil man window manager
das crept oder, ne, das ist windows tastefile, also ich, wie gesagt, um noch was zu homo system
zu sagen, ich glaube nicht, dass es gut läuft, auch auf dem 4er nicht, ordentlich, homo system
musste öfters neu starten und wenn du da eine minute auf neu starten warten musst ist
immer nervig, shift altfeil, das haben wir auch schon probiert, oh, poc, shift altfeil,
warum sollte es anders sein, keine ahnung, wahrscheinlich ist es anders, kann man diese
rechtschreibkorrektur abschalten, die geht man nämlich auf den kicks, muss ich mal ausschalten,
spell, bam, geh weg, hat den jetzt nicht interessiert, der respeller, jetzt der respeller aber aus,
der hat keinen bock, muss man das jetzt neu öffnen, jebaitet mich aber heftig das ding,
der respeller ist aus, check, will nix checken mit dem respeller, alter, ich will das nicht
im dictionary hinzufügen, ich will das gar nix spell checken, hab doch schon alles ausgeschaltet,
das sind so advancede funktionen, die mich irgendwie nerven, als enter, ja das ist das
hier, ich hab alles ausgeschaltet aber anscheinend doch nicht, oh, was hab ich jetzt gemacht,
was hab ich jetzt gemacht, die compiler, achso, das ist source code ansicht, okay, das brauch
ich nicht, einfach, ach guck mal jetzt ist es aus, das hat einfach ne weile gedauert
bis es ausgeht, okay, kann ich mitleben, so, wir müssen jetzt, also wir machen jetzt hier,
private void, irgendwie loop, so ein bisschen arduino style, wie das ding heißt, dann machen
wir hier ne neun task, da brauchen wir hier um task worker, blablabla, worker gleich new
task und der task heißt loop, den ich ausführen will, und dann sagen wir worker start, gut
und hier drinnen machen wir jetzt das was wir das letzte mal mit dem twitch chat gebastelt
haben, nämlich erstmal müssen wir uns connecten, also brauchen wir jetzt erstmal nen tcp client,
so wacht, dann müssen wir sagen, dann wollen wir den stream vom tcp client haben, das ist
ein bisschen altertümlich gemacht, so der tcp client, der im.net framework drin ist,
finde ich, da musste viel mit streams hantieren, response hin, dann read, äh ne hier, request
reinschreiben, response lesen, es wäre, man kann oder man könnte es bestimmt einfacher
machen ja, so und jetzt muss ich mit dem stream nehmen und da was reinschreiben, das sorgt
im endeffekt dafür, dass ich das was ich in den stream reinschreibe zum server schicke,
dieses doppel klammer feature muss ich irgendwie auch noch mal ausschalten, kannst du jetzt
nicht in.net quadrei using war stream machen, das kann sein, ich muss mal gucken wo man
überhaupt die, man muss doch bestimmt irgendwie diese sharp version kann man doch bestimmt
irgendwo einstellen, ach ne da hat schon die neueste eingestellt, du musst dich dran gewöhnen
das klammern feature, ja kann sein, aktuell gehts mir eher auf den keks, äh zago net was
meinste denn, kannst du jetzt nicht using war stream gleich machen, das kann man noch
schon länger machen, oder meinste was anderes, ich hab mir letztens in von der build ne webcast
angeguckt in die sharp 8 features, viel hängen geblieben ist nicht, ne ich glaub das geht
schon länger mit diesem war stream gleich, ich glaub das geht schon länger, ohne einklammern
ach so, du meinst kann man sowas hier, oder hier noch die klammern drumherum, 998 assing
stream using, aha, ja richtig guck mal anscheinend geht das, anscheinend geht das jetzt, aber
er zeigt immer noch nen fehler an, warum macht er das, ja gut das machen wir doch eigentlich
so oder, seht ihr jetzt nicht viel unterschied zu dem was wir machen, vielleicht muss ich
mit dem stream was machen, ach ich bin ja auch ein noob, guck mal ich hab die klammer
kaputt gemacht, lol, ja stimmt, stimmt das soll jetzt funktionieren, das ist viel schöner
ohne einklammern, weil man hat oftmals, man siehts ja hier, du machst nen using, und da
drin ne schleife, du bist schon ne halbe seite nach rechts, das ist, das ist, das ist ganz
nice, ok also was brauchen wir da jetzt, das müssen wir da reinschreiben, copy und paste
ist on point heute, coding, gut ja bald, user, host, nick, ja nickname muss man auch reinschreiben,
die nickname haben wir schon reingeschrieben, den constructor sollten wir auch oben lassen
und nicht irgendwie so komisch da unten hinwursten, justin fanblabla connect, jetzt funktioniert
das, so und als nächstes haben wir dann gesagt, wir brauchen einen streamreader, das ist ja,
das ist wirklich cool, das können wir jetzt auch wieder so machen, das ist ein feature,
das finde ich jetzt schon mal ganz nice, da spart man sich nämlich eindrückungstiefe
und hat nicht, und ist nicht auf der hälfte der seite nur weil man ein paar usings hat,
das ist wirklich cool, gefällt mir jetzt schon, so streamreader, dann readen wir den stream
und zwar bis, reader end of stream, bis es, bis es, also solange, solange es nicht end
of stream ist und im prinzip können wir uns dann den kram eigentlich copy und pasten vom
letzten mal, den wir gemacht haben, link, achso na gut, das haben wir jetzt nicht, aber auch
noch, pong, twitch, user index message, ja gut, jetzt brauchen wir auf jeden fall noch
einen typ für die chat messages, ich mach den mal kurz hier oben rein zum ausprobieren,
class, chat, message, so und der kriegt eine id, weil vielleicht machen wir da noch eine
sqlite datenbank oder so hin, mal schauen, das ist ja mit asp.net übelst simple, einfach
entity framework plus sqlite einbinden und zwei sachen eintragen, so dann brauchen wir
den user, der das ganze von sich gegeben hat, dann brauchen wir, aber man kann vorwärts
und rückwärts springen, das ist cool, dann brauchen wir den text und dann brauchen wir
am schluss noch, merken wir uns nämlich noch die zeit, wann der user das gepostet hat,
das sieht auch schon mal ganz sinnvoll aus, so und nun lassen wir den lesen und geben mal
hier aus, wenn eine neue textnachricht kommt, oh hat er gerade irgendwann halt abgekackt,
test, macht er nicht, warum nicht, ich glaube der hat gar keine probleme, eigentlich erwarte,
dass die chatmessage hier jetzt kommt oder aber nicht, kann das sein, dass wir das nicht
richtig starten, warte mal, blablabla loop start und habe ich sie registriert, dann setzen
wir mal einen breakpoint da rein, haben wir einen breakpoint irgendwie hier oben hin, breakpoint
da unten rein, dann gucken wir mal, was passiert, das juckt ihn überhaupt nicht, der geht überhaupt
nicht rein, ich habe irgendwo was vergessen zu starten, ok wir machen das genauso wie
das wie der zagor sagt, ein lieblings debug ausgabe, gucken wir mal ob er überhaupt startet,
er geht doch, macht er doch, ok starten tut er den krempelt schon mal, ich glaube das
funktioniert hier nicht, moment, ich bin verwirrt, was hat er denn für schmerzen, warum startet
der mal task nicht, ich bin hochgradig verwirrt, ja das plockt, das wird auch an der stelle
hängen wahrscheinlich, ja da hast du recht, aber warum plockt das, isc twitch tv, isc
twitch tv, 6667 port, ach o mann leude, richtig dumm ey, guck mal, lull, so jetzt mal die message
ausgeben, test, geht nicht, doch bam, da ist es, nice, funktioniert, funktioniert, hallo
jorik, moron, da ist er wieder am start ja, simpelfehler, ja so einfach, die meisten sachen
sind einfach, ok das funktioniert, jetzt machen wir eine chatmessage daraus und zwar kriegt
die chatmessage jetzt eine text, nämlich das da, kriegt ein user, nämlich das da und
kriegt eine time, nämlich jetzt, so und jetzt müssen wir den grad natürlich irgendwo
hinspeichern, das heißt wir brauchen wahrscheinlich, entweder nehmen wir eine in memory database,
das ist wahrscheinlich das einfachste, exceptions printen, jetzt aber echt etwa anstatt, wir
programmieren so gut, dass wir keine exceptions haben, ok, könntest du bestimmt die neuen
S-sync innumerable für yield dafür, ja ich erinnere mich, dass ich da irgendwas im stream
gesehen hab, dass man, dass der jetzt S-sync, S-sync, wait for each oder irgendwie sowas
kann man jetzt machen, wait for each, C-sharp 8, S-sync stream through C-sharp 8, das muss
man aber selbst, das muss man aber irgendwie selbst basteln, oder, das hab ich noch nie
verwendet, keine Ahnung wie das funktioniert, ich hab keine Ahnung, also wenn da einer einen
guten forschner hat, ich will mir jetzt nicht drei seiten tutorials durchlesen, das kann
man als ersatz für das hier verwenden irgendwie, das hab ich im stream gesehen, der hat irgendwie
gesagt, quasi a wait for each und das war im prinzip genau das, der hatte, das war dann
unter der haube irgendwie eine endlosschleife halt so lang wie der stream offen ist, ich
weiß jetzt aber nicht wie es genau funktioniert und ich will jetzt nicht ewig tutorials lesen,
das ist eine sache wo man sich dran gewöhnen muss, chat message, wir machen mal ne sqlite
datenbank, dann haben wir theoretisch auch die möglichkeit, fragen zwischen den streams
zu behalten, machen wir das mal so, dazu muss ich allerdings erstmal in diesem riesengroßen
fenster hier unten drinnen, nicht das da installieren, das ist gbait, das ist hyper gbait, entity
framework, was wir wollen ist microsoft entity, ne, microsoft entity framework core wollen
wir haben, mysql, ne sqlite, hab ich mal sql gesagt, nein nicht mysql, sqlite, big brain,
ja, was hast du vor zu programmieren, wir haben letztes mal im stream schon nen tool gebastelt
was ich einloggt im twitch chat von meinem channel und alle sachen mitloggt die adwupploss
am anfang haben und dass ich keine fragen mehr übersehe bzw ne history habe, was wie
wo wann gefragt wurde und jetzt basteln wir ein ordentliches, ein minimales webfrontend
dazu wo ich dann auch sachen abhaken kann, so nach dem motto hier der flying meat hat
gefragt was hast du vor zu programmieren, dann hab ich das beantwortet, dann klick ich
es an und dann verschwindet es, so, man sieht ja auch hier unten schon, ne die chatnachrichten
mitlesen funktioniert halbwegs, so und jetzt müssen wir ihm sagen, ach ich kann den halt
schnell, adddb-kontext, genau adddb-kontext und jetzt muss ich erstmal überlegen wie
wir das machen, dann machen wir einen eigenen ordner für, nämlich einen ordner data oder
so und da machen wir eine klasse, nämlich ein appdb-kontext, der kriegt nicht allzu
viel, der kriegt einfach nur ne collection, db-set, der kriegt einfach nur ne collection
von unseren chatmessages, db-set, chatmessages, messages, fertig, so und jetzt kann ich das
nicht mehr, oh fuck man muss jetzt noch irgendwas machen mit nem db-kontext, dass er den laden
kann, guck mal was der für ne Fehler wirft, wenn ichs versuche zu starten, irgendwas musste
man noch machen, und man musste ihm doch noch sagen, dass es sqlite, ich spick das mal ab,
ich spick das mal ab von dem hier, von meinem bilder einplant board, wir kochen uns das
jetzt mal ab, wo ist denn hier startup, blablabla, blablabla, add, blablabla, db-kontext, options,
ja das da wollen wir haben, copy paste, beste, ah, iza f, so das heißt jetzt alles nicht
wie immer, messages.db, fertig, mehr müssen wir nicht machen, so jetzt haben wir ne sqlite
datenbank, jetzt müssen wir dem natürlich noch sagen, dass er die, wir machens jetzt
erstmal uns total einfach, wir sagen wir löschen die datenbank jedes mal nach nem neustart,
was natürlich nicht den uns weg der sachen ist, weil wenn wir das machen, könnten wir
einfach ne list, einfach im arbeitsspeichern den kram halten, was erreichst du mit dem
db-kontext, das muss man verwenden, das ist quasi die klasse, die, dass die asp.net core
haben möchte für alle möglichen injection-geschichten, wenn du die in den controller verwenden willst
oder wenn du sachenpersistent speichern willst, das muss alles in nem db-kontext drin sein,
sonst mag er das halt einfach nicht, sonst muss man was von hand machen, was irgendwie
sinnlos ist, wenn man das eh schon verwendet, so, wir machen das jetzt richtig noobstyle,
wir sagen database, deleted und dann sagen wir create, das ist natürlich nicht den uns
weg der sache, weil dann könnten wir uns auch zur speichern der datenbank sparen, das ist
komplett sinnlos, wenn ich die jedes mal lösche und wieder neu anlege, dann kann ich einfach
ne liste im speicher halten und gut ist, aber vielleicht wollen wir das ein oder andere
persistent speichern.
Ich hab schon so oft gesagt, ne, ich hab schon so oft in streams gesagt, leute das gucken
wir uns nix im stream an und es ist nie dazu gekommen, das wird jetzt gar nicht mehr passieren,
weil das geht nur weg, wenn ichs abhake, dann vergessen wir nix mehr, wieso machst du das
nicht für textdateien, das ist mir zu einfach, zu noobstyle, textdateien, da ist alles mit
dependency injection, ja, wisst ihr hier, ich hab's hier oben registriert, jetzt kann
ich hier unten injecten, ok und jetzt müssen wir in unsere datenbank die chatmessage reinschreiben,
das ist leider nicht ganz so einfach, ich mach mal hier weg, dass man ein bisschen mehr
vom editor sieht, das ist leider nicht ganz so einfach, weil das hier ist quasi ein eigener
thread, der im hintergrund läuft und der hat gar keinen zugriff auf meinen datenbank-kontext
und ich kann auch nicht einfach so sagen, abdb-kontext, ich kann das auch nicht so einfach injecten,
weil die lebensdauer unterschiedlich ist, ist im prinzip recht logisch, man kann, der
riecht das jetzt am besten, also was man hier hinzufügt, was der kennt für klassen, der
kennt jetzt, also ich kann jetzt hier sagen, ok, es gibt jetzt hier ne twitch-chatservice,
es gibt nen abdb-kontext und die haben unterschiedliche lebenszeiten, der twitch-chatservice, das
ist ein hintergrundservice, der lebt so lange wie die ganze anwendung lebt, der db-kontext
lebt nur so lange wie ein request lebt, ich kann auch den abdb-kontext in singleton, das
geht genau, ja das funktioniert auch, allerdings ist wichtig, sich hier anzugen, dass die lebenszeiten
unterschiedlich sind und ich kann logischerweise keinen service oder keine, keine klasse, die
lebenszeit hat pro request injecten in ne klasse, die lifetime, also application lifetime lebenszeit
hat, weil das passt irgendwie nicht, weil das ist eigentlich viel größer als das andere,
umgedreht gehts natürlich, hoffentlich hat es jetzt halbwegs verstanden, was ich da versucht
hab von mir zu geben, deswegen muss ich hier drinnen jetzt sagen, ich will einen neuen
lifetime scope anlegen und da drinnen kann ich dann den abdb-kontext verwenden, microsoft
hat sich gedacht, so muss das sein und das hat man irgendwie gemacht, ich kann mir das
immer nicht merken, irgendwas mit scope hieß das, scope logger, nee das war ein interface,
irgendwas mit scope heißt der kram, service scope, service 2 war so was anderes, service
scope, scope, service scope factory war es, das liest sich fast schon java mäßig oder,
i service scope, wobei eigentlich müsste das heißen, i scoped hdx oder sowas, 720,
420, scope, factory, weiß jemand wie ich den, weiß das jemand auswendig wie ich bei
dem chatbrains zeug den style umstellen kann, ich will nämlich nicht den unterstrich kram
verwenden, style, oh coding style, die sharp coding style, intense style, tapster, ok,
oh ja das schauen wir gleich viel schöner ab, wie kann ich hier einstellen, nested statements,
ich will eigentlich nur einstellen, was da für properties verwendet beim automatischen,
boah, boah das ist mir zu komplizierter, schreibe ich lieber von hand, instant member, use
this qualif, ich will dem sagen, dass ich nicht diese underscore geschichte verwenden
will, sondern this, bis ich das gecheckt habe, wo ich finde, habe ich wahrscheinlich das
Ding fertig gebastelt, so wie formatiert man jetzt neu, eigentlich habe ich ihm doch gesagt,
einrückung will ich, wie formatiert man neu, ah, das ist sehr schön, aber viel besser,
ist voll die verschwendung irgendwie, 4, 4 Leerzeichen einrückung, so, wo ist hier mein
konstruktor, da, high service scope, da man, quickscoped, so und jetzt kann ich ihm hier
drinne sagen, ich gewöhne mich hier immer mehr an diese neue schreibweise ohne die klammern
drum herum, das finde ich nice, so, scope, jetzt kann man sagen, das ist ein bisschen
doppelt gemoppelt alles, aber man muss es halt so machen, weil microsoft sagt, das geht
so, so und jetzt kann ich nämlich aus meinem hintergrundservice in die datenbank schreiben,
was eigentlich ganz nice ist, wir machen da mal eine eigene, eine eigene methode für
irgendwie private void, save, save to db oder sowas, chat message und da drinne machen wir
jetzt den kram, scope, oh, guck, ey meine tastatur, das ist so fail, das ist so fail,
die hat immer doppelte anschläge, warum ist da ein using, was bewirkt das, also das using
ist die kurzschreibweise davon und was das using bewirkt, kann uns auch wieder, ich kann
auch wieder vier spaces machen, und was das using bewirkt ist folgendes, ich formatiere
mal neu, kann man sich jetzt überschreiten, was schöner ist, wo war ich denn jetzt, using,
ja was macht der da, das using sorgt dafür, dass am ende von diesen klammern der scope
disposed wird, ja genau automatisches disposed, so siehts aus und das hier ist die kurzschreibweise
mit zschreib 8, das ist eigentlich ganz gut, das ist auch noch nicht raus, das kommt erst
im september oder so, also das ist die previewversion, die wir gerade haben, scope, was, get, die
haben wir doch schon gemacht, so und jetzt will ich einfach mal im kontext add die message
hier oben, soll in die datenbank geschrieben werden, so, danach save, bam, also dieses
klammer feature, save, jetzt kann ich das hier nämlich drinnen, äh, moment, irgendwie
hat er gerade die formatierung zerrissen, also, jetzt mal gucken wo ich hin muss, da, genau,
jetzt kann ich die chatmessage in die datenbank schreiben lassen und danach gucken wir mal
klar, ob es auf der webseite theoretisch angezeigt wird, das ist oftmals so, wenn man was anfängt,
man muss erstmal gucken, dass die backendgeschichten halbwegs funktionieren, bevor man auf der
seite was machen kann, die seite sieht jetzt rechts kacke aus, ne, save, db, m, so, jetzt
speichert er die chatnachrichten in der datenbank, machen wir so ein bisschen, so eine mini-debug-ausgabe
dazwischen, so, ähm, ich schreib einfach nur save, ich muss die nachricht gar nicht sehen,
Hauptsache, dass ich weiß, wird gespeichert, so, jetzt speichert er den kram in, jetzt
abgekackt, wow, alle für schmerzen, wtf, ai, ai, ai, ai, ok, was haben wir für probleme,
achja, stimmt, das mussten wir uns auch noch abgucken, weil einfach so db-kontext anlegen
ging ja nicht, microsoft hat sich gedacht, das wäre zu einfach, man muss da irgendwie
noch diesen blödsinn hier reinschreiben, dann funktioniert's, frag mich nicht warum,
aber das muss so sein, äh, achso, vielleicht soll ich das auch in die klasse kopieren,
dann geht's nämlich, weil microsoft sagt, das muss so sein, wenn man, ein agilen developer,
ein agilen development-stream mit user-stories und sprints, ja, man kann's auch echt übertreiben,
da brauchen wir erstmal einen kernbaren board brauchen wir noch, oder, einen kernbaren board
und unten ein chira, jetzt sag ich auch schon chira, chira heißt's, chira und ein kernbaren
board, dann sind wir so richtig agil, dann sind wir richtig hier, agile, ich bepege agile
sind wir dann, ok, speichert die chatnachrichten zwischendurch, gut, funst, chatnachrichten
werden in der datenbank gespeichert, äh, jetzt können wir die website machen, chatnachrichten
kommen in die datenbank, wir antworten auch mit nem ping, dass es nicht abkackt, immer
noch besser als es ist, chira, chira, chira ist das schlimmste, die typen, das sind, das
sind, die gehen wir auch auf den sack, chira, es gibt doch leute, die git jit aussprechen,
ja, jit, jit, ja, hab ich auch schon gehört, jit, so wie jit, genau, jit, jit, so fehl,
oder view, als, als, als, fü, fü hab ich noch nicht gehört, ja, es gibt ja auch die
unterschiede, ob das, ob das china oder china ist, gibt's ja auch noch, ok, also, in unserem
questions controller, müssen wir uns jetzt unseren db-context-injectoren, warte, was
macht der da, ähm, unsere db-context-injectoren, und als antwort, äh, moment leute, ich mach
das mal anders, ich mach mal aus meinem start-up raus, dass der die datenbank löscht, weil
dann sind die das nächste mal einfach, die chatt-nachrichten von euch das nächste mal
einfach da, ähm, und jetzt returnen wir hier einfach mal alle, alle messages, bam, allerdings
nicht zwingen, sondern chatt-messages, das ist ein super simpler typ, den kann der einfach
in jason serialisieren, ohne dass ich da irgendwie großartig magic machen muss bei,
so, gut, und jetzt gehen wir an unser html-gedöns, müssen wir uns eine runde view.js, view.js
einbinden, weil view.js beste, kann sogar html und css-noobs wie ich was damit machen,
ähm, question-board, pepega-board, so, äh, haben wir view eingebunden, dann machen wir
jetzt ein div, id, id-app, gucken wir, ob ich das aus dem kopf zusammenkrieg, ähm,
ich krieg's nicht zusammen, ich muss nachgucken, ich muss nachgucken, ich kann mir das immer
nicht merken, wobei, wir sind bescheuert, warum guck ich nach, hier machen wir's doch schon,
das ist hier das, das, das image-overlay-ding, new-view-el-app-data, genau, das brauchen wir,
zack, zack, zack, äh, muss man auch noch schließen, so, data, ähm, questions, leeres array, ähm,
wir machen mal irgendwo test rein, so, jetzt müssen wir nämlich ne schleife in view machen,
das heißt, wir brauchen hier eine unordert-list, da drinnen machen wir list-elements, dann
sagen wir v-vor, kann ich mir auch nicht merken, das da, sagen wir dann, ich mein, wozu, wozu
auch merken, wenn man das nicht einfach copy-paste-en kann, vor-question-in-questions, so, und jetzt
sollte da blub blub blub stehen auf der Seite, ja, gut, ähm, und nun müssten wir abrufen
die chat-messages, die von euch in den chat geschrieben wurden, und das machen wir folgendermaßen,
wir sagen ihm, wenn diese, wenn die Seite quasi gestartet wird, zum ersten mal, dann,
created, was hat er denn für Schmerzen, definition, ach, da muss man die javascript-version erst
umstellen, javascript-version, wo kann man das umstellen, version, javascript, ah, da
kann man so, sehr, sehr nice, sehr, sehr nice, gut, ähm, jetzt haben wir das erstellt,
jetzt müssen wir ihm sagen, wir wollen abrufen, und zwar von lpi-questions, da machen wir,
da machen wir eine eigene, eine eigene Methode draus, die das macht, die nennen wir, ähm,
fetch-questions, und, ähm, hat er denn hier wieder für Schmerzen eigentlich, was vergessen,
glaube ich, ja, die machen wir async, weil, doch, ich habe irgendwas vergessen, achso,
ha, das darf ich nicht machen, das doppelt muss das sein, äh, async fetch-questions,
also jetzt können wir sagen, await, fetch, wir wollen das da machen, wir wollen die questions,
also hier das, wo der Controller jetzt dranhört, ap-slash-questions, und dann index, aufrufen
index, das ist einfach alle Nachrichten jetzt als chancen zurückgeben, ähm, wir fetchen
alle questions, await, result, ähm, und dann sagen wir hier, questionsisawaitresult.json,
ich hoffe, das funktioniert jetzt, so, gucken wir uns mal hier an, ob er das macht, ne,
sofort, achso, ne, das macht er nicht, ich muss ihm erstmal sagen, dass er das ausführen
soll, äh, this-fetch-questions, da muss ich wahrscheinlich nochmal das back-end neu starten,
res-result is not defined, da hätte er selbst draufkommen, ey, guck mal Leute, das sind
eure Chat-Nachrichten, was sind eure Chat-Nachrichten, sehr, sehr nice, eine nice Chat-Nachricht,
jetzt können wir noch einstellen, und ab wann ist es eine question, einfach nicht, es ist
eine question, wenn es anfängt mit ad-wupplors, aktuell ist es aber zum testen noch jede Chat-Message,
aktuell ist es noch jede Chat-Message, die stellen wir dann nachher um, dass die Sache
mit ad-wupplors anfangen muss, aber zum testen ist es viel einfacher, wenn wir das einfach
mit jeder Chat-Nachricht machen, so, jetzt müssen wir ihm noch sagen, dass er das doch
mal bitteschön, falls der eine eine schönere Variante kennt, das mit view zu machen, sag
ich bescheiden, mir fällt als nichts anderes ein, der soll das hier ausführen, alle Sekunde,
das ist so die easy-mode, wir könnten das mit callbacks machen vom Server, wir könnten
irgendwie SignalR oder sowas verwenden, um zu sagen, wenn was, oder Websockets oder sowas,
wenn was neues da ist, aber hey, für Chat-Nachrichten reicht es einfach, wenn man einmal in der
Sekunde nachguckt, ob was da ist, das genug, das reicht, so, und wenn ihr jetzt was schreibt,
könnte ich das eigentlich updaten hier drinnen, wenn ich es richtig gemacht habe, ja ne, passt,
dachte du bist beruflich eher in der Server-Administration unterwegs, ja prinzipiell schon, zumindest
das, was ich gelernt habe, allerdings mache ich schon seit Jahren eigentlich kaum noch
Server-Administrationen, 144-Hertz-Chat, also muss ich es alle 16 Millisekunden updaten,
ne 144-Hertz war schneller, oder, ja, alle 6 Millisekunden, 7 Millisekunden updaten, Sekunde
ist zu langsam, also Developer, nein, ich bin so, ich bin so die, eigentlich ist das,
was ich mache, so DevOps in, so der, Alter, Sebaro, was geht ab, ist eigentlich genau
das, was man so unter DevOps versteht, ich mache den, ich bin quasi so an der Schnittstelle
zwischen dort, wo Source-Code verwaltet wird und da, wo Server-Administriert wird, inklusive
ein bisschen Release-Management, also genau so was, was man sich eigentlich bei DevOps
vorstellt, ihr könnt Ausrufezeichen Beruf machen im Chat, da hat das Sebaro ein Kommando
eingerichtet, wo ich mal irgendwie versucht habe zu erklären, was ich mache, ne 20 Sekunden
oder so geht das, das stimmt nicht, dass man 25 FPS sehen kann, du kannst nur 12 FPS sehen,
so, ok, also die Chat-Nachrichten, ich meine, es sieht hässlich aus, ja, wie die Nacht,
aber das können wir jetzt ja noch schöner machen, als erstes würde ich sagen, sorgen
wir mal dafür, dass wir immer nach unten scrollen, weil das ist doof, wenn man von
der Hand scrollen muss, wie macht man das, ich prüfe einmal pro Sekunde hier, ok, ok,
kann man das mit dem, wie macht man das mit dem scrollen jetzt gescheit, gibt es hier
so was, Windows, Scroll, Scroll, Scroll 2, Scroll Y, Scroll 5, Scroll 2, Scroll 2, ok,
X von 0 zu, das ist wahrscheinlich die Noob-Style-Variante, aber ich hoffe mal, es funktioniert, bam,
funktioniert, ha, jetzt schreckt, funktioniert, ja, was Skript-Logik, ob das ordentlich funktioniert,
können wir mal ausprobieren, indem wir uns mal zu einem Twitch-Chat connecten, der ein
bisschen mehr Action im Chat hat als bei mir, so irgendwie, warte mal, ist der noch on?
Ok, der ist noch on, dann nehmen wir jetzt mal den Chat von XQC, nehmen wir jetzt mal,
dann wird der nämlich voll gespammt ohne Ende, jetzt bin ich ja mal gespannt, was jetzt
abgeht, das wird voll gespammt, ok, mein scrollen kommt nicht mehr hinterher, das scrollt
zu langsam, ach, ich weiß, warum das nicht funktioniert richtig mit dem scrollen, das
ist, weil wir sagen hier, quasi an der Stelle, an der Stelle sagen wir scrollen, ich mach
mal wieder in meinen Chat, ich wechsle den Chat mal wieder, da ist ein bisschen viel
los, komm, wir gucken mal, wie groß das werden würde hier, das können wir auch, das ist
einfach nur Text, hier, weg, Chat, der ist ein Gespammer, Alter, ok, ich mach mal wieder
in meinen Chat, dazu kann ich nur sagen, ich find das Bild grade nicht, ok, warum ein scrollen
nicht richtig funktioniert, liegt glaube ich da dran, wir sagen ihm hier, direkt nachdem
er die neuen Ergebnisse abgerufen hat, scroll ganz runter, die Sache ist die, das Rendern
der neuen Sachen ist noch gar nicht fertig, das heißt, er scrollt runter und rendert
dann erst die neuen Elemente, das heißt, wir müssen ihm sagen, nachdem er gerendert
hat, soll man das machen, und dann gab es bei Vue irgendwie was in der Richtung von
next tick oder so hieß das, das führt er dann immer einmalig aus, nachdem er das nächste
Mal gerendert hat, also können wir ihm einfach sagen, zack, next tick, dann soll er dann
scrollen, wow, und dann soll er scrollen, ich glaub, das ist besser, weil jetzt funktioniert
das, also jetzt sollte das funktionieren, was ist denn hier übrigens die schönere Variante,
es hat doch irgendwie einer vorhin was geschrieben, irgendwie was, document body oder so, hier
kommen jetzt schon die SQL Injection Tests ey, ich seh es schon ey, Omega Low,
document body offset, ok, ah, scheint zu funktionieren, ja, scrollt er, ok, der scrollt jetzt immer
runter jede Sekunde, das ist natürlich auch doof, der soll nur runter scrollen, wenn sich
was geändert hat, und wie krieg ich mit, ob sich was geändert hat, hier die ganzen,
ey, ey, ey, Leute, questions mit result vergleichen, ich hab endlich gesagt, keine Ahnung, wie man
ordentlich Arrays mit JSON Objekten drin in JavaScript vergleicht, ja, die ID, stimmt,
klar, die ID könnten wir vergleichen, wir könnten, das ist ganz easy, wie wir das machen,
das ist, das ist, das ist, und zwar, wir nehmen einfach, ähm, übrigens, das, da können wir
Kunst machen, da mögen wir JavaScript, Leute, genau, genau, das, genau, das hatte ich vor,
choosing my name plus ein bisschen anders, ich wollte das letzte Element nehmen, es könnte
ja auch sein, dass ich unglücklich was lösche, und es kommt was Neues dabei, ich wollte das
letzte Element nehmen, und gucken, ob die ID gleich ist, ähm, also sowas hier irgendwie,
last, ist irgendwie, last ist irgendwie, questions, questions, ähm, ach so, was ist ein last,
element in JavaScript, können die sowas, kann JavaScript sowas, last, last ist natürlich
gut, wenn es das gibt, last, gucken wir mal, ob das funktioniert, ähm, console read, ähm,
nicht console, ähm, console, log, last, mal schauen, ob das funktioniert, äh, ok,
was passiert bei minus eins, undefined, aber längst minus eins ist irgendwie sehr hässlich,
ach das, moment, das ist doch ein array, oder, kein array, kein array, das ist ein array,
natürlich ist das, warum, warum geht das mit last nicht, warum geht das mit last nicht,
das ist eigentlich, oh, der browser ist abgekackt, das war zu viel, das war zu viel, ja, question
slice, ok, aber warum geht das denn nicht, das, das ist doch, das müsste doch eigentlich
funktionieren, ach so, ich musste den browser vielleicht mal selbst starten, äh, ok, ok,
5000, ne, ach so, last gibt es gar nicht, ach so, aber dann finde ich das mit dem slice
eigentlich am hübschesten noch, äh, irgendwas questions, slice, minus eins, ok, oder auch
nicht, ja doch, funktioniert, da ist halt ein object drinnen, gut, ähm, das ist last,
so, und jetzt haben wir hier Punkt id, und jetzt sollten wir eigentlich die id vom letzten,
warum nicht, ach, das ist jetzt ein array, ach, ist der da sliced, ach so, ist ja logisch,
der teilt das im zweifelsfall an einem gewissen index, das array, ja, guck, kein Wunder, dass
das nicht funktioniert, ne, dann ist das andere doch schöner, naja, wieso, warte mal, zu
endes, äh, 8001 ist das letzte, das heißt, wenn sich das, wenn sich das geändert hat,
dann machen wir das doch so, bin zwar blöd, dass es da nichts gibt, aber doch, questions,
questions, length, minus eins, einetwegen, ok, so, ach so, jetzt müssen wir das wegmachen,
und jetzt kann ich sagen, all die, ja, ok, wenn, rutsch das ganze nochmal, irgendwie last,
old, äh, last, new, so, und das heißt, wenn, nur wenn es eine neue Nachricht gibt, dann
wird gescrollt, if, und wir können auch einfach sagen, äh, nur wenn new größer ist als old,
machen wir das hier, ansonsten machen wir das nicht, das heißt, jetzt kann ich scrollen,
das passiert nichts, und erst, wenn einer eine Nachricht schreibt, gehts nach unten,
weiß nicht, warte ich mal drauf, bis einer eine Nachricht schreibt, und gucken, ob es
dann runter scrollt, ne, machts nicht, warum nicht?
ach so, ja klar, stimmt, kann ja nicht funktionieren,
jetzt wirds funktionieren, ach, noch mal einer was schreiben, blitz, ja, jetzt funktioniert,
ok, so, jetzt müssen wir das ganze noch hübscher machen, und zwar, wir wollen hier als erstes,
die ID interessiert mich nicht, was mich interessiert ist der User, der User, so, wir brauchen
ein bisschen CSS, und zwar brauchen wir hier style, style von den list elements, von li,
das style soll nach möglichkeit list, list style, non, das kann ich mir mal, das kann
ich mir mal nicht merken, ja, genau, list style non, wie kriege ich denn hier neben
den Kram weg, das Projekt veröffentlicht, ja, das ist so simpel und übersichtlich, das
veröffentlicht auf jeden Fall, da muss ich irgendwie sagen, ul margin 0 oder so, ne,
ich denke 0, aha, da mags langsam, wird er hier richtig der CSS pro, nicht der CSGO pro,
sondern CSS pro, oh mann bro, oh, hier sieht man alle, die Chatnachrichten geschrieben
haben, so, User wollen wir haben, dann wollen wir haben, da haben wir hier einen Doppelpunkt
dahinter, User, da wollen wir den eigentlichen Text haben, ja, sehr schön, so, und jetzt
wollen wir noch ein bisschen mehr Abstand dazwischen haben, hier padding oder margin,
margin ist komplett außen und padding ist in, ich werde mir den Unterschied nie merken
können, padding bottom 10 pixel, so und jetzt müssen wir das natürlich ein bisschen schöner
machen von der Schriftart, das sieht ja nämlich super hässlich aus, das gefällt mir überhaupt
nicht, das
da will ich machen, das da will ich machen, genau, das da will ich machen, allerdings
nicht rot, sondern irgendwie grau oder sowas, dann ist jetzt, ach ne, nicht 2, man muss
sagen wie odd, aha, da kann man es nämlich viel besser erkennen, gray, dark gray, light
gray, light gray, das ist doch schon mal ganz hübsch, so und da sehen wir auch, dass wir
kein padding wollen, sondern wahrscheinlich margin, ja, margin wollen wir haben, so, dann
machen wir jetzt das ganze noch ein bisschen größer, font size 20, ah, und font family
oh my god, ach ja, ne, was nimmt man, was nimmt man da so, schriftgröße bisschen groß ist
das ganze, roboto, ja, roboto haben wir bei dem anderen, haben wir ja hier auch, wir nehmen
wieder roboto, genau, roboto hatten wir hier auch, ja, dann nehmen wir auch gleich die
material icons, die werden wir nämlich auch noch brauchen, roboto, klingt wie übelst
japanisch, so, alter, jetzt ist ja mal gut leute, regt euch, wie ihr versucht habt, wie
verrückt, irgendwas zu injecten, ey, ich weiß schon, warum ich es immer in a vm laufen lassen
werde, hat better twitch tv emotes anzeigen, oh, das wird schwierig, ok, muss ich verstehen,
stehen geblieben, roboto wollten wir haben, roboto, ja, oh, das sieht doch viel schicker
aus jetzt, oder, das ist doch schön, china, china farmer, emojis kann er schonmal, aber
kann er ja auch nur, weil es der browser kann, äh, konnte man nicht so sagen, konnte man
nicht irgendwie so default sagen, wie sagt man, wie sagt man eben default, wenn er das
nicht findet, ging das nicht so, ah, mit comma trennen, ah ja gut, wenn er das eines nicht
findet, kommt das an, ok, ppgar, china, so, das funktioniert, ok, ok, ok, ok, ok, ok,
das funktioniert, ja, so, ach ja, genau, was wir jetzt noch machen müssen, das, das,
das, das, das wichtigste ist, ja, eigentlich, dass ich die dinger löschen kann, ne, muss
die dinger löschen können, das heißt, alter, jetzt lagts, was geht ab, äh, glaub, ich
glaub, der browser ist, ist am ende hier mit, äh, mit ram, kann das sein, hajeje, er spackt
aber ganz schön rum, ok, aber was braucht denn hier bitteschön so viel ram, läuft
doch nix, na gut, wir haben da jetzt auch irgendwie 50.000 chatnachrichten drin oder so, weil
man mal kurz bei x2c drin war, im chat, ppgar board, da ist das ppgar board, so, ok, jetzt
ist das wichtig, wir müssen das machen, dass man löschen kann, kann das sein, dass das
runterscrollen nicht richtig funktioniert, doch, wird, dark mode, ah, ne, das ist ok,
so, ähm, der merkt sich auch, woran markiert, woran markiert war, das finde ich sehr schick,
weil da kann ich mir das merken, so nach dem motto, äh, wir wollten hier irgendwas beantworten
und dann kann ich, kann ich gespeichert markiert lassen, gut, ähm, so, und jetzt, jetzt kommt
das interessante, jetzt muss ich das löschen, also sprich, wenn ich jetzt da drauf klicke,
will ich, dass das weggeht, wie machen wir das jetzt am besten, wir machen hier einmal
eine neue Methode und zwar, delete question, delete question, die wird, ups, die wird ziemlich
simpel aussehen, ähm, die wird ziemlich simpel aussehen und zwar, ne, fetch, auf ap questions,
id, ähm, hier muss das object rein, question, id, kann mir jemand vielleicht kurz pränen,
was genau das wird und wie eine Frage erkannt werden soll, die Frage wird ganz einfach
erkannt, indem sie mit Adwoblos anfängt, wenn die Frage an mich gerichtet ist oder
halt, theoretisch kann man es auch customisen, halt, an denjenigen, der es haben will, dann
wird sie gelockt und kommt in die Liste rein, aktuell lock ich noch alles, weil es zum testen
einfacher ist, wait, ist halt, ah, so, und jetzt müssen wir nur noch dafür sicherstellen,
dass, dass auch gelöscht wird, auf dem Endpunkt und wir machen noch was, wir löschen es und
danach rufen wir es direkt, direkt neu ab, dass sich die Seite aktualisiert, wenn es
weg ist, so, und jetzt, ähm, machen wir hier noch nen, noch nen Emoji Mülleimer oder
irgendwie sowas dahinter, ups, er möge starten, drum will nicht starten, ok, was auch immer,
starten wir halt noch nen Firefox, ach gut, äh, get Emoji, da gibt es doch bestimmt nen
schönen Mülleimer, wobei wir brauchen keinen Emoji Mülleimer, wir nehmen, wir haben doch,
ähm, Material Design Icons eingebunden, dann machen wir nen Button dahinten dran, da machen
wir nen Button, class, gleich, Material, muss ich abgucken aus dem alten, ja, da, ähm,
da müssen wir jetzt aber mal suchen nach Material, Material Design Icons, was es da gibt für
nen Mülleimer, in dem Browser sind alle Buggy, na, das liegt glaub ich an, ein bisschen wenig
RAM in der VM, äh, Trash, das ist ja alles in der VM hier wohlgemerkt, Trash, Delete
Circle, Delete Circle Outline, Delete Empty, was, was sind hier das schönste von, Delete,
einfach nur Delete, keine große, gar kein großer Akt, äh, Hallo, Moment, ähm, einfach
nur hier Delete, äh, achso, ja, die Click, Click, äh, OnClick, soll er was machen, äh,
Delete Question soll er machen, damn, der ist ein bisschen groß, der Button, häh, Huge
Button, Massive, Massive Button, kann man das vielleicht in den Diff machen, so, sieht
immer noch kacke aus, oder, ja, weil das unter Linux läuft und ich hab Windows drauf, das
liegt in der VM, äh, man, eigentlich ist der Button doch gar nicht so schlecht, oder, der
ist schön fett, da kann man nicht, da kann man nicht, äh, sich, sich verklicken, großartig,
man könnte jetzt noch hier irgendwie sagen, List, Display, Flex, dann ist es nebeneinander,
aber das andere ist schöner, oder, das sieht, das sieht kacke aus, so, wir machen jetzt
mal einen neuen Button, weil der Button, der gefällt mir nicht so richtig, äh, der Button,
der kriegt erstmal Background, kriegt er Transparent, könnte eigentlich auch mal Browser Sync
wieder anmachen, dass das hier, nicht Browser Sync, wie heißt's, äh, Live Reload, dass
ich nicht jedes Mal, jedes Mal draufklicken muss, okay, das sieht schon nicht mal ganz
so hässlich aus, Outline, ne, Border, Border, Null, so, und jetzt haben wir hier nur noch
ein Ding, nur noch ein Button, so, und dann sagen wir hier Cursor, Hand, also wenn ich
drüber gehe, oder auch nicht, wie, war das nicht Hand, ne, Pointer, ne, Pointer ist
nicht Hand, Pointer ist es, joa, kann man auch lassen, äh, jetzt geben wir dem noch
die Color, die Dark Red, so, da haben wir einfach Red, kacke aus, ne, Fire, Fire Prick, oh, gut,
so, und wenn man da jetzt drauf geht, dann wird die Nachricht gelöscht, allerdings wird
das jetzt noch nicht funktionieren, weil er sagt 500, was auch logisch ist, dass er sagt
500, weil die Delete Methode ist ja noch gar nicht richtig implementiert, ne, ach ne, Moment,
haha, ich mach das falsch, Fetch, und jetzt müssen wir ihm ja sagen, dass er, Method,
Controller, Delete verwenden, delete der jetzt, gucken wir mal, äh, Controller, wo passiert
der Delete, hier die, ne, wir machen ja da noch gar nichts drinnen, Lul, Omega Lul, machen
wir mal wieder, beste, beste Debug Ausgabe, ähm, ID, mal gucken, ob die ID ankommt, d.h.,
wenn wir jetzt auf den Mülleimer klicken, sollte es die ID von der Message ausspucken,
und wenn das funktioniert, können wir danach die Message einfach löschen, 1, 7, ok, das
scheint zu funktionieren, so, d.h., dann sagen wir jetzt, ähm, Context, Find, ups, Find,
nein, Find, ID, ne, hier, äh, Item, ne, nicht Find, oder was, Find, ne, ist, äh, ach
ne, Messages, Find, so, Find, Find, ID, wenn, ähm, wenn er es nicht gefunden hat, dann
sagen wir, äh, äh, was sagt, was kann man da für einen schönen Fehlercode nehmen, ähm,
die Arrow oder so, not found, sagen wir einfach, der sinnvollste, dann müssen wir ihm sagen,
dass wir nicht void zurückgeben sollen, sondern ein Result, ok, und wenn er den gefunden hat,
das Item, dann sagen wir, Delete, ich kann echt nicht tippen, ne, Messages, Delete, oder
Remove, Remove, Item, und dann speichern wir das Ganze, und die Message müsste weg sein,
dann sagen wir, Return, ok, schauen wir mal, ob das jetzt funktioniert, also jetzt sollte
die Nachricht verschwinden, wenn ich da drauf klicke auf den Button, bam, nice, und er behält
auch als Target gleich den nächsten Button bei, ich kann jetzt alles ganz schnell löschen,
Pock, aber richtig Pock, huge Pock, 30 Milliarden Messages drin, ey, ich mein, ich könnte einfach
die Datenbank löschen lassen, Alter, da sieht man mal, wie die bei XQC spammen, ne, wir
waren da 10 Sekunden drinne oder so, und der komplette, das komplette Datenbank ist voll,
guckt euch mal, wie viel 3 Milliarden Messages da drin sind, krass, ich kann übrigens einfach
die Taste gedrückt halten fällt mir gerade auf, muss gar nicht immer wieder neu drücken,
wäre es nicht einfach, die DB zu, natürlich wäre das einfacher, ich kann auch einfach
sagen, DB Delete, DB Create, aber ich wollte mal gucken, wie das sich verhält, wenn ich
ihn löschen lasse, und das scheint ganz gut zu funktionieren, also ich mein, ich halte
jetzt die Taste gedrückt, und man sieht schon, dass wird alles vernichtet, jetzt sind wir
gleich, jetzt sind wir gleich fertig, flupp, welche Datenbank fällt, das ist SQ Lite, das
ist doch cool, das gefällt mir, das ist sehr, sehr nice, guck, kann ich doch, ja, das ist
doch jetzt echt schick, das gefällt mir, das reicht auch voll und ganz aus, so, was
wir jetzt noch machen müssen, wir müssen filtern Adwoblors, jetzt gibt es zwei Möglichkeiten,
entweder wir filtern das direkt hier raus, direkt hier raus, das Nachrichten, die nicht
mit Adwoblors anfangen, erst gar nicht in die Datenbank kommen, oder ich lock einfach
mein Chat jetzt mal eine Weile mit, vielleicht können wir nämlich, wenn ich mein Chat mitlocke,
mal irgendwann mal lustige statistische Auswertungen mit meinem Chat machen, deswegen werde ich
einfach mal so einrichten, dass ich jede Message mitlocke, ich meine, der Kram ist ja nicht
groß im Endeffekt, guckt es euch mal an, 84k oder so ist das jetzt, ach wir machen, stimmt,
wir sagen nicht fängt mit Adwoblors an, sondern wir machen, enthält Adwoblors und das filtern
wir nicht hier, das filtern wir nicht hier, sondern das filtern wir einfach im Controller,
dass wir einfach nur sagen hier Dings, Blah, und dann sagen wir Select, Message, die im
Text, die im Text Adwoblors enthalten, Leerzeit, was hat er für Schmerzen?
Ach Quatsch, ich select, where, megalo, wo ist jetzt das Problem?
Boah, was hat er jetzt für, muss ich jetzt noch sagen, wie Two Array oder was, hopp,
jetzt gehts, Emotes ist zu viel Aufwand, ehrlich gesagt, ich habe überhaupt keine Ahnung,
wieviel Emotes, also wieviel Aufwand Emotes sind, ich hab keine Ahnung, man, also sollte
Better Twitch TV und Franker Faces Z und Twitch und so, sollte es irgendwo eine, so eine Datenbar
geben, die ich abfragen kann, was es für Emotes gibt, dann ist es glaube ich, oder
beziehungsweise am besten noch, was es für Emotes gibt, und gleich die passende Uhr zum
Bild, wenn es sowas gibt, wäre das einfach, RP Better Twitch TV Emotes, ja gut, wenn es
es dann auch für alles gibt, das müsste ich mir mal überlegen, das können wir eigentlich
noch machen, oder, also jetzt nicht unbedingt heute, aber das muss ich mir erstmal Gedanken
drüber machen, aber wir können noch Emotes einbauen, warum nicht, das ist eigentlich
ganz, ganz nice, genau, die Nightbot könnten wir noch rausfiltern, und Message-User ist
nicht der Nightbot, ja das ist, das ist mir klar, dass das passt, also dass das, dass
das passieren kann, allerdings wollte ich jetzt nicht sagen, es muss Leerzeichen da
vorne nach sein, die Leute schreiben es teilweise auch einfach mitten rein, oh Nightbox, das
gefällt mir, also das hat was, das hat was, ich finde das echt nice,
was wir noch machen ist, ich glaube das haben wir sogar schon, haben wir das, haben wir
das, haben wir das, haben wir das, nee haben wir nicht, ich will das alles, to lower, auch
den User to lower, kann ich mich immer darauf verlassen, dass ich hier keine Probleme mit
großen, großen Kleinschreiben bekomme, ich finde das cool, das gefällt mir richtig
gut jetzt gerade, doch Nightbot wird gefiltert, doch hier drinnen, steht doch drinnen, wenn
Nightbot, wenn Name Nightbot, nicht Nightbot ist, dann gehts durch mit Nightbot, du musst
add Wupplo aus Nightbot oder so schreiben, dass du das testen kannst, aber das funktioniert
nicht, das sollte jetzt nicht durchkommen, so, das ist doch echt praktisch, wupp wupp
wupp wupp wupp wupp wupp, stimmt, das mit dem to lower ist richtig bei den Emotes, aber
ich habe hier eh noch keine Emotes drinnen, das mit den Emotes, das muss ich mir erstmal
in Ruhe angucken, das machen wir heute nicht mehr mit den Emotes, was können wir jetzt
nochmal, gibt es noch irgendwas, was man einbauen könnte, was, was man relativ easy machen könnte,
Timestamp, achja stimmt, Timestamp wäre nicht verkehrt, das ist, das stimmt, ähm weil zumal wir haben den ja schon, wir haben den ja schon, ähm wir machen jetzt einfach Question, User, Text, ähm da machen wir ganz am Anfang, machen wir time, oh Monkeys, wie, oh Gott, das müssen wir jetzt parsen, oh Gott, oh Gott, oh Gott, oh Gott, oh Gott, oh Gott, oh Gott,
Time-Stamp neben dem Delete-Icon. Ich muss erstmal den, ich muss erstmal den Timestamp schöner hinkriegen,
Ich muss erst mal den, ich muss erst mal den Timestamp schöner hinkriegen.
Machen die da für komische Dinge alle?
Das geht doch bestimmt schöner.
Ja, das stimmt, das könnte auskennen.
Fuchs, das ist auch eine gute Idee, weil ich rufe ja jedes Mal, ich rufe jedes Mal alles ab.
Wobei dann, also wenn wir sowas machen, würde ich sogar noch, würde ich sogar noch einen Schritt weitergehen.
Ich würde dieses, ich würde dieses, äh, einmal pro Sekunde Pollen irgendwie abschaffen.
Und, ähm, ich würde irgendein, irgendein Signalisierungsding noch einbauen.
Dass der quasi nur reloadet, wenn eine neue Nachricht einkommt, reinkommt und dann auch nur die neue Nachricht.
Sowas könnte man schon, sowas könnte man noch machen.
Was das Launchfeld war, das ist hier, das da?
Nee, das ist, ähm, das da.
Das ist Rofi.
Oder Roffi, oder wie war das?
Rofi heißt es wahrscheinlich.
Was ist ein Launcher?
Ich habe es bei mir so, dass Steuerung P ist quasi, ist quasi Zwischenablage.
Durchsuchbare Zwischenablage.
Kann ich sagen, ah ja, gut mal, guck mal hier, hier unten.
Ich hatte doch irgendwann mal was in der Zwischenablage mit Next Tick.
Kann ich die Zwischenablage durchsuchen, wähle das aus und dann ist es wieder in Zwischenablage drin.
Und Steuerung D ist bei mir der Application Launcher.
How to Convert Java Date Time in CS, CS, CS... Gibt es da nichts Schöneres?
Ah ja.
New Date, Object Date.
Should work.
Nein, da bin ich schon.
Ah ja.
New Date, Object Date, Should work.
Nein, da bin ich schon mal gespannt, ob das funktioniert.
Probieren wir mal aus.
New Date.
Ha, tatsächlich, es funktioniert.
Omega Lul.
Klappt.
Das ist ja easy as a fuck gewesen jetzt.
Steuerung P, nee, was ist Steuerung P?
Default ist anscheinend Drucken.
Was ist bei dir, Steuerung P?
Pornhub.
Ich wollte es gerade sagen.
Steuerung P ist Ppega Shortcut.
Ähm, das habe ich voll vergessen.
Genau, wie formatiert man Dates in JavaScript?
Wie macht man das?
Gibt es da nicht sowas wie Strift Time oder sowas?
Oh, warum hat er nicht nach unten gescrollt?
Rekt.
Mozilla Date.
Da gucken wir uns mal die Date API bei Mozilla an,
was wir da schönes haben.
Die Zeitanzeigen, wie es her ist, wann die Nachricht gesendet wurde.
Oh, das ist auch eine gute Idee.
Ähm, ich will jetzt ja eigentlich erst, das merke ich mir.
Das merke ich mir, das ist eine gute Idee,
dass man dann quasi sagen könnte, bla, bla, bla, 5 minutes ago oder sowas.
Das wäre ganz cool.
Aber erstmal schauen wir mal, wie man das hinkriegen,
dass wir dem Ding einfach nur die Uhrzeit entlocken.
Get Date, Get Folie, Get Date, Get Hours, Get Milliseconds.
Gibt es nicht sowas wie Get Local Date oder sowas,
oder Get Local Time oder sowas.
Ah, Two Local Time String.
Das wollen wir haben, das klingt gut.
Two Local Time String.
Oh, wir haben es kaputt gemacht.
Two Local.
Ach, Lokale.
Lokale, nicht Local.
Ja, ja, das ist doch schön.
Und wenn wir ihm jetzt noch sagen können,
dass wir 24 Stunden, dass wir 24 Stunden Strings haben wollen.
Kann man das einfach sagen?
Hier, DE, DE.
Oh, Pock, nice.
Das ist ja recht, recht easy.
Was möchte er denn programmieren?
Man sieht es eigentlich schon.
Ich will einen Lok haben von meinem Chat
mit allen Fragen, die an mich gestellt werden.
Und wenn ich die dann beantwortet habe,
dann kann ich sie löschen.
Da vergesse ich nichts mehr.
Weil ich habe schon so oft in Streams gesagt,
ja, das gucken wir uns dann an und habe es nie gemacht.
Warum ist das alles so easy? Weil...
Deswegen.
Ich könnte vielleicht noch hier den Wubblors highlighten.
Wie könnte man das denn jetzt schön machen?
Also, die Uhrzeit ist jetzt schon mal schick.
Das gefällt mir irgendwo.
Die Uhrzeit ist schick, so.
Also, die Uhrzeit lassen wir so.
Dann machen wir die...
Okay, warte mal, wie machen wir das?
Also, Date lassen wir so.
Date lassen wir so.
Den User, den machen wir fett.
Sick, sick user.
Ja.
Und den Text lassen wir so.
Wäre es nicht sinnvoll, auch Nachrichten markieren zu können?
Nicht nur löschen.
Was mache ich mit der markierten Nachricht dann?
Du meinst so bei der Nachricht, wo ich gerade bin?
Ja gut, den kann ich immer noch so markieren.
Da sehe ich jetzt nicht so den...
Ja, B benutzt man nicht mehr.
Stimmt, Sturm ist eigentlich richtig.
Aber, scheiß drauf.
Wie könnte ich das jetzt noch machen, dass Ed Wubblors eine andere Farbe kriegt?
Da müsste ich jetzt irgendwie den Text noch mal parsen.
Und dann irgendwie einen Diff oder so drumherum machen, was eine andere Class mit andere Color kriegt.
Weil mir das glaube ich ein bisschen zu große Akt ist.
Da müsste ich irgendwie so ein bisschen HTML zusammen plussen.
Ich glaube ich kann auch erst mal so damit leben.
Ja, also wir haben noch ein bisschen Zeit.
Also was wir noch machen könnten ist...
Aktuell ist es ja nicht sonderlich schön.
Der macht es jetzt ziemlich noobmäßig hier.
Alle Sekunde fragt er ab, ob es was Neues gibt.
Wir könnten schon noch einbauen, wir haben es ja vorhin kurz besprochen.
Wir könnten schon noch einbauen, dass der das dynamisch macht.
Also sprich, dass der nur updatet, wenn eine neue Nachricht da ist.
Können wir noch machen.
Übrigens danke für die ganzen Follows.
Ich gucke mal kurz nach, wen wir hier alles haben.
Login.
Hat mich wieder ausgeläuft bei Steamlabs.
RISD Events, also wen haben wir hier am Start?
Jody76FSTCC haben wir am Start.
Dann haben wir ZuckSellsData am Start.
P925Q, Jak5Krangelia.
Die Namen sind doch echt schwierig.
Krigs, Bas, Zirks, Brandi, MopinjaTV, Maxeri, Rolf, Rollt.
Aviwatzxnz19fr, der Hauflord.
Ja, das war es.
Das war's für heute.
Aber ich meine, so blickt man doch schon ganz gut durch hier.
Hallo.
BloodPact81.
Also wir können jetzt auch probieren mal einzurichten, dass der...
Wobei eigentlich ist das voll die vergebene Mühe irgendwie, weil das funktioniert.
Es ist scheißegal, ob das eine Sekunde später aktualisiert oder eine Sekunde früher.
Das ist vollkommen egal, ey.
Wir könnten noch, eine Sache, die der Auskernfuchs hier geschrieben hat, könnten wir vielleicht wirklich mal zur Sicherheit einbauen, dass er nur die letzten...
Moment, wo muss ich denn hin?
Dass er nur die letzten irgendwie, keine Ahnung, die letzten 50 oder so.
Ach nee, das ging gar nicht, mir klar, das war top.
Moment, wie ging das jetzt noch mal?
Take, take?
50 war es, glaube ich.
Take 50.
Genau, dann nimmt er nämlich nur die...
Nee, wir brauchen nicht die 50 erst, wir wollen die 50 letzten haben.
Also müssen wir die vorher noch sortieren.
Sort?
Nee, order, nicht sort, order.
Order bei...
Absteigend, aufsteigend.
Oh fuck, wie ging das jetzt?
Wann ist das Partnership soweit?
Ja, müsste ich jetzt langsam aber sicher wieder machen können.
Kann ich das nicht hier machen?
Gibt es da was schöneres als das, was ich jetzt machen will?
Delete last end records, ja, wie würde man das machen?
Ja, okay, der macht so ähnlich wie ich.
So, order bei.
Dann muss man ihm wahrscheinlich sagen, ID.
Und dann die letzten 50.
Hallo Eax.
Ah, Moment, das ist ja fail.
Nee, nee, nee, nee, so einfach ist das gar nicht.
Ich will halt die neuesten unten haben.
Wobei, warum will ich eigentlich...
Warum will ich eigentlich die neuesten unten haben?
Ich könnte mir doch mein ganzes Gscroller sparen, wenn ich die neuesten einfach oben hin mache.
Ja, Big Brain, dann machen wir das so.
Guck mal, da wird das hier viel kürzer.
So ist das nice. Und wenn ich jetzt lösche hier.
Zack, nice.
Ja, das ist doch noch viel schöner.
Da oben bleibt er automatisch.
Ja, das ist da, siehst du?
Manchmal macht es Sinn, wenn man sich einfach mal ein bisschen Gedanken macht.
Test, funktioniert.
Sehr nice, so richtig nice.
Ja, und das bleibt auch oben.
Ja, das ist gut.
Dann lassen wir das so.
Dann kann ich mir nämlich diesen ganzen Scrolling Mist sparen.
Dann sortieren wir es einfach absteigend, aufsteigend, äh, absteigend.
Und äh, nehmen die letzten 50 Elemente, weil die letzten 50 reichen.
Sobald ich dann quasi eine davon beantwortet habe, kommt ja beim nächsten Update wieder eine neue dazu, die vielleicht vorher nicht dabei war.
Und so, und so, ähm, verhindern wir auch, dass der Browser 50G RAM frisst.
Letzten 50 Messages ist okay.
Man könnte noch Knopf machen für weit mehr Laden.
Oh, der Auskennfuchs hat Dinger gebastelt.
Kann ich das jetzt aufmachen, ohne dass was passiert?
Okay, was macht das jetzt?
Ah ja, oh, das ist schick, das gefällt mir.
Das gefällt mir, das ist schick.
Das sieht viel, viel, ähm, Messenger-style-ig aus.
Wow, ist das viel Zeug.
Ah ja, ja, so könnte man das schon machen.
Das ist eine gute Idee, ja.
Da sieht man, dass ich das eigentlich viel zu wenig mache.
Ja, das, das machen wir.
Das ist doch, das ist doch schicker als meins, was der Auskennfuchs da gebastelt hat, oder?
Nee, Sebaro, das lasse ich drin, weil das steht immer mitten im Satz und so.
Das ist, finde ich, finde ich, finde ich besser.
Dann machen wir das so, äh, ja.
Das, ähm, Time, ups.
Hallo, der Boss ist back.
Das da haben wir, das da haben wir, das da haben wir.
Time, User, Text.
Da kommt die Time rein.
Der User.
Der User und da unten kommt der Text rein.
So.
Da können wir uns wahrscheinlich sogar den Diff sparen drum herum.
Oder, brauchen wir den, brauchen wir den Diff jetzt noch?
Den brauchen wir nicht, ne?
Ach so, nee, doch, brauchen wir.
So, und jetzt sagen wir hier.
Wer soll das mal nachzubauen?
Ähm, so, und jetzt sagen wir hier Class Text.
Weil viel interessanter ist Class Time, da können wir jetzt hier nämlich sagen, ähm,
Font Size macht 10.
Ja, oh, das ist schön.
So, dann gucken wir mal, wie er das gemacht hat hier.
Uiuiui, ganz schön, ganz schön viel Zeug.
Class Content, ach so hast du das gemacht.
Ah, das ist natürlich auch nicht schlecht.
Du hast das quasi getrennt.
Du hast hier Diff und dann noch so Container Diff.
Ja, das ist, das ist ganz sinnvoll.
Big Brain, ja.
Ah, ja, das ist, das ist nice.
Kann man es hier irgendwie neu formatieren lassen?
Format?
Ne.
So, und jetzt können wir auch wirklich den, jetzt könnten wir das echt wegmachen.
Dann ist es nämlich hinten auf der gleichen, doch nicht.
18 ist erst gefuddelt.
Zumindest escaped er den Mist.
Besserer Time.
Kopieren wir jetzt einfach mal deinen.
Ich kopiere mir das jetzt einfach mal komplett von dir.
Easy.
Easy weggerippt.
Lull.
Das sind, das sind mir zu viele Browser Fenster.
Da sieht man wieder was.
Ich bin der übelste CSS Pro hier, wie man wieder sieht.
So, also jetzt hat er hier den, den.
Oh, da haben wir auch keinen Button mehr drin, ne?
Das ist alles, sind alles, sind alles Diffs.
Doch.
Ah ne, das ist nur der Delete Button.
Okay, hat der hier da Button hier oben irgendwas drin?
Ach, den hab ich einfach nur net kopiert.
Lull.
Oh, das finde ich schick.
Wobei das nicht ganz stimmt, was ich da kopiert hab, ne?
Darf ich das überhaupt kopieren?
Das ist die Einzeige, gleich raus, ja.
So, hab ich, hab ich richtig, hab ich das hier richtig gemacht?
Hab ich irgendwas vergessen?
Diff Class, List Item, Diff Class Time.
Ah ne, er hat das Diff hier nicht mehr drum herum.
Dafür jetzt Diff Class, ach so, aha.
Dann hat er Diff Class Content hat das Ding hier.
Content.
Ah, es wird, es wird.
Diff Class Content.
Dann haben wir noch nen extra Diff, oder?
Noch mal nen Diff.
Da drum.
Der CSS Pro ist am Start, man sieht's schon wieder.
So, und dann kommt User.
Da kommt Message.
Ach so, Message hieß das, hieß gar nicht Text, hieß Message.
Ah, sehr schön.
So, und der Button, der Button geht in den Diff hier rein.
Der Button, der geht in den, in den, den Diff ist der mit drinne.
Schick.
Sehr schick.
Sehr sehr nice.
Hab ich das jetzt, hab ich das jetzt richtig nachgebaut?
Hast du das Diff mit Content nicht?
Doch, hab ich, das, die Nachricht ist einfach nur älter, oder?
Okay.
Das ist doch schick, das gefällt mir.
Wir sagen jetzt Vue.js noch, dass wir warten sollen, bis alles geladen ist.
Da weiß ich aber aus dem Kopf nicht mal, wie das ging.
Wait until loaded.
Da gab's irgendwie was.
Nee, nee, nee, nee, das ging anders, das ging anders.
Das ging anders.
Man konnte Vue.js direkt sagen, ähm, dass der erst anfangen soll, wenn alles geladen ist.
Da gab's irgendwas.
Nee, nee, nee, nee, es gab, man, man konnte das glaube ich hier oben in dem Diff,
konnte man irgendwas setzen noch direkt.
Das war, oh, wie ging das noch mal?
Man konnte ihm sagen, mach erst, wenn fertig geladen ist alles.
Nee, nee, nee, nee, das ist, das war total easy, das weiß ich noch, das war easy as a fuck.
Da muss man einfach eine Sache eintragen und dann, dann ging das.
Das krieg ich dann mal zusammen, haben wir es vielleicht hier drinnen, haben wir es im Memeboard vielleicht drinnen?
Nee, nee, nee, nee, wie ging das noch mal?
Das war total einfach.
Wie viel Gedöns wir jetzt schon drinnen haben bei dem anderen.
Man konnte dem.
Nee, nee, nee, nee, ich weiß es nicht mal, ich krieg es immer zusammen.
Man konnte, man konnte dem sagen, sag dem Otto fang erst an.
Wie ging das denn?
Das ist einfach unfair.
Nee, das war aber glaube ich anders.
Nee, nee, nee, man konnte, man konnte hier direkt beim Start was setzen.
Ich weiß jetzt echt nicht mal, ich weiß nicht mal wie der Mist hieß.
Vielleicht fällts mal, vielleicht.
Nee, ich weiß es nicht mehr.
Dann hatte man das Problem hier nicht mit dem, weil das ist ja kein wirkliches Problem, wenn er komplett reloadet, zeigt das mal kurz an, bis er die Material-Icons geladen hat.
Das ist ja kein, kein.
Weil ich bilde mir ein, wir haben das trotzdem hier, haben wir das gemacht.
Pop-up, gucken wir mal hier im HTML vom Pop-up.
Pop-up, all die visible.
Mal gucken, ob ich das jetzt hier auch drinne hab.
Nee, ach keine Ahnung, ich weiß es jetzt grad nicht, wie das hieß.
Aber ich find's schick, gefällt mir.
Funktioniert genauso wie man das braucht.
Nee, am nächsten Stream können wir dann tatsächlich mal gucken.
Hab ich beiden nicht, das ging irgendwie anders.
Hatte ich das hier drinne?
Nee, hatte ich. Ach doch hier.
Ah ja gut, das hatte ich drinne.
Da hatte ich es aber ausgelagert.
Nee, man konnte irgendwie ganz, ganz einfach was setzen.
Man hat ja erst angefangen, wenn alles geladen ist.
Gut, am nächsten Stream gucken wir mal.
Ich mach mich mal schlau, wie das ist mit Emotes.
Wie man Emotes einbinden kann.
Durch mal die BellatridgeTV oder FrankFFZ-AP angucken.
Wie man da Emotes abfragen kann.
Ich hab hier eben schon ein paar Links gekriegt, zum Beispiel das da.
Und das da.
Wann ist der nächste Stream? Vielleicht morgen.
Wie funktioniert denn die AP?
Omega-Lol.
Genau, wie kann man jetzt die komplette, kann man irgendwie die AP auflisten lassen von meinem Channel?
Wie funktionieren diese Dinger?
Das muss ich mir mal im Detail angucken, wie das ordentlich funktioniert.
Also ich brauch ja erstmal eine Liste.
Ich brauch eine Liste mit Namen von Emotes in meinem Channel.
Ach hier, Room-ID, Twitch-ID.
So, wo Blorts?
Ah nee, Room ist ja nicht.
Da muss ich mich mal in Ruhe mit beschäftigen, wie das geht.
Gibt es noch ordentliche AP, wo man Emotes abfragen kann, da können wir das noch einbauen.
Das können wir noch einbauen, dass der Emotes abfragt.
So Leute, wie lange war man on?
3 Stunden, ok, ich geh jetzt grillen.
Hotter Grill am Start.
Wir sehen uns das nächste Mal, machts gut, bis denn.
