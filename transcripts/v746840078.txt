So Leute, ich bin wieder am Start, exzellent, jetzt Refreshen, irgendwas stimmt hier nicht.
Ah jetzt, ok wunderbar. Poggers, easy clap. Er spielt die Gifts ein bisschen schnell ab
würde ich sagen. Aber dieser Windows Image Viewer ist installable. Der Stream war noch
im Hintergrund auf. Ja das ist verwirrend, das habe ich auch manchmal. Ich hatte das mal,
habe ich irgendwas auf dem Tablet laufen gehabt, bin eingepennt, dann ist der Typ off
gegangen und ich habe es nicht mitgekriegt und irgendwann ist der Typ mitten in der Nacht
on gekommen und das Tablet, obwohl sich das eigentlich gesperrt hat, dann ist Twitch
auf einmal wieder angegangen. Das war glaube ich immerhin Bucketing, da war der Typ auf einmal
am Start nachts um 4. Ach ja Tommy, das ist eine gute Idee. Das gucken wir uns jetzt mal
schnell an, da hast du recht, für die richtigen Hacker-Mans. Mal gucken, wo man den Link dazu
hat, ich finde den nicht mehr. Das da, hm? Ok, was ist das Richtige? Das da, das da,
nimmt sich alles glaube ich nicht großartig, das ist vom 20. Mai, das ist vom 9. April.
Hier, ich glaube hier sind Beispiele bei, da gucken wir uns mal das an, wobei das hat,
das andere hat Dark Theme und Dark Theme ist ja bekanntlichermaßen wichtig. So, gucken
wir mal. Also was gibt's, aber das ist schöner geschrieben hier. Also was gibt's für neue
C Sharp 9 Features? Das ganze ist ja noch gar nicht draußen, ne? Das kommt auch glaube
ich nach.NET 5. Also das kommt, das kommt, das dauert noch ein bisschen. Wo kommt das
raus? C Sharp 8, C Sharp 9. Gibt glaube ich noch gar kein Release Date, kann das sein?
Irgendwann ende das hier. Release at end of the year. Hier, hier kann man doch nachgucken.
Das muss man Microsoft ja nur wirklich mal lassen, ne? Also, die haben wirklich so komplett
sich um die, wie sagt man das, so 180 Grad Kehrtwende oder so gemacht. Also, früher
hat Steve Ballmer Stühle nach Leuten geworfen, die was die Open Source gut fanden. Da gibt's
doch, ob das stimmt weiß man natürlich nicht, ne? Da gibt's ja diese Story von dem einen
der Typ, der zu Google gewechselt ist, dem er irgendwie den Stuhl hinterher geworfen
hat und dann irgendwie den Stuhl aus dem Fenster oder so. Also, ob das stimmt, keine Ahnung,
aber ich kann's mir bei dem Kerl gut vorstellen, dass das stimmt. Der hat doch jetzt auch irgendwie
ein eigenes Baseball Team und, ne Basketball, Basketball ist, ne? Der hat doch jetzt irgendwie
auch ein Basketball Team und eskaliert dabei voll rum. Die, genau die, die Velopos, die
Velopos, die Velopos. Da haben die Zuschauer auch zwangsläufig mitmachen müssen, sonst
hätte er nicht aufgehört. Ja, aber, ähm, also was ich sagen wollte, also Microsoft hat
da wirklich 180 Grad Kehrtwende gemacht. Guckt euch das mal an. Früher hat der Ballmer sich
hingestellt und hat gesagt, irgendwie Open Source ist ja wie Krebs und so was in der
Richtung. Der ist da voll abgegangen und spätestens seit jetzt, ähm, dessen Namen ich mir nicht
merken kann, Nadella, Satya Nadella oder so ähnlich, also der neue Microsoft-Ober, Microsoft-Mensch
am Start ist, die haben 180 Grad Kehrtwende gemacht. Also die sind von, die sind von einem
der meistgehasstesten Close Source Typen zu einem der mit beliebtesten Open Source Läden
geworden. Das ist, das hätte ich, also ohne Scheiß, ne? Und man muss sich das auch mal
angucken. Die Aktie ist durch die Decke gegangen in der Zeit. Ja, okay, das ist jetzt nur heute.
Äh, wir müssen mal hier, keine Ahnung, bisschen Langzeit-Dings gucken. Guckt euch das mal
an. Und das ist nur ein, ja? Guckt euch das mal an. Also, hier, der Ballmer hat irgendwo
so hier aufgehört. Keine Ahnung, weiß nicht wann der Ballmer aufgehört hat, 2015 oder
so. Irgendwo hier. Und seitdem ist die Microsoft-Aktie so extrem durch die Decke gegangen, auch
dank Azure und dem ganzen Cloud-Scheiß. Es waren ein paar Cliffe ins Klo dabei, aber
insgesamt muss man sagen, macht Microsoft nicht nur aus, äh, Programmierersicht, Anwendersicht,
sonst wie macht er einige Sachen wirklich ganz gut. Auch hier aus Anleger-Sicht, ne? Ist
das, ähm, kannst du dich nicht beschweren. 98 waren sie noch mal höher. Das war vor,
das war vor der, äh,.NET-Blase, aber das kann ich mir eigentlich, gar nicht vorstellen,
ob die Verhältnisse stimmen hier nicht ganz. Moin, Kengin, was, okay, oder was auch immer.
Äh, ja, also ganz ehrlich, äh, wer Microsoft-Aktien hier gekauft hat, als der Ballmer aufgehört
hat, hat das Beste, was du machen konntest. Die haben, die Leute haben jetzt irgendwie,
das Doppelte. Das geht ab. Ach stimmt,.COM-Blase, wie komme ich auf.NET? Vielleicht weil wir
uns vorher zu viel.NET-Zeug angeguckt haben. Ja, und man kann jetzt wirklich öffentlich
auf GitHub sehen mittlerweile, äh, was noch offen ist für, für C-Sharp 9, also das ist
echt nicht schlecht. Ich muss da Microsoft auch mal loben, weil ich hacke ja immer auf
Windows rum, dass das sackt, und Windows sackt nach wie vor. Aber das ist echt gut. So, also
was gibt es denn für neue C-Sharp 9-Features? Ja, gucken, wir gucken uns einfach beide Posts
an. Der Metz, das ist der Ober-C-Sharp-Mensch jetzt. Der Heilsberg macht das ja nicht mehr,
der hat ja am Anfang nur ein bisschen C-Sharpen, jetzt macht er TypeScript. Man darf auch nicht
vergessen, bei Microsoft, ne, die haben sowohl mit C-Sharp als auch mit TypeScript, äh,
zwei Sachen, die ganz vorne mitspielen. Also die haben wirklich viele ordentliche Sachen
hinbekommen. So, ähm, und hier, das wie gesagt, das ist der Ober-C-Sharp-Architekt hier. Ich
hab, weiß nicht, ich kann mir den Nachnamen von ihm nicht merken, das ist ein bisschen,
das ist irgendwas norwegisches oder so. So, und zumindest, es gibt jetzt ein paar neue
C-Sharp-Features und das Ganze kommt Ende des Jahres. Ich hab's mir noch nicht angeguckt.
Schauen wir mal, was gibt es denn? Also, In-It-Only-Properties. Oh, das hab ich schon, das hab ich gesehen in
dem Video. Das finde ich eigentlich ganz nice. Man kann jetzt, haben die ein Beispiel drinne?
Genau. Also bisher ist es ja so, wenn man, äh, in C-Sharp, ich wollte jetzt sagen.NET,
aber.NET trifft es nicht mehr so ganz, weil zu.NET gehört ja auch F-Sharp und, äh,
Visual Basic.NET gibt es das eigentlich noch. Das haben die eingestellt, oder? Ist das dead?
Ist VB.NET dead? Okay, nein, das ist nicht dead. Okay, ich hab nix gesagt. Es geht weiter
mit Visual Basic. Ich, ich glaube, ich hab noch nie Dark Mode in Windows ausprobiert.
Zeig mal, wo geht man, wie macht man hier Dark Mode an? Command, Dark Mode. Ich weiß
nicht, was es ist. Ich starte das mal nicht. Was taskbar, Rechtklick und dann? Einstellungen.
Was, Color? Ah, hier, hier. Ah, hier. Ah, doch, ich hab's doch auf, ich hab's doch auf
Dark stehen. Okay, das muss auf Dark stehen bleiben, sonst geht das nicht. Bäh, ist ja
einfach nur schwarz. Das ist kein ordentlicher Dark Mode, das sieht einfach noch kacke aus.
Microsoft, Alter. Okay, warte mal, ich mach mal hier zu. Ah, okay, okay, ich hab nix gesagt.
Ich hab nix gesagt. Ich hab nix, es funktioniert. Aber ganz ehrlich, schön integriert sieht
das nicht aus. Muss ich jetzt, muss ich jetzt echt mal sagen. Ich glaube, ich lass das
so stehen, wie ich das die ganze Zeit hatte. Das hier auf Hell und hier der Browser auf
Dark. Das gefällt mir besser. Aber zurück zu den 90 Sharp Features. Also, das erste hab
ich schon in der Webcast. Die Fensterrahmen sind halt für'n Arsch. Moment, das muss ich
mir jetzt noch mal angucken. Colors, Dark. Wieso? Ich mein, man sieht kaum was. Aber
was ist an den Fensterrahmen so schlimm? Seven-Zip-Help. Achso, ah, okay. Die alten
Anwendungen gehen nicht. Lull. Ja, gut. Das ist auch wieder so ein Ding. Das ist komplett
inkonsistent, was die da gebaut haben. Ah, komplett inkonsistent. Bei den neuen Sachen
geht's, bei den alten geht's nicht. Äh, Müll. So, aber gucken wir uns mal die neuen,
gucken wir uns mal die neuen Features an. Wie gesagt, das hab ich schon gesehen. Man
kann ja schon seit einer Weile, ich glaub seit uralt, also schon lange her, kann man,
wenn man in die Sharp eine Klasse anlegt, hier Person, kann man ja die so initialisieren
ohne Constructor. Und jetzt, was auch schon eine Weile geht ist, man kann Properties so
anlegen und die haben jetzt ein neues Schlüsselwort, hab ich gesehen. Das kenn ich schon. Man kann
anstatt GetSet, was man übrigens auch machen kann ist, man kann sowas sagen wie GetPrivateSet,
das funktioniert auch schon, dass man es von außen nicht setzen kann. Aber jetzt kann
man da noch Init dabei schreiben, das hab ich schon mal in einem Video gesehen und das
sorgt dafür, dass man nur beim ersten Mal was schreiben kann. Das heißt, das da kann
ich machen, ich kann das einmalig initialisieren und danach ist es ReadOnly. Das ist ganz praktisch,
es ist ähnlich wie wenn ich PrivateSet mache. Das ist ähnlich wie wenn ich PrivateSet mache,
aber dass ich mit PrivateSet das hier nicht verwenden kann, dann muss ich über irgendeinen
Constructor gehen. Also hier kann ich nur Public Sachen setzen, über diesen, weiß gar nicht
wie das heißt, Object Initializer heißt es, genau. Das kann ich nur machen, wenn die Sachen
Public sind und dementsprechend Set auch Public ist, sonst funktioniert das nicht. Es ist
ein bisschen schönere Variante, was zu initialisieren als über den Constructor, je nachdem, hat
alles seine Vornachteile. Und jetzt kann man sagen Init anstatt Set und dann kann man das
nur einmal setzen. Das heißt, man kann nur einmal das hier machen und dann kann man nur
noch, es ist ReadOnly, danach. Man kann es einmal setzen von außen und danach ist ReadOnly.
Das, ich hab gelesen, das machen die aus dem Grund. Das ist auch ein bisschen für die
funktionale Geschichte, weil in C Sharp kommt ja mittlerweile relativ viel, was weggeht vom
reinen objektorientierten Ansatz. Also ich hab ja mit Pattern Matching und was auch immer
noch alles. Die verfolgen ja ein bisschen mehr so diesen Functional Programming Ansatz mittlerweile.
Also du kannst ja in C Sharp mittlerweile relativ viel Funktionales machen und objektorientiert.
Und dafür wollen die das machen, dass man mehr Immutable Objects verwenden kann. Ist
eigentlich eine nette Idee, ob ich das jetzt wirklich oft verwenden werde. Ich weiß nicht,
wahrscheinlich nicht. Ich glaub, das ist sowas, das verwendet man, wenn man es halt mal, wenn
es sich gerade anbietet und danach, danach nicht mehr. Oder nicht immer, sondern ab und zu mal.
Wir schreiben ja auch hier, genau, man kann es nur einmal setzen, jedes weitere setzen gibt
einen Error. Und was die ja wirklich gut machen bei der ganzen.NET Geschichte,
und da kann sich C++ in Riesenscheibe abschneiden, die haben gute Tools. Also sprich,
du kriegst in.NET oder in C Sharp, du kriegst gute Compilerwarnung. Du kriegst nicht irgendwie drei
Seiten Error ausgekotzt, wie das bei C++ ist. Bei C++ machst du ein Zeichen an der falschen
Stelle falsch und du kriegst 20 Seiten und du weißt überhaupt nicht, was der eigentlich von dir will,
bis du dann irgendwann das Zeichen richtig setzt und auf einmal sind alle Sachen, die angeblich
quer über das Dokument verteilt falsch sind, weg. Das ist halt ein bisschen für ein Arsch. Das kriegen
die hier deutlich besser hin. Es gibt ja auch so Sachen, zum Beispiel, was die in C++ auch
teilweise nicht richtig hinbekommen ist, wenn ich, wie machen wir das jetzt? Waren genommen,
ich habe irgendeine Funktion in C++, die heißt jetzt plupp, und der kann ich irgendein Callback
übergeben, und zwar ein Callback mit einem Int oder so. Machen wir das jetzt mal. Wenn ich
das jetzt aufrufe, diese Funktion, pass auf, das ist jetzt der Vorführeffekt, jetzt geht's,
aber ich kann auch sagen, in manchen Situationen funktioniert es nicht. So,
jetzt kann ich da einen Lambda reinstecken, also anonyme Funktion, und in C++ gibt es ja
sowas wie Auto. Und wenn ich jetzt hier gucke, welchen Variablen-Typ hat B, B hat Typ Auto. Das
ist ja falsch. B hat Typ Int. Auto ist einfach nur, weil ich den Kram nicht schreiben muss,
weil ich nicht jedes Mal nachgucken muss. C++ weiß, dass das ein Int ist, weil, wenn ich jetzt
versuche da irgendwie einen String reinzustecken oder so, dann sagt er, nee, nee, nee, das geht
nicht, das geht nicht. Also wenn ich da, wenn ich da, ah nee, Moment, rein machen kann ich da eh
nichts. Das ist jetzt ein doofes Beispiel gewesen. Sagen wir mal, ich mache sowas hier, String C
gleich B. Dann sagt er, ah nee, nee, nee, nee, geht nicht, weil, naja, also Int, Int zu C geht nicht.
Was ich allerdings machen kann, ist Int D gleich B. Das, das funktioniert dann. Also, man sieht,
der weiß prinzipiell, dass das ein Int ist, aber warum zeigen das die Tools nicht an? Na,
das ist auch sowas, da kann sich C++, was Fehlermeldung und Tools angeht, von C-Sharpen
auf eine Riesenscheibe abschneiden. Weil ich meine, es war intern, weil, muss es wissen, dass das ein
Int ist, aber warum zeigt es mir das nicht an? Was Auto wieder komplett unsinnig macht, weil ich
muss trotzdem jedes Mal nachgucken, was ist das für ein Typ. Und, und, ich habe noch nicht mal
irgendwie hier Auto-Vervollständigung dadurch. Also, ist schon ganz schön kacke. Ich glaube,
das ist aber auch der Komplexität von C++ geschuldet, weil wenn auch nicht mal mehr das
Gremium durchblickt, was ihre eigene Sprache so macht, wie sollen denn dann die Tool-, beziehungsweise
die IDE- und Tool-Implementierungsleute da noch durchblicken? Kein Wunder, das ist halt so.
Ja. So, zumindest, das ist jetzt ein neues Feature in C-Sharp 9. So ein Finish ist eigentlich eine
gute Sache. Was sind denn Immutable Objects? Ja, zum Beispiel sowas wie Daytime ist standardmäßig
immutable. Ich mache mal kurz Visual Studio auf. Versuche ich das mal kurz zu demonstrieren,
was ich meine. So, eh, Console-App 14 klingt gut. Weiß nicht, was da drin ist, ob man das
löschen kann. Oh ja, das klingt unglaublich wichtig. Blob 1, Blob 2, Firefox. Oh nee,
das ist das, wo ich versucht habe, Modern Warfare den Sound-Liser zu stellen, was die
Sachen als Cheat erkannt haben. Das ist das, wo ich Modern Warfare versucht habe, den Sound anzupassen.
Nee, das behalte ich mal. Das kann man bestimmt noch gebrauchen. Wo Modern Warfare sich dann
geschlossen hat, weil Modern Warfare gesagt hat, oh nein, der Max ja cheatet. Anti-Cheat hat erkannt,
dass ich cheate. Oh nee, Moment, VB.net. Und deswegen konnte ich das nie verwenden.
Nachdem ich ja die Sachen immer so beknackt benenne. So, also was mit Immutable gemeint,
es ist folgendes. Also, ich habe hier sowas wie, keine Ahnung, Date, Time, Now. Nee,
Moment, Moment, War ist es ja hier, Time. Date, Time, Now. So, da steht jetzt die,
das ist jetzt ein Date-Time-Objekt, wo die aktuelle Uhrzeit drin steht. Wenn ich da jetzt
was dran ändere, zum Beispiel at Mini-Seconds, dann ändere ich nicht dieses Time-Objekt,
sondern ich kriege ein neues Date-Time-Objekt mit. Also, zum Beispiel. So, wenn ich das hier jetzt
ausgebe, an den beiden Stellen, oder wir machen mal add hours, oder so, add hours, fünf. So, da gibt
jetzt an beiden Stellen das gleiche aus. Guck, exakt das gleiche, obwohl ich fünf Stunden
hinzugerechnet habe. Das wird man ja eigentlich nicht erwarten. Man würde ja eigentlich erwarten,
hier gibt er 15.32 Uhr aus, und hier gibt er 20.32 Uhr aus. Ist aber nicht so, weil das ist
immutable. Insofern, wenn man das Objekt ändert, kriegt man ein neues Objekt zurück. Sowas hier
wäre jetzt okay, sowas kann ich machen. Guck, und jetzt funktioniert das. Das ist das 15.32,
20.32. Also sprich, die Methoden ändern nicht den internen State von diesem Objekt, sondern geben
eine Kopie von dem ursprünglichen Objekt mit den Änderungen zurück. Jetzt fragt man sich natürlich,
wozu braucht man diesen Blödsinn? Das ist ja komplett sinnlos und Ressourcenverschwendung. Klingt
erstmal logisch, aber wenn es im Bereich Multithreading geht und du dir sicher sein möchtest,
dass ein Aufruf von irgendeiner Methode oder irgendeiner Funktion wirklich nichts ändert drumherum,
dann ist das natürlich eine praktische Geschichte. Weil, mal angenommen, ich würde dieses Time-Objekt
jetzt Multithreaded in fünf Threads verwenden, und ich will mir sicher sein, das ist konsistent und
funktioniert, und ich adde dann was, dann mache ich es ja kaputt in fünf anderen Threads, weil sich
das ja auf einmal on the fly ändert. Und vielleicht hat es auch Probleme, wenn ich was adde und
auslese gleichzeitig, dass es nicht funktioniert. Deswegen haben die sich gedacht, ok, gerade für
solche Sachen sind Immutable-Objekte gut, weil ich kann mich darauf verlassen, dass das hier immer
das Gleiche bleibt, auch wenn ich was ändere. Ich glaube, das hat man verstanden, oder? Und da wollen
sie jetzt halt ein bisschen mehr Fokus darauf legen, dass es einfacher wird. Finde ich eigentlich eine
ganz gute Idee. Genau. Notizblock ist raus. So, genau, also das geht jetzt hier mit Init,
sprich, ich kann das einmalig füllen und danach nie wieder. Und wenn ich es ändere,
wenn ich es ändere, dann muss ich es so ändern, wie hier, quasi neues Objekt anlegen. Ok, was
haben wir sonst noch Neues? Init, Accessories and Read-Only-Fields. Monkey S, was ist das hier
für eine Ausgeburt der Functional Programming-Hirn? Was ist mit der Uhrzeit? Wieso? Was soll mit der
Uhrzeit? Ach so, oben rechts, die ist falsch. Übrigens, die Uhrzeit geht nicht. Warum ist die
Uhrzeit kaputt? Hä? Moment, warum hat VLC gestoppt? Stimmt das denn jetzt wenigstens?
Nee, das stimmt da hinten und vorne nicht. Moment, Moment. Open, Network Stream. Yes.
Ah, yes. Also man, die Uhrzeit sind immer noch zwei Stunden falsch, aber jetzt stimmt
wenigstens die Anzeige oben. Ok, was gibt es noch für neue Features? Init, you are allowed
to mutate Read-Only-Fields with enclosing class chests, like you can in a constructor. Ok,
jetzt wird es wir. Was machen die hier? Hä? Liegt der ESP neben dir? Ja, fast. Ok, also
Finger League. Äh, Moment, Moment. Moment. Al. Ganz richtig. Exzellent sein, Schneider
League. Wieso lädst du ein RTSP-Stream, wenn der ESP direkt neben dir ist? Ja, dreimal
darfst du raten. Also ok, was die jetzt hier genau vorhaben, erschließt sich mir erstmal
nicht. Das ist wahrscheinlich zum Initialisieren, also sprich, dass ich, ah, dass ich das setzen
kann. Ich kann das, ach, jetzt verstehe ich, ich kann das quasi durchreichen. Ich kann
quasi, wenn ich das setze, durchreichen zu einem privaten Feld. Ok, ja. Das ist übrigens
hier auch BigBrain, neue C-Sharp-7-Schreibweise. Das ist richtig cool, ist auch was, wo sich
C++ was abschneiden könnte. Und zwar, man guckt, ob, ähm, nicht Null übergeben wurde
als Wert zum Setzen. Und wenn Null übergeben wurde, dann wirft man hier eine Exception,
die auch einen ordentlichen Namen hat. Also sprich, ich krieg da eine Argument-Null-Exception,
wo genau drinne steht, ok, Argument-Null for First Name. Das ist eigentlich auch ganz praktisch,
wo man grad wieder bei schönen Fehlermeldungen sind. Also, nicht alle.NET C-Sharp-Fehlermeldungen
sind gut, aber die meisten. So, was haben wir jetzt? So, Rackets. Das hab ich auch in
dem Video gesehen. Die haben jetzt. Das ist doch anders jetzt. Das haben die doch geändert.
Genau, man kann jetzt sagen, Rekord. Das stimmt nicht so genau. Das ist jetzt anders. Die
Rackets. Stimmt nicht mehr. Oder das ist neu. Ehrlich gesagt, keine Ahnung, was davon stimmt.
Ich hab ein Video gesehen, da konnte man das so machen. Public Record Person. Das ist eine
Klasse, die ein bisschen mehr wie ein Instruct funktioniert. Wann man das braucht, müsste
man mal wirklich genau schauen. Was haben wir noch für Features? With Expressions. Gut,
das ist das Gleiche wie oben. Man kann es ja initial nicht mehr ändern. Und damit leg
ich quasi ein neues Objekt an, was diesen Namen enthält und das alte kopiert. Wieso
nicht einfach einen Struct nehmen? Weil es immer noch Klassen, also Structs, wenn du
immer automatisch kopiert, wenn du die übergibst. Und das ist immer noch Reference, allerdings
Immutable Reference. Mit ein paar anderen Sachen. Frag mich nicht genau. Da müsste
ich mir jetzt eben die Teilen mal angucken. Also, das ist immer noch Reference, aber es
ist. Equals beispielsweise geht auf die Properties anstatt auf die Reference. Man könnte auch
einen RevStruct eigentlich nehmen. Ich weiß nicht genau, wie und wann. Das muss ich mir
im Detail angucken, wenn das Final ist und wenn das rauskommt. Das ist im Prinzip gehört
alles dabei. Das gehört auch alles dabei. Ach ja, das ist jetzt auch neu. Das wird verwirrend,
Leute. Das wird übelst verwirrend. Normalerweise sieht ja ein Programm, ein Minimalprogramm
in C Sharp so aus. Hier. Und es ist jetzt erlaubt, dass man im neuen, in C Sharp 9, darf
man sowas hier machen. Das ist, das ist gültiges, das ist gültiges C Sharp 9. Rust habe ich
mir vor einer ganzen Weile angeguckt, ja. Das ist jetzt gültiges C Sharp 9. Man darf
jetzt Sachen Top Level schreiben. Okay, ich glaube, da haben die auch ein Beispiel für.
Genau. Man darf Sachen jetzt Top Level schreiben. Man muss die Sachen nicht mehr einfach nur
der Form halber in irgendwie den Namespace und Static Main verpacken. Das Problem, was
ich dabei sehe, ist, dass es auf den ersten Blick mal total ungewohnt ist für C Sharp
Programmierer. Das kann sein, dass es in C Sharp 8 auch teilweise schon geht, aber auf
jeden Fall nicht so. Und das Beste ist, dass es auch nach wie vor nur syntaktisch, syntaktisch
das Ganze besser macht. Unter der Haube kommt immer noch sowas hier raus, weil das kann
man auch nur einmal machen, hat er zumindest in dem Video gesagt. Ah ja, ob ich das verwenden
werde, sei mal dahingestellt. Aber man sieht, wo die Reise hingeht, die versuchen, die Sachen
einfacher zu machen. Also, dass man weniger schreiben muss und das finde ich eigentlich
eine sinnvolle Sache. So, Improved Pattern Matching, das gucken wir uns jetzt nicht im
Detail an, weil das wirklich übels Brainfuck ist, wenn man das wirklich, also wenn man
das mal übertreibt. Das verwende ich eh relativ selten. Das Einzige, was ich Pattern Matching
verwende ist in Ifs. Das Einzige, was ich an Pattern Matching verwende ist in Ifs. Irgendwie
keine Ahnung, If. Warte mal, hier irgendwie keine Ahnung. B, an dem Moment, war. Ja und
test gleich true, irgendwas, mir fällt jetzt nichts ein. So kann, dass ich dann teste irgendwie,
test ist sowas und test gleich gleich, keine Ahnung, test oder so. Also solche Sachen dafür
verwende ich das manchmal, aber ansonsten verwende ich relativ wenig Pattern Matching.
Aber das ist Gewöhnungssache, ich denke mal, dass da schon praktische Sachen dabei sind.
Ja, aber Flo690, es geht nur einmal, es geht nur einmal. Also sprich, man kann nicht mehrere
Top Level Methoden haben, dann meckert er. So, Simple Type Patterns, Relational Patterns.
Okay, jetzt gibt es übels Brainfuck, das gucken wir uns jetzt nicht alles im Detail an.
What the fuck? Oh, da wird es Big Brain. Das muss ich mir im Detail angucken, das kriege
ich jetzt nicht so aus dem Ärmel geschüttelt. Genau, und das ist die neue Syntax für diese
Struct Klassen quasi, die, die, die zwar in dem anderen Artikel irgendwie anders, keine
Ahnung. Das hatten wir schon in the only Setter, Top Level Statements hatten wir auch schon,
Pattern Matching Enhancement hatten wir auch schon, Performance und Interop immer gut.
Bald ist er dort nicht C Interop besser als der C++ C Interop. Ach ja, das habe ich auch
in dem Video gesehen, das ist jetzt neu. Man kann jetzt wohl Sachen anlegen, ohne dass man
hier hinten nochmal den Typ nennen muss. Ist eigentlich auch ganz cool. Also sprich, ich
gebe hier vorne den Typ und dann kann ich sagen New, ohne dass ich den hinten nochmal
hinschreiben muss. Also sprich, der weiß, dass ich hier eine New Weather Station anlegen
will, ohne dass ich hinschreibe New Weather Station. Das hat bestimmt ziemlich viel Gehirn
gekostet bei denen, dass das so funktioniert. Auf der anderen Seite bin ich mir nicht so
ganz sicher, ob ich das gut finde, weil normalerweise machst du ja hier vorne VAR anstatt den Namen
hin. Es ist glaube ich ganz gut, wenn man das als Parameter verwendet in einem Funktionsaufruf.
Also wenn man einfach nur kurz was anlegen will, was man in eine Funktion reinschiebt,
dann ist das so halt ein bisschen kürzer. Man sieht, die haben sehr viel Wert darauf
gelegt, dass die Sachen halt insgesamt kürzer werden. So. Die C Sharp 9 gucken wir uns dann
im Detail an, wenn es draußen ist. So. Also, wo haben wir denn aufgehört gestern? Für
alle die gestern nicht dabei waren. Also. Ich versuche das nochmal kurz zusammenzufassen.
Ich uploade mal kurz den Kram hier. Vorgestern. Nee, gestern. Doch. Doch, gestern haben wir
das gemacht, oder nicht? Oder haben wir das vorgestern gemacht? Nee, vorgestern haben
wir das gemacht. Stimmt. Stimmt, vorgestern. Warte mal, zeige ich mal her. Oblors, vorgestern.
Ich finde das so schlecht, dass man hier nicht so ewig rumklicken muss jetzt. So. Also, das
haben wir gemacht. Tatsächlich, ja, das haben wir vorgestern gemacht. Ja, okay. Verstehe.
Alles recht. So. Erst mal ein Serial Monitor an, dass man was sieht. So. Wunderbar. Heap
size. Alles gut. Also, was wir gemacht haben ist, wir haben einen Mini-Web-Server programmiert,
der Folgendes machen kann. Ich zeige den mal. Ich erkläre mal kurz, was das macht. Also,
was der Sinn, der Sinn dahinter ist. Was hat der für Schmerzen? Ich meine, es geht ja
schließlich. Ich habe es ja gerade hochgeladen. Ja, also, wir haben den Web-Server angelegt.
Den kann man folgendermaßen starten. Gibt man einen Port und später, für Basic OS,
übergibt man ihm den Passwort und den Username und Passwort. Und was wir im letzten Stream
gemacht haben ist, wir haben den Web-Server so weit programmiert, dass man statisches
HTML vom Flash aus liefern kann. Hier nehme ich diese Index-HTML-Seite. Da ist nicht allzu
viel drauf. Und das Ganze halt über SSL, also sprich, dass das halt verschlüsselt ist,
und multithreaded. Also, zum Beispiel, wenn man jetzt hier auf die Seite geht, habe ich
das wieder, ich glaube, ich habe es wieder gelöscht. Na super, ich habe es gelöscht.
Wir haben nämlich gestern noch was anderes ausprobieren. Ich kommentiere das mal, ich
kommentiere das mal schnell wieder, schnell wieder ein, dass ich es euch im Browser zeigen
kann, dass das überhaupt funktioniert. So. Ist das richtig? Keine Ahnung. Upload. Ne,
das ist falsch. Moment. Ah. Stopp. Das ist falsch. So. So, abbrechen, nochmal uploaden.
Also, der kann jetzt statische Webseiten ausliefern, und zwar über eine verschlüsselte Verbindung.
Ich zeige euch das jetzt auch gleich mal im Browser, dass man sieht, dass es funktioniert.
Was wir heute machen ist, ich versuche dem, also erstmal, dass wir einen ganz simplen
Get- und Post-Request parsen können. Vielleicht noch für den Post die Content-Length rausholen
oder so. Und, dass wir Basic Auth hinbekommen. Da bin ich ja mal gespannt, ob wir Basic Auth
hinbekommen. So, wenn man jetzt den Browser aufmacht und geht jetzt auf die IP von der
Kiste hier, also von dem Controller. Ups. So, man geht jetzt auf die IP. Das ist 125,
glaube war das, oder? Was hat er für eine IP gekriegt? Wi-Fi Connected Max, super. Ah,
hier. 1125. So, Moment. Moment, HTTPS 4433. Und jetzt bekommt man theoretisch eine Webseite,
die ich übrigens falsch auslieferte. Text HTML wäre das Richtige gewesen. Dann würde
es auch funktionieren. So, aber ihr seht schon, man bekommt eine Webseite ausgeliefert und
die Webseite liegt auf dem Flash. Also, die absolute Basic Funktionalität, die wir brauchen,
die haben wir schon. Man kann über den Webserver, TLS, SSL verschlüsselt, kleine Webseiten
ausliefern. Das ist alles, was wir brauchen. So, erste Mal. Als nächstes basteln wir Basic
Ords, also sprich, dass man sich anmelden muss. Gucken wir mal, ob es jetzt funktioniert.
Exzellent. Da ist unsere Seite. Und by the way, LullW größer KeckW. Also. Den ganzen
Mist schmeißen wir wieder raus, weil das brauchen wir eigentlich gar nicht. So, Basic Ords.
Also, ich hab mir das folgendermaßen vorgestellt. Also, man übergibt dem Ding hier am Anfang
ja eine Username und ein Passwort. So, und Basic Ords funktioniert folgendermaßen.
Basic Ords-Example. Ich brauch mal irgendwie Wikipedia eintrauen oder so. Hier, die ist
eigentlich ganz gut. Genau. Das ist ja ein absolut mieses Bild. Ist das abfotografiert
mit einem uralten Siemens-Handy oder so? Okay, die Beispiele sind übelst kacke, dann zeige
ich euch selbst. Also, wenn man eine Anfrage macht an einen Web-Server, da kann man einen
Username und ein Passwort mit übergeben. Zum Beispiel hier, admin123456, add123456.
Und wenn ich das jetzt abrufe, oder auch nicht. Also, wenn ich das jetzt, ah jetzt, okay,
hängt, was auch immer. So, und dann sieht man, was der hier mitschickt ist, das hier
ist das eigentlich Interessante. So, da schickt nämlich ein Authorization-Header mit. Da steht
drinne Authorization Basic und dann steht so ein komisches Geschwubbel hier hinten. Und
dieses Geschwubbel ist Username und Passwort als Base64 encoded. So, also was man jetzt
gucken muss, dass Basic Ords funktioniert. Ach hier, hier haben sie glaube ich noch ganz
gute Erklärungen. Oder auch nicht. So, genau, was man jetzt machen muss, dass Basic Ords
funktioniert und das hier in den Passwort, also man möchte ja, dass hier, also wenn ich
die Seite jetzt aufrufe, soll da ein Passwort-Popup kommen, wo drin steht, ey bitte, bitte authentifizieren.
Genau, also so funktioniert das vorhin, das Client macht eine Anfrage an den Server. Server
schickt, so wird unauthorized, allerdings mit dem Hinweis, ey guck mal, du musst dich
anmelden. Dann gibt es ein Popup und, also man kann es auch gleich mitschicken, ist eigentlich
egal. Und dann schickt der Browser nochmal eine Anfrage mit diesem Authorization-Header
dahin. Und wenn das stimmt, ist okay und wenn nicht, ist es halt verboten. Das heißt, wir
müssen jetzt einen Check einbauen, der bei jeder Anfrage, also sprich, ich mach's mal
ein bisschen kleiner, der bei jedem, bei jeder Anfrage durchgeht, so. Das hier unten ist
das, was wir das letzte Mal gebastelt haben zum Handle vom SSL, das ist erstmal wurscht.
Das heißt, wir müssen jetzt bei jedem Handle-Connection, müssen wir quasi sowas hier machen, wie Check
Basic Ords oder so. Nicht Handle-Connection, bei jedem, nachdem er die Verbindung angenommen
hat, weil ansonsten, bevor ich die Verbindung nicht angenommen hab, kann ich ja die Verbindung
auch nicht lesen. Das funktioniert ja nicht. So, dann lösche ich den ganzen Krams hier
mal wieder, weil das brauchen wir jetzt gar nicht. SSL Read. Ja, okay. Das heißt, wir
machen jetzt mal sowas wie Pass Request, so. Müssen wir gleich anlegen und da stecken
wir das aktuelle Request-Objekt rein und das aktuelle Request-Objekt ist, ich bin grad
verwirrt. Moment, wo steht der Request drin? Da, da, hier, da, das brauch ich. So, also,
ich mach mal hier. Das muss übrigens, ah nee, das ist Private. Private kann, muss nicht
inline sein. Also, Void. Dann brauchen wir ein Pass Request. So, und jetzt müssen wir
aus dieser Anfrage das da oben irgendwie rausholen. Also, sprich, der Client macht diese Anfrage
hier. Oder aber er macht eine Anfrage ohne hier. So, jetzt müssen wir zwei Fälle behandeln.
Entweder, es gibt einen Authorization-Header, dann müssen wir gucken, ob das stimmt. Oder,
es gibt keinen Authorization-Header, dann müssen wir sowas hier antworten. www, authenticate,
realm, bla, blub. Wenn man das hier antwortet, HTTP-mäßig, dann macht der Browser einen
Pop-Up, das werdet ihr gleich sehen, jetzt probieren wir aus, dann macht der Browser
einen Pop-Up, wo drin steht, bitte anmelden. So, also, das heißt, wir antworten jetzt dem
Browser, einfach mal ohne zu checken, ob der Header gesetzt ist, antworten wir mit, äh,
was? War ich irgendwas verkehrt? Ach so, ja klar, ähm, das muss man als, als, äh, Referenz
übergeben, alles klar. Wenn ich das als Zeug habe, ich mein, ich könnte es auch, egal,
wir lassen es jetzt einfach erstmal so. So, jetzt muss ich gucken, jetzt muss ich, jetzt
muss ich zurücksenden, ey, mach mal Ausentifizierung. So, und jetzt hätte ich das jetzt nicht gelöscht,
dann hätte ich nur das kopieren können von unten, das war was, mbit, tls, write, hier,
write. So, und jetzt müssen wir folgendermaßen antworten, wir müssen jetzt, wir müssen jetzt
so antworten, http, 1.1, unauthorized, ok, das müssen wir antworten, wenn wir was anderes
antworten, geht's nicht, das müssen wir antworten, so, das und nicht anders, also, wir müssen
antworten, http, was, slash, 1.1, 401, an, ach du Scheiße, warum haben die das nicht
copy paste bar gemacht, hier unauthorized muss man antworten, kontrol r, kontrol n,
weil es http ist, geht nicht anders, so, und jetzt, jetzt was, www, authenticate, passt
mal auf, dass ich mich nicht verschreibe, www, authenticate, was, basic, oder was, realm,
gleich, das ist magic, ich hab keine Ahnung was das genau macht, das Bild ist gut, ja,
das ist das beste, so, und jetzt irgendwie keine Ahnung, lulw, ich weiß nicht mal für
was das gut ist, was hab ich verkehrt gemacht, Moment, ich, ich mach das, mach mal den String
hier kurz raus, auto, response, ah, hab nicht richtig kopiert, jetzt hat er hier Lehrzeichen
reingemacht, nein, du sollst keine Lehrzeichen reinmachen, www, unauthorized, geh fort, i,
keine Lehrzeichen, stimmt das jetzt, basic, realm, gleich, keqwe, alles klar, so, und
jetzt können wir das senden, ssl, response, und dann strlen, response, so, und jetzt müsste
ich den popup im browser kriegen, wenn ich das richtig gemacht hab, was hab ich falsch
gemacht, ok, ist es konst anscheinend, ja, mach nicht wegen, wenn du das so haben willst,
dann ist es das, so, so, mal uploaden, jetzt müsste der browser mich eigentlich fragen,
dass ich mich anmelden will, boah, das ist anstrengend, da muss man wirklich auf jedes,
auf jedes Zeichen gucken, dass das funktioniert, oh, huge upload speed, massive, kurz was zu
trinken einchecken, chat, wenn ihr irgendwas wissen wollt, haut rein, ich muss mich da
nicht unbedingt die ganze Zeit drauf konzentrieren, weil dann muss ich nach einer Stunde ausmachen,
so, also, jetzt gucken wir mal, ob das funktioniert, wenn ich jetzt die Seite lade, müsste er mich
am Passport fragen, oder auch nicht, ah, ich weiß, was ich vergessen hab, ich weiß, was
ich vergessen hab, ich hab das allerwichtigste vergessen, weil, das ist ja HTTP, ich hab
was ganz wichtiges vergessen, pass mal auf, wer, wer, wer sieht's, vielleicht sieht's
jemand, weil ich vergessen hab, wir müssen das abschließen, sonst geht das nicht, so
muss ein HTTP-Request enden, wenn ein HTTP-Request so nicht endet, geht's nicht, eh, response,
response, so, ich hoffe, jetzt funktioniert's, wir probieren das erstmal mit Curl aus, was
Curl sagt, HTTPS, ja, HTTPS, oder was meinste, nee, nee, hab ich, das hab ich eingegeben,
passt, oder, ja, ja, hab ich eingegeben, okay, der antwortet richtig, jetzt probieren wir
das mal, jetzt probieren wir das mal mit dem Browser, ah, guck mal, und warum, weil ich
das hier vergessen hab, ein HTTP-Response muss nicht, dom-pc, das ist eine exquisite,
excellent, five-head-big-brain-frage, oh, ich hab den Chat nicht auf, er fragt, warum
backslash r, backslash n und nicht backslash n, weil das im HTTP-Protokoll so definiert
ist, also das ist nicht wie Zeilenendung und Linux Windows, wo man sich das mittlerweile
ein bisschen aussuchen kann, das ist so definiert, so muss ein HTTP-Request aussehen, also das
muss so sein, das haben die mal irgendwo in irgendeinem Standard-Dokument so reingeschrieben,
dass ein HTTP-Request gefälligst mit character-turn-newline, character-turn-newline aufhören muss, geht
nicht br, nee, br geht nicht, weil, warum geht br nicht, big-brain-Chat, fünf Sekunden
Bedenkzeit, mitschreiben, morgen gibt's Klausur, weil es kein HTML ist, genau, korrekt, so sieht
es aus, der Chat ist mal wie immer absolut richtig, richtig massive-brained, genau, weil
es kein HTML ist, es ist in dem Fall noch ganz normales HTTP-Text, hier in diesem Response
hier würde unten drunter, jetzt würde HTML kommen, hier würde jetzt das HTML kommen,
aber das hier ist noch der ganz normale HTTP-Request, äh, Response und das muss so aufgebaut sein,
weil irgendjemand sich vor 50 Jahren oder so mal, nee, ja, doch, keine Ahnung, vor 50
Jahren jetzt einfach mal vor 50 Jahren auf die Idee gekommen ist, dass eben HTTP so aussieht
und es muss so gemacht werden und wenn man das nicht so macht, dann funktioniert es nicht,
das ist ja auch das Schöne an Standardisierungs-Sachen, wenn man sich nicht dran hält, dann geht's
einfach nicht, und wenn man sich dran hält, sollte es nach Möglichkeit überall gleich
funktionieren, genau, es muss immer eine Leerzeile sein, beziehungsweise es muss character-turn-newline
sein.
Ich hab noch nie ausgedacht, ob es einfach mit zwei Newlines geht, aber ich denke mal
nicht, weil in jedem Beispiel siehst du, dass du das erfährst, warum benutzt du hauptsächlich
Pointer-Referenzen?
Ich benutze das, was funktioniert, ich bin jetzt nicht so, äh, der C++-Freund, dass
ich sagen will, ich muss das alles 100 pro C++-Next-Level-Shit machen, was ist der Unterschied
zwischen der Referenz und dem Pointer?
Achso, das hier, das wäre jetzt eine Reference, wo ist denn da der Unterschied?
Zum ernsthaft, ich hab keinen Plan, und jetzt, warum, warum gibt's da beides, warum gibt's
da beides, hä, aber wo ist der Unterschied, ich mein, letztendlich ist eine Reference
auch ein Pointer, oder?
Okay, ich weiß nicht, weil C++-Freifer exquisite C++, ne, das verstehe ich nicht, keine Ahnung,
der Unterschied, der ist mir nicht geläufig, keine Ahnung, woran das liegt, also was das
ist.
Vielleicht ist ja eigentlich mal BigBrain im Chat, weil du bei Referenzen direkt auf
dem Object arbeitest, also im Prinzip, wenn ich das richtig verstehe, was Cheat95 sagt,
heißt das, eine Reference ist ein Pointer, der für mich schon automatisch dereferenziert,
und ein Pointer ist eine Adresse, die ich selbst dereferenzieren muss, ja, oder, also
wenn ich eine Reference nehme, ist es ein Pointer, den C++ für mich schon wieder zum
Objekt umwandelt, und ein Pointer muss ich das selbst machen.
Also ist das quasi eine Abkürzung, also ist im Prinzip, ist das hier eine Abkürzung,
wie wenn ich das von Hand mache, okay, aber damit kann ich leben, aber das ist gut zu
wissen, deswegen mache ich so Streams auch, da lernt man unter anderem doch jeden Stream
irgendwas.
Also, so, jetzt können wir hier irgendwas eingeben, jetzt können wir zum Beispiel sagen,
keqw, blub, ho, oh, ja gut, logisch, ich überprüfe das ja gar nicht.
Ach, das muss auch nicht, das kann auch nicht Null sein, okay, dann ist es natürlich gar
nicht mal verkehrt, das als Reference zu machen, das finde ich eigentlich ziemlich gut, okay,
das mache ich, das finde ich nice, das machen wir, das gefällt mir, also sprich, ich nehme
jetzt hier Reference, hier nehme ich auch eine Reference, und dann übergebe ich hier
das Objekt selbst, und hier muss ich dann, weil der möchte ja explizit hier einen Pointer
haben, das ist ja C, und, okay, so, jetzt muss ich auch gucken, dass FD funktioniert,
und FD, mal gucken, ob das jetzt klappt, wo übergebe ich FD, kleinen FD, hier auch per
und, per Reference, excellent, ne, oh je, ach, Moment, das ist jetzt ein Pointer, jetzt
muss ich den Pointer vorher erstmal, das ist aber auch nicht schön, oder, auch nicht, ob
mir das jetzt so viel besser gefällt, ehrlich gesagt, weil das hier muss ich ja als, das
kann ich ja nicht als hier Stack-Allocated-Dings, weil das geht ja hier aus dem Scope, und dann
ist es weg, oder merkt er sich das, der macht da keinen Reference-Count oder sowas, ne, macht
der da irgendeinen Reference-Count, also sprich, wenn ich da jetzt, ja, mal angenommen, ich
mach da jetzt sowas, merkt er sich das, kapiert er das, ne, ne, ne, oder, das kapiert er nicht,
das kackt jetzt ab, das kackt ab, guck mal, ich kann das hier auch gar nicht übergeben,
ah, ne, Free, doch, und, oder muss ich hier, muss ich hier dann auch per und Captchern,
hä, also wenn das jetzt funktioniert, ne, Moment, das glaube ich nicht, das kackt ab,
das muss er, also das, das wird dann, da würde ich die Welt nochmal verstehen, wenn das jetzt
funktioniert.
Macht das, das macht doch garantiert keine Reference-Count-Geschichten für mich.
Da müsste ich ja irgendeinen Shared-Pointer draus machen, so, Moment, Curl, oh, ne, siehste,
siehste geht nicht, das ist aber auch klar, dass das nicht geht, das kann nicht gehen,
weil das hier ist, hier geht es aus dem Scope und wird aufgeräumt, das ist, das gibt es
gar nicht mehr, das Objekt danach, ok, das muss, ok, dann, dann ist das prinzipiell schon
mal richtig, was ich hier unten gemacht hab, dass man hier sagt, ok, aber dann gefällt
es mir auch nicht wirklich besser, ehrlich zu sein, ey, vorbei, probieren wir mal aus,
jetzt Upload, jetzt müsste es funktionieren wieder, weil jetzt wird das hier, äh, quasi
nicht lokal in der Funktion angelegt, sondern so, dass es hier nicht gelöscht wird, wenn
es aus dem Scope geht, deswegen muss ich jetzt ja auch von Hand löschen, so, mal gucken,
ob das jetzt funktioniert, wenn nicht, mache ich einfach die Steuerung Z-Org hier, bis
es wieder funktioniert, funktioniert, nice, gut, ähm, excellent, ich weiß zwar nicht
genau, ob das jetzt besser ist, aber, ja, wir gehen einfach mal noch voraus, dass es
jetzt besser ist, ich mein, was richtig, oh, wir machen jetzt, jetzt, Leute, big brain
C++, wir machen jetzt was anderes, wir machen jetzt, so, standard, shared pointer, oh, oh,
oh, ob das funktioniert, so, standard, shared pointer, new, das da, äh, und jetzt müssen
wir das aufräumen, da können wir uns nämlich den ganzen Kram spannen, oh mein, C++ Lambda
Syntax, ah, Hilfe, ne, so, so, so, oh je, äh, ah, so, also, was muss man da jetzt übergeben,
ne, das müssen wir auch noch runter machen, dass es richtig eindrückt, excellent, so,
auto, so, das ist das Object zum löschen, da sagen wir, delete o und, und free, free
o, sehr gut, so, und jetzt sollte er das komplett automatisch handeln, das heißt, ich brauch
kein Delete mehr, und ich brauch hier kein Delete mehr, was hat er jetzt für Schmerzen,
ah, äh, hier brauch ich den raw pointer nochmal, oder, oder kann man da sowas hier machen,
ne, ne, kann man da sowas machen, oh, ey, das geht, alter, was ist das, was zum, ok,
ne, ne, das machen wir nicht, wenn ich das jetzt hier richtig erkenne, ist das dereferenzieren
und dann die Adresse von, ach du große, so, dass sowas überhaupt erlaubt ist, dass sowas
valid C++ ist, so, so, und hier übergeben wir jetzt den shared pointer direkt, bam,
ob das jetzt funktioniert, so, handle connection, und da brauchen wir jetzt aber keine reference
übergeben, ne, das kann man ja direkt, das kann man theoretisch direkt moveen sogar,
das ist, oh, jetzt ist aber immer sowas von modern OP C++ hier am Start, so, und jetzt
kann man das sogar moveen, ja, so, und, ne, ne, Moment, das geht aber doch hier, also,
ich kann das doch, wenn ich das hier auf dem Stack erzeuge, dann ist es hier weg, weil
hier ist das Scope zu Ende und hier starte ich einen neuen Thread, wo ich das drin verwende,
also, das geht hier aus dem Scope und dann ist es hier ungültig, deswegen, deswegen,
das habe ich ja im Zwischen durch probiert, das geht ja nicht, aber mit dem shared pointer
müsste es gehen, weil der macht ja reference count, so, ok, ok, big brain, so, mal gucken,
ob das jetzt funktioniert, das kann ich ja einfach so übergeben, ok, Moment, das funktioniert
jetzt nicht so einfach, das glaube ich nicht, dass es einfach funktioniert, Moment, upload,
upload, upload, muss bei dem oberen nicht auch noch O als Parameter rein, wo, ist doch hier,
ah, ne, Moment, ist kaputt, es ist kaputt, ach ja, natürlich, lull, hast recht, jaja,
so, habe ich, ja, natürlich, ist verkehrt, ob das jetzt funktioniert, jetzt bin ich ja
mal gespannt, das wäre jetzt zumindest die deutlich C++igere Variante, das kackt jetzt
ab, ah, geht nicht, irgendwas verkehrt, ja gut, ich übergebe jetzt ja hier auch, natürlich
geht das nicht, ich übergebe hier auch die Referenz auf den shared pointer, das bringt
mir nichts, ich brauche hier das da, so, das war es eigentlich, so, mal gucken, ob es jetzt
funktioniert, ne, Spaß an C++ werde ich nie bekommen, aber es kann weniger nervig werden,
das ist aber auch das einzige, was möglich ist, so, mal gucken, mal gucken, pp hands
oder nicht, es geht, alles klar, doch, also das, jetzt ist ja schon mal hier, richtig,
richtig, exzellent C++, was, diese paar Zeilen ab 102, da bekommt man ja Angst, echt, zeig
mal her, das hier, ja, vor allem das hier sieht absolut grausam aus, kann man das nicht
einfach in einer Zeile machen jetzt, das erlaubt, mach da mal ein Autoformat mit, vielleicht
ein bisschen besser, okay, sehr gut, so, die Fisch, also wirklich schön aussehen tut
das nett, aber was soll ich anders machen, ne, okay, exzellent, er sollte sich jetzt
automatisch aufräumen, da müssen wir jetzt mal gucken, ob der sich auch wirklich automatisch
aufräumt, wir geben jetzt mal hier, ach so, machen wir schon, Heapspace, wir geben ja
schon Heapspace aus, alle 500 Millisekunden, gucken wir mal, ob der Heaps, ob das auch
ordentlich freed wird, wir gucken mal, ob das ordentlich freed wird, äh, sieht nicht
so aus, als dass das ordentlich freed wird, wir haben jetzt, wir haben jetzt Heapspace,
ich mach mal ein bisschen größer, Leute, wisst ihr was, ähm, machen wir uns mal hier
so ein Fenster auf, wo man besser was sieht, jetzt hier erkennst du ja gar nix, ähm, Device,
Monitor, oh, äh, oh, ich hab das hier nicht verknüpft, ähm, hier, Plattform, IO, Bin,
muss man mal in das, what, ach, ich bin im falschen Verzeichnis, vielleicht macht er
deswegen nicht, ah gut, so, hier unten erkennt man jetzt nämlich ein bisschen besser was,
hier unten erkennt, jetzt erkennt man ein bisschen besser was, also, das ist mein freier
Heapspace in Byte, also so ungefähr 168, 168 Kilobyte, so, wir gucken jetzt mal, ob der,
ob der, äh, alles ordentlich freigibt, nach dem, was ich hier gewusstet hab, also er sollte
jetzt, nachdem ich das abgebaut hab, also, die Verbindung aufbauen, Verbindung abgebaut
haben, sollte ich genauso viel Speicher haben, wie vorher, ja, oder, meine Damen und Herren,
meiner schwankt ein bisschen eben, warum, aber, im Großen und Ganzen, ja, der gibt wieder
alles frei, der gibt wieder alles frei, also, ich würd sagen, wir haben kein Memory Leak
produziert, exzellent, ich hab zwar nur die Hälfte kapiert, von dem, was ich gemacht
hab, aber, es funktioniert, sehr schön, warum, warum, checkt der hier eigentlich nicht,
dass die, was zeigt der hier für komischen Blödsinn an, Y5, was auch immer, ok, also,
kein Memory Leak, das ist doch schon mal gut, ja, das ist auch gut, ok, im Moment, wenn
man die Verbindung abbricht, dann auch kein Memory Leak, ich bin begeistert, wir haben
das geschafft, ok, jetzt waren wir die Hardcore Variante, 5 Sekunden lang connecten, maximal
5 Sekunden lang connecten, und das machen wir jetzt 100 mal in einer Schleife, also, oh,
wie machen wir das jetzt am besten, also, erstmal schalten wir den Output ab, Def Null,
das heißt, wir kriegen kein Output, das ist ok, sonst bammt uns das ganze voll, ok, so,
und jetzt sagen wir mal, wir machen, wir starten mal 6 Stück, jetzt kommen die, jetzt kommen
die Bash Skills, wir starten jetzt mal 6 Stück, mehr geht nicht, mehr, da ist der Speicher
voll, so, vor, in, was weiß ich, 1, 2, 3, 4, 5, 6, du, das da dann, und das jetzt im
Hintergrund, so, da startet es jetzt 6 mal, und mal gucken, was passiert, bamm, ja, ja,
ja, ok, es geht nicht alles, es geht nicht alles, aber, ich glaube, wir haben keine Memory
Leaks, oder?
Ich glaube, wir haben keine Memory Leaks, wir haben irgendwie so 860, 67, ach, da noch
was, 1, 6, 7, ok, das ist wohl noch nicht so komplett spread safe, wie ich gedacht habe,
was hat er denn, was hat er denn für ein Fehler, was, Moment, jetzt müssen wir mal den Fehler
angucken, vielleicht hat er auch einfach, vielleicht hat er auch einfach zu wenig Speicher,
vielleicht hat er auch zu wenig Speicher, das kann auch sein, also, der ist beim Display
abgekackt, ich glaube, der hat zu wenig Speicher gehabt, kurzzeitig, ich glaube, der hatte
kurzzeitig zu wenig Speicher, ich glaube, der hat zu wenig Speicher gehabt, und konnte,
und konnte jetzt irgendwas nicht allocaten, und ist verreckt dabei, gut, vielleicht sind
6 Verbindungen auch ein bisschen viel, 6 gleichzeitig Verbindungen, vielleicht, 6 gleichzeitig Verbindungsversuche
sind vielleicht ein bisschen viel, probieren wir mal mit 3, 3 Stück gleichzeitig, so, was,
warum hat er bei 3 Stück schon Memory Allocation failed, aber ich würde sagen, wir haben kein
Memory Leak produziert, also, ich würde sagen, wir haben kein Memory Leak produziert, oder,
da kommt am Ende, da kommt am Ende ungefähr das gleiche immer wieder raus, so, ungefähr,
so 100, also 167 irgendwas, 167 irgendwas kommt da raus, wobei, jetzt sind wir, oh, jetzt
sind es nur noch 166, vielleicht haben wir doch irgendeinen Memory Leak produziert, ich
habe keine Ahnung, exzellent, ok, jetzt, jetzt, jetzt machen wir die Hardcore Variante, While,
True, Do, Achtung, Sleep, 10, Done, so, wir lassen, wir lassen die 3 Verbindungen jetzt
einfach mal am Stück laufen, so, mal gucken, was passiert, gucken, wie viel wir da übrig
haben, ok, jetzt sind wir bei 166 KB, so, 10 Sekunden warten, Next, Bam, 100, 155, oh,
so, alles geklärt wird da nicht, aber warum, wo soll ich denn da, bitte schön, da hab
ich, ich kann da gar keinen Memory Leak, ich mach ja da nichts, außer an der einen Stelle,
und eigentlich sollte das klärt werden, vielleicht da die Librarien in Leak, ja, tja, wo, wo
leake ich hier irgendwas, man das einzige, wo ich irgendwie was heapmäßig anlege, ist
das hier, sonst nirgendswo, warte auf die Garbage Collector, wobei, guck mal, jetzt
hat er sich eingekriegt, oder, jetzt hat er sich eingekriegt, kann das sein, ich hab
doch irgendwas, was Fehlermeldungen ausgibt, ich hab doch irgendwas, was Fehlermeldungen
ausgibt, aber das sollte eigentlich automatisch aufgeräumt werden, na, hier dürfte eigentlich
nichts überbleiben, vielleicht sollte ich hier mal, so machen, ich hab jetzt eigentlich
kein Bob Memory Leaks zu suchen, 688, was, hä, jetzt ist wieder mehr geworden, jetzt
ist wieder mehr geworden, und jetzt ist wieder ein, also, so ungefähr kommt da das gleiche
raus, der ist jetzt bei 164,900, vielleicht braucht der mal ne Weile, bis er alle möglichen
Sachen einmal durch ist, alle möglichen Codes, Ifs, und irgendwas, kein Schimmer, was der
für Schmerzen hat, aber ich glaube, so ungefähr bleibt es jetzt gleich, immer so um die, ich
blick nicht durch, jetzt hat er sogar 165 auf einmal wieder, äh, kurze Mal zu einem
Juby Key und Krypto Hardware Wallets, ist ne super Sache, haben wir auf der Arbeit auch
für SSH Keys, jetzt wirds wieder mehr, ok, wisst ihr was, ich ignorier das ganze jetzt
einfach mal, exzellent, wunderbar, alles klar, lassen wir so, perfekt, absolut keine Memory
Leaks zu erkennen, Mini Cup, so, ähm, so weiter, jetzt mal zum eigentlichen, oh wisst ihr was,
was sein könnte, ich hab da ne Idee, guck mal, wir sind ja, also, wir sind, hier sind
wir auf jeden Fall Threadsafe, weil hier gibts nur, nur immer, das ist eh nur ein Thread,
der da drauf zugreift, so, hier sind wir auch Threadsafe, das hier ist auch immer nur ein
Thread, nämlich der hier, aber ab hier wirds Multithreaded, das heißt, guck mal, hier
greif ich zu auf, äh, wo hab ich, Moment, seh es grad nicht, bin zu blöd, hier, hier
greif ich auf so ne globale Variable, wo die Config für den Server drin steht zu, vielleicht
hat der Schmerzen damit, wenn ich Multithreaded auf diese CONF Zugreifer und SSL Contacts
davon erzeuge, das könnte sein, dass der da mit rumspackt, vielleicht sollte ich da
irgendwie den Mutext drum machen, wisst ihr was, ich ignoriere das jetzt einfach mal,
ich schreibe hier was nicht, so, ich weiß noch nicht ob ich das mach, mal gucken, jetzt
Basic Auth wollte ich eigentlich machen, eigentlich wollte ich das hier machen, so, der Browser
fragt ja schon, der Browser fragt ja schon, also, irgendwann mal, fragt er, fragt der
Browser, Connection Fail, achso ja, der hat ja die Verbindung schon gespeichert, so, das
heißt, wenn ich jetzt hier nen Curl drauf mache, dann sagt er, ich soll mich, ich soll
mich authentifizieren, guck hier, der sagt, ich soll mich authentifizieren und ich hab
mich nicht authentifiziert, deswegen muss ich jetzt zwei Sachen handeln, entweder,
entweder ich hab nen Authentifizierungsheader drin, dann gehts weiter und ich hab keinen
Authentifizierungsheader drin, dann krieg ich das hier als Response, würd ich sagen,
also, ok, dann machen wir jetzt hier sowas wie Void, Check, Check Auth, ne, bool Muster,
weil wir wollen ja wissen, ob Authentifiziert ist oder nicht, dort machen wir den SSL Kontext
rein und dann sag ich hier sowas wie Check, If, Check Auth, so und wenn es, wenn es nicht
authentifiziert ist, also sprich, wenn er es nicht authentifizieren soll, dann schick
ich das hier zurück, das hier erzeugt im Browser dieses Popup, bitte anmelden und
sag Return, weil dann wird alles aufgeholt, mit dem Request kann ich eh nicht mehr anfangen,
so und danach und hier liefer ich dann die normale HTML Seite aus, genau, also sprich,
wenn er authentifiziert ist, dann antworte ich mit HTTP 200, was auch immer, dann antworte
ich mit der Website, so, würd ich mal, ok, das machen wir jetzt, dann antworte ich HTTP
200, ok, hab ich hier mit Plain Text, ne, Text, oh ne, ich hab's mir nicht gespeichert,
ok, so, dann antworte ich mit HTTP, ok, Content, was ist das, Content Type, Content, Content
Type, Type ist, ne, ich kann nicht schreiben, Content Type ist Text HTML, ok, so und da kommt
jetzt mein HTML-Gedöns rein, also sowas hier, HTML, HTML, so, also sprich, wenn ich nicht
authentifiziert bin, krieg ich das nicht, soweit so gut, so, lull, oh, lull, gut, ja,
also von der Idee sollte der jetzt checken, wenn ich authentifiziert, wenn ich nicht
authentifiziert bin, dann krieg ich die Fehlermeldung, krieg das Popup, mich zu authentifizieren
und wenn ich mich richtig authentifiziert habe, dann krieg ich die Website als Antwort,
ist ja eigentlich ganz gut, jetzt müssen wir nur noch und jetzt kommt der eigentliche
Spaß da dran, jetzt müssen wir nur noch diesen Header hier rauswursten, also sprich, wenn
ich hier, ich sende hier so ein Authorization Header mit, das muss ich jetzt irgendwie da
raus parsen, also sprich, ich muss jetzt den Request einlesen und dann muss ich das da
raus holen, ach, du kacke, ok, also, ember, TLS, ne, was war das, read, SSL, read, SSL,
ok, alles gut, so, jetzt brauchen wir einen Buffer, Buffer von was, unsigned, unsigned
char, alles klar, machen wir, Buffer, wie groß darf die Response maximal sein, 2048 oder
so, emm, Buffer 2048, das jetzt funktioniert, so und das hier, hier kommt die Länge zurück,
was mache ich denn, was tippe ich denn hier für komisches Zeug, so und hier kommen die
Bites zurück, die ich eingelesen habe, gut, emm, das heißt, wenn ich das hier jetzt ausgebe
an der Stelle, dann müsste ich erstmal den Request und die ganzen Header einlesen an
der Stelle, ok, das machen wir jetzt mal, wie Buffer, Länge, so, achso, ne, das muss char
sein, so, also jetzt sollte ich schonmal diesen Request hier kriegen, probieren wir jetzt
mal aus, upload, also ich lese jetzt die ersten 2, achso, jaja, return false, alles nicht
identifiziert, also ich lese jetzt die ersten 2048 Bites von diesem Request ein, kommt das
denn hin, ja, das reicht, oder, hier, das sind doch, das sind doch, also ich lese, ich
will einlesen, von hier bis hier, ne, doch, von hier bis hier, das reicht, das reichen
2048, ja, ich zähle das jetzt nicht, aber das reicht, oh, was hat er für Schmerzen,
gott, ah, big brain, immer noch nicht, wo ist denn jetzt, achso, SSL, meine Güte, auch
nicht, jetzt aber, ne, hä, jaja, ist gut, ist gut, ist gut, oder doch, warum sagt er
no matching Function, aber es geht, was, ach, das geht nur für die ganze Applikation,
nicht für eins, was meinste, ok, jetzt machen wir einen Curl und gucken, ob das funktioniert,
ah, ne, Moment, ah, mein Monitor muss an, mein Serial, oh, fuck, rip, oh je, ich hab's
kaputt gemacht, äh, hab ich ihn verkehrt gemacht, was hab ich verkehrt gemacht, ok,
an, an welcher Stelle mag er denn jetzt nicht, wo, wo mag er denn jetzt nicht, ok, geben
wir nochmal die Länge mit aus, was er denn eingelesen hat, jaja, ist gut, upload, abbrechen,
neunmal neu upload, was, was ist jetzt verkehrt, hä, also, da, also, abkacken dürfte er doch
dabei jetzt nicht, Wonka Smoke, der macht doch gar nichts böses, der liest den Request
ein, hm, ah, hä, what the fuck, ah ja, aber er liest es doch ein, guckt mal, der, der
funktioniert, der liest alles ein, legt er denn einen Plan, was der jetzt für Schmerzen
hat, liegt das hier am Umwandeln oder so, jetzt, jetzt bin ich echt planlos, Stack Overflow
detected, ja, ähm, äh, pff, äh, ich hab keine Ahnung, chat, ich weiß nicht woran
das liegt, ok, ok, nochmal einlesen, wow, WTF, kann das sein, dass mein Stack einfach,
ach, meine Stack size von dem Task ist zu klein, ach, guckt mal hier, jetzt, ich weiß woran
es liegt, guckt mal, meine default Stack size ist 4096 und ich hab garantiert nicht, was
zum Teufel macht der mit dieser Datei gerade hier, also ich kann maximal 4 Kilo Byte RAM
verwenden, so, und innerhalb von diesen 4 Kilo Byte RAM, äh, will ich, schau mal 2048
für diesen Buffer anlegen, das kann ja nicht funktionen, das ist einfach zu wenig, ich
probier's mal mit 512, ob dafür genug Platz ist, wenn nicht mach ich die Stack size hoch,
ah, yes, Serious Max blickt durch, ich seh es, exellent, 512 müsste vielleicht auch
gerade noch reichen, einfach mehr RAM, ich kann dem Task, ich kann dem Task wirklich
mehr RAM geben, ey, müssen wir ja eigentlich nicht so geizig sein, ich mein, guck mal,
wir haben so eine Verbindung schon, eh, was ich 30 Kilo Byte brauche, das reicht nicht,
das wird, ok, wir machen, wir machen das jetzt so 512, wir machen, ich mach die, die Task
size mach ich jetzt größer, die Stack size mach ich jetzt größer, irgendwo hier, ne,
Stack size, was ist das doppelte von 4096, 8182, 92, was ist das für eine Einrückung
hier, what the hell, ok, mal gucken, ob es jetzt funktioniert, ist, ich glaube, ich glaube,
wir haben irgendwie RAM vom Display überschrieben, grad aus versehen, guck mal, ist jetzt blau,
ich glaub, wir haben irgendwie ausversehen grad im Speicher vom Display rumgeschrieben,
ja, kann ja mal vorkommen, so ist das halt mit Low-Level-Zeugs, ne, oh, guck mal, jetzt
geht es gar nicht mehr an, ah, doch, jetzt wieder richtig, haha, guck mal, jetzt funktioniert
es, Stack size hochgemacht, jetzt funktioniert es, excellent, kannst du nicht 4096 mal, doch,
kann ich, kann ich, es funktioniert, ah, der durfte nicht so viel RAM verwenden, jetzt
ergibt das Sinn, kein Wunder, dass der abgeschissen ist an der Stelle, ah, yes, excellent, wunderbar,
gut, also wissen wir schon mal, wir brauchen ein bisschen mehr RAM, wie viel RAM hat der,
insgesamt 520K, davon kannst du allerdings so random access mäßig für dein Sketch,
ganze plus maximal, sagen wir mal, so 260 Maximal glaub verwenden und ich kann jetzt
hier, nachdem ich das Display andert, das Display braucht ungefähr 70KB, also ich hab
jetzt noch 170K frei, also, da können wir dem, da können wir dem Task ruhig noch ein
paar Kilobyte geben, guck mal hier, jetzt funktioniert es, jetzt klappt das ganze, ich
hab natürlich ein Problem, wenn der Request länger als 512 ist, dann, egal, wir bleiben
mal, wir bleiben mal bei den Basics, ja, ok, jetzt muss ich das hier rauslesen irgendwie,
jetzt muss ich irgendwie das hier rauspasen, aus diesem, also, Authorization Basic, das
da muss ich jetzt rauspasen, die Basics, genau, ok, also, ok, wir machen da mal einen Strink
raus, damit kann man nämlich einfach mehr machen als mit so einem Charbuffer, ok, ok,
wie kriegen wir, also wir müssen das hier jetzt rauspasen, das da, das müssen wir irgendwie
rauspasen, also, ich hab da doch was, ich hab mir doch mal da, ich hab mir doch jede
Menge Stringhelpers gebaut, weil die C++ Stringklasse so lowbrain ist und fast nix kann, zeig mal
her, ist da nicht irgendwas dabei, String from Buffer, Read from File, String contains,
na gut, das kann man auch so noch relativ einfach machen, starts with, ends, bringt uns starts
with was, nee, to upper bringt uns auch nix, to lower bringt uns auch nix, String between,
oh, was hab ich mir denn dabei gedacht, was macht das denn, ich hätte mir mal einen Hilfetext
schreiben sollen, was macht das, ok, String start end, ah, ich weiß es wieder, ey, das
ist richtig gut dafür, das funktioniert, das holt einen Substring, das extrahiert den
ersten Substring, den er gefunden hat, zwischen start und ende, hast du einen Split, ja, einen
Split hab ich auch gebaut, einen Split hab ich auch irgendwo gebaut, partition, Split,
Split hab ich mir auch gebaut, wahrscheinlich die ineffizienteste Split Implementierung
aller Zeiten, aber die funktioniert, muss man ja machen, weil C++, das C++ Gremium hat
sich gedacht, ne Split Methode in unserer Stringklasse, nee, sowas, sowas, das kommt
erst mal gar nicht ins Haus, ne, so ne, das wär ja, würd man mir hier mal was ordentliches
einbauen, mit dem man auch arbeiten könnte, das wäre ja bloated, das geht nicht, ok,
das bauen wir jetzt mal, also das Helper, mal gucken, ob mein eigenes gestricktes Zeug
funktioniert, da bin ich jetzt mal gespannt, between, so, start, ok, also, start is Authorization
Basics, inklusive Leerzeichen, wenn das jetzt funktioniert, dann gifte ich 5 Subs, ich glaub
nämlich nicht, dass es funktioniert, ich glaub, ich bin da relativ safe, dass es nicht funktioniert,
ok, also, ihr müsst das klippen, ne, ihr müsst ja nicht, ich erinnere mich auch so
dran, ok, und am Ende, machen wir einfach, machen wir einfach Newline, ne, a character
newline, weil das hier ist ja ein character newline, so, also wie gesagt, wenn das klappt,
gifte ich 5 Subs, ich kann mir nämlich vom besten Bild nicht vorstellen, also, wenn das
funktioniert, was ich mir hier, was ich hier mal irgendwann zusammengewurstet hab, dann
sollte der jetzt den String rausholen, der zwischen Authorization, also das erste Vorkommen,
ich müsste mal einen Hilfetext dafür schreiben, das erste Vorkommen zwischen Authorization
Basic und Newline, also quasi, das da, ok, auto, auto, was ist denn das hier jetzt, Base
64, ist das ja, das ist Base 64 String, so, so, also, geben wir uns das mal aus, also,
wenn das jetzt funktioniert, dann passt da sich das hier raus, und ich bin mal noch nicht,
ne, Newline ist Ctrl R, Ctrl N in der HTTP, ganz sicher, weil, ich mach das hier unten
selbst, so, jetzt ist die Frage, gelten die 5 Subs schon, wenn er einfach nur das Richtige
rauspasst, oder wenn ich es noch schaffe, das Base 64 zu decoden in Admin 123456, weil decoden
ist einfach, für decoden hab ich mir auch mal was gebastelt, decode Base 64, das Problem
ist nur, jetzt müssen wir uns drauf verlassen, dass das, was ich hier programmiert hab, funktioniert,
also eigentlich sind ja die 5 Gift Subs schon sicher, weil wir wissen ja, dass wenn ich
das programmiere, dann ist das eigentlich, da geht das eigentlich immer, also können
wir uns eigentlich schon, also die 5 Subs sind so gut wie gegiftet schon, ok, Base 64,
Auto, was weiß ich, Credentials, wir gehen schon die Namen aus, oh, das ist falsch, irgendwas
ist falsch, Base 64 Decode, ah, Optional, ok, oh, da hab ich ja, WTF, was hab ich denn
hier gemacht, warum ist das Optional, ja gut, weil es Null sein kann, weil es Null, das
ist eigentlich gar nicht so blöd, was ich da gebastelt hab, Base 64, Has Value und wir
decoden das nur, wenn es auch was zurück gibt, ja, die haben jetzt ein Optional Data Type,
so, so und jetzt, wir geben das Fett in Rot aus, ob es funktioniert, Fett in Rot, wenn
es funktioniert, steht jetzt, also wenn es funktioniert, dann, ok, wenn es funktioniert,
dann steht jetzt ganz Fett in Rot da, Admin, 1, 2, 3, 4, 5, 6, so und dann ist es Return,
Return, Return True oder so, ne, ne, ne, wir geben es einfach nur mal aus, ok, mal gucken,
also Chat, das ging jetzt ein bisschen, hat er jetzt geuploadet, ach ne, was, was, was,
was, was willst du von mir, ah hier, das geht nicht, äh, ok, ok, ok, ok, ok, ok, ok,
eh, ok, wie, wie, ah ja, ich kann ja nichts ausgeben, was, eh, kein Wert drin hat, ok,
klingt logisch, so, ok, ok, gucken, ob das geht, also da müsste jetzt gleich Fett in
Rot stehen, Admin Doppelpunkt 1, 2, 3, 4, 5, 6, wenn er alles richtig aus, aus, äh,
diesen kann oh chat meint ihr es geht? ich glaube nicht
dass es geht safe ok
ich bin überrascht ok also ich hätte nicht gedacht dass das zeug funktioniert was ich da
gebastelt habe ja jetzt gibt es fünf subs jetzt gibt es fünf subs ok stufe 1 5 abos verschenken
24 95 excellent aber wisst ihr was das gute ist wenn ich subs verschenke für 25 euro kriege ich
12 euro 50 wieder also im prinzip überweise ich grad 12 euro 50 an twitch excellent im prinzip
habe ich gerade twitch 12 euro 50 überwiesen so also wir hatten glück gehabt das butter toast
rot king wall 137 zaroche.de x a pase capinus 89 excellent ok ich bin wirklich ich bin ich bin
äußerst äußerst erstaunt dass das jetzt einfach so geklappt hat ganz ehrlich ich hätte damit hätte
ich wirklich nicht gerechnet das heißt wir sagen jetzt hier return wenn die credentials gleich
wo haben wir das gespeichert gleich user und pw ah moment falsche falsche sprache
ähm ähm ähm moment user pw dann ist true ansonsten ist falls excellent
alles klar so das würde jetzt ja auch bedeuten
im prinzip nur 650 ausgegeben big brain nachgerechnet chat ist halt wieder heute
absolut too smart für diese welt ja so das ok jetzt das müsste jetzt klappen also was
haben wir denn was übergeben wir dann hier für admin 1 2 3 4 5 6 so das heißt das probieren
jetzt mal aus also wenn ich jetzt mist übergebe also admin 1 2 3 4 6 dann kriege ich nur die
fehlermeldung zurück dann kriege ich nur die fehlermeldung zurück ok gebe ich admin 1 2 3
4 5 zurück müsste ich die webseite zurück bekommen bekomme ich aber nicht warum nicht
weil ich auskommentiert habe excellent macht sehr schlau sehr schlau und ich habe noch was
vergessen kontrol r kontrol n ich weiß nicht ob was noch mal machen muss also abbrechen
liegt ja was ich schon alles geliegt habe in letzter zeit den finger den seitenschneider
mein auge in der suppe habe ich mich gespiegelt da alles was da alles geliegt wurde wieder
sich auszudenken die zahnbürste ja so viel so viel sachen geliegt ok so jetzt jetzt müsste
ich aber die webseite zurückbekommen ha ha guck mal ich bekomme die webseite zurück und wenn
ich mich falsch authentifiziere bekomme ich nur die fehlermeldung zurück genauso muss das sein
gutes problem jetzt im browser aus so also admin ein moment wir authentifizieren uns mal falsch
keck weh 1 2 3 4 5 6 beim geht nicht fehlermeldung fehlermeldung ok und jetzt admin 1 2 3 4 5 6
geht der chat keckt schon wieder anstatt einfach mal abzuwarten ob es funktioniert keck weht
chat braucht halt ein bisschen bis die verbindung steht ja da kannst du von so einer kleine kiste
kannst du da nicht so viel erwarten gerade mit tls verbindung aber nachdem es einmal aufgebaut
ist es halbwegs geschwind ja funktioniert der bsp ist langsam also bis zum kecken warten so
sieht es aus hat er schrieben gerade geruckelt hat er streben ich habe es gesehen ist es war
davon wieder am start job frames job frames ich habe es gesehen ja königung ist raus aber
solange das so bleibt ist alles gut ok exzellent ich bin begeistert so den graben hier brauchen
wir natürlich nicht das ist ja nur um zu testen ob das funktioniert es ist das ist cool also
das ist sehr schick so jetzt heißt ich kann jetzt hier schon mal checken ob alternatifizierung
geklappt hat alles klar wenn alternatifizierung nicht geklappt hat dann schicke ich dem schicke
ich den nachricht bitte alternatifizieren also sprich wenn man kein alternatifikation
header hat kriege ich schickt er den nachricht später alternifizieren und ansonsten liefer
ich die seite aus jetzt also basic aus funktioniert exzellent jetzt kommt die etwas kompliziertere
variante jetzt muss ich ja den eigentlichen request noch pasen also das da vielleicht
sollte ich mir mal eine read eine read funktion machen so was also quasi quasi das hier aber
halt ein bisschen schöner und so dass ich es wieder verwenden kann die kündigungsbestätigung
ja ich glaube kündigung ist raus ist keine keine kündigung also zumindest aber arbeitsverhältnismäßig
muss die kündigung schriftlich sein da kommst du nicht drum herum ok also weiter im text
ich bin echt begeistert dass das basic also einfach funktioniert gut bei der gelegenheit
können wir jetzt eigentlich auch gleich die webseite ausliefern lassen anstatt hier so
ein schrott anstatt hier so ein schrott zurück zu liefern liefern wir mal die webseite zurück
nämlich das ist die response read file und zwar index html als immer als string so und
hier ist das html drin html und jetzt kann ich sagen hier html kann auch einfach so was
hier machen html gleich response plus html ok das ergibt jetzt wenig sinn und plus dass
ganze abgeschlossen ist am ende c können wir nämlich gleich die richtige webseite
ausliefern und hier länge und jetzt kriege ich wieder meine lull omega lull seite wenn
ich mich authentifiziert habe nicht gzip ne ist doch nicht gzip aber gzip das ist ne richtig
gute idee das machen wir gleich noch mit dem gzip allerdings ist das dem webserver egal
weil da muss ich einfach den header schreiben content encoding gzip glaube ich wenn ich
hier content gzip encoding weiß ich was man da den header schreiben muss header content
encoding content encoding gzip muss ich da reinschreiben kann man auch noch machen
dann ist ein bisschen kleiner ok mal gucken ob ich jetzt meine lull webseite bekomme ha
da ist er wieder frisch vom flash ausgelesen omega lull sehr schön sehr gut gefällt mir
das es nimmt es nimmt gestalt an es nimmt gestalt an so wir machen jetzt mal irgend so
ne read methode sowas hier read bytes das ist immer so schön nichts sagen read bytes
so und dem müssen wir jetzt übergeben was brauchen der der braucht also der braucht
erstmal sowas hier ne ne ne ne warte mal ne ich void der kriegt als was kriegt der als
return optional oder sowas ne würde ich mal sagen irgendein optional was ist denn sinnvoll
für read bytes als return ok das muss ich mir jetzt gerade mal überlegen weil die sache
ist ja die ich muss ja ich muss ja an dieser stelle noch total viel sachen einlesen das
heißt wenn ich jedes mal von hand diesen ganzen read kram machen muss ist doof weil
ich muss erstens erstens muss ich den fall abfackeln wenn mal nicht die sache alles in
ein buffer passt und ich muss den fall abfackeln wenn es einen fehler gibt deswegen machen
wir sowas read bytes hier ssl und das können wir uns das können wir uns das copy pasten
wir uns mal da nuf das können wir da oben auch gebrauchen read bytes also immer 512
512 buffer ist ok ich mein das geht ja schnell in der schleife da brauchen wir auch nicht
so ein großes deck size nicht so viel ram also das heißt wir machen jetzt mal sowas
mal gucken ob das klappt was ich mir jetzt hier gerade vorstelle also wir lesen jetzt
ein wir lesen jetzt ein bis ich glaube der sound ist der sound ist vorbei irgendwas anderes
noch an ja exzellent so also wir lesen jetzt ein solange das hier ähm was machen wir größer
null kleiner null oder sowas ist weil moment weil größer null oder weil da muss ich mal
in das example von denen gucken wie die das hier machen äh wo haben wir denn hier das
example server genau read read read woa warum ist das schon wieder so lang ok also was machen
die hier read return value return wenn der ok wenn das kleiner null ist wenn das kleiner
gleich null ist dann ist das ein fehler und ach nee und hier machen wir continue ok man
muss die zwei sachen checken man muss die zwei sachen checken ich versuchte es mal irgendwie
nachzubauen result gleich oje und wie kriegen wir das hier rein das muss man jetzt irgendwie
klammern nochmal so und jetzt irgendwie kleiner gleich null oder so was ja das ist auch ein
minuswert minuswert ok also result wenn result das ist dann continue verstehe wenn result
das ist dann continue äh continue habe ich jetzt schon öfters gesehen dass leute damit
nichts anfangen können also was man in der schleife machen kann ist ja also ich muss
irgendwie irgendwann mal die schleife beenden so es gibt break break macht folgendes das
geht einfach hier hin also break ist macht direkt an der stelle springt er aus der schleife
raus auf die stelle nach der schleife continue ist genau das gegenteil continue bricht den
aktuellen durchlauf ab also das hier wird nicht ausgeführt und der nächste durchlauf
geht los also quasi continue bleibt in der schleife hört aber an der stelle wo continue
steht auf und macht mit dem nächsten durchlauf weiter was ja auch sinnvoll ist solange ich
noch sachen lesen muss und solange ich noch sachen schreiben muss mache ich das einfach
warum übrigens read ergibt doch eigentlich überhaupt keinen sinn oder also was gibt
das zurück ssl want read ssl want write ok alles klar dann weiß gar nicht ob das sinn
sinnvoll ist ja an der stelle ssl äh ne doch ssl want read ok warum kann es want warum
kann warum kann eine read funktion als fehlermeldung want write zurück liefern verstehe ich nicht
aber ok ich muss das ich muss das ja auch nicht verstehen es ist nicht nicht erforderlich
zu verstehen so ok read bytes if das das das dann mal continue das steht ja auch bei denen
in dem in dem beispiel so wenn jetzt der rest kleiner null ist dann gibt es eine fehlermeldung
das ist ok wir wissen ja dass die schleife nur läuft wenn es kleiner gleich null ist
so und kleiner gleich null bedeutet wenn ich hier bin nachdem ich die zwei sachen gecheckt
habe dass es auf jeden fall nen fehler ist es ist auf jeden fall nen fehler weil wenn
ich größer null bin größer null dann habe ich was gültiges gelesen und alles ist gut
wenn ich kleiner gleich null bin dann habe ich den fehler ok das heißt an der stelle
kann ich quasi irgendwie irgendeine fehlermeldung ausgeben also error error irgendwie war immer
ssl error und da kommt jetzt irgendwie result rein und error result und und die error error
message excellent und dann return ich so was was was ist ein sinnvoller return type für
dieses ding im prinzip der buffer so also den buffer an sich kann ich nicht return das
ist keine allzu gute idee deswegen return wir einfach mal nen vector auf ansa was auf
ansaint ansaint char alles klar warum gibt es eigentlich 30.000 verschiedene byte typen
in c und c++ char ansaint char uint 8 und was auch was auch immer letztendlich letztendlich
ist das doch alles das gleiche letztendlich sind das 8 bit und wie ich die interpretiere
ist doch mein bier also standard vector geben wir da jetzt zurück so das heißt wenn man
hier durch den haben wir was gelesen und in result steht was sinnvolles drin das könnte
natürlich nicht funktionieren weil wenn er jetzt hier dann überschreibt er sich ja dann
überschreibt er sich ja also ich brauche okay ich brauche hier sonst der überschreibt
sich ja aber gut ich gehe ne moment ich muss doch jetzt nicht dass ich das jetzt irgendwie
wenn der sagt ne moment minus ne ne ne ne minus dann habe ich nix gelesen dann habe
ich nix gelesen alles klar ne passt passt passt so also das heißt ich mache jetzt sowas
wie vector add ne moment wie kriege ich jetzt mit der big brain wie kriege ich jetzt diesen
buffer in mein vector rein er pennt und dann mit länge oder so pennt ne push ne kann man
irgendwie den reiten range pushen push buffer push attach to vector ok ok was insert insert
he insert what äh ich bin ich hab keine ahnung wie
kriege ich das jetzt da rein ok ich bin immer wieder begeistert wie schwierig so dinge
z++ sind ähm also ich will wobei moment mal moment mal ich eigentlich ist es doch bescheu...
könnte ich nicht sowas hier machen muss das nicht auch gehen und jetzt einfach anstatt
buffer data size so und jetzt muss ich am ende doch noch sagen vector resize resize
auf länge wow äh auf result länge ob das geht ok äh wir probieren es einfach mal aus
ob das funktioniert ich hab so meine ich hab so meine zweifel dass das klappt ähm ok
wunderbar data size ok also das heißt anstatt dieser anstatt dieser geschichte hier äh
anstatt dieser geschichte lesen wir jetzt äh das hier oben ein read bytes ssl vector
so am moment jetzt muss ich aus dem vector noch ein strill machen so warum gibt es da
nicht sowas wie länge ok size excellent ob das jetzt ok oder bin ich ja mal sehr gespannt
oh nee jetzt hab ich was verkehrt gemacht was hat er für schmerzen wo ist das problem
was no return statement wo ist no return statement ach hier ok return weg
pass auf dass du dir keinen das könnte schon sein wobei dürfte eigentlich nicht sein weil
das ist alles hier lokal für den thread und und hier auch also theoretisch nicht aber sowas
ist immer sowas fängt man sich immer schnell ein und merkt sein als später so ok das müsste
einfach weiter funktionieren ok es scheint es scheint es scheint zu klappen hey ok ich
habe das richtig gemacht es geht also 100% nicht verstanden habe ich es nicht aber es
funktioniert da bin ich ja schon mal froh dass es einfach klappt auch wenn ich irgendwie
ein bisschen hässlich finde so wir ach so einen moment wir müssen jetzt ja noch den
wir müssen ja noch den fall händeln dass es nichts zum lesen gibt moment was passiert
wenn es nichts zum lesen gibt dann return dann den leeren vector das will ich ja will
ich das denn den leeren vector returned bin ich mir ehrlich gesagt gar nicht so sicher
ob ich das will vielleicht sollte ich vielleicht sollte ich sowas machen da wird es jetzt zwar
ein bisschen ein bisschen abartig zu lesen aber die schönere variante wäre doch tatsächlich
sowas oder also dass man jetzt sagt ok entweder kriege ich den vector zurück da sind die
bites drinnen oder alternativ kann ich einfach gucken ob der vector null ist ob der ob der
leer ist das geht auch nee das ist besser das heißt ich muss jetzt hier checken read
bites und dann if empty oder so empty warum wo ist das problem ich kann auch den vector
zurück geben warum nicht das funktioniert das geht also man würde normalerweise hier
annehmen dass der hier aus dem scope geht aber wenn ich den return ist ok das darf ich
das ist das ist erlaubt da weiß ich dass das geht das ist erlaubt der kopiert den dann
also unter der haube kopiert er den also ich glaube der kopiert den der hat hier der hat
hier quasi stack auf dem auf dem auf diesem function auf dem stack von dieser function
hat der hat der den vector und beim return kopiert er den vector da rein und gibt mir
den zurück also sprich ich kopiere den vector einmal also wenn ich das richtig verstehe
was da unter der haube passiert kopiert er den vector einmal allerdings ganz ehrlich kann
ich mit leben ja wenn er das für wenn er da 512 mal 512 bites kopiert ich glaube nicht
dass das mich jetzt performance mäßig zerstört ok wenn er wenn er nicht leer ist dann mache
ich den rest so alles klar so ok das ergibt jetzt schon ein bisschen mehr sinn read bites
wenn ich bites gelesen wird vorbei wir nennen es nicht weg wenn es bites das gelesen habe
ja gehen wir aus da unten was also ist er gut 10 plus plus alles klar so gut jetzt aber
basic aus wunderbar und wir haben omega null von franker faces set kopiert das ist das
allerwichtigste gut so jetzt lass mal in mich gehen wir haben jetzt ja noch gar nichts großartiges
gemacht außer basic aus basic aus natürlich wichtig weil wenn man firmware updates macht
wenn wir ja das firmware updates nur nicht von jedem depp gemacht werden dürfen free
hunter x twitch prime dankeschön exzellent subscription der chat iq platzt ja heute schon
fast aber mittags subscription ja noch viel mehr dankeschön also wissen dass es funktioniert
so jetzt muss ich den eigentlichen request parsen read binds das kann ich jetzt nämlich
gleich weiter verwenden das ist das ist sehr gut ist um nicht zu sagen exzellent basic
off funktioniert so jetzt sind wir wieder hier also der hannes kann es stufe 1 abonnement
huge sup big brain sup dankeschön ok jetzt ok das heißt ich mach das hier mal weg weil
jetzt kommt der eigentliche knackpunkt jetzt muss ich da auch guck mal da streicht es
jetzt doppel durch das ist nicht einfach nur aus kommentiert es ist quasi gelöscht so
jetzt muss ich den htp request parsen das heißt ich muss mir jetzt diesen diesen schmodder
hier rausholen get slash und anhand dessen den den fad irgendwie raus bekommen der den
ich da ausgelesen habe das heißt wir lesen jetzt erstmal also wir machen jetzt folgendes
wir checken jetzt if post wir checken if get das ist das einzige was wir unterstützen was
haben wir sonst noch htp mäßig post get put post get put patch delete post get put patch
delete habe ich was vergessen es gibt ja noch die die web darf dinger hett hett gab es noch
oder nee doch nicht get post aber gut das unterstütze ich nicht also ich unterstütze
nur post und get x fanatics drei monate ajaja aber massive ajaja huge sup also ich unterstütze
nur if nur post und get das reicht wie gesagt ich will ja eh nicht dass das andere verwenden
sondern einfach dass ich dass ich den kram verwenden kann so das heißt wir müssen jetzt
gucken ob es in post request ist das heißt wir gucken jetzt ob das was ich hier eingelesen
habe wo lese ich denn hier auf was ein ja ach nee das ist fail was ich hier mache das
kreuz das ist doof wie mache ich das jetzt ich muss das hier einlesen ich muss das hier
einlesen beides muss hier den request einlesen und dem muss ich die muss ich das das irgendwie
übergeben das ok request da kann ich das hier nämlich rausschmeißen und if empty kann
ich auch rausschmeißen und jetzt check ich nur noch das kann ich auch rausschmeißen
und jetzt check ich nur noch ob der request passt ok gut ach nee das umwandel ins string
muss ich jetzt ja hier machen ok request so ok alles klar so weil ich brauche den text
da hier unten aktuell kann ich den kann ich ja auf den auf diesen text den ich hier nur
hier drin zugreifen aber hier brauche ich den jetzt so also request contains includes
ach so scheiße ah moment ich nehme einfach das was ich schon mal gebaut habe string starts
with excellent tja hätten die mal ein bisschen mehr in ihre c++ standard string klasse eingebaut
da müsste man nicht so viel selbst tricken und wisst ihr was noch cooler wäre hätten
die schon sowas wie extension methods dann könnte ich das einfach extenden ohne hier
zig helper gedöns basteln zu müssen also startet der mit einem get startet der mit
einem get dann ist es ein get request und startet der mit irgendwas anderem eigentlich
muss ich das jetzt gar nicht weil doch wir sind mal wir sind mal so nett wir überprüfen
das noch mal und startet der mit einem post dann ist es logischerweise nen post request
ok soweit so gut was hat er jetzt für schmerzen ah da fehlt ein klammer lull so und jetzt
ok jetzt muss jetzt muss ich den den das hier muss ich jetzt rauskriegen das übrigens
blöd was ich blödsinnig was ich hier mache starts with so muss ich checken weil ich will
er den fahrt ich will mir den fahrt rausholen und wie es hier hinter weiter geht weiß ich
nicht weil es könnte ja potenziell auch sowas sein es könnte nicht get slash es könnte
auch get get slash index html get slash logs get post slash update oder sowas sein so das
heißt ich muss mir jetzt an der stelle das irgendwie raus rausholen was es für eine
was es für ein fahrt ist oder wir sagen korrekt der wort uri wie heißt wie heißt die portion
hier hinten das hier vorne ist da das ist die domain das hier zusammen ist die uri wie
heißt diese portion hier hinten dran also das was hinter dem slash kommt das ist das
ist ein uri ich nenne es mal fahrt ja pass habe ich glaube aber ich glaube das heißt
irgendwie anders top es ist nicht uniform es wird in der besteht aus zeichnungen so
wo steht beispiel example guck mal hier sieht man das tatsächlich das ist der fahrt ich
habe sogar richtig benannt ok das ist der fahrt doch tatsächlich das hier ist die domain
das ist was für einen protokoll port und das ist der fahrt und das ist das query alles
klar da haben wir sogar richtig benannt ohne ohne es zu wissen ich habe nämlich keine ahnung
gehabt dass das wirklich so heißt ok pass so das müssen wir jetzt irgendwie aus diesem
request rauskriegen also das da das kann ja potenziell alles sein normalerweise wisst
ihr was ich jetzt normalerweise machen würde reg x match sonst was aber ich bin mir nicht
so sicher ob das eine gute idee ist und ob das ding überhaupt eine reg x library dabei
hat vielleicht machen wir es mal ohne reg x weiß ich ob reg x reg x auf msp 32 ob das
so eine gute idee ist und dazu kommt ich glaube ich habe noch nie reg x in c++ verwendet wir
machen das anders also wie kriegen wir das raus wir wollen nur das hier nur diesen fahrt
wollen wir haben ich glaube ich glaube wir können das wieder damit machen big brain
methode kopf wenn wir können sagen der fahrt ist quasi zwischen das erste was er findet
zwischen get das das war eine gute idee da ich das mal gebastelt habe ich habe das ja
schon ein paar mal gebraucht so was in der richtung aber hierfür für für so header
gedönst ist das tatsächlich ganz praktisch zwischen get und hat ttp so also sprich zwischen
get und hat ttp ist ja dann nur noch das hier wir machen sogar leerzeichen hat ttp das heißt
er nimmt wirklich nur das hier raus so da müssen wir jetzt mal ausprobieren wenn ich jetzt
was anderes aufrufe sagen wir mal slash logs dann macht er nämlich slags get auf slash
logs so jetzt schauen wir mal ob das funktioniert der müsste jetzt an der stelle sich nur slash
logs wo ist jetzt das problem wieder ich liebe diese fehlermeldung ach so weil es optional
ist ich liebe diese fehlermeldung ok es ist ja optional es kann ja sein dass es nicht
passt wisst ihr was im zweifelsfall schmieren wir ab wenn er nichts findet aber ich will
jetzt nicht auf null checken weil das auf null checken eigentlich ziemlich ziemlich
easy ist an der stelle nämlich einfach so gucken es wäre eigentlich alles was wir machen
müssen so also jetzt würde ich erwarten dass ich slash logs raus bekomme ah yes komm mal
hier funktioniert funktioniert slash logs das heißt jetzt kann ich das gleiche mit
post noch machen aber das gleiche mit post post und das dazwischen ist der fad tatsächlich
so gut das heißt wir haben jetzt die url vom post request vom get request das heißt wir
können jetzt sowas hier einbauen so void handle get oder so und der kriegt jetzt übergeben
das da und den fad und dann machen wir dann irgendwann mal weiter aber wir bauen jetzt
erst mal den post request ein weil der post request ist ein bisschen komplizierter im
post request muss ich mir die content length noch rausholen ich zeige euch gleich mal
hier post post request example jetzt nehme ich ein bisschen komplizierter den get request
ist einfach nur das hier so was anderes ist an einem get request nicht wirklich interessant
erst mal so allerdings bei einem post request ist das hier noch ganz entscheidend content
length weil wenn ich ein update hochladen will muss ich ja wissen wie groß das update
ist bevor ich anfange zu schreiben das heißt ich brauche ein handle get ich brauche ein
handle post und der kriegt noch länge dabei und wie kriegen wir den header raus wie kriegen
wir den header raus für den post request also sowas wie länge länge ist das können wir
wieder genauso machen ich zeige euch mal wie ein post request aussehen würde wenn wir
x x post so und da steht dann sowas drinne wie ach so moment ich musste auch irgendwas
uploaden mit sonst funktioniert das ganze ja nicht sieht man ja nix x post mal den ganzen
ganzen shit hier hinten weg machen binary post 5 4 3 3 so jetzt können wir uns mal gucken
wie ein post request aussieht content length 0 excellent warum ach so weil ich im falschen
ordner bin alles klar unauthorized guck mal es funktioniert was ich gebastelt habe unauthorized
ich muss erstmal passwort eingeben oder funktioniert ich bin ich bin ja immer begeistert wenn sachen
funktionieren ha guckt content length ist ungefähr was ist in megabyte oder so so das
heißt das muss ich mir jetzt erstmal rausholen content length also sprich wir machen einfach
genau das gleiche wie hier oben das ist echt big brain funktion hätte ich nie gedacht
dass die man nützlich wird also länge länge ist wo das natürlich voll fällt wenn wenn
es header doppelt gibt ne allerdings sollten hätte nicht doppelt sein aber wenn es header
doppelt gibt kack das ab was aber nicht schlimm ist das muss nicht robust sein bis ins letzte
das muss für meine zwecke funktionieren also zwischen content length und und und und und
zeilen ende zwischen content length und zeilen und das müsste die länge sein wie kriegt
man das jetzt in int umgewandelt wie wie macht man c++ string to int ok was gibt es
denn da stoi stoi was ist der unterschied zwischen stoi und attoi ah guck mal sehr
overflow beste stoi ist a horrible function alles klar horrible also monka shake function
gut dann nehmen wir standard stoi also stoi länge ok das funktioniert nicht warum funktioniert
das nicht war ich was war ich falsch a value x klappt also jetzt krieg ich fahrt und die
länge raus ok mal gucken ob das funktioniert das müssen wir jetzt mal gucken ob das jetzt
geht monka giga omg 2 sagt das als schlecht zu bezeichnen ist fragwürdig bloß weil das
altes c herra endling das ist der kaufa flow die müssen recht haben der kaufa hat immer
recht vor allem schon skit schon skit hat instant recht immer so ja das hat das hat
funktioniert slash ist der fahrt und die länge ist die länge ist ungefähr ein mb die firmware
na guck mal mal wie groß ist die firmware erst ne bild netz firmware ne nicht bootloader
firmware bin 1,1 mb das ist ziemlich das ist ziemlich genau also das das das auch auch
richtig ja aber mo ist das schon recht also der kaufa flow ist da auch nicht immer unfehlbar
das problem ist nur dass man sich oftmals davon auch so so leiten lässt also liest
ans deck auf afro und das erste was du liest ist ist trash oder sags ist trash easy da
next dabei ist es vielleicht gar nicht so trash ok das heißt wir können jetzt hier
sowas machen händel post dann brauchen wir ssl wir brauchen den fahrt und wir brauchen
die länge ich habe in den klammer zu viel jaja value ist gut jetzt habe ich mit der
klammer zu wenig also jetzt dachte mal dieses addon für diese rainbow rainbow klammern
ist doch wirklich praktisch seht ihr jetzt ich sehe hier vorne ist gelb aber hier hinten
habe ich keine gelbe klammer jetzt mache ich so noch ein bisschen gelbe klammer hab und
dann ist zu das ist echt ein poggers extension gibt es nix so händel post ja elevenko aber
ist das händel post ich lese jetzt einfach mal das firmen update plinth ein ich lese
jetzt ich lese jetzt einfach mal das firmen update da irgendwie plinth ein so also sagen
wir wire read bytes was brauchen wir ssl context ok weil read bytes not empty ach nee moment
ich brauche die bytes ja äh wie machen wir das jetzt am besten wir sagen einfach wire
ja oops auto bytes read bytes ssl so und sobald wir sehen es war einfach ganz hart true
bamm endlosschleife so sobald bytes empty ist a break so ich glaube das ist ganz ok
also sprich der liest jetzt so lange ein bis es nichts mehr zu lesen gibt und dann geht
er raus das klingt doch eigentlich ganz sinnvoll so und jetzt lesen jetzt gucken wir mal jetzt
lesen wir mal ein wie viel wie viel er einliest also int count wir zählen jetzt mal die bytes
ob das stimmt was der liest und was da also wir geben jetzt mal die content wir geben
jetzt mal die content lengths aus also von der idee her müsste jetzt so sein der sendet
hier eine content length mit und zwar irgendwie ein bisschen knapp 1,1 mb und am ende müsste
ich exakt so viele bytes eingelesen haben wie ich content lengths habe ansonsten fehlt
was oder es ist mehr was sehr merkwürdig wäre wenn es mehr ist also gucken wir mal
bytes bytes length size also count plus gleich bytes size so und jetzt gehen wir mal aus
content length oder content is length und current is count so da sollte mir jetzt ausgeben
jetzt für schmerzen überhaupt geht doch da sollte mir jetzt ausgeben wie viel in content
lengths steht und wie viel davon wir schon eingelesen haben und am ende sollte es immer
gleich sein so und das break ist empty das passt davor ok mal gucken ob das klappt ich
lese jetzt einfach das firmware update ein ohne das firmware update zu schreiben konvertiert
der dateityp auto einfach in den sinnvollsten dateityp ne auto guckt was hinterm return steht
und trägt das ein also sprich wenn du wenn du sagst wenn du einmal sagst return eins
und sagst dann später noch mal return string dann sagt er geht nicht du kannst nicht zwei
unterschiedliche typen return achso ja und hier ist es auch so also sprich der weiß ja
dass das hier den standard vector uint 8t returned das ist das gleiche wie war in zip
in c sharp nur leider in den tools nicht so gut weil manchmal einfach typ auto da steht
obwohl obwohl er es weiß ok also mal gucken der sollte jetzt ein der sollte jetzt einlesen
postchamp postchamp postchamp der müsste dann aufhören einzulesen bei 1,1 mb ok auf
das byte genau guckt mal hier auf das byte genau auf das byte genau ok operation timed
auto ich muss die connection noch schließen ich ich habe irgendwo kein break drinne zeile
43 wenn aber endlosschleife ok das ist dumm return erst mal schön endlosschleife fabriziert
das wird hier wieder getrieben wir basteln am webserver auf dem esp 32 weiter und du
wirst ich weiß nicht ob du im letzten stream dabei war ich glaube nämlich nicht du wirst
nicht glauben wir haben es schon geschafft basic ors einzubauen und wir können get und
post request handeln also das wichtigste ist sogar schon drinne und das ganze natürlich
über tls postchamp so jetzt machen wir das gleiche nochmal und gucken ob es jetzt nicht
hängen bleibt so upload post request wisst ihr was ich bin geneigt hier mal ein bisschen
mehr als 512 zu probieren richtige big brain aktion wieder ja 6 hat schon fast übrigens
leute chat chat ich muss ich muss euch mal ich muss euch mal loben und zwar 150 leute
im durchschnitt hier am start bei doch recht nischen thema also man sieht hier eindeutig
bester chat auf twitch operation timeout mal gucken ob er jetzt wieder abkackt moment
warum warum hat er eine endlos schleife da jetzt das verstehe ich nicht 43 ich return
doch ich return doch wo ist das problem moment das hier funktioniert nicht das ist nie empty
das ist nie empty warum nicht das müsste aber empty sein if empty break hä warum ist das
ach kann das sein dass der ist nicht empty weil der 512 elemente am start hat und deswegen
512 nullen enthält kann das sein der ist nie empty kann das sein wenn ich den vector so
initiiert dass er nicht aha ja dann funktioniert das so nicht wie ich mir das gedacht habe
ich meine ich könnte den vector hier re seisen wieder auf null ist er jetzt empty ist er jetzt
empty ich habe hunger leute wie lang bin ich hier schon am start progas zweieinhalb stunden
und heute morgen zweieinhalb stunden ob ist ist er empty wenn man den jetzt auf null wer
wir gleich sehen wer wir gleich sehen achja moment abbrechen abbrechen abbrechen wir machen
noch eine sache ich lasse mich mal dazu hin reißen den buffer ein wenig zu vergrößern
und ich hoffe es kackt nicht gleich ab das rösti gegessen excellent mit was dabei rösti
ist glaube ich so fast schon schweizer national essen oder hast du eigentlich vor das projekt
im anschluss zu veröffentlichen ich kann es auf github laden aber ich habe nicht vor
da irgendwie eine großartige reusable library rauszumachen also ich werde das so machen
ich werde das immer erweitern so wie ich es halt bei mir brauche weil wenn ich da irgendwie
eine library draus machen würde dann müsste ich ja gucken dass man auch den den server
ordentlich ordentlich ansprechen kann ohne dass man die internen sachen ändern muss ich
will eigentlich bloß irgendwie so keine mini webserver basteln der statisches html vom
flash aus liefern kann logs aus liefern kann und ein firmware update machen kann aber was
man natürlich machen kann ist ich kann den kran auf github hochladen und jeder kann sich
das kopieren und seine eigenen sachen hinzufügen die er braucht oder einfach nur abgucken ja
das können wir machen ok so mal schauen ob es jetzt funktioniert
ist er jetzt schneller oder ist eine ganze ecke schneller leute der ist dreimal so schnell
wie vorher mit dem größeren buffer der ist viel schneller habt das gesehen dass der größere
buffer macht richtig was aus ja guck mal keine endlosschleife mehr excellent keine endlosschleife
mehr und es bricht ab sehr gut was wir jetzt noch machen müssen ist weil normalerweise
reboot man ja nach einem firmware update wir simulieren das ganze mal esp restart also
das hier ist quasi fake firmware update funktion gerade wir machen den restart das problem
ist wenn man ein restart machen da muss ich dem zeit geben die verbindung zu klausen wenn
ich nämlich ich kann sie nämlich mal zeigen was passiert wenn ich einfach restart wenn
ich einfach restart dann bleibt die verbindung hier hängen das ist unschön muss jetzt mal
abgucken wie ich die verbindung klaus klaus klaus ich habe es gesehen rückwärts ja habe
ich das nicht schon alles habe ich sogar schon drinne stehen ausgezeichnet wenn ich so excellent
ist das hier ist alles excellent wenn es funktioniert das ist so schlimm ich habe mir das wort mittlerweile
angewöhnt ich sage das auch auf der arbeit wenn irgendwas ist aber es ist also das ist
das ist ja noch ein normales wort das fällt nicht so sehr auf dass ich sie nicht mehr
alle habe wenn ich dann irgendwelche anderen gaming sachen von mir gebe dann fällt das
mehr auf allerdings mittlerweile muss ich sagen finde ich das auch nicht mal schlimm aber
wenn man sagt excellent oder gar exquisite dann ist das dann denken die leute auch jetzt
spinnt da wieder rum wenn ich zum beispiel keck weh sage ja das wenn ich keck weh sage
verwirrt das die leute das stimmt so schauen wir mal jetzt müsste hängen bleiben jetzt
müsste rebooten und hängen bleiben jetzt flutscht aber wird hier geupdatet also wir
schreiben ja gar nichts auf flasch guck jetzt bleibt er hängen und das warum hat er nicht
restarted achso ja genau der restarted und kann die verbindung nicht closen das heißt
ich muss jetzt hier eine sache machen und zwar kann ich immer versagen delay delay für
eine sekunde und dann klaus ups jetzt fahrt geste weg und dann klaus ssl und dann restarten
klaus ich diese hackers hacker mans heute sind wir sind wir heute wieder so und jetzt
sollte der eigentlich die verbindung ach nee moment fail falsche rum falsche rum erst
mal klausen und dann warten und es kann ja nicht funktionieren sonst warte eine sekunde
und klaus danach und restart direkt das kann er nicht kann er nicht klappen so jetzt laden
wir es nochmal hoch und jetzt sollte er klausen eine sekunde warten und restarten nach dem
firm nach dem fake firmware update also wir schreiben also dass das upload funktioniert
was wir halt nicht machen ist auf auf den flash schreiben das würde das ganze auch ordentlich
viel langsamer machen der flash speichert er schreibt nicht so so so schnell so sekunde
warten und er wartet hier noch auf timeout ok ja warte timeout bäm beendet zack exzellent
so so mag ich das also sprich sogar post upload funktioniert schon
wisst ihr was ich weiß warum das 10 sekunden hängt hier das hängt 10 sekunden weil der
nur empty diesen empty vector zurück gibt wenn der 10 sekunden timeout abgewartet hat
und dann gibt es einen fehler das heißt ich könnte mit zählen ich könnte mit zählen
also sprich wenn hier mein wenn ich so viel empfangen habe wie ich content length habe
dann mache ich break und dann müsste ich diese 10 sekunden nicht mehr warten das ist natürlich
noch besser probiere ich noch mal kurz aus und dann müsste das ziemlich gut funktionieren
eigentlich so dann kann man hier drinnen das firmware update machen hier kann man dann
was auch immer index machen wir irgendwie keine ahnung if pass so slash dann machen
wir index html wenn fahrt gleich logs dann machen wir logs und so weiter und sofort
ob das jetzt funktioniert ob ich keine 10 sekunden auf timeout warten muss flutsch flutsch flutsch
hat funktioniert guckt hier zack update fertig reboot exzellent ja das ist das ist äußerst
nice also es nimmt wirklich langsam gestalt an das einzige was wir jetzt noch mal nachschauen
müssen ob der jetzt wirklich ob ich nicht irgendwelche memory leaks fabriziert habe
in der ganzen in der zwischenzeit das ist ein titi go t display falls du das board haben
willst kann ich dir empfehlen aktuell bei bengo zu gucken die haben das nämlich im angebot
für 699 aus china das ist zwar damit nicht unbedingt das allergünstigste esp 32 baut
aber es hat ein display bei und auch schön schön drauf gemacht ja du kriegst du kriegst
für die hälfte normales esp 32 baut im angebot aber mit display ist natürlich richtig gut
und ich finde 699 ist eigentlich ziemlich ziemlich ok wenn man sich an wenn man sich
überlegt dass das auf amazon dass wir auf amazon 14 euro dafür haben wollen das ist
viel zu teuer ich habe mir als 10 stück von bestellt und den auf bengut man kann es auch
aus uk bestellen aber kostet mehr das lohnt sich da nicht was sonst ja klar was übrigens
witzig ist dass es aus den usa ganze 58 cent kostet nach germany aus china ganze 83 29 also
das ist wirklich billig der kram deswegen lohnt sich auch nicht eins zu kaufen da bist
du nicht so viel billiger wenn du 10 stück kaufst brauchst du nur 3,29 versand genau richtig
bengut bei aliexpress gibt es die auch manchmal wir können mal kurz gucken was die bei aliexpress
kosten aber bei aliexpress sind die meistens ein klein klein grob papier tt go t display
nein nein ja aber wat ah ok ist es doch guck mal die haben es auch gerade im angebot bei
aliexpress da stimmt was nicht dass mit 16 mb flash ist irgendein anderes modell ich
glaube die zeigen mist an guck mal es ist ähnlich günstig dafür kostet also bei bengut
ist es ein tick günstiger dass mit 16 mb ist irgendwas anders aber ist das irgendwas
anders dran ich glaube dass mit 16 mb ist das mit dem mit dem sd kartenslotter da wirst
du mal genau gucken allerdings 4 mb ist reicht reicht auch dicke 16 mb ist schon übertrieben
16 mb flash da flasht da flasht sie eine halbe stunde wenn du das 16 mb voll flasht
willst so das gefällt mir das nimmt echt gestalt an hier chat ich bin begeistert wie
gut das klappt so eine sache bauen wir jetzt noch ein dann gehe ich was essen und zwar
wir gucken wenn ein get request auf slash kommt bzw oder oder slash index html jetzt
habe ich irgendwie was zu viel kaputt gemacht dann machen wir nämlich das hier unten dann
machen wir das hier unten dazu post also wir müssen jetzt händel get der kriegt ssl und
den fad übergeben gut und wenn es index html ist dann liefern wir die index html aus ich
sollte vielleicht noch eine methode machen für void sowas wie send string oder sowas da muss
ich nicht jedes mal diesen diesen dieses anhängen von dem von dem character turn new line zeugs
machen also dass ich sowas mit send string und dann hier ssl das brauchen wir zum verschicken
und irgendwie einen standard string und dann machen wir nämlich den kram hier drinnen
moment moment nee nee nee nee send string macht eigentlich sollte nichts anderes machen
außer ok das das liefert schon mal zurück ob es funktioniert hat das ist auf jeden fall
sinnvoll und dann macht er sowas hier ja dann macht er sowas hier und wir hängen vorher noch
mal strepend wir hängen wir hängen am ende noch mal den character turn new line an weil
auch woops weil ansonsten muss ich das jedes mal tippen und das habe ich echt kein bock drauf
so und dann gucken wir irgendwie result wenn result größer null ist dann ist gab es dann
hat es funktioniert dann gab es keinen fehler moment größer gleich null dann gab es keinen
fehler weil das gibt zurück wie viel bytes geschrieben wurden sprich null bytes ist auch
ok dann hat es schreiben funktioniert alles andere ist ein fehler so das heißt wir können
den ganzen schmodder hier unten mal weg machen response brauche ich htp 1.1 ok off topic frage
empfehlung für eine rate karte kann ich dir keine geben macht zfs sucht ihr einen guten adapter und
macht irgendwie mini saas nimm im mini saas zu sata und macht zfs oder aber mach einfach sata
ans mainboard und zfs drauf dass die budget variante die würde ich heute machen wenn ich
mehr als eine festplatte hätte würde ich heute auch zfs rate 1 machen nimmst einfach zwei nimmste
zwei zehn terabyte platten oder zwei zwei 14 terabyte platten wie mit deinem beispiel macht
ein zfs rate 1 drüber das beste was du machen kannst wenn es rate sein soll was man sich auch
mal überlegen muss ob du wirklich ein rate haben willst du könntest ja auch einfach einmal nachts
den erst machen von platte 1 auf platte 2 das wäre dann zwar kein kein würde dir in puncto
ausfallfähigkeit nicht bringen weil wenn die platte kaputt geht dann ist trotzdem kaputt aber es
hat auch seine vorteile weil du hast ein paar stunden zeit zwischen den syngs also sprich wenn
du aus versehen was löscht dann hast du weniger lesegeschwindigkeit das ist richtig wobei das für
normales gigabit netzwerk vollkommen unerheblich ist bei einem rate wenn du daten auf der platte
kaputt macht sind die halt generell kaputt weil das direkt züngt deswegen muss man auch immer sagen
als backup eignet sich das halt nicht also wenn du jetzt daten gespeichert hast auf deinem rate 1
und du löscht aus versehener datei dann ist es halt instant weg auf beiden platten wenn du das
einmal in der nacht erst züngst ist die datei noch da weil du halt noch nicht direkt gesüngt
hast es hat alles seine vornachteile mehr geschwindigkeit hast auf jeden fall mit einem
rate 1 lesegeschwindigkeit schreibgeschwindigkeit ist quasi kein unterschied theoretischen ticken
langsamer praktisch gesehen macht es keinen unterschied schreibgeschwindigkeit ist normal
lesegeschwindigkeit ist eine ganze ecke schneller und wenn du mehr als gigabit hast wenn du mehr
als gigabit drinne hast ist dann würde ich in rate 1 machen weil rate 1 bringt ja lesegeschwindigkeit
also automatisch mit dabei hast du irgendwie 2,5 5 g 10 g dann ist es gar nicht so verkehrt mit
modernen festplatten du kannst du kriegst du kriegst schon deine 300 300 mb die sekunde oder vielleicht
sogar 400 mb weiß ich eher 300 mb die sekunde lesend von einem rate 1 so http response das machen
wir jetzt nämlich noch schnell ich bin jetzt gerade voll side tracked worden wir liefern das aus wenn
far slash ist beziehungsweise index html dann sagen wir response ist das read file und dann sagen wir
hier send string ssl und dann kann ich nämlich den ganzen miss dahinten weg machen braucht das
nicht mehr response plus htm was hat er für schmerzen was achso ich muss als standard string
lesen und nicht als arduino string gut irgendwo habe ich was vergessen anzupassen da was ist
kaputt also wenn dein mainboard nicht genügend sata anschlüsse hat echt du hast mainboard was
nicht zwei sata an was keine zwei sata anschlüsse hat ja dann nehmen hba du kannst relativ günstig
bekommst du welche mini saas mini saas kannst du pro mini saas anschluss 4 sata oder 5 4 oder 5 ich
glaube mini saas mini saas in sogar fünf sata ne vier vier ja also ich habe ein glaub so ein
die kosten nicht viel ich kann dir den aber nicht empfehlen weil ich verwende den schon ewig nicht
mehr so eine kiste habe ich in meiner fetten server box drinnen die ich aber gerade nicht
verwende weil total auf was heißt musste einfach mal ein bisschen rumgucken muss einfach ein bisschen
rumgucken ja und wie gesagt du kannst ja den hba verwenden trotzdem zfs rate machen also so
so würde ich es machen also ich würde den hba den würde ich nur verwenden zum anschließen von
den sata platten und dann würde ich software rate zfs rate machen so schauen wir mal also
slash funktioniert index html funktioniert auch und post update funktioniert hoffentlich auch
noch oh oh was ist hier mit meinen kommt mal hier mein ram geht ganz schön runter gerade
ok reboot excellent geht mir mein ram so krass runter also wegen der seite
oh das ist der firefox der versucht zu refreshen der firefox baut mehrere versucht
gerade mehrere verbindungen aufzubauen deswegen schwankt der ram so es geht box life sagt wir
fahren gut mit den p420 von ap sind das mini saz connector mit also quasi zweimal mini saz auf
sata oder was was ist das für dinger nee das sind keine mini saz das sind normale saz
was aber kein großer unterschied machen
ist sogar eine batterie dabei vermute mal dass es eine batterie ist richtig advanced
heute zeigt doch mal die anschlüsse
das ist ein cash alles schlüsse erst mal erst mal noctua lüfter so muss das sein
wird das wort zu diesen mini webs ja es werden alle meine sachen hier hochgeladen
alle streams gibt es hier im archiv und hier sind die streamtitel drinnen
excellent so passt max fps liegt jetzt ist es raus das ist da das ist da der firefox
der hier den ganzen ram verbraucht im hintergrund ja wunderbar funktioniert richtig gut ich bin
wirklich begeistert und was man was man daran sieht ist wie schön so plaintext protokolle
sind du kannst dir ein paar beispiele angucken und einfach nachbauen es funktioniert dennny
die vier monate excellent subscription big brain so chat ich esse jetzt eine runde pizza
ich war heute lang genug und wir machen die tage weiter vielleicht morgen morgen habe ich auch
noch frei ich hoffe euch hat es gefallen ich hoffe alles verstanden ich habe ja viele selbst
nicht kapiert weil c++ und jetzt mache ich erstmal pepo fett massive pepo fett mache ich
jetzt möchte möchtest du nicht einfach ausgehen vm vm ausgehen ah yes
so und wenn wir den webserver dann fertig haben vielleicht können wir dann auch
weitermachen mit dem eigentlichen projekt hier weil das soll ja immer noch was geben
um eine klimaanlage zu steuern ich habe ja schon was fertig was mit einem anderen board
funktioniert aber hier mit dem board ist es viel viel viel viel besser weil da kann ich dann auch
sogar den status anzeigen ob es zu heiß oder zu kalt oder zu sonst was ich habe mehr platz
alles klar chat wir sehen uns beim nächsten stream macht es gut bis denn zu
