Erster, du hast ja gespoiler, das zählt nicht.
Aber danke für den Sub, ich sehe es jetzt erst.
Sag mal, ist meine Sub-Notification irgendwie kaputt?
Zack.
Kamp-Kamp-Kamp, eine Sub-Notification?
Glaube nicht.
Ist das kaputt?
Na gut, ich sehe es ja im Chat auch.
Aber die Musik ein bisschen leiser machen.
In der Mitte des Bildschirms, nein, das ist nicht die Sub-Notification, das ist einfach
nur so da.
Jetzt könnte ich ja tubaten und könnte sagen, Leute, ihr müsst subscriben, weil die Sub-Notification
ist kaputt.
Aber ich glaube, die Sub-Notification ist wirklich kaputt.
Weiß nicht warum.
Ich könnte den Test-Sub machen, aber da müsste ich mich einloggen auf dem zweiten Rechner.
Warte mal ausprobieren.
Steamlabs einloggen, continue with Twitch.
Die Sub-Notification ist kaputt, ne?
Guck mal, die Sub-Notification ist kaputt.
Ich glaube, Steamlabs hat gerade Probleme.
Normalerweise würde hier die Sub-Notifications kommen, Follow und Sub-Notification.
Okay, Sub-Notification kaputt.
Gut, ich sehe es ja im Chat und danach gucke ich mal, was Sache ist.
Steamlabs ist kaputt, deswegen gibt es auch keine Sub-Notifications.
Leute, guckt mal, paint.
Steamlabs ist kaputt.
Okay, dann hoffe ich mal, das geht irgendwann wieder.
Goldkeks gerade, Goldkeks gibt es ja ab einem Jahr, glaubst du gar schon.
Steamlabs ist kaputt, ja gut, da können wir glaube ich mit leben.
Also Leute, ich habe euch ja gestern versprochen, ich komme noch mal an und streame, ich habe
es nicht gemacht, deswegen streamen wir heute.
Soll ich euch mal erzählen, was wir heute machen?
Es wird, kann ich euch jetzt schon sagen, es wird absolut Firefat-Time, ja, aber mit Postgres
Text Search und nicht einfach nur Postgres Text Search, sondern mit einer Postgres Extension,
dass wir mega schnell viel Cacks durchsuchen können, habe ich selbst noch nie verwendet,
ich muss mal schauen.
Wir testen erstmal die Suche, bevor wir das Auto komplett machen.
Ich mache mal meine VM an, die braucht eh wieder Updates, 100 pro.
Die Poggers VM muss eingeschaltet werden, aber dann bitte mit einem, ich mache überhaupt
keinen Delay rein, direkt jeder Input wird instant an den Server gequeryt.
Kein Delay, wo kommen wir denn da hin?
Delay ist für Noobs, ich baue noch keine künstlichen Lacks ein bei mir in die Software.
Mysterion, nicht wundern, die Sub-Notification ist gerade kaputt, weil something went terribly
wrong bei Steamlabs, aber danke für den Sub, gut es haben viele gedodged, aber Brian hat
Glück gehabt.
Der Scam Train ist auch mal wieder am Start, ich mach mal kurz meine VM an, bis der Stream
richtig angelaufen ist und wir machen mal Updates, weil ich glaube, wer weiß was das
für eine Stadt ist, ich hab keine Ahnung, Bing Image of the Day, ist das New York?
Das ist die Battlefield Map da unten, guck mal, das ist Manifest.
Es könnte Frankfurt sein mit dem Messerturm, aber der Rest passt irgendwie nicht so wirklich
zu Frankfurt, deswegen ist es auch eher New York als Frankfurt, der Rest ergibt überhaupt
keinen Sinn für Frankfurt, nur dieses Gebäude hier.
Freiheitsstatue, ach soll das hier die Freiheitsstatue sein, dann ist das tatsächlich New York.
Ist egal, Bing Image of the Day, ich verwende Bing für nichts, außer für meinen Hintergrund.
Restore, alles klar.
So, wir müssen jetzt erstmal ab, guck mal, ich hab kaum noch Platz frei, MonkaS, ob das
reicht, ob das reicht, dann müssen wir mal, dann bin ich gespannt.
So, wir müssen jetzt mal ein paar Docker-Containers aufräumen, was ist denn das hier, alles weg,
Docker-RM, bäm, bäm, bäm, gibt's nicht so ein Docker Clean All oder sowas, ist alles
weg, alles weg, guck mal, was da noch drin ist, ist das für Speicherfrist, alles fort mit
Q-Chat, Q-Chat wird gelöscht, Leute, gleich seid ihr weg und jetzt Docker-RME, gibt es
da sowas wie Docker-RME All oder sowas, how to remove, ich will all, all remove, how to
delete all local Docker-Images, okay, bäm, na gut, minus F für Force, machen wir vielleicht
mal weg, gib ihm, ich brauch Speicherplatz, Docker-System prune, ah, Fivehead, Node-Modules
ist schwarzes Loch, weißt du was, da reicht kein Speicherplatz der Welt für Node-Modules,
kann eine MariaDB laufen, für was hatten wir denn, ach, für Nextcloud-Geschiss war das,
jaja, noch mal, okay, Docker-Images, alles fort, gut, haben wir ein bisschen mehr Platz
wieder, also, ich mach erst mal kurz Updates und dann erzähl ich euch, was ich machen will,
es ist sogar indirekt für die Arbeit, aber es ist ein interessantes Thema, oh, soll ich
das machen, soll ich mal einen Snapshot machen vorher, das ist der Grund, warum ich VMs verwende
für sowas, Snapshot-Manager, also wir löschen erst mal den alten Snapshot, der braucht
mit Sicherheit unnötig viel Speicherplatz, oh, oh, oh, der hätte es nicht machen sollen,
dauert erst mal, gut, dann kann ich euch erzählen, was ich machen will, richtig Popmusik, okay,
ich überleg gerade, ich müsste euch das an einem Beispiel zeigen, also, Monitoring, ich
meine nicht diesen komischen Alien-Film, also, ich weiß nicht, wer von euch Prometheus als
Monitoring Software kennt, wahrscheinlich die meisten, weil ich weiß ja, mein Chat ist
high IQ, hoch Big Brain, dementsprechend kennt der Chat das natürlich, und Prometheus generiert
im Monitoring ganz, ganz viele Labels und Values, wo man dann filtern kann damit, so,
das, zwei Sachen, also, wie gesagt, ist für die Arbeit, ich wollte es einfach mal ausprobieren,
weil ich es interessant finde, und zwar, ich hab mir überlegt, nee, ich muss was anderes
erzählen, also, unser Support, unser Support auf der Arbeit, der muss ab und zu mal, wenn
Systeme ausgeschaltet werden oder absichtlich runtergefahren werden, wegen Wartungsarbeiten
oder sonst was, müssen die für das Monitoring im Alert-Manager, Alert-Manager, ich weiß
ja, ob es da eine Demo gibt, ich zeig euch das mal, Demo-Alert-Manager, so sieht das
Ding aus, nicht sonderlich hübsch, und da kann man Silence eintragen, also, sprich,
wenn man weiß, es schaltet gleich jemand den Server aus und ich will nicht irgendwelche
SMS an irgendwelche Manager schicken, die kriegen übrigens bei uns noch SMS, weiß
auch nicht warum, oh, mein, der, der, der, Kekwe ist zu leise, bei uns kriegen die Manager
noch SMS, dazu kann man wirklich nur sagen, naja, und wenn man das nicht will, wenn man
das nicht will, dann trägt man das System hier ein, das Dumme ist daran, dass das ein
äußerst rudimentäres Interface ist, guck mal, hier muss man den UTC eintragen und so
einen komischen Timestamp, man hat keinen Date-Time-Picker und nichts, und hier unten
beim Vervollständigen mit Hostname und so hat man auch keinerlei Autocompletion, so,
und da hab ich mir gedacht, wisst ihr was, Leute, ich bau uns einfach ein kleines Web-Interface,
was eben Date-Time-Picker hat für hier oben und Autocomplete für Hostnames und so was,
ist im Prinzip auch gar kein Ding, gar nichts Großes, aber ihr kennt mich, ja, ich übertreibs
bei sowas dann immer, und ich hab mal einen Export gemacht von unseren Prometheus-Daten,
Labels und Values, und wir haben ungefähr 1200, mach das doch über Grafana, äh, wie
willst du denn in Grafana, also man, du kannst das bestimmt über Umweg im Grafana machen,
aber Silences setzen im Grafana, das, ähm, wüsste ich jetzt nicht, wie man da ein schönes
GUI für bauen soll, mit Date-Picker und allem.
Die Auswertung, die Ansichter, die kannst du im Grafana machen, ja, zumindest ist das
nur der Aufhänger, the new unified alerting system, das kenn ich gar nicht, zeig mal,
vielleicht lohnt sich das ja tatsächlich mal anzugucken, the new unified alerting system
for Grafana, everything you need to know, ja, Moment, das kann ich, ne, ne, ne, ne, das
ist die gleiche Geschichte, warum man Grafana nicht fürs alerting verwendet, sondern Alertmanager,
weil du erstmal irgendeinen Graf brauchst und dann auf einzelne Werte von diesem Graf
alerten kannst, und nicht irgendwelche Filter bauen wie im Alertmanager, und wie man da
jetzt schönes Silences einrichtet, keine Ahnung, ist auf jeden Fall nicht schlecht zu
wissen, zumindest ist das Ganze nur der Aufhänger, so, und ihr wisst, ich übertreib's da immer
ein bisschen, ich hab jetzt mal gecheckt, was wir für einen Export haben, also wie groß
das, wie groß das Ganze ist, der nutzt den Alertmanager, das ist auch nicht schlecht,
muss man sich mal angucken, all alerting rules, jaja, muss man sich mal angucken, ach guck mal,
da oben gibt's Silences, das ist interessant, das ist gut zu wissen, das wusste ich nicht,
dass das gibt, warte mal, gibt's da, gibt's da einen Screenshot von, vielleicht, mal angucken
kann, ob mir das gefällt, create alert rule, ja, hatte keiner Bock das anzuklicken hier
vorher, das ist ja der nächste Alertmanager, zumindest ist auch egal, das ist ja letztendlich
nur der Aufhänger dafür, was wir heute machen, und zwar, hab ich mir gedacht, ich übertreib's
und ich mach Autocomplete für unsere Labels, und die Sache ist die, ich hab mal geguckt,
wir haben über 1000 Labels, Samuel, danke für den Zeit, übrigens nicht wundern, die
subscription notifications sind kaputt, weil Streamlabs kaputt ist, so, und wir haben 1200
Labels, also mindestens, mindestens, über 1200 Labels, und keine Ahnung, wie viele
values im Durchschnitt pro Label, das heißt, wir haben ziemlich, ziemlich viel Text, so,
warum hab ich eigentlich noch Cap und so'n Scheiß auf, so, und jetzt hab ich mir, was
hab ich hier noch für Gedöns auf, Alter, so, zumindest hab ich mir jetzt, hab ich mir
jetzt was überlegt, und zwar, die erste Variante ist, man könnte das in memory durchsuchen,
aber ein bisschen RAM-intensiv, stellt euch mal vor, man müsste sich quasi Strings fürs
Autocomplete generieren, aus 1200 Labels mit irgendwie im Durchschnitt, was weiß ich,
sag ich jetzt einfach mal, 200, 300 values, das ist ein bisschen viel, und ich wollte
mich schon immer mal mit Postgres Text Search beschäftigen, deswegen hab ich mir gedacht,
wir starten einfach mal in Postgres Container, generieren uns Fake-Daten, die ein bisschen
so aussehen wie Prometheus Label Value Kombination, und pumpen die in die Datenbank rein und durchsuchen
die und gucken, wie schnell wir's kriegen, und wenn wir was haben, was halbweg schnell
ist, dann bauen wir ins Weltautocomplete dafür, so, ai ai ai, guckt euch das mal an, der Snapshot,
was hab ich denn da gemacht, kannst du ein Beispiel geben, warum man da so viele Tags
und Values nimmt, ja gut, vieles, ist er jetzt einfach fertig geworden, in dem Moment, wo
ich gesagt hab, er braucht so lang, Keg-Wait, ok, dann können wir Update machen, die Checks
exportieren standardmäßig schon, also Metriken heißt das ja bei Prometheus, die exportieren
standardmäßig schon ziemlich viel Zeug, die exportieren die Instanz, worauf es läuft,
welcher Check das ganze ausführt, welcher House davon betroffen ist, was auch immer,
hier, Prometheus Labels, gibt's bestimmt ein paar Bildchen von, Instance, ja, hier siehst
du so ein paar Dinger, Endpoints, also, das kann durchaus sein, dass so eine Metrik mal
irgendwie acht, neun Labels exportiert und sonst was, das ist, so ist das halt aufgebaut
und nach diesen Labels und Values filterst du in Prometheus am Ende, wenn du was finden
willst, also Prometheus geht ja ein bisschen weg davon, dass du sagst, ah, ich habe vier
Houses, die überwach ich, ne, du hast eine x-beliebige Anzahl an Houses, die Metriken
exportieren, die Prometheus einsammelt, letztendlich in Inventory irgendwo brauchst du schon und
dann filterst du, dann sagst du nicht, ich will von Host A was, von Host B und von Host
D, sondern du sagst, ich will die Metrik, keine Ahnung, Heap Space und ich filter nach
dem Label Environment Life oder sowas und dann kriegst du von allen Servern, die exportieren,
die Metriken, wie viel Speicher sie gerade verbrauchen, die produktiv sind, das war so
der Hintergedanke der ganzen Sache, deswegen wird da ziemlich viel mit Label und Values
um sich geschmissen und bei uns ist auch Kubernetes Zeug drin, das legt der Gefühl fünf Millionen
Values und Keys an im Prometheus, wenn es gecrawlt wird, zum Beispiel, ich beantworte
die Sachen im Chat gleich, zum Beispiel gibt es einen Go-Exporter Prometheus, mal gucken,
ob es es da ein schönes Beispiel für gibt, ja, so sieht dann so ein Export aus, der eingesammelt
wird, allein schon wenn du eine Java oder eine Go-Anwendung, ein Node-Exporter für
verwendest, also so heißen die Dinger für Prometheus, also ich kann ja mal schreiben,
Node-Exporter, ich kann ja wirklich nicht schreiben, allein schon so eine Go-Anwendung exportiert
irgendwie 80 verschiedene Metriken oder sowas, hier, ja hier sieht man es zum Beispiel, guck,
das sind die einzelnen Metriken, da hinten kannst du da noch Filter nach irgendwelchen
Labels und sonst was, da kommt schon ein bisschen was zusammen, also ehrlich gesagt, aus erster
Hand nicht, aber ich gehe davon aus, dass Elektroniker halt einfach deutlich mehr, wie
soll ich sagen, Elektroniker ist, dass du genau sowas hier in der Richtung, dass du
an irgendwelchen Telefonanlagen machst, eventuell vielleicht auch an irgendwelchen Hochspannungsdingern
oder so, wenn es da Technik gibt, die das bedarf, keine Ahnung, also ich könnte mir vorstellen,
das ist deutlich mehr Elektronik einfach als beim Fachinformatiker, ja, also ich würde
auch sagen, Feasy ist auf jeden Fall das Richtige. Das erste, was du dir als IT-System-Elektroniker
kaufst, ist wahrscheinlich ein Knipex und Vera, wie heißt das Ding, VDE-Set, wie heißen
diese Dinger, die so gelb und rot sind, die Zangen und Schraubendreher, die so gelb und
rot sind. Worts auf YouTube-Shot, Pog, aber was ich hier mache, ist ganz anders als auf
YouTube, sage ich dir gleich. So, ok, jetzt habe ich euch erzählt, was wir machen und
jetzt gucke ich mal, auch guck mal, mein System hat geupdatet, nice, wir haben es geschafft.
So, machen wir nochmal die ganzen Pipes, was ist Pipes, Pipes, Pipes-RS, was ist Pipes-RS,
ist klar, very important, das braucht man. Das ist wichtig gewesen, das ist auch wichtig,
dass wir das updaten, stellt euch mal vor, wir würden Pipes nicht updaten, übrigens
ich benutze noch Postman und nicht Postwoman, nicht dass jetzt gleich jemand getriggert ist,
gibt es ja beides, gibt es ja beides. Irgendwelche Leute haben sich gedacht, die Software Postman
ist nicht diverse genug und haben Postwoman ins Leben gerufen, was nicht alles gibt. Als
nächstes kommt noch einer und macht einen Fork davon und das ist dann Post-MWD oder
sowas, kann ich mir alles vorstellen. Leute, habe ich euch erzählt, dass wir auf der Arbeit
jetzt auch umstellen von Master-Pranche auf Main-Pranche, die undiversen Zeiten sind vorbei,
jetzt ist die Welt in Ordnung, jetzt ist Main. Was macht das Ding da eigentlich gerade? Ah,
Rust. Moment mal, sehe ich das richtig? Der lädt sich gerade Rust runter, um einen Pipes-Bildschirmschoner
from scratch kompilieren zu können. Wirklich. Ich glaube, ich sollte den Mist deinstallieren,
bevor ich mal ein Update laufen lasse. Ich installiere Rust runtime, Rust dependencies,
libraries, nur um einen fucking Bildschirmschoner zu kompilieren. Genau, das habe ich gebraucht,
richtig wichtig. Ja, ob Physik oder Anwendungsentwicklung ist eigentlich relativ egal,
wichtig ist, was du am Ende kannst. Also, so als Admin, der nur Windows-DNS zwei Sachen
klicken kann, ist schlecht, aber gerade wenn du dich im Cloud-Umfeld auskennst, ist das
zurzeit wahnsinnig begehrt und beliebt. Also, sei es von Server-Automatisierung, irgendwas
von Ansible Terraform, bis Ahnung von Kubernetes-Zeug, bis Ahnung von AWS und Azure und wie
heißt das andere? Wie heißt das Google-Ding? GCS, glaube ich. Und Continuous Integration-Geschichten
und Build-Server und GitHub. GitHub ist auch sehr beliebt, GitHub Actions auf GitHub. Also,
wenn du dich mit so Cloud-Geschichten auskennst, das ist sehr begehrt zurzeit. So, wir haben
alles geupdatet. Machen wir noch mal kurz die ganzen Jetbrains-Sachen aktuell, dann haben
wir genug der Update-Org hier jetzt. Leute, ich glaube, ich lösche einfach mal Pakete.
Oh, wir haben schon alles geupdatet. Ich mache mal gerade mal hier pack-cache-r. Wie ging
das pack-cache-r? Komm mal hier einfach 10 Gigabyte frei. Alte Pakete gelöscht, 10 Gigabyte,
bam. So, jetzt haben wir genug Platz. Also, wir starten uns mal in Postgres-Docker. Docker,
Postgres. In welchem Lager seid ihr eigentlich? Sagt ihr es ist Postgres oder sagt ihr es
ist Postgre SQL? Gibt es ja auch manche, die sagen Postgre, wobei ich mir ziemlich sicher
bin, dass es offiziell Postgres heißt. Ich bin auch im Postgres-Lager, ja. Was? Minus
SCC, löscht alte Auer-Sachen, ist auch gut. Jawoll, auch löschen. Jaja. S. S. Hat es
jetzt was gebracht? Jeder Buchstabe wird betont. Also, ist es dann quasi P-O-S-T oder was?
P-O-S-T-G-R-S-Q-L oder was? Das klingt typisch, das klingt richtig typisch deutsch, diese
Aussprache. Ich spiele nebenbei so ein bisschen MMO und ich finde das witzig, die machen
sich da alle drüber lustig, wenn Deutsche nein sagen. Irgendwie ist das so schon international
voll das Meme geworden. Sobald ein Deutscher, sobald die hören, irgendwie, dass er deutsch
ist, dann sagen sie alle nein. Man könnte sich jetzt natürlich da drüber aufregen und
sagen, oh nein, das muss Rassismus, Diskriminierung oder sonst was sein. Ganz ehrlich, ich kann
da drüber lachen, genauso wie die Griechen. Die Griechen, da sind total viele Griechen
am Start aus irgendwelchen Gründen. Jedes zweite Wort ist malacker. Es ist schlimm,
wenn du in diesen Discord reinkommst, wo die abends PvP machen in diesem MMO, was ich gerade
zeigte. Jedes zweite Wort ist malacker, malacker, malacker. Die hören gar nicht mal auf. Die
Griechen sind permanent am Fluchen. Wobei das, wobei das ja so ein hab ich gelernt, hab
ich gelernt, das ist so ein universal, universal Wort in Griechisch. Malacker kann als Beleidigung
verwendet worden, das heißt ja sowas wie Wichser, aber du kannst es auch für sowas
wie Alter oder Kollege oder so verwenden. Das ist glaube ich so das griechische Altswerkwort
malacker. Ist das so eine Erkrankung wie Typen, die hinter jeden Satz Alter packen? Ja so
ungefähr, sowas ist das ja. Danke für die Subs Leute, ich höre heute keine Notifications,
weil Steamlabs kaputt ist. Hi, es ist Juhi, 25 Monate, Richtspoggers. Welches MMO? Dark
Edge of Camelot auf Celestius R4R. Ja. Das ist aber nur was für Leute, die auf Oldschool
MMOs stehen. Ist aber lustig, wenn man abends da mit 100 Leuten durchs PvP Gebiet zergt.
Was würdest du sagen, was ich alles IT-Systemelektroniker, der in den IT Support, du willst wirklich
in den IT Support? Bist du dir da, bist du dir sicher, ja? 8Kill, danke für den Sub,
für den Sub. Für den Support musst du alles, musst du nichts an Programmiersprachen lernen,
aber überleg dir gut, ob du in den Support willst, überleg dir wirklich sehr gut, ob
du in den Support willst. Ich kann es niemandem empfehlen, in den Support zu gehen. Support
ist nervig, du hast den ganzen Tag mit nervigen Leuten zu tun. Die ist auch nicht zu schätzen
wissen, was du machst. Ja, PowerShell, wenn es Windows ist, aber geh nicht in den Support.
Hast du schon mal, was? PouchDB, was für ein Ding? Pouch, ich kenne CouchDB, ich kann
es nicht mal schreiben. PouchDB, nee, Pouch, Pouch. Ah man, Firefox würde geupdatet, ok,
Restart. PouchDB. JavaScript Datenbank desyncht, nein danke, Kegwaid.
Das ist eine Kombination, die muss nicht sein, oder? Man muss es nicht übertreiben mit JavaScript.
So, also wir starten jetzt erstmal ein Postgres Docker Container. So, ist das, Official Container,
hier. Jawoll, das brauchen wir. Pass auf Leute, Achtung, Flashbang. Ok, ich machs wieder
aus. Na gut, auf Node.js Basis, was denn sonst? Ok, haben wir schon Temp? Moment, wie viele
Temp Verzeichnisse haben wir? Temp, Temp 2, Temp Keg W und Temp Lull. Ich würde sagen,
wir gehen heute einfach mal nur in Temp. Mir ist es heute am ehesten nach Temp und nicht
nach Temp Lull. Ah guck mal, in Temp haben wir noch einen Temp. Alter, was ist das alles?
Was hab ich da gemacht? Was liegt da rum? Oh, mkdir, pg, da, nächster, komm rein. Also
Docker, run, name, some Postgres, perfekter Name, Postgres, Password, my secret Password.
Konnte man dem Ding nicht irgendwie beibringen, jegliche Authentifizierung auszuschalten?
Wer braucht Authentifizierung? Thrust, Postgres, Host, Auth. Nee, ich will alles erlauben,
ich will alles erlauben. Kann man das, vielleicht lässt man das einfach weg und gut ist. So
und nach dem Stoppen, nicht dass ich wieder so ein Problem habe, löschen wir das ganze.
Wir können es auf Fullscreen laufen lassen, auf gehts. Wäre mal für Temp, Temp Lull 2,
ja, können wir auch machen. Als nächstes dann. Ach, Quatsch, ich wollte noch Laufwerke
mappen, ich dab. Ah, oh, was jetzt? Fail to create endpoint, network bridge failed, operation
not sup, ah, ich muss neu starten, da war bestimmt ein kernel update dabei, beim, beim,
ja, ja, da war ein kernel update dabei, das war Reboot. Reboot, ein Gatschi Bus, warum
auch immer, hat damit überhaupt nichts zu tun, am Hauptsache ein Gatschi Bus. So, Firefox,
proben wir mal Temp, pg, docker, so darf ich jetzt, oh, failed, error, weil, uninitialized
and super user password, you must specify postgres password, oh, you may also use postgres,
ja, trust, ich truste allem, ich truste komplett, huge, huge thrusters, ah, funktioniert, siehste,
ganz einfach, docker, ps, port, 5432, telnet, localhost, 5432, geht alles nein, weil, weil
ich den port nicht weitergeleitet hab, äh, minus p, 5432, 5432, sollte ich sonst noch
irgendwas machen, lass mal kurz, äh, überlegen, also port weiterleiten, verzeichnen sollte
ich noch irgendwie mappen, ne, äh, wie ging das, minus v, temp, pg, mkdir data oder sowas,
ich, ich, ich map da einfach jetzt den kompletten, den kompletten Container rein, gut ist, ne,
geht nicht. Gibt das irgendwie die Möglichkeit, wie man den kompletten Container mappen kann?
Äh, Moment, mount, mount, hier, custom, var, lib, postgres, äh, data, pg, data, dahin,
jetzt, ah, yes, excellent, temp, so, hier haben wir unsere Datenbank, da ist es ja noch
keine Datenbank drinnen, aber ich sollte mich jetzt mal connecten können, ja, funktioniert,
gut, wunderbar, muss mal kurz die Musik ein bisschen leiser machen, wobei, die passt
eigentlich von der Lautstärke, ist das Mumu Farm, ist das Mumu Farm, Mumu Farm, Bässe,
excellent, ok weiter, ok, also wir haben eine Datenbank am Start und jetzt müssen wir gucken,
so ganz ahnungslos bin ich nicht, weil ich habe einen Blogpost gefunden, die das erklären
mit Textsuche und zwar, den hier, der Blogpost ist allerdings von 2011, so, richtig, aber
wenn das mal nicht ein Hacker Man Sieben ist für den Blog, dann weiß ich auch nicht,
der erklärt, wie man das, wie man das einrichtet, ja, Datenbank Magic, wichtig ist wohl, dass
man diese, also es gibt, so wie ich das verstanden habe, es gibt zwei Varianten, oder es gibt
drei Varianten, drei Varianten, ich habe da gestern so mal was zugelesen, es gibt wohl
drei Varianten, wie man Textsuche in Postgres machen kann, es gibt die Noob Variante, das
ist, ne, das ist immer noch aktuell hier, das ist nur die erste Variante davon, die
ist mittlerweile 10 Jahre lang verbessert worden, das funktioniert immer noch, theoretisch sagt
man zumindest GitHub, also man kann die Noob Variante machen, man kann sagen, hier, man
kann sagen, select, select, Sternchen from test, where test is like, und dann ist das
standardmäßig, ohne dass man irgendwas aktiviert, einfach linear durchsuchen, so, ja, Potman
kenne ich, haben wir auf der Arbeit am Start, hat aber auch so seine Tücken an den Stellen,
dass es sich nicht so verhält, wie Docker, so, das ist die Noob Variante, das Problem
ist nur, das ist slow as fuck, ich glaube, das sieht man in seinen Tests hier auch, guck
mal, 2,6 Sekunden zum Durchsuchen, dann gibt es die nächste Variante, dann gibt es Postgres
FTS, Fulltext Search, Fulltext Search ist aber für mich nicht das Richtige, weil, wer
ist schlau und weiß, auf was sich das Full in Fulltext Search bezieht, Hi IQ Warning,
auf was bezieht sich das Full, in der Regel zumindest, Weirdchamp, das keiner weiß, nein,
das Full bezieht sich auf ganze Wörter, Fulltext Search, unabhängig von Postgres, das Full
bezieht sich darauf, dass es um komplette Wörter geht, also was du in der Fulltext Search nicht
machen kannst, so ohne weiteres, ist sowas hier, da geht es um ganze Wörter, deswegen
gibt es in Postgres ein Addon seit 2011, das ist mittlerweile standardmäßig dabei, das
muss man nur für die jeweilige Datenpack aktivieren, gibt es nämlich ein Addon und
das nennt sich PG Triggum und mit PG Triggum, was für Tree Cramps oder sowas steht, kann
man Substrings suchen, da kann ich nämlich sowas machen, ich suche nach Gag irgendwo,
egal was da vorkommt, egal was dahinter kommt, soweit die Theorie, benutzt habe ich es noch
nicht, wir werden jetzt folgendes machen, wir legen jetzt mal eine neue Web Anwendung
an und dann machen wir es einmal, suchen wir einmal mit der herkömmlichen, ihr wisst
genau, dass ich einen, ihr wisst, dass ich einen Lizenzkey habe, oder? Ihr wisst, dass
ich einen Lizenzkey habe, ich kann es beweisen, dass ich einen Lizenzkey habe, guck, ich habe
einen Lizenzkey, ich habe diesen Lizenzkey aber nur nicht in meinem Leidungs-VM drinnen,
guck ich habe einen Lizenzkey, Help About, ja, Subscription is active, Licensed to Max
ja, ich habe einen Key, so, ich habe den Key aber nicht in der VM, das heißt, ich habe
den Kram bezahlt, bevor jetzt irgendjemand auf die Idee kommt, ich würde hier komische
Sachen machen.
So, ich habe mal schnell neu installiert.
Also, Start Trial, die sind high IQ geworden, Alter, die sind high IQ geworden, man kann
nicht mehr einfach seinen Key löschen und es funktioniert wieder, Mist, Login, ich weiß
mein Login aus dem Kopf nicht, ok, ich gucke mal, ob das hier drinnen steht, Login, ich
muss hier mal den Keypass gucken, ich glaube nicht, ich habe nämlich den Account nicht
hier, JetBrains, nein, ich habe den Account nicht hier, Rider, den habe ich bei mir auf
dem Keypass drinnen, aber nicht hier, na super, Moment, man muss für die Trial sich log innen,
wirklich, das ist jetzt neu, dass man sich einloggen muss für die Trial, ok, dann machen
wir uns eben ein JetBrains-Account, nein, nicht wegen, machen wir uns ein JetBrains-Fake-Account,
Login, JetBrains, ich habe meinen Key nicht hier, ok, ich suche mal meine Mails, ich suche
mal meine Mails, JetBrains, unangenehm, ja, JetBrains, JetBrains, dumme Werbung, 2015,
das kann doch gar nicht, achso, ich muss global suchen, JetBrains, ich habe das All Desktop
Pack, sag mal, warum ist die Thunderbird-Suche eigentlich schlechter geworden, im Vergleich
zu früher, ok, ich habe, please follow the link, Software Activation, All Products Pack,
All Assets, ok, jetzt muss ich mich einloggen, fuck man, keine Ahnung, License-Certificate,
ok, wir machen uns ein Fake-JetBrains-Account, was anderes fällt mir nicht ein jetzt, ich
habe meinen Account nicht hier, also, E-Mail, ja, perfekt, E-Mail, 10-Minute-Mail, ja, das
ist das, das ist meine richtig echte E-Mail, sign up, ich kriege Anfälle, ok, was, was
machen wir jetzt, haben wir irgendwie, Trash-Mail, kennt ihr mal einen guten Wegwerf-E-Mail-Service,
den, Müll-Mail, Müll-Mail klingt gut, Müll-Mail, den da, den hier, Müll-Mail, perfekt,
Ultra- und Feuer-Information, alles klar, temp-mail.org, das haben die bestimmt auch
drinne, das haben die bestimmt, ich muss mir glaube ich einen Key zuschicken lassen, Spam-Decoy,
jetzt geht es ab hier, Spam-Decoy kann Gültig-Zertifikat, da gehe ich nicht drauf, your box is empty,
Ekel-Dingsbums-So, alles klar, sign up, ah, exellent, wir haben was gefunden, wir haben
was gefunden, Moment, habe ich jetzt, oh fuck, ach hier ist es, complete your registration,
exellent, exellent, confirm your account, jawoll, Max, last name, username, temp, user 123, Passwort,
haha, wer es glaubt, ok, ich brauche einen Moment, ich brauche ein gescheites Passwort,
muss ich mir mal ausdenken, ok, muss ich mir mal aufschreiben, sonst vergesse ich es wieder,
alles klar, ja, habe ich gelesen, ich konzentre auch alles, Temp-User, safe, there are no valid
license start trial, ja, hat es jetzt funktioniert, perfekt, ok, exellent, new solution, das war
jetzt echt schwere Geburt, ich sollte mich mal registrieren hier drin, ich habe eine gültige
Lizenz, kann ich oft genug sagen, ok, nicht empty solution, wir wollen eine x-te solution
haben, wir wollen isp.net core web application, web api, docker support, die ist sehr günstig,
das ist tatsächlich gar nicht mal so schlecht, ich habe einen all desktop jetbrains pack,
das kostet glaube ich 120 Euro oder sowas, ich will alles, jawoll, nee, so viel hat es
nicht gekostet, warum ist das so teuer, für persönliche Nutzung 150 Euro, nee all products
pack, 250 Euro, und es wird dann jedes Jahr billiger, das ist ok, wenn man den Kram quasi
beruflich nutzt, kann man sich nicht beschweren, finde ich in Ordnung, 250 Euro im Jahr, im
zweiten Jahr 20% weniger, ab dem dritten Jahr 40% weniger, das ist schon in Ordnung, ich
meine klar, für kommerzielle Nutzung ist der Kram schon ein bisschen teurer, ok, weiter
gehts, web api, web application one, nee, wie heißt das, Leute wir brauchen einen guten
Namen, das ist der search champ, wir erstellen das im gleichen directory, create, einfach
in die Unis einschreiben, super Idee, fake studieren für jetbrains Lizenz, new problem
tool window, ja, gut, die wetter vorschau, die löschen wir, und den api controller,
den benennen wir um, also den wetter forecast controller, den benennen wir um in api controller
und löschen alles raus, was hier standardmäßig drinnen ist, api controller, weil den brauchen
wir ja später für unsere autocomplete zum abrufen, so alles weg, alles weg hier, jaja,
jetzt, das ist erstmal egal, return, ok, ich will einfach, dass der Kram kompiliert,
alles klar, so, und jetzt probieren wir das ganze mit der postgres datenbank mal aus,
also wir haben ja unseren postgres container laufen, und wir machen jetzt zwei Schritte,
wir suchen, also wir generieren jetzt fake daten, und dann durchsuchen wir die und gucken
wie schnell es ist mit und ohne postgres extension dafür, so, swagger kommt gleich schonmal weg,
kommen wir nicht, swagger, weg damit, ausgeswagt, aber wir wollen use developer pages haben,
lttp, redirection, sonst was braucht alles, kein mensch, weg damit, lolw, swagger, max
zu alt für swagger, richtig, alles weg damit, gut, also postgres datenbank, support hinzufügen,
dazu brauchen wir, was ist das, microsoft, oder entity kann ich einfach suchen, entity
framework core, hier, da ist es doch, ah, nicht runter, hier, was ist das, was ist das
für ne suche, postgres, ich brauch entity framework postgres, entity framework postgres,
was da brauche ich, jawoll, entity framework core postgres, gib ihm, install, ja, ist es,
das ist quasi das gegenstück zu, wie hieß der kram in rails noch mal, action, action
record, hieß das in rails glaube ich, oder hibernate im java umfeld und sonst was, das
ist der offizielle, also entity framework core ist, also über die benahmung kann man
sich streiten, die benahmung ist immer hängen geblieben bei microsoft, kannst du einmal
erklären was du genau machst, ok, wie kriege ich das, haben wir ein aktuelles, haben wir
ein ausrufezeichen heute, für heute irgendwie, mach mal ausrufezeichen heute, probier mal
aus, ob das funktioniert, vielleicht hat irgendein high iq big brain mod, wir bauen unsere,
nein das stimmt überhaupt nicht, wir bauen nicht die übungsapp weiter, aber wobei, ist
ok, ist ok, kann man so stehen lassen, heute wird techtalks in auto complete, richtig, ja,
also ich hab eine riesenmenge text, 1500 labels, mit jeweils pro label ungefähr, keine ahnung,
500 values und die will ich schnell durchsuchen können für auto complete, wir machen's,
wir pumpen den kram in die datenbank und einmal machen wir es ohne search extensions und einmal
mit und gucken wie unterschiedlich schnell das ganze ist, jetzt erstmal und dann bauen
wir in auto complete dafür, dass man das schön im browser durchsuchen kann, ok, wir richten
jetzt erstmal unsere datenbank ein hier drinnen, das ist neu übrigens, früher hatte man hier
so ein startup file, wo man das alles konfiguriert hat, seine webanwendung, mittlerweile haben
die alles in program geschrieben, ich persönlich find's ein bisschen dumm, aber was willst
du machen, es ist so alles so zusammengeklatscht, also, builder service add db context, dann
legen wir ein extra ordner an, das muss man nicht wirklich machen, aber ich find das,
das ist so, immer noch so, isp.net best practice, add db context, so und was möchten wir durchsuchen,
wir möchten da eigentlich nur text durchsuchen, aber nachdem das ganze ja super krass objekt
orientiert ist, also es ist quasi objekt orientiert ist, also weil das objekt orientiert
ist, muss man erstmal eine klasse anlegen mit ein paar feldern für text und sowas
in der richtung, nennen wir das einfach mal cute chat text, int id, das ist der primary
key für die datenbank, das muss man haben, sonst funktioniert's nicht und dann haben
wir noch irgendwas für unseren text, fertig, mehr brauchen wir nicht und unser add db context
hat ein db set, das muss man übrigens immer gleich machen, das ist jetzt nix besonderes,
das sieht immer so aus in isp.net core und da haben wir jetzt, was steckt der denn vor,
ist perfekt, ich nenn's einfach values, sehr schön, ne das müssen wir so machen, prop,
glaube, db set, cute chat text, text values, vollkommen egal wie das ding heißt, so wunderbar,
das hat er für schmerzen, das muss auch public sein, gut also und jetzt können wir unsere
datenbank anlegen, gehen wir mal hier rein, add db context, db context, das hab ich vergessen,
achso, jaja muss vom base db context erben, sonst funktioniert's nicht, gut und jetzt
können wir sagen, wie krieg ich jetzt überhaupt zugriff auf meine datenbank in diesem neuen,
tollen, wir haben alles in main stehen, geschiss, wahrscheinlich so, app, database, app, db
context, service, tja das war im startup file einfach, im startup file konnte ich einfach
sagen gib mir mal datenbank context instance und es hat funktioniert, wie macht man das
hier jetzt, services, get service, app db context, funktioniert das so, das jetzt experimentieren,
ich hab keine ahnung ob das so funktioniert, wir gehen mal in das verzeichnis, wo die anwendung
drin ist, der search champ,.net, run, gib ihm, schauen ob das jetzt funktioniert, oh, cannot
resolve scope, ach es ist ein scope service, also da hat's microsoft echt unnötig kompliziert
gemacht, also app, services, scope, quick scope, scope, service, get service, nee ach du große
scheiße, wie geht denn das, get service, app db context, so geht das jetzt, fließt microsoft,
lasst es einfach mal funktionieren, also das mit dem startup file war deutlich schöner,
hey es funktioniert, nice, ok, so jetzt haben wir zugriff auf unsere datenbank, jetzt können
wir sagen, context, database, created, wir müssen jetzt keine extra sql queries oder
sonst was bauen, sondern wir können bei jedem anwendungsstart die datenbank einmal löschen
und einmal anlegen, das macht er alles für uns, das sehen wir jetzt auch gleich, oh,
no database provider has been configured, achso klar, ich muss ja noch connection string
hinterlegen wie er zu meinem docker container hinkommt, weil die datenbank läuft ja hier
drin, das heißt, wie konfiguriert man einen connection string, options, ach nee, moment,
da wahrscheinlich, options, connection, ok ich muss, ef core postgres connection string,
ich muss gucken wie das funktioniert, sollte man zwingend entity framework verwenden, wenn
man eine datenbank anbindet, scheint mir irgendwie zum verreich zu sein, das geht, es ist im
prinzip sind es 3-4 zeilen, du kannst auch dapper oder sowas verwenden, kannst aber auch
alles an, du kannst auch sql von haben, so wie geht das jetzt hier, use npg sql, use npg
sql und dann host, da sind java viel besser, ist das so, ja gut, irgendeinen vorteil muss
java ja auch mal haben oder, so host, myhost, host ist localhost, database ist cute, cute
chat, database, username, brauchen wir nicht, habe ich ja alles gelöscht, so, run, nee,
moment sind falsch, dot net run, mal gucken ob es jetzt funktioniert, oh, was, appdb context
would call, alter, was will der von mir jetzt, ach stimmt, man muss im constructor anlegen,
was man eine options haben will, appdb, nee wie war das, db options, irgendwie sowas, options,
macht es jetzt einfach nur so wie ich es im kopf habe, geht das jetzt, aha, oh fatal,
monkaS, role max does not exist, ah, der nimmt meinen user standardmäßig, username, ich
glaube postgres ist der standard user dafür, das sieht schon besser aus, ok, also was er
für mich macht ist folgendes, er sagt create database, cute chat database, also hier sieht
man die sql-commandos, die herunter der haube hausführt, was geht, hast du Urlaub, nee,
hab ich nicht, hab keinen Urlaub, und dann macht er create table, text values, weil wir
das so genannt haben, ein primary key und, ah nee, das hier ist der primary key und ein
textfeld, was nicht null sein kann, ok, ich arbeite montags nicht, da kann ich so Sachen
hier machen, so, also wir haben unsere datenbank, die jedes mal neu erstellt wird, excellent,
big brain time, und jetzt befüllen wir die datenbank mal mit Schwachsinn, mit random
daten und machen da ne suche drin, also dazu gibt es eine schöne library, die nennt sich
bogus und die macht das, was der name, ja, wonach der name aussieht, die generiert random
daten, guck mal, der patrick ist auch da, poggers, moin, heute haben wir postgres, postgres full
text, nicht full text search, stimmt nicht, postgres text suche, einmal langsam und einmal
schnell, das in langsam hab ich schon gemacht, aber in schnell noch nie, mal gucken, ok,
so, bogus.net, ja, faker ist die javascript-geschichte, ne, ah, jetzt, viel besser, wie ging der kram
noch mal, test orders, ah, ich weiß, ich weiß es wieder, faker gleich new faker, so,
und jetzt generieren wir fake daten, also wir brauchen 1500 labels, faker, internet, gibt
es domains, domain name, domain word, suffix, domain word ist gut, internet, domain word,
also was der jetzt hier macht, der generiert 1500 randomwörter, so, guckt, bam, und das
sind auch jedesmal andere, werden ihr sehen, also jedesmal, wenn ich in deutsch nenne, sind
das andere, das sind einfach fakesachen, die das ding randomize für mich, so, also das
ist unser label, label, so, dann machen wir noch ne schleife mit 500 values pro label,
und das ist dann unser value, und das ist dann keine, was nehmen wir denn da, internet,
was haben wir da noch zu bieten, internet, color, email, ip, mac, mac, das wärs jetzt
auch, oder, was sagst du zu swell, das find ich richtig, richtig nice, url, url ist gut,
bis jetzt gibt es noch nichts kompliziertes, so, also jetzt haben wir 1500 mal 500 fakesachen
für die datenbank, das ist ein bisschen was, oder, so, und das, ja 750.000, ich mein wir
können auch einfach, komm, wir sind einfach mal, wir sind einfach mal, wir machen einfach
genauso viele values pro label, wie wir label haben, dass wir richtig testen können, dass
es brummt, dass die datenbank ein bisschen was zu tun hat, also jetzt haben wir, das
ist 1500 mal 1500, ja, hier, millionen, 2,2 millionen, excellent, das brauchen wir, vielleicht
machen wir auch mehr, mehr labels, wir machen einfach, komm, wir machen 500, aber wir machen
einfach 3000 labels, letztendlich ist es egal, es ist vollkommen egal, weil, wir eh einen
string draus bauen und in die datenbank schreiben, für die tekstsuche, so, und, wir machen jetzt
erstmal ne liste und gucken, was da, list add, so, und zwar den kram speichern wir jetzt
in folgendem format, label, gleich, also das ist das was ich später autocompleten will
im webinterface, cringe wer unter 10 millionen ist, ja wir können das ja nachher mal hoch
machen und gucken, wobei ich davon ausgehe, dass auch das hier schon, ich mach das mal
ein bisschen kleiner, das wird ne ganze weile dauern in die datenbank zu schreiben, kann
ich mir vorstellen, gucken wir mal, value, so, und jetzt sagen wir datenbank, text values,
add, ne add range, add range, unsere liste rein, geht nicht, warum, ah weil ich dumm
bin, weil ich sagen muss, ist ja kein string, es ist ja cute chat text, der typ, die laufzeit
wird noch schlechter werden, weil er bestimmt für tekstsuche extra sachen beim insert machen
muss, so, save, alles klar gib ihm, gib ihm, mal gucken wie lang das jetzt dauert, wir
machen noch ein paar status meldungen, generate, und jetzt kommt hier insert, insert, run, oa
er macht ganz schön viel, aber das gute ist, wir müssen das nur einmal machen, danach
lege ich die datenbank jedes mal neu an, ich kommentiere jetzt einfach dieses delete aus,
ich kommentiere das jetzt einfach aus, wir füllen das einmalig um gut ist, ah ne machen
wir nicht, ich hab was vergessen, doch das ist bulk insert, add range, das ist der einzige
insert hier, das müsste, das müsste ein bulk insert sein, das logging dauert bestimmt
länger, wir haben was falsch gemacht, ich muss nochmal abbrechen, und zwar, das was
ich hier inserte will ich to lower, warum will ich das komplett in klein buchstaben
haben, weil die suche dann schneller ist und einfacher ist, wenn es klein buchstaben sind,
roam abgestürzt monkaS, siehe nicht nach bulk aus, keine ahnung, ich lasse es jetzt
einfach nochmal inserten und gut ist, vielleicht ist das stream abgekackt, zu viel pixeländerung
im video, also es ist immer sinnvoll, wenn man sagt, das mache ich jetzt schon mal in
weißer voraussicht, ich weiß nicht ob man das wirklich braucht, vielleicht ist ja postgres
auch so schlau und indiziert das quasi alles nur in klein oder wie auch immer, wenn man
text durchsuchen will ist es immer sinnvoll den text vorher in klein oder groß buchstaben
umzuwandeln, klein buchstaben ist ein bisschen geläufiger, weil dann kannst du in der suche
dich darauf verlassen, dass das alles klein ist und du musst nicht klein und groß checken,
ok alles inserted und das kommentieren wir hier mal aus, das brauchen wir nicht mehr,
wir machen da mal, wir machen da mal eine extra, ich lager das mal aus, sonst wird mir das
gerade ein bisschen viel, was testen, extract, das verwende ich so gut wie nie, extract method,
at the beginning of, after, gucken was er jetzt macht, ok new function, create tb, pifat, refactoring,
guckt es euch an, ok das refactoring in extra funktion hat sich nicht wirklich gelohnt,
weil es steht immer noch da, ist jetzt bloß in der funktion drin, ok das hat es jetzt
nicht gepragt, können wir das in extra klasse verschieben lassen, refactor this, jawoll,
ne na gut, klasse, ich mache es in extra, ich mache es in extra, klasse, was weiß ich, db
wunderbar, dtx, ja ganz toll, so und das verschieben wir jetzt, verschieben wir in extra, hallo,
konnte der das nicht verschieben in extra klasse, in extra datei, move to db creator,
ja super, bester Name überhaupt und das machen wir jetzt noch static, ich will jetzt einfach
nur, ich will es einfach nur raushaben aus meinem main, dass ich dann gleich was machen
kann, perfekt, so wunderbar, so will ich das haben, gut das bleibt so, da kann ich
das jetzt nämlich auskommentieren und immer wenn ich die datenbank neu anlegen will, mache
ich das dann da rein und muss mich da nicht weiter drum kümmern, ok, alles klar, so wir
haben eine datenbank gefüllt mit jede menge text und jetzt suchen wir da drin und das sollte
langsam sein, weil wir haben jetzt insgesamt 750.000 strings eingefügt in die datenbank
und wenn wir das suchen sollte es nicht sonderlich schnell sein, weil der muss, wenn wir sagen,
wir suchen einen text, der irgendwo drin vorkommen kann, nicht am anfang, nicht am ende, irgendwo
mittendrinne, dann muss der die komplette datenbank durchscannen, anders gehts nicht,
also sagen wir mal hier, result gleich context text values, where, oh keine ahnung, element
oder wie auch immer man das nennt, entity, so where, text, contains, contains, und es
braucht mal ein suchwort, query, keine ahnung, weißte nicht was da drin steht, ho, ho, ho,
wir suchen nach ho, weil später will ich gucken ob host irgendwo drin steht, so ho,
ho, contains, query, so und das sollte jetzt ziemlich langsam sein, so result count, guck
mal wie viel er gefunden hat, und wir brauchen noch ne, ne, ne uhr, stopwatch new, elapsed
total milliseconds, so mal gucken wie schnell der jetzt ist, run, ok, der braucht um die
komplett null, wie, es fängt nichts, ok, e, e muss aber drin vorkommen, achso, moment,
das ist ja postgres-syntax, ich brauch hier keine postgres-syntax, das brauch ich vielleicht
später, ok, zehntausend sachen, die ho enthalten gefunden, und wir brauchen 850 millisekunden,
das ist nicht sonderlich schnell, muss man mal sagen, also für mein autocomplete, insgesamt
geb ich dir recht, insgesamt ist das ziemlich zackig, aber für mein autocomplete ist es
ein bisschen lahm, wir könnten das wahrscheinlich noch beschleunigen, indem wir einfach sagen,
ok, wir nehmen bloß 100 Ergebnisse, dann müsste er noch mal schneller sein, ne, ok, also, wir
führen das jetzt ein paar mal aus, um wirklich zu wissen, wie, wie, wie, wie schneller ist,
hier void, run, das da kommt da rein, oh ne, ich hab keine, der hat meine hotkeys irgendwie
überschrieben, das ist aber ziemlich dumm, so, e, was kommt da rein, sehr schön, und
jetzt führen wir das ganze einfach 10 mal aus, guck mal wie schnell es ist, 10 mal run,
und wir sollten dort net auch im release-modus starten, guck mal, wenn es gecashed ist, wird
es sogar deutlich schneller, guckt euch das mal an, das flutscht richtig, fängt an mit
840 millisekunden, geht dann runter auf 35 millisekunden, wir haben, Leute, ich seh
es schon, wir haben zu wenig Text, wir haben zu wenig Text, wir müssen mehr Text reinschreiben,
dass man wirklich die Unterschiede sieht, aber c, release, zu wenig Text, kann man nicht
multithreaden, doch, man könnte das auch multithreaden, also gut, jetzt die Datenbankzugriffe multithreaden
eher nicht, aber später, wenn du Anfragen an den Server schickst, das ist das standardmäßig
multithreaded, da macht ja ein, quasi ein thread auf pro, also der schnappt ein thread
aus dem threadpool für pro request, glaube ich, so, das ist alles a busy, a busy schnell,
das ist alles a busy schnell, ich glaube da sehen wir die Vorteile nicht richtig, wir
müssen, Leute, da muss mehr Text rein, wir gucken mal kurz wie groß unsere Datenbank
jetzt ist, gerade aktuell, äh
ich hab slash temp, ich hätte, ich hab mein temp verzeichnis gemapped, ok, das ist nicht
so schlau, wie hab ich es denn genannt, pg, deswegen ist es wahrscheinlich auch so schnell,
weil es gerade alles im ram liegt, wobei, ne, tmp ist kein ram, äh, das muss nochmal,
muss nochmal aus, muss nochmal neu befüllt werden, Leute, muss nochmal neu befüllt werden,
ähm, ich will nicht das, ich will, äh, home max tmp data haben, so, pg, data, das ist
doch schon besser, ja, da liegt jetzt auch postgres zeug drinne, alles klar, so, also,
füllen wir die Datenbank nochmal, füllen wir die Datenbank nochmal, mit, diesmal mehr,
wir brauchen mehr text, 1500, echt, wir machen, wir machen, wir machen, äh, komm, wir machen
3000 labels mit jeweils 1500 Dingern, das sind dann quasi, äh, 4,5 Millionen Einträge,
das ist doch ordentlich, das machen wir, 4,5 Millionen, text, bam, run, give him, generate,
ok, das könnte, das könnte jetzt ein bisschen dauern, na gut, es ging doch eben auch relativ
schnell, der hat eben eingefügt mit, hat irgendwie ne, eben 20, 20, 20 Sekunden gebraucht, jetzt
hat er wahrscheinlich ne Minute oder so, ja, 4,5 Millionen ist erstmal in Ordnung, kann
ich mitleben, wir müssen dann richtig den Unterschied sehen, zu normalem Durchgreppen,
zu, oder ordentlicher Text-Search, ja, da gibt's verschiedene Sachen, ist die Frage,
was du machen willst, also wo liegen deine Interessen, möchtest du Web-Anwendungen machen
oder Webseiten machen, möchtest du irgendwelche Kommando-Zeilen-Tools machen, möchtest du
gar, äh, GUI, Windows-GUI-Programme machen, Spiele, es ist die Frage, wo deine Interessen
liegen, gibt's zig Varianten und jeder wird dir sagen, seine Lieblingssprache ist die
beste, aber wo liegen denn deine Interessen, dann können wir dir auch was empfehlen.
Wenn du gar keine Ahnung hast, was du machen willst, dann kann ich dir eine Sache empfehlen
und das ist, fang mit JavaScript und, ähm, den Browser an, da siehst du, was passiert,
nimm dir den Editor, nimm dir den Browser und mach bisschen JavaScript, gut, das sind,
das sind zwei komplett unterschiedliche Paar Schuhe und, wehe, es kommt mir jetzt einer
mit Elektron an, also Web-Entwicklung, GUI-Programmierung sind zwei ziemlich unterschiedliche Paar Schuhe,
ja, ich würde sagen, fang mit JavaScript an, fang mit JavaScript an und du kommst eh nicht
dran vorbei, du kommst, egal was du machst heutzutage eigentlich, kommst du nie an JavaScript
hier im Android-CSS vorbei, also sprich, das musst du eh lernen, insofern ist meiner Ansicht
nach in dem Fall tatsächlich das beste, ich bin das Gegenteil von, lass dich nicht chibbeln
vom Chat, ich bin das Gegenteil von C++-Fan, ich hasse C++, und wir fangen nicht an damit
jetzt warum, weil das atet wieder aus, jo, zumindest fang mit JavaScript an, schnapp
dir nen Browser, nen Text-Editor, Rüssel Studio Code am besten, da hast du schön viel Tutorials
und Hilfen zu, schnapp dir nen Browser und fang an, bisschen HTML, JavaScript, CSS, dann
siehst du auch gleich, was passiert, warum 3-Head, das ist nicht nur 3-Head, das ist
quasi schon 2-Head, soll mal kurz gucken, wie groß unsere Datenbank mittlerweile ist,
wir mischen die da, jawoll, ne, ne, ne, Moment, du, data, sudo, achja, guck mal, unsere Datenbank
ist schon Gigabyte groß, da flutscht's, du kommst an JavaScript heutzutage nicht vorbei,
es sei denn du bist Cobalt-House-Entwickler, Leute, fällt euch irgendeine Richtung in
der IT ein, wo man zumindest ein bisschen JavaScript, CSS und HTML vorbeikommt, Embedded, ne, selbst
da nicht, guck mal, ok, vielleicht super krass Embeddedes Zeug, was keine Leute verwenden,
aber ganz ehrlich, selbst wenn du irgendwelche IOT-Geschichten baust, brauchen die Dinge
ein User-Interface, Machine Learning, ne, irgendwo müssen die Sachen am Ende angezeigt
werden und das ist ja sogar meistens im Browser, ist er, oh, er ist fertig in certain, Leute,
er hat fertig, ok, guck mal, das Query dauert jetzt schon ein bisschen länger, das Query
dauert jetzt schon 200 Millisekunden, es ist aber immer noch saumäßig schnell, oder,
er findet 86.000, guck mal, ich mein 200 Millisekunden, muss man sich mal überlegen,
200 Millisekunden zum Durchsuchen einer Datenbank mit 4,5 Millionen Textzeilen, also das ist
gar nicht mal übel, aber zumindest haben wir jetzt eine ordentliche Datenbank, bisschen
was drin, ok, lassen wir die Suche nochmal laufen, so und wir können jetzt mal gucken,
wir können jetzt ein paar Postgres-Funktionen verwenden, vielleicht kriegen wir es jetzt
ohne Index und alles schon ein bisschen schneller, also merken wir uns mal 200 Millisekunden ungefähr,
er findet 86.000 Einträge, braucht 200 Millisekunden, die Einträge sind übrigens nicht immer gleich,
weil die Werte, die er generiert, variieren, weil halt random Daten, so, aber ungefähr
kommt es wahrscheinlich immer so in die Richtung, so, also, probieren wir das mal, ob es beispielsweise
schneller geht, wenn wir anstatt diesem.NET Query verwenden, wenn wir ein eingebautes,
eine eingebaute Postgres-Funktion verwenden, ok, Text, und zwar suchen wir jetzt, ho, später
suche ich vielleicht ein anderes nicht so ganz missverständliches Wort, so, wie schnell
sind wir jetzt? Schneller, schneller, also, wenn.NET nicht den String-Vergleich macht,
sondern Postgres selbst den String-Vergleich macht, dann sind wir ein bisschen schneller,
machen wir mal nicht im Release-Modus, wie es dann aussieht, ähnlich, so, also wir sind
runter, man muss sich mal überlegen, 4,5 Millionen Strings zu durchsuchen, einfach mal, einfach
mal nur 173 Millisekunden lang, das ist saumäßig schnell, Alter, das hätte ich gar nicht
gedacht, so, wie groß ist unsere Datenbank? 1,1 Gigabyte, na gut, das ist ja auch nicht
viel, aber das ist tatsächlich ziemlich zackig, ne? Stimmt, wir vergleichen mal das Query,
so sieht das Query aus, wenn wir schlau sein wollen, und wenn.NET das Query macht, aber
so sagen wir ihm, Case interessiert uns nicht, so, und wie sieht das Ganze aus, wenn.NET
das macht, Contains, wie sieht dann das Query aus? Bisschen anders, also guckt mal, so ist
unser Query, wenn wir von Hand schlau sein wollen, und so ist unser Query, wenn.NET
das für uns generiert, Text, das ist schon irgendwas anderes, also zumindest ist, wenn
wir schlau sein wollen, ist es schon mal schneller, das ist immer gut zu wissen, greifst du bei
jemanden, der ist da auf der Linie, das ist eine VM, das ist eine VM, ja, VM, ok, da siehst
du, auf dem zweiten Desktop, ok, also wenn wir mitdenken, so, gucken wir mal, steht da
Host vielleicht drinne, Host, Host, haben wir das da schon drinne, ja, nee, Null, Null
Einträge, ähm, Sekunde, wir gucken, wir geben uns mal den ersten Eintrag aus, CW Result
First, First, was? Achso, äh, nicht das ausgeben, sondern Text ausgeben, mal gucken, ob das
überhaupt, die Suche überhaupt stimmt, achso, ja, da findet das H, das Ho, wo ist, Ho, ok,
da findet das wirklich, ok, wir suchen mal danach, gucken, wie schnell er da ist, das
ist doch verhältnismäßig schnell, muss ich echt, muss ich echt sagen, das ist, also
für das, dass wir 4,5 Millionen Textzeilen haben, die zu durchsuchen in 170 Millisekunden,
das hat auch so schon ohne irgendwelche Optimierung ordentlich Performance, ne, kann man, kann
man sich nicht beschweren, na gut, so, und jetzt gucken wir mal, ob wir das noch weiter
beschleunigen können, indem wir diese Postgres Search Extension verwenden, so, da muss ich
jetzt mal gucken, wie das funktioniert, also ich hab hier diesen Blogpost von 2011, 2011
hat das ganze noch 3 Sekunden gedauert, für 2 Millionen, aber 2011, so bis hierher, das
ist gecasht, ja, das ist gecasht, das sieht man daran, dass es, aber ich finde das durchaus
interessant, wie schnell das schnellste ist, wenn es gecasht ist, wir müssen uns einfach
das erste angucken, so, das erste, guck mal, das erste dauert ne Sekunde, das erste dauert
ne Sekunde, das ist dann schon ne ganze Ecke langsamer, das ist gecasht richtig, ja, ich
glaube, wir können nach, wir können nach Wörtern mal suchen, die mit H anfangen, viel,
oder die, die H enthalten, viel randomer, also, also mehr kann's ja da eigentlich nicht
geben, na, was machen wir das, komm, wir machen das nur einmal, das reicht, ja, da braucht
ungefähr ne Sekunde, der braucht ungecasht, ungecasht ungefähr ne Sekunde und findet
alle Einträge, ist aber auch klar, weil jeder Eintrag HTTP enthält, also können wir mal
nach HTTP suchen, das müsste ja jeder Eintrag enthalten, ja, warte mal, machen wir mal Query,
String, String Query, schön SQL Injection hier, so, Run, machen wir mal, lassen wir
mal verschiedene ausführen, also wir suchen nach HTTP suchen wir, wir suchen nach, was
war das andere, Arak, das ist übrigens das einzige Wort, was ich auf türkisch kenne,
da muss man auch ein Y davor machen, dann heißt das Schwanz, frag mich nicht, warum
ich weiß, was das auf türkisch heißt, so, Run, oh, Sequence contains no elements, warum
nicht, wie, Sequence contains no elements mit HTTP, ah, ich hab die, ich hab die Prozente
nicht vergessen, ne, auch andere Queries sind schnell, egal, wir halten uns jetzt gar nicht
so, gar nicht so lang dran auf, wir versuchen das mal schneller zu kriegen, wusste gar nicht,
dass du auch streamst, ja ab und zu, ab und zu stream ich mal, also wir haben ungefähr
170 Millisekunden für sowas hier, wir haben 170 Millisekunden für sowas, aber wir kriegen
das bestimmt noch schneller, und zwar will ich jetzt jetzt damit machen, die Sache ist
nur die, ich hab keine Ahnung, wie man das einrichtet, als erstes muss man, wenn ich
das so richtig sehe, als erstes muss man diese Extension hier enablen für die Datenbank,
und dann muss man einen speziellen Text Search Index anlegen, und dann ist das angeblich
viel schneller, und das testen wir jetzt mal, ich hab auf Github was gefunden, NGP, PSQL,
ich hab auf Github was gefunden, wie man das einrichtet, und zwar in meinem Datenbank-Kontext,
in meinem Datenbank-Kontext muss ich das hier machen, was es macht, keine Ahnung, es macht
Sachen, wie füge ich das da ein, Overwrite, Model, Create, ne, so, also, nicht Metabilder,
Has Index, ne, Entity, Entity ist Cute Chat Text, so, Has Index, so, und zwar ein Index
nicht auf der Document Number, sondern für den Text, und dann aus irgendwelchen Gründen,
Has Method Gin und Has Operators Gin Triggum Ops, was auch immer, zumindest deckt sich das
mit dem, was der Typ hier von Hand macht, er sagt, Create Index, darauf, Name, für Test
Table, Using Gin, was auch immer Gin ist, Gin ist wahrscheinlich irgendwas für Text
Search, ne, Gin, Gin, was ist Gin?
Text und Gin Index, aha, Gin Indexes, also irgendwelche super High IQ Geschichten, die
in Postgres drin sind, und dann muss man sagen, das ganze macht man, das ganze indiziert man
mit dem Gin Triggum Ops Algorithmus, und dann sieht das so aus, und ich weiß nicht, ob
das geht, ich weiß nicht, was es macht, ich hab das nur aus dem GitHub Issue rausgesucht,
das probieren wir jetzt mal aus, das heißt, wir lassen die Datenbank jetzt nochmal neu
erstellen, bei HTTP können wir suchen, HTTP findet immer 4,5 Millionen, das ist eigentlich
ein guter Test, einfach HTTP suchen, das ist eigentlich ziemlich High IQ, wir lassen einfach
HTTP suchen, 10 mal, wir lassen 10 mal HTTP suchen, weil HTTP findet er immer, ok und
jetzt müssen wir die Datenbank neu erstellen lassen, Copy Paste, Hauptsache klappt, also
wir lassen jetzt die Datenbank neu erstellen, mit diesen neuen Options, und nochmal neu
befüllen, und dann gucken wir, ob es schneller ist, kannst du das Logging beim Insert ausmachen,
das ist eine gute Frage, wie man das macht, EF Core Disable Logging, ist Manjaro Architekt
inzwischen outdated, nee, Manjaro Architekt ist immer aktuell, Architekt ist quasi NetInstall,
glaube ich von dem Ding, so die minimal NetInstall, alter, scheint ja High IQ zu erfordern, um
das Logging auszuschalten, wir lassen das Logging an, so langsam war das jetzt auch
nicht, ok also Datenbank neu erstellen lassen, außerdem ist es vielleicht gut, wenn das
Logging an ist, dass ich Fehler sehe, oh, wo wir gerade beim Thema Fehler sind, also,
achso dann, da müsste man tatsächlich mal gucken, manjaroarchitekt, manjaro.org, so,
ne, nicht XFCE, will nicht XFCE haben, NetInstall, wirklich, es muss es doch geben, man muss
doch ne Minimalinstallation machen können, wenn man den ganzen Shit nicht haben will,
oh, dann weiß ich auch nicht, dann weiß ich auch nicht, aber wir müssen uns jetzt auf
Datenballstells konzentrieren, warum geht das nicht, warum ist er der Meinung, gint rigim
ob's does not exist, ah ich weiß warum, weil ich die extension nicht aktiviert habe, man
muss vorher sagen create extension, pg triggim, damit das funktioniert, das heißt ich muss
irgendwie ihm hier sagen, model builder, extension, wie, das funktioniert, was has, has postgres
extension, ne ich will nicht sagen has postgres extension, ich will die aktivieren, post, postgres,
das war richtig, aber has postgres extension, da krieg ich dann true oder false zurück
oder sowas, oder insertet er das, wenn es das nicht gibt, ah, achso, das ist keine Frage,
sondern das ist eine, es hat, also es ist nicht, hat es eine postgres extension, Fragezeichen,
has hat eine postgres extension, achso, ok, postgres extension, stringname, pg triggim,
ne, pg triggim, alles klar, postgres ist es, ist es enabled, ist es standardmäßig dabei,
so run, aha, haha, es funktioniert, poggers, so, dann können wir uns jetzt noch, oh der
insert könnte jetzt deutlich länger dauern, weil der muss jetzt ja, der muss jetzt ja
nicht nur den text inserten, sondern, der muss ja auch immerhin, was auch immer noch
triggim ops macht, machen, das dauert bestimmt lange der insert jetzt, schauen wir mal, halbe
sekunde länger, ah, schauen wir mal, so programm hier, also run, http müsst ihr ja weiter
4,5 Millionenfach finden, also wenn alles funktioniert, sollte die suche jetzt deutlich
schneller sein, freige, os, os ist manjaro linux oder arch by the way, wobei ich ja gehört
habe, wenn man manjaro verwendet, darf man arch by the way nicht sagen, das ist i3, i3wm,
da hat gar kein desktop, ich habe nur ein desktop hintergrund, da kann man nichts machen
hier, hoffe ich bringe nicht noch mehr chrome zum absturz, wie gesagt ich habe selbst installiert
mit architekt damals, aber irgendwie gibt es ja architekt anscheinend nicht mehr, architekt,
weil zu viel arch by the way, ich mein du kannst natürlich auch ein, was weiß ich gnome
desktop nehmen oder so und installierst die e3 und schaltest dann darauf um, das geht
natürlich auch, leute ich hab, wir haben eine sache gar nicht gemacht, wir hätten sortieren
müssen, leute wir hätten sortieren müssen vorher, das müssen wir gleich auch nochmal
testen nachdem wir das hier getestet haben, wir hätten sortieren müssen, weil ich will
ja in diesem, ich will ja gar nicht nur wissen, wo host drin vorkommt, ich möchte die dinger
ja auch sortieren, ja zum beispiel, ich schaue wo host drin vorkommt, aber alle die mit,
die mit dem query string anfangen, will ich höher ranken und sowas und in order by noch
hinterher zu schießen, kann ich mir vorstellen, das dauert eine ganze ecke länger dann.
der insort dauert aber auch schon länger, hat jemand geguckt wann der angefangen hat?
wie groß ist denn meine datenbank jetzt, zack, ah wir sind schon bei 1,5g, ok, wie viel programmieren
hast du nach der ausbildung einen job gelernt, kann ich nicht sagen, ich bin immer was so
hobbyprojekte angeht, ziemlich aktiv gewesen quasi, permanent hab ich irgendwas neues
gebastelt, auf der arbeit selbst gelernt, gar nicht so viel, ok der insort dauert deutlich
länger, meine ram auslastung ist auch deutlich höher, ist er fertig, ist er fertig?
das macht ja kaum einen unterschied, das macht ja kaum einen unterschied
die erste suche, ne die erste suche ist jetzt ein bisschen schneller, oder auch nicht, ja
die erste suche ist ähnlich langsam, ok wir machen jetzt einen order by, wie groß ist
die datenbank jetzt, wird eine ganze ecke größer, ok da hauen wir jetzt ein order by
drunter, order, da, order, order by absteigend, text starts with query, ne das funktioniert
jetzt ja an der stelle nicht, ok, wir testen mal kurz, so auch mal http, jetzt waren wir
hier massive huge SQL injection, macht sowas auf gar keinen fall, ich sag's nur, ne nicht
dass einer auf so ne idee kommt, ah ne moment ich habs ans falsche auch noch dran gebaut,
0, alter was ist hier mit dem einfügen los gerade, so wie schnell ist das jetzt, ah falscher
orner, ok, order by, ok 4,5 millionen dinger orderen, ne wir suchen hier nach, wir suchen
hier nach, wir wollen nur die finden, ok das ist schnell, das ist schnell, das ist bestimmt
nicht so schnell mit dem anderen, das flutscht ja mal richtig jetzt, wie viel findet er da
insgesamt, einfach nur mal den count ausgeben, macht ja keinen unterschied, ja ok jetzt sind
wir jetzt sind wir schon deutlich schneller, ich glaube einfach wenn man was sucht was
es nicht gibt, dann ist es halt oder wenn es, na gut 4,5 millionen halt, ja das ist dann
schnell kann er gleich erkennen, ok das ist schnell, das ist zag ich jetzt, sieben millisekunden,
ja das ist mal flutscht, da flutscht der autocomplete, da flutscht der autocomplete richtig, ehm
ich hab noch ne idee, dass wir immer die gleichen daten bekommen, sollten wir den seed setzen
von dem random generator, also dass wir immer die gleichen random daten bekommen, ihr wisst
was ich mein, oder, sieht ja erstmal so aus als widerspricht sich das aber, seed, ne,
set, seed, wie ging das, seed, so seed, ne, bogus.net, seed, man konnte da irgendwie setzen
dass der immer mit dem gleichen anfängt, glaube ich zumindest, seed, ne, randomizer
seed, hier randomizer seed, also muss man sagen, baker, ne, baker, ne, seed, bin zu
dumm dafür, wie geht denn das, wie gibt es da nen randomizer, seed, ah ok, new random,
ok, ja new random 1,2,3,4,5,6, ja perfekt, so und jetzt sollten wir immer die gleichen
daten kriegen in die datenbank, randomized, einmalig, aber immer die gleichen, hoffe
ich, muss ich das vielleicht so umsetzen, zuerst den seed bevor ich das mache, ja bestimmt,
ok, so ich würde sagen jetzt können wir es mal vergleichen, jetzt können wir es mal
direkt vergleichen, also wir machen die gleiche sache, new random 1,3,3,7, ja ok das ist
ne gute idee, das machen wir, 1,3,3,7, sehr schön, so also wir deaktivieren das jetzt
mal, so, wir deaktivieren das jetzt, müssen wir den kram nochmal seeden lassen, aber ok,
wir deaktivieren das jetzt mal, dass der, diese ganzen indizierungsgeschichten macht
und lassen es mal befüllen, so, run, das geht jetzt schneller, das geht jetzt schneller
weil es das insert ist ohne was, 3,3,7,4,2,0,6,9, ja noch besser, dann hast du auch noch, hast
so gut wie alle meme numbers mit dabei, so das geht jetzt schneller, das dauert jetzt
plus 30 sekunden oder so, so jetzt, jetzt müssen wir sehen, dass das ziemlich langsam
ist, erstmal gucken was da für random sachen drin ist, das dürfte jetzt relativ langsam
sein, weil wir keinen index und nix haben, ja ja, so, ich lasse den jetzt mal machen,
habe ich irgendwelche, übrigens danke für die ganzen subs leute, das ist heute kaputt,
die subscrib, die subscription, das subscription overlay ist kaputt, ich mein man könnte mal
testen ob es wieder funktioniert, aber ich glaube nicht, es funktioniert immer wieder,
skulky, skungy, danke schon für den sub, nee ist immer noch kaputt, mal follow mal aus
und wieder an, ne scheint immer noch broken zu sein, probier es mal aus, steamlabs, steamlabs,
login, login, continue with twitch, ok, steamlab funktioniert mal wieder, alert box test resub,
alert send, ja oder auch nicht, test subscription, nö, test follow, nö, ist einfach, ist einfach
broken, vielleicht muss ich mal länger ausschalten, dass es reloadet, test follow, nö, da müssen
wir bis zum nächsten stream warten bis es funktioniert, aber dankeschön leute hier
nightshade, alle auch subscribert, pock, massive pock leute, der samuel, den habe ich gar nicht
gesehen, danke für den sub, ich muss die scene switchen und jetzt hat es reloaded,
ist, ich kriege, ich kriege obs erklärt hier, poggers, nö, ist immer noch kaputt, vielleicht
muss ich echt, vielleicht haben die gerade problem immer noch bei steamlabs, alert macht
bedge, ja, so was macht der seed, er seedet noch, aber ich habe den kram doch jetzt ausgeschaltet,
ne, hab gesagt, model, ja ausgeschaltet, alles ausgeschaltet, ok, seedchamp macht er, ah
ist fertig, ok, guckt mal, guckt mal, sieben millisekunden versus, sieben millisekunden
versus 162 millisekunden, das ist schon ein großer unterschied und ich könnte mir vorstellen,
dass es bei real world data, die nicht immer exakt gleich aufgebaut ist, noch deutlich,
deutlich einen größeren unterschied gibt, seedchamp ist, der chat wieder, alter, seedchamp
ist ein guter namen für eine samendatenbank, monkaS, kachibas, ja, ok, aber das ist schon
ziemlich, ziemlich zackig, dann würde ich sagen, ähm, kommentieren wir das mal aus
und schauen uns mal den ersten match an, ob das, ob das überhaupt stimmt, was der da
ausgibt, result, burst, text, run, ach guck dir mal einer an, wenn du den text ausgibst,
ist es sogar noch langsamer, ist das, versucht das ding das irgendwie zu optimieren, wenn
du nur count machst, dass es nur zählt und kein text, kein content abruft und wenn du
den text ausgibst, dann muss es content abrufen, irgendwie sowas, vielleicht versucht es richtig
big brain zu sein, also leute, wir müssen immer den text ausgeben, um die richtige,
richtig geschwindigkeit zu erkennen, ja, also, aktuell haben wir 334 millisekunden pro
suche, das ist natürlich nicht schön, ähm, ja, wollen wir noch irgendwie sonst was testen,
das ist die langsame variante, so und wir können es ganz einfach beschleunigen, indem
wir, und jetzt ist die datenbank, sekunde, jetzt ist die datenbank 1,4 g groß und danach
ist 1,4, das macht ja kaum einen unterschied, also das lohnt sich ja auf jeden fall, das
indizieren zu lassen, das einzige ist, der insert ist deutlich langsamer, aber was juckt
mich der insert, ich update die datenbank, keine ahnung, einmal in der stunde oder so,
da juckt mich das ja gar nicht, nice, nice, nice, das gefällt mir, gut, dann machen wir
jetzt, dann machen wir jetzt das autocomplete frontend, ich lasse den jetzt nochmal siedeln
und nochmal einfügen, aber da müssen wir nämlich zugucken, was ist das ding hier,
was hat er für schmerzen, deleted, start new, gut das ist das query, ja gut, run, also
340, merkt euch mal, 340 millisekunden gecached, 340 millisekunden gecached und jetzt lassen
wir ihn nochmal laufen mit dem ganzen text search, optimierungsgramm und wir legen schon
mal unser frontend an, nochmal will ich dem dann nicht zugucken bei, waren wir auf dem
nächsten tab, rider, wie habe ich es genannt, champ, irgendwas mit champ, search, ok, wie
war das jetzt nochmal mit zweltprojekt, zweltkitprojekt anlegen, npx, nee, zwelt, install, nee erstmal
npm update machen, mit elasticsearch, ja sowas ähnliches machen wir heute auch, nur dass
wir postgres unten drunter verwenden, so also, weil man mkdir, ein ordner für unser frontend,
wir nennen es einfach frontend, frontend, nee wir müssen das mit zweltprojekt machen, war
das at next, hier init, init, init zwelt at next, das ist es, aber wir machen vorher noch
npm update, minus g, mache ich das richtig leute, nee, nee ich muss nicht sudoen, normalerweise
sollte der das hier npm installieren, npm init, was macht das hier überhaupt, npm,
geht das das direkt von der seite runter, oder ist das jetzt, was macht das, nehmt das das
was ich installiert hab, guckt ihr im internet nach, javascript zeug alter, sudo npm azure,
ok npm how to upgrade cli tools, npm upgrade, npm upgrade ist es, npm upgrade, was ist das,
wo ist der unterschied, minus g, ok sudo, warum, das hat er doch sonst auch immer bei mir im
heimatverzeichnis installiert, weil ich eben gesagt hab, schmeißt diesen ganzen kram bei
mir, moment hab ich das gelöscht, npm global local user, das ging doch, ah so musste man
das machen, npm config set prefix, genau, und jetzt kann ich, ah ja ok ok, ok, minus
g, minus g, nein, npm, upgrade, gut ist ja auch nichts installiert, oder update, ist
ja nichts installiert, ok, alles klar, add next, so unsere app heißt einfach nur frontend,
create yes, this is betasoftware, skeleton project, typescript no, linting, wer braucht
linting, gbaited, prettier, no, alles klar, cd, frontend, npm install, shit in it, sparen
wir uns jetzt erstmal und jetzt den browser aufmachen, welcome to swelledkit, alles klar,
sehr schön, warum wir eine swelledkit app machen, verstehe ich auch nicht, eigentlich
brauchen wir das gar nicht an der stelle, wir wollen ja serverseite nicht wirklich was
rendern, wurscht, so, dann machen wir visual studio code auf, wir tauschen die desktops
mal kurz, das kommt auf 4 und das kommt auf 3 und es möchte neu gestartet werden, auch
ok und dann machen wir die frontendgeschichte, wie weit ist unsere datenbank eigentlich,
oh, ist meine t-max session gerade verreckt, war das zu viel text, mein ram war voll, oh,
ich glaube ich habe unlimited scrollback buffer, das ist keine gute idee für den so einen
fall, ich glaube mein termin hat gerade meinen ram voll gemacht, naja, kommt mal vor, docker
ps, der läuft aber noch, er läuft noch, er läuft noch, run, dann muss der jetzt nochmal,
dann muss der nochmal sehen jetzt, aber vielleicht, vielleicht ist er ja auch fertig, meint ihr
der war fertig schon, ne, wir lassen es nochmal laufen, ne, der war noch nicht fertig,.net
run, ok, so, machen wir unser frontend zeug weiter, so, next, rider, search champ, frontend,
social studio code ist auf, open, damn, so, das erste was wir brauchen ist darksteam,
ne, damit schlage ich mich jetzt nicht rum, readme, source, roots, indexwelt, alles klar,
ein, nochmal reload, gib ihm, reload so oft du willst, so, ok, wir machen dann autocomplete,
jetzt, haben wir es jetzt, ec, ok, dann machen wir das jetzt, ok, ok, ok, ok, ok, ok, ok,
machen wir das jetzt, machen wir jetzt, app, body, style, background, background color,
ist nicht ganz so schlimm, eins, zwei, ok, sehr schön, so, wir müssen noch tailwind
adden, für mehr css styles, das haben wir doch letztens ja auch schon gemacht, install,
add latest, yes, forms, dass es schöner aussieht, schrift dann ec, ok, wir machen das, der chat
sagt uns wie das auszusehen hat, wie sieht das gesiede eigentlich aus, oh, oh, oh, das
sieht es immer noch, und wie sieht das aus mit tmp, postgres, sudo, wie groß ist, wir
sind fast fertig Leute, bei 1,6 war das letzte mal fertig, 1,6 war das letzte mal durch,
gleich haben wir es geschafft, gleich fertig gesiedet, ich hoffe mein terminal kackt nicht
ab, mein ram ist gleich wieder voll, ich glaube unlimited scrollback buffer ist keine gute
idee wenn man sowas im terminal macht, oh, oh, oh, Leute mein ram ist gleich voll, praege,
reicht der ram, wir haben es geschafft, noch 100mb, noch 100mb in die datenbank, ich kann
jetzt nichts mehr redirecten, da läuft es wieder 10 minuten, ich habe keinen swap, ich
habe 16g ram, das muss reichen, nur für die vm, mein host hat 32, das muss reichen, swap,
immer swapless, gleich haben wir es geschafft, 86% ram, ich glaube er ist fertig, ram auslastung
geht runter, jawoll, ok, ja es hat gereicht, easy, so beenden, beenden und unbedingt deleted
rausnehmen und create rausnehmen, so und jetzt mal gucken wie schnell die suche ist, 21ms,
das flutscht, das riecht krass schnell oder, boah, alter mein scrollback buffer, guck mal,
wie viele sind das, 1, 9, also fast 10 millionen zeilen, alles klar so viel braucht man natürlich
in seinem terminal, das ist sehr sehr wichtig, sehr sehr wichtig, ich werde mal kurz das
terminal zumachen, damit ich ein bisschen ram frei bekomme, auf einschlag, paar gigabyte
mehr frei, run, ok, und zwar noch alles, 18ms, ok, also was soll ich als schrift verwenden,
habt ihr gerade gesagt, ah das hab ich noch, ok, also wir halten uns jetzt aber wirklich
nicht mit den schönheiten auf hier, ja, class, text, äh ne, ne, äh, was nicht, nicht text,
achso, haha, die sache ist hier gar nicht drinnen, äh, text, oh wie ging das mit tailwind nochmal
so was spezielles, man konnte doch irgendwie sowas hier machen, ne, ne, oh da bin ich zu
low iq für, und wir müssen autosave wieder einmachen, format, format und save muss wieder
eingeschaltet werden, jawoll, nicht style, quatsch, chat, chat hat wieder keine ahnung,
was ist, ah so ging das, tailwind magic, so, so, und dann brauchen wir äh margin, ich
kanns mir immer nicht merken was der unterschied zwischen margin und padding ist, padding
ist innen und margin, ne, padding ist außen und margin ist innen vom element, ne, also
will ich padding haben, außen, vier, landscape, dankeschön für den sub, gut, tailwind forms,
wie hat man das jetzt nochmal hinzugefügt, margin ist außen, also will ich, also will
ich m4 haben, ok alles klar, require plugin tailwind forms, so, jetzt sehen nämlich meine
inputs auch hübsch aus, so, das hier ist pifat, cute, chat, text, search, class, text, xl,
2xl, 3xl, ne gibts, oh, so, 2xl und font bold, sehr schön, so, beste, so, also viel
hübscher kann die seite nicht mehr werden, input, inputfeld, iiih, ich habe legit keinen
bock ein inputfeld zu stylen, inputfeld stylen sind abartig, class, strap, ne, ne, ne, ne,
wir machen, leute ich mach das absichtlich selbst, weil ich keinen plan von css hab und
ich will das ein bisschen lernen, bg, nicht transparent, black, ok, das funst schonmal,
also bg, bg, jetzt brauchen wir ne schöne farbe, die dazu passt, wir brauchen, wir brauchen
ne schöne farbe, die dazu passt, also wir nehmen, wir nehmen mal die eingebauten dinger,
cray, so, so, jawoll, perfekt, so und dann sagen wir hier noch, das margin, bottom, here,
w, full, so über die ganze seite, so und jetzt haben wir unser super krasser autocomplete
am start, massive, beste autocomplete aller Zeiten, leute, die wir hier haben, poggers,
so und jetzt müssen wir schauen, wie wir hier events hinbekommen, also, script, jetzt muss
ich ein bisschen überlegen, also wir müssen mitbekommen, wenn man text typed, also value,
bind value, da brauchen wir sowas wie let, nennen wir mal text, text ist standardmäßig
leer, bind, text, kann ich sich einfach value nennen, dann kann der kram hier weg, ne, oder
so, konnte man das hier irgendwie abkürzen, wenn das gleich heißt, value, achso, ne, das
konnte ich weglassen, das konnte ich weglassen, ok, das bedeutet, wenn ich da jetzt was eingebe,
dann bekomme ich es hier unten mit, ja, also theoretisch bekomme ich es dann hier unten
mit, ok, also die variable wird gefüllt, wenn ich was eingebe, margin top 10, so, also ich
bekomme schon mit, wenn man text eingeben, jetzt muss ich ein query zu meinem, oder query
wie auch immer, zum Server schicken, für jede Texteingabe und dann das Ergebnis zurückgeben,
ok, schauen wir mal, schauen wir mal, erstmal müssen wir den Server programmieren, dass
er ordentliche Antworten schickt, konnte man nicht hier draufklicken, das ging zu, achso,
das war die Frage im Chat, first level support ist grausam, wo ist die Frage, hier, moin max,
ich muss mal kurz den Bonbon futtern, moin max, habe mal eine Frage bezüglich IT-Einschieb,
habe die Möglichkeit in die IT als gelernter Einzelhändler einzusteigen, also ich höre
erstmal nur first level support, also ich sag nicht, dass es allgemeingültig ist, was ich
hier sage, muss ich gleich dazu sagen, aber meiner Erfahrung nach, vom aktuellen Arbeitgeber,
wo ich jetzt bin, einmal first level, immer first level, sie haben den Leuten, die damals
unter anderem mit solchen Voraussetzungen angefangen haben, immer gesagt, so nach dem
Motto, ja fang doch mal first level an und danach hast du Aufstiegschancen, danach kannst
du woanders hin, es hat bisher bei einem funktioniert und auch nur mit ganz viel durch die Reifen
springen und er hat dann nach einem halben Jahr gekündigt, weil ihm das zu bunt wurde,
so dieses wir wechseln in ein anderes Team, also ich kann es von meinem Arbeitgeber sagen,
einmal first level, immer first level, oder einmal support, immer support und ganz ehrlich,
support ist eines der undankbarsten Dinger, die du überhaupt machen kannst, das musst
du halt abwägen, also wenn du sagst, hey du redest eh gerne mit Leuten, also das kann
man, ich kenne immer noch von mir ausgehen, wenn du sagst, du hast Spaß daran mit Leuten
zu reden, Leuten irgendwie bei ihren Problemen zur Seite zu stehen, wie auch immer und dich
fackt dein Einzelhandelsberuf so ab, dass du lieber quasi support arbeitest, dann machs,
ja klar warum nicht und man kann ja auch nicht allgemeingültig sprechen, dass das in jedem
Unternehmen so sein müsste, einmal first level, immer first level, bei uns ist es halt so,
also wenn ich das richtig abfackt im Einzelhandel, dann machs, ja ok, also wir geben jetzt hier,
wir brauchen jetzt hier eine, ein Endpunkt für unseren HTTP Request, dem wir ein Query
Parameter übergeben, String Query und muss ich mal überlegen, wie mach man das jetzt,
so wie hier, das kommt auf jeden Fall weg, das da brauche ich, das da brauche ich, der
Rest kommt weg, so, wir brauchen einen db-Kontext, ab db-Kontext, so, Query, return result, so
und wir return definitiv nicht alles, sondern wir returnen nur die letzten, wie viele, Leute,
wie viele Sachen in so einem Auto complete sind sinnvoll, 10, 20, mein alles definitiv
nicht, da kackt mein Browser ab, 10, würde ich auch sagen, 10, 10, ok, by the way, macht
so eine Scheiße hier nicht, ja, irgendwelche String Zusammengefüge in HTTP Request, das
ist so eines der, der sichersten Garantien sich irgendwelche SQL Injection Scheiße einfangen
zu lassen, SQL Injection goes brrr, ja, auf jeden Fall, so, ich glaube mehr brauchen wir
an der Stelle gar nicht, ich glaube es geht an der Stelle sogar, weil das ne fertige Funktion
ist, die das escapt, ich gehe davon aus, die escapen das, also, wenn ich jetzt hier
sowas machen würde, drop table, wie auch immer, oder hier reinschreiben würde man
query drop table, das dürfte nicht funktionieren, weil die das hier schon escapen, ja ja, ich
gehe ganz stark davon aus, die escapen das schon für mich, also ich kann das machen
in dem Fall, was soll denn der escape character sein, achso, nee, ich glaube das in dem Fall
schon okay, ich glaube die escapen das hier für ein, aber man sollte das wirklich nur
mit sehr Vorsicht genießen, ja, okay, also, weiter im Text, das sollte eigentlich reichen,
wenn ich das jetzt starte und ein Query übergebe, dass ich Antworten in JSON bekomme, probieren
das doch mal aus, run, okay, es läuft, also, curl local, achso, welchen port läuft denn
das überhaupt, alter, 5268, das ist auch so ein komischer port, so, slash, api, slash,
was haben wir gemacht, get, achso, gar nichts, das kann nicht funktionieren, das kann nicht
funktionieren, Moment, das ist falsch, falsch hier, irgendwas, nee, nee, nee, das muss ich
anders machen, ich muss sagen, http, get, so, und dann template, so, wir wollen das ganze
mappen unter slash api slash search und dann irgendwie Query, so, so in der Richtung, glaube,
muss man das machen, wenn ich das jetzt im Kopf richtig habe, search und dann suchen
wir nach, nach was habe ich hier gesucht, dass ich auch auf jeden Fall was finde, was
finde, süt, süt, süt, hey, uns, guck mal, wie schnell das ist, Leute, alter, das flutscht,
das ist ja krasser autocomplete, guck mal, wie schnell das ist für 4,5 Millionen Textzeilen,
das geht richtig, das flutscht, as fuck, feels bad man chain lore, da sieht man mal, die Einschläge
kommen näher, ich kenne jetzt auch schon ein paar mittlerweile, bis vor kurzem kann ich
nur zwei mit Corona, wie unterscheiden sich web api zu mvc, aber web api, achso, mvc ist
doch die Geschichte mit razorpages, oder, ist mvc nicht die Geschichte mit razorpages,
weil der view sind die razorpages, Leute, ich muss mal einen bonbon duschen, wird's,
rocke in der Hals, ihr müsst mich, was habe ich gesagt, chat, chat, jetzt aber mal ernstes
Wort mit dem chat reden, was habe ich euch vor zwei Wochen oder so gesagt, woran ihr
mich erinnern sollt, richtig, ich soll was trinken, und jetzt habe ich nichts getrunken,
jetzt habe ich trockenen Hals, sauererei, Anzeige ist raus, so, und jetzt noch ein bonbon
hinterher, dann ist gut, 42 spielen, ja, alles klar, du hättest das auf jeden fall wissen
müssen, ja, bei dem name, ok, also, text search, das gehen wir übrigens so nicht zurück,
aber, egal, zum testen reicht das, ok, wir müssen jetzt ein query machen, bei jedem mal,
wenn sich das value ändert, sehe ich das richtig, also, jedes mal, wenn sich das value ändert,
jedes mal, wenn sich mein value ändert, dann machen wir ein fetch zum server, await, patch,
achso, ich kann da nicht awaiten drin, warum kann ich da nicht awaiten drin, kann ich sowas
hier machen, async, kachibas, nee, ah nee, nicht async, nee, ist da preserif noch da,
der kennt sich doch mit zfeld aus, wie macht man das jetzt hier richtig, muss ich da, ich
muss bestimmt ne function machen, async, function, irgendwie keine ahnung, query server, und,
das ruf ich einfach auf, jedes mal, irgendwie so, server value, alter, das ist hässlich,
das gefällt mir nicht, waren das anders, bind, on input, query server, also, immer, wenn
der input sich ändert, machen wir mal hier die textkonsole auf, dass ich sehe, was passiert,
immer, wenn sich der input ändert, von meinem search fällt, dann, wir loggen gerade erstmal
nur was, value, a, b, c, o, a, a, a, ah, das laggt immer eins hinterher, nee, das kann
ich dafür dann nicht nehmen, heck wait, na, das ist dumm, chico, wo kommst du her, na,
der pacass ist grad da, na chico, was is, ja ich kann jetzt net, schmeißt wieder die
runter hier. Chico? Na? Wollt ihr die Katze mal brummen hören? Komm mal her, Chico. Ne,
die will nicht. Da bist du, komm. Einmal, einmal in das Mikrofon brummen, auf gehts.
Die will nicht. Die will nicht, dass ich sie nimm. Auf, Chico, komm her. Ich wär wild
markiert hier am Bein gerade. Ja, Chico, Chico, Chico. Die ist wirklich hartnäckig
gerade. Chico, komm mal her. Komm mal her. Lass dich mal nehmen. Auf, jetzt gehts. Auf,
Chico, ich schnapp dir. Ich schnapp sie jetzt.
Siehst du, Chico? So, jetzt, Chico, hier, brummen in das Mikrofon auf. Ich weiß nicht,
ob ihr was hört, aber wahrscheinlich nicht. Ihr müsstet aber eigentlich was hören. Nein,
die will nicht. Sie ist weggeflützt. Musik zu laut. Ja, Chico, dann mach ich die Tür jetzt
wieder zu. So, alles klar. Weiter, wo sind wir stehen geblieben? Ja, das leckt immer
eins hinterher. Na, das ist ja doof. Dann müssen wir das doch so machen. Hier. Query
vor. Und dann irgendwie, wenn sich das ändert oder so, keine Ahnung. Geht das jetzt? Lull.
Oh, jetzt wirds doppelt ausgeführt. Achso, ja klar, wird doppelt ausgeführt, weil ich
das doppelt gebindet hab. Lull, jetzt gehts hier, guckt. L-U-L. On key up. Hm. On key
up, warum nicht? Das, on key down, könnte man probieren. Ich lass das jetzt so, das
funktioniert. Wir querying jetzt den Server. Also, fetch, await, patch, HTTP, doppelt
ausgeführt, localhost. Was für nen Port war der Krämpel hier? Ja. Hobby. So, und wir
suchen nicht sud, sondern wir suchen value. Await, fetch. So, response. Und jetzt nicht
da. Let, wir sind ja in Javascript. Let, json, gleich, await. So, runde json, parsen. Und
jetzt brauchen wir hier, nennen wir das nennen wir items, also sprich in array an autocomplete
vorschlägen. Oh, irgendwas hab ich kaputt gemacht. Error, connection refused. Warum?
Why is connection refused? Wow. Ah, ich weiß woran das liegt. Das ist eine SvelteKit App.
Also, das ist eine SvelteKit App, der muss ich erstmal verklickern, dass ich das nur
im Browser machen will. Browser. Browser. Svelte, Browser. SvelteKit. Nicht kite. SvelteKit.
Browser. If Browser. Genau. If Browser. Browser. Import Browser. Das da will ich haben. If Browser.
Mit gebrost. If, nur wenn wir im Browser sind. Eigentlich ist es total bescheuer, dass
ich was verändere, was Server-Side-Rendering machen kann, wenn ich überhaupt keine Server-Side-Rendering
Sachen habe. Also, naja. Naja. Ich die Schenke blieb. Console. Oh, Monkey Edge. Was jetzt?
Course has been blocked. Aber es kackt nicht mehr ab. Course has been blocked. Das stimmt.
Das funktioniert jetzt nicht, weil die Webseite wird ausgeliefert über Localhost Port 3000
und der Server selbst läuft auf einem anderen Port. Ich muss jetzt dem anderen Server, der
muss quasi Anfragen akzeptieren von Seiten, die er nicht ausgeliefert hat. Ich glaube
aber, wir können das umgehen, indem man die Locale IP verwendet. Ne. Dann brauche ich
Core-Settings. Darf ich so? Was? Ne. Ne. Ok, dann. Dann brauche ich Core-Settings.
Ähm. Haben wir da nicht noch irgendwas übrig, wo ich mir das abgucken kann? Kegway as a Service.
Kegway as a Service hat doch bestimmt Core-Settings oder Core-Settings. New Window. Desktop 5 wird
langsam viel. Startup. Force. Nein, haben wir nicht. Kegway as a Service hat das nicht.
Ok, Open. Was haben wir noch? Der Heiz-Champ. Der Heiz-Champ ist keine Web-Anwendung. Der
Speed-Champ vielleicht. Hat der Speed-Champ sowas? Hm. Ich muss mal kurz in meinem Projekte-File
suchen. Der Preis-Champ. Den Preis-Champ habe ich hier aber nicht liegen. Course. Wow, wow.
Wassertrinkzeit habe ich gerade schon. All oder so. Wie nenne ich ihn das immer? Ok,
egal..NET. Course. Zeig her. All Origin. Ich brauche irgend so ein Template dafür. Aktivieren
von ursprungsübergreifenden Anfragen. Alles klar. Gibt es das ganze auf Englisch? Jo.
Hier. Add Policy. Use Course. Ok. Da hat doch bestimmt in Stack Overflow was einer für
mich schon fertig. Hier. Configure Services at Course. Genau, das will ich haben. Services.
Ok. Builder. Builder Services at Course. My Policy. Ja, heißt My Policy. Ok. All Origins.
Allow any Origins. Any Methods. Jawoll. Perfekt. Und hier unten drunter sage ich jetzt App,
Course, Course. Nee, was muss ich als nächstes machen? Achso. Use Course. Was soll ich jetzt
machen? Use Course. Und jetzt? My Policy. My Policy. Gib ihm. So und jetzt sollten alle
Requests erlaubt sein, wenn ich das richtig gemacht habe. Schauen wir mal. Wie kann man
sich den grau hinterlegten Text einblenden lassen? Was da? Control Leerzeichen. Schauen
wir mal, ob es geht. Jawoll. Unexpected End of JSON Input. Anzeige ist raus. Warum das
denn? Loggen wir das mal? Was stimmt da an dem? Geht das immer noch nicht?
Warte mal. Ist ja. Ist ja meine Course Settings immer noch nicht richtig? 404?
Häh? 404? Funktioniert doch. Achso. Ah. Moment. If Browser und und Value und gleich
null. Ich mache gerade Anfrage, ohne dass was drin steht. Ah. Jetzt Funktion auch guckt.
So. Items. Jetzt ich habe ich habe eine leere Anfrage geschickt. Kann ja nicht funktionieren.
Items. Schauen wir mal. Also A. B. Was zum? Achso, da findet nichts mit A, B. Also was
muss ich sagen? Süt. Süt. Ah ja, da oben ist es übrigens. Süt. Nice. Funktioniert.
Süt. Guck mal, wie schnell das ist, das geht. Ey, das ist richtig, richtig krass schnell.
Man erkennt es, man erkennt es aber bloß nicht, weil ich das nicht iterate. Also Log. Items.
Cola oder Pepsi? Ganz ehrlich, keins von beiden. Ich habe ewig nichts mehr davon getrunken.
So. Süt. Ja, nice. Okay, also das sind unsere Elemente, die wir als Antwort bekommen. Auto,
Autovervollständigung. Die bestehen aus dem Text und der ID. Na, das ist dumm. Eigentlich
will ich den Text gar nicht haben. Ich möchte eigentlich nur. Ich möchte nur den Text,
nicht die ID. Was will ich mit der Datenbank-ID? Das ist ja bescheuer. Die Datenbank-ID brauche
ich nicht. Die schmeißen wir klar wieder raus. Also. AP Controller. Take 10. Und davon dann
Select. Sonst wird es sonst. Wenn ich das Select am Anfang mache, wird es mega langsam.
Und davon dann, also wir sind mit zehn Elementen. So und von diesen Elementen nehme ich jetzt
nur den Text. Die ID brauchen wir nicht mehr. So. Und eine Sache, die wir auch noch machen
ist. Ich logge mir mal die Zeit, wie lang so eine Anfrage braucht. Start new. Wobei. Steht
das nicht sogar? Steht das nicht sogar drinne in diesem Request? Warum das mega langsam
wird? Nee, Two Array ist kein Performance-Killer. Der muss es ja eh. Der muss ja eh das einmal
durchlaufen, um es zu returnen. Two Array mache ich nur, dass ich die Zeit messen kann.
Also. Die Erklärung dafür, warum das langsam wird. Folgendermaßen. Wenn man sich mal dieses
Query hier anguckt. Das hier. Bis zu diesen. Das hier ist optimiert mit der Postgres. Also
mit Postgres-Methoden. Also mit diesem PG Triggum und so, was wir gemacht haben am Anfang.
Also sprich, dass die Textsuche schnell ist. So. Also das hier ist quasi Postgres-optimiertes
Query. Davon nehme ich 10 Stück und dann wandel ich die um. Nicht in die eigentlichen Objekte,
die in der Datenbank sind, sondern nur in den Text. Wenn ich das Select zuerst machen
würde, würde alles hier.NET zur Laufzeit ausgeführt und nicht von der Datenbank. Also
wenn ich das Select zuerst machen würde, dann würde sich einfach jeden Text aus der
Datenbank holen und danach jedes Mal zur Laufzeit durchsuchen. Ohne Index und alles. Also manchmal
ist die Reihenfolge tatsächlich entscheidend. Guck mal. Da sind wir. 11 Millisekunden. Ziemlich
zackig. Das kann Link nicht wirklich automatisch optimieren. Achso. Naja gut. Ne ich glaube
nicht, dass Link das automatisch optimiert, weil dass er an was anderes rauskommt. Und
die Postgres-optimierung gehen ja nicht für Text, sondern die gehen auf die Objekte,
die ich drinnen gespeichert habe. Das wird so nicht funktionieren. Soll ich es euch zeigen,
dass es andersherum langsamer ist? Ich beweise es euch einfach. So. Eben hatten wir. Hups.
Eben hatten wir. Jetzt funktionieren die ganzen Abfragen. Guck mal. Allein schon daran siehst
du, dass es nicht das gleiche ist. Die Abfragen funktionieren nicht mehr. Mach mal so. Okay,
das könnte. Es könnte tatsächlich doch noch optimiert funktionieren, aber schauen wir
mal. Oder bei. Mal gucken. Mal gucken, wie schnell es jetzt ist. Eine Sekunde. 174 Millisekunden.
Also ihr seht von 11 Millisekunden rauf auf 400. Es macht schon Unterschied. Wo das Select
steht. Genau. Hier kommt das Menü rein. Die erste Anfrage ist immer ein bisschen langsam.
Jetzt sind wir wieder runter auf 22 Millisekunden. 11 Millisekunden sind wir wieder. Ja. Und
es über 166. Warum? Weil wahrscheinlich weil einfach mehr gefunden werden und es
dauert noch länger. Ja, okay. Damit kann ich leben. Es ist noch tatsächlich. Wenn ich
das oder bei raus mache, müsste es richtig krass schnell sein, weil das oder bei das
ist, was es langsam macht. Also oder bei. Da muss er erst mal alles abfragen, um es
dann zu sortieren. Und dann nehme ich wieder nur zehn weg. Wenn ich es oder bei rausmache,
müsste das immer im 7 8er Millisekunden Bereich sein. Aber ich krieg halt nicht das, was ich
haben will. Ja, wir lassen es jetzt so gut. Also das ist das ist unsere Response, die
wir kriegen, die sehr, sehr zackig ist. Okay. Bin ich gerade ein bisschen aus dem Dix gekommen.
Okay, wir müssen die anzeigen, dass wir brauchen. Wir brauchen so eine Art Menü, was hier unten
aufploppt. Also Menü, Menü, was aufploppt. Das Menü, was aufploppt, hängt hier so unten
drunter. Hat. Die gleiche Hintergrundfarbe. Wie das andere. Is rounded. Und hat Padding
von vier, dass es auch ein bisschen was aussieht. Das ist unser Menü. Was dann aufploppt.
Einfach random Einträge raussuchen, bis das Richtige gefunden wird. Das Problem ist dabei
manchmal ohne Scheiß. Manchmal ist es sogar sinnvoll, so was zu machen. Das Problem ist
bloß darin, dass es unterschiedlich lange Laufzeiten hat mal. Also du hast immer das
Potenzial, dass die ersten zehn Treffer die richtigen sind. Aber ansonsten. Aber mit dem
Order bei funktioniert gar nicht mehr. Da muss er erst mal alles abkragen. Preis ist
offline. Ja, da hatte ich keinen Bock mehr, das weiter zu basteln. Ok, also das Menü zeigen
wir nur an, wenn in value was drinnen steht und Items auch geladen oder nur wenn Items
ausgeladen sind. Reicht ja. Ok, also if view if ich kann es mir nicht. If. Wie war das?
If. Ah ja. If Items Länge größer Null, dann rendern wir das Menü. Das Menü wird standardmäßig
nicht gerendert. Aber. Wenn Items größer Null sind, wird das Menü gerendert. Ich muss
auch noch eingeben, wenn Items und value was drinsteht. Ok. Ah zack. Ok. Popup funktioniert
schon mal. Steht zwar noch nicht sinnvoll, ist drinne, aber ok. Und da drinne brauchen
wir jetzt eine Schleife. Each Items as item Liste. Ok, meine HTML kennt, also jetzt kommt
es hier. Liste, ein Listelement pro item und dann schreiben wir das rein. Ich bin mal gespannt,
ob das funktioniert. Item. Schauen wir mal. Ja, prinzipiell, prinzipiell sieht das schon
mal. Leute, ich muss sagen, das sieht deutlich besser aus, als ich mir das vorgestellt habe.
Und guck mal, wie schnell die Autocompletion ist. Das, das flutscht mal richtig. Das flutscht
mal richtig. Ich kann jetzt auch noch Info suchen. Guck mal, es ist egal, was ich suche,
der findet das irgendwo drinne. So. Info? Wie lange brauche ich für Info? 188 Millisekunden,
das ist ja nichts für so eine komplette Durchsuchung. Der muss ja dafür quasi die komplette Datenbank
durchsuchen. Da kannst du dich nicht beschweren. Das ist ziemlich pork. Was sind das eigentlich
für Daten, das ist random generiert. Random generiert, die Datenbank ist 1,6 Gigabyte
groß. Und der Witz ist, dadurch, dass wir das indiziert haben, selbst wenn die Datenbank
zehnmal so groß ist, ist es wahrscheinlich nicht nennenswert langsamer. Du musstest
debouncen am besten. Ne, ich muss das nicht debouncen. Alles plaud. Ne, wisst ihr was
wir machen? Wir machen richtig high IQ. Wir machen, wir cancelen den Request. Also, es
ist ja jetzt aktuell so, wenn ich schnell tippe, wie man hier ja auch sieht zum Beispiel,
wenn ich jetzt hier schnell tippe, Info, dann macht der Request und ich habe schon mehr
getippt, bevor der erste Request da ist. 106 Natsch Millisekunden, das ist wirklich gut
für einen kompletten Request. Faker, ne, nicht Faker.net, bogus.net. Wir können das
abbrechen. Es gibt nämlich seit ein paar HTML, CSS, JavaScript Versionen, gibt es nämlich
die Möglichkeit, Requests abzubrechen. Ich weiß nicht, ob ihr das kennt, mit einem Abort-Controller.
Hat das schon mal jemand verwendet? Ich habe das einmal verwendet bisher und ich weiß aus
dem Kopf am besten nicht mehr, wie es funktioniert. Ich weiß nur noch, dass es das gibt. Du kannst
quasi sagen, brich den alten Request ab, wenn ein neuer, also, ne, Schwachsinn. Ich kann
sagen, ok, wenn ich einen neuen Character tippe und der alte Request noch läuft, dann breche
ich ihn ab. Das ist sehr praktisch. Das muss ich mir nur hier mal zusammen. War Controller,
New Controller, ok, wir machen das jetzt richtig. Also, Query Server mache ich immer, wenn es
Neues, was Neues gibt. Also Controller, Signal und dann Fetch. Cool, Signal. Ich weiß nicht
wirklich, was ich hier gerade treibe. Also, wir brechen das ab. Bei jedem neuen Request
da reinkommt, setzen den Controller auf was Neues. Ich glaube, so habe ich das gemacht.
Genau. So, und jetzt sollte der das, glaube ich, abbrechen. Nein, nein, nein. Jetzt sollte
der das abbrechen, wenn ich schnell genug tippe. Info. Oh. User aborted the request.
Nur mit dem Unterschied, dass es jetzt gar nicht mehr funktioniert. Weil ich Controller
Signal machen muss. Einfach nur Signal so. Was jetzt? Darf man da keinen Punkt machen?
Warum? Warum? Warum müssen da überhaupt? Warum müssen da so komische Klammern drum
sein? Warum? Kann man die einfach weglassen? Richte aber nichts ab. Let Signal. Das ist
bestimmt so ein JavaScript Ding, warum da Klammern drum sein müssen. Wir müssen Klammern
drum. Okay, meinetwegen. Wenn JavaScript meinetwegen, dann müssen Klammern drum. Info. User aborted
the request. Ja. Komm mal, ich tippe schnell, dreimal abgebrochen und letzte kommt durch.
Das funktioniert. Ja, Pongas. Komm mal da. Das funktioniert. Aber vielleicht sollten
wir jetzt noch ein Try Catch oder so was drumherum machen. Dass wir sagen. Try Catch. Das da.
Das Lock können wir uns übrigens mal sparen. Error. Ignorieren wir. Null. Kein Error.
Info. Ja. Wir canceln jetzt oder wir können noch einschreiben. Error. Schreiben wir noch.
Block. Request. Ppega. Info. Dreimal Request. Ppega und letzte geht durch. Sehr schön.
Und jetzt müssen wir das auf Serverseite noch implementieren, dass der das auch macht.
Da bin ich mir aber nicht sicher, wie wir das auf Serverseite machen, weil wir müssten
jetzt ja quasi das Datenbank Query on the fly abbrechen. Gibt es? Gibt es die Möglichkeit
in Async Datenbank Query zu machen, was man canceln kann? Das ist eine Abkürzung für
Signal Doppelpunkt Signal. Kann man? Ok, das muss jetzt EF Core Cancellation Token Query.
Was? Ok, ich glaube, so ein Datenbank Query kann man nicht einfach canceln, wenn man da
keinen Bock mehr drauf hat. Async Query. Da habe ich keinen Plan gerade davon, wie ich
das machen soll. Einfach Stecker ziehen. Cancel Query. Das ist noch normales. Der will
den Thread killen, um das Query zu killen. Das ist ja die dämlichste Idee, die ich bisher
gelesen habe. Den Thread killen. Moment, das ist Entity Framework. Was interessiert mich
Entity Framework? How can I abort EF Core Query? Genau, zeig her. Du kannst wie Postgres
eine Query absetzen, dass es killt. Na gut, es ist jetzt ja nicht wirklich wild, weil,
warum ist es nicht wild? Es ist nicht wild, weil die Queries sau schnell sind. Ja, das
ist nicht so wild. Aber ansonsten. Was? Async in Amorable? With Cancellation. Seriously?
Nee, das kann nicht sein. Das ist erst, wenn er fertig ist. Das ist erst, wenn er fertig
ist. Cancel Long Running Query. Okay, da fällt mir jetzt gerade nichts ein dazu. Ich will
das nicht in Javascript machen. Ich will mein Datenbank Query abbrechen. Auf der Javascript
Seite ist es doch vollkommen in Ordnung. Auf der Javascript Seite bricht er ja auch
alles ab. Da ist kein Ding. Die Queries auf dem Server müssen halt nicht fertig rennen.
Aber das ist schon okay so. Wir müssen es ja nicht mit solchen Feinheiten aufhalten jetzt.
Also wir machen jetzt das Autocomplete Menü. List Items, also ja. Kunstschommer. Wir müssen
nur das List Item ein bisschen hübscher machen, weil das sieht mal richtig hängengeblieben
und mies aus. Also wir machen jedes List Item. Pickt auf jeden Fall schon mal, wie war das?
Y2? Das sind doch so Firefan Tailwind Klassen. Y2. Ja. Und 4. Ach nee, mein Y ist nur oben
und unten einmalig, ne? Seh ich das richtig? Nee. Was war das nochmal? Ach, das war Margin
Tee. Ja, genau, das meine ich. Dann 4 Sekunden, Leute. So, wieder da. Ja hey, das sieht doch
jetzt ganz, ganz, ganz schick aus. Hat Postgres nicht irgendwas? Doch, doch, garantiert. Heading.
2, 2. Ja. Okay. Das sieht doch schon besser aus. Ich überleg nur gerade, wie können wir
die Items denn jetzt irgendwie sinnvoll gegeneinander? Also ich mein, so ist das doch schon mal ganz
nett, ne? Dann klappt das aus, das Auto completed, zütt. Das Auto completed relativ schnell.
Das ist schon mal nice. Ah, ich hab nen Fehler gesehen. Ist euch auch aufgefallen, wenn ich
das schnell ersetze durch, guck mal, ich hab das hier und ersetze das durch ein A, dann
bleibt noch das andere, da bleibt das andere noch da. Also ich müsste eigentlich sowas
sagen wie, sobald es ein neues Value gibt, dann mach ich das Menü zu. Aber das sind
so kleine, kleine Optimierungen, die kannst du zum Schluss machen. Erstmal, sodass es
grob funktioniert. So, wir machen hier noch, wir machen hier noch nen Border drum, dass
das ein bisschen, bisschen mehr heraussticht. Input, Border, Black, Border 2. Und wir machen
den Border nicht Black, sondern wir brauchen irgendwas schönes. Grey, 200, so. Naja, schön
ist was anderes. Schön ist was anderes. So, okay. Hab auch so Bock nen Stack zu lernen,
aber zu faulen und kein Plan welches. Guck dich da einfach ein bisschen um, es gibt doch
zigtausend Varianten und man muss sich ja auch nicht so sehr an einer Sache irgendwie
festbeißen. Ich hab zum Beispiel die letzten Jahre, seit ich mir ein bisschen Vue.js angeguckt
hab, alles in Vue gemacht, aber in letzter Zeit bin ich so auf den Geschmack von 12
gekommen. Warum nicht? Post Class hab ich noch nie großartig was gemacht, aber hab
ich mir gedacht, muss ich mir heute mal angucken. So, also wo sind wir denn stehen geblieben?
Also wir müssen den Kram ja mit der Tastatur noch auswählen können und wir müssen auch
sehen welches Item aktiv ist. Also sprich, wenn man das hier, wenn man hovert, brauchen
wir eine andere Hintergrundfarbe. Machen wir das gleich mal hier. Value A starten wir mal,
dass das auch immer wieder aufgeht. Also, hover, hover, hover, BG, ob das funzt? Ja,
gar nicht mal so mies, oder? Was sagt ihr? Ich mein bisschen mehr, bisschen mehr Space
bräuchte das noch, aber an sich gar nicht mal so mies. Ok, das ist die gleiche Farbe,
das kann nicht funktionieren. Gar nicht mal so kacke, oder? Wie doch eigentlich? So, hover,
jetzt müssen wir bloß noch ein bisschen, ein bisschen, was sehen wir, noch 2. Ja, viel
besser so. Aber noch 3, 3 gibt es glaub auch. Ja, so ist doch gut, so ist doch schick. Was
da random Daten werden da durchsucht? Es geht darum, wie schnell, es geht darum, wie schnell
der sucht. Dass der eine 1,6 Gigabyte Datenbank mit 4,5 Millionen Zeilen Text so schnell durchsucht,
das ist das Gute. Auch rounded? Leute, was meint ihr, rounded oder nicht rounded? Rounded
oder nicht rounded? Rounded, probier das mal aus. Ja, rounded ist definitiv besser. Tracking
App. Oh, aber ich will noch keine. Eine Tracking App, die kannst du ja fast schon komplett
serverless machen, dass du gar kein Backend brauchst. Irgendwie Firebase oder irgendwie
sowas. Da machst du ja mehr oder weniger alles kleinzeitig, bis auf eine Datenbank. Das finde
ich gar nicht schlecht, muss ich ehrlich sagen. Ich finde das eigentlich ganz, ganz schick.
So nice. So, jetzt müssen wir noch sagen, dass er hier kein, bei dem Text soll er keinen
Textmarker machen, sondern einfach nur den Pointer anzeigen. Also müssen wir user select
oder select, select ist das glaube ich dann, select none. Ok, nice. So, jetzt haben wir
hier schon die Hovergeschichte. So, und jetzt wird es ein bisschen kompliziert. Jetzt muss
ihr mal, chat, was meint ihr, sollen wir es auch noch machen, dass man es mit der Tastatur
auswählen kann? Weil aktuell nur mit der Maus ist ein bisschen doof, oder? Aber wenn
ich jetzt zweimal nach unten drücke und enter drücke, wäre es schon gut, wenn er das auswählt.
Nur mit Tastatur ist blöd. Nur mit Maus ist doof. Also ich glaube schon, dass wir Tastatur
noch machen sollten. Ach ja, wie checken wir eigentlich, was on click ist? Wäre vielleicht
noch cool, wenn er nicht alles autocompleted, sondern nur die besten erst macht er doch.
Er zeigt die besten 10 an. Er zeigt die besten 10 an. Guck, wenn du sagst Info, der guckt,
ob irgendwas mit Info anfängt. Wenn nicht, dann nimmt er halt die Info-Dinger sortiert,
wo Info drinne ist. Cursor-Pointer wäre noch gut. Cursor-Pointer. Meint ihr, dass wir
wissen, dass man es anklicken kann? Oh ja, das ist nice, oder? Das ist gut. Das finde
ich POG. Natalie.biz. Alles klar. Nice. Okay. So, wie machen wir das jetzt? Tastatur selectable.
Alle von GoDaddy geklämt. Ernsthaft? Rashid.biz. Das sind einfach random Sachen. Kek. Kommt
Kek drin vor? Kommt Lulu drin vor? Ah, Lulu. Lulu kommt drin vor. Okay, Lulvee. Max. Ah,
Maximilian. Alles klar. Woop. Nee. Cute. Nee. Chat? Auch nicht. Nein, dann. Dann nicht.
Dann nicht. Okay, selectable mit Katz. Katrin. Okay, selectable mit Tastatur. Wie machen
wir das jetzt? Ich würde sagen, selectable mit Tastatur ist, ich muss sagen, Input.
Nee. Keydown muss ich sagen. Keydown. Function. Function. Wie nennen wir das jetzt irgendwie?
Keyboard select oder sowas. Event. Keyboard select. Müssen wir quoteen. Nicht quoteen,
sondern klammern. Jetzt den Suchstring hervorheben. Das ist, das ist Feifett. Das ist Feifett.
Das können wir machen. Das schreibe ich mir noch auf. Da müssen wir überlegen, wie wir
das machen. Suchstring hervorheben. Das muss ich mir überlegen. Das ist eine gute Idee.
Das finde ich, das finde ich gut. Das, das finde ich gut. Das machen wir natürlich kleinseitig,
nicht serverseitig. Ich mache jetzt keine irgendwie Snippet-Geschichte in der Datenbank.
Das ist rein kleinseitig. Zehn Dinger durch zu durchsuchen, wo er das findet, das kriegen
wir noch hin. Er kann sogar mehrfach hervorheben. Guck, der kann da hervorheben, da hervorheben
und so. Kann das Richtags? Nö. Da müsste ich serverseitig das ausliefern. Und dort
schon quasi, naja. Wir überlegen uns was. Wir machen jetzt erstmal Tastaturselect. Also,
was passiert, wenn man hier drinnen eine Taste drückt? Hoch, Down, Keyboard, Arrow Up, Arrow
Down. Okay, wir brauchen was brauchen wir? Arrow Up, Arrow Down und Enter würde ich sagen.
Arrow Up, Arrow Down, Enter. Brauchen wir sonst noch was? Nö. Also, if let key gleich
E Punkt Key. E Punkt Key schreiben. Key gleich gleich. Arrow Down. Else, if. E. E. E. E.
E. Was ist das für ein Scheiß Standard Highlighten? Das ist das ist die Go, das ist das Go Formatting.
Ich will, dass es nicht so formatiert wird. Ich will, dass es so formatiert wird. Guck
mal an. Das ist ja MonkaS. Wer macht denn so was? Okay, und dann haben wir noch Else, if.
Was war das? Enter. Enter haben wir noch. Tab wäre auch nice. Tab für was? Tab ist
das gleiche wie Arrow Down, oder? Oder, oder Key gleich. Was passiert denn bei Tab? Ach
so. Nee, Tab können wir nicht Captchern. Tab können wir nicht Captchern. Tab ist vom Browser
gesperrt. Tab kann man nicht Captchern. Weißt du mal, ob man Tab Captchern kann? Ich glaube
nicht. Escape kann ich Florschläge schließen. Ach, das ist eine gute Idee. Escaped find...
Lock Key. Ach doch Tab. Macht er doch. Und Escape. Ja, okay, machen wir. If Else Tab.
Oh, was jetzt? Das ist so hässlich hier. Tab. Prevent Default brauche ich glaube noch.
Tab und Escape. Switch Case. Solche Legacy Features. Legacy Features verwende ich nicht
mehr. Escape ist schließen. Schließen ist doch relativ einfach zu bewerkstelligen, indem
ich einfach Items auf nichts setze. Bäm. Escape funktioniert schon mal easy. Tab. Moment,
Tab. Tab ist das gleiche. Tab ist das gleiche wie Arrow Down. Brauchen wir schon mal nichts
eigenes. Switch benutzt nur Boomer. Korrekt. Tab. Und ich brauche E Punkt Prevent Default,
dass er das mit dem Tab nicht macht. Haha. Prevent Default. Okay. Prevent Default brauche
ich wahrscheinlich in so ziemlich jedem Fall. Okay. Also Escape schließt. Ja, Typen macht
Autocomplete. Okay, und jetzt hoch und runter. Arrow Up, Arrow Down. Also schreiben wir es,
machen wir jetzt mal irgendwie sowas hin. Let Selected Index. Fahren wir mal Minus 1
an. Minus 1 ist halt leer. Nee. Prevent Default vor dem If ist keine gute Idee, weil dann
kann ich auch nicht mehr nach links und rechts gehen. Das würde ich ja für jegliche Keyboard
Shot, also für jegliche Tasten drücke. Das kommt mal, wenn ich das Prevent Default vor
das If mache, dann kann ich nicht mehr nach links und rechts gehen. Das ist keine gute
Idee. So. Also was machen wir denn jetzt? Arrow Down. Arrow Down sagen wir Selected Index plus
plus. Arrow Up. Selected Index minus minus. Enter. Ja. Irgendwas. Weiß ich noch nicht
genau. So. Und jetzt muss ich nur noch gucken, wie ich das hier hinbekomme. Ich glaube Komma
i ging irgendwie, dass der mit den den Index mit hoch zählt. Nein, einfach nur so. Einfach
nur i. Schauen wir mal, ob da jetzt eine Zahl rein kommt. Ja, tatsächlich. Einfach nur
i. Ja, das mit den Abfragen muss ich noch machen. So und jetzt gucken wir. Ich möchte
eine Klasse hinzufügen. Dafür, wenn ich mit. Wenn ich das dort Selected habe, also will
ich. Im Prinzip. Wisst ihr, was wir machen? Wie kriege ich denn das am besten hin? Also
eigentlich will ich ja sowas haben. Irgendwelche Klasse bindings jetzt. Klasse. BG. Gleich.
True. 900. Wenn wenn Selected Index gleich ist. Achtung Achtung. Komma hier. Ich muss
natürlich jetzt noch checken, dass ich nicht hier raus zählen kann. Damit kann ich leben,
dass ich das so markiere. So, jetzt müssen wir hier noch gucken. If. Selected Index.
Minus eins. Äh größer. Null. Gibt das Sinn, was ich da mache? Nee, nee. Ah ok, das funktioniert.
Ok. Das Funst. Und hier will ich anstatt dem will ich gucken, wenn Selected Index plus
eins. Kleiner. Items. Länge. Kleiner der Items Länge ist. Gibt das Sinn? Hey, es funktioniert.
Easy. Beifährt. Was? Mathmax null Min. Warum nicht einfach so? So, es funktioniert. So,
was machen wir bei Enter? Bei Enter machen wir das gleiche wie onClick. OnClick machen
wir. Ähm. Function nennt es mal Set. Value. Äh ja Text. Value gleich Text. Vielleicht
ein bisschen. Ein bisschen wenig. Ohne eine eigene Funktion für zu machen. Also onClick.
Click. OnClick. Set. Value. Aha. Das hat er mir das letzte Mal beigebracht, der Preserief
hier im Chat. Das weiß ich noch. So muss man das machen. Sonst gehts nämlich kaputt.
Ich erinnere mich noch. So, wenn ich es anklicke. Oh. Ah, das ist keine so clevere Idee, das
mit einem Postrequest zu machen. Guck mal. Ich muss das mit einem Postrequest im Body
machen, weil ansonsten habe ich solche komischen Dinger in der Uhrl. Die nicht richtig funktionieren,
weil es kapen muss oder sowas. Das ist nicht so schlau. Aber warum schließt er das denn
jetzt nicht? Ah, ich muss Set. Value machen. Set. Value. Und dann muss ich sagen Items
gleich. Ja. Guck mal da, wie das funzt. Ah. Ach so, ja gut, das funktioniert so nicht,
weil mein Query kaputt ist. So und das gleiche machen wir bei Enter. Set. Value. Ist zwar
doppelt gemoppelt, aber. Zack, zack, zack. Oh, zack, zack, zack. Oh, es geht nicht.
Warum geht das nicht? Ach ne, es ist ja nicht Set. Value. Es ist ja auch Schwachsinn. Es
ist Items. Es ist Items. Selected Index. So ist es ja. So. So das funzt. Ah. Enter. Funzt.
Nice. Und doppelt Enter geht kaputt. Auch gut. Nice, nice, nice, nice. Poggers, Poggers,
Poggers. Das funktioniert richtig gut. Ich hätte nicht gedacht, dass das so easy ist.
Max, vermisse die guten alten CODs. Ja, das ist vorbei. Ich habe mir das letzte Call
of Duty nicht mal mehr gekauft. Zack, nice. Richtig, richtig cool. Mach noch Selected Index
gleich, wo immer diese Maus aktuell drüber hoffert. Hab ich doch. Guck mal. Nee, hover
muss was anderes sein als Selected. Ich kann ja auch das hier sehen. Nee, nee, nee, nee,
das muss, muss schon. Das muss schon so sein. Check bei Enter, ob Items empty. Ja. Ich muss
nicht checken. Ich muss checken. Ich muss Items empty checken. Und ich muss vor allem
checken, dass wenn ich hier Enter drücke, dass das, dass das nicht Minus ist. If Selected
Index gleich Minus eins und und Items längst größer null. Nur dann will ich das machen.
Und ich will und ich will bei Enter Selected Index auf Minus eins setzen. Ja. Sonst, weil
sonst habe ich nämlich das Problem. Das habe ich glaube ich jetzt schon. Guck mal, wenn
ich jetzt was anderes mache, dann bleibt es Selected. Also das heißt, ich muss auch.
Das heißt, ich muss auch hier bei jedem bei jedem Change Selected Index auf Minus eins
setzen. Info. Setzfunst. Info. Ja. Oder aber ich könnte auch einfach Items auf null setzen.
Da geht nämlich das Menü zu. Info. Ja, so ist besser, oder? Dann schieben sich die Menüs
nicht ineinander rein. Dann schieben sich die Menüs nicht ineinander rein, sondern es
ist wirklich klar zu erkennen, wenn was fertig ist. Guck, wenn ich jetzt von Info umschwenke
auf A, dann geht das Menü erst mal zu. Ja, sehr gut. Poggers. Ladebildschirm. Wer sollte
noch Ladebalken anzeigen? If loading, if loading. Also das müssen wir jetzt. Let loading
gleich false. So loading, wenn er fertig geladen hat. Wobei, das mache ich später. Was was
machen wir jetzt als nächstes? Ich habe Leute, ich habe noch die Idee, wollen wir das animiert
machen, das Menü, dass es, dass es ein und aus fadeet? Moment. Svelte Transition. Nicht
Fly. Fade wollen wir haben. Fade. Das wird es richtig in Fade. Genau hier. Import Fade
und Fly. Oh, jetzt wird es jetzt wird es richtig high IQ. Fade. Ups. Fade. In. Und
nicht Fly, sondern Fade wollen wir haben. Und zwar. Und zwar. Können wir noch eins
zurück machen? Hatten sie auch dieses Beispiel. Einfach nur Transition Fade musste ich mal.
Also. Das ganze Menü, aber das ist das hier. Transition. Fade. Und dann. Oh nee. Duration.
Funktioniert das jetzt schon? Boah, guck mal Leute. Ich meine, das ist viel zu langsam.
Sind wir uns einig? Aber aber es funktioniert. So 200. Das ist doch schick. Leute, das ist
richtig schick. Jetzt guckt mal. Jetzt ist das nicht so. Jetzt ist das nicht so in your
face. Das ist das quasi Smoother. Ziemlicher Pog, würde ich sagen. Ist immer noch zu langsam.
100. 100. 50. 1. 1 ist halt direkt. OK, 50. 50. Ja, 50 ist gut, oder? 50 Faded, aber
nicht so wirklich wahrnehmbar. Das ist gut. Jetzt hier. Bäm. Auswahl. Zack. 75. Na ja,
komm. Jetzt wird jetzt wird ihr schon micro optimist. Auch gut kann ich auch mitleben.
Was macht was ich da mache? Ich hab. Das ist ein Autokomplete Feld. Das kennst du bestimmt
auf ganz vielen Webseiten. Ja, gesuchten Text hervorheben. Wir wollten noch, wenn loading
ist, eine Anzeige. Guck mal, wir machen hier oben oben drüber. Machen wir mal Procress,
wobei dieses eingebaute Procress Ding ist richtig, richtig mies. Procress. Wie heißt
denn das Ding Procress? Also die, dass das Procress HTML ist wirklich Müll. Kann man
das sehen? Value 100. 40. Ach, das ist zwischen 0 und 1 immer. Das ist kacke. Das ist mega
hässlich, diese Procress Sache da oben. Kannst du bitte mal die Datenbankstruktur zeigen?
Durchsuchst du nur ein Feld oder ist die Suche automatisch für mehrere Felder? Ich durchsuche
nur ein Feld. Man könnte aber ohne Probleme mehrere Felder durchsuchen. Also ich hab die
einfachste Variante gemacht, schlechthin, die es aktuell geht. Ich hab eine Klasse
für die Datenbank, die hat einen Feld für Text und eine ID. Die brauchst du, weil Entity
Framework sonst keinen Bock hat. Und das hier ist halt die Sache, damit die Textsuche schnell
funktioniert. Du musst eine Postgres Extension laden. PG Triggum. Also der Hintergrund da,
warum das so heißt. Nur mal so, wir benutzen das die ganze Zeit. Ich hab's eigentlich noch
gar nicht erwähnt. Also es ist irgendwie so, ich hab's selbst nicht richtig gelesen,
ich hab's noch nicht richtig verstanden, dass mit diesem Modul Postgres quasi nicht
einfach nur den Text eins zu eins drinstehen hat, sondern immer so dreier Buchstabenpaare
bildet. Buchstabe eins davor und eins danach. Und dadurch, dass du quasi jedes Wort in
dreier Buchstabenpaare zerlegst, kannst du Substring Matching machen, aber dich trotzdem
relativ schnell durch den Index hangeln. Frag mich nicht, wie es genau funktioniert,
das ist wirklich nur was für Leute, die Mathe studiert haben und wahnsinnig IQ 150 haben
oder so. Müssen wir Algorithmen verstehen fragen, der würde wahrscheinlich, der könnte
uns ja wahrscheinlich erklären, was das genau macht. Wobei, jetzt mal Spaß beiseite, ich
glaube wir würden uns das auch verstehen, wenn wir uns das im Stream angucken, aber
ich hab keinen Bock mir hier ne Stunde Theorie anzugucken, warum es schnell ist, mir reicht,
dass es schnell ist. Das hier ist die Magic, dass die Suche schnell ist. 20 Millisekunden
pro Textsuche und ohne die Sachen im RAM zu behalten. Und normalerweise ohne diese ganzen
Sachen hat der 340 Millisekunden gebraucht. Wir machen nen Spinner, Leute wir machen
nen Spinner, das ist die Idee, ich hab ne Idee, wisst ihr was wir mit nem Spinner machen?
Ich weiß wie wir das machen. Hero Icons, Circle, Kogas machen wir jetzt, richtig Kogas, ne
falsches Kogas. Circle, hier Spinner, was ist ein gutes Spinner Icon hier für Leute?
Gutes Kogas Icon, sag mal was eignet sich da schön dafür? Progress, spin, weil man
kann das richtig easy machen lassen, ich zeig euch mal was ich vor hab, ich zeig euch mal
was ich vor hab, also guck mal wir können hier oben, aber man siehts ja gar nicht richtig,
Moment, Class, ne da unten ist Text gleich White, hier was wir einfach machen können
ist, Animate, spin, und schon dreht sichs. Aber wir brauchen halt irgendeinen Icon was
sich eignet für so nen Spinner. Ja das ist Tailbit Animation, genau, du kannst es spinnen
lassen, pingen lassen, pulsieren lassen standardmäßig und bouncing lassen, ah bouncing, spinnen
ist schon ok. Refresh Icon, sehr gute Idee, Refresh, ja, exellent, exellent, High IQ
und Chat wieder, ich sehs schon hier, richtig schlaue Leute, wir nehmen Refresh Icon, die
ganzen Subs haben sich ausgeteilt, übrigens Leute falls jemand Subscribed hat und ich
es nicht gesehen hab, die Notifications sind heute kaputt, hey das ist doch eigentlich
ganz nett oder, das ist doch eigentlich ganz nett, das gefällt mir, das machen wir dahin,
und wenn er sucht, und wenn er sucht dann macht es dann, dann spinnt das so. Anders
herumdrehen, ich weiß nicht wie man das macht, ok Tailwind, spin, reverse, aber man kann
auch glaube ich einfach Reverse dran schreiben, ne, Invert, ne, ich glaub das geht standardmäßig
nicht, Animate, Reverse, ne, ne, guck mal wir sind nicht die ersten die auf so ne Idee
gekommen ist, Keyframes, Reverse, spin, ok, you can just use Animate, spin, transform,
rotate, 180, alles klar, yes, bestes, Stack Overflow, GitHub Issues, Leute, 5 hat, wenn
es, guck mal, wenn es in die falsche Richtung rotiert, drehen wir es einfach vorher um 180
Grad und dann rotate es in die richtige Richtung, richtig 360 Nose Scope, hatte ich nicht dazu
irgendwo mal nen Sound sogar, 360 Nose Scope, nein, auch nicht, nein das ist ja auch der
falsche Sound, nein, wo ist mein Nose Scope Sound, hier, jawoll, jetzt Nose Scope, alles
klar, so jetzt haben wir das Loading Icon, wo machen wir das jetzt hin, am besten müssten
wir das eigentlich Overlayen hier irgendwie oben drüber, ne, Relative, Class, Absolute,
so und jetzt sagen wir einfach nur Write, Zero, Top, Zero, ne, Top, 10, 14, so ist doch,
ist doch gut oder, ne, 14, sehr schön, so, ist das dann schick und das wird jetzt nur
angezeigt, das wird jetzt natürlich nur angezeigt, wenn er lädt, ich will nicht, dass es lädt,
weil wenn es lädt, dann stürzt das ab oder so ähnlich, Text White to Cray, ne, gar nicht
Text White, brauchen wir gar nicht mehr, wir brauchen den Text White, kann weg, der soll
den Default, Default Text Farbe nehmen, genau, also, lasst mal kurz überlegen, Queries,
Query Server, ne, das brauchen wir nicht, also, wir stellen das auf Loading, wir stellen
das auf Loading, Loading True und wenn er hier fertig geloaded ist, dann sagen wir Loading
False, müsste doch eigentlich genauso funktionieren, so und jetzt gehen wir zum Spinner und sagen,
ach ne, das ist ja Svelte, da muss man so ein komisches, weil, kann man nicht einfach
sagen Hidden, Hidden und dann Loading, ne, funktioniert das denn jetzt überhaupt, mal
noch mal Loading, Loading ausgeben, ob das überhaupt klappt, True, ja klappt, das ist
falsch rum, ach, not Loading, ne, na gut, da muss ich ein If drum herum machen, If Loading,
dann zeigen wir das an, hab ich das hier oben, ne, ich hab das hier oben schon richtig rum
gemacht und dann ansonsten, wie macht man das If noch mal zu, If, die Syntax gefällt
mir nicht, ja funs doch, was ist da jetzt los, warum ist das jetzt verschoben, Top 20,
aha, ok, aus Gründen, die ich nicht verstehe, aber ok, ja, guck mal, nice, guck mal, solange
es sucht, solange es sucht, solange es Self Accredit ist der Spinner da, ansonsten ist
es weg, bock, finde ich ja mega nice, zack, gut, haben wir das auch, wir können es, wir
können es markieren, Enter drücken, ja, das müssen wir in Postrequest machen, das ist
als Get beschissen, weil, oder ich müsste es urline coden, oder ich müsste es urline
coden, das kann ich jetzt mal machen, dass ich, dass es nicht so eklig ist, wie macht
man ein urline coden, urline coden, urline coden, wie macht man ein urline coden im Browse,
keine Ahnung, encode uri heißt das, ok, encode, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
Eigentlich not found, das müsste doch eigentlich jetzt matchen auf Serverseite
Müsste doch auf Serverseite eigentlich matchen
Ja wir machen das als Postrequest, das ist doch Müll so
Das ist doch kacke
Was er encode und sucht nach dir, sowieso ist doch in Ordnung
Was
Chat, redet nicht wir, redet in normalen Sätzen, was ist los?
Welche Distribution, das ist Manjaro mit E3 WM
Ne ich muss auf Serverseite nicht decode, das sollte automatisch, ist egal, ich mach das als Postrequest, das ist hässlich
Aber wir haben noch eine viel wichtigere Aufgabe, ich weiß nicht ob wir das heute noch hinkriegen
Das Ergebnis
Highlighten, boah wie machen wir das denn, das Ergebnis Highlighten
Also hier setze ich die Items
So bevor ich die Items setze, müsste ich, wie Highlighte ich das Ergebnis
So wir machen das anders, wir machen
Also let, noch mal irgendwie was weiß ich hier, tmp, Items, Items gleich
Ok wir machen da eine eigene Funktion für, sonst blick ich nicht mehr durch, Highlight Items
Highlight, heißt halt doppelt, so dann Highlight Items, so packen wir das hier rein und dann return Items
Ja ja return, return Items, heißt jetzt alles doppelt und dreifach was funktioniert, so und hier drinne kann ich jetzt Highlighten
Also wie Highlighten wir das richtig, wir brauchen auf jeden Fall schon mal eine Schleife denke ich mal
Also Items, Log, Items, ja so, gut und da muss ich jetzt suchen danach, Split, Split ist eine gute Idee Chat, Split ist eine gute Idee
Split, Splitten an, ja an was Splitten wir eigentlich jetzt, wir Splitten an Value oder, wir Splitten an Value
Seht ihr das richtig, und das heißt wir bekommen dann raus, wat, hä, Highlighten musst du doch in den Le Elementen
Ja ich muss das, ich muss hier aber html drum herumschreiben und das dann danach später unten reinrendern
Split, Split ist dumm oder, Split nimmt den Buchstabe raus an dem, an dem er splittet
Js, Split, Keep, Separator, anyway, hier Xenoverse, was, oh Gott, Ragex, Xis, Xis jetzt oder was
Ja Obvious, alles klar, alles klar, ganz, ganz, ich mein man könnte, man könnte das richtig clever machen, Ragex und dann irgendwie Surround
Warte mal, bekomme ich, bekomme ich wenn ich matche nicht den Index, das müsste doch eigentlich auch funktionieren, ich bekomme den Index
Ich kann den Separator manuell wieder hinzufügen, ja das stimmt schon
Ja ne, ihr habt recht, ihr habt recht, also Split und nochmal Schleife, nochmal Schleife
Part, langsam gehen mir die Dinger aus, Part, so, jetzt haben wir das, jetzt haben wir das gesplitted
Ne, wir brauchen keine Schleife, Schleife ist Low IQ an der Stelle, Select, ne, ist es Select, ne was ist es, was ist es in Map, ist es Map, in Jawa ist es Map glaube ich
Item, so und das heißt davor ist jedes mal Value, ne, ich will nur gucken ob es von der Idee her passt was ich da mache
Ah, ne, Moment
Ne, ne das funktioniert so nicht, das funktioniert so nicht wie ich mir das gedacht habe
Moment da ist was leeres, warum kriege ich denn was leeres, das stimmt ja im Prinzip
Das ist schon richtig nur das erste, das erste, warum ist das erste denn leer
Ok von der Idee her funktioniert es, doch, doch, doch, doch, guck mal von der Idee her funktioniert das
So, wie Highlightet man denn jetzt richtig was, wie Highlightet man denn jetzt ordentlich was, muss ich mal testen
Wie machen wir das HTML technisch überhaupt
Spam, so blablabla, blablabla, so wie Highlighte ich das das, mein Color, ne, Color geht ja nicht
Und dann einfach, ach ne, Moment, anders, diff, blablabla, so und dann jetzt hier
Style und dann Color, Red oder sowas, ja, im Prinzip so in der Richtung
Ich glaube du kannst Marktex, uiuiui, ai, da guck an, ist das irgendwie so Legacy Feature oder ist das was Neues
Tatsächlich, hi, hi, hi, richtig mega IQ hier, Stein alt, ja, aber das benutzen wir erstmal, das ist gut
Ok, das bedeutet im Endeffekt, ich sag Value, wir brauchen meistens Template String, Template String, sonst kannst du das hier nicht mehr händeln
E, äh, warum Split, JS Split, First Element empty, empty, warum ist das erste Element empty
String ist empty, ja super, super, ja da auf die Idee bin ich auch gekommen, dass ich das erste wegschmeißen kann
Naja, so und das heißt da müsste ich jetzt sowas machen wie Mark, Mark, ja, ja, ja, das müsste funktionieren
Let's, ist wirklich so wie der das geschrieben hat, Values, so, jetzt kriegen wir das Richtige raus
Guck hier, A, V, Moment, V, das V muss dahinter, hier, A, A und dann der Rest, der Chat ist davor, oh, Moment, Chat ihr müsst umziehen, Sekunde
Ihr müsst umziehen, so, da bist du ja wieder, irgendwas wollte ich dich fragen vorhin, aber ich hab's wieder vergessen
So, jetzt haben wir das Mark, Mark, Mark, alles klar, so und jetzt müssen wir da wieder ein String draus machen, Join, äh, wie macht man das jetzt
JS Array to String, bejoin ich das wieder, kann ich einfach so sagen, to String, to String, geht das, hey, Pfeiffer Java Skript
Okay, so, das ist unser Result, ach jetzt ist Komma getrennt, ne, okay, dann ist was, Array, Join, ne, Join
Ach, so muss ich es ja auch ausgeben, Result, jetzt ist es weg, to String, geht das auch, ne, okay, Join, alles klar
So, jetzt haben wir hier das drinnenstehen, was wir brauchen und da müssen wir jetzt eine neue Itemliste draus basteln, also, let Result gleich Dings hier und dann
Push, ob das funktioniert, äh, Return Result, so, noch funktioniert's nicht, aber man sollte jetzt schon, genau, genau, so und jetzt muss ich ihm sagen
Interpretier mir das als HTML, da gibt es garantiert ins Welt irgendwas dafür, muss ich vielleicht doppelt Dingsen oder so, ne, wie sage ich ihm
Interpretier das als HTML, was da drin steht, Span, Add HTML, ein Add davor, ne, Add HTML, easy, easy
Easy as f**k, easy as f**k, na, na, na, nice, Komma, Info, oh
Die Logik stimmt nicht
By the way, warum kriege ich da mal Ava und warum kriege ich da mal Andy zurück
Ah, ich weiß warum, weil ich es nie initial sortiere, wahrscheinlich müsste ich
Wahrscheinlich müsste ich hier vorher noch mal Order machen oder so, aber kann ich mitleben
Andy
Und jetzt haben wir Alice, Moment, warum
Hä, meine Logik ist flawed
Ich mein, das sieht nicht nur hässlich aus, lass uns mal kurz das Shift weg, was ist jetzt doppelt, jetzt ist es doppelt und wie sieht es mit Info aus
Jetzt funktioniert das mit Info aber, was, warum ist Info jetzt am Anfang
Leute meine Logik funktioniert nicht
Info
Meine Logik ist kaputt
Ah, Info
Was macht denn Split für komische Dinger
Ich mein, wisst ihr was, wir machen die Brute Force Methode, Split, äh, Filter, alle Elemente, die nicht leer sind, so
Das geht bestimmt schöner
Das funktioniert immer, aber jetzt ist das vorne
Moment
Okay, die Logik ist nicht so, ne, der Alejandro ist, äh, da funktioniert er irgendwie nicht so ganz
Hä
Replace all
Replace all, ja klar, das müsste ja noch einfacher sein, Moment, mal gucken
Moment, Moment, Moment, Replace all, ja, das ist eine gute Idee, gibt es sowas
Replace, Replace all, okay, kann es sowas sein, Replace all, all value mit Heckweh
Return values join
Ach ne, Moment, das ist ja Schwachsinn, was ich hier mache, äh, ah, ich bin verwirrt, Sekunde, ich muss das pushen, values join, push
Cannot read, weil da Return dazwischen ist
Äh
Macht es in place und ich muss so machen
Jetzt, jetzt play ich nicht mehr durch, Leute
Jetzt, jetzt ist mir, jetzt ist mir zu hoch
Ich muss das gar nicht mehr joinen
Aber, aber A ist nicht durch Heckweh replaced
Ist, ist es so doch richtig
Ne
Hä
Okay, wie funktioniert Replace all
Search, string, Replace, value ist A
Warum ist das nicht replaced durch Heckweh
Warum ist das jetzt nicht replaced durch Heckweh
Warum, ich replace das, ach, weil das Konst ist, kann das sein, weil das
Ne, ne, das funktioniert, das funktioniert, das hat auch vorher auch geklappt
Wenn ich hier was anderes reinschreibe, dann, dann funktioniert das ja, also hier, hier drinnen funktioniert es nicht, also, okay, Moment, ähm
Mach mal anders
Let temp, wir, uns gehen die Variablen aus
Temp replace all
Was zum
Der replace all funktioniert nicht
Replace all gibt einen neuen String zurück
Okay
Dachte eigentlich genau umgedreht
Aha, aha, ja, okay
Jetzt ist hier, jetzt ist hier Heckweh angesagt
Also kann ich auch einfach sagen item
Gleich item, item
Ne, das funktioniert nicht, weil es Konst ist, funktioniert das nicht, okay
So, gut
Und jetzt kann ich jetzt einfach sagen
Replace
Value
Ne, das funktioniert nicht mit replace all, weil ich muss ja, ich muss ja in der, ich muss ja innen drin was einsetzen
Das funktioniert, das kann nicht mit replace all funktionieren
Ich könnte das höchstens mit, ähm, regex groups oder sowas machen
Hä?
Warum funktioniert das jetzt?
Ach so, der Rest bleibt ja noch da, ne, dann ist ja richtig, dann funktioniert es doch
Okay, funktioniert das mit info auch?
Hey, es funktioniert, alles klar, ich, ich hab nix gemacht
So, let, wir können das bestimmt jetzt noch anders
Let, let
Jawoll, wunderbar
Excellent, excellent
Okay, wunderbar, vorgas
Es funktioniert
Es funktioniert jetzt wieder nicht mehr
Äh, weil item
Haha, info
Leute, highlight funktioniert
Massive
Massive highlight
Aijajaj, aijajaja, was ein Akt
Ich bin begeistert
Oh
Natürlich, das funktioniert ja nicht mehr so, wenn es einfach nur Text ist
Das ist mir zu kompliziert
Da muss ich mir Gedanken zu machen, das muss man, das muss man anders machen
Da müsste man, das müsste man irgendwie im, im, im, nur, nur fürs Rendern machen
Also ich bräuchte quasi zwei Items
Ich bräuchte quasi ein Items für
Was ich eigentlich mache und ein Items, was ich eigentlich anzeige
Also ich bräuchte dann quasi zwei Sachen da drin
Nämlich, okay, das, das versuche ich jetzt schnell nochmal
Domboi, Dankeschön, Dankeschön für den Zap
Also quasi bräuchte man hier sowas dann
Äh, äh, Highlight
Und, und dann bräuchte man einmal
Was ich, brauch ich doch
Highlight, oder nehmen wir erstmal Highlight, so
Highlight und dann bräuchte ich Text
Item, so
Object, Object
Aha, Achtung, Achtung
Item, Highlight
Aha
Und
Ah nee, Object, beim Anklicken
Beim Anklicken, Set, Set, Set value will ich Text
Bam
Mohammed.net, Anzeigen sind raus hier, ich seh schon
Obert.com, jawoll
Es funzt Leute, es funzt
Es funktioniert, nachdem es bloß immer 10 Sachen sind
Ist es überhaupt nicht wild
Was ist mit dem, mit dem Refresh Ding los?
Das, das hat eben, das hat vorhin schonmal falsch rumgehängt
Ah ja, ach ja, Set, Set value, Set value hier
Wo mach ich das denn, Set value links hier, Text
Text
Wobei nee, wenn es das gibt, gibt es das auch im Text
Fuck, nice, ich bin begeistert, aber aus irgendwelchen Gründen
Warum macht er beim, ah, beim Enter drücken, weil es einen Fehler gibt auf Serverseite, ja klar
Na das ist natürlich doof, das heißt ich muss doch hier in das Try Catch rein und auch sagen
Loading, Loading false, was, was ich aber nicht will
Loading false
Weil es dann auch beim Abbrechen, beim Abbrechen ausgeht
Na das ist nicht Sinn und Zweck der Sache
Das will ich net
Ich muss einfach gucken, dass der Serverrequest nicht abkackt
Nice
Das lassen wir jetzt so, ich, ich mach da das nächste Mal dran
Aber es ist schon echt nice und guckt mal, und jetzt ist die eigentliche Sache
Guckt mal, wir zeigen, wir vergleichen mal, wie schnell das Auto complete ist
Das ist richtig, das flutscht richtig
Guckt mal, hier unten ist die Zeit immer, hier unten ist die Zeit
Das langsamste ist, wenn man einen Buchstabe eingebt
Logischerweise, weil er den kompletten Index irgendwie einmal sortiert
So, guck mal, 290 Millisekunden bei einem Buchstaben
So, aber sobald du mehr machst, hat er, hat er nämlich S, I, 27 abdrehen
Das ist wirklich schnell und wohlgemerkt allem
Alles ohne, dass das Ding im Arbeitsspeicher sein muss
Und wollt ihr mal sehen, wie es richtig brutalst schnell wird
Wenn ich das Order rausnehme, was aber blöd ist, weil das brauche ich
Aber ich nehme es jetzt mal raus, wenn ich das hier rausnehme, dann ist es übelschnell
Guckt mal
7 Millisekunden, null
Seht ihr das? 1 Millisekunde, 4 Millisekunden
1 Millisekunde
Jetzt ist es quasi Echtzeit, ja
Aber die Dinger sind nicht richtig sortiert
Weil ich habe den Sort rausgenommen
Also jetzt, jetzt hat er einfach nur 10 Items
10 Items, die in irgendeiner Art und Weise das enthalten
Egal, ob es am Anfang steht oder nicht
16 Monate, danke schön für den Sub, Pock
Aber guck mal, wie krass schnell das ist, oder?
Das flutscht ja mal sowas von
Guck mal, wie, das ist mega schnell
Das ist so krass, wie schnell das ist
Das ist schneller, als wenn ich es komplett in Memory durchsuche
Truth Force technisch
Was hast du für einen Sorter drin? Das ist direkt das, was Postgres mitbringt
Kannst du nicht kleinzeitig sortieren? Nee
Ich meine, die Datenbank ist allein schon 1,6 Gigabyte groß
Überleg mal, wie groß das Jason ist, was ich auf einen Client schicken müsste
Da muss ich dem Client irgendwie 3 Gigabyte Jason schicken
Viel Spaß, das kleinzeitig zu filtern
Was genau hast du bisher gemacht?
Was habe ich denn alles gemacht?
Wir haben eine Postgres-Datenbank am Start, wo wir
Ich zeige es dir mal
Wir haben eine Postgres-Datenbank am Start, wo wir eine Postgres-Extension verwenden
Die ist aber dabei, die muss man nur aktivieren
Wo er die Sachen optimiert ablegt, dass man schneller durchsuchen kann
Und dann haben wir ein Autocomplete gebastelt, was die random generierten Daten abfragt
Und du siehst, die Query-Times sind mega schnell
2 Millisekunden, 2 Millisekunden, 1,5 Millisekunden
Also richtig, das flutscht, das flutscht richtig
Und wir haben sogar Highlight in den Ergebnissen drin
Guck mal, man kann hier so auswählen und so
Ach ja, und wir hatten was, eine Anzeige oben rechts
Die ist bloß gerade so schnell, dass man es nicht sieht, was eine Anzeige so lange erlädt
Pok, pok, pok
Strange
Leute, ich glaube, ich gehe jetzt was essen
Hat euch der Stream gefallen heute?
Kannst du diese Stream eigentlich als Arbeitszeit abrechnen?
Müsste ich mal meinen Chef fragen, Lul? Nein, kann ich nicht
Hab nebenbei was ähnliches in den View gebaut, nice
Ja, du hast geholfen, also du hast vor allem die letzten Streams richtig geholfen
Wo ich auch gar keine Ahnung von Svelte hatte
Aber das ist sehr, sehr nice hier
Ach ja
Hallo, eh, Hallo kann er nicht
Und er ist auch schnell, wenn man was sucht
Aber es ist immer ohne Scheiß, Leute, der Query-Speed ist so schnell
1,4 Milliliter, okay, es ist nicht das Optimale
Also besser wäre es tatsächlich, den hier zu machen
Das Order wieder reinzunehmen
Folge jetzt, Pok, ja heute gibt es keine Follower und keine Streaming Alerts und so was
Und keine Subscription Alerts, weil die Steamlabs kaputt sind
Order by
ID, Order by ID sollte immer schnell sein
Dann ist die Reihenfolge richtig, es kommt auch bei jedem Query das gleiche raus
Das ist so schnell, ich finde es richtig geil
Einmal zwei Buchstaben und so, dann brauche ich ein bisschen für
Aber ich order es ja auch so, dass das quasi was mit einem A anfängt dann auch zuerst steht
Das ist ja auch irgendwie das, was man erwarten würde
Moment, haben die vielleicht in Postgres irgendwas drinnen, was automatisch schon nach irgendwie
Sprachlogik sortieren kann, wo habe ich denn hier diesen originalen Post nochmal
Hier, da
Du hast doch zweimal Ordner drinnen, ja Moment, Moment, ich habe Order by ID
Das habe ich, dass es immer die gleiche Reihenfolge ist, wobei müsste es
Leute, das ist doch Schwachsinn, das brauche ich nicht, es ist immer by ID geordert
Aber ich habe vorher unterschiedliche Ergebnisse gekriegt, je nachdem was ich abgefragt habe
Dann habe ich Ayla am Anfang gekriegt und dann wieder was anderes
Guck
Lull
Und jetzt suche ich wieder nach A
Ich kriege immer was anderes mit A zurück
Warum eigentlich
Ah, ja weil mein Order by dumm ist
Mein Order by ist ja auch richtig hängen geblieben, deswegen funktioniert das nicht
Es ist, es ordert ja einfach nur nach Start Twist, also es ist entweder startet es damit oder nicht
Ich müsste es vorher sortieren, es ist aber eigentlich auch richtig
Order by
By ID
Also es müsste eigentlich funktionen dann
Der erste ist langsam
Lull
Lull
Nee, okay bin ich zu
Zu Low IQ für jetzt, müsste ich mir angucken, das ist aber echt mein kleines Problem gerade
Leute, ich hoffe euch das Streaming hat euch gefallen, also ich habe echt was gelernt heute
Wir sehen uns im nächsten Stream, machts gut, bis denn
Schön, dass so viele dabei gewesen sind und ich gehe jetzt was futtern, machts gut, CU
