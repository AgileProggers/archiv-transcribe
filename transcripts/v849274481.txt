So Leute, jetzt wirds ernst, jetzt wirds ernst, keck w w w.
Oh, den kam ja mal zu und starten neu, man weiß ja, ich mach mal ein Update, ich mach mal ein Update, bevor Twitch überhaupt kapiert hat, dass der Stream online ist.
Oh man, Update, Update, mal neu starten und dann gucken wir mal.
Wobei der Hintergrund ist doch recht weihnachtlich, ja vielleicht sollte man es doch lassen.
Übrigens der Hintergrund, der automatische Hintergrund ist das einzige wofür ich Bing verwende, das ist das Bing Image of the Day.
Mal gucken was heute Bing Image of the Day ist.
Okay, das ist Bing Image of the Day. Das sind Schlitten oder was ist das? Okay, so weiter.
Alles klar, so jetzt bin ich mal echt gespannt, wie das funktioniert, ob wir überhaupt in Hallo Welt auf die Reihe kriegen.
Also ich hab im Vorfeld eine Sache schon mal nachgeguckt, und zwar es gibt einen Wischl Studio Addon.
Nicht das, ich mach mal den eigenen Ordner.
MkD Kobol, ne das nennen wir nicht Kobol, das nennen wir nicht Kobol, das muss irgendwie anders heißen, das muss MKS Kobol halten.
Okay, was passiert denn in Wischl Studio Code, wenn ich ein normales Kobol File anlege?
Oh ey, ohne Scheiß Leute, ich muss Avira von meinem zweiten Rechner installieren.
Ich hab das mal irgendwann vor, frag mich nicht, 6 Jahre installiert und es ist immer noch da.
Und es nervt mich bei jedem Mal, wenn ich meinen Streaming Vorschau und Chat Vorschau Rechner anmache, dass ich Avira für 50% günstiger kaufen soll.
Geht mir nicht auf den Sack mit dem Kack, warum hab ich das überhaupt noch installiert?
Total useless Chat, braucht keiner mehr.
Jawoll Leute, schon so viele am Start sind jetzt schon 69 Zuschauer haben wir jetzt gerade.
Excellent.
You have Dock 9, Wischl Studio, wie oft will ich mich das eigentlich noch fragen?
Jedes Mal wenn ich das starte, fragt er mich, möchten sie die Docker Extension installieren?
Was, Mao? Das ist meine letzte, also nicht Chico, sondern die die ich davor hatte, ist das.
Das ist die aktuelle, die ich gerade hab.
Das hier ist, irgendwo hab ich auch meine ersten Cuts, also meine ersten Cuts die wir hier hatten.
Weiß gar nicht wo ich sag, ich glaub hier.
Da hab ich aber nicht so viel von, hab ich auf dem Handy noch ein paar Bilder.
Hier kann die deutsche Bank noch was lernen.
Ich glaube, jeder der ein bisschen Kobold kann, der wird sich jetzt wahrscheinlich wegkecke wehen, wenn er das sieht.
Also was passiert in Wischl Studio Code, wenn ich ne Kobold Datei anlege?
Was haben Kobold Dateien überhaupt für Endungen? Punkt Kobold?
Nee, Punkt Kob oder so? Punkt Kob, Alter.
Tatsächlich, Search Marketplace.
Kobold Snippets, jawoll, endlich, yeah, ich wart schon die ganze Zeit drauf, Alter.
Kobold IntelliSense und Kobold Snippets, jawoll, das brauchen wir unbedingt.
Das sieht schon exquisite aus.
Das ist wirklich die Sprache für 500 IQ Leute.
Wie blickst du bei dem Desktop noch durch? Ganz einfach, ich benutze den nicht.
Desktop ist bei mir ein ganz normaler Ordner, wie alles andere auch.
Okay, was ist sinnvoller zu installieren? Einfach nur die Kobold Extension oder den IBM Z Editor?
Ich hab keine Ahnung, wir probieren das jetzt einfach mal aus.
Muss man mal schauen, das wird grausam Leute, das wird ganz grausam.
Aber ich hab's euch versprochen, dass wir das machen, also machen wir das.
Ich installiere das einfach mal und das Allerwichtigste, wisst ihr was wir unbedingt heute installieren müssen?
Wir müssen den besten Font überhaupt installieren, Comic Mono Font.
Hat einer im Discord gepostet, hab ich mir gedacht, das passt zum Thema Kobold.
Ja, also, dass wir nicht so einen seriösen Font wie den hier brauchen, einen ordentlichen Font, Comic Mono Font.
Wie gibt's nicht?
Ist die laut die Musik, oder?
Oder passt?
Es gibt keinen Comic Mono Font, oder?
Comic Schanz, das passt genauso aus.
Wieso nicht einfach direkt auf einem IBM Mainframe?
Ja, easy, wir installieren uns jetzt einfach noch eine ZOS-VM oder sowas, falls es gibt.
Da hab ich halt auch gar keinen Plastenschimmer von.
Okay, wir brauchen erst mal den wichtigsten Font, es gibt keinen Release von dem Font.
Warum nicht? Wie installiert man das denn?
Ja, Comic Mono TTF.
Ich hab ehrlich gesagt gar keine Ahnung, wie ich hier unter Manjaro Fonts nachinstallieren.
Font.
Config, Font.
Die installiert man von Hans Fonts, Alter, keine Ahnung.
Null.
Local Fonts.
Das hab ich schon nie gemacht.
Hier gibt's bestimmt eben den Punkt.
Hier.
Okay.
Da muss es hin.
Local.
Ah, nee.
Local, Share, Fonts.
Okay, das gibt's nicht.
Fonts.
Vollkommen selbsterklärende Ordner, alles klar.
Jetzt war es sofort Bescheid.
Font Downloads, Comic.
Dahin.
Und dann muss man was?
Font FC Cache.
Okay.
Okay, und jetzt haben wir jetzt den Comic Font.
Na ja, bleib mal hier.
Test, Test ist noch der alte Font.
Oh, Test ist in Kobold anscheinend, was Kobold, Kobold, Kobold, Kobold.
So, erstmal die Font Settings umstellen.
Font.
Nicht Hack.
Comic.
Wie ist das Ding?
Comic Mono.
Nee, das ist nicht Comic Mono.
So.
Auch nicht.
Ich bräuchte mal eine Liste von allen.
Alter, der Sound ist übelst merkwürdig, ungleichmäßig abgemischt.
Das sackt.
Ah, yes.
Ja, ja, es ist wirklich Kobold, ja.
In Erdführungszeichen auch, das ist eine gute Idee.
Ah, exzellent.
Oh, bester Font.
Jetzt haben wir, jetzt können wir ordentlich Kobold programmieren.
Jetzt haben wir einen guten Font dafür.
Dann machen wir die Schriftgröße noch ein bisschen größer.
24, bam.
Ja, yes.
So ist das gut.
Hallo, Kobold, null.
Bester Font, so muss es sein.
Moin, Dummi82.
Exzellent, ja.
Ja, das mit Kobold, das muss sein. Ich hab ja, ich hab mich ja rausgeredet Anfang des Jahres,
dass wir an Weihnachten mal Kobold programmieren.
Eigentlich hab ich mir gedacht, die Leute vergessen das, aber...
Das wurde dann jede Woche und jeden Tag irgendwie gefragt und jetzt muss ich das echt machen.
Mein C++-Streamer haben wir schon oft genug gemacht und ich hab mich jedes Mal drüber aufgeregt,
dass die Sprache einfach suckt.
Assembler haben wir auch schon mal gemacht.
Wir haben mal, wir haben mal ein bisschen Assembler auf dem ESP32 gemacht.
Das ist aber auch schon eine ganze Weile her.
Und es war nicht schön.
Da kann ich mich auch dran erinnern, es war nicht schön.
Nee, Pearl machen wir auch nicht. Alter, das kann...
Hört mal auf. Wem fällt noch schlechtere Sachen ein?
Was kommt denn als nächstes? PHP.
Weil PHP gar nicht immer so mies ist.
Also, wenn ich die Auswahl hab zwischen Pearl oder PHP, dann nehm ich eindeutig PHP.
Was kommt als nächstes noch? Rex.
Erkennt ihr Rex?
Rex, das ist auch so eine tolle BigBrain-Sprache.
Ja.
Excellent Rex, Alter.
Pascalplitz.
Aber Pascal ist ja outdated.
Brainfuck. Nee, Brainfuck ist ja nicht dafür gemacht, dass man das programmiert.
Das ist ja, Brainfuck ist ja zum Nerven gemacht.
Was hältst du von Python? Ist toll, super.
Wie wär's, wenn du versuchst ein paar, ey, ey, was? AOC?
Was ist denn AOC 2020?
Ah!
Das ist eine Cobol-Konferenz.
Warum gibt es, warum gibt es 2020 noch Cobol-Konferenzen?
Nee.
Ach, das ist Advent of Code, ah ja.
Oh, nee, nee, nee, nee, nee, nee, ganz bestimmt nicht.
Alter, ich kann doch nicht mal Hello World in Cobol.
Wie soll ich da irgendwelche sinnvollen Probleme in Cobol lösen?
Okay, also, ich suche mir jetzt mal ein Hello World in Cobol und copy-paste das, so wie man das macht, ja.
Hello World-Example in Cobol.
What?
Was ist das?
Okay, Identification, warum gehen diese Striche hier so durch?
Identification, Division, Punkt.
Program ID Hello World, Punkt.
Simple Hello World Program.
Procedure, Division, was haben die alles mit ihren Divisions?
Jetzt kann ich das Cobol von Ubisoft ist.
Paints-Champ.
Punkt am Ende, muss sein.
Display Hello World, ach, okay, das ist quasi das Echo.
Stop Run.
Das ist quasi ein Exit.
Okay, okay, excellent.
Aber es ist schon mal gut, dass wir hier, guck mal, wir haben sogar so eine Art Syntax, nee, so eine Art Auto-Vervollständigung-Loop.
Scheiße, Alter.
Okay, wie führt man das jetzt aus?
Run?
Run unit testing?
Okay, nee, nee, nee.
Anscheinend nicht.
Ich muss wahrscheinlich erstmal irgendeinen Cobol-Compiler oder so installieren, hab ich nicht.
Okay, wir starten einfach mal, gucken was dann passiert.
Ah, geht nicht, okay.
Warum jetzt Cobol?
Weil der Stream mich schon das ganze Jahr über nervt, cool, dass ich Cobol programmieren soll.
Nicht, dass ich großartig Bock drauf hätte, aber ich muss jetzt ran.
Ist Division ein Funktionsname?
Anscheinend nicht, weil Funktion an sich gibt es auch noch.
Ach nee, Moment, Funktion, das ist Call von einem Build-In, von einem Build-In Funktion wahrscheinlich, hä?
Okay, und Sternchen ist Kommentar?
Und gibt es auch sowas wie Multiline-Commons, sowas in der Richtung?
Oder sowas, oder, oder, oder so, oder?
Nee.
Nee, okay, Multiline-Commons gibt es nicht.
Wer zu entwarnst.
Cobol.
Gibt es Multiline-Commons?
Was?
Dick ist concerned, excellent.
Hat Dick Recht, dass er concerned ist.
Okay, es fängt schon mal gut an.
Wenn es schon mal fünf verschiedene Syntax für Kommentare gibt und alles ist...
Ach du...
Cobol-Compiler.
Okay, wir müssen Copx installieren.
Copx.
Okay, es war wahrscheinlich Cop-C, aber Copx müssen wir installieren.
Wie heißt das Paket für Copx?
Das findet er noch nicht mal.
Copx.
Excellent.
Okay, ich suche einfach mal Cobol.
Knu-Cobol.
Ey, jawoll.
Beste Knu-Cobol.
Ist jetzt Copx dabei?
Oh, oh, da ist Copx tatsächlich dabei.
So.
Also.
In welchem Ordner bin ich hier noch mal?
Cobol-CD.
So, Main.Cop haben wir hier jetzt.
Hello World Cobol.
Also, wie kompiliert man jetzt damit was?
Einfach, einfach, einfach.
Copx?
Nee, nee.
Nicht Copx, Alter.
Copx.
No input files.
Copx.
Was ist jetzt los?
Fmlus.
Invalid Indicator.
Fmlus.
Program ID header missing.
A line not terminated.
Okay.
U-Line am Ende.
Hm.
Wo benutzt man den Kram noch?
Naja.
Neue Sachen eher weniger.
Ich mach mal kurz den Chat auf.
Neue Sachen tatsächlich eher weniger.
Aber gerade im Bereich, was Bankenversicherungen und irgendwelche ural Sachen angeht, die hammern
noch massig Cobol-Zeug.
Und wisst ihr, was das Beste ist?
Bei uns auf der Arbeit ist es jetzt so, dass wir kein Original Cobol irgendwie mehr verwenden
können, wollen, was auch immer.
Und dementsprechend haben wir jetzt so ein Tool, was Cobol auf Java übersetzt.
Das macht es auch nicht wirklich besser, weil im Prinzip ist es immer noch Cobol, ja.
Also wir haben dann, also nur mal, dass ich das jetzt richtig verstehe.
Wir haben dann Hello World copy pasted.
Und das hat erstmal die, okay, okay.
Ich guck mal.
Dass er das Programm hat.
Sieben Zeilen.
Und es gibt gleich mal sieben Zeilen Sündagsmorning.
Wir machen da irgendwas verkehrt.
Cobol Compiler ist installed, ja.
Ach so muss man das machen.
Cob, Cob C3.
Also, excellent.
Output, nicht Excel.
Output ist Main.
Main und Input ist Main.Cob.
Procedure Division Header Missing.
Sündags Error Unexpected Sternchen.
Wie?
Der kann keine Comments beim Cobol Compiler, oder was?
Wo soll ich denn Wim ausführen?
Nee, nee, nee.
Ich mach das in VS Code, nicht in Wim.
Okay, ich hab die Idee, Leute.
Big Brain Move.
Ich hab die Idee.
Wir lassen einfach das Free weg.
Fuck.
Procedure Division.
Geht schon mal gut los.
Es ist nicht mal Copy Paste.
Header World funktioniert.
Blood Pack 81, zwei Monate Dankeschön für den Sub.
Die muss das vielleicht nicht Hello World, sondern in dem Fall Main heißen, weil...
Nee.
Oh.
Das hat funktioniert.
Ich find's aber viel bedenklicher, dass ich keine Kommentare mach.
Warum kann der ab, wenn ich einen Kommentar mach?
Was ist das denn?
Okay, Leute.
Wir dürfen einfach unseren Source Code nicht kommentieren.
Dann geht's.
Exzellent, Leute.
Es funktioniert.
Erstes Kobold-Programm am Start.
Exzellent.
Aber warum dürfen wir keine Comments machen?
Ist das irgendwie...
Nee.
Erstes den Kob-Cob-C.
Guter Kob braucht keine Comments, ja.
Von KS.
Okay, Comment.
Minus FM...
Ich hab keine Ahnung, was ich hier mache, aber das probieren wir jetzt mal aus.
Faku.
Faku-Comment.
Alles klar.
Okay, Leute.
Ich hab keine Ahnung, wie ich Comments hier zum Laufen bekomme, aber mit Comments funktioniert
es irgendwie nicht.
Wenn ich das hier wegmache, Programm-ID, kann ich da sowas sagen wie Aja ja und es geht
trotzdem?
Punkt vergessen?
Ah, da muss ein Punkt hinten dran.
Ich seh schon, das wird ganz furchtbar eklig.
Morning.
Was?
Minus O soll ich machen.
Ah, guck mal, wir haben es ohne Warning gepackt.
Excellent.
Wir haben es geschafft, Hello World ohne Warning zu kompilieren.
Wahnsinn.
Chat, ich vermute, ihr seid damit nicht zufrieden, oder?
So, also, was, was?
Okay, wir brauchen irgendwie einen Kobold-Tutorial.
Github.
Okay, wir fangen mal an.
Wie macht man den Kobold eine Schleife?
Wir geben jetzt einfach mal, wir geben jetzt einfach dreimal Hello World aus.
Schleife, okay.
Kobold Loop.
Loop Statement.
Perform Display Hello World.
Endperform.
Ist das jetzt eine Endlosschleife?
Ach so, kann man, kann man irgendwie format?
Fuck.
Oh nee, man muss von Hand formatieren.
Oh nee.
Wie formatiert man hier richtig?
Wie ist die richtige Big Brain Kobold Formatierung?
So?
Nee.
So?
Oh, es hat funktioniert.
Aber, aber, aber er hat, er hat nicht geschleift.
Wie macht man eine Schleife?
Boah, ey, der sieht schon so mega hässlich aus.
Ah, perform until, until five.
Okay, jetzt gibt's fünf mal Hello World.
Das wäre ja auch zu einfach.
Das wäre auch zu einfach, wenn es einfach funktionieren würde.
Ach du Scheiße, wer hat sich das dann ausgedacht?
Okay, perform a.
Alter, was?
Ich will einfach nur eine Schleife machen.
Okay, das Tutorial suckt bestimmt.
Alter, was ist denn hier los?
Kobold Loop Statements, okay, zeig mal.
Die Inder Erklärung ist das heute.
Boah, einfach ein Beispiel.
Schau dir das Example drunter an.
Aha.
0-1-WSCND-Pick-9-1-Value-0.
Ah ja, excellent.
Procedure Division.
Alter, was?
Ah.
Okay, ich glaube, ich glaube, ich habe es kapiert.
Ich glaube, ich habe es kapiert.
Also, ich glaube, ich habe es kapiert.
Procedure Division.
Ach fuck, das kompiliert nicht.
Ach, das hier oben sind meine Variablen oder sowas.
Oh, das ist ja, das ist ja hardcore, ey.
Muss bestimmt das Freeback machen, Alter.
Oh.
Scheiße.
Kann ich nicht, warum ist das alles Caps?
Weil das Cobalt ist, das muss anscheinend so sein.
Line not terminated, okay, excellent.
Ho, wir haben kompiliert.
Bam.
Wir haben gezählt von 0 bis 4.
Grasser Scheiß, okay.
Also, Procedure Division darf man anscheinend nur einmal haben,
so wie es aussieht.
Keine Ahnung, was das macht, aber alles klar.
Okay, und jetzt, und jetzt.
Warum sind die eigentlich so komische?
Kann mir irgendjemand sinnvollerweise erklären,
warum hier so komische Streifen im Bild sind?
Wozu sind die gut?
Soll ich das irgendwie so einrücken oder so?
Wozu sind diese Streifen hier gut?
Hat das irgendwie den Sinn?
Dass ich irgendwie Comments davor schreiben kann oder so?
Die Streifen sind zum Aim.
Wieso gibt es diese Sprache und wo wird sie verwendet?
Die wird beispielsweise auf uralt IBM Großrechnern verwendet.
Also, die Großrechner mögen gar nicht so ein ZOS, Z-Series-Ding zum Beispiel.
Das wird, die Dinger sind an sich gar nicht so alt,
aber die Programme, die da drauf laufen, sind halt irgendwie 50 Jahre alt.
Wieso tut man sich das an?
Tja, soll ich aufhören streamen?
Ich mach das nur, weil der Chat das will.
Guck so, diese Teile.
Da läuft Cobalt drauf. IBM.
Da.
Und die sehen auch teilweise echt so stylisch aus.
Aber das ist auch das einzig stylische daran, dass sie ein stylisches Gehäuse haben.
Host Grill am Start.
Jaja, die Dinger sehen wirklich so aus.
Die haben fancy Türen.
Unsere IBM-Rechner haben auch immer fancy Türen.
Aber wie gesagt, das Einzige daran, was geil ist, ist das Gehäuse von dem Ding.
Die brauchen auch nicht mehr RGB für Performance.
Die Dinger sind an sich gar nicht so scheiße, aber es ist halt komplett outdated.
Und was geil ist, es gibt so ein Terminal für diese IBM-Dinger.
Sieht aus wie ein Fadenkreuz.
Ah.
Es gibt so eine Konsole, da hat man so ein Fadenkreuz, wo man dann die Kommandos anklicken muss.
Habe ich bei unseren Leuten auf der Arbeit schon ab und zu mal gesehen.
Ganz, ganz grausam.
Ja.
Also sowas benutzt man eigentlich heutzutage nicht mehr freiwillig.
So, also wir haben es geschafft.
Wir haben ein Cobalt-Programm, was zählt von 0 bis 3.
Oder halt 4-mal.
4-mal.
Also das heißt, jetzt können wir da auch sagen, anstatt Display...
Ist das hier...
Weiß nicht.
Ok, Display.
Cute-Chat, das muss auch funktionieren, oder?
Und, und...
Nein.
Bam.
Leute, warum geht das?
Warum muss ich da...
Hä?
Das ist doch...
Guck mal, hier muss ich keinen Punkt hintendran machen.
Warum muss ich hier einen Punkt hintendran machen?
Und da ist er optional.
Das muss man nicht wirklich verstehen, oder?
Das ist bestimmt Kobalogen, weil wenn ich hier den Punkt weglasse, kackts ab.
Warum muss ich da einen Punkt machen und bei dem anderen nicht?
Und weshalb?
Und warum steht hier Stop, Run?
Achso.
Ah, jetzt verstehe ich's.
Nee, der...
Wenn das ein kompletter Stringer, würde ja den Punkt am Ende mit ausgehen.
Macht er aber nicht.
Machst du den nächsten Jahr den Advent of Code in Kobal?
Nein, ganz bestimmt nicht.
Alter.
Ja, Chris Dollhenge.
Ist es.
Wir haben alles doppelt und dreifach drin.
Also, wenn ich jetzt unser Big Brain Kobal-Programm richtig verstehe,
dann ist das hier quasi so was wie Main.
Kann man das nicht einfach Main nennen?
Ha!
Guck mal, man kann das Main nennen.
Und das kann man...
Und das kann man dann nennen Print Cute Chat?
Nee.
Ach nee, das muss ich da...
Aha!
Also, das ist so eine Art Funktion oder so?
Muss man das eigentlich alles groß schreiben?
Kann ich nicht sagen, Display?
Oder geht das auch?
0W?
Geht doch auch.
Okay, und warum muss man das jetzt alles groß schreiben?
What the fuck?
Was hab ich gemacht?
Ich hab irgendein Snippet eingefügt oder so.
Oh!
Was gibt das denn jetzt?
Ist das jetzt so eine Art objektorientiertes Kobal oder so?
Oder ja, das kompiliert nicht.
Das wäre ja auch zu schön.
Okay, top, top.
Wie macht man denn IF in Kobal?
Also ich bin...
Es ist aber schon mal echt hardcore umständlich, dass man hier oben den ganzen Grad...
Also sprich, jede Variabel, die ich verwenden will, muss ich da oben...
Und was ist die 1 am Anfang vor allem?
Was passiert denn, wenn ich da 2 hinschreibe?
Oh.
Number must begin with...
Aha, aha, alles klar.
Ja, ich mein, wer kennt's nicht?
Eine Zahl kann ja prinzipiell nur mit 01 oder 77 beginnen.
Vollkommen logisch.
Excellent, was passiert, wenn man 77 macht?
Dann geht's.
Hä?
Warum?
Was ist das für Bewegersprache, Alter?
Okay, nur weil ich's nicht verstehe, muss ja nicht total hängen geblieben sein.
Ah, Arrays sind das.
Okay, mal angenommen, ich will QChat nicht hier hardcoden, sondern ich will das als Variabel anlegen.
Kann man dann sowas sagen wie 02, Message, String oder so?
String?
Ach du Scheiße, was ist das?
Oh, Guys.
Ich weiß nicht mal, was ich da hingeben soll für...
Data Division.
Wir müssen einfach nur gut googlen können.
Okay.
WS, alles klar.
Muss das WS heißen?
WS?
Was ist denn?
Workspace?
Oder sowas?
Das muss auch 01 sein.
Working Storage.
Alter, der Chat hat das anscheinend schon mal gemacht.
Big Brain Chat, wie immer.
Also, sehe ich das richtig, dass ich mein String von Hans hehlen muss?
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15.
Ich muss den wirklich von Hans zählen?
Ernsthaft?
Warum ist er nicht in der Lage daraus das selbst zu zählen?
Okay, QChat.
Das bedeutet, ich muss jetzt sagen, 1, 2, 3, 4, 5, 6, 7, 8, 9.
Also sage ich jetzt hier 9.
Und dann sage ich Display WS Cute.
WS Cute.
Funktioniert.
Was passiert denn, wenn ich hier 8 angebe?
Fehlt dann das Letzte?
Es gibt hier keinen Backslash Null, so wie es aussieht.
Weil, wenn du überall zu einem String eine feste Länge angeben musst und die sich irgendwie speichert und merkt,
dann brauchst du keinen Backslash Null.
Backslash Null ist ja nur dafür da, wenn du nicht weißt, wie lang das Ganze ist.
Was passiert, wenn die Zahl größer ist?
Größer als was?
Ach so, hier.
Gute Frage.
Vielleicht Crashed Stun?
Dann interessiert sie nicht.
Wow.
Jetzt gemacht.
Füllt er das mit Nullen auf oder so?
Ah, der füllt das mit Nullen auf.
Also sprich, das fängt mit Q-Chat an.
Also man hat 1000 Bites oder so, wahrscheinlich.
Wahrscheinlich sind es 1000 Bites.
Und das fängt einfach, ist quasi so eine Art Array aus 1000 Bites.
Also ein Speicherblock mit 1000 Bites.
Am Anfang kommt Q-Chat rein.
Und danach einfach noch, keine Ahnung, 908 Schnullen oder so.
Hä?
Also muss ich doch zählen, weil sonst Müll rauskommt.
Also muss 9.
Und warum ist das X?
Pick X?
Was sagt mir das überhaupt? Pick X?
Und hier ist es Pick 9?
Da musst du die Breite deiner Lochkarte eingeben.
Das könnte es tatsächlich sein.
Wahrscheinlich ist das ein Gebate-Comment, aber das könnte es tatsächlich sein.
Man weiß ja nie. Hey, der Kram ist 70 Jahre alt.
Das ist bestimmt die Breite, die löchert in der Lochkarte oder so.
Gebate, aber es könnte echt sein.
X, ich hab keine Ahnung, was das macht.
Okay, also wir haben jetzt ein ganz tolles Cobalt-Programm, was 4x Q-Chat ausgibt.
9 ist numerisch, X ist alphanumerisch.
Ah, verstehe. Exzellent.
Okay, jetzt gucken wir mal, wie man den If-Else-Cobalt.
Ich agree zu allem.
What?
Meine Augen tun weh. Wer hat sich denn das hier ausgedacht?
Moment.
Ah, es geht nicht. Doch, jetzt geht es.
Exzellent.
Okay, wir geben das jetzt mal nur aus, wenn WS-Count gleich 2 ist.
Also, If.
Ah, End-If braucht man. Okay, If.
WS-Count. Es geht garantiert nicht so.
Aber man kann es ja mal probieren. Das wäre zu einfach, glaube ich.
Nee, natürlich nicht. Das kann halt sein, dass es so einfach geht.
Die Schrifter, die habe ich extra für heute reingemacht, ja.
Das ist, falls es dich interessiert, beste Schrifter. Das ist Comic-Monofond.
Okay, so funktioniert es schon mal nicht.
Also, wie macht man den If in Cobalt?
Gleich. Ach, einfach nur den Gleich?
Ah, okay. Das ist mal eine Sache, die Sinn ergibt.
Taylor, 15 Monate, krasser Scheiß.
15 Monate, das ist ja schon Hypersubscription. Wo habe ich es denn?
15 Monate ist echt huge. Ja, korrekt.
Das ist die einzig wahre Hackermans-Schriftart heute.
Hacker hassen diesen Trick.
Okay, also. Wir machen eine Schleife in Cobalt.
Und geben Q-Chat nur aus beim zweiten Durchlauf.
Nee, beim dritten Durchlauf.
Machen wir heute Cobalt wegen der Stellenanzeige.
Ja, ich wollte schon immer mal Java-Cobalt-Fullstack werden.
Deswegen machen wir Cobalt.
Und wisst ihr, was das Geile ist, Leute?
Alle, die diesen Stream jetzt gesehen haben. Also, Big Brain Chat.
Alle, die diesen Stream jetzt gesehen haben, haben mehr Cobalt-Erfahrung als 99,999% der Weltbevölkerung.
Also, könnt ihr euch jetzt schon mal bewerben mit Cobalt-Kenntnisse.
Direkt den Lebenslauf rein.
Ja, direkt den Lebenslauf rein, Leute. Was sonst?
Okay, jetzt machen wir mal was Kompliziertes.
Wie lese ich denn was ein?
Was ich viel interessanter finde, was ist diese Function-Geschichte hier?
Functions?
Current Date.
Was macht man damit?
Okay, okay, das probieren wir jetzt. Current Date.
Geht sowas?
Keck weh? Ich hab keine Ahnung.
Natürlich nicht.
Okay, okay.
Okay, Cromwell Function Current Date.
What?
Ah, kann ich einfach ohne Variable oder so?
Okay, nee, so funktioniert das Ganze schon mal nicht.
Example also get Current Date in Cobalt. Jawoll. Current Date.
What? Was?
Move Function Current Date? Okay, okay. Ach du...
Also sprich, das machen wir hier oben einmal.
So, jetzt wird er natürlich meckern, dass es das nicht gibt.
Test.
Is not defined, alles klar, okay.
So, jetzt muss ich das anlegen oben.
WS Current Date.
Alter, was ist das denn?
Ernsthaft? Ich muss den kompletten Speicherinhalt angeben oder was?
Ach du Scheiße.
Das ist doch jetzt nicht euer Ernst, oder?
Ups.
Das ist doch jetzt nicht euer Ernst. Wie muss das jetzt aussehen?
So.
Ich muss jetzt einfach mal so stehen.
Easy, easy compile. Warum kann ich das denn richtig einrücken?
Warum kann ich das nicht ordentlich einrücken? Was soll denn das?
Wie rückt man hier überhaupt was ein?
So, perfekt. Beste, mega hübsche Cobol-Code.
Das wäre auch zu einfach, wenn das jetzt einfach funktioniert.
Warum geht das jetzt nicht? Warum geht das jetzt nicht? Ich hätte jetzt eigentlich erwartet, dass das funktioniert.
Ich meine, Display WS Current Date Data. Unexpected End If. Ah, hier, weil da Punkt fehlt.
Ne, da kommt gar kein Punkt hin.
Aber an sich ist da gar kein Syntax-Fehler drin, oder? Wenn ich sowas hier mache, dann geht's ja.
Syntax Error. Unexpected End If. Warum?
Wo ist das Problem? Cobol, please.
Das sieht doch richtig aus. Warum geht das nicht?
Mach mal noch Minus-Date. Wo? Wo Minus-Date?
Ohne Data?
Okay, da ist irgendein Syntax-Fehler, der sich mir nicht so genau erschließt.
Ich mach mal das If weg, vielleicht geht's dann.
Wo ist er sich denn jetzt an dem If? Eben ging das gleiche If doch noch.
Wie kommts das zu Cobol? Ich will keinen Cobol lernen.
Der Chat ist da Meinung gewesen, das ganze Jahr über schon, dass wir Cobol mal machen müssen.
Da hab ich gesagt an Weihnachten. Und jetzt ist es Weihnachten.
Warum geht denn das If jetzt auf einmal nicht mehr? Eben ging das If doch noch.
Kann mir das irgendjemand schlüssig erklären?
Warum geht das If? Eben ging das If doch noch.
Darf man vielleicht sowas, darf man vielleicht irgendeinen Move oder so nicht im If machen? Nee.
Ohne Punkt? Ah! Aber guckt mal, wenn ich da ein String mach, dann darf ich einen Punkt dran machen.
Ah nee. Hä? Jetzt auf einmal nicht mehr? Eben durfte ich da noch einen Punkt dran machen.
Ich blick nicht mehr durch, Alter.
Hä? Hä? Moment, eben ging es doch.
Jetzt geht es nicht mehr.
26 ohne den Punkt? Nee.
Und da muss der Punkt hin? Nee, da muss auch der Punkt.
Darf in einem If kein Punkt hinten dran kommen? Kann das sein?
Ist Punkt so was wie Endstatement? Und wenn ich in einem If einen Punkt mache, dann geht das nicht?
Weil guckt mal, vor dem If geht das nämlich mit Punkt.
Ah, guckt mal, so ist das. Also ein Punkt ist quasi das Gleiche wie ein Endif.
Exquisite.
Alles klar, wissen wir Bescheid. Okay.
Okay, jetzt geben wir unser aktuelles Datum aus. Stimmt das denn überhaupt, Kobold?
1, also 20, 20, 12, 25, 12, 11 Uhr, 6, 19 Sekunden und 49 Millisekunden. Exquisite.
Mach mal anstatt dem Endif einen Punkt, das ist eine gute Idee.
Ah. Oh, das eröffnet eine ganz neue Welt von obfuscated Kobold.
Wenn ich an Endblöcke durch Punkte ersetzen kann, beliebe ich im Block irgendwo.
Aber allerdings muss man sagen, ich glaube Kobold muss man nicht obfuscaten, das ist obfuscated genug.
Kann ich hier unten auch einfach einen Punkt machen anstatt den Endblock?
Okay, perfekt.
Kann man große und kleine Schreibungen mischen? Geht auch, okay.
Ach du große Kacke.
Ein Punkt beendet die Prozedur, aha.
Also das ist quasi ein Return an der Stelle.
Was bedeuten würde, wenn ich hier Display dahinter schreibe, dann wird es nicht mehr ausgeführt.
Nee, daran liegt es nicht.
Was wird programmiert? Das weiß ich noch nicht so genau. Eigentlich nichts Konkretes.
Wir freuen uns gerade an Kobold, weil erfreuen das falsche Wort ist.
Sieht das nicht exquisite aus dieser Source Code jetzt? Sagt doch mal Chet, der ist doch wirklich next level.
Was aber auch geil ist, man muss sich mal überlegen, wir brauchen jetzt, um Datum auszugeben, diesen ganzen Shit hier.
Nur um Datum auszugeben.
Gibt es auch mit Test before?
Warum ist das alles in Caps? Das kann man sich aus und man kann das übrigens auch mischen.
Also ich könnte jetzt sagen, ich mache das außen in Caps und das innen mache ich nicht in Caps.
Warum auch immer das überhaupt möglich ist, verstehe ich auch nicht.
Alter ist das der Wahnsinn.
Okay, aber die Einrückung hier oben gefallen mir übrigens immer noch nicht.
Guck mal hier jetzt.
Das sieht doch schon gleich viel besser aus.
Vermutlich hätte Pick 916, das ist eine gute Frage, das können wir mal ausprobieren.
Aber ach ja, dann macht er immer alles auf einmal und hier könnte ich wahrscheinlich jetzt auf die einzelnen Teile davon zugreifen,
weil er weiß, wo im Speicher der Kram steht. Also wenn ich immer nur das komplette Datum brauche,
dann kann ich wahrscheinlich wirklich die kürzere Variante machen.
Also sowas hier dann.
Wobei die Frage ist, ob man X nehmen muss, nein wir müssen kein X nehmen, wir müssen 9 nehmen,
weil 9 ja Zahlen sind, warum auch immer, Value.
Und wie viel brauchen wir denn jetzt, keine Ahnung.
100, ne.
Ah Moment, mehr als 38 geht nicht, alles klar.
Excellent.
38, ne das funktioniert nicht.
Das funktioniert nicht.
Das funktioniert nicht, aber X vielleicht mit X.
Ah, mit X gehts.
Warum muss, warum muss ein Date-Time, warum muss ein Date-Time äh äh alpha numeric sein?
Das habe ich jetzt nicht verstanden.
Ja logo 55, das frage ich mich auch.
What the fuck.
Ok, aber das funktioniert prinzipiell.
Excellent.
Wie viel sind denn das hier?
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, ok alles klar.
Top.
Top.
Also wir haben es geschafft, in Kobolds aktuelle Datum auszugeben.
Was gibt es ja noch so für schöne Build-In Functions?
Ist natürlich toll, wie das abgekürzt ist.
Man hat kein Currency.
Wow.
Kann man ein Euro-Zeichen ausgeben lassen.
Kobol.
Da merkt man, dass das Stonks, dass das ursprünglich aus der Stonks-Entwicklung kommt.
Kobol.
Ok, da bin ich zu blöd für das zu verwenden.
Warum, warum kann man, kann, jetzt müssen wir mal was ausprobieren.
Kann Kobol, hat Kobol Emoji beziehungsweise UTF-8 Support?
Chat, was meint ihr?
Geht es oder geht das nicht?
Also ich denke es, der Chat sagt nein.
Ich denke es geht, weil, weil letztendlich ist es unter der Haube scheißegal.
Der macht ja, den interessiert ja überhaupt nicht, was drinne steht.
Der interessiert, da sind dann einfach nur 4 Bites oder so.
So ein Emoji ist 4 Bites.
Das dürfte den überhaupt nicht jucken.
Siehste?
Bäm.
Das juckt den überhaupt nicht.
Das sind einfach nur für den 4 Bites, wo er keine Ahnung von hat, was es ist.
Siehste mal.
Emoji-Support.
70 Jahre alten Sprache nehme ich habe keine Ahnung, wann Kobol zuerst rausgekommen ist.
1960, alles klar.
First Appeared, ok vor 60 Jahren.
60 Jahre alte Sprache kann UTF-8 und C++ kann es nicht.
Wobei man sagen muss, das stimmt überhaupt nicht, was ich gerade gesagt habe.
C++ kann es, wenn man das nämlich auf der gleichen Ebene macht wie Kobol.
Und es ist übrigens auch nicht UTF-8, was ich erzählt habe, das ist totaler Blödsinn.
C++ kann das natürlich auch, wenn man es einfach nur auf dieser Beitebene macht.
Was C++ nicht kann oder standardmäßig nicht hat, ist irgendwelche String-Types, die UTF-8
oder generell irgendwelche Unicode-Sachen verstehen würden.
Natürlich auf der Ebene funktioniert das in C++ auch.
Und es ist auch nicht UTF-8, sondern es ist einfach, tja, gute Frage, was es intern ist.
Ich habe keine Ahnung.
Wahrscheinlich UTF-8.
Oder?
Keine Ahnung.
Nee, weder noch, weder noch.
Ich glaube, das ist einfach nur Glück, dass es funktioniert.
Intern sind das vier Bytes, die einfach von Kobol wahrscheinlich wie ganz normaler ASCII-Text behandelt werden.
Und mein Terminal ist dann so schlau, bei der Ausgabe zu sagen, wenn diese vier Bytes hintereinander kommen,
dann ist es halt eben in UTF-8, weil es einfach mal standardmäßig von aus geht,
dass das UTF-8 ist, keine Ahnung, dass das dann ein Emoji ist.
Na gut, wie ich meinen Source-Code speichere, ist ja erstmal egal.
Das Ganze wird ja kompiliert zu einem Main-Executable und da ist es egal, wie man es ausgibt.
Also wenn es funktioniert, ich bin schon mal begeistert.
Wie gut lassen sich Emojis von Lochkarten einlesen?
Eigentlich genauso. Einlesen ist ein gutes Stichwort.
Wahrscheinlich genauso wie vom Terminal.
Aber wenn man das letztendlich gegen einen Byte geschwuppelt und wie es dann interpretiert wird,
ist es halt Sache vom Terminal.
Wir lesen jetzt mal was ein.
Kobol Read Input. Read Input vom Standard In.
Okay. Accept Meal Cost from Sys In. Meal Cost, nee, was anderes.
Accept Keqwe In from Sys In. Keqwe In ist not defined.
Okay, da müssen wir jetzt eine Variable anlegen, wo man das reinschreiben kann.
Keqwe In. Muss das eigentlich WS heißen?
Oder ist das so eher nur so Kobol Convention?
Accept Keqwe In. 0W.
Oh. Hey. Es funktioniert.
Es ist aber ultra langsam.
Display. WS. Nee, nee, Moment.
Da muss man echt ganz besondere Veranlagungen für haben, um Kobol zu programmieren.
Okay. Hallo. Cute Chat. Ah, ja, ja.
Bei wie vielen Entern hört er auf?
Wie sagt man ihm, dass Input lesen fertig ist?
Einmal Enter drücken reicht nicht.
Zweimal Enter drücken reicht auch nicht.
Dreimal Enter drücken geht und dann hängt er immer noch.
Wie sage ich ihm denn, dass er aufhören soll, Input zu lesen?
Ctrl C. Das geht natürlich, aber dann bricht er komplett aus.
Ich kapiere es null.
Also Kobol Sys In. Cancel.
Von 2009. Perfekt.
Ach nee, guck mal, der liest so lange, der liest bestimmt so lange, bis ich neun Zeichen eingegeben habe, oder?
Der wartet bestimmt auf neun Zeichen.
Wobei, da hätte er da oben auch schon.
Okay, Ctrl D funktioniert tatsächlich.
Ctrl D funktioniert, also sage ich jetzt Keg W.
Ich muss zweimal Enter Ctrl D. Aha, alles klar.
Nee, ist nicht in der Loop drin. Sys In ist außerhalb von der, ach Moment.
Ah, doch, siehst du mal. Ist nicht in der Loop drin, hier muss das rein.
Ich habe irgendwie aus irgendwelchen Gründen gedacht, das hier ist meine Schleife, aber das ist ja gar nicht. Das hier ist ja meine Schleife.
Keg. Ah, jetzt funktioniert es auch. Mal hier.
Und, und wie, und wie macht man das jetzt? Kann man sowas hier das hintereinander ausgeben lassen?
Oh, das funktioniert.
Wahnsinn. Bin begeistert, Cobalt. Exzellent.
Alles klar. Jetzt haben wir doch schon mal Massive Big Brain Cobalt Programm erstellt hier.
Wir können was einlesen und wir können Emojis ausgeben, immerhin.
Nix wird alles re-inventet, programmt in Cobalt hier. Wir bauen alles neu.
Oh nee, ich will das fast gar nicht aufmachen, aber kann man, kann man Web Anwendung in Cobalt programmieren?
Ach du Scheiße, das geht.
Okay, HTTP Request in Cobalt.
How to make HTTP Request from Cobalt.
Oh Gott, da muss ich jetzt Linux System Aufruf in Cobalt machen oder was?
Okay, gibt's nicht.
Calling a web service, sending JSON data from Cobalt.
Was?
Ich hätte ja echt nicht gedacht, dass Stack Overflow Cobalt noch so aktiv ist.
What is happening?
Kicks Web Send Post. Alter, what the fuck? Okay, wie macht man den Cobalt in Web Request?
IBM ZOS HTTPS Protocol Enabler. Ich glaube, das ist nicht gedacht.
Hast du Venise Unleashed die Tage nochmal gespielt? Nee, nach dem Stream nicht mehr. Aber eigentlich wollte ich heute wieder ein bisschen spielen.
Aber ich weiß nicht, ob ich das Onstream mache. Scheint ja ganz gut, was los zu sein.
Get Uri. Cobalt. Die gibt's nicht.
Okay Leute, so einfach ist es nicht, einfach in Web Request in Cobalt zu schicken. Das ist aus einer Zeit, da hat man auch keine Web Request gemacht.
Und schon gar nicht mal Web Request in der Standard Library.
Cobalt für Eclipse. Also wenn jetzt eine Sache noch nicht schlimm genug ist, dann dass ich auch noch Eclipse verwenden müsste.
Wo wir gerade dabei sind.
Es gibt Eclipse noch nicht mal im Standard als normales Paket zum installieren.
Eclipse ist wirklich Paint Champ, Alter. Das tut weh.
Okay Leute, ich glaube, Web Request kriege Knu Cobalt.
Knu Cobalt Web Request.
Nee, nee, nee, das machen wir nicht. Das scheint HTTP Request, das scheint nicht so einfach zu sein.
Schon interessant, ne? Es ist halt auch eine Sprache, die vor 60 Jahren rausgekommen ist. Da hat noch keiner an Web Request gedacht.
Florian, Big Brain Informations hier.
Da gab es noch kein Internet, nee. So Chat, was können wir jetzt noch machen? Web Request ist schon mal nicht. Web Request ist schon mal nicht hier mit Cobalt.
Wenn man allein schon hier sieht, was das für ein super kompliziertes Zeug ist.
Okay, also wir haben jetzt Zeug eingelesen, wir haben IF gemacht, wir haben eine Schleife gemacht.
Gibt es noch irgendwelche Basics-Sachen, die man in Cobalt mal ausprobieren kann? Mir gehen jetzt echt langsam die Ideen aus.
Cobalt Tutorial Deutsch, exzellent.
Die Commit Anweisung, die Cancel Anweisung, die Accept.
Was ist das?
Okay, ich sehe, wir kratzen nur an der Oberfläche und es wird immer schlimmer. Wie macht man einen Jump in Cobalt?
Jump, Cobalt. Wenn schon, dann eklig, dann richtig. Go To. How to use Go To in Cobalt. Jetzt wird es exzellent.
Jetzt brauchen wir. Wie, es gibt kein Go To? Es gibt kein Go To? Warum gibt es in so einer alten Sprache kein Go To?
Cobalt Read File. Datei ausgeben.
Ich habe so meine Bedenken, dass das Open Mode Read.
Okay, okay, wir lesen jetzt noch einen File ein, wir lesen jetzt noch einen File ein in Cobalt. Exzellent.
Ich bin jetzt schon eine Stunde online, es reicht mir schon, Alter. Okay, das machen wir in Main.
Also ordentlich formatieren, können wir den Kram schon mal net.
WS File Structure. Read File Name. Okay, File Name ist Blob.txt. Und was meckert er jetzt?
WS File Structure is not defined. Ja gut, das müssen wir machen. Das ist jetzt sowas hier wieder. Punkt.
Was? Unexpected Literal. Expecting, Identify, Ex... Okay, ich habe keine Ahnung, was er will. Was will er? Was will er von mir?
Was? Alter, was? Machst du dieses Jahr wieder Silvester Stream? Ja, kann durchaus sein.
End Read. Warum muss man hier eigentlich einen Punkt in End Read machen?
Wie kann man essentielle Sachen so schwer machen? Ja, das frage ich mich auch.
Okay, das ist optional anscheinend. Okay, ich habe keine Ahnung, was der für Schmerzen hat.
Unexpected Literal. Was will der denn von mir? Wo ist das Problem? Kann man Sachen auskommentieren?
Krasse Comments, Alter. Wahnsinn. Ich habe keine Blob.txt, aber der kompiliert ja noch nicht mal.
Der weiß an der Stelle gar nicht, ob ich nur Blob.txt habe oder nicht. Mensch, kann einer anlegen?
Aber das wird nichts ändern. Der kompiliert ja noch nicht mal. Read Blob. Display Lulvi. Okay, das funktioniert nicht.
Code. Example Code. File Section. Boah, nee, Alter. Nee, nee, nee, hör mal auf.
Okay, okay, das geht nicht so einfach. Das geht nicht so einfach. Wer hätte das gedacht?
Also, Main. Hallo? Hallo? Ich will das kopieren. Copy-Paste, please. Alter, das ist eine Seite, wo man nicht mal copy-pasten kann.
Die ist bestimmt mit Cobalt programmiert. Warum kann ich hier auf dieser Seite nicht copy-pasten?
Wo ist denn der Sinn davon? Alter, ernsthaft? Ich kann nicht copy-pasten auf einer Seite?
Oh Gott, was ist... Cobalt Shit. Man kann nicht copy-pasten. Guck dir das mal an. Copy-paste deaktiviert.
Konnte man nicht irgendwie hier sagen, copy? Kann ich copy-pasten?
You block? Gute Idee. Ändert aber nix. Nee. Pass mal auf. Wir klauen uns das jetzt richtig geil aus im Source Code. Easy.
Ha. Easy. View? Alter, warum ist das Firefox-Menü mittlerweile eigentlich so scheiße?
Früher gab es View Source Code. Wo ist das jetzt überhaupt? Ah, das gibt es immer noch.
Aber gibt es keinen Knopfball für? Was? Control? Steuer? Ah. Read. Ach du Kacke. Nee, das... Hier.
Ach nee, da sind jetzt so Dinger drin. Okay, das ist ein Kack-Kack-Beispiel. Das verwenden wir einfach gar nicht.
Cobalt Read File. Read. Kann doch nicht so schwierig sein, eine Datei zu lesen.
Also Procedure Division. Stop Run. Open Input. Read Input. Nee, das war was anderes.
Komplizierter Kram. Das ist ja Wahnsinn, wie man so easy Sachen so kompliziert machen kann.
How to Read File in Cobalt. Ja, zeig es mir auf. Als nächstes machen wir Machine Learning in Cobalt.
Cobalt Stack Overflow. So. Also. Wie? Wie? Wie? Main. Ich krieg Zustände. Read In File At End Move.
Read. Ah, okay. Also im Prinzip ist das hier das, was man machen muss zum Datei lesen. Verstehe.
Also den Kram erstmal irgendwie richtig einrücken. At End. At End Read. Easy. Fertig. So, kombiniert das jetzt.
In File Is Not Defined. Gut, das können wir ändern. In File Is Value Blob.txt. Passt das mit?
Eins, zwei, drei, vier, fünf, sechs, sieben, acht. Ja. In File Is Not. What? Not a File Name?
Okay, das funktioniert wieder nicht so einfach, dass man einfach da jetzt irgendwie einen String angibt und zu einem File und so.
Also In File. Aha. FD In File. What is happening? File Section.
Ist das da eine CSV, was da drin steht oder was ist das? Ich will einfach nur eine Datei, Zeile für Zeile einlesen.
File Section. Setzten Punkt dahinter. Unexpected File. Muss eingerückt sein? Nee.
Moment. In File gibt es. Und jetzt? Alter, es kann doch nicht so schwierig sein, einfach eine Datei zeilenweise einzulesen.
Okay, das Programm ist schön kurz. Das gucken wir uns jetzt mal an. Warum tust du dir das an?
Weil das schon das ganze Jahr über Running Gag im Chat ist und ich sage immer zu Weihnachten machen wir Kobold.
Environment Division, File Section. Aha. Alter, ich verstehe es nicht. Wie mache ich eine Datei auf?
Es kann doch nicht so schwierig sein, einfach eine Datei zu öffnen. Okay. Open Input File. Wir schreiben jetzt einfach plupp.txt von Hand rein.
Oh. Bam. Weg. Weg. Oh. In File is not defined. Ja, ich weiß. Zack. Geht das jetzt wenigstens? Nee.
Alter, ist das kompliziert. Fuck Datei öffnen. Ich würde lieber Assembler programmieren als das. Ja, aber ernsthaft.
Data Division, File Section. Okay. FD In File muss das bei mir heißen.
B is not defined. Und ist not is not a file name. Warum nicht?
Was? Alter. Ich habe ernsthaft keinen Plassen Schimmer. Simple. Simple File Reading. Simple.
Was? Was zum Geier?
Leute, ich habe ernsthaft keine Ahnung. Was? Was macht es überhaupt?
Leute, ich habe keine Ahnung, wie ich Datei anlese. Simple. Easy. Easy. Gibt es da vielleicht mal irgendwie ein Beispiel?
Cobol Read File Example. Kann doch nicht so schwer sein, publisches Datei einzulesen. Open File in Cobol. Also, schieß los IBM. Read File in Cobol. Read File Name. Gibt es da ein Beispiel?
Ja, da steht er. Die Seiten sehen auch schon so aus wie von 1980. Reading a sequential file. Ah ja, okay, okay. Jetzt sieht es doch schon besser als allen so.
Environment, Division, Input, Output Section, File Control. Alter. Nee, nee, nicht hier.
Was zum? Dopp, Mopp, Job, Agenda. Oh, oh, oh. Das könnt ihr heutzutage mal so ein Beispiel reinschreiben.
Environment, Input, Output Division, File Control Division. Okay. Warum kann der Kram übrigens nicht richtig Copy Pasten? File Control.
Select Students File, Assign to Students Dates. Okay. Organization is Line Sequence. Alter. Was willst du von mir, Cobol? Students Date. Okay. In File. In File.
Missing File Description for File in File. Okay, wir haben schon mal andere Fehlermeldung. Und das ist nicht, das ist plupp.txt.
Missing File Description. Aha. Und das ist dann File Description. Aha. Aha. Aha. Post Jam. Verstehe. Also naja, Verstehe ist zu viel gesagt.
Copy Paste nicht richtig funktioniert, ist auch ätzend. FD, das ist bei mir dann in File. Und da ist einfach nur, bei mir ist nichts anderes drinne, wie eine Zeile, eine Zeile ist drinne.
Eine Zeile ist drinne mit, keine Ahnung, zehn, zehn Einträgen. Missing File Description for File in File. Warum?
Ani01 muss man da machen, ne? Aha. Oh Leute. Hat es jetzt kompiliert? Es hat kompiliert, Leute.
Ja, Warning. Was interessiert mich denn? Warning. Warning ist mir egal.
Error. End of File. Plupp.txt. Darf man keinen Punkt verwenden bei Inkobolt für das Teilnehmen?
Display. Lull. Das geht so schon mal nicht. Also wie geht es weiter?
Oder muss man hier das weglassen? Also Open Input. Okay, hier muss man den Punkt schon mal weglassen und jetzt Read und dann muss man auch den Punkt weglassen.
Unexpected End of File, weil da kein der Zeichen am Ende ist oder auch nicht. Wir nähern uns, wir nähern uns der Sache.
At End Move High Values. Kann man nicht einfach über die Zeit drüber loopen oder so? Read In File.
Warum ist das Unexpected End of File? Ah, ne. Was? End of File. Okay, das kompiliert. Alles klar.
So und jetzt liest er das ein und jetzt sag ich unten Display. Ach ne und jetzt muss man At End Move Values to Student Details.
Also At End, ich hab keine Ahnung was ich hier mache. At End Move Values to, ja Moment, das müsste doch eigentlich schon hier drinnen stehen, oder?
Genau, Stop Run brauchen wir noch. Stop Run. Ne, wie hieß das? Hieß das Stop Run? Das ist nicht irgendwie anders. Mal kurz rückwärts gehen.
Wie hieß, wie haben wir das genannt? Ah, Stop Run, so war das. Oh ja, ich weiß, dass das nicht die Feind ist.
At End Move, was? Ah, das tut so weh. Was tut das? Was macht das? Ich mein, es wirft zumindest schon mal keine Fehler.
Implicit Close, End of File Status. Ja, ist ja schön wenn End of File ist.
Also ich hab echt das Gefühl wir nähern und wir nähern uns der At End Set EOF Gleich True. Aha. Aha, Read, ne das war das anderes.
Oh, Moment, warum hab ich das jetzt zugemacht? Ah, Mist, ich hab die, ah Leute, ich hab die Seite geschlossen, jetzt find ich sie nicht mehr.
Gibt's keine Cobalt Doku, doch es gibt jede Menge Sachen, nur man flickt nicht durch. Move to Student Details. Move to CakeW.
At End, ich hab keine Ahnung, was High Values überhaupt bedeutet, Alter. Ok, Data Section. CakeW ist ein String, alles klar.
Alter, was ist das? Leute, ich hab keine Ahnung, wie es geht. Ja, ich muss erstmal, Closen muss ich nicht, das macht er automatisch.
CakeW ist not defined. Ja, ich hab ja gerade versucht CakeW zu define, aber das hat nicht funktioniert.
Ich mach kein Close, ich krieg's dann nicht mal kompiliert überhaupt. Aha, es hat kompiliert, Poggers.
Display, CakeW. Ok, es gibt nichts aus, es gibt nichts aus. Das bedeutet schonmal, dass es prinzipiell läuft,
aber At End, es steht ja auch nichts drin in meiner Datei. 0W, wir machen jetzt einfach mal.
Bam, Leute, ich hab's eingelesen aus der Datei. 0W steht da drin, aber halt nur zehnmal steht das da drin.
Kann ich das jetzt ausgeben? Geht auch, ok. Das war ja easy. So, und jetzt würde ich das Ganze aber nochmal, kann ich das nicht einlesen?
Kann ich nicht At End move High Values? Was will er mir überhaupt sagen damit? Was sind High Values?
Es gibt so Spielmode bei manchen Spielen, so High Value Target, dass du den Leuten killst mit den meisten Kills,
aber das kann ja wohl schlecht sein. Ok, also jetzt muss ich erstmal meinen RAM groß genug machen, dass die Datei reinpasst.
Wie groß ist die Datei, weiß man nicht. Size 150. Excellent.
Und wie loop ich da jetzt durch? Eventuell sind High Values alles, was nicht null ist. Ja, das kann tatsächlich sein.
Aber immerhin, wir haben es geschafft, in Kobold eine Datei einzulesen.
Kobold Loop File. Es geht wieder los, Leute.
Das ist immer so eklig. Nee Leute, ich glaube, ich kann es mir nicht mehr weitergeben. Das ist ja anstrengend hoch 10.
Was ist das? 0W. So, wie ging das jetzt mit der Schleife nochmal?
Ich muss mal kurz rückgängig machen, weil ich habe es natürlich nirgendswo eingecheckt oder so.
Wie ging das nochmal mit der Schleife jetzt? Ja, so ging das.
Perform Until End of File. Ah, das heißt, ich kann hier drinnen was reinschreiben. Ok, Perform Until EOF.
Irgendwie sowas? Nee. Perform Until EOF, aber nicht, aber nicht, aber nicht da drinnen.
Aber das geht nicht da drinnen. End Perform. Aber das kann man nicht hier in dieser Schleife machen.
Also ich kann es aber einlesen. Ich kann es aber einlesen und dann sage ich Perform Until EOF, aber EOF von was?
Aber was ist EOF?
Add End Set EOF to True. Ok, das ist quasi eine Endlosschleife. Das ist quasi ein If im Endeffekt bei dem Typ nur. Ln, wo kommt Ln her?
Ach nee, der macht das über Standard Input.
MonkaS. Aber wir haben doch hier irgendwo hier Print Cute Chat.
So, das ist hier unsere Procedure. Read in File. Äh ja, ist noch Define, ist mir klar. So, das If brauchen wir auch nicht mehr.
So, und jetzt machen wir einfach eine Schleife nochmal da drüber. Ja, alles klar. Unexpected End Of File, weil kein Leerzeichen dahinter ist, oder?
Ah nee, da muss man jetzt einen Punkt machen. Alter, so langsam Leute, so langsam blick ich durch. Schmeckt ihr es?
Und wie ging das jetzt mit der Schleife? Warum komme ich? Ja, weil, weil.
Ok, und jetzt sagen wir, jetzt haben wir die Dateien gelesen. Perform Print Cute Chat. Was war das? EOF? Until, Until EOF.
Oder was? EOF ist not Defined. Einfach Endlos, kann man Endlosschleife machen? Gibt es Cobol Infinite Loop?
Nee, das ist nicht so einfach, das ist nicht so einfach. Doch, das ist, na gut, wir, wir, wir, wir, WS Count machen wir einfach nie höher.
Was war das hier, WS? Ah, WS, WS Count. Ich muss schon wieder rückgängig machen, ich sollte den Kram vielleicht mal einchecken.
WS, WS Count, das ist Working Storage Section, alles klar. Was wird es am Ende? Ja, weiß ich nicht so genau.
Nix, wahrscheinlich. Weil Cobol. Aha! Wo ist, Unknown Statement 1, wo ist denn jetzt schon wieder das Problem?
Was hat er denn jetzt für Schmerzen? Warum geht das jetzt nicht? Muss ich das vielleicht unten drunter machen?
Endlosschleife, exzellent. Wir haben es geschafft, eine Endlosschleife, nice. So, und jetzt Display. Display Kekwe. Und dann ein Emoji dahinter.
Ah, yes. Okay, wir haben eine Endlosschleife über die Datei. Das Problem ist, dass es immer, immer die gesamte Datei ist.
Also eigentlich müsste ich jetzt Read Line machen. Nee, da habe ich keinen Bock drauf. Das ist, das habe ich jetzt, jetzt hört es echt auf.
Guck mal, hier sind die Cobol Profis am Start.
Hier sind die Cobol Profis am Start. Zumindest, zumindest, wir, wir, wir tricksen jetzt einfach mal. Ich mache einfach alles weg.
Endlosschleife 0W aus der Datei. Oh, mit Emoji, Alter. Meine Güte, ey. Ich kriege Anfälle. Mit der Musik wird man richtig verrückt.
Oh, ich glaube, es ist gecrashed, Leute. Nee, doch nicht. Wie sieht eigentlich so der RAM-Verbrauch aus von dem Programm?
Also, wir haben zumindest schon mal 65, 50% CPU-Last. Ah, das ist, weil man T-Max, weil man T-Max nicht mitkommt. Okay.
Dann machen wir mal nach, machen wir das mal. Main. Wir schweißen einfach mal die Ausgabe weg. So.
Also, ein CPU-Kern, komplett dicht mit Cobol. Wer hätte das gedacht? 8700K. Ein Core-Dicht mit, jetzt, jetzt natürlich das Ganze noch Multiswadet.
Ein Multiswadet. Geht das überhaupt? Geht das überhaupt? Preparing Cobol-Programms für Multiswadet. Ach, du Scheiße.
Jetzt, jetzt, jetzt.
Ach, nee. Die starten einfach mehrere Cobol-Programme gleichzeitig. Ja, das ist ja Low-Brain-Multi-Threading. Einfach mehrere Programme gleichzeitig starten kann ich auch.
Ey, wisst ihr was geil ist, diese Seiten, ne? Diese Seiten sehen halt schon original aus, wie 1970. Ach, du Scheiße.
Simple example of Multithreading in Cobol. Simple. Man beachte das Wort Simple.
Ach, das ist das Simple. Das ist ja easy as fuck. Call Cobol-Thread-Yield. Ach, Moment. Die machen das über die Windows-RP. Ja, gut. Das zählt ja nicht.
Call Cobol-Thread-Create. Okay, jetzt wird's... Ach, du Scheiße. Die machen Cobol und da machen die Raw-Windows-RP noch drinne.
Oh, Paynes-Champ, Paynes-Champ. Also sprich, Cobol hat nichts eingebaut. Die machen... Die callen Windows-ARPs um Multithreading. Oh, eklig, eklig, eklig.
Yes or no or maybe. Excellent. Open Cobol-Multithreading. Also, es ist ja schon mal bezeichnet, wenn du nur bei den üblichen Verdächtigen sowas hier findest.
Go proactive with limitations in Cobol-Multis. Hä? Was möchtet ihr mir sagen? Das ist doch so ne typische Marketing-Aussage. So nach dem Motto, viel geiler mit Limitierungen oder wie oder was?
Jetzt mal ernsthaft. Was ist überhaupt die Existenzberechtigung von diesem Kakt noch? Was ist die Existenzberechtigung davon noch?
Denn die einzige Existenzberechtigung ist, weil es noch so viel Alterszeug gibt, was da drin programmiert ist.
Cobol-Workshop.de
Oh, die Seite sieht aber auch schon aus wie 1990. Oh, der Cobol-Workshop ist weg.
Modern Cobol Microservices.
Und was? Docker NPM Git? Reden wir hier von Cobol oder was ist hier los?
Microservices Cobol. Easy. Das sieht schon so mega hässlich. Moment, ist das wirklich... Ist das ein Web-Server in Cobol oder was ist das?
Moment, das geht? Moment, das geht? Man kann einfach so einen Web-Server starten in Cobol? Das glaube ich nicht. Das glaube ich erst, wenn ich es sehe. Das glaube ich nicht. Nee, natürlich nicht.
Da muss ich bestimmt das Free wegmachen, weil...
Nee, nee, das geht nicht so einfach. Oder muss man das irgendwie noch include? Cobol.
Tatsächlich, das geht?
Nee, nee, das gibt es da gar nicht. Source Code Package. Ah, da ist der Kram drin oder was?
MonkaS. Das ist ja so abartig alles, ey. Jaja, den Medium-Artikel hatten wir gerade schon auf.
Jetzt installe Knu-Cobol-Docker-Environment. Aha. Wir gucken uns einfach das Docker-File an, dann sehen wir, was der macht.
Exzellent. Auf GitHub gucken. Ich finde es interessant. Ich finde es sehr interessant.
Der hat da Gott und die Welt an Cobol-Modulen mit drinne wahrscheinlich. Guck mal. M4-Macros. Da kommst du dir echt vor wie 1970. Nee, nee, nee.
Nee, Leute, das reicht mir. Ich habe keinen Bock mehr. Ist genug. Genug, hallo. Reicht, Leute, es reicht. Ich kann nicht mehr. Ist genug.
Ich meine, wir haben es immerhin geschafft, eine Endlosschleife mit Emojis zu programmieren.
Nee, nee, ich sprinte auch keinen Weihnachtsbaum und auch keine sonstige Pyramiden und Bäume und alles. Nein, nein, nein.
Genug, Cobol, reicht echt. Das kann mir nicht mehr geben.
Hast du schon mal das Video gesehen, wo sich einer einen Scam-Call-Sender in Indien hackt und dann über die eigenen Überwachungskameras zuguckt? Nö. Aber es gibt ein paar solche Videos, wo sie Scammer verarschen.
Kid Boga auf Twitch ist da richtig poggers. Den gucke ich echt gern. Der hat jeden einzelnen Zuschauer verdient, der Typ. So gut musst du das erstmal auch spontan hinbekommen, wie der das macht.
Invert a binary tree in Cobol. Nee.
Das machen wir nicht. Ganz einfach. Ich bin begeistert über mein Cobol-Programm. Also Leute, ihr wisst, dass ihr jetzt alle in euren Lebenslauf reinschreiben könnt, Cobol, oder? Nachdem ihr das gesehen habt.
Es ist ja nicht erforderlich, dass ihr das richtig gut könnt. Einfach, ihr habt jetzt durch diesen Stream mehr Ahnung als 99,9999% der Weltbevölkerung von Cobol.
Nee, nee.
Twitch-Spam-Bot-Programm in Cobol, wenn schon. Und dann ist das nächste Problem. Wie macht man Web-Request? Da habe ich ja nichts dazu gefunden. Wie ruft man eigentlich Cobol-Externer-Programme auf?
Calling Sub-Programm in Cobol.
Call Sub-Programm-Name. Also kann ich jetzt sowas machen wie Call und dann LS oder so? Ah nee, Module. Nee, nee, nee. Ich will kein Module. Ich will einfach ein System.
Command.
Call-System-Using-Command-Line. What the...
Okay, das scheint zu funktionieren.
Okay, mal gucken, ob das funktioniert. Touch. Eins. Ha, guck mal. Easy. Okay, das war jetzt wirklich einfach.
Externer-Programme-Aufrufen in Cobol. Ja, musste wahrscheinlich auch, weil der Gramm ja nichts kann.
Call-System-Using dran, was man machen will. Jetzt natürlich die große Preisfrage. Wie kriege ich den Output von LSLA, ne? Die Fond ist Poggers. Ja, haben wir extra installiert für den Stream.
Call-System-Command-Get-Output.
No, you cannot have any output. Äh, okay.
Okay, über das C-Interface. Ihr habt sie doch nicht mehr alle. Ach so, ja doch. Leute, das würde funktionieren. Guckt mal, ich könnte, ich könnte das, ähm, ich könnte den Output in der Datei schreiben.
Also sowas wie, keine Ahnung, cacw.txt. Wobei, ne, eigentlich, wir nehmen einfach plug.txt, die haben wir ja schon. Und dann öffne ich die Datei. Guck, bam, und schon haben wir den Output von LS drinne.
Das ist aber richtig eklig, der Hack, oder? Aber schon können wir den Output von LS, aber das, ich glaube nicht, dass das so gedacht ist, ne?
Aber so kann man zumindest Sachen einlesen. Ist eigentlich richtig hängen geblieben, wenn du dir überlegst, du rufst ein externes Programm auf, dann schreibst du die Ausgabe von dem externen Programm.
Der CuteMod himself ist am Start. Exzellent. Ähm, und dann, und dann liest du das wieder ein. Alter, das ist ja total hängen geblieben. Und, und, naja.
Aber zumindest Endlosschleife funktioniert. Ich bin schon mal froh, dass wir es geschafft haben, Endlosschleife in Kobold zu fabrizieren.
Das ist, das ist fast so was ähnliches wie Comic Sans. Das ist, das ist Comic, Comic Mono.
So, und jetzt gucken wir nochmal, was das für eine CPU-Auslastung generiert. Unser BigBrain-Kobold-Einleseprogramm.
Ja, easy, ein CPU-Kern, komplett dicht. Easy. So, und jetzt das Ganze multithreaded. Aber fake multithreaded. Wir starten das einfach dreimal. Easy.
Bam. Leute, CPU-dicht.
Wer hätte es gedacht Ende 2020 mal die Hälfte der CPU ausgelastet mit einem Programm in Kobold.
Ist Kobold eigentlich wenigstens schnell? Ich meine, es ist, es ist absolut abartig darin zu programmieren. Es kann eigentlich auch mehr oder weniger nichts.
Zumindest Standard-Library-mäßig und Feature-mäßig jetzt eigentlich auch nicht so wirklich. Ist es wenigstens schnell?
Nein, es ist nicht. Ich meine, wir können, wir können das ja mal benchmarken.
Dann machen wir die Schleife einfach so. Also, okay, wir machen jetzt mal ein easy, ganz easy Programm. Also, wir lesen jetzt keine Dateien ein. Wir open auch kein File. Wir machen einfach mal eine Schleife. 10.000, 10.000 Mal.
Jetzt müssen wir noch adden. Krasse Kobold Benchmark kommt jetzt. Und jetzt adden wir eins zu WSCNT. Jetzt sollte das Ganze nur 10.000 Mal ausgehen.
Das ist doch nicht. Ah, doch.
Also, wir machen einfach eine Schleife, wo hochgezählt wird. Das ist das simpelste Sache, die wir machen können. Am Ende geben wir WSCount aus.
Okay, 100. Alter, Moment. Der braucht für 100? Ah, wisst ihr, warum das nicht geht? Das geht nicht, weil das hier zu klein ist, oder?
Das heißt, ich muss ja sagen, wie viele Stellen die Zahl haben darf. Also, sagen wir mal, keine Ahnung. 10 Stellen sollte ja ganz knapp reichen. Okay, easy.
Also, 1, 2, 3, 4, 5, 6. Also, machen wir mal eine Million. Ups. Machen wir mal eine Million Schleifen durchläufe. Captain Seeker, ja? Danke schön. Für den Sub, so sieht es aus.
Okay, perform. Okay, wir rufen den ganzen Kram jetzt eine Million mal auf. Oder gucken wir mal, wie lange das dauert.
Dann nehmen wir jetzt ein Benchmark-Programm für und gucken, wie gut das... Ich hab vergessen, wie hieß das denn?
Es gab ein richtig gutes Bash Benchmark. Hyperfine, genau. Hyperfine. Hab ich das überhaupt installiert? Exzellent.
Okay, also wir brauchen im Durchschnitt 90 Millisekunden. KC86, danke schön für den Sub. Wir brauchen 90 Millisekunden für 100 Schleifen durchläufe.
Äh, für eine Million Schleifen durchläufe. Er scheint mir jetzt persönlich ziemlich lang. Machen wir jetzt mal den Counter, wobei wir müssen den Kram am Ende ausgeben.
Okay. Also das Cobol-Programm braucht im Durchschnitt ungefähr 90 Millisekunden für eine Million. Was wird's, wenn's fertig ist?
Einfach ein bisschen Cobol rumbasteln, weil der Chat sich das gewünscht hat. Jetzt machen wir mal ein C-Sharp-Programm. Wir fangen gar nicht an mit Rust oder C oder sowas.
Wir fangen an mit C-Sharp-Programm zum Vergleich. Konsolenanwendung. Was genau das Gleiche macht. Was unser Cobol-Programm und dann vergleichen wir mal die Geschwindigkeit.
Also wir machen ja nichts anderes wie eine Million Durchläufe und am Ende das zusammenzählen lassen.
Ich versuch das mal wirklich auch so zu programmieren, wie es in Cobol ist. Also, wie programmier ich sowas in C-Sharp überhaupt nach? Ich muss ja Funktionsaufrufe machen, um das ähnlich nachzustellen.
Ok, ich versuch das mal genauso nachzubauen, wie es in Cobol ist. Also wir brauchen eine globale Variable, keine Ahnung, value, int, gleich 0.
Wir machen jetzt so. Ich meine, dass das fair ist, will ich zumindest ungefähr so das Gleiche machen. Static, add, so und dann sagen wir value++ und hier machen wir eine Schleife.
Für 10.000 Adds aufrufen. So und am Ende geben wir value aus. Gut. So, jetzt haben wir übrigens das gerade in 2 Sekunden gemacht, wo man bei den anderen 2-3 Stunden für gebraucht hat.
Ok, wo haben wir Console-App?.net,.net, run.
Hattest du beim Cobol Proc-, äh, ja, warte, ich hatte Optimierung.
Echt, soll ich mit 3-0 machen? Auch ok.
Ok, passt. Ausgabe ist die gleiche, oder? Main. Ah ne, meine Ausgabe ist nicht die gleiche, weil ich hier einmal mehr zählen muss.
Ah ja, ja, alles klar. Größer gleich ist es hier in dem Fall. Exzellent, ok. Also wir machen mehr oder weniger das gleiche in Cobol wie in C-Sharp.
Jetzt gucken wir mal wieder, was der Unterschied ist. Jetzt also.net, build. Wie läuft's? Total abartig, Alter. Total abartig.
Also was wir bis jetzt schon gemacht haben ist, wir haben eine Datei eingelesen und ausgegeben. Wir haben am Anfang irgendwelche globalen Variablen gemacht und hochgezählen Schleifen und Ifs und Ausgaben und sogar mal Konsole eingelesen.
Richtig eklig, richtig eklig. Und jetzt gucken wir gerade mal, wieso der Performance-Vergleich ist von Cobol. Also Cobol braucht für eine Million Schleifendurchläufe 90 Millisekunden, was mir ziemlich lang vorkommt.
.net, build. Wie ging das mit Release? Kannst du mir immer aus dem Kopf nicht merken. Hier..net, publish, release. Linux. Es war Linux 64. Nee, ich kann es mir immer nicht merken.
.net, self-contained, Linux. Also 2021 schreibe ich Cobol auf jeden Fall in meinen Lebenslauf rein, ja. Klar.
Was war es denn, Linux? Alter. Ja ja, zeig her, was haben wir denn? Hier. Linux x64 war es.
Okay. So, jetzt gucken wir mal, wie schnell das Ganze Linux ist. Proficient in Cobol. Klar, es muss rein. Cobol-Skills. Profi. Cobol-Skills auf professionellem Level.
Okay, kommt mal. Das C-Sharp-Ding ist ungefähr ein Drittel schneller als Cobol. Und das, obwohl der Vorteil von.net-Programmen nicht in der schnellen Startzeit liegt.
Wir starten das Programm irgendwie hundertmal und führen es aus und es ist schneller als Cobol. Man darf nicht vergessen, bei.net musste er erstmal die ganze.net-Runtime starten, bevor er überhaupt anfangen kann.
Also würde ich das jetzt in Rust oder in C machen, dann ist er wahrscheinlich in fünf Millisekunden fertig.
Wollen wir das nochmal in Rust machen? Ich habe ewig nichts mehr in Rust gemacht. Denkst du nicht, das liegt am Betriebssystem?
Weiß ich nicht. In dem Fall, guck mal, das Cobol-Ding, das Cobol-Ding braucht ja 90 Millisekunden, macht im Prinzip das Gleiche. Aber starten und sonst wie?
Wir könnten uns ja mal einen Assembler-Output von dem Cobol-Ding angucken. Was ist denn ein schöner, das machen wir jetzt mal.
Was ist denn ein schöner, easy-zu-benutzender Disassembler für Linux? Das ist so die Bereiche, wo ich nicht viel mache. Wegen dem Compiler, ja, das kann sein. Aber wir hatten Optimizations an.
Also das.NET-Programm können wir uns mal angucken. SharpLab ist das glaube ich, wo man sich anzeigen lassen kann, zumindest was IL rauskommt, oder?
So, das ist mein C-Sharp-Programm Disassembler. Alles klar. Sieht recht übersichtlich aus. Und da ist halt auch relativ viel wahrscheinlich noch für die.NET-Runtime und Geschiss dabei. Nicht so einfach, wie es starten und gut ist.
Object dump minus...oh. Echt? Geht das so? Ah exquisite.
Äh, jetzt dann eigentlich los. Jump. Wo ist meine Schleife? Hier, hä? Main. Ah ja, ja. Schau mal, gut zu wissen.
Okay, komm, wir machen das mal in Rust. Wir machen das Ganze jetzt mal in Rust. Bin mal nicht sicher, ob ich aktuell das Rust überhaupt installiert hab. Nee, hab ich nicht installiert. Machen das jetzt mal in Rust.
Ja, ich hab's mit Optimizations gemacht, ja. Okay, Rust. Ähm, ich muss aber erstmal Rust installieren. Rust. Rust. Hab ich Rust so installiert?
Moment, ich hab, ich hab, ich hab Rust schon installiert, oder?
Gebt mal die Version vom Rust-Compiler raus. Help. Das wär ja auch zu einfach. Ach nee, das ist aus Rust ab, das Ganze. Okay, wie, wie, wie hat man...
Wie hat man nochmal installiert? Ich, ist schon, ist schon eine Weile her, wo ich Rust gemacht hab. Ich glaub, ich hab gar nichts installiert. Rust ab und dann irgendwie Toolchain. Wir müssen erstmal Rust installieren.
Rust up, install, stable. Toolchain. Kann ich nicht einfach so Rust installieren? Rust. Scheiß drauf, sondern wir nehmen das aus dem Package Manager.
Echt einfach Rust up ausführen? Ich installier's jetzt einfach im Package Manager und gut ist. Das wird ja die halbwegs aktuellste Version sein hier. Rust 1148. Rust, was haben wir hier als... Ist 148 ist, dann ist es direkt die aktuelle.
Fünf. So, excellent. So, mal ein Rust-Programm. Auf geht's. Okay, auf geht's. Wie gesagt, es ist schon bestimmt zwei Jahre her, wo ich zuletzt mal was in Rust gemacht hab.
So, jetzt musst du irgendwie sagen Cargo, New oder sowas. Pack W. Ja, genau.
So, Mainer S, Code. Gut, ähm, diese Schriftart, Alter, das macht mich fertig. Hups, warum hab ich jetzt das Terminal verschoben? Diese Schriftart, ey. Cargo Run. Nee, wie ging das nochmal? Cargo Run?
Ja. Hello World. Okay, wir können Rust, wir können Rust-Programm aufführen. Okay, ich versuch das mal genauso eklig zu machen, dass ungefähr alle Software das gleiche macht. Wie gesagt, normalerweise ist das ja auch nicht Sinn und Zweck, wie man das in C Sharp macht, aber ich hab halt versucht, das so ähnlich zu machen, wie wir es in Kobold gemacht haben.
Okay, also in Rust. Wie macht man in Rust überhaupt globale Variablen? Geht das überhaupt? Let, war das nicht mit Let? Let, Mut? Oh Gott, mein Rust ist wirklich lange her. Ähm, value gleich Null. Ach so.
Okay, ja, passt. Und jetzt vor? Okay, ich weiß gar nicht mehr, wie man das schleife. Loop Rust. Das ist eingerustet. Oh.
Hört man so sagen. Mein Rust ist eingerustet. Loop. Count. Four and range ging das glaube ich in. Genau, genau, so ging das in Rust. Okay.
War das mit Klammern? Wie gesagt, Rust ist schon ganz lange her. Vor zwei Jahren also mal gemacht. Okay, also von Null bis hier hin und dann value.
Rust hatte glaube ich keinen plus plus, oder? Rust musste man, musste man glaube ich plus gleich eins machen. Ja.
Okay. Und dann musste man am Ende FMT. Oh fuck, wie print? Äh, ich hab schon wieder vergessen, wie bei den Rust überhaupt eine Ausgabe.
Ah, Rust print. Ah, genau, print. Print. Print. So. Und dann value. Das stimmt, was ich hier mache. Nee. Ah, ah, okay. Ihr seht, Rust habe ich schon eine ganze Weile immer gemacht.
Okay, wunderbar. Also ich würde sagen wir haben es. Ach so, das ist exclusive. Okay. Alles klar. Also jetzt haben wir, naja wir haben nicht wirklich das gleiche in Rust.
Wir müssen eigentlich, müssen wir sowas machen. Come on global variable Rust. Geht sowas? Ich will, dass er ungefähr das gleiche macht.
Static. Ah ja, excellent. Ich will, dass er ungefähr das gleiche macht, wie Cobol auch machen muss.
FM ads. Nee.
Come on, come on. Nee, okay.
Ich glaube globale Variablen gehen glaube ich nicht. Aber man kann Structs machen, oder? Ich habe ewig keinen. Aber das funktioniert doch überhaupt nicht.
Lazy Static. Warum brauche ich denn eine Library für? Okay, scheiß drauf. Wir wollen mit, dann machen wir was, machen wir was so. Funktioniert ja auch.
Dann hat, aber es ist es trotzdem schneller. So und Cargo, wie ging das Cargo Build? Muss man ja noch sagen Release oder sowas? Okay.
Ja, Armin, ich wollte, dass der ungefähr das gleiche macht, wie das Cobol Programm.
Was baumal in Target L. S. Was für ein Ding. Okay. Also der Vergleich von ordentlich optimiertem von was ordentlich optimiertem.
Der braucht eine halbe Millisekunde für das gleiche. Genau Objekte.
What the fuck? Da ist, ist da noch Debug Zeugs drinnen? Wie, wie macht man das komplett raus? Ich brauche Debug Zeugs, Debug Zeugs muss weg.
Da muss alles, alles weg, alles weg. Ich will alles weg. Ich will das kleinste Binary ever haben.
Cobol ja ja. Opt Level gleich drei. Exzellent. So machen wir das. Wo ist diese Datei noch mal hier?
So was hier. Ach stimmt, ja stimmt. Da macht seine Standard Lipp damit rein. Okay, das kann natürlich sein.
Aber es ist auf jeden Fall deutlich schneller. Kannst du mal fort dran probieren? Nein, ich will mich jetzt nicht noch mehr quälen.
Ja, da macht er irgendwelche Standard Lipp Geschichten rein. Siehst du ja auch hier. Zumindest. Zumindest. Also der Unterschied ist hart.
Guck mal. Rust braucht 0,5 Millisekunden dafür. Ja, ist ein bisschen kürzer, ne? Ist ein bisschen kürzer.
Wo ist meine Schleife? Ja.
Excellent.
Stimmt, der wird wahrscheinlich gar nicht zählen. Der wird wahrscheinlich gar nicht zählen. Der hat die Schleife einfach ausgerechnet, weil das immer das gleiche ist.
Das kann tatsächlich sein. Der ist ja nicht doof. Der ist ja nicht blöd, was das angeht.
Okay, dann machen wir was anderes. Release. Debug. Nee, was ist denn so ein Standard? Einfach so Build, ne? Unoptimized Build mit Debug Infos.
Dann nehmen wir das Unoptimized Build. Aber das Unoptimized Build ist immer noch dreimal schneller. Naja, zumindest als Fazit kann man sagen,
Cobol, es ist scheiße zu programmieren und es ist noch nicht mal schnell. Also es gibt keinen Grund, warum man irgendwas in Cobol machen will 2020.
Das wird Comic Sans. Nee, das ist nicht Comic Sans. Das ist Comic Mono.
Aber jetzt, wo wir die ganze Cobol-Geschichte gemacht haben, könnte ich eigentlich mal wieder in meine Settings gehen und einen normalen Font einstellen.
Wie soll ich das lassen? Kannste auch lassen, Chat. Was soll ich lieber, Hack-Font oder Comic?
Also normalerweise werde ich auf jeden Fall wieder auf Hack zurückstellen, weil ich mir das nicht geben kann mit Comic Sans. Das mache ich jetzt nur für den Streamer.
Boah Leute, nee, reicht mir. Genug Cobol-Kram. Bei uns gibt es jetzt auch demnächst Essen.
JetBrains Mono. Habe ich mir angeguckt, war nicht so meins. Es gibt ja jede Menge coole Fonts, aber ich bin bei Hack hängen geblieben. JetBrains Mono ist auch nicht so meins gewesen.
Weil ich glaube, dass JetBrains Mono und Hack auf dem gleichen Ursprungs-Font basiert. Hack-Font. Bester-Font. Hack-Font.
Hand-Grovels. Aha. Ah, die Musik. Cat Jam.
Ich will es nicht mal sehen, ey. Das Cobol-Zeug geht weg.
Was sagt denn Wishill Studio Code, wenn ich nach Cobol-Extensions suche?
Cobol. Resh Cobol. Ja, mache ich doch so auch schon. Oh, das ist Next Level. Soll das die besondere Männlichkeit von Cobol-Programmierern demonstrieren oder was?
Das Icon. Das Oberhab ich vorhin installiert, weil es einfach die meisten Downloads hatte.
Guck mal, hier hat man besseres IntelliSense.
Cobol-Debugger.
Moment, ich kann mein Cobol-Code jetzt auch noch debuggen?
Okay, das müssen wir jetzt noch ausprobieren. Will man das? Ja, das machen wir jetzt easy.
Kann ich jetzt debuggen?
Wahrscheinlich muss ich jetzt einfach nochmal neu starten, dass es funktioniert.
Was? Was willst du von mir?
Ja? Und weiter?
So, ich will jetzt Cobol-Debuggen, gibs mir. Auf!
Wait a minute..NET Core-Debugger? Razor Language Server?
Cobol-Debugger. Und jetzt? Wie buggt das jetzt?
Ist jetzt auf dem Breakpoint oder nicht?
Okay Leute, wisst ihr was? Wisst ihr was?
Ich hätte einen Snapshot von meinem System machen sollen. Ich will alles wieder löschen, was mit Cobol zu tun hat.
Uninstall, uninstall. Bäh! Weg!
Exzellent. Alles weg.
Open Cobol. Nicht Open Core, was auch immer das ist. Cobol. Wie hieß das? Knu-Cobol. Weg.
Exzellent.
Ah, das ist nur 2,8 MB. Kein Wunder, dass da nichts dabei ist.
Alles weg.
Alles wegmachen. Okay. Und Rebooten.
Ich hätte einen Snapshot machen sollen.
So, Leute bei uns gibt es gleich Mittagessen.
Vielleicht stream ich eine Runde noch Venice Unleashed danach. Zeig mal her.
Was gibt es denn ehrlich gesagt? Keine Ahnung.
Wahrscheinlich Rouladen oder sowas gibt es normalerweise Weihnachten-Servers.
Nicht so viel los gerade.
100! Oh, close.
Update ready. Installieren wir Update.
So.
Knife and Defib only, alles klar.
Es gibt kein... Prop Hunt. Prop Hunt auf Siebertower. Exzellent.
Aber die Pings. Was ist mit den Pings los, Alter?
Da können wir nicht spielen heute. Kein...
Worauf läuft das denn, bitteschön?
Das ist nicht das Original-Battlelog, ja, ich weiß. Das ist ein Mod, Battlefield 3 Mod.
Okay, jetzt ist der Ping 23. Was auch immer.
Na gut.
So Leute, ich gehe jetzt einmal Mittagessen. Seht ihr der Blaufeld?
Findet ihr nicht auch, wie ungewöhnlich das Game jetzt auf einmal aussieht? Das sieht so gut aus.
Das sah ja ursprünglich auch schon gut aus.
Aber ohne den Blaufilter sieht das richtig modern aus.
Schießt da von hinten jemand auf mich?
Pantsman. Hat man normalerweise hier einen Panzer auf Metro? Nee, oder? Oder L.A.V. hat man da?
Ja, es sieht realer aus. Es sieht halt nicht so...
Nicht so Battlefield 3 aus. Sieht aus wie ein anderes Game, ja.
Aber es ist Battlefield 3. Du kannst mich mitfahren lassen, Alter.
Lass mich mitfahren.
Wenn ich's unleashed, oh.
Na geil.
Gut Leute, ich gehe jetzt essen.
Was ist denn, wenn ich's unleashed besser?
Aktuell halt noch wenig. Also es gibt 120 Tick-Server und sowas, aber...
Da brauchst du halt auch ein paar coole Mods.
Und kein Blaufilter. Suppression kann man auch ausschalten, je nachdem.
Also Leute, wir sehen uns bis denn.
Hapa hapa. See you.
Besser Desktop.
