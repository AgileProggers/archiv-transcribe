WEBVTT

00:00.000 --> 00:06.560
Mal alles starten

00:31.000 --> 00:36.000
So, ich habe nicht so viel Zeit, ungefähr ein bisschen über eine Stunde.

00:37.000 --> 00:39.000
Müssen wir mal schauen.

00:49.000 --> 00:56.000
Ha, das ist ja witzig. Ich habe genau jetzt eine Einladung auf der Arbeit bekommen.

00:56.000 --> 00:59.000
Das passt ja mal wieder richtig gut zum Thema.

01:00.000 --> 01:05.000
Ich habe jetzt gerade eine Einladung bekommen. Auf der Arbeit aktuelle Lage-Log von Jay.

01:08.000 --> 01:10.000
Lustig, passt ja wunderbar.

01:11.000 --> 01:13.000
Ich kann es nicht, ich muss streamen.

01:14.000 --> 01:16.000
Außerdem habe ich Urlaub.

01:19.000 --> 01:22.000
Das ist aber gutes Timing oder? Richtig gutes Timing.

01:22.000 --> 01:27.000
Ich male euch das mal kurz auf, was das eigentliche Problem ist.

01:32.000 --> 01:34.000
Draw IO

01:37.000 --> 01:43.000
Das ist aber lustig, dass es gerade jetzt eine Einladung kommt zu dem gleichen Thema, wo ich Streams anmache.

01:43.000 --> 01:53.000
Also ich habe gerade vor, weil der Stream noch nicht an war, ich habe gerade eine Einladung erhalten.

01:58.000 --> 02:00.000
Was zum Teufel, warum bin ich denn mit eingeladen?

02:00.000 --> 02:14.000
Okay, keine Ahnung. Wie ist es noch, dass ich im Urlaub bin?

02:16.000 --> 02:20.000
Ja, aber witzig, ich habe gerade eine Einladung bekommen, aktuelle Lage-Log von Jay.

02:21.000 --> 02:25.000
Auf der Arbeit, keck weh, Alter. Passt ja wunderbar.

02:25.000 --> 02:34.000
Na gut, also was ich mir gedacht habe ist, ich habe ja nicht so Plan von Java.

02:35.000 --> 02:42.000
Also Java mäßig habe ich eigentlich überhaupt keine Ahnung. Java ist für mich so MonkaS-Gebiet.

02:44.000 --> 02:50.000
Und ich habe jetzt gedacht, ich könnte mal Folgendes probieren im Stream.

02:50.000 --> 02:55.000
Das heißt, ich habe keine Ahnung, ob das jetzt hinhaut. Ich habe auch nur ungefähr bis kurz nach zwölf Zeit.

02:56.000 --> 02:59.000
Wir versuchen mal, ich installiere gerade mal ein bisschen Java-Zeug.

03:00.000 --> 03:02.000
Leute, ich habe noch nie mit Java was gemacht, ich habe keine Ahnung.

03:03.000 --> 03:09.000
Aber was ich mal probieren will ist, eine Minimal-Anwendung zu basteln, da updaten wir erst mal den Kram.

03:10.000 --> 03:14.000
Eine Minimal-Anwendung zu basteln, wo man einfach Log4j mit ausnutzen kann.

03:15.000 --> 03:17.000
Beziehungsweise demonstrieren kann, wie easy das ist.

03:17.000 --> 03:21.000
Von der Idee her ist das eigentlich, ich mache mal kurz die Musik ein bisschen leiser.

03:22.000 --> 03:26.000
Von der Idee her ist das eigentlich ziemlich easy.

03:27.000 --> 03:32.000
Soweit ich das verstanden habe. Was installiert man dafür überhaupt? Java Community Edition?

03:33.000 --> 03:37.000
Kann man da mit Kotlin programmieren?

03:37.000 --> 03:45.000
Kann man IntelliJ Community, kann man Kotlin? Ich will Kotlin, habe ich noch nie gemacht.

03:46.000 --> 03:50.000
Okay, install. Also, so wie ich das verstanden habe, funktioniert das folgendermaßen.

03:51.000 --> 03:55.000
Es ist eigentlich total easy. Man hat eine Webseite, zum Beispiel.

03:56.000 --> 03:58.000
Muss nicht zwangsläufig eine Webseite sein, eine Webseite bietet sich an.

03:59.000 --> 04:01.000
Also man hat eine Webseite, nee.

04:01.000 --> 04:09.000
Haben die nicht irgendwie so einen Frame für eine Webseite oder so, wo man da schön was reinziehen kann?

04:10.000 --> 04:12.000
Egal, so, das ist die Webseite.

04:15.000 --> 04:17.000
Wie macht man hier Text?

04:19.000 --> 04:20.000
Text.

04:21.000 --> 04:23.000
Ah, Poggers Text, so.

04:23.000 --> 04:29.000
Title, ich benutze das zu sehr. So, das hier ist eine Webseite.

04:30.000 --> 04:36.000
tagw.io ist das. Keine Ahnung, ob es das gibt. Ich will es jetzt auch nicht aufmachen.

04:37.000 --> 04:44.000
So, und da gibt es beispielsweise ein Feld drinnen, Username. Username.

04:45.000 --> 04:49.000
Und sagen wir Passwort oder so, ist eigentlich vollkommen egal.

04:49.000 --> 04:51.000
Vollkommen egal.

04:53.000 --> 04:59.000
So, und dann hast du hier deinen Server, der die Webseite ausliefert.

05:00.000 --> 05:02.000
Ah, sagen wir mal hier irgendwie Server.

05:04.000 --> 05:08.000
So, dann brauchen wir noch eine Festplatte, so was auch immer.

05:09.000 --> 05:12.000
Ah, irgendwie eine Festplatte im Server und ein Log File.

05:14.000 --> 05:16.000
Ich versuchte es mal irgendwie aufzumalen.

05:16.000 --> 05:19.000
So, Log File.

05:22.000 --> 05:25.000
So, und wie macht man hier Pfeile drin?

05:27.000 --> 05:28.000
Keine Ahnung.

05:29.000 --> 05:36.000
So, zumindest gibt es jetzt die Möglichkeit, wenn der Server Sachen versucht zu loggen,

05:37.000 --> 05:44.000
zum Beispiel weil Username, Passwort falsch ist, dass der dann sich zu einem anderen Server verbindet,

05:44.000 --> 05:46.000
und Dinger nachlädt.

05:48.000 --> 05:50.000
Die Seite guckst du mir gleich mal an.

05:51.000 --> 05:55.000
So, und zum Beispiel würde das bedeuten, wenn ich, nehmen wir mal hier das Beispiel.

05:56.000 --> 05:58.000
What the fuck. Alter Heise, come on.

05:59.000 --> 06:04.000
Nehmen wir mal das Beispiel von Heise, was man da für nennt. Hier, das da zum Beispiel.

06:06.000 --> 06:12.000
So, und wenn ich jetzt als Username zum Beispiel sowas hier eingebe, Username ist Max,

06:12.000 --> 06:22.000
das da, oder meinServer.de.

06:23.000 --> 06:29.000
So, also wenn ich das hier als mein Username eingebe, also wenn ich das richtig verstanden habe,

06:30.000 --> 06:38.000
dann passiert folgendes. Es geht nen Request an den Server, der sich versucht einzuloggen.

06:38.000 --> 06:46.000
So, login. Der Server guckt nach und sagt falscher Username, Passwort.

06:46.000 --> 07:08.000
Hier haben wir Passwort. Drehen wir das mal um. Hallo. Dieses Tool. Was ist das? Hä?

07:08.000 --> 07:19.000
Was haben die sich denn da ausgedacht? Egal. Falsches Login oder irgendwie falscher User Passwort

07:20.000 --> 07:28.000
kriegst du dann zurück, wird auf der Website angezeigt, aber der Server loggt in sein Textfile-Lokal.

07:28.000 --> 07:52.000
Der Server loggt in sein Textfile-Lokal, log, äh, keine Ahnung, ähm, User, äh, was weiß ich,

07:52.000 --> 07:59.000
login, fehlgeschlagen. So, in der Richtung. Versucht, das versucht er zu loggen.

08:00.000 --> 08:09.000
Und das Problem ist jetzt, dass die Library, also in dem Fall ist es Log4j, versucht dieses Ding hier zu,

08:10.000 --> 08:19.000
wie nennt man das, interpolate, ne, äh, wie heißt denn das, ja doch String Interpolation müsste das

08:19.000 --> 08:26.000
wahrscheinlich in Java auch heißen. Also, die versuchen quasi das hier, der versucht quasi sich das

08:27.000 --> 08:32.000
zu interpretieren, was da drin steht, was quasi mal ursprünglich in meinem Username war.

08:33.000 --> 08:44.000
Und daraufhin kommt dann Log4j auf die glorreiche Idee, da kommt dann Log4j auf die glorreiche Idee zu sagen,

08:44.000 --> 08:50.000
ah gut, wir müssen hier String Interpolation machen, und dann führt er das Ganze aus,

08:51.000 --> 08:56.000
und dabei passiert dann folgendes, der Server macht auf einmal ne Verbindung,

08:57.000 --> 09:06.000
1ks, was ist das, lul, der Server macht auf einmal ne Verbindung zu, ganz woanders hin,

09:06.000 --> 09:17.000
und zwar verbindet er sich dann auf einmal zu, das ist hier keggw.io,

09:18.000 --> 09:28.000
und er verbindet sich dann auf einmal zu mindserver.de und macht nen Request, wahrscheinlich weiß ich nicht,

09:28.000 --> 09:35.000
ich weiß gar nicht ob das, ach ne, das ist LDAP, ok, er macht einen Request hier auf diese Url,

09:36.000 --> 09:45.000
so, und unter dieser Url kann dann irgendwie, hat das Ding irgendwie so ein Kryptosymbol, oder Key, oder Blockchain,

09:46.000 --> 09:53.000
naja, wie, warum ist das so, warum ist das so All Squad kein Blockchain Symbol, ah doch, natürlich, Blockchain muss sein, so.

09:53.000 --> 10:02.000
Und hier liefert das dann irgendwie, keine Ahnung, Krypto Miner Code aus, über Miner Code aus,

10:03.000 --> 10:10.000
zurück an den Server, der das dann ausführt, so, so hab ich das verstanden.

10:11.000 --> 10:18.000
Moin Leute, danke für die Subs Leute, ich hab jetzt gar nicht reingeguckt, ich hab nicht viel Zeit,

10:18.000 --> 10:24.000
ich hab bloß bis kurz nach 12 Zeit, ähm, wer ist denn hier am Start,

10:25.000 --> 10:32.000
denniske, danke schön, huge sub, arci1994, danke für den Sub, der Markus ist auch am Start,

10:33.000 --> 10:42.000
impfnachwirkung daheim, oh, monka corona hier, selfmade ice auch am Start, 30field auch da,

10:42.000 --> 10:47.000
pork, akai, dankeschön, ah ne, das war gestern schon, lul.

10:48.000 --> 10:57.000
So, also, so versteh ich das Problem, warum, also was, dies was ich net so ganz verstehe ist,

10:58.000 --> 11:04.000
warum, ach der Chat verdeckt, achso, der Chat ist irgendwie ein Krypto, Krypto, Krypto Miner, so,

11:04.000 --> 11:11.000
jetzt sieht man's glaub ich im Chat, so, was ich noch nicht so ganz verstehe ist, warum ist Krypto Miner auf einmal blau hier,

11:12.000 --> 11:18.000
keine Ahnung, immer save mir das, download, bam, Wine Browser, genau im Wine Browser will ich das öffnen, was sonst,

11:19.000 --> 11:28.000
so, was ich nicht so ganz kapiere ist, ähm, warum ist das überhaupt ein Ding, ja, also, äh,

11:28.000 --> 11:36.000
also, dass der hier String Interpolation macht für irgendwelche, was weiß ich, internen Variablen,

11:37.000 --> 11:45.000
könnte ich ja noch verstehen, sollte natürlich auch nicht mit externem Input, aber, das könne ich noch irgendwie nachvollziehen,

11:46.000 --> 11:56.000
warum der da irgendwelche Elder abfragen, ich hab keine Ahnung, ob das Absicht ist oder ob das ein Bug ist,

11:56.000 --> 12:03.000
also, mir erschließt sich der Sinn auch nicht so ganz, wozu man das braucht,

12:04.000 --> 12:10.000
also, man könnte, man könnte, man kann darüber halt auf jeden Fall Java Zeugs nachladen,

12:11.000 --> 12:14.000
wobei ich nicht weiß, was das hier genau macht, wie gesagt, ich hab keinen Plan von Java,

12:15.000 --> 12:22.000
ich weiß nicht, ob das Source Code lädt, was man dann irgendwie noch den Server dazu überreden muss, das auszuführen,

12:22.000 --> 12:27.000
oder ob das fertige, kompilierte Java Klassen sind, keine Ahnung,

12:28.000 --> 12:36.000
also, dafür kenne ich mich zu wenig, wenig mit, vielleicht weiß das einer von euch, dafür kenne ich mich zu wenig mit Java Zeug aus,

12:37.000 --> 12:42.000
ich hab absolut keinen Plan, was Java angeht, ja, so, installiert, ich hab noch nicht mal,

12:43.000 --> 12:50.000
ich hab, glaub ich, das letzte Mal, dass ich Java was installiert hab, war noch, war noch Eclipse 2007 oder so,

12:50.000 --> 12:55.000
du kannst eine Java Klasse als Base64 mitgeben, wirklich,

13:00.000 --> 13:07.000
nice, das probieren wir mal aus, also, was wir machen müssen, um das nachzustellen, ist eigentlich relativ simpel,

13:08.000 --> 13:18.000
ich muss rausbekommen, wie ich in Java eine Webseite ausliefer, statisches HTML, mit einem Postrequest, den ich auf dem Server annehme,

13:18.000 --> 13:24.000
und ich muss in irgendeiner Art und Weise Log4j hinzufügen, und wie Dependency Management in Java funktioniert,

13:25.000 --> 13:29.000
hab ich auch keine Ahnung, aber ich bin zuversichtlich, dass wir das vielleicht innerhalb von einer Stunde rauskriegen,

13:30.000 --> 13:36.000
kannst du mit Spring, ich hab keinen Plan, das sind komplett böhmische Dörfer für mich, was Java angeht,

13:37.000 --> 13:41.000
ich installiere erstmal was, und ich hoffe, dass da ein gutes Template dafür dabei ist,

13:41.000 --> 13:50.000
ach ja, reicht das eigentlich, wenn man IntelliJ installiert, um Kotlin zu programmieren, oder brauche ich noch irgendwelche Kotlin Packages,

13:51.000 --> 13:57.000
oh, ich brauche anscheinend noch Kotlin Zeug, ja, hier, bam,

13:58.000 --> 14:04.000
hallo, aus irgendwelchen Gründen durfte ich nicht eins drücken,

14:04.000 --> 14:11.000
schau auf Starts, Spring, oh, jetzt muss ich noch Java Zeugen ziehen, ich hab hier gar keinen Java,

14:12.000 --> 14:20.000
Leute, war das nicht so, dass es mit Java 11 oder JDK 11 nimmer funktioniert hat, oder ging es mit allem,

14:21.000 --> 14:29.000
irgendwas war da doch, ich glaube mit 11 hat es nicht mehr, oder mit 8 schon nicht mehr,

14:29.000 --> 14:42.000
wobei doch, die eigentliche Sicherheitslücke hat funktioniert, ich glaube, das Nachladen hat nicht funktioniert,

14:43.000 --> 14:48.000
egal, installieren wir mal, ich hab keine Ahnung davon, ich mach mal eure Links auf,

14:49.000 --> 14:53.000
der Chat weiß das wahrscheinlich in dem Fall wirklich besser als ich, weil ich keinen Plan von Java Zeug hab,

14:53.000 --> 15:00.000
so, wir haben einmal das da, was die Leute gepostet haben, dann haben wir den Cloudflare Blockpost,

15:01.000 --> 15:05.000
und dann haben wir die Spring Startzeit, aber ich muss doch nicht irgendwie ein extra Spring, Blah, Framework,

15:06.000 --> 15:08.000
was auch immer installieren für einen Web Server, oder?

15:09.000 --> 15:14.000
Ich mein, einen Web Server sollte ich doch eigentlich mit eingebautem Java Zeug in drei Zeilen irgendwie hinwursten können,

15:15.000 --> 15:21.000
also kein Plan, gucken wir mal, hab ich noch nie gemacht, aber so ungefähr muss das aussehen,

15:21.000 --> 15:28.000
so, und wenn das stimmt, was der Chat gesagt hat, ich glaub euch das sogar mal, jetzt, weil der Chat ist ja

15:29.000 --> 15:36.000
feifett, und wir wissen ja, für jeden Prime Sub ein IQ Punkt für alle dabei, wenn man sowas hier sogar mit

15:36.000 --> 15:52.000
Base64 Java Class antworten kann, wär natürlich noch mehr pale, ja, lull,

15:52.000 --> 16:09.000
so, also, was soll ich mir jetzt angucken, Chat? Inside Log4j, ach so, das geht nur mit Version 2,

16:10.000 --> 16:16.000
aber das ist trügerisch, das wirkt so, als wärs was Neues, Log4j 2 gibt's irgendwie auch schon seit 10 Jahren oder so,

16:16.000 --> 16:22.000
hab ich gelesen, oder umgedreht, Log4j 1 ist glaube ich seit irgendwie 8 Jahren oder so, End of Life,

16:23.000 --> 16:31.000
also eigentlich ist Log4j 2 das Ding, was man hat, ja, das hab ich heute Morgen auch gelesen, dass es in beiden Versionen geht,

16:32.000 --> 16:37.000
aber es muss wohl ein bisschen unterschiedlich sein, und die ursprüngliche Sache muss wohl für Log4j 2 sein,

16:37.000 --> 16:48.000
Leute, Flashbang, wir lassen das mal aus, also, gehen wir da mal die ganze Sache schnell durch, ach ja, das hab ich auch,

16:49.000 --> 16:58.000
dass es ähnlich serious ist wie Heartbleed und Shellshock, was lustig ist, ich hab zu beiden Videos was gemacht,

16:59.000 --> 17:05.000
ich hab damals was zu Heartbleed gemacht, und ich hab damals auch was zu Shellshock gemacht,

17:05.000 --> 17:14.000
nicht wissend zur damaligen Zeit, dass das Jahre später auch immer noch eines der schlimmsten Dinger ist,

17:15.000 --> 17:23.000
mir war zwar damals klar, dass das doch schon krasse Auswirkungen hat, aber mir war nicht klar, dass das auch Jahre später

17:23.000 --> 17:34.000
immer noch quasi als eine der Aushängeschilder für negative Dinger benutzt wird.

17:35.000 --> 17:40.000
So, gucken wir uns erstmal an, ob hier irgendwas Interessantes noch drinsteht, also, wir müssen auf jeden Fall gucken,

17:41.000 --> 17:45.000
dass wir ein Log4j installiert bekommen zwischen Version 2.0 Beta und 2.0, gut, wir nehmen wir einfach die,

17:45.000 --> 17:54.000
also wir dürfen nicht die neueste installieren, und ergeblich haben das hier irgendwelche Minecraft-Kinder entdeckt,

17:55.000 --> 18:03.000
und was ich dann gelesen hab, das stimmt wohl doch nicht, es waren wohl irgendwelche Leute, die es vorher schon gemeldet haben,

18:04.000 --> 18:11.000
aber so richtig populär wurde das erst durch diese Minecraft-Geschichte, was auch immer,

18:11.000 --> 18:19.000
wie gesagt, ich hab da bin da bei dieser Java-Geschichte nicht so drin, also, wir wollen, nee, upgraden wollen wir nicht.

18:24.000 --> 18:28.000
Ah, okay, man kann diese Lookups ausschalten, das ist auch schon mal ganz, ganz spannend.

18:29.000 --> 18:36.000
Hier, zeig mal her, moin Max und chat mal eine Frage, die gerade ab und gar nichts ins Thema passt, sorry.

18:36.000 --> 18:44.000
Mir ist ein Lötkolben in die Finger, au, und ich hatte Lust damit zu starten, ach so, jetzt verstehe ich das,

18:45.000 --> 18:50.000
ich dachte du hast dich verbrannt, du meinst, dass du hast ein Lötkolben jetzt,

18:51.000 --> 18:55.000
weil mir ist ein Lötkolben in die Finger gefallen, das kann man auch wortwörtlich nehmen,

18:56.000 --> 19:04.000
die rutscht das Ding irgendwie aus der Hand und fällt auf die andere Hand, das tut halt weh, das ist heiß, so, 380 Grad heiß.

19:04.000 --> 19:10.000
Gibt es irgendwelche coolen Projekte oder Starter-Kits, wenn ich Duck Duck Horn schmeiße, dann kommt nicht viel dabei raus,

19:11.000 --> 19:13.000
ja gut, das ist immer die Sache, je nachdem, was du vorhast.

19:17.000 --> 19:23.000
Ein Timer für die Küche, gut, ein Timer für die Küche ist ziemlich simpel zu bauen,

19:24.000 --> 19:32.000
du brauchst einen Controller, einen Display und einen Buzzer, oder nee, wie heißt das so, irgendwas, was Geräusche machen kann.

19:32.000 --> 19:43.000
Einen so kleinen Speaker, also da musst du gar nicht so viel löten, also einen Timer für die Küche könntest du relativ einfach machen,

19:44.000 --> 19:51.000
wenn du ein Board haben willst, wo alles dabei ist, zum Beispiel mit dem hier, da hast du nämlich ein Board,

19:52.000 --> 19:56.000
wenn du noch einen 3D-Drucker hast, kannst du dir sogar ein cooles Gehäuse ausdrucken, ansonsten nimmst du ihn fertig,

19:56.000 --> 20:04.000
da hast du ein Board mit einem Farb-Display on Board, 1,14 Inch, also Zoll, TFT-Display,

20:05.000 --> 20:11.000
und du hast sogar noch zwei Buttons zum Timer starten und stoppen, da hast du alles on Board,

20:12.000 --> 20:19.000
das heißt, du bräuchtest eigentlich nur die GPIOs dranlöten, also da kannst du dir dann so Pinheader dran machen,

20:19.000 --> 20:25.000
und daran würdest du dann halt einen Buzzer anschließen oder irgendeinen Speaker, irgendwas, was Krach machen kann,

20:26.000 --> 20:30.000
und dann müsstest du halt die Logik für einen Wecker oder für einen Timer, zum Beispiel, programmieren.

20:31.000 --> 20:38.000
Timer-Logik ist ziemlich simpel, das wäre die einfachste Sache erstmal, wo du ein bisschen löten musst, aber nicht so viel.

20:38.000 --> 20:47.000
So, aber wir müssen uns ein bisschen beeilen, wir müssen Java-Stalls machen,

20:48.000 --> 20:55.000
noch ganz kurz, irgendjemand hat eben was anderes gefragt, das kann ich mir vorstellen,

20:56.000 --> 21:03.000
weiß ich noch nicht, ich habe heute Morgen mal Algorithm und Verstehen angeschrieben auf Twitter,

21:03.000 --> 21:07.000
weil wir wollten immer wieder ein Video zusammen machen, wir könnten da theoretisch eins zu aufnehmen.

21:08.000 --> 21:14.000
Ach ja, was man jetzt hier an der Stelle auch nochmal sagen muss, bei meinem Bildchen, was ich gemalt habe zu dieser Sicherheitslücke,

21:15.000 --> 21:25.000
also, was an der Stelle schonmal von riesen Vorteil ist, wenn man in irgendeiner Art und Weise hier noch was dazwischen hat,

21:25.000 --> 21:35.000
also ne, was hier dazwischen ist blöd, also hier zwischen Server und Internet, also das hier ist ja auch Internet,

21:36.000 --> 21:46.000
weil wenn man zum Beispiel Firewall-Regeln hätte für outgoing traffic, dann könnte man zum Beispiel sowas hier vermieten,

21:47.000 --> 21:53.000
ich weiß nicht auf was das basiert, ob da irgendwie HTTP drunter ist oder ob das irgendwie nacktes TCP ist oder sonst was,

21:53.000 --> 22:01.000
aber ich bin mir relativ sicher, dass eine halbwegs schlaue Firewall, ausgehende Firewall-Regeln haben könnte,

22:02.000 --> 22:13.000
die das hier verbieten bzw. die nur HTTP oder so erlauben, oder vielleicht gar nichts ausgehend, was nicht als Antwort auf eine Anfrage ist,

22:14.000 --> 22:19.000
also hätte man hier ordentliche Firewall-Regeln drauf auf CACW.io, by the way ich weiß nicht ob es das gibt,

22:19.000 --> 22:26.000
diese Uhr, dann würde das hier nicht funktionieren, also das ist tatsächlich mal eine Sicherheitslücke,

22:27.000 --> 22:34.000
wo Firewall-Regeln, obwohl der Server selbst erreichbar sein muss, was bringen, normalerweise hast du ja verloren,

22:35.000 --> 22:41.000
weil normalerweise ist es so, du kannst hier keine Firewall dazwischen stellen, die alles dicht macht, weil du willst ja, dass deine User von außen drauf kommen,

22:41.000 --> 22:49.000
also da hast du verloren, also normalerweise kannst du dich für sowas mit Firewall-Regeln nicht schützen, aber du kannst dich zwar nicht davor schützen,

22:50.000 --> 22:56.000
dass dir jemand hier Sachen injectet auf deinem Server, aber du kannst dich mit einer Firewall-Regeln davor schützen,

22:57.000 --> 23:03.000
mit einer ordentlichen outgoing Firewall-Regeln davor schützen, dass es schlimm wird, der kann hier sein Zeug injecten,

23:03.000 --> 23:11.000
und der Server würde sich dann auch versuchen hier zu mineserver.de zu verbinden, by the way mineserver.de ist das nicht 1&1 oder so,

23:12.000 --> 23:27.000
ich glaube sogar das ist, Moment, das ist nicht sogar 1&1, ne, ok, gibt es CACW.io, ich mache das aber nicht auf, wer weiß wo wir da rauskommen,

23:27.000 --> 23:40.000
so, und das wird es dann tatsächlich verhindern, aber Java Zeug ist installiert, Bäm, primäre Leute, ich habe, oh was ist das,

23:41.000 --> 23:51.000
oh je, ich muss updaten, kann das sein, oh je, na super, da habe ich jetzt ja Bock drauf nochmal System Updates zu machen,

23:51.000 --> 24:06.000
CACW.io ist NFT Seite, ok, CACW.services, da nehme ich meine Domain, CACW.services, die gehört mir, dank eines Big Brain Mods,

24:06.000 --> 24:28.000
ok, aber CACW.services ist von mir, da nehmen wir die jetzt als Beispiel,

24:28.000 --> 24:42.000
sehr schönes Bild, Pongas, so, ja es ist dumm, jetzt muss ich erstmal System Updaten machen, aber das geht relativ schnell,

24:42.000 --> 24:56.000
starten wir den Krammer, ich habe das noch nie offen gehabt, kein Schirmer wie das Funst, Confirm, jawoll, ich Confirm alles, oh stoppelt, gestartet, ok, primäre,

24:56.000 --> 25:14.000
primäre, mein erstes Java Projekt, new project, Kotlin, gib ihm, ah, ok, ich warte erstmal, bis der den Kram installiert hat, bevor ich irgendwas mache,

25:14.000 --> 25:29.000
geht ja, geht ja zackig, jetzt Skraja, ich meine, irgendeine minimale Web API in Java, guck mal mal, Java Minimal Web API,

25:30.000 --> 25:40.000
da muss es doch irgendwas einseileriges geben, so in Richtung Express oder sowas, oder ich meine, wie ich es mit ASP.NET machen würde,

25:40.000 --> 25:48.000
wüsste ich in 5 Minuten wäre das fertig, aber was ist denn das, Java Lin, ich brauche einfach nur irgendwas, was ein Postrequest annimmt,

25:49.000 --> 25:58.000
guck mal, das ist anscheinend beliebt, am besten erstellst du ein neues Gradle Projekt, Chat, das mache ich, genau das mache ich,

25:59.000 --> 26:06.000
ich habe keine Ahnung was das ist, aber das mache ich, ich brauche irgendwas mit halbwegs brauchbarem Dependency Management,

26:06.000 --> 26:15.000
dass ich mir die alte Log4j Version installieren kann, und dann muss ich gucken, wie ich die statische Webseite ausliefer und Postrequest annehme,

26:16.000 --> 26:27.000
das kann ja auch in Java nicht so schwer sein, ach ja, irgendjemand hat Beispielcode gepostet, oder?

26:27.000 --> 26:35.000
Warte mal, wer hat eben nochmal den Beispielcode gepostet, war das das hier?

26:44.000 --> 26:52.000
Ja, das ist hier, hier ist der Beispielcode, Example, Example, hier, ach guck mal, easy, da ist doch schon sowas,

26:52.000 --> 26:57.000
ja, das ist doch noch besser, da muss ich ja gar nichts selbst basteln, lull.

27:02.000 --> 27:07.000
Ok, ich weiß noch nicht mal, wer das überhaupt aufruft in Java, was ist das hier?

27:08.000 --> 27:19.000
Static Logger, Log Manager, Get Logger, wo ist der Logger, Factory Manager, Singleton, Pattern Observer?

27:19.000 --> 27:23.000
Pattern Observer, das ist ja viel zu lesbar.

27:36.000 --> 27:42.000
Wie startet man das, das einfach rein Copy Pasten wird es doch nicht sein, oder?

27:42.000 --> 27:48.000
Ah, User Agent Header, verstehe, verstehe.

27:54.000 --> 28:00.000
Das Wort kann ich immer nicht aussprechen, ja, das heißt so Verwundbarkeit, aber wie spricht man das aus?

28:01.000 --> 28:04.000
Das bin ich nicht des Englischen mächtig genug.

28:04.000 --> 28:11.000
Doch, Vulnerability, das kriege ich immer nicht gebacken, aber ich weiß was das heißt,

28:12.000 --> 28:22.000
man kann auch einfach den Docker-Stalls starten, ja, vielleicht kann ich es mir auch komplett sparen, da selbst was zu programmieren.

28:22.000 --> 28:43.000
Das probieren wir doch gleich mal aus, wenn man Docker run, auf Christophtd, gucken wir uns das Ding mal auf GitHub an, was er da gebaut, achso, mein Browser wurde ja geupdatet, ja, nein, ja ok, perfekt.

28:52.000 --> 28:58.000
So, GitHub, nein, GitHub, wo ist hier?

29:03.000 --> 29:18.000
Ich will mir das erstmal angucken, bevor ich das ausführe, was das ist, Christophtd, oder Crispbreadd, ok, also was hat er denn hier am Start?

29:18.000 --> 29:32.000
Source, Main, Alter, Java, please, da, Spring Application, Run, Main Controller, Java, ok, das ist tatsächlich äußerst minimalistisch.

29:32.000 --> 29:59.000
Ja, was geht das jetzt nicht mehr, oder was?

30:02.000 --> 30:06.360
Wie geht ab hat es runter genommen oder wie oder was oder wo

30:07.920 --> 30:09.920
Ne geht doch

30:10.560 --> 30:12.880
Wir finden es einfach easy aus docker still

30:15.760 --> 30:19.160
Das ist weil er ein komisches kornel update gemacht habe im hintergrund oder

30:21.760 --> 30:23.760
Geil

30:26.760 --> 30:28.880
Ja ja wo schrieb unten

30:28.880 --> 30:32.520
Gucken wir uns ein bisschen höre uns ein bisschen mario musik in der zwischenzeit an

30:36.320 --> 30:41.400
Ja es ist halt praktisch genau kommt jetzt kornel update richtigen zur richtigen zeit

30:41.720 --> 30:45.640
Nein das ist nicht max das ist nicht m,achs es ist max

30:46.680 --> 30:49.280
Mit einem super komplizierten hochkomplexen passwort

30:49.280 --> 30:57.240
Einem super komplizierten hochkomplexen passwort so firefox

31:00.000 --> 31:03.000
Auf geht's also docker run

31:05.560 --> 31:08.000
Docker m. Wie habe ich das ding genannt so

31:10.120 --> 31:14.040
Wir führen jetzt einfach random docker container aus so wie man das immer machen sollte

31:14.040 --> 31:18.440
Alles klar so und jetzt kann man was machen karl

31:23.480 --> 31:25.760
Körl elde ab bäem

31:31.080 --> 31:36.120
Und jetzt sollte naja hat es jetzt funktioniert

31:36.120 --> 31:40.840
Required request header for method parameter string not present

31:42.400 --> 31:48.440
Moment das ist das ist was anderes der hat der hat diesen daten den kod geändert oder

31:51.400 --> 31:53.400
Ja bäem

31:56.080 --> 31:58.080
Jetzt versucht er sich dahin zu verbinden

32:00.880 --> 32:02.880
Connection refused ja gut

32:02.880 --> 32:04.880
Aber das scheint funktioniert zu haben

32:06.480 --> 32:10.400
Probieren wir das doch mal aus mal netcat der verbindet sich auf

32:11.240 --> 32:14.840
Ja können wir da irgendwie sowas machen port 12345 vielleicht

32:15.480 --> 32:18.960
Dass ich jetzt irgendwie netcatch anschmeißen kann dass das darauf lauscht

32:20.160 --> 32:23.720
Netcat minus was war das listen 12345

32:27.640 --> 32:29.640
Kommt nichts zurück

32:29.640 --> 32:31.640
Nee kommt nichts zurück

32:32.240 --> 32:35.240
Hier war das listen oder war das mindestens listen port

32:36.400 --> 32:38.400
Aller netcat in 2017

32:39.200 --> 32:41.200
2021 war doch so oder

32:43.160 --> 32:45.160
Listen port

32:49.280 --> 32:51.280
Ja ja das ist richtig

32:52.080 --> 32:58.180
Ja gut deine machen deine sachen machen wir eigentlich noch mehr n ist no name lookup das ist verbaus und das ist

32:58.180 --> 32:59.840
port oder

32:59.840 --> 33:01.840
oder auch nicht

33:03.840 --> 33:09.720
Moment es ist im docker container da funktioniert das mit localhost ja gar nicht moment das müssten wir ändern auf die ip von

33:09.720 --> 33:13.400
meinem von meiner kiste 1 und 2 1 6 8 2 punkt

33:18.280 --> 33:23.320
Das da darauf müssen wir das ändern kein wunder dass es nicht funktioniert so

33:25.040 --> 33:27.040
Aha

33:27.040 --> 33:33.080
Jawoll das funktioniert

33:35.400 --> 33:37.400
Ok das ist natürlich cool

33:37.640 --> 33:42.440
Aber ich habe jetzt hier in den netcat drauf laufen auf port 12345 hier oben

33:42.800 --> 33:50.480
Läuft der die verwundbare java anwendung und ich mache einen karl request auf diese verwundbare java anwendung hier mit diesem

33:50.480 --> 33:59.840
String interpolation oder was das ist das dann dafür sorgt dass die java anwendung diesen teil nimmt und versucht von dort was

33:59.840 --> 34:01.840
nachzuladen

34:02.000 --> 34:09.320
So und wenn ich das ausführe sehe ich dass ich meine java anwendung versucht hier auf meinen server von dem als eigentlich

34:09.320 --> 34:11.320
Javacode nachladen könnte

34:12.080 --> 34:14.560
Wenn ich wüsste wie ich mit netcat javacode ausliefer

34:14.560 --> 34:22.960
Um sich zeugs zu holen das ist natürlich für ein arsch das sollte natürlich nicht so sein

34:24.280 --> 34:27.880
Interessant die eigentliche frage ist jetzt nur

34:30.400 --> 34:32.400
Sollen wir jetzt hier mal ein bild angucken

34:32.800 --> 34:40.200
Wie kann ich also das hier das hier ist jetzt mein netcat quasi das hier meinserver.de ist jetzt quasi diese netcat prozess

34:40.200 --> 34:46.280
Das hier ist der request das also das karl ist der request von der webseite zum server

34:47.480 --> 34:53.480
Und hier oben ist halt die die server anwendung in dem bild ja das funktioniert ganz gut wie liefer ich denn mit dem netcat

34:54.280 --> 34:57.320
Eine javaclasse aus das müsste man jetzt noch mal kurz gucken

35:01.960 --> 35:06.840
Aber das ist auf jeden fall interessant was du kannst auch einfach in der payload direkt karl bash ausführen

35:06.840 --> 35:08.840
Karl bash ausführen

35:16.000 --> 35:20.540
Warum wenn ich karl nach bash pipe macht es doch was komplett anderes

35:24.480 --> 35:30.880
Da nehme ich da nehme ich den output hello world wenn ich das so mache und macht damit irgendwas das will ich ja nicht

35:30.880 --> 35:35.040
Ich ich will ja dass der dass der java server hier was hinschickt

35:35.520 --> 35:42.320
Und jetzt müsste ich irgendwie gucken wie ich mit netcat dem java server was unterschieben kann steht da vielleicht auch was hier zu drinnen

35:51.280 --> 35:54.120
Server logs genau log vor ist triggert genau

35:54.120 --> 35:59.880
this response contains to remote

36:03.080 --> 36:08.120
Was moment jetzt jetzt jetzt ach so das ist ja überhaupt nicht das hier was die machen

36:10.800 --> 36:12.800
Okay das heißt ich müsste jetzt irgendwie

36:14.200 --> 36:18.240
Das hier ausliefern über netcat okay, ich glaube das ist nicht so easy wie man sich das vorstellt

36:18.240 --> 36:23.760
Zumindest wenn ich keine ahnung an welchem format das sein muss

36:26.160 --> 36:31.120
Ja das hier ist ja dann das eigentliche problem das heißt wir haben es jetzt quasi bis hierhin nachgestellt

36:39.680 --> 36:42.040
Was schreibt der was schreibt der typ denn aus seiner github so

36:42.040 --> 36:48.480
Was schreibt der was schreibt der typ denn aus seiner github seite

36:56.720 --> 36:59.120
Ja genau das ist das was wir gerade ausprobieren

37:00.640 --> 37:06.000
Ach hier guck mal da ist doch schon so was your private ip basic command base 64

37:06.000 --> 37:13.760
Ah guck mal da da kann ich sogar da kann ich sogar base 64 schon die klasse mitgeben oder wie oder oder her moment

37:21.760 --> 37:29.000
Ist das ist das hier inne ist das hier schon eine fertige java klasse ok base 64 decoder wobei wir können das einfach

37:29.360 --> 37:31.360
shell action machen

37:31.720 --> 37:33.360
base

37:33.360 --> 37:38.880
64 und dann ist das minus, boah das weiß ich gar nicht. Minus D decode ja

37:40.640 --> 37:43.120
touch temp pwned aha

37:47.760 --> 37:51.560
Aber warum führt der denn tat warum führt er denn das an der stelle aus

37:51.960 --> 37:58.840
Ok das das verwirkt mich jetzt ich dachte der müsste irgendwelchen java code übergeben aber das ist das ist shell kram

37:58.840 --> 38:03.360
warum führt er denn shell zeugs jetzt aus

38:03.360 --> 38:06.280
Ich probiere das jetzt mal aus was was macht der denn da jetzt

38:06.280 --> 38:13.280
Ich probiere das jetzt mal aus was was macht der denn da jetzt ich probiere das jetzt mal aus was was macht der denn da jetzt

38:13.280 --> 38:16.520
Ich probiere das jetzt mal aus was was macht der denn da jetzt

38:29.360 --> 38:31.360
Keine Ahnung mal ausprobieren

38:31.360 --> 38:34.640
Also wo haben wir das karl da schmeißen wir das doch jetzt mal rein

38:35.840 --> 38:38.360
So aber es ist es ist gut ich mein

38:39.160 --> 38:41.160
Eigentlich ist es doch fast schon egal oder

38:41.880 --> 38:44.880
Nee, ah nee da muss den da muss erst den request machen ok

38:48.200 --> 38:52.200
Also wo haben wir das karl da schmeißen wir das doch jetzt mal rein

38:52.200 --> 39:02.960
Also wo haben wir das karl da schmeißen wir das doch jetzt mal rein also wo haben wir das karl da schmeißen wir das doch jetzt mal rein o0o0o h

39:02.960 --> 39:23.160
reinschreiben. Was war? 1, 2, 3, 4, 5. Nicht so wirklich, oder? Ich verstehe auch den

39:23.160 --> 39:37.080
Schritt nicht, wie der jetzt auf einmal zu Konsolenkommandos kommt an der Stelle. Ach,

39:37.080 --> 39:42.800
das Ding macht nen LDAP Server auf. Ach so. Das hat überhaupt nichts mit dem eigentlichen

39:42.800 --> 39:47.120
Java. Das habe ich jetzt komplett ausgeblendet, weil ich dachte, das ist quasi die Vorarbeiten

39:47.120 --> 39:56.120
für die Sache. Ach so. Das ist nen LDAP Server, der dann den Kram ausliefert. Ach so. Verstehe,

39:56.120 --> 40:02.120
verstehe. Also müssen wir uns diesen Kram hier runterladen. Was laden wir uns denn hier

40:02.120 --> 40:10.080
runter? Wir gucken da mal kurz rein, was wir uns da eigentlich downloaden. Wie? GitHub.

40:10.080 --> 40:23.520
Die haben das gelöscht. Ja, huge IQ. Gibt's nicht mehr, oder? Na geil. GitHub hat es gelöscht.

40:23.520 --> 40:44.960
Sehr gut. Massive 5 head, 6 head brain. Nee, ist ja lustig. Das ist ja weg. Guck mal,

40:44.960 --> 40:53.680
suchen wir mal auf Shithub. Nicht Gotthub. Wer weiß, wo wir da rauskommen. Gittlerplink?

40:53.680 --> 41:00.360
Was? Achja. Lul. Easy. Nee, das ist das andere. Das ist die eigentliche App. Die haben wir

41:00.360 --> 41:11.040
schon. Nee, nee, nee. Das brauchen wir. Nee, nee, das war was anderes. Das ist die eigentliche

41:11.040 --> 41:17.160
App, die wir hier schon im Docker-Container laufen haben. Das ist was anderes. Das ist

41:17.160 --> 41:21.120
die eigentliche App, die man braucht, um den Request zu bekommen. Wir brauchen jetzt ja

41:21.120 --> 41:41.120
diesen komischen, den LNAP-Server, der was ausliefert. Was Archive? Okay. Probieren wir

41:41.120 --> 42:10.840
das mal aus. Ob es es da noch zum Download gibt. Ah, ah, ah, ah. Oh. Gibt's nicht zum

42:10.840 --> 42:17.720
Download? Doch, gibt's zum Download. Poggers. Ich mein, wir sind in der VM. Da können wir

42:17.720 --> 42:23.040
den ganzen Crap ausführen. Was auch immer, ich mir da jetzt alles runterlade. Wer weiß,

42:23.040 --> 42:36.320
wer weiß. So, unzip. Da sind wir. Der Download noch nicht fertig? Ah, der Download läuft

42:36.320 --> 42:44.600
noch. Was? 34 MB? Okay, das ist Java. Java ist ja prinzipiell immer ein bisschen schwergewichtiger.

42:44.600 --> 42:56.680
Ach, das ist gar kein Binary. Dann ist aber sehr komisch, warum das so groß ist. Das

42:56.680 --> 43:00.200
sollte eigentlich fertig sein mit... Nein. Der ist nicht so schnell. Wir müssen kurz

43:00.200 --> 43:15.720
den Download noch abwarten. Ey, Xerionim, so geht's mir auch. Das einzige, was ich public

43:15.720 --> 43:27.040
habe, ist auch.NET. Also, easy. Was kurze Fragen. Welchen VM-Klient? Das ist VM-Workstation

43:27.040 --> 43:32.640
hier. Guck, vor allem bei Workstation. Aber glaub, noch 12 oder so. Irgendwo war's, wo

43:32.640 --> 43:37.400
ich mir mal bei irgendeinem zwielichtigen Key-Shop für 2,50 Euro oder so ein Key gekauft

43:37.400 --> 43:51.360
hab. So, ist das jetzt runtergeladen? Nice. MK Dear. Kerk W. War ja klar, dass es das

43:51.360 --> 44:13.120
schon gibt. Okay. Java-Kram. Java-Kram. So, unzip. Bam. Okay, weiter. Java, Snapshot,

44:13.120 --> 44:24.840
ja. Private IP, alles klar. Und hier ist der Source-Code drin? Nee. Das ist... Ist

44:24.840 --> 44:35.360
ein Jar der Source-Code, ein gepacktes? Nee, oder? Oh, was ist das hier? Das ist ein Zip?

44:35.360 --> 44:43.800
Nee, das ist, das ist, das ist, das ist kompiliertes Java-Zeug, oder? Wie ich keinen Plan von Java

44:43.800 --> 44:52.600
hab. Okay, wir führen das jetzt einfach aus. Wie gesagt, wir sind in der VM. Was soll da

44:52.600 --> 45:06.640
groß passieren? Also, your private IP. Port 192.162.134 war's, ne? IP add. Nee, 132. Alles klar. So,

45:06.640 --> 45:12.360
und das startet jetzt hier in den Server auf Port... Okay, gucken wir mal, NetStat, Tulben,

45:12.360 --> 45:18.280
kann man sich mal gut merken. 1389.88888, okay, excellent, excellent. Hier oben starten wir

45:18.280 --> 45:27.240
den Docker. Ja, wir starten den nochmal neu. In Docker-Kram. Okay, so, und jetzt führen

45:27.240 --> 45:34.360
wir das hier aus. So, und das sollte jetzt dazu führen, äh, wir machen das nochmal

45:34.360 --> 45:39.320
anders. Ich beende das hier mal, falls sich das beenden lässt. Hier unten gehen wir nach

45:39.320 --> 45:45.800
Downloads, Java-Kram und führen den Kram hier nochmal aus, dass wir nämlich alles hier

45:45.800 --> 45:51.760
schön in einem Fenster haben. So, und hier machen wir jetzt den Curl. Den Curl-Aufruf

45:51.760 --> 46:01.520
mit meiner IP. 122.162.132. Und BÄM. Hat nicht funktioniert. Oder hat doch funktioniert?

46:01.520 --> 46:17.560
Ich meine, nur weil es eine, nur weil es eine Exception gibt. Ach, ich hab das nicht editiert.

46:17.560 --> 46:33.600
Ja, null. Vorhin, vorhin hatte ich es editiert hier nicht. Alles klar. Zack. Jetzt aber eigentlich

46:33.600 --> 46:42.240
richtig, ne? NetStat, das hat bestimmt funktioniert. Nur, dass es halt eine Fehlermeldung aus welchen

46:42.240 --> 46:51.400
Gründen auch immer gibt. So, das läuft, Port 8080. Ach so, mein, das Curl kann ja so mit

46:51.400 --> 46:56.920
dem Docker-Container, wobei doch, doch, doch, doch, das funktioniert so. Das müsste eigentlich

46:56.920 --> 47:08.520
an der Stelle egal sein. Ne, Port ist richtig, Port ist richtig. Also ich vermute mal, das

47:08.520 --> 47:15.840
hat jetzt tatsächlich funktioniert. So, das sagt hier, Command-Touch, ja, das hat funktioniert.

47:15.840 --> 47:21.040
Das hat funktioniert. Das ist halt, gut, warum auch immer das, ist doch scheißegal, ob es

47:21.040 --> 47:27.400
so Exception gibt, aber es hat funktioniert. Sending Elder Presorces Result. Exception

47:27.400 --> 47:47.080
Result, Reduffer. Illegal Access Error, Superclass Access Check failed. Wow. Hab ich meine Java-Version

47:47.080 --> 47:52.200
zu neu? Kann das sein, dass ich da nicht mehr dafür anfällig bin? Aber von der Idee her

47:52.200 --> 48:01.320
ist es genau das, was sie hier gemacht haben. Ne. Aber normalerweise sollte da jetzt quasi,

48:01.320 --> 48:07.840
können wir mal ausprobieren. Ach so, ja, ist natürlich blöd. Ich sollte das ja vielleicht

48:07.840 --> 48:19.480
mal gestartet. Run. Wahrscheinlich ist meine Java-Runtime zu neu. Die führt das nicht

48:19.480 --> 48:28.320
aus. Ne, mein Java ist zu neu, Leute. Was braucht man, was für eine Java-Version ist

48:28.320 --> 48:52.840
man anfällig davon? Da steht doch bestimmt die, JDK 18081. Ok. Also ich muss die, Java,

48:52.840 --> 49:10.360
ja. Ok, ich hab, was hab ich denn hier installiert? 17? Was zum Teufel soll 17 sein? Hä? Was

49:10.360 --> 49:18.400
ist denn 17, gibt es schon 17? Ich meine, ich hätte 7, ich hätte 7 zu bieten. Die,

49:18.400 --> 49:25.400
haben die ernsthaft? 7, 8, 11, 17? Was ist das für eine, das ist ja noch schlimmere

49:25.400 --> 49:32.640
Versionierung als bei Chrome. 7, 8, 11, 17. Obvious, alles klar. Perfekte, perfekte Übernahmung.

49:32.640 --> 49:48.400
Äh, ich, kann man einfach so? Ah ja, ok, da muss man mehr. Weiß gar nicht, was ich

49:48.400 --> 49:52.960
da alles deinstall, wobei wahrscheinlich reicht das, wenn ich OpenJDK andere Versionen installiere,

49:52.960 --> 50:07.920
was er dann sagt, der muss den Kram deinstallieren. Ok, also 8 ist ok. 8. Kann man die parallel

50:07.920 --> 50:13.880
installieren? Ach hier, Java-Default. See Arch Java, da kann man die Versionen selecten

50:13.880 --> 50:25.520
oder was? Aha, jetzt wird's aber, jetzt wird's aber Massive, Massive Brain, Alter. Dann

50:25.520 --> 50:35.000
machen wir jetzt Java 8. Jaja, root, come on, ist mir doch egal. Ok, so und jetzt sollte

50:35.000 --> 50:43.800
der das ausführen mit, wobei, meine Java-Version ist doch in dem Fall egal, das ist ein Docker-Container,

50:43.800 --> 50:51.640
oder ist die Java-Version für den, für den, für diesen Dingserver hier irgendwie notwendig?

50:51.640 --> 51:02.840
Ist doch eigentlich egal. Ob das für ein LDAP-Server wichtig ist? Nee, für ein LDAP-Server

51:02.840 --> 51:31.120
dürfte es doch eigentlich egal sein. Jaja. Ja, guck mal, running 1822. Nee, das funzt

51:31.120 --> 51:47.560
nicht, so wie ich mir das gedacht hab. Nee, doch, es hat funktioniert, oder? Das, das,

51:47.560 --> 51:54.360
exec? Hat funktioniert, jetzt hat's geklappt, bam. Ach ja, es ist klar, warum ich die, ich

51:54.360 --> 52:02.320
vermute mal, dass die Klasse, die der zurückschickt, quasi mit der gleichen Java-Version kompiliert

52:02.320 --> 52:08.840
sein muss, die in dem Server-Prozess läuft, weil es sonst irgendwie nicht kompatibel ist

52:08.840 --> 52:15.160
oder so, rate ich jetzt mal, keine Ahnung. Könnte ich mir schon vorstellen, wenn quasi

52:15.160 --> 52:22.960
das hier ausgeliefert wird mit Java, Java 17, dass dann Java 8 damit nichts anfangen kann.

52:22.960 --> 52:30.960
Aber jetzt hat's funktioniert, guck mal. Wir sind, wir sind pwned, wir sind pwned. Hat

52:30.960 --> 52:36.080
funktioniert, nice. Ja, das ist, wisst ihr, das ist richtig gut, da muss ich selbst keine

52:36.080 --> 52:46.600
Web-Anwendung bauen. Da kann ich nämlich einfach diese Example-Dinger verwenden. Bisschen

52:46.600 --> 52:53.480
blöd, dass wir den Snapshot, den Source-Code davon nicht haben, sonst könnten wir da, sonst

52:53.480 --> 53:04.440
könnten wir da ein bisschen was, bisschen was drin anpassen noch. Kann man eigentlich

53:04.440 --> 53:09.480
sowas machen wie Docker, LS, CAT und da steht ja wahrscheinlich einfach nichts drin. Ach

53:09.480 --> 53:32.360
so, Docker, Start. Nee, da steht nichts drin. Auf der anderen Seite müsste das doch funktionieren,

53:32.360 --> 53:40.360
weil ich könnte doch einfach in x-beliebiges Shell-Commando Base64 encoden, oder? Moment,

53:40.360 --> 53:46.680
das muss ich jetzt mal angucken, ob das, wie das funzt. Also, wir starten das Ding mal,

53:46.680 --> 53:52.960
machen mal einen Curl. Komm, ich stoppe das, lösche das noch mal, wer weiß, ob das irgendwie

53:52.960 --> 54:04.160
clean laufen muss oder so, keine Ahnung. So, weil das hier ist ja ein Shell-Commando gewesen,

54:04.160 --> 54:11.760
das haben wir ja gesehen. Guckt, Echo, das ist Touch-ETC-Pwn. Das heißt, im Endeffekt,

54:11.760 --> 54:20.480
wenn ich jetzt sowas mache wie Echo, Qt, Chat nach TMP, wobei ich das nicht weiß, ob das

54:20.480 --> 54:32.080
funktioniert ohne Shell, nach TMP, kegw.services. Was, also, Loglaufer benutzen viel am Ende,

54:32.080 --> 54:43.400
Curl, xx, Bash, aber wie soll das funktionieren? Damit piped man den Output von Curl nach Bash,

54:43.400 --> 54:51.120
das ist doch überhaupt nicht das, was man haben will. Übrigens, ich hab's jetzt, wo

54:51.120 --> 54:56.120
ein bisschen mehr Leute da sind, was ich ganz witzig finde. In dem Moment, wo ich den Stream

54:56.120 --> 55:03.600
gestartet habe, habe ich eine Einladung auf der Arbeit bekommen. Aktuelle Lagerlog von

55:03.600 --> 55:13.960
Jane. Aber ich geh mal davon aus, die haben einfach alle eingeladen. Okay, das heißt,

55:13.960 --> 55:22.920
wenn ich das hier jetzt übergebe, dann sollte der nicht mehr Touch-TMP-Pwn machen, sondern

55:22.920 --> 55:27.840
das hier ausführen, wobei ich halt nicht weiß, ob das funktioniert, ohne dass man

55:27.840 --> 55:35.800
eine Shell startet vorher. Gucken wir mal, also anstatt das hier, machen wir einfach

55:35.800 --> 55:48.320
das hier. Müssten wir aber das Java-Ding wieder starten vorher? Nee. Ja. Und Bam. Incorrect

55:48.320 --> 56:03.520
Params. Warum? Was hab ich falsch gemacht? Was hab ich falsch gemacht? Ah, das muss

56:03.520 --> 56:13.800
man doch Url-Escapen oder irgendwas, oder wie? Der Zeichen drinnen. Ich muss das Url

56:13.800 --> 56:34.200
ankommen, hä? Dachte ich mir. Bam. Exquisite, exquisite. So. Bam. Exec. LS. Da ist es.

56:34.200 --> 56:50.000
Okay, wir können dem Server jetzt beliebiges Zeug unterschrieben, wo wir Bock drauf haben.

56:50.000 --> 56:55.720
Und wisst ihr, was noch viel besser ist? Wir müssen so überhaupt kein Java mehr programmieren.

56:55.720 --> 56:59.800
Das ist noch viel besser. Wir können jetzt nämlich jetzt jetzt jetzt jetzt jetzt jetzt

56:59.800 --> 57:06.560
alles auf dem Server machen. Wir können auch zusätzliche Sachen nachladen. Jetzt passt

57:06.560 --> 57:12.080
mal auf. Wisst ihr, was wir machen könnten? Anstatt einfach Echo-Q-Chat da reinzuschreiben,

57:12.080 --> 57:21.080
wir könnten auch einfach sagen curl google.de slash irgendwas downloaden auf dem Server.

57:21.080 --> 57:25.160
Fällt irgendjemand irgendwas kleines Sinnloses ein, was man downloaden könnte, irgendein

57:25.160 --> 57:36.360
Go-Programm mit Endlosschleife oder sowas und das dann ausführen. Also sprich, wir

57:36.360 --> 57:42.200
könnten hier jetzt irgendwas downloaden und das dann quasi ausführen dahinter. Das ist

57:42.200 --> 57:48.800
natürlich richtig krass. Wir können auch, ich meine, man könnte auch quasi sowas hier

57:48.800 --> 57:55.560
machen bash minus, was ist das? Minus C? Also bash minus C oder irgendwie sowas wie

57:55.560 --> 58:05.560
while, true, Echo 1, keine Ahnung, dann? Ne, warte mal. Ist es nicht minus C? Ne, du.

58:05.560 --> 58:22.120
Endlosschleife und dann können wir zumindest viel CPU. Oh, das ist eine gute Idee.

58:22.120 --> 58:51.440
Das ist tatsächlich eine gute Idee. Eine Fork-Bombe, das ist eine gute Idee. Ja, wir

58:51.440 --> 58:55.200
machen das mal anders, aber wir machen jetzt mal was anderes. Downloaden bringt ja nichts.

58:55.200 --> 59:00.080
Wir machen jetzt mal eine Schleife und einfach, dass man sieht, dass das, ich mach da jetzt

59:00.080 --> 59:06.280
mal einen Sleep rein, weil ich will ja meine Festplatte nicht voll machen. Echo 1 nach

59:06.280 --> 59:13.840
Temp 0W. So, und da sollte jetzt folgendes passieren. Jetzt ist es noch rein bei mir

59:13.840 --> 59:20.640
lokal, Leute. 0W, gut, da schreibt jetzt jede Sekunde da eine 1 rein. Aber wir können

59:20.640 --> 59:24.040
danach auch eine Fork-Bombe machen und wir können auch alle, komm, wir machen alle 0,0,

59:24.040 --> 59:28.520
ah, komm, alle 1 passt. Wer weiß, ob da ein Sleep dabei ist, was man machen kann. So,

59:28.520 --> 59:33.800
und jetzt ist natürlich die Frage, kriegen wir das irgendwie ausgeführt auf Serverseite?

59:33.800 --> 59:39.560
Da muss man bestimmt irgendwelche Dinger eskapen. Zumindest das schon mal in Singlequotes machen.

59:39.560 --> 59:45.520
Base64. Kennt jemand ein schönes UL-Encode für die Kommandozeile? UL-Encode, bash.

59:45.520 --> 59:59.600
Gibt es da irgendwas schönes Fertiges? Ah, Curl kann das direkt. Ah, ok, pure bash UL-Encode,

59:59.600 --> 01:00:06.280
alles klar. Das timeoutet doch irgendwann, wahrscheinlich, wahrscheinlich timeoutet

01:00:06.280 --> 01:00:10.360
das. Wir können das sogar in den Hintergrund schicken, dann timeoutet das nicht. Das probieren

01:00:10.360 --> 01:00:19.080
wir jetzt gleich noch aus. Ja, ich hab ja noch, ich hab ja noch Viertelstunde Zeit. Ok, UL-Encode,

01:00:19.080 --> 01:00:28.240
wir nehmen irgendeinen online, UL-Encode, keine Ahnung. So, UL-Encode, bam. Iiih, was

01:00:28.240 --> 01:00:34.520
ist denn das? Warum sind da, warum sind da so hässliche, sächliche hässliche Leerzeichen

01:00:34.520 --> 01:00:44.240
drin? UL-Encode, bam. So, und das hängen wir jetzt hinten an unser Java Zeug an. Curl,

01:00:44.240 --> 01:00:57.960
blup. Und bam. Oh nee. Incorrect Parameters. Was hat er jetzt für Schmerzen? Chat, was

01:00:57.960 --> 01:01:14.920
ist falsch? Incorrect Parameters. Zeilenumbrauch in Base64, das kann sein. Ich dachte das Ding

01:01:14.920 --> 01:01:27.600
ist so schlau und checkt das. Meint ihr, das ist das Problem. Hey, hat funktioniert. Ok,

01:01:27.600 --> 01:01:34.520
das auch im Endeffekt heißt, ich kann jetzt gucken, ls. Nee, hat nicht funktioniert. Ok,

01:01:34.520 --> 01:01:38.720
das liegt wahrscheinlich daran, weil da kein Bash drauf läuft auf dem Server. In dem Container

01:01:38.720 --> 01:01:45.120
ist wahrscheinlich keine Bash zum Ausführen. Das heißt, das hat nicht funktioniert. Das

01:01:45.120 --> 01:01:51.280
heißt, wir machen hier sowas, wir machen das mal weg. Gucken, ob das funktioniert. So,

01:01:51.280 --> 01:01:57.880
müssen wir wieder UL-Encode. Da muss man sich jetzt halt ein bisschen rantasten, was in diesem

01:01:57.880 --> 01:02:03.000
Container, oder in dem Fall halt, was auf dem Server zur Verfügung stehen würde, was aber

01:02:03.000 --> 01:02:13.760
relativ schnell gemacht ist. Ls. Da, bam, da ist es, guckt. Das hat jetzt funktioniert.

01:02:13.760 --> 01:02:25.840
Und ihr seht, es wird immer mehr. Es läuft im Hintergrund weiter. Also anscheinend blockt

01:02:25.840 --> 01:02:30.040
das noch nicht mal, sondern läuft irgendwie asynchron oder so. Das ist natürlich nice.

01:02:30.040 --> 01:02:40.600
Hat Docker sowas wie Tail? Oder kann ich sowas mit Tail? Guckt, jede Sekunde. Server gehackermant.

01:02:40.600 --> 01:02:51.080
Jetzt läuft mein Customzeug im Hintergrund. Und damit ist natürlich alles offen. Ich könnte

01:02:51.080 --> 01:02:58.360
mir den eigenen Tailnetz-Server starten. Ich könnte mir im Zweifelsfall, was auch immer,

01:02:58.360 --> 01:03:11.760
nein eigentlich einen User anlegen könnte ich nicht, aber Shell Access ist jetzt gar

01:03:11.760 --> 01:03:26.520
kein Ding mehr. Ja, das ist natürlich cool. Ja, es ist Hardport-Tunneln, theoretisch alles

01:03:26.520 --> 01:03:33.120
Mögliche. Der einzige Nachteil ist natürlich noch, ich zeige euch mal, wir laufen ja im

01:03:33.120 --> 01:03:44.080
Kontext des Java-Benutzers. Who am I? Können wir noch irgendwie ausgeben. Nee, Schwachsinn,

01:03:44.080 --> 01:03:51.640
nicht ausgeben, sondern in die Datei schreiben. Who am I? Wobei das natürlich nicht beschreibe,

01:03:51.640 --> 01:03:59.520
um Echo davor zu machen. Da können wir nämlich mal gucken, als was für ein User das Ganze

01:03:59.520 --> 01:04:05.200
läuft. Encode. Und zack, wir machen mal den Stalker-Ding aus und starten das mal neu.

01:04:05.200 --> 01:04:13.800
Run. Wir können übrigens run. Run ist glaube ich minus it oder so, dass er das wieder löscht.

01:04:13.800 --> 01:04:36.400
So, run. Perl. Minusminusrm. Bam. Das mag er aus irgendwelchen Gründen nicht, was ich

01:04:36.400 --> 01:04:45.520
da gemacht habe. Oder vielleicht kommt da immer eine Exception, keine Ahnung. Ls. Doch, scheint

01:04:45.520 --> 01:04:51.480
zu funktionieren. Wir sind root. Okay, wir haben gewonnen. Easy. Aber wir können auf

01:04:51.480 --> 01:04:57.640
dem Software alles machen, was wir wollen jetzt. Kein Ding. Gut, das ist ein Test-Container,

01:04:57.640 --> 01:05:05.160
da muss man sich nicht wundern, aber ja. Jetzt ist Polen offen für die Minecraft-Zoomer.

01:05:05.160 --> 01:05:19.840
Oder um nicht zu sagen hier Monkastyr. Jetzt können wir alles machen mit der Kiste. Welcher

01:05:19.840 --> 01:05:30.640
Server ist das? Lokaler bei mir. Lokaler Docker-Container bei mir. Ich bin erstmal

01:05:30.640 --> 01:05:35.600
eine Route im Container, das ist richtig. Da jetzt irgendwie zu eskalaten, ist wieder

01:05:35.600 --> 01:05:44.920
was anderes, steht auf dem anderen Platt und ist nicht so ohne Weiteres möglich. Aber trotzdem,

01:05:44.920 --> 01:05:51.520
wenn es jetzt noch irgendein Container wäre, der da noch Devices durchgereicht hat, irgendwas,

01:05:51.520 --> 01:05:56.280
also da gibt es Möglichkeiten. Auf der anderen Seite ist es ja egal, das ist ja nicht mehr

01:05:56.280 --> 01:06:09.000
Scope von dieser Java-Geschichte. Aber das ist cool, das ist wirklich nice. Vor allem

01:06:09.000 --> 01:06:25.600
ist es ziemlich easy, das zu machen. Wir können ja hier im Prinzip alles machen. Wir können

01:06:25.600 --> 01:06:30.040
hier im Prinzip alles machen. Wir können eine Schleife laufen lassen im Server-Kontext

01:06:30.040 --> 01:06:42.240
oder als User. Wir können ja auch Custom-Code nachladen. Nur mal so. Wir könnten es jetzt

01:06:42.240 --> 01:06:49.600
total übertreiben. Wir könnten jetzt hier eine Schleife machen, die permanent nachguckt.

01:06:49.600 --> 01:07:10.160
Keine Ahnung, Curl. Wir nehmen jetzt irgendein Beispiel hier. Example.com. Meine Hacker-Mans-Domain,

01:07:10.160 --> 01:07:24.640
das ruft er immer ab. Und das ganze wird dann gepiped nach Bash. Und so hätten wir quasi

01:07:24.640 --> 01:07:31.500
jede Sekunde, würde der bei einem Server von uns nachgucken, ob es neue Dinger auszuführen

01:07:31.500 --> 01:07:46.720
gibt, die runterladen und ausführen. Dann ist natürlich komplett vorbei. Ich weiß nicht,

01:07:46.720 --> 01:07:54.440
ob ich noch hingehe. Wir könnten zum Beispiel sowas machen. Der macht einen Curl alle paar

01:07:54.440 --> 01:08:04.920
Sekunden auf 122.132. Das ist mein Rechner. Port 666. Eins neben dem Teufel. Und ruft

01:08:04.920 --> 01:08:11.120
hier slash script ab. Ich muss mal kurz gucken, ob das überhaupt funktioniert, was ich hier

01:08:11.120 --> 01:08:23.560
baue. Okay, nice. So, jetzt machen wir hier was, was ich ordne. So, machen wir einen einfachen

01:08:23.560 --> 01:08:41.760
Http-Server auf. Wie ging das nochmal? Punkt Http habe ich doch bestimmt. Bestimmt im Hinterdings.

01:08:41.760 --> 01:08:58.760
Hallo. Das da. Genau. Port 666. Bam. So. Und jetzt ruft er hier einen Script ab. Seht

01:08:58.760 --> 01:09:09.560
ihr? Der versucht jetzt einen Script abzurufen. Und das können wir jetzt dem Server unterschieben,

01:09:09.560 --> 01:09:16.240
das der versucht hier einen Script abzurufen und auszuführen. Die Frage ist, läuft auf

01:09:16.240 --> 01:09:27.440
diesem Docker-Container eine Bash? Was ist denn da? SH? Minus L oder was ist es? Oh,

01:09:27.440 --> 01:09:39.920
ein bisschen habe ich zugemacht. Interaktive Scheller. Aber SH ist am Start schon mal. Bin

01:09:39.920 --> 01:09:51.240
slash bash muss man? Nee. Muss den abzurufen, aber ist nicht. Ist aber auch egal. Ist aber

01:09:51.240 --> 01:10:00.520
in dem Fall auch vollkommen egal. Wir peipen das einfach nach SH. So. Und jetzt sollte,

01:10:00.520 --> 01:10:03.720
also wenn ich jetzt hier das richtig gequoted, ne, das habe ich nicht richtig gequoted.

01:10:03.720 --> 01:10:20.080
Hab ich jetzt richtig gequoted? Ich hoffe mal. So. Der sollte jetzt alle Sekunde zu meinem

01:10:20.080 --> 01:10:27.960
Server sich connecten, der ja hier unten läuft. Und auf dem Server gucken, ob es eine Datei

01:10:27.960 --> 01:10:35.880
gibt, die sich Script nennt. Und die ruft er ab und führt sie aus. Das gucken wir mal,

01:10:35.880 --> 01:10:41.800
ob wir das dem Java-Server untergeschoben kriegen. Das beste wäre ein Script, was

01:10:41.800 --> 01:10:50.360
die Sicherheitslücke selbst patcht. So, komm mal her. Machen wir mal Url-Encoding das ganze.

01:10:50.360 --> 01:11:00.760
Der Url-Encoder hat schon wieder kein Bock mehr. Der denkt sich, but why, was willst

01:11:00.760 --> 01:11:10.560
du von mir? Alter, Url-Encoder, da gibt es 30.000 Sachen für Url-Encode. Ja, PHP,

01:11:10.560 --> 01:11:18.080
mir doch egal. Url-Encode. Sag mal, ist jetzt ernsthaft die Url-Encode-Seite down? Online.

01:11:18.080 --> 01:11:23.120
Ich brauche mal ein ordentliches Bash Tool für. Hier, DE Functions Online Url-Encode.

01:11:23.120 --> 01:11:32.400
Perfekt. Das brauchen wir. Url-Encode ausführen. Gib ihm. Ja, sehr schön. Url-Encode down.

01:11:32.400 --> 01:11:43.520
Weil es da gar nichts zum Url-Encode gibt in dem Base64. Okay, so, gucken wir mal,

01:11:43.520 --> 01:11:51.720
ob wir das dem Server jetzt untergeschoben kriegen. Das läuft. Ich lösche das nochmal. Run. So,

01:11:51.720 --> 01:12:05.680
Curl. Wo haben wir es denn jetzt? Da. Hat funktioniert. Der sollte jetzt eigentlich,

01:12:05.680 --> 01:12:15.320
wenn alles funzt, einmal in der Sekunde abrufen. Macht er aber nicht. Weil, man weiß es nicht.

01:12:15.320 --> 01:12:27.240
Stimmt das, was ich hier gebastelt habe überhaupt? Ja, also von der Idee her funzt das. Vielleicht

01:12:27.240 --> 01:12:36.800
ist ja da auch gar kein Curl drauf. Das kann ja sein. Ah, da ist gar kein Curl drauf. Ja,

01:12:36.800 --> 01:12:45.520
dann. User bin Curl. Ja, dann kann das nicht funktionieren. Ne. Ja, dann. Da geht das nicht.

01:12:45.520 --> 01:12:58.360
Auf was für einem Image basiert denn das? Ne. Was ist das für ein Base Image? Keine Ahnung. Ja,

01:12:58.360 --> 01:13:03.560
gut, aber von der Idee her würde das jetzt funktionen. Ist denn ein Weget drauf? Weget ist

01:13:03.560 --> 01:13:10.640
drauf. Okay, auch okay. Dann ist kein Problem. Dann machen wir das Ganze mit Weget. Wie macht

01:13:10.640 --> 01:13:27.320
man? Weget, Weget, Standard Out. Weget, Standard Out. Minus, Minus. Oh. Ja, genau. Das ist der

01:13:27.320 --> 01:13:33.360
eigentliche Standard Out hier. Okay. Ja, dann ersetzen wir doch einfach mal das Curl durch

01:13:33.360 --> 01:13:48.840
den Weget. So, sehr schön. Nach Shell, zack. So. Base, 64, Encode, Echo. Wir kriegen das

01:13:48.840 --> 01:13:55.760
schon noch. Was? Ah, vielleicht sollte man das auch an die richtige Stelle machen. Dann, zack.

01:13:55.760 --> 01:14:11.960
Will-Encode. Ah, Will-Encode geht wieder. Okay, nice. Sehr schön. Will-Encoded. Und jetzt schieben

01:14:11.960 --> 01:14:23.840
wir das dem Server unter. Run. Wo ist mein Curl hier? Da. Okay, und jetzt gucken wir,

01:14:23.840 --> 01:14:31.960
ob es jetzt funktioniert. Wenn nicht, muss ich jetzt aber auch gleich futtern. Nee, funktioniert

01:14:31.960 --> 01:14:39.280
nichts. Dann weiß ich nicht, woran es liegt. Dann fehlt irgendwas auf dem Server zum Ausführen.

01:14:39.280 --> 01:14:47.280
Keine Ahnung. Aber von der Idee her funktioniert es. Was meckert er denn hier? Mach mal Base,

01:14:47.280 --> 01:14:56.440
minus Null. Ja, das ist, dass er keine Leerzeichen macht, ne? Aber ich habe den Line Break ja

01:14:56.440 --> 01:15:08.240
rausgelöscht hier. Oder? Habe ich den Line Break rausgelöscht? Ich bin das gar nicht

01:15:08.240 --> 01:15:33.320
mal so sicher. Bam. Aha. Guck mal. Mein Server ruft alle Sekunde einen Skript ab. Also mein

01:15:33.320 --> 01:15:39.160
gehackter Server quasi ruft alle Sekunde bei mir einen Skript ab. Das heißt, jetzt könnte

01:15:39.160 --> 01:15:45.720
ich hier reingehen und sagen, Skript. Und da kann ich jetzt alles ausführen, was ich

01:15:45.720 --> 01:16:02.800
will. Echo 1. Bam. So, und schon führt der Server alles aus, was ich will. Exec. Ls.tmp.

01:16:02.800 --> 01:16:07.280
Kann ich euch beweisen, dass das funktioniert? So, also der Server ruft jetzt einmal in der

01:16:07.280 --> 01:16:12.680
Sekunde hier einen Skript von mir ab. Da kann ich jetzt also auch reinschreiben Echo 1 nach

01:16:12.680 --> 01:16:26.880
tmp null. Speichern und eine Sekunde später ist temp null da. Also im Prinzip kann ich

01:16:26.880 --> 01:16:32.120
jetzt auf, das ist quasi fast schon so eine Art Remote Shell auf dem Server jetzt. Zwar,

01:16:32.120 --> 01:16:38.200
zwar in Wimform, okay, aber ich kann quasi mit einer Sekunde Verzögerung alles, aber

01:16:38.200 --> 01:16:43.760
wirklich alles, ich bin ja auch noch ruht auf dem Server, ausführen. Ich kann auch

01:16:43.760 --> 01:16:50.440
einen SSH Server starten, wenn ich das darf. Nur der Unterschied ist halt, ich sehe jetzt

01:16:50.440 --> 01:16:55.400
die Ausgabe nicht direkt, was aber auch nicht so wild ist, weil ich könnte mir die Ausgabe

01:16:55.400 --> 01:17:00.520
ja schicken lassen. Das ist ja der Witz. Ich könnte quasi wirklich jetzt so eine richtige

01:17:00.520 --> 01:17:06.360
Shell für Arme bauen, weil ich könnte ja quasi zum Beispiel, ich muss jetzt wirklich

01:17:06.360 --> 01:17:11.480
futtern Leute, aber ich könnte ja, hallo, ich könnte zum Beispiel jetzt hier eine Netcatch

01:17:11.480 --> 01:17:21.360
starten auf Port 12345 oder so und dann die Ausgabe zum Beispiel mir schicken lassen

01:17:21.360 --> 01:17:30.720
vom Server, von meinen Shell Befehlen an irgendwie, boah das weiß ich aus dem Kopf nicht, kann

01:17:30.720 --> 01:17:37.880
man, nee, Curl ist ja nicht drauf, kann man mit VGET Standard In irgendwie als Post schicken

01:17:37.880 --> 01:17:45.760
oder sowas? VGET Standard In Post, keine Ahnung, Post Request, ich habe keine Ahnung,

01:17:45.760 --> 01:17:55.880
ob das funktioniert. Post Data String, okay. Post Data will ich machen, also VGET Post

01:17:55.880 --> 01:18:06.920
Data, also den Output von meinem Befehl, also in dem Fall Echo 1, aber ich kann keine Curl

01:18:06.920 --> 01:18:18.320
verwenden, weil Curl auf dem Server nicht drauf ist und das Ganze jetzt zu 192.168.132.1345,

01:18:18.320 --> 01:18:23.680
so eine Sekunde warten, gucken, ob dann was reinkommt, bam, okay, ich habe sogar jetzt

01:18:23.680 --> 01:18:36.120
die Ausgabe, easy, jetzt ist vorbei, jetzt ist vorbei, jetzt ist vorbei, jetzt kann ich

01:18:36.120 --> 01:18:42.840
sogar die Ausgabe zurück posten, also ich kann quasi als Root alles ausführen und

01:18:42.840 --> 01:18:55.720
mal zum Beweis, who am I? Who am I? Ich bin Root, wer hätte das gedacht? Ich könnte sogar

01:18:55.720 --> 01:18:58.960
Curl installieren, wenn ich wüsste, was das für ein Betriebssystem ist, wie kriege ich

01:18:58.960 --> 01:19:06.600
denn jetzt am besten raus, was das für ein Betriebssystem ist? Hat jemand aus dem Kopf,

01:19:06.600 --> 01:19:10.960
wie man Netcat beenden kann nach der Verbindung, dass es die Verbindung wieder wegschmeißt?

01:19:10.960 --> 01:19:21.600
Einfach abget, ich weiß nicht, ich weiß nicht, ob es ein Demian ist, lsb release minus a,

01:19:21.600 --> 01:19:41.440
okay, lsb release minus a, nope, das gibt es da anscheinend nicht, etc, etc, gibt doch

01:19:41.440 --> 01:20:10.960
ja, keine Ahnung, was das für ein Betriebssystem ist, könnte sein, dass es ein Alpines APK,

01:20:10.960 --> 01:20:14.480
ich glaube, ich habe es, ich glaube, ich habe es geschrottet, dadurch, dass ich irgendwas

01:20:14.480 --> 01:20:27.840
ausgeführt habe, was nicht funktioniert hat. Okay, er ruft immer noch das Skript aus, aber

01:20:27.840 --> 01:20:42.600
das Skript macht nichts mehr. Echo 1, ah jetzt, okay, ja, was könnte das denn sein? Wir kürzen

01:20:42.600 --> 01:20:47.680
das mal ein bisschen ab, ich gucke einfach mal nach, was das für eine Docker Image ist,

01:20:47.680 --> 01:21:03.760
Dockerfile, es ist Alpine, okay, Alpine installiert man da, apk install, apk install, et, etcurl,

01:21:03.760 --> 01:21:15.960
jetzt muss ich, oh, das muss ich jetzt speichern, keine Ahnung, ob das jetzt funktioniert hat,

01:21:15.960 --> 01:21:22.160
das funktioniert so nicht, okay, keine Ahnung, aber es ist glaube ich schon ganz gut, kannst

01:21:22.160 --> 01:21:30.120
du mal die Java-Klasse zeigen? Kann ich die Java-Klasse zeigen? Ich gucke gerade noch

01:21:30.120 --> 01:21:45.760
was anderes, exec, was war das, minus it, und dann, sh, apk, etcurl, ah, das funktioniert

01:21:45.760 --> 01:21:54.560
nicht, okay, ne, curl ist doch drauf, dann hat das funktioniert, Leute, dann hat das

01:21:54.560 --> 01:22:01.560
funktioniert, die Ausgabe ist bloß nicht, okay, apk, remove curl, ne, wie aninstallt

01:22:01.560 --> 01:22:14.480
man was mit apk, das weiß ich doch aus dem Kopf nicht, apk, delete, apk minus help, dell,

01:22:14.480 --> 01:22:40.120
okay, also das, das funktioniert nicht so, wie ich mir das vorstelle hier, aber ich

01:22:40.120 --> 01:22:48.680
meine, man sieht's, man sieht's im Prinzip, na doch, apk, et sollte eigentlich was machen,

01:22:48.680 --> 01:23:03.800
echo eins, okay, mein Skript aufrufen funktioniert auch gar nicht mehr, das ist wirklich, das

01:23:03.800 --> 01:23:22.560
ist wirklich remote shell für Arme, remote shell für Arme, aber kann das sein, kann

01:23:22.560 --> 01:23:35.920
das sein, dass das mit dem apk, dass das irgendwelche, dass das hängt, aber guck mal, es hat funktioniert,

01:23:35.920 --> 01:23:40.480
hat curl wieder installiert, okay, es funktioniert auf jeden Fall, es funktioniert auf jeden

01:23:40.480 --> 01:23:46.600
Fall, das ist die, das ist wirklich remote shell komplett für Arme hier, aber funktioniert,

01:23:46.600 --> 01:23:52.080
so, die Java-Klasse, die ich hab, das kann ich jetzt mal ganz schnell zeigen, dann muss

01:23:52.080 --> 01:23:57.000
ich aber echt was essen, also, das ist eigentlich relativ simpel, ich hab das hier aus diesem

01:23:57.000 --> 01:24:04.560
Beitrag, guck mal, hier, ich poste den nochmal, aus dem Beitrag, und da gibt's einen Link

01:24:04.560 --> 01:24:14.520
zu diesem GitHub-Repo, und das hab ich gemacht, also, ich hab mir den Docker-Container gestartet

01:24:14.520 --> 01:24:22.240
von denen, ich hab den LDAP-Server installiert von denen, der unter der Haube wahrscheinlich

01:24:22.240 --> 01:24:32.080
nix anderes macht, wie ne Java-Klasse zusammenbauen, und dann nen shell exec zu machen, und dann

01:24:32.080 --> 01:24:43.240
schick ich an den Server nen curl mit einem base64-encodeden shell-Skript, und das shell-Skript,

01:24:43.240 --> 01:24:49.480
das ich encoded hab, ist das hier, das ist eine Endlosschleife, die per VGAT, es muss

01:24:49.480 --> 01:24:57.840
VGAT sein, weil curl ist auf dem Server nicht drauf, die per VGAT alle Sekunde bei einem

01:24:57.840 --> 01:25:04.440
Server von mir nachguckt, ob's dort eine Datei gibt, die Skript heißt, und diese Datei, die

01:25:04.440 --> 01:25:10.240
Skript heißt, lädt da sich runter und führt sie aus, jetzt wäre curl drauf, ja, also

01:25:10.240 --> 01:25:16.520
im Prinzip, das ist wirklich Remote-Shell für Arme, was wir jetzt hier gebaut haben,

01:25:16.520 --> 01:25:21.520
mein Server liefert den Skript aus, das ist der Skript hier unten, und das Skript postet

01:25:21.520 --> 01:25:31.760
an meinen Server zurück, quasi die Ausgabe der Shell-Commandos per VGAT wieder, also

01:25:31.760 --> 01:25:36.680
das ist wirklich Remote-Shell für Arme, aber es funktioniert, und das Beste ist, wir sind

01:25:36.680 --> 01:25:42.080
sogar Route auf dem Container, weil er halt unter Route läuft, normalerweise ist man halt

01:25:42.080 --> 01:25:48.160
der jeweilige User, als der die Java-Anwendung läuft, wenn man seine Java-Anwendung als Route

01:25:48.160 --> 01:25:55.400
laufen lässt, und dann anfällig für sowas ist, hat man halt gelitten, RIP, kann ich dazu

01:25:55.400 --> 01:26:05.440
nur sagen, aber das wird die ganzen Minecraft-Zoomer nicht jucken, ich kann euch sagen, wisst ihr,

01:26:05.440 --> 01:26:10.720
was die typische Minecraft-Zoomer-Generation Antwort ist, darf ich als Boomer jetzt sagen

01:26:10.720 --> 01:26:15.920
auf sowas, und du sagst, Leute, Leute, euer Minecraft-Server ist angreifbar, die Leute

01:26:15.920 --> 01:26:20.760
können auf eurem Minecraft-Server alles machen, so, und dann werden die Leute sagen, interessiert

01:26:20.760 --> 01:26:24.920
mich doch nicht, Facebook und Google haben doch eh schon alle meine da, und außerdem

01:26:24.920 --> 01:26:46.160
kenne ich die doch nicht, sollen sie mal machen, irgendwie sowas, so Leute, ähm, sehr weit

01:26:46.160 --> 01:26:49.600
her geholt, das glaube ich nicht, dass es sehr weit her geholt ist, das ist eines der

01:26:49.600 --> 01:26:54.360
Standard-Dinger, die ich schon öfters gehört habe, ich habe die Leute mal eine Zeit lang

01:26:54.360 --> 01:26:58.320
gefragt, so, und würdest du das deinen Eltern erzählen, nee, nee, auf gar keinen Fall,

01:26:58.320 --> 01:27:01.760
ja, und, warum willst du dann, dass das andere, also wenn du es schon nicht deinen Eltern

01:27:01.760 --> 01:27:07.000
erzählen würdest, deinen eigenen Eltern, warum gibst du das dann so leichtfertig den anderen,

01:27:07.000 --> 01:27:10.280
und dann ist die Antwort, ja, ich kenne die ja nicht, was interessiert mich denn, ob irgendein

01:27:10.280 --> 01:27:17.040
Typ in den USA, der vielleicht mein Zeug durchguckt, äh, sieht, dass, äh, ich gerne

01:27:17.040 --> 01:27:23.400
mir Hunde Porn auf Pornhub angucke oder so, das interessiert mich doch nicht, meine Eltern

01:27:23.400 --> 01:27:28.360
sollen es nicht wissen, aber, aber, dass, äh, dass, dass die das wissen, ist mir egal,

01:27:28.360 --> 01:27:35.320
das ist so eines der Standard, der Standard-Antworten, gibt ja Leute, die gucken sich sowas an, ich

01:27:35.320 --> 01:27:41.120
weiß nicht, ob es das gibt, aber ich bin mir relativ sicher, dass es das geben wird, es,

01:27:41.120 --> 01:27:44.760
es kann ja auch schon eine Nummer kleiner sein, ja, kann ja auch sein, dass die Leute einfach

01:27:44.760 --> 01:27:53.760
Dünnschiss haben und wollen, dass die ganze Welt das weiß, wobei, ey, Leute, mich, mich,

01:27:53.760 --> 01:27:58.600
ähm, echt nichts mehr wundert, ich hab letztens, das ist das letzte, was ich jetzt erzähle,

01:27:58.600 --> 01:28:03.320
da gehe ich wirklich essen, ich hab letztens nach den neuen Overwatch-Agents gesucht,

01:28:03.320 --> 01:28:07.600
nicht Overwatch, äh, Valorant-Agents gesucht, weil ich wissen wollte, was sich da neues

01:28:07.600 --> 01:28:11.360
getan hat, ich weiß, dass es beispielsweise irgend so ein Typ im Anzug jetzt gibt und

01:28:11.360 --> 01:28:16.000
sowas, äh, ein Kollege von mir hat, äh, Cosplay gemacht, äh, zu den neuen Agents,

01:28:16.000 --> 01:28:19.360
ich wollte einfach mal gucken, was es für neue Agents gibt, Leute, das war echt ein

01:28:19.360 --> 01:28:24.280
Fehler, ich hab in der Bildersuche, ich mein, ich hab Safe Search aus, wer, wer, wer braucht

01:28:24.280 --> 01:28:30.960
Safe Search, ich hab gesucht nach Valorant-Agents und was ich gefunden habe, hat mich echt

01:28:30.960 --> 01:28:37.320
ein wenig schockiert, ich hab, ich hab was, es war innerhalb der ersten, ersten Suchergebnisse,

01:28:37.320 --> 01:28:44.400
ich war nach Valorant-Agents und da war ein Bild drinne, D.Va aus Overwatch und, und Raze

01:28:44.400 --> 01:28:50.200
oder auch so, wie man die ausspricht, aus, aus Valorant, die es da miteinander getrieben

01:28:50.200 --> 01:28:58.360
haben und, und beide hatten sie riesig große Salamis, ich hab keine Ahnung, was das für

01:28:58.360 --> 01:29:04.960
ein Zeug ist, aber es war keine gute Idee, danach zu suchen, ja, also, du kannst davon

01:29:04.960 --> 01:29:13.120
ausgehen, wenn du daran denken kannst, dann gibt es das, egal was es ist, gibt Sachen,

01:29:13.120 --> 01:29:18.480
die wollte ich nicht sehen, aber, kann, kann ich nicht mehr ansiehen, ja, okay Leute, ich

01:29:18.480 --> 01:29:21.720
muss jetzt aber echt futtern, schön, dass ihr dabei gewesen seid, richtig krasser, neisser

01:29:21.720 --> 01:29:26.320
Hacker-Mensch, Trim hier, vielleicht mach ich da echt ein Video drüber, wir sehen uns,

01:29:26.320 --> 01:29:29.280
ich geh jetzt was futtern, bis denn, see you, gibt's noch irgendeinen Channel, den ich

01:29:29.280 --> 01:29:39.440
hosten kann, mal kurz gucken, ist der Lost am Start oder so, irgendeine Mann, das brauchen

01:29:39.440 --> 01:29:56.440
kleinere Zuschauer, wer ist denn hier gerade in der Science-Technologie-Twitch, am Start,

01:29:56.440 --> 01:30:01.480
oberhasi ist am Start, guck mal hier, mein Vorschau-Bild war ihr das beste gerade, habt

01:30:01.480 --> 01:30:14.480
ihr's gesehen, bestes Vorschau-Bild gerade, russische Hacker-Girls, sehr gut, nice, ne,

01:30:14.480 --> 01:30:27.360
keine Ahnung, Leute, ich geh jetzt futtern, ich hab mega Hunger, bis denn, see you.

