WEBVTT

00:00.000 --> 00:27.360
Erster, du hast ja gespoiler, das zählt nicht.

00:27.360 --> 00:33.440
Aber danke für den Sub, ich sehe es jetzt erst.

00:33.440 --> 00:36.000
Sag mal, ist meine Sub-Notification irgendwie kaputt?

00:36.000 --> 00:37.000
Zack.

00:37.000 --> 00:49.360
Kamp-Kamp-Kamp, eine Sub-Notification?

00:49.360 --> 00:50.360
Glaube nicht.

00:50.360 --> 00:51.360
Ist das kaputt?

00:51.360 --> 00:54.520
Na gut, ich sehe es ja im Chat auch.

00:54.520 --> 01:00.640
Aber die Musik ein bisschen leiser machen.

01:00.640 --> 01:12.080
In der Mitte des Bildschirms, nein, das ist nicht die Sub-Notification, das ist einfach

01:12.080 --> 01:13.080
nur so da.

01:13.080 --> 01:21.000
Jetzt könnte ich ja tubaten und könnte sagen, Leute, ihr müsst subscriben, weil die Sub-Notification

01:21.000 --> 01:22.000
ist kaputt.

01:22.000 --> 01:24.720
Aber ich glaube, die Sub-Notification ist wirklich kaputt.

01:24.720 --> 01:26.840
Weiß nicht warum.

01:26.840 --> 01:37.480
Ich könnte den Test-Sub machen, aber da müsste ich mich einloggen auf dem zweiten Rechner.

01:37.480 --> 01:40.600
Warte mal ausprobieren.

01:40.600 --> 01:46.440
Steamlabs einloggen, continue with Twitch.

01:46.440 --> 01:51.360
Die Sub-Notification ist kaputt, ne?

01:51.360 --> 01:54.200
Guck mal, die Sub-Notification ist kaputt.

01:54.200 --> 01:56.600
Ich glaube, Steamlabs hat gerade Probleme.

01:56.600 --> 02:04.000
Normalerweise würde hier die Sub-Notifications kommen, Follow und Sub-Notification.

02:04.000 --> 02:08.320
Okay, Sub-Notification kaputt.

02:08.320 --> 02:14.920
Gut, ich sehe es ja im Chat und danach gucke ich mal, was Sache ist.

02:14.920 --> 02:26.720
Steamlabs ist kaputt, deswegen gibt es auch keine Sub-Notifications.

02:26.720 --> 02:31.160
Leute, guckt mal, paint.

02:31.160 --> 02:32.160
Steamlabs ist kaputt.

02:32.160 --> 02:34.680
Okay, dann hoffe ich mal, das geht irgendwann wieder.

02:34.680 --> 02:43.440
Goldkeks gerade, Goldkeks gibt es ja ab einem Jahr, glaubst du gar schon.

02:43.440 --> 02:49.240
Steamlabs ist kaputt, ja gut, da können wir glaube ich mit leben.

02:49.240 --> 02:57.320
Also Leute, ich habe euch ja gestern versprochen, ich komme noch mal an und streame, ich habe

02:57.320 --> 03:02.320
es nicht gemacht, deswegen streamen wir heute.

03:02.320 --> 03:06.960
Soll ich euch mal erzählen, was wir heute machen?

03:06.960 --> 03:26.120
Es wird, kann ich euch jetzt schon sagen, es wird absolut Firefat-Time, ja, aber mit Postgres

03:26.120 --> 03:35.360
Text Search und nicht einfach nur Postgres Text Search, sondern mit einer Postgres Extension,

03:35.360 --> 03:41.480
dass wir mega schnell viel Cacks durchsuchen können, habe ich selbst noch nie verwendet,

03:41.480 --> 03:43.160
ich muss mal schauen.

03:43.160 --> 03:48.000
Wir testen erstmal die Suche, bevor wir das Auto komplett machen.

03:48.000 --> 03:54.520
Ich mache mal meine VM an, die braucht eh wieder Updates, 100 pro.

03:54.520 --> 04:03.000
Die Poggers VM muss eingeschaltet werden, aber dann bitte mit einem, ich mache überhaupt

04:03.000 --> 04:09.960
keinen Delay rein, direkt jeder Input wird instant an den Server gequeryt.

04:09.960 --> 04:13.000
Kein Delay, wo kommen wir denn da hin?

04:13.000 --> 04:20.640
Delay ist für Noobs, ich baue noch keine künstlichen Lacks ein bei mir in die Software.

04:20.640 --> 04:26.280
Mysterion, nicht wundern, die Sub-Notification ist gerade kaputt, weil something went terribly

04:26.280 --> 04:32.280
wrong bei Steamlabs, aber danke für den Sub, gut es haben viele gedodged, aber Brian hat

04:32.280 --> 04:33.280
Glück gehabt.

04:33.280 --> 04:43.360
Der Scam Train ist auch mal wieder am Start, ich mach mal kurz meine VM an, bis der Stream

04:43.360 --> 04:56.160
richtig angelaufen ist und wir machen mal Updates, weil ich glaube, wer weiß was das

04:56.160 --> 04:59.360
für eine Stadt ist, ich hab keine Ahnung, Bing Image of the Day, ist das New York?

04:59.360 --> 05:08.240
Das ist die Battlefield Map da unten, guck mal, das ist Manifest.

05:08.240 --> 05:14.960
Es könnte Frankfurt sein mit dem Messerturm, aber der Rest passt irgendwie nicht so wirklich

05:14.960 --> 05:21.280
zu Frankfurt, deswegen ist es auch eher New York als Frankfurt, der Rest ergibt überhaupt

05:21.280 --> 05:26.120
keinen Sinn für Frankfurt, nur dieses Gebäude hier.

05:26.120 --> 05:34.080
Freiheitsstatue, ach soll das hier die Freiheitsstatue sein, dann ist das tatsächlich New York.

05:34.080 --> 05:45.800
Ist egal, Bing Image of the Day, ich verwende Bing für nichts, außer für meinen Hintergrund.

05:45.800 --> 05:49.000
Restore, alles klar.

05:49.000 --> 05:59.160
So, wir müssen jetzt erstmal ab, guck mal, ich hab kaum noch Platz frei, MonkaS, ob das

05:59.160 --> 06:02.680
reicht, ob das reicht, dann müssen wir mal, dann bin ich gespannt.

06:02.680 --> 06:09.240
So, wir müssen jetzt mal ein paar Docker-Containers aufräumen, was ist denn das hier, alles weg,

06:09.240 --> 06:15.720
Docker-RM, bäm, bäm, bäm, gibt's nicht so ein Docker Clean All oder sowas, ist alles

06:15.720 --> 06:23.280
weg, alles weg, guck mal, was da noch drin ist, ist das für Speicherfrist, alles fort mit

06:23.280 --> 06:31.880
Q-Chat, Q-Chat wird gelöscht, Leute, gleich seid ihr weg und jetzt Docker-RME, gibt es

06:31.880 --> 06:40.760
da sowas wie Docker-RME All oder sowas, how to remove, ich will all, all remove, how to

06:40.760 --> 06:50.400
delete all local Docker-Images, okay, bäm, na gut, minus F für Force, machen wir vielleicht

06:50.400 --> 07:00.000
mal weg, gib ihm, ich brauch Speicherplatz, Docker-System prune, ah, Fivehead, Node-Modules

07:00.000 --> 07:04.080
ist schwarzes Loch, weißt du was, da reicht kein Speicherplatz der Welt für Node-Modules,

07:04.080 --> 07:11.080
kann eine MariaDB laufen, für was hatten wir denn, ach, für Nextcloud-Geschiss war das,

07:11.080 --> 07:25.040
jaja, noch mal, okay, Docker-Images, alles fort, gut, haben wir ein bisschen mehr Platz

07:25.040 --> 07:31.560
wieder, also, ich mach erst mal kurz Updates und dann erzähl ich euch, was ich machen will,

07:31.560 --> 07:38.920
es ist sogar indirekt für die Arbeit, aber es ist ein interessantes Thema, oh, soll ich

07:38.920 --> 07:43.680
das machen, soll ich mal einen Snapshot machen vorher, das ist der Grund, warum ich VMs verwende

07:43.680 --> 07:50.240
für sowas, Snapshot-Manager, also wir löschen erst mal den alten Snapshot, der braucht

07:50.240 --> 08:00.920
mit Sicherheit unnötig viel Speicherplatz, oh, oh, oh, der hätte es nicht machen sollen,

08:00.920 --> 08:10.640
dauert erst mal, gut, dann kann ich euch erzählen, was ich machen will, richtig Popmusik, okay,

08:10.640 --> 08:23.520
ich überleg gerade, ich müsste euch das an einem Beispiel zeigen, also, Monitoring, ich

08:23.520 --> 08:28.240
meine nicht diesen komischen Alien-Film, also, ich weiß nicht, wer von euch Prometheus als

08:28.240 --> 08:33.960
Monitoring Software kennt, wahrscheinlich die meisten, weil ich weiß ja, mein Chat ist

08:33.960 --> 08:41.480
high IQ, hoch Big Brain, dementsprechend kennt der Chat das natürlich, und Prometheus generiert

08:41.480 --> 08:50.480
im Monitoring ganz, ganz viele Labels und Values, wo man dann filtern kann damit, so,

08:50.480 --> 08:59.440
das, zwei Sachen, also, wie gesagt, ist für die Arbeit, ich wollte es einfach mal ausprobieren,

08:59.440 --> 09:04.560
weil ich es interessant finde, und zwar, ich hab mir überlegt, nee, ich muss was anderes

09:04.560 --> 09:10.520
erzählen, also, unser Support, unser Support auf der Arbeit, der muss ab und zu mal, wenn

09:10.520 --> 09:16.120
Systeme ausgeschaltet werden oder absichtlich runtergefahren werden, wegen Wartungsarbeiten

09:16.120 --> 09:22.480
oder sonst was, müssen die für das Monitoring im Alert-Manager, Alert-Manager, ich weiß

09:22.480 --> 09:28.960
ja, ob es da eine Demo gibt, ich zeig euch das mal, Demo-Alert-Manager, so sieht das

09:28.960 --> 09:33.960
Ding aus, nicht sonderlich hübsch, und da kann man Silence eintragen, also, sprich,

09:33.960 --> 09:37.720
wenn man weiß, es schaltet gleich jemand den Server aus und ich will nicht irgendwelche

09:37.720 --> 09:47.240
SMS an irgendwelche Manager schicken, die kriegen übrigens bei uns noch SMS, weiß

09:47.240 --> 09:54.040
auch nicht warum, oh, mein, der, der, der, Kekwe ist zu leise, bei uns kriegen die Manager

09:54.040 --> 10:05.040
noch SMS, dazu kann man wirklich nur sagen, naja, und wenn man das nicht will, wenn man

10:05.040 --> 10:14.160
das nicht will, dann trägt man das System hier ein, das Dumme ist daran, dass das ein

10:14.160 --> 10:20.560
äußerst rudimentäres Interface ist, guck mal, hier muss man den UTC eintragen und so

10:20.560 --> 10:25.640
einen komischen Timestamp, man hat keinen Date-Time-Picker und nichts, und hier unten

10:25.640 --> 10:30.640
beim Vervollständigen mit Hostname und so hat man auch keinerlei Autocompletion, so,

10:30.640 --> 10:36.960
und da hab ich mir gedacht, wisst ihr was, Leute, ich bau uns einfach ein kleines Web-Interface,

10:36.960 --> 10:45.920
was eben Date-Time-Picker hat für hier oben und Autocomplete für Hostnames und so was,

10:45.920 --> 10:51.080
ist im Prinzip auch gar kein Ding, gar nichts Großes, aber ihr kennt mich, ja, ich übertreibs

10:51.080 --> 10:58.640
bei sowas dann immer, und ich hab mal einen Export gemacht von unseren Prometheus-Daten,

10:58.640 --> 11:07.040
Labels und Values, und wir haben ungefähr 1200, mach das doch über Grafana, äh, wie

11:07.040 --> 11:11.280
willst du denn in Grafana, also man, du kannst das bestimmt über Umweg im Grafana machen,

11:11.280 --> 11:17.200
aber Silences setzen im Grafana, das, ähm, wüsste ich jetzt nicht, wie man da ein schönes

11:17.200 --> 11:22.040
GUI für bauen soll, mit Date-Picker und allem.

11:22.040 --> 11:37.000
Die Auswertung, die Ansichter, die kannst du im Grafana machen, ja, zumindest ist das

11:37.000 --> 11:41.640
nur der Aufhänger, the new unified alerting system, das kenn ich gar nicht, zeig mal,

11:41.640 --> 11:45.600
vielleicht lohnt sich das ja tatsächlich mal anzugucken, the new unified alerting system

11:45.600 --> 11:52.760
for Grafana, everything you need to know, ja, Moment, das kann ich, ne, ne, ne, ne, das

11:52.760 --> 11:57.760
ist die gleiche Geschichte, warum man Grafana nicht fürs alerting verwendet, sondern Alertmanager,

11:57.760 --> 12:01.920
weil du erstmal irgendeinen Graf brauchst und dann auf einzelne Werte von diesem Graf

12:01.920 --> 12:10.480
alerten kannst, und nicht irgendwelche Filter bauen wie im Alertmanager, und wie man da

12:10.480 --> 12:17.240
jetzt schönes Silences einrichtet, keine Ahnung, ist auf jeden Fall nicht schlecht zu

12:17.240 --> 12:24.040
wissen, zumindest ist das Ganze nur der Aufhänger, so, und ihr wisst, ich übertreib's da immer

12:24.040 --> 12:28.760
ein bisschen, ich hab jetzt mal gecheckt, was wir für einen Export haben, also wie groß

12:28.760 --> 12:35.400
das, wie groß das Ganze ist, der nutzt den Alertmanager, das ist auch nicht schlecht,

12:35.400 --> 12:45.200
muss man sich mal angucken, all alerting rules, jaja, muss man sich mal angucken, ach guck mal,

12:45.200 --> 12:55.280
da oben gibt's Silences, das ist interessant, das ist gut zu wissen, das wusste ich nicht,

12:55.280 --> 13:08.760
dass das gibt, warte mal, gibt's da, gibt's da einen Screenshot von, vielleicht, mal angucken

13:08.760 --> 13:17.840
kann, ob mir das gefällt, create alert rule, ja, hatte keiner Bock das anzuklicken hier

13:17.840 --> 13:22.760
vorher, das ist ja der nächste Alertmanager, zumindest ist auch egal, das ist ja letztendlich

13:22.760 --> 13:28.200
nur der Aufhänger dafür, was wir heute machen, und zwar, hab ich mir gedacht, ich übertreib's

13:28.200 --> 13:36.960
und ich mach Autocomplete für unsere Labels, und die Sache ist die, ich hab mal geguckt,

13:36.960 --> 13:43.520
wir haben über 1000 Labels, Samuel, danke für den Zeit, übrigens nicht wundern, die

13:43.520 --> 13:54.920
subscription notifications sind kaputt, weil Streamlabs kaputt ist, so, und wir haben 1200

13:54.920 --> 14:02.440
Labels, also mindestens, mindestens, über 1200 Labels, und keine Ahnung, wie viele

14:02.440 --> 14:14.520
values im Durchschnitt pro Label, das heißt, wir haben ziemlich, ziemlich viel Text, so,

14:14.520 --> 14:19.360
warum hab ich eigentlich noch Cap und so'n Scheiß auf, so, und jetzt hab ich mir, was

14:19.360 --> 14:24.320
hab ich hier noch für Gedöns auf, Alter, so, zumindest hab ich mir jetzt, hab ich mir

14:24.320 --> 14:30.000
jetzt was überlegt, und zwar, die erste Variante ist, man könnte das in memory durchsuchen,

14:30.000 --> 14:36.320
aber ein bisschen RAM-intensiv, stellt euch mal vor, man müsste sich quasi Strings fürs

14:36.320 --> 14:42.560
Autocomplete generieren, aus 1200 Labels mit irgendwie im Durchschnitt, was weiß ich,

14:42.560 --> 14:50.360
sag ich jetzt einfach mal, 200, 300 values, das ist ein bisschen viel, und ich wollte

14:50.360 --> 14:56.640
mich schon immer mal mit Postgres Text Search beschäftigen, deswegen hab ich mir gedacht,

14:56.640 --> 15:01.640
wir starten einfach mal in Postgres Container, generieren uns Fake-Daten, die ein bisschen

15:01.640 --> 15:10.560
so aussehen wie Prometheus Label Value Kombination, und pumpen die in die Datenbank rein und durchsuchen

15:10.560 --> 15:14.920
die und gucken, wie schnell wir's kriegen, und wenn wir was haben, was halbweg schnell

15:14.920 --> 15:21.080
ist, dann bauen wir ins Weltautocomplete dafür, so, ai ai ai, guckt euch das mal an, der Snapshot,

15:21.080 --> 15:27.360
was hab ich denn da gemacht, kannst du ein Beispiel geben, warum man da so viele Tags

15:27.360 --> 15:31.960
und Values nimmt, ja gut, vieles, ist er jetzt einfach fertig geworden, in dem Moment, wo

15:31.960 --> 15:40.280
ich gesagt hab, er braucht so lang, Keg-Wait, ok, dann können wir Update machen, die Checks

15:40.280 --> 15:44.280
exportieren standardmäßig schon, also Metriken heißt das ja bei Prometheus, die exportieren

15:44.280 --> 15:48.360
standardmäßig schon ziemlich viel Zeug, die exportieren die Instanz, worauf es läuft,

15:48.360 --> 15:53.840
welcher Check das ganze ausführt, welcher House davon betroffen ist, was auch immer,

15:53.840 --> 16:10.600
hier, Prometheus Labels, gibt's bestimmt ein paar Bildchen von, Instance, ja, hier siehst

16:10.600 --> 16:17.480
du so ein paar Dinger, Endpoints, also, das kann durchaus sein, dass so eine Metrik mal

16:17.480 --> 16:22.200
irgendwie acht, neun Labels exportiert und sonst was, das ist, so ist das halt aufgebaut

16:22.200 --> 16:27.720
und nach diesen Labels und Values filterst du in Prometheus am Ende, wenn du was finden

16:27.720 --> 16:32.040
willst, also Prometheus geht ja ein bisschen weg davon, dass du sagst, ah, ich habe vier

16:32.040 --> 16:36.960
Houses, die überwach ich, ne, du hast eine x-beliebige Anzahl an Houses, die Metriken

16:36.960 --> 16:42.120
exportieren, die Prometheus einsammelt, letztendlich in Inventory irgendwo brauchst du schon und

16:42.120 --> 16:45.720
dann filterst du, dann sagst du nicht, ich will von Host A was, von Host B und von Host

16:45.720 --> 16:53.480
D, sondern du sagst, ich will die Metrik, keine Ahnung, Heap Space und ich filter nach

16:53.480 --> 17:01.760
dem Label Environment Life oder sowas und dann kriegst du von allen Servern, die exportieren,

17:01.760 --> 17:07.160
die Metriken, wie viel Speicher sie gerade verbrauchen, die produktiv sind, das war so

17:07.160 --> 17:11.360
der Hintergedanke der ganzen Sache, deswegen wird da ziemlich viel mit Label und Values

17:11.360 --> 17:15.400
um sich geschmissen und bei uns ist auch Kubernetes Zeug drin, das legt der Gefühl fünf Millionen

17:15.400 --> 17:22.760
Values und Keys an im Prometheus, wenn es gecrawlt wird, zum Beispiel, ich beantworte

17:22.760 --> 17:30.040
die Sachen im Chat gleich, zum Beispiel gibt es einen Go-Exporter Prometheus, mal gucken,

17:30.040 --> 17:40.800
ob es es da ein schönes Beispiel für gibt, ja, so sieht dann so ein Export aus, der eingesammelt

17:40.800 --> 17:47.360
wird, allein schon wenn du eine Java oder eine Go-Anwendung, ein Node-Exporter für

17:47.360 --> 17:54.320
verwendest, also so heißen die Dinger für Prometheus, also ich kann ja mal schreiben,

17:54.320 --> 17:59.360
Node-Exporter, ich kann ja wirklich nicht schreiben, allein schon so eine Go-Anwendung exportiert

17:59.360 --> 18:08.560
irgendwie 80 verschiedene Metriken oder sowas, hier, ja hier sieht man es zum Beispiel, guck,

18:08.560 --> 18:12.520
das sind die einzelnen Metriken, da hinten kannst du da noch Filter nach irgendwelchen

18:12.520 --> 18:25.000
Labels und sonst was, da kommt schon ein bisschen was zusammen, also ehrlich gesagt, aus erster

18:25.000 --> 18:30.160
Hand nicht, aber ich gehe davon aus, dass Elektroniker halt einfach deutlich mehr, wie

18:30.160 --> 18:35.200
soll ich sagen, Elektroniker ist, dass du genau sowas hier in der Richtung, dass du

18:35.200 --> 18:41.680
an irgendwelchen Telefonanlagen machst, eventuell vielleicht auch an irgendwelchen Hochspannungsdingern

18:41.680 --> 18:46.400
oder so, wenn es da Technik gibt, die das bedarf, keine Ahnung, also ich könnte mir vorstellen,

18:46.400 --> 18:55.440
das ist deutlich mehr Elektronik einfach als beim Fachinformatiker, ja, also ich würde

18:55.440 --> 19:11.400
auch sagen, Feasy ist auf jeden Fall das Richtige. Das erste, was du dir als IT-System-Elektroniker

19:11.400 --> 19:20.120
kaufst, ist wahrscheinlich ein Knipex und Vera, wie heißt das Ding, VDE-Set, wie heißen

19:20.120 --> 19:26.200
diese Dinger, die so gelb und rot sind, die Zangen und Schraubendreher, die so gelb und

19:26.200 --> 19:33.920
rot sind. Worts auf YouTube-Shot, Pog, aber was ich hier mache, ist ganz anders als auf

19:33.920 --> 19:43.280
YouTube, sage ich dir gleich. So, ok, jetzt habe ich euch erzählt, was wir machen und

19:43.280 --> 19:47.120
jetzt gucke ich mal, auch guck mal, mein System hat geupdatet, nice, wir haben es geschafft.

19:47.120 --> 20:07.680
So, machen wir nochmal die ganzen Pipes, was ist Pipes, Pipes, Pipes-RS, was ist Pipes-RS,

20:07.680 --> 20:21.800
ist klar, very important, das braucht man. Das ist wichtig gewesen, das ist auch wichtig,

20:21.800 --> 20:25.720
dass wir das updaten, stellt euch mal vor, wir würden Pipes nicht updaten, übrigens

20:25.720 --> 20:31.640
ich benutze noch Postman und nicht Postwoman, nicht dass jetzt gleich jemand getriggert ist,

20:31.640 --> 20:37.600
gibt es ja beides, gibt es ja beides. Irgendwelche Leute haben sich gedacht, die Software Postman

20:37.600 --> 20:46.360
ist nicht diverse genug und haben Postwoman ins Leben gerufen, was nicht alles gibt. Als

20:46.360 --> 20:52.080
nächstes kommt noch einer und macht einen Fork davon und das ist dann Post-MWD oder

20:52.080 --> 20:58.960
sowas, kann ich mir alles vorstellen. Leute, habe ich euch erzählt, dass wir auf der Arbeit

20:58.960 --> 21:13.920
jetzt auch umstellen von Master-Pranche auf Main-Pranche, die undiversen Zeiten sind vorbei,

21:13.920 --> 21:27.920
jetzt ist die Welt in Ordnung, jetzt ist Main. Was macht das Ding da eigentlich gerade? Ah,

21:27.920 --> 21:35.600
Rust. Moment mal, sehe ich das richtig? Der lädt sich gerade Rust runter, um einen Pipes-Bildschirmschoner

21:35.600 --> 21:41.440
from scratch kompilieren zu können. Wirklich. Ich glaube, ich sollte den Mist deinstallieren,

21:41.440 --> 21:51.360
bevor ich mal ein Update laufen lasse. Ich installiere Rust runtime, Rust dependencies,

21:51.360 --> 21:56.320
libraries, nur um einen fucking Bildschirmschoner zu kompilieren. Genau, das habe ich gebraucht,

21:56.320 --> 22:08.960
richtig wichtig. Ja, ob Physik oder Anwendungsentwicklung ist eigentlich relativ egal,

22:08.960 --> 22:16.960
wichtig ist, was du am Ende kannst. Also, so als Admin, der nur Windows-DNS zwei Sachen

22:16.960 --> 22:22.960
klicken kann, ist schlecht, aber gerade wenn du dich im Cloud-Umfeld auskennst, ist das

22:22.960 --> 22:32.400
zurzeit wahnsinnig begehrt und beliebt. Also, sei es von Server-Automatisierung, irgendwas

22:32.400 --> 22:39.040
von Ansible Terraform, bis Ahnung von Kubernetes-Zeug, bis Ahnung von AWS und Azure und wie

22:39.040 --> 22:48.560
heißt das andere? Wie heißt das Google-Ding? GCS, glaube ich. Und Continuous Integration-Geschichten

22:48.560 --> 22:53.600
und Build-Server und GitHub. GitHub ist auch sehr beliebt, GitHub Actions auf GitHub. Also,

22:53.600 --> 23:02.400
wenn du dich mit so Cloud-Geschichten auskennst, das ist sehr begehrt zurzeit. So, wir haben

23:02.400 --> 23:09.520
alles geupdatet. Machen wir noch mal kurz die ganzen Jetbrains-Sachen aktuell, dann haben

23:09.520 --> 23:14.160
wir genug der Update-Org hier jetzt. Leute, ich glaube, ich lösche einfach mal Pakete.

23:14.160 --> 23:19.360
Oh, wir haben schon alles geupdatet. Ich mache mal gerade mal hier pack-cache-r. Wie ging

23:19.360 --> 23:25.680
das pack-cache-r? Komm mal hier einfach 10 Gigabyte frei. Alte Pakete gelöscht, 10 Gigabyte,

23:25.680 --> 23:35.920
bam. So, jetzt haben wir genug Platz. Also, wir starten uns mal in Postgres-Docker. Docker,

23:35.920 --> 23:43.080
Postgres. In welchem Lager seid ihr eigentlich? Sagt ihr es ist Postgres oder sagt ihr es

23:43.080 --> 23:49.800
ist Postgre SQL? Gibt es ja auch manche, die sagen Postgre, wobei ich mir ziemlich sicher

23:49.800 --> 24:07.360
bin, dass es offiziell Postgres heißt. Ich bin auch im Postgres-Lager, ja. Was? Minus

24:07.360 --> 24:25.480
SCC, löscht alte Auer-Sachen, ist auch gut. Jawoll, auch löschen. Jaja. S. S. Hat es

24:25.480 --> 24:37.280
jetzt was gebracht? Jeder Buchstabe wird betont. Also, ist es dann quasi P-O-S-T oder was?

24:37.280 --> 24:48.400
P-O-S-T-G-R-S-Q-L oder was? Das klingt typisch, das klingt richtig typisch deutsch, diese

24:48.400 --> 24:54.440
Aussprache. Ich spiele nebenbei so ein bisschen MMO und ich finde das witzig, die machen

24:54.440 --> 24:58.800
sich da alle drüber lustig, wenn Deutsche nein sagen. Irgendwie ist das so schon international

24:58.800 --> 25:03.320
voll das Meme geworden. Sobald ein Deutscher, sobald die hören, irgendwie, dass er deutsch

25:03.320 --> 25:09.480
ist, dann sagen sie alle nein. Man könnte sich jetzt natürlich da drüber aufregen und

25:09.480 --> 25:15.280
sagen, oh nein, das muss Rassismus, Diskriminierung oder sonst was sein. Ganz ehrlich, ich kann

25:15.280 --> 25:20.840
da drüber lachen, genauso wie die Griechen. Die Griechen, da sind total viele Griechen

25:20.840 --> 25:27.240
am Start aus irgendwelchen Gründen. Jedes zweite Wort ist malacker. Es ist schlimm,

25:27.240 --> 25:32.560
wenn du in diesen Discord reinkommst, wo die abends PvP machen in diesem MMO, was ich gerade

25:32.560 --> 25:37.640
zeigte. Jedes zweite Wort ist malacker, malacker, malacker. Die hören gar nicht mal auf. Die

25:37.640 --> 25:44.360
Griechen sind permanent am Fluchen. Wobei das, wobei das ja so ein hab ich gelernt, hab

25:44.360 --> 25:53.480
ich gelernt, das ist so ein universal, universal Wort in Griechisch. Malacker kann als Beleidigung

25:53.480 --> 25:57.760
verwendet worden, das heißt ja sowas wie Wichser, aber du kannst es auch für sowas

25:57.760 --> 26:04.880
wie Alter oder Kollege oder so verwenden. Das ist glaube ich so das griechische Altswerkwort

26:04.880 --> 26:12.840
malacker. Ist das so eine Erkrankung wie Typen, die hinter jeden Satz Alter packen? Ja so

26:12.840 --> 26:22.240
ungefähr, sowas ist das ja. Danke für die Subs Leute, ich höre heute keine Notifications,

26:22.240 --> 26:31.480
weil Steamlabs kaputt ist. Hi, es ist Juhi, 25 Monate, Richtspoggers. Welches MMO? Dark

26:31.480 --> 26:44.280
Edge of Camelot auf Celestius R4R. Ja. Das ist aber nur was für Leute, die auf Oldschool

26:44.280 --> 26:54.640
MMOs stehen. Ist aber lustig, wenn man abends da mit 100 Leuten durchs PvP Gebiet zergt.

26:54.640 --> 27:01.120
Was würdest du sagen, was ich alles IT-Systemelektroniker, der in den IT Support, du willst wirklich

27:01.120 --> 27:07.320
in den IT Support? Bist du dir da, bist du dir sicher, ja? 8Kill, danke für den Sub,

27:07.320 --> 27:12.560
für den Sub. Für den Support musst du alles, musst du nichts an Programmiersprachen lernen,

27:12.560 --> 27:16.040
aber überleg dir gut, ob du in den Support willst, überleg dir wirklich sehr gut, ob

27:16.040 --> 27:22.000
du in den Support willst. Ich kann es niemandem empfehlen, in den Support zu gehen. Support

27:22.000 --> 27:30.320
ist nervig, du hast den ganzen Tag mit nervigen Leuten zu tun. Die ist auch nicht zu schätzen

27:30.320 --> 27:44.520
wissen, was du machst. Ja, PowerShell, wenn es Windows ist, aber geh nicht in den Support.

27:44.520 --> 27:52.760
Hast du schon mal, was? PouchDB, was für ein Ding? Pouch, ich kenne CouchDB, ich kann

27:52.760 --> 28:03.960
es nicht mal schreiben. PouchDB, nee, Pouch, Pouch. Ah man, Firefox würde geupdatet, ok,

28:03.960 --> 28:15.040
Restart. PouchDB. JavaScript Datenbank desyncht, nein danke, Kegwaid.

28:15.040 --> 28:30.480
Das ist eine Kombination, die muss nicht sein, oder? Man muss es nicht übertreiben mit JavaScript.

28:30.480 --> 28:45.280
So, also wir starten jetzt erstmal ein Postgres Docker Container. So, ist das, Official Container,

28:45.280 --> 28:56.800
hier. Jawoll, das brauchen wir. Pass auf Leute, Achtung, Flashbang. Ok, ich machs wieder

28:56.800 --> 29:08.440
aus. Na gut, auf Node.js Basis, was denn sonst? Ok, haben wir schon Temp? Moment, wie viele

29:08.440 --> 29:15.960
Temp Verzeichnisse haben wir? Temp, Temp 2, Temp Keg W und Temp Lull. Ich würde sagen,

29:15.960 --> 29:19.320
wir gehen heute einfach mal nur in Temp. Mir ist es heute am ehesten nach Temp und nicht

29:19.320 --> 29:24.520
nach Temp Lull. Ah guck mal, in Temp haben wir noch einen Temp. Alter, was ist das alles?

29:24.520 --> 29:32.600
Was hab ich da gemacht? Was liegt da rum? Oh, mkdir, pg, da, nächster, komm rein. Also

29:32.600 --> 29:39.080
Docker, run, name, some Postgres, perfekter Name, Postgres, Password, my secret Password.

29:39.080 --> 29:46.080
Konnte man dem Ding nicht irgendwie beibringen, jegliche Authentifizierung auszuschalten?

29:46.080 --> 29:57.640
Wer braucht Authentifizierung? Thrust, Postgres, Host, Auth. Nee, ich will alles erlauben,

29:57.640 --> 30:03.080
ich will alles erlauben. Kann man das, vielleicht lässt man das einfach weg und gut ist. So

30:03.080 --> 30:07.440
und nach dem Stoppen, nicht dass ich wieder so ein Problem habe, löschen wir das ganze.

30:07.440 --> 30:12.520
Wir können es auf Fullscreen laufen lassen, auf gehts. Wäre mal für Temp, Temp Lull 2,

30:12.520 --> 30:16.840
ja, können wir auch machen. Als nächstes dann. Ach, Quatsch, ich wollte noch Laufwerke

30:16.840 --> 30:26.640
mappen, ich dab. Ah, oh, was jetzt? Fail to create endpoint, network bridge failed, operation

30:26.640 --> 30:31.840
not sup, ah, ich muss neu starten, da war bestimmt ein kernel update dabei, beim, beim,

30:31.840 --> 30:45.840
ja, ja, da war ein kernel update dabei, das war Reboot. Reboot, ein Gatschi Bus, warum

30:45.840 --> 30:57.000
auch immer, hat damit überhaupt nichts zu tun, am Hauptsache ein Gatschi Bus. So, Firefox,

30:57.000 --> 31:07.400
proben wir mal Temp, pg, docker, so darf ich jetzt, oh, failed, error, weil, uninitialized

31:07.400 --> 31:15.440
and super user password, you must specify postgres password, oh, you may also use postgres,

31:15.440 --> 31:27.360
ja, trust, ich truste allem, ich truste komplett, huge, huge thrusters, ah, funktioniert, siehste,

31:27.360 --> 31:38.640
ganz einfach, docker, ps, port, 5432, telnet, localhost, 5432, geht alles nein, weil, weil

31:38.640 --> 31:47.880
ich den port nicht weitergeleitet hab, äh, minus p, 5432, 5432, sollte ich sonst noch

31:47.880 --> 31:54.320
irgendwas machen, lass mal kurz, äh, überlegen, also port weiterleiten, verzeichnen sollte

31:54.320 --> 32:04.960
ich noch irgendwie mappen, ne, äh, wie ging das, minus v, temp, pg, mkdir data oder sowas,

32:04.960 --> 32:10.160
ich, ich, ich map da einfach jetzt den kompletten, den kompletten Container rein, gut ist, ne,

32:10.160 --> 32:17.640
geht nicht. Gibt das irgendwie die Möglichkeit, wie man den kompletten Container mappen kann?

32:17.640 --> 32:35.680
Äh, Moment, mount, mount, hier, custom, var, lib, postgres, äh, data, pg, data, dahin,

32:35.680 --> 32:45.080
jetzt, ah, yes, excellent, temp, so, hier haben wir unsere Datenbank, da ist es ja noch

32:45.080 --> 32:49.960
keine Datenbank drinnen, aber ich sollte mich jetzt mal connecten können, ja, funktioniert,

32:49.960 --> 32:59.240
gut, wunderbar, muss mal kurz die Musik ein bisschen leiser machen, wobei, die passt

32:59.240 --> 33:12.000
eigentlich von der Lautstärke, ist das Mumu Farm, ist das Mumu Farm, Mumu Farm, Bässe,

33:12.000 --> 33:29.080
excellent, ok weiter, ok, also wir haben eine Datenbank am Start und jetzt müssen wir gucken,

33:29.080 --> 33:34.480
so ganz ahnungslos bin ich nicht, weil ich habe einen Blogpost gefunden, die das erklären

33:34.480 --> 33:44.920
mit Textsuche und zwar, den hier, der Blogpost ist allerdings von 2011, so, richtig, aber

33:44.920 --> 33:48.880
wenn das mal nicht ein Hacker Man Sieben ist für den Blog, dann weiß ich auch nicht,

33:48.880 --> 34:00.200
der erklärt, wie man das, wie man das einrichtet, ja, Datenbank Magic, wichtig ist wohl, dass

34:00.200 --> 34:05.160
man diese, also es gibt, so wie ich das verstanden habe, es gibt zwei Varianten, oder es gibt

34:05.160 --> 34:09.840
drei Varianten, drei Varianten, ich habe da gestern so mal was zugelesen, es gibt wohl

34:09.840 --> 34:15.640
drei Varianten, wie man Textsuche in Postgres machen kann, es gibt die Noob Variante, das

34:15.640 --> 34:23.560
ist, ne, das ist immer noch aktuell hier, das ist nur die erste Variante davon, die

34:23.560 --> 34:28.760
ist mittlerweile 10 Jahre lang verbessert worden, das funktioniert immer noch, theoretisch sagt

34:28.760 --> 34:36.640
man zumindest GitHub, also man kann die Noob Variante machen, man kann sagen, hier, man

34:36.640 --> 34:44.040
kann sagen, select, select, Sternchen from test, where test is like, und dann ist das

34:44.040 --> 34:52.920
standardmäßig, ohne dass man irgendwas aktiviert, einfach linear durchsuchen, so, ja, Potman

34:52.920 --> 34:57.280
kenne ich, haben wir auf der Arbeit am Start, hat aber auch so seine Tücken an den Stellen,

34:57.280 --> 35:03.800
dass es sich nicht so verhält, wie Docker, so, das ist die Noob Variante, das Problem

35:03.800 --> 35:08.480
ist nur, das ist slow as fuck, ich glaube, das sieht man in seinen Tests hier auch, guck

35:08.480 --> 35:13.960
mal, 2,6 Sekunden zum Durchsuchen, dann gibt es die nächste Variante, dann gibt es Postgres

35:13.960 --> 35:21.960
FTS, Fulltext Search, Fulltext Search ist aber für mich nicht das Richtige, weil, wer

35:21.960 --> 35:30.680
ist schlau und weiß, auf was sich das Full in Fulltext Search bezieht, Hi IQ Warning,

35:30.680 --> 35:53.700
auf was bezieht sich das Full, in der Regel zumindest, Weirdchamp, das keiner weiß, nein,

35:53.700 --> 36:00.800
das Full bezieht sich auf ganze Wörter, Fulltext Search, unabhängig von Postgres, das Full

36:00.800 --> 36:07.040
bezieht sich darauf, dass es um komplette Wörter geht, also was du in der Fulltext Search nicht

36:07.040 --> 36:18.560
machen kannst, so ohne weiteres, ist sowas hier, da geht es um ganze Wörter, deswegen

36:18.560 --> 36:24.440
gibt es in Postgres ein Addon seit 2011, das ist mittlerweile standardmäßig dabei, das

36:24.440 --> 36:28.920
muss man nur für die jeweilige Datenpack aktivieren, gibt es nämlich ein Addon und

36:28.920 --> 36:41.720
das nennt sich PG Triggum und mit PG Triggum, was für Tree Cramps oder sowas steht, kann

36:41.720 --> 36:49.200
man Substrings suchen, da kann ich nämlich sowas machen, ich suche nach Gag irgendwo,

36:49.200 --> 36:54.720
egal was da vorkommt, egal was dahinter kommt, soweit die Theorie, benutzt habe ich es noch

36:54.720 --> 37:00.560
nicht, wir werden jetzt folgendes machen, wir legen jetzt mal eine neue Web Anwendung

37:00.560 --> 37:20.000
an und dann machen wir es einmal, suchen wir einmal mit der herkömmlichen, ihr wisst

37:20.000 --> 37:26.080
genau, dass ich einen, ihr wisst, dass ich einen Lizenzkey habe, oder? Ihr wisst, dass

37:26.080 --> 37:30.640
ich einen Lizenzkey habe, ich kann es beweisen, dass ich einen Lizenzkey habe, guck, ich habe

37:30.640 --> 37:36.360
einen Lizenzkey, ich habe diesen Lizenzkey aber nur nicht in meinem Leidungs-VM drinnen,

37:36.360 --> 37:45.080
guck ich habe einen Lizenzkey, Help About, ja, Subscription is active, Licensed to Max

37:45.080 --> 37:57.360
ja, ich habe einen Key, so, ich habe den Key aber nicht in der VM, das heißt, ich habe

37:57.360 --> 38:01.040
den Kram bezahlt, bevor jetzt irgendjemand auf die Idee kommt, ich würde hier komische

38:01.040 --> 38:16.440
Sachen machen.

38:16.440 --> 38:45.280
So, ich habe mal schnell neu installiert.

38:45.280 --> 39:01.320
Also, Start Trial, die sind high IQ geworden, Alter, die sind high IQ geworden, man kann

39:01.320 --> 39:10.920
nicht mehr einfach seinen Key löschen und es funktioniert wieder, Mist, Login, ich weiß

39:10.920 --> 39:17.560
mein Login aus dem Kopf nicht, ok, ich gucke mal, ob das hier drinnen steht, Login, ich

39:17.560 --> 39:20.120
muss hier mal den Keypass gucken, ich glaube nicht, ich habe nämlich den Account nicht

39:20.120 --> 39:30.400
hier, JetBrains, nein, ich habe den Account nicht hier, Rider, den habe ich bei mir auf

39:30.400 --> 39:42.320
dem Keypass drinnen, aber nicht hier, na super, Moment, man muss für die Trial sich log innen,

39:42.320 --> 39:54.760
wirklich, das ist jetzt neu, dass man sich einloggen muss für die Trial, ok, dann machen

39:54.760 --> 40:01.560
wir uns eben ein JetBrains-Account, nein, nicht wegen, machen wir uns ein JetBrains-Fake-Account,

40:01.560 --> 40:11.160
Login, JetBrains, ich habe meinen Key nicht hier, ok, ich suche mal meine Mails, ich suche

40:11.160 --> 40:35.280
mal meine Mails, JetBrains, unangenehm, ja, JetBrains, JetBrains, dumme Werbung, 2015,

40:35.280 --> 40:42.520
das kann doch gar nicht, achso, ich muss global suchen, JetBrains, ich habe das All Desktop

40:42.520 --> 40:53.080
Pack, sag mal, warum ist die Thunderbird-Suche eigentlich schlechter geworden, im Vergleich

40:53.080 --> 41:07.840
zu früher, ok, ich habe, please follow the link, Software Activation, All Products Pack,

41:07.840 --> 41:28.320
All Assets, ok, jetzt muss ich mich einloggen, fuck man, keine Ahnung, License-Certificate,

41:28.320 --> 41:33.200
ok, wir machen uns ein Fake-JetBrains-Account, was anderes fällt mir nicht ein jetzt, ich

41:33.200 --> 41:49.600
habe meinen Account nicht hier, also, E-Mail, ja, perfekt, E-Mail, 10-Minute-Mail, ja, das

41:49.600 --> 42:09.840
ist das, das ist meine richtig echte E-Mail, sign up, ich kriege Anfälle, ok, was, was

42:09.840 --> 42:24.800
machen wir jetzt, haben wir irgendwie, Trash-Mail, kennt ihr mal einen guten Wegwerf-E-Mail-Service,

42:24.800 --> 42:31.600
den, Müll-Mail, Müll-Mail klingt gut, Müll-Mail, den da, den hier, Müll-Mail, perfekt,

42:31.600 --> 42:43.680
Ultra- und Feuer-Information, alles klar, temp-mail.org, das haben die bestimmt auch

42:43.680 --> 42:55.760
drinne, das haben die bestimmt, ich muss mir glaube ich einen Key zuschicken lassen, Spam-Decoy,

42:55.760 --> 43:04.160
jetzt geht es ab hier, Spam-Decoy kann Gültig-Zertifikat, da gehe ich nicht drauf, your box is empty,

43:04.160 --> 43:16.480
Ekel-Dingsbums-So, alles klar, sign up, ah, exellent, wir haben was gefunden, wir haben

43:16.480 --> 43:27.440
was gefunden, Moment, habe ich jetzt, oh fuck, ach hier ist es, complete your registration,

43:27.440 --> 43:40.640
exellent, exellent, confirm your account, jawoll, Max, last name, username, temp, user 123, Passwort,

43:40.640 --> 43:46.800
haha, wer es glaubt, ok, ich brauche einen Moment, ich brauche ein gescheites Passwort,

43:46.800 --> 43:59.520
muss ich mir mal ausdenken, ok, muss ich mir mal aufschreiben, sonst vergesse ich es wieder,

43:59.520 --> 44:11.600
alles klar, ja, habe ich gelesen, ich konzentre auch alles, Temp-User, safe, there are no valid

44:11.600 --> 44:26.040
license start trial, ja, hat es jetzt funktioniert, perfekt, ok, exellent, new solution, das war

44:26.040 --> 44:31.440
jetzt echt schwere Geburt, ich sollte mich mal registrieren hier drin, ich habe eine gültige

44:31.440 --> 44:41.640
Lizenz, kann ich oft genug sagen, ok, nicht empty solution, wir wollen eine x-te solution

44:41.640 --> 44:55.040
haben, wir wollen isp.net core web application, web api, docker support, die ist sehr günstig,

44:55.040 --> 45:01.120
das ist tatsächlich gar nicht mal so schlecht, ich habe einen all desktop jetbrains pack,

45:01.120 --> 45:09.000
das kostet glaube ich 120 Euro oder sowas, ich will alles, jawoll, nee, so viel hat es

45:09.000 --> 45:17.760
nicht gekostet, warum ist das so teuer, für persönliche Nutzung 150 Euro, nee all products

45:17.760 --> 45:28.400
pack, 250 Euro, und es wird dann jedes Jahr billiger, das ist ok, wenn man den Kram quasi

45:28.400 --> 45:33.840
beruflich nutzt, kann man sich nicht beschweren, finde ich in Ordnung, 250 Euro im Jahr, im

45:33.840 --> 45:39.000
zweiten Jahr 20% weniger, ab dem dritten Jahr 40% weniger, das ist schon in Ordnung, ich

45:39.000 --> 45:44.600
meine klar, für kommerzielle Nutzung ist der Kram schon ein bisschen teurer, ok, weiter

45:44.600 --> 45:51.760
gehts, web api, web application one, nee, wie heißt das, Leute wir brauchen einen guten

45:51.760 --> 46:04.160
Namen, das ist der search champ, wir erstellen das im gleichen directory, create, einfach

46:04.160 --> 46:14.480
in die Unis einschreiben, super Idee, fake studieren für jetbrains Lizenz, new problem

46:14.480 --> 46:24.240
tool window, ja, gut, die wetter vorschau, die löschen wir, und den api controller,

46:24.240 --> 46:30.440
den benennen wir um, also den wetter forecast controller, den benennen wir um in api controller

46:30.440 --> 46:37.560
und löschen alles raus, was hier standardmäßig drinnen ist, api controller, weil den brauchen

46:37.560 --> 46:45.520
wir ja später für unsere autocomplete zum abrufen, so alles weg, alles weg hier, jaja,

46:45.520 --> 46:53.360
jetzt, das ist erstmal egal, return, ok, ich will einfach, dass der Kram kompiliert,

46:53.360 --> 46:58.000
alles klar, so, und jetzt probieren wir das ganze mit der postgres datenbank mal aus,

46:58.000 --> 47:04.560
also wir haben ja unseren postgres container laufen, und wir machen jetzt zwei Schritte,

47:04.560 --> 47:10.040
wir suchen, also wir generieren jetzt fake daten, und dann durchsuchen wir die und gucken

47:10.040 --> 47:20.160
wie schnell es ist mit und ohne postgres extension dafür, so, swagger kommt gleich schonmal weg,

47:20.160 --> 47:28.960
kommen wir nicht, swagger, weg damit, ausgeswagt, aber wir wollen use developer pages haben,

47:28.960 --> 47:35.880
lttp, redirection, sonst was braucht alles, kein mensch, weg damit, lolw, swagger, max

47:35.880 --> 47:52.200
zu alt für swagger, richtig, alles weg damit, gut, also postgres datenbank, support hinzufügen,

47:52.200 --> 48:02.680
dazu brauchen wir, was ist das, microsoft, oder entity kann ich einfach suchen, entity

48:02.680 --> 48:07.960
framework core, hier, da ist es doch, ah, nicht runter, hier, was ist das, was ist das

48:07.960 --> 48:23.720
für ne suche, postgres, ich brauch entity framework postgres, entity framework postgres,

48:23.720 --> 48:45.440
was da brauche ich, jawoll, entity framework core postgres, gib ihm, install, ja, ist es,

48:45.440 --> 48:54.240
das ist quasi das gegenstück zu, wie hieß der kram in rails noch mal, action, action

48:54.240 --> 49:04.080
record, hieß das in rails glaube ich, oder hibernate im java umfeld und sonst was, das

49:04.080 --> 49:07.960
ist der offizielle, also entity framework core ist, also über die benahmung kann man

49:07.960 --> 49:12.400
sich streiten, die benahmung ist immer hängen geblieben bei microsoft, kannst du einmal

49:12.400 --> 49:17.320
erklären was du genau machst, ok, wie kriege ich das, haben wir ein aktuelles, haben wir

49:17.320 --> 49:22.880
ein ausrufezeichen heute, für heute irgendwie, mach mal ausrufezeichen heute, probier mal

49:22.880 --> 49:29.520
aus, ob das funktioniert, vielleicht hat irgendein high iq big brain mod, wir bauen unsere,

49:29.520 --> 49:33.640
nein das stimmt überhaupt nicht, wir bauen nicht die übungsapp weiter, aber wobei, ist

49:33.640 --> 49:40.080
ok, ist ok, kann man so stehen lassen, heute wird techtalks in auto complete, richtig, ja,

49:40.080 --> 49:50.360
also ich hab eine riesenmenge text, 1500 labels, mit jeweils pro label ungefähr, keine ahnung,

49:50.360 --> 49:56.920
500 values und die will ich schnell durchsuchen können für auto complete, wir machen's,

49:56.920 --> 50:01.320
wir pumpen den kram in die datenbank und einmal machen wir es ohne search extensions und einmal

50:01.320 --> 50:05.200
mit und gucken wie unterschiedlich schnell das ganze ist, jetzt erstmal und dann bauen

50:05.200 --> 50:14.200
wir in auto complete dafür, dass man das schön im browser durchsuchen kann, ok, wir richten

50:14.200 --> 50:21.680
jetzt erstmal unsere datenbank ein hier drinnen, das ist neu übrigens, früher hatte man hier

50:21.680 --> 50:26.400
so ein startup file, wo man das alles konfiguriert hat, seine webanwendung, mittlerweile haben

50:26.400 --> 50:32.760
die alles in program geschrieben, ich persönlich find's ein bisschen dumm, aber was willst

50:32.760 --> 50:44.160
du machen, es ist so alles so zusammengeklatscht, also, builder service add db context, dann

50:44.160 --> 50:49.280
legen wir ein extra ordner an, das muss man nicht wirklich machen, aber ich find das,

50:49.280 --> 51:01.000
das ist so, immer noch so, isp.net best practice, add db context, so und was möchten wir durchsuchen,

51:01.000 --> 51:06.600
wir möchten da eigentlich nur text durchsuchen, aber nachdem das ganze ja super krass objekt

51:06.600 --> 51:13.920
orientiert ist, also es ist quasi objekt orientiert ist, also weil das objekt orientiert

51:13.920 --> 51:17.360
ist, muss man erstmal eine klasse anlegen mit ein paar feldern für text und sowas

51:17.360 --> 51:28.840
in der richtung, nennen wir das einfach mal cute chat text, int id, das ist der primary

51:28.840 --> 51:32.720
key für die datenbank, das muss man haben, sonst funktioniert's nicht und dann haben

51:32.720 --> 51:38.080
wir noch irgendwas für unseren text, fertig, mehr brauchen wir nicht und unser add db context

51:38.080 --> 51:43.480
hat ein db set, das muss man übrigens immer gleich machen, das ist jetzt nix besonderes,

51:43.480 --> 51:51.720
das sieht immer so aus in isp.net core und da haben wir jetzt, was steckt der denn vor,

51:51.720 --> 52:00.920
ist perfekt, ich nenn's einfach values, sehr schön, ne das müssen wir so machen, prop,

52:00.920 --> 52:15.400
glaube, db set, cute chat text, text values, vollkommen egal wie das ding heißt, so wunderbar,

52:15.400 --> 52:23.920
das hat er für schmerzen, das muss auch public sein, gut also und jetzt können wir unsere

52:23.920 --> 52:37.080
datenbank anlegen, gehen wir mal hier rein, add db context, db context, das hab ich vergessen,

52:37.080 --> 52:44.200
achso, jaja muss vom base db context erben, sonst funktioniert's nicht, gut und jetzt

52:44.200 --> 52:50.320
können wir sagen, wie krieg ich jetzt überhaupt zugriff auf meine datenbank in diesem neuen,

52:50.320 --> 53:01.400
tollen, wir haben alles in main stehen, geschiss, wahrscheinlich so, app, database, app, db

53:01.400 --> 53:08.720
context, service, tja das war im startup file einfach, im startup file konnte ich einfach

53:08.720 --> 53:14.120
sagen gib mir mal datenbank context instance und es hat funktioniert, wie macht man das

53:14.120 --> 53:26.400
hier jetzt, services, get service, app db context, funktioniert das so, das jetzt experimentieren,

53:26.400 --> 53:33.680
ich hab keine ahnung ob das so funktioniert, wir gehen mal in das verzeichnis, wo die anwendung

53:33.680 --> 53:44.440
drin ist, der search champ,.net, run, gib ihm, schauen ob das jetzt funktioniert, oh, cannot

53:44.440 --> 53:48.760
resolve scope, ach es ist ein scope service, also da hat's microsoft echt unnötig kompliziert

53:48.760 --> 54:02.080
gemacht, also app, services, scope, quick scope, scope, service, get service, nee ach du große

54:02.080 --> 54:12.760
scheiße, wie geht denn das, get service, app db context, so geht das jetzt, fließt microsoft,

54:12.760 --> 54:19.800
lasst es einfach mal funktionieren, also das mit dem startup file war deutlich schöner,

54:19.800 --> 54:25.080
hey es funktioniert, nice, ok, so jetzt haben wir zugriff auf unsere datenbank, jetzt können

54:25.080 --> 54:33.280
wir sagen, context, database, created, wir müssen jetzt keine extra sql queries oder

54:33.280 --> 54:37.920
sonst was bauen, sondern wir können bei jedem anwendungsstart die datenbank einmal löschen

54:37.920 --> 54:44.000
und einmal anlegen, das macht er alles für uns, das sehen wir jetzt auch gleich, oh,

54:44.000 --> 54:48.560
no database provider has been configured, achso klar, ich muss ja noch connection string

54:48.560 --> 54:52.920
hinterlegen wie er zu meinem docker container hinkommt, weil die datenbank läuft ja hier

54:52.920 --> 55:05.960
drin, das heißt, wie konfiguriert man einen connection string, options, ach nee, moment,

55:05.960 --> 55:19.240
da wahrscheinlich, options, connection, ok ich muss, ef core postgres connection string,

55:19.240 --> 55:23.040
ich muss gucken wie das funktioniert, sollte man zwingend entity framework verwenden, wenn

55:23.040 --> 55:27.800
man eine datenbank anbindet, scheint mir irgendwie zum verreich zu sein, das geht, es ist im

55:27.800 --> 55:34.040
prinzip sind es 3-4 zeilen, du kannst auch dapper oder sowas verwenden, kannst aber auch

55:34.040 --> 55:42.600
alles an, du kannst auch sql von haben, so wie geht das jetzt hier, use npg sql, use npg

55:42.600 --> 55:51.120
sql und dann host, da sind java viel besser, ist das so, ja gut, irgendeinen vorteil muss

55:51.120 --> 56:02.520
java ja auch mal haben oder, so host, myhost, host ist localhost, database ist cute, cute

56:02.520 --> 56:19.280
chat, database, username, brauchen wir nicht, habe ich ja alles gelöscht, so, run, nee,

56:19.280 --> 56:34.680
moment sind falsch, dot net run, mal gucken ob es jetzt funktioniert, oh, was, appdb context

56:34.680 --> 56:40.920
would call, alter, was will der von mir jetzt, ach stimmt, man muss im constructor anlegen,

56:40.920 --> 56:54.080
was man eine options haben will, appdb, nee wie war das, db options, irgendwie sowas, options,

56:54.080 --> 57:00.320
macht es jetzt einfach nur so wie ich es im kopf habe, geht das jetzt, aha, oh fatal,

57:00.320 --> 57:14.400
monkaS, role max does not exist, ah, der nimmt meinen user standardmäßig, username, ich

57:14.400 --> 57:22.760
glaube postgres ist der standard user dafür, das sieht schon besser aus, ok, also was er

57:22.760 --> 57:27.320
für mich macht ist folgendes, er sagt create database, cute chat database, also hier sieht

57:27.320 --> 57:32.000
man die sql-commandos, die herunter der haube hausführt, was geht, hast du Urlaub, nee,

57:32.000 --> 57:38.440
hab ich nicht, hab keinen Urlaub, und dann macht er create table, text values, weil wir

57:38.440 --> 57:45.680
das so genannt haben, ein primary key und, ah nee, das hier ist der primary key und ein

57:45.680 --> 57:50.720
textfeld, was nicht null sein kann, ok, ich arbeite montags nicht, da kann ich so Sachen

57:50.720 --> 57:57.480
hier machen, so, also wir haben unsere datenbank, die jedes mal neu erstellt wird, excellent,

57:57.480 --> 58:02.320
big brain time, und jetzt befüllen wir die datenbank mal mit Schwachsinn, mit random

58:02.320 --> 58:08.440
daten und machen da ne suche drin, also dazu gibt es eine schöne library, die nennt sich

58:08.440 --> 58:16.920
bogus und die macht das, was der name, ja, wonach der name aussieht, die generiert random

58:16.920 --> 58:24.160
daten, guck mal, der patrick ist auch da, poggers, moin, heute haben wir postgres, postgres full

58:24.160 --> 58:29.240
text, nicht full text search, stimmt nicht, postgres text suche, einmal langsam und einmal

58:29.240 --> 58:35.960
schnell, das in langsam hab ich schon gemacht, aber in schnell noch nie, mal gucken, ok,

58:35.960 --> 58:49.160
so, bogus.net, ja, faker ist die javascript-geschichte, ne, ah, jetzt, viel besser, wie ging der kram

58:49.160 --> 59:00.840
noch mal, test orders, ah, ich weiß, ich weiß es wieder, faker gleich new faker, so,

59:00.840 --> 59:16.040
und jetzt generieren wir fake daten, also wir brauchen 1500 labels, faker, internet, gibt

59:16.040 --> 59:26.080
es domains, domain name, domain word, suffix, domain word ist gut, internet, domain word,

59:26.080 --> 59:34.680
also was der jetzt hier macht, der generiert 1500 randomwörter, so, guckt, bam, und das

59:34.680 --> 59:38.280
sind auch jedesmal andere, werden ihr sehen, also jedesmal, wenn ich in deutsch nenne, sind

59:38.280 --> 59:46.240
das andere, das sind einfach fakesachen, die das ding randomize für mich, so, also das

59:46.240 --> 59:57.160
ist unser label, label, so, dann machen wir noch ne schleife mit 500 values pro label,

59:57.160 --> 01:00:03.680
und das ist dann unser value, und das ist dann keine, was nehmen wir denn da, internet,

01:00:03.680 --> 01:00:10.120
was haben wir da noch zu bieten, internet, color, email, ip, mac, mac, das wärs jetzt

01:00:10.120 --> 01:00:19.040
auch, oder, was sagst du zu swell, das find ich richtig, richtig nice, url, url ist gut,

01:00:19.040 --> 01:00:30.400
bis jetzt gibt es noch nichts kompliziertes, so, also jetzt haben wir 1500 mal 500 fakesachen

01:00:30.400 --> 01:00:56.760
für die datenbank, das ist ein bisschen was, oder, so, und das, ja 750.000, ich mein wir

01:00:56.760 --> 01:01:01.440
können auch einfach, komm, wir sind einfach mal, wir sind einfach mal, wir machen einfach

01:01:01.440 --> 01:01:05.680
genauso viele values pro label, wie wir label haben, dass wir richtig testen können, dass

01:01:05.680 --> 01:01:09.640
es brummt, dass die datenbank ein bisschen was zu tun hat, also jetzt haben wir, das

01:01:09.640 --> 01:01:18.720
ist 1500 mal 1500, ja, hier, millionen, 2,2 millionen, excellent, das brauchen wir, vielleicht

01:01:18.720 --> 01:01:23.720
machen wir auch mehr, mehr labels, wir machen einfach, komm, wir machen 500, aber wir machen

01:01:23.720 --> 01:01:32.680
einfach 3000 labels, letztendlich ist es egal, es ist vollkommen egal, weil, wir eh einen

01:01:32.680 --> 01:01:41.840
string draus bauen und in die datenbank schreiben, für die tekstsuche, so, und, wir machen jetzt

01:01:41.840 --> 01:01:54.520
erstmal ne liste und gucken, was da, list add, so, und zwar den kram speichern wir jetzt

01:01:54.520 --> 01:02:02.280
in folgendem format, label, gleich, also das ist das was ich später autocompleten will

01:02:02.280 --> 01:02:07.080
im webinterface, cringe wer unter 10 millionen ist, ja wir können das ja nachher mal hoch

01:02:07.080 --> 01:02:11.240
machen und gucken, wobei ich davon ausgehe, dass auch das hier schon, ich mach das mal

01:02:11.240 --> 01:02:14.760
ein bisschen kleiner, das wird ne ganze weile dauern in die datenbank zu schreiben, kann

01:02:14.760 --> 01:02:23.560
ich mir vorstellen, gucken wir mal, value, so, und jetzt sagen wir datenbank, text values,

01:02:23.560 --> 01:02:33.360
add, ne add range, add range, unsere liste rein, geht nicht, warum, ah weil ich dumm

01:02:33.360 --> 01:02:46.880
bin, weil ich sagen muss, ist ja kein string, es ist ja cute chat text, der typ, die laufzeit

01:02:46.880 --> 01:02:51.320
wird noch schlechter werden, weil er bestimmt für tekstsuche extra sachen beim insert machen

01:02:51.320 --> 01:03:08.540
muss, so, save, alles klar gib ihm, gib ihm, mal gucken wie lang das jetzt dauert, wir

01:03:08.540 --> 01:03:31.000
machen noch ein paar status meldungen, generate, und jetzt kommt hier insert, insert, run, oa

01:03:31.000 --> 01:03:47.120
er macht ganz schön viel, aber das gute ist, wir müssen das nur einmal machen, danach

01:03:47.120 --> 01:03:53.040
lege ich die datenbank jedes mal neu an, ich kommentiere jetzt einfach dieses delete aus,

01:03:53.040 --> 01:03:57.760
ich kommentiere das jetzt einfach aus, wir füllen das einmalig um gut ist, ah ne machen

01:03:57.760 --> 01:04:04.720
wir nicht, ich hab was vergessen, doch das ist bulk insert, add range, das ist der einzige

01:04:04.720 --> 01:04:15.480
insert hier, das müsste, das müsste ein bulk insert sein, das logging dauert bestimmt

01:04:15.480 --> 01:04:20.960
länger, wir haben was falsch gemacht, ich muss nochmal abbrechen, und zwar, das was

01:04:20.960 --> 01:04:28.680
ich hier inserte will ich to lower, warum will ich das komplett in klein buchstaben

01:04:28.680 --> 01:04:35.720
haben, weil die suche dann schneller ist und einfacher ist, wenn es klein buchstaben sind,

01:04:35.720 --> 01:04:48.000
roam abgestürzt monkaS, siehe nicht nach bulk aus, keine ahnung, ich lasse es jetzt

01:04:48.000 --> 01:04:56.440
einfach nochmal inserten und gut ist, vielleicht ist das stream abgekackt, zu viel pixeländerung

01:04:56.440 --> 01:05:04.760
im video, also es ist immer sinnvoll, wenn man sagt, das mache ich jetzt schon mal in

01:05:04.760 --> 01:05:08.960
weißer voraussicht, ich weiß nicht ob man das wirklich braucht, vielleicht ist ja postgres

01:05:08.960 --> 01:05:13.960
auch so schlau und indiziert das quasi alles nur in klein oder wie auch immer, wenn man

01:05:13.960 --> 01:05:18.080
text durchsuchen will ist es immer sinnvoll den text vorher in klein oder groß buchstaben

01:05:18.080 --> 01:05:23.640
umzuwandeln, klein buchstaben ist ein bisschen geläufiger, weil dann kannst du in der suche

01:05:23.640 --> 01:05:27.800
dich darauf verlassen, dass das alles klein ist und du musst nicht klein und groß checken,

01:05:27.800 --> 01:05:39.400
ok alles inserted und das kommentieren wir hier mal aus, das brauchen wir nicht mehr,

01:05:39.400 --> 01:05:47.040
wir machen da mal, wir machen da mal eine extra, ich lager das mal aus, sonst wird mir das

01:05:47.040 --> 01:05:57.480
gerade ein bisschen viel, was testen, extract, das verwende ich so gut wie nie, extract method,

01:05:57.480 --> 01:06:20.320
at the beginning of, after, gucken was er jetzt macht, ok new function, create tb, pifat, refactoring,

01:06:20.320 --> 01:06:26.640
guckt es euch an, ok das refactoring in extra funktion hat sich nicht wirklich gelohnt,

01:06:26.640 --> 01:06:32.080
weil es steht immer noch da, ist jetzt bloß in der funktion drin, ok das hat es jetzt

01:06:32.080 --> 01:06:39.760
nicht gepragt, können wir das in extra klasse verschieben lassen, refactor this, jawoll,

01:06:39.760 --> 01:06:57.520
ne na gut, klasse, ich mache es in extra, ich mache es in extra, klasse, was weiß ich, db

01:06:57.520 --> 01:07:11.160
wunderbar, dtx, ja ganz toll, so und das verschieben wir jetzt, verschieben wir in extra, hallo,

01:07:11.160 --> 01:07:17.720
konnte der das nicht verschieben in extra klasse, in extra datei, move to db creator,

01:07:17.720 --> 01:07:24.800
ja super, bester Name überhaupt und das machen wir jetzt noch static, ich will jetzt einfach

01:07:24.800 --> 01:07:33.080
nur, ich will es einfach nur raushaben aus meinem main, dass ich dann gleich was machen

01:07:33.080 --> 01:07:43.840
kann, perfekt, so wunderbar, so will ich das haben, gut das bleibt so, da kann ich

01:07:43.840 --> 01:07:47.240
das jetzt nämlich auskommentieren und immer wenn ich die datenbank neu anlegen will, mache

01:07:47.240 --> 01:07:59.680
ich das dann da rein und muss mich da nicht weiter drum kümmern, ok, alles klar, so wir

01:07:59.680 --> 01:08:06.080
haben eine datenbank gefüllt mit jede menge text und jetzt suchen wir da drin und das sollte

01:08:06.080 --> 01:08:19.320
langsam sein, weil wir haben jetzt insgesamt 750.000 strings eingefügt in die datenbank

01:08:19.320 --> 01:08:28.240
und wenn wir das suchen sollte es nicht sonderlich schnell sein, weil der muss, wenn wir sagen,

01:08:28.240 --> 01:08:32.720
wir suchen einen text, der irgendwo drin vorkommen kann, nicht am anfang, nicht am ende, irgendwo

01:08:32.720 --> 01:08:41.760
mittendrinne, dann muss der die komplette datenbank durchscannen, anders gehts nicht,

01:08:41.760 --> 01:08:55.600
also sagen wir mal hier, result gleich context text values, where, oh keine ahnung, element

01:08:55.600 --> 01:09:07.080
oder wie auch immer man das nennt, entity, so where, text, contains, contains, und es

01:09:07.080 --> 01:09:18.240
braucht mal ein suchwort, query, keine ahnung, weißte nicht was da drin steht, ho, ho, ho,

01:09:18.240 --> 01:09:25.160
wir suchen nach ho, weil später will ich gucken ob host irgendwo drin steht, so ho,

01:09:25.160 --> 01:09:38.280
ho, contains, query, so und das sollte jetzt ziemlich langsam sein, so result count, guck

01:09:38.280 --> 01:09:53.640
mal wie viel er gefunden hat, und wir brauchen noch ne, ne, ne uhr, stopwatch new, elapsed

01:09:53.640 --> 01:10:02.240
total milliseconds, so mal gucken wie schnell der jetzt ist, run, ok, der braucht um die

01:10:02.240 --> 01:10:15.940
komplett null, wie, es fängt nichts, ok, e, e muss aber drin vorkommen, achso, moment,

01:10:15.940 --> 01:10:21.800
das ist ja postgres-syntax, ich brauch hier keine postgres-syntax, das brauch ich vielleicht

01:10:21.800 --> 01:10:33.200
später, ok, zehntausend sachen, die ho enthalten gefunden, und wir brauchen 850 millisekunden,

01:10:33.200 --> 01:10:41.280
das ist nicht sonderlich schnell, muss man mal sagen, also für mein autocomplete, insgesamt

01:10:41.280 --> 01:10:46.120
geb ich dir recht, insgesamt ist das ziemlich zackig, aber für mein autocomplete ist es

01:10:46.120 --> 01:10:54.520
ein bisschen lahm, wir könnten das wahrscheinlich noch beschleunigen, indem wir einfach sagen,

01:10:54.520 --> 01:11:12.440
ok, wir nehmen bloß 100 Ergebnisse, dann müsste er noch mal schneller sein, ne, ok, also, wir

01:11:12.440 --> 01:11:16.360
führen das jetzt ein paar mal aus, um wirklich zu wissen, wie, wie, wie, wie schneller ist,

01:11:16.360 --> 01:11:28.480
hier void, run, das da kommt da rein, oh ne, ich hab keine, der hat meine hotkeys irgendwie

01:11:28.480 --> 01:11:37.120
überschrieben, das ist aber ziemlich dumm, so, e, was kommt da rein, sehr schön, und

01:11:37.120 --> 01:11:44.920
jetzt führen wir das ganze einfach 10 mal aus, guck mal wie schnell es ist, 10 mal run,

01:11:44.920 --> 01:11:53.640
und wir sollten dort net auch im release-modus starten, guck mal, wenn es gecashed ist, wird

01:11:53.640 --> 01:12:00.000
es sogar deutlich schneller, guckt euch das mal an, das flutscht richtig, fängt an mit

01:12:00.000 --> 01:12:05.240
840 millisekunden, geht dann runter auf 35 millisekunden, wir haben, Leute, ich seh

01:12:05.240 --> 01:12:11.320
es schon, wir haben zu wenig Text, wir haben zu wenig Text, wir müssen mehr Text reinschreiben,

01:12:11.320 --> 01:12:19.400
dass man wirklich die Unterschiede sieht, aber c, release, zu wenig Text, kann man nicht

01:12:19.400 --> 01:12:24.800
multithreaden, doch, man könnte das auch multithreaden, also gut, jetzt die Datenbankzugriffe multithreaden

01:12:24.800 --> 01:12:32.120
eher nicht, aber später, wenn du Anfragen an den Server schickst, das ist das standardmäßig

01:12:32.120 --> 01:12:37.720
multithreaded, da macht ja ein, quasi ein thread auf pro, also der schnappt ein thread

01:12:37.720 --> 01:12:49.160
aus dem threadpool für pro request, glaube ich, so, das ist alles a busy, a busy schnell,

01:12:49.160 --> 01:12:52.760
das ist alles a busy schnell, ich glaube da sehen wir die Vorteile nicht richtig, wir

01:12:52.760 --> 01:12:56.400
müssen, Leute, da muss mehr Text rein, wir gucken mal kurz wie groß unsere Datenbank

01:12:56.400 --> 01:13:24.720
jetzt ist, gerade aktuell, äh

01:13:24.720 --> 01:13:31.280
ich hab slash temp, ich hätte, ich hab mein temp verzeichnis gemapped, ok, das ist nicht

01:13:31.280 --> 01:13:47.320
so schlau, wie hab ich es denn genannt, pg, deswegen ist es wahrscheinlich auch so schnell,

01:13:47.320 --> 01:13:53.000
weil es gerade alles im ram liegt, wobei, ne, tmp ist kein ram, äh, das muss nochmal,

01:13:53.000 --> 01:13:57.120
muss nochmal aus, muss nochmal neu befüllt werden, Leute, muss nochmal neu befüllt werden,

01:13:57.120 --> 01:14:14.320
ähm, ich will nicht das, ich will, äh, home max tmp data haben, so, pg, data, das ist

01:14:14.320 --> 01:14:22.840
doch schon besser, ja, da liegt jetzt auch postgres zeug drinne, alles klar, so, also,

01:14:22.840 --> 01:14:31.600
füllen wir die Datenbank nochmal, füllen wir die Datenbank nochmal, mit, diesmal mehr,

01:14:31.600 --> 01:14:42.720
wir brauchen mehr text, 1500, echt, wir machen, wir machen, wir machen, äh, komm, wir machen

01:14:42.720 --> 01:14:51.920
3000 labels mit jeweils 1500 Dingern, das sind dann quasi, äh, 4,5 Millionen Einträge,

01:14:51.920 --> 01:15:05.280
das ist doch ordentlich, das machen wir, 4,5 Millionen, text, bam, run, give him, generate,

01:15:05.280 --> 01:15:14.560
ok, das könnte, das könnte jetzt ein bisschen dauern, na gut, es ging doch eben auch relativ

01:15:14.560 --> 01:15:21.120
schnell, der hat eben eingefügt mit, hat irgendwie ne, eben 20, 20, 20 Sekunden gebraucht, jetzt

01:15:21.120 --> 01:15:33.840
hat er wahrscheinlich ne Minute oder so, ja, 4,5 Millionen ist erstmal in Ordnung, kann

01:15:33.840 --> 01:15:45.480
ich mitleben, wir müssen dann richtig den Unterschied sehen, zu normalem Durchgreppen,

01:15:45.480 --> 01:15:56.600
zu, oder ordentlicher Text-Search, ja, da gibt's verschiedene Sachen, ist die Frage,

01:15:56.600 --> 01:16:00.000
was du machen willst, also wo liegen deine Interessen, möchtest du Web-Anwendungen machen

01:16:00.000 --> 01:16:04.040
oder Webseiten machen, möchtest du irgendwelche Kommando-Zeilen-Tools machen, möchtest du

01:16:04.040 --> 01:16:10.400
gar, äh, GUI, Windows-GUI-Programme machen, Spiele, es ist die Frage, wo deine Interessen

01:16:10.400 --> 01:16:15.280
liegen, gibt's zig Varianten und jeder wird dir sagen, seine Lieblingssprache ist die

01:16:15.280 --> 01:16:18.680
beste, aber wo liegen denn deine Interessen, dann können wir dir auch was empfehlen.

01:16:18.680 --> 01:16:24.480
Wenn du gar keine Ahnung hast, was du machen willst, dann kann ich dir eine Sache empfehlen

01:16:24.480 --> 01:16:33.440
und das ist, fang mit JavaScript und, ähm, den Browser an, da siehst du, was passiert,

01:16:33.440 --> 01:16:42.200
nimm dir den Editor, nimm dir den Browser und mach bisschen JavaScript, gut, das sind,

01:16:42.200 --> 01:16:46.240
das sind zwei komplett unterschiedliche Paar Schuhe und, wehe, es kommt mir jetzt einer

01:16:46.240 --> 01:16:54.600
mit Elektron an, also Web-Entwicklung, GUI-Programmierung sind zwei ziemlich unterschiedliche Paar Schuhe,

01:16:54.600 --> 01:17:01.960
ja, ich würde sagen, fang mit JavaScript an, fang mit JavaScript an und du kommst eh nicht

01:17:01.960 --> 01:17:08.520
dran vorbei, du kommst, egal was du machst heutzutage eigentlich, kommst du nie an JavaScript

01:17:08.520 --> 01:17:14.440
hier im Android-CSS vorbei, also sprich, das musst du eh lernen, insofern ist meiner Ansicht

01:17:14.440 --> 01:17:22.440
nach in dem Fall tatsächlich das beste, ich bin das Gegenteil von, lass dich nicht chibbeln

01:17:22.440 --> 01:17:28.480
vom Chat, ich bin das Gegenteil von C++-Fan, ich hasse C++, und wir fangen nicht an damit

01:17:28.480 --> 01:17:35.720
jetzt warum, weil das atet wieder aus, jo, zumindest fang mit JavaScript an, schnapp

01:17:35.720 --> 01:17:41.000
dir nen Browser, nen Text-Editor, Rüssel Studio Code am besten, da hast du schön viel Tutorials

01:17:41.000 --> 01:17:46.840
und Hilfen zu, schnapp dir nen Browser und fang an, bisschen HTML, JavaScript, CSS, dann

01:17:46.840 --> 01:17:54.480
siehst du auch gleich, was passiert, warum 3-Head, das ist nicht nur 3-Head, das ist

01:17:54.480 --> 01:18:00.720
quasi schon 2-Head, soll mal kurz gucken, wie groß unsere Datenbank mittlerweile ist,

01:18:00.720 --> 01:18:10.120
wir mischen die da, jawoll, ne, ne, ne, Moment, du, data, sudo, achja, guck mal, unsere Datenbank

01:18:10.120 --> 01:18:19.680
ist schon Gigabyte groß, da flutscht's, du kommst an JavaScript heutzutage nicht vorbei,

01:18:19.680 --> 01:18:24.440
es sei denn du bist Cobalt-House-Entwickler, Leute, fällt euch irgendeine Richtung in

01:18:24.440 --> 01:18:39.640
der IT ein, wo man zumindest ein bisschen JavaScript, CSS und HTML vorbeikommt, Embedded, ne, selbst

01:18:39.640 --> 01:18:47.520
da nicht, guck mal, ok, vielleicht super krass Embeddedes Zeug, was keine Leute verwenden,

01:18:47.520 --> 01:18:51.720
aber ganz ehrlich, selbst wenn du irgendwelche IOT-Geschichten baust, brauchen die Dinge

01:18:51.720 --> 01:19:07.240
ein User-Interface, Machine Learning, ne, irgendwo müssen die Sachen am Ende angezeigt

01:19:07.240 --> 01:19:14.800
werden und das ist ja sogar meistens im Browser, ist er, oh, er ist fertig in certain, Leute,

01:19:14.800 --> 01:19:20.400
er hat fertig, ok, guck mal, das Query dauert jetzt schon ein bisschen länger, das Query

01:19:20.400 --> 01:19:33.080
dauert jetzt schon 200 Millisekunden, es ist aber immer noch saumäßig schnell, oder,

01:19:33.080 --> 01:19:38.840
er findet 86.000, guck mal, ich mein 200 Millisekunden, muss man sich mal überlegen,

01:19:38.840 --> 01:19:54.640
200 Millisekunden zum Durchsuchen einer Datenbank mit 4,5 Millionen Textzeilen, also das ist

01:19:54.640 --> 01:19:58.520
gar nicht mal übel, aber zumindest haben wir jetzt eine ordentliche Datenbank, bisschen

01:19:58.520 --> 01:20:14.600
was drin, ok, lassen wir die Suche nochmal laufen, so und wir können jetzt mal gucken,

01:20:14.600 --> 01:20:17.360
wir können jetzt ein paar Postgres-Funktionen verwenden, vielleicht kriegen wir es jetzt

01:20:17.360 --> 01:20:24.800
ohne Index und alles schon ein bisschen schneller, also merken wir uns mal 200 Millisekunden ungefähr,

01:20:24.800 --> 01:20:32.080
er findet 86.000 Einträge, braucht 200 Millisekunden, die Einträge sind übrigens nicht immer gleich,

01:20:32.080 --> 01:20:40.040
weil die Werte, die er generiert, variieren, weil halt random Daten, so, aber ungefähr

01:20:40.040 --> 01:20:48.440
kommt es wahrscheinlich immer so in die Richtung, so, also, probieren wir das mal, ob es beispielsweise

01:20:48.440 --> 01:20:58.680
schneller geht, wenn wir anstatt diesem.NET Query verwenden, wenn wir ein eingebautes,

01:20:58.680 --> 01:21:12.640
eine eingebaute Postgres-Funktion verwenden, ok, Text, und zwar suchen wir jetzt, ho, später

01:21:12.640 --> 01:21:16.600
suche ich vielleicht ein anderes nicht so ganz missverständliches Wort, so, wie schnell

01:21:16.600 --> 01:21:26.960
sind wir jetzt? Schneller, schneller, also, wenn.NET nicht den String-Vergleich macht,

01:21:26.960 --> 01:21:33.360
sondern Postgres selbst den String-Vergleich macht, dann sind wir ein bisschen schneller,

01:21:33.360 --> 01:21:40.480
machen wir mal nicht im Release-Modus, wie es dann aussieht, ähnlich, so, also wir sind

01:21:40.480 --> 01:21:52.440
runter, man muss sich mal überlegen, 4,5 Millionen Strings zu durchsuchen, einfach mal, einfach

01:21:52.440 --> 01:21:58.920
mal nur 173 Millisekunden lang, das ist saumäßig schnell, Alter, das hätte ich gar nicht

01:21:58.920 --> 01:22:12.360
gedacht, so, wie groß ist unsere Datenbank? 1,1 Gigabyte, na gut, das ist ja auch nicht

01:22:12.360 --> 01:22:22.200
viel, aber das ist tatsächlich ziemlich zackig, ne? Stimmt, wir vergleichen mal das Query,

01:22:22.200 --> 01:22:28.280
so sieht das Query aus, wenn wir schlau sein wollen, und wenn.NET das Query macht, aber

01:22:28.280 --> 01:22:34.080
so sagen wir ihm, Case interessiert uns nicht, so, und wie sieht das Ganze aus, wenn.NET

01:22:34.080 --> 01:22:46.400
das macht, Contains, wie sieht dann das Query aus? Bisschen anders, also guckt mal, so ist

01:22:46.400 --> 01:22:51.320
unser Query, wenn wir von Hand schlau sein wollen, und so ist unser Query, wenn.NET

01:22:51.320 --> 01:23:11.120
das für uns generiert, Text, das ist schon irgendwas anderes, also zumindest ist, wenn

01:23:11.120 --> 01:23:16.120
wir schlau sein wollen, ist es schon mal schneller, das ist immer gut zu wissen, greifst du bei

01:23:16.120 --> 01:23:25.920
jemanden, der ist da auf der Linie, das ist eine VM, das ist eine VM, ja, VM, ok, da siehst

01:23:25.920 --> 01:23:34.760
du, auf dem zweiten Desktop, ok, also wenn wir mitdenken, so, gucken wir mal, steht da

01:23:34.760 --> 01:23:47.080
Host vielleicht drinne, Host, Host, haben wir das da schon drinne, ja, nee, Null, Null

01:23:47.080 --> 01:23:57.040
Einträge, ähm, Sekunde, wir gucken, wir geben uns mal den ersten Eintrag aus, CW Result

01:23:57.040 --> 01:24:19.160
First, First, was? Achso, äh, nicht das ausgeben, sondern Text ausgeben, mal gucken, ob das

01:24:19.160 --> 01:24:30.840
überhaupt, die Suche überhaupt stimmt, achso, ja, da findet das H, das Ho, wo ist, Ho, ok,

01:24:30.840 --> 01:24:42.120
da findet das wirklich, ok, wir suchen mal danach, gucken, wie schnell er da ist, das

01:24:42.120 --> 01:24:46.840
ist doch verhältnismäßig schnell, muss ich echt, muss ich echt sagen, das ist, also

01:24:46.840 --> 01:24:53.800
für das, dass wir 4,5 Millionen Textzeilen haben, die zu durchsuchen in 170 Millisekunden,

01:24:53.800 --> 01:24:59.000
das hat auch so schon ohne irgendwelche Optimierung ordentlich Performance, ne, kann man, kann

01:24:59.000 --> 01:25:07.120
man sich nicht beschweren, na gut, so, und jetzt gucken wir mal, ob wir das noch weiter

01:25:07.120 --> 01:25:17.120
beschleunigen können, indem wir diese Postgres Search Extension verwenden, so, da muss ich

01:25:17.120 --> 01:25:23.720
jetzt mal gucken, wie das funktioniert, also ich hab hier diesen Blogpost von 2011, 2011

01:25:23.720 --> 01:25:32.360
hat das ganze noch 3 Sekunden gedauert, für 2 Millionen, aber 2011, so bis hierher, das

01:25:32.360 --> 01:25:38.280
ist gecasht, ja, das ist gecasht, das sieht man daran, dass es, aber ich finde das durchaus

01:25:38.280 --> 01:25:42.160
interessant, wie schnell das schnellste ist, wenn es gecasht ist, wir müssen uns einfach

01:25:42.160 --> 01:25:48.480
das erste angucken, so, das erste, guck mal, das erste dauert ne Sekunde, das erste dauert

01:25:48.480 --> 01:25:59.960
ne Sekunde, das ist dann schon ne ganze Ecke langsamer, das ist gecasht richtig, ja, ich

01:25:59.960 --> 01:26:03.520
glaube, wir können nach, wir können nach Wörtern mal suchen, die mit H anfangen, viel,

01:26:03.520 --> 01:26:07.440
oder die, die H enthalten, viel randomer, also, also mehr kann's ja da eigentlich nicht

01:26:07.440 --> 01:26:15.160
geben, na, was machen wir das, komm, wir machen das nur einmal, das reicht, ja, da braucht

01:26:15.160 --> 01:26:20.840
ungefähr ne Sekunde, der braucht ungecasht, ungecasht ungefähr ne Sekunde und findet

01:26:20.840 --> 01:26:27.000
alle Einträge, ist aber auch klar, weil jeder Eintrag HTTP enthält, also können wir mal

01:26:27.000 --> 01:26:38.600
nach HTTP suchen, das müsste ja jeder Eintrag enthalten, ja, warte mal, machen wir mal Query,

01:26:38.600 --> 01:26:49.680
String, String Query, schön SQL Injection hier, so, Run, machen wir mal, lassen wir

01:26:49.680 --> 01:26:54.920
mal verschiedene ausführen, also wir suchen nach HTTP suchen wir, wir suchen nach, was

01:26:54.920 --> 01:27:01.520
war das andere, Arak, das ist übrigens das einzige Wort, was ich auf türkisch kenne,

01:27:01.520 --> 01:27:06.960
da muss man auch ein Y davor machen, dann heißt das Schwanz, frag mich nicht, warum

01:27:06.960 --> 01:27:24.520
ich weiß, was das auf türkisch heißt, so, Run, oh, Sequence contains no elements, warum

01:27:24.520 --> 01:27:44.560
nicht, wie, Sequence contains no elements mit HTTP, ah, ich hab die, ich hab die Prozente

01:27:44.560 --> 01:28:06.600
nicht vergessen, ne, auch andere Queries sind schnell, egal, wir halten uns jetzt gar nicht

01:28:06.600 --> 01:28:14.680
so, gar nicht so lang dran auf, wir versuchen das mal schneller zu kriegen, wusste gar nicht,

01:28:14.680 --> 01:28:18.840
dass du auch streamst, ja ab und zu, ab und zu stream ich mal, also wir haben ungefähr

01:28:18.840 --> 01:28:27.920
170 Millisekunden für sowas hier, wir haben 170 Millisekunden für sowas, aber wir kriegen

01:28:27.920 --> 01:28:31.720
das bestimmt noch schneller, und zwar will ich jetzt jetzt damit machen, die Sache ist

01:28:31.720 --> 01:28:36.560
nur die, ich hab keine Ahnung, wie man das einrichtet, als erstes muss man, wenn ich

01:28:36.560 --> 01:28:46.440
das so richtig sehe, als erstes muss man diese Extension hier enablen für die Datenbank,

01:28:46.440 --> 01:28:59.520
und dann muss man einen speziellen Text Search Index anlegen, und dann ist das angeblich

01:28:59.520 --> 01:29:14.960
viel schneller, und das testen wir jetzt mal, ich hab auf Github was gefunden, NGP, PSQL,

01:29:14.960 --> 01:29:25.080
ich hab auf Github was gefunden, wie man das einrichtet, und zwar in meinem Datenbank-Kontext,

01:29:25.080 --> 01:29:41.120
in meinem Datenbank-Kontext muss ich das hier machen, was es macht, keine Ahnung, es macht

01:29:41.120 --> 01:29:55.360
Sachen, wie füge ich das da ein, Overwrite, Model, Create, ne, so, also, nicht Metabilder,

01:29:55.360 --> 01:30:12.920
Has Index, ne, Entity, Entity ist Cute Chat Text, so, Has Index, so, und zwar ein Index

01:30:12.920 --> 01:30:19.240
nicht auf der Document Number, sondern für den Text, und dann aus irgendwelchen Gründen,

01:30:19.240 --> 01:30:27.600
Has Method Gin und Has Operators Gin Triggum Ops, was auch immer, zumindest deckt sich das

01:30:27.600 --> 01:30:37.840
mit dem, was der Typ hier von Hand macht, er sagt, Create Index, darauf, Name, für Test

01:30:37.840 --> 01:30:42.720
Table, Using Gin, was auch immer Gin ist, Gin ist wahrscheinlich irgendwas für Text

01:30:42.720 --> 01:30:49.160
Search, ne, Gin, Gin, was ist Gin?

01:30:49.160 --> 01:31:00.360
Text und Gin Index, aha, Gin Indexes, also irgendwelche super High IQ Geschichten, die

01:31:00.360 --> 01:31:07.680
in Postgres drin sind, und dann muss man sagen, das ganze macht man, das ganze indiziert man

01:31:07.680 --> 01:31:15.520
mit dem Gin Triggum Ops Algorithmus, und dann sieht das so aus, und ich weiß nicht, ob

01:31:15.520 --> 01:31:20.160
das geht, ich weiß nicht, was es macht, ich hab das nur aus dem GitHub Issue rausgesucht,

01:31:20.160 --> 01:31:24.480
das probieren wir jetzt mal aus, das heißt, wir lassen die Datenbank jetzt nochmal neu

01:31:24.480 --> 01:31:36.840
erstellen, bei HTTP können wir suchen, HTTP findet immer 4,5 Millionen, das ist eigentlich

01:31:36.840 --> 01:31:43.600
ein guter Test, einfach HTTP suchen, das ist eigentlich ziemlich High IQ, wir lassen einfach

01:31:43.600 --> 01:31:54.120
HTTP suchen, 10 mal, wir lassen 10 mal HTTP suchen, weil HTTP findet er immer, ok und

01:31:54.120 --> 01:32:00.080
jetzt müssen wir die Datenbank neu erstellen lassen, Copy Paste, Hauptsache klappt, also

01:32:00.080 --> 01:32:06.280
wir lassen jetzt die Datenbank neu erstellen, mit diesen neuen Options, und nochmal neu

01:32:06.280 --> 01:32:14.240
befüllen, und dann gucken wir, ob es schneller ist, kannst du das Logging beim Insert ausmachen,

01:32:14.240 --> 01:32:28.480
das ist eine gute Frage, wie man das macht, EF Core Disable Logging, ist Manjaro Architekt

01:32:28.480 --> 01:32:36.880
inzwischen outdated, nee, Manjaro Architekt ist immer aktuell, Architekt ist quasi NetInstall,

01:32:36.880 --> 01:32:46.800
glaube ich von dem Ding, so die minimal NetInstall, alter, scheint ja High IQ zu erfordern, um

01:32:46.800 --> 01:32:52.000
das Logging auszuschalten, wir lassen das Logging an, so langsam war das jetzt auch

01:32:52.000 --> 01:32:58.440
nicht, ok also Datenbank neu erstellen lassen, außerdem ist es vielleicht gut, wenn das

01:32:58.440 --> 01:33:10.520
Logging an ist, dass ich Fehler sehe, oh, wo wir gerade beim Thema Fehler sind, also,

01:33:10.520 --> 01:33:28.760
achso dann, da müsste man tatsächlich mal gucken, manjaroarchitekt, manjaro.org, so,

01:33:28.760 --> 01:33:55.920
ne, nicht XFCE, will nicht XFCE haben, NetInstall, wirklich, es muss es doch geben, man muss

01:33:55.920 --> 01:34:15.000
doch ne Minimalinstallation machen können, wenn man den ganzen Shit nicht haben will,

01:34:15.000 --> 01:34:26.880
oh, dann weiß ich auch nicht, dann weiß ich auch nicht, aber wir müssen uns jetzt auf

01:34:26.880 --> 01:34:29.840
Datenballstells konzentrieren, warum geht das nicht, warum ist er der Meinung, gint rigim

01:34:29.840 --> 01:34:37.080
ob's does not exist, ah ich weiß warum, weil ich die extension nicht aktiviert habe, man

01:34:37.080 --> 01:34:47.440
muss vorher sagen create extension, pg triggim, damit das funktioniert, das heißt ich muss

01:34:47.440 --> 01:35:02.080
irgendwie ihm hier sagen, model builder, extension, wie, das funktioniert, was has, has postgres

01:35:02.080 --> 01:35:20.360
extension, ne ich will nicht sagen has postgres extension, ich will die aktivieren, post, postgres,

01:35:20.360 --> 01:35:30.720
das war richtig, aber has postgres extension, da krieg ich dann true oder false zurück

01:35:30.720 --> 01:35:45.640
oder sowas, oder insertet er das, wenn es das nicht gibt, ah, achso, das ist keine Frage,

01:35:45.640 --> 01:35:52.200
sondern das ist eine, es hat, also es ist nicht, hat es eine postgres extension, Fragezeichen,

01:35:52.200 --> 01:36:03.680
has hat eine postgres extension, achso, ok, postgres extension, stringname, pg triggim,

01:36:03.680 --> 01:36:15.160
ne, pg triggim, alles klar, postgres ist es, ist es enabled, ist es standardmäßig dabei,

01:36:15.160 --> 01:36:25.920
so run, aha, haha, es funktioniert, poggers, so, dann können wir uns jetzt noch, oh der

01:36:25.920 --> 01:36:32.320
insert könnte jetzt deutlich länger dauern, weil der muss jetzt ja, der muss jetzt ja

01:36:32.320 --> 01:36:38.840
nicht nur den text inserten, sondern, der muss ja auch immerhin, was auch immer noch

01:36:38.840 --> 01:36:59.600
triggim ops macht, machen, das dauert bestimmt lange der insert jetzt, schauen wir mal, halbe

01:36:59.600 --> 01:37:09.880
sekunde länger, ah, schauen wir mal, so programm hier, also run, http müsst ihr ja weiter

01:37:09.880 --> 01:37:17.160
4,5 Millionenfach finden, also wenn alles funktioniert, sollte die suche jetzt deutlich

01:37:17.160 --> 01:37:34.080
schneller sein, freige, os, os ist manjaro linux oder arch by the way, wobei ich ja gehört

01:37:34.080 --> 01:37:49.800
habe, wenn man manjaro verwendet, darf man arch by the way nicht sagen, das ist i3, i3wm,

01:37:49.800 --> 01:37:53.240
da hat gar kein desktop, ich habe nur ein desktop hintergrund, da kann man nichts machen

01:37:53.240 --> 01:38:09.920
hier, hoffe ich bringe nicht noch mehr chrome zum absturz, wie gesagt ich habe selbst installiert

01:38:09.920 --> 01:38:18.000
mit architekt damals, aber irgendwie gibt es ja architekt anscheinend nicht mehr, architekt,

01:38:18.000 --> 01:38:28.560
weil zu viel arch by the way, ich mein du kannst natürlich auch ein, was weiß ich gnome

01:38:28.560 --> 01:38:32.720
desktop nehmen oder so und installierst die e3 und schaltest dann darauf um, das geht

01:38:32.720 --> 01:38:50.200
natürlich auch, leute ich hab, wir haben eine sache gar nicht gemacht, wir hätten sortieren

01:38:50.200 --> 01:38:54.040
müssen, leute wir hätten sortieren müssen vorher, das müssen wir gleich auch nochmal

01:38:54.040 --> 01:38:59.040
testen nachdem wir das hier getestet haben, wir hätten sortieren müssen, weil ich will

01:38:59.040 --> 01:39:04.400
ja in diesem, ich will ja gar nicht nur wissen, wo host drin vorkommt, ich möchte die dinger

01:39:04.400 --> 01:39:14.040
ja auch sortieren, ja zum beispiel, ich schaue wo host drin vorkommt, aber alle die mit,

01:39:14.040 --> 01:39:20.880
die mit dem query string anfangen, will ich höher ranken und sowas und in order by noch

01:39:20.880 --> 01:39:24.560
hinterher zu schießen, kann ich mir vorstellen, das dauert eine ganze ecke länger dann.

01:39:24.560 --> 01:39:40.160
der insort dauert aber auch schon länger, hat jemand geguckt wann der angefangen hat?

01:39:40.160 --> 01:39:53.520
wie groß ist denn meine datenbank jetzt, zack, ah wir sind schon bei 1,5g, ok, wie viel programmieren

01:39:53.520 --> 01:39:56.960
hast du nach der ausbildung einen job gelernt, kann ich nicht sagen, ich bin immer was so

01:39:56.960 --> 01:40:04.600
hobbyprojekte angeht, ziemlich aktiv gewesen quasi, permanent hab ich irgendwas neues

01:40:04.600 --> 01:40:18.880
gebastelt, auf der arbeit selbst gelernt, gar nicht so viel, ok der insort dauert deutlich

01:40:18.880 --> 01:40:46.280
länger, meine ram auslastung ist auch deutlich höher, ist er fertig, ist er fertig?

01:40:46.280 --> 01:41:05.360
das macht ja kaum einen unterschied, das macht ja kaum einen unterschied

01:41:05.360 --> 01:41:28.960
die erste suche, ne die erste suche ist jetzt ein bisschen schneller, oder auch nicht, ja

01:41:28.960 --> 01:41:52.960
die erste suche ist ähnlich langsam, ok wir machen jetzt einen order by, wie groß ist

01:41:52.960 --> 01:42:03.920
die datenbank jetzt, wird eine ganze ecke größer, ok da hauen wir jetzt ein order by

01:42:03.920 --> 01:42:29.400
drunter, order, da, order, order by absteigend, text starts with query, ne das funktioniert

01:42:29.400 --> 01:42:47.480
jetzt ja an der stelle nicht, ok, wir testen mal kurz, so auch mal http, jetzt waren wir

01:42:47.480 --> 01:42:53.560
hier massive huge SQL injection, macht sowas auf gar keinen fall, ich sag's nur, ne nicht

01:42:53.560 --> 01:43:08.160
dass einer auf so ne idee kommt, ah ne moment ich habs ans falsche auch noch dran gebaut,

01:43:08.160 --> 01:43:25.120
0, alter was ist hier mit dem einfügen los gerade, so wie schnell ist das jetzt, ah falscher

01:43:25.120 --> 01:43:44.360
orner, ok, order by, ok 4,5 millionen dinger orderen, ne wir suchen hier nach, wir suchen

01:43:44.360 --> 01:43:57.320
hier nach, wir wollen nur die finden, ok das ist schnell, das ist schnell, das ist bestimmt

01:43:57.320 --> 01:44:08.200
nicht so schnell mit dem anderen, das flutscht ja mal richtig jetzt, wie viel findet er da

01:44:08.200 --> 01:44:18.280
insgesamt, einfach nur mal den count ausgeben, macht ja keinen unterschied, ja ok jetzt sind

01:44:18.280 --> 01:44:22.400
wir jetzt sind wir schon deutlich schneller, ich glaube einfach wenn man was sucht was

01:44:22.400 --> 01:44:29.560
es nicht gibt, dann ist es halt oder wenn es, na gut 4,5 millionen halt, ja das ist dann

01:44:29.560 --> 01:44:37.040
schnell kann er gleich erkennen, ok das ist schnell, das ist zag ich jetzt, sieben millisekunden,

01:44:37.040 --> 01:44:47.480
ja das ist mal flutscht, da flutscht der autocomplete, da flutscht der autocomplete richtig, ehm

01:44:47.480 --> 01:44:54.360
ich hab noch ne idee, dass wir immer die gleichen daten bekommen, sollten wir den seed setzen

01:44:54.360 --> 01:45:00.560
von dem random generator, also dass wir immer die gleichen random daten bekommen, ihr wisst

01:45:00.560 --> 01:45:08.680
was ich mein, oder, sieht ja erstmal so aus als widerspricht sich das aber, seed, ne,

01:45:08.680 --> 01:45:21.320
set, seed, wie ging das, seed, so seed, ne, bogus.net, seed, man konnte da irgendwie setzen

01:45:21.320 --> 01:45:32.400
dass der immer mit dem gleichen anfängt, glaube ich zumindest, seed, ne, randomizer

01:45:32.400 --> 01:45:54.500
seed, hier randomizer seed, also muss man sagen, baker, ne, baker, ne, seed, bin zu

01:45:54.500 --> 01:46:10.080
dumm dafür, wie geht denn das, wie gibt es da nen randomizer, seed, ah ok, new random,

01:46:10.080 --> 01:46:14.720
ok, ja new random 1,2,3,4,5,6, ja perfekt, so und jetzt sollten wir immer die gleichen

01:46:14.720 --> 01:46:20.520
daten kriegen in die datenbank, randomized, einmalig, aber immer die gleichen, hoffe

01:46:20.520 --> 01:46:27.720
ich, muss ich das vielleicht so umsetzen, zuerst den seed bevor ich das mache, ja bestimmt,

01:46:27.720 --> 01:46:34.360
ok, so ich würde sagen jetzt können wir es mal vergleichen, jetzt können wir es mal

01:46:34.360 --> 01:46:42.000
direkt vergleichen, also wir machen die gleiche sache, new random 1,3,3,7, ja ok das ist

01:46:42.000 --> 01:46:50.400
ne gute idee, das machen wir, 1,3,3,7, sehr schön, so also wir deaktivieren das jetzt

01:46:50.400 --> 01:46:58.080
mal, so, wir deaktivieren das jetzt, müssen wir den kram nochmal seeden lassen, aber ok,

01:46:58.080 --> 01:47:04.920
wir deaktivieren das jetzt mal, dass der, diese ganzen indizierungsgeschichten macht

01:47:04.920 --> 01:47:14.800
und lassen es mal befüllen, so, run, das geht jetzt schneller, das geht jetzt schneller

01:47:14.800 --> 01:47:24.440
weil es das insert ist ohne was, 3,3,7,4,2,0,6,9, ja noch besser, dann hast du auch noch, hast

01:47:24.440 --> 01:47:39.000
so gut wie alle meme numbers mit dabei, so das geht jetzt schneller, das dauert jetzt

01:47:39.000 --> 01:47:45.200
plus 30 sekunden oder so, so jetzt, jetzt müssen wir sehen, dass das ziemlich langsam

01:47:45.200 --> 01:47:52.720
ist, erstmal gucken was da für random sachen drin ist, das dürfte jetzt relativ langsam

01:47:52.720 --> 01:48:00.960
sein, weil wir keinen index und nix haben, ja ja, so, ich lasse den jetzt mal machen,

01:48:00.960 --> 01:48:04.840
habe ich irgendwelche, übrigens danke für die ganzen subs leute, das ist heute kaputt,

01:48:04.840 --> 01:48:10.160
die subscrib, die subscription, das subscription overlay ist kaputt, ich mein man könnte mal

01:48:10.160 --> 01:48:17.280
testen ob es wieder funktioniert, aber ich glaube nicht, es funktioniert immer wieder,

01:48:17.280 --> 01:48:23.040
skulky, skungy, danke schon für den sub, nee ist immer noch kaputt, mal follow mal aus

01:48:23.040 --> 01:48:41.840
und wieder an, ne scheint immer noch broken zu sein, probier es mal aus, steamlabs, steamlabs,

01:48:41.840 --> 01:49:05.760
login, login, continue with twitch, ok, steamlab funktioniert mal wieder, alert box test resub,

01:49:05.760 --> 01:49:17.560
alert send, ja oder auch nicht, test subscription, nö, test follow, nö, ist einfach, ist einfach

01:49:17.560 --> 01:49:28.760
broken, vielleicht muss ich mal länger ausschalten, dass es reloadet, test follow, nö, da müssen

01:49:28.760 --> 01:49:33.480
wir bis zum nächsten stream warten bis es funktioniert, aber dankeschön leute hier

01:49:33.480 --> 01:49:43.480
nightshade, alle auch subscribert, pock, massive pock leute, der samuel, den habe ich gar nicht

01:49:43.480 --> 01:50:02.920
gesehen, danke für den sub, ich muss die scene switchen und jetzt hat es reloaded,

01:50:02.920 --> 01:50:19.800
ist, ich kriege, ich kriege obs erklärt hier, poggers, nö, ist immer noch kaputt, vielleicht

01:50:19.800 --> 01:50:30.160
muss ich echt, vielleicht haben die gerade problem immer noch bei steamlabs, alert macht

01:50:30.160 --> 01:50:38.560
bedge, ja, so was macht der seed, er seedet noch, aber ich habe den kram doch jetzt ausgeschaltet,

01:50:38.560 --> 01:50:48.320
ne, hab gesagt, model, ja ausgeschaltet, alles ausgeschaltet, ok, seedchamp macht er, ah

01:50:48.320 --> 01:50:57.320
ist fertig, ok, guckt mal, guckt mal, sieben millisekunden versus, sieben millisekunden

01:50:57.320 --> 01:51:05.840
versus 162 millisekunden, das ist schon ein großer unterschied und ich könnte mir vorstellen,

01:51:05.840 --> 01:51:12.680
dass es bei real world data, die nicht immer exakt gleich aufgebaut ist, noch deutlich,

01:51:12.680 --> 01:51:20.880
deutlich einen größeren unterschied gibt, seedchamp ist, der chat wieder, alter, seedchamp

01:51:20.880 --> 01:51:35.800
ist ein guter namen für eine samendatenbank, monkaS, kachibas, ja, ok, aber das ist schon

01:51:35.800 --> 01:51:45.260
ziemlich, ziemlich zackig, dann würde ich sagen, ähm, kommentieren wir das mal aus

01:51:45.260 --> 01:51:53.960
und schauen uns mal den ersten match an, ob das, ob das überhaupt stimmt, was der da

01:51:53.960 --> 01:52:23.040
ausgibt, result, burst, text, run, ach guck dir mal einer an, wenn du den text ausgibst,

01:52:23.040 --> 01:52:28.320
ist es sogar noch langsamer, ist das, versucht das ding das irgendwie zu optimieren, wenn

01:52:28.320 --> 01:52:36.180
du nur count machst, dass es nur zählt und kein text, kein content abruft und wenn du

01:52:36.180 --> 01:52:42.380
den text ausgibst, dann muss es content abrufen, irgendwie sowas, vielleicht versucht es richtig

01:52:42.380 --> 01:52:48.180
big brain zu sein, also leute, wir müssen immer den text ausgeben, um die richtige,

01:52:48.180 --> 01:52:57.440
richtig geschwindigkeit zu erkennen, ja, also, aktuell haben wir 334 millisekunden pro

01:52:57.440 --> 01:53:05.960
suche, das ist natürlich nicht schön, ähm, ja, wollen wir noch irgendwie sonst was testen,

01:53:05.960 --> 01:53:11.880
das ist die langsame variante, so und wir können es ganz einfach beschleunigen, indem

01:53:11.880 --> 01:53:18.320
wir, und jetzt ist die datenbank, sekunde, jetzt ist die datenbank 1,4 g groß und danach

01:53:18.320 --> 01:53:23.160
ist 1,4, das macht ja kaum einen unterschied, also das lohnt sich ja auf jeden fall, das

01:53:23.160 --> 01:53:28.840
indizieren zu lassen, das einzige ist, der insert ist deutlich langsamer, aber was juckt

01:53:28.840 --> 01:53:33.480
mich der insert, ich update die datenbank, keine ahnung, einmal in der stunde oder so,

01:53:33.480 --> 01:53:42.200
da juckt mich das ja gar nicht, nice, nice, nice, das gefällt mir, gut, dann machen wir

01:53:42.200 --> 01:53:46.160
jetzt, dann machen wir jetzt das autocomplete frontend, ich lasse den jetzt nochmal siedeln

01:53:46.160 --> 01:53:58.080
und nochmal einfügen, aber da müssen wir nämlich zugucken, was ist das ding hier,

01:53:58.080 --> 01:54:13.920
was hat er für schmerzen, deleted, start new, gut das ist das query, ja gut, run, also

01:54:13.920 --> 01:54:21.800
340, merkt euch mal, 340 millisekunden gecached, 340 millisekunden gecached und jetzt lassen

01:54:21.800 --> 01:54:28.480
wir ihn nochmal laufen mit dem ganzen text search, optimierungsgramm und wir legen schon

01:54:28.480 --> 01:54:34.520
mal unser frontend an, nochmal will ich dem dann nicht zugucken bei, waren wir auf dem

01:54:34.520 --> 01:54:43.680
nächsten tab, rider, wie habe ich es genannt, champ, irgendwas mit champ, search, ok, wie

01:54:43.680 --> 01:54:55.760
war das jetzt nochmal mit zweltprojekt, zweltkitprojekt anlegen, npx, nee, zwelt, install, nee erstmal

01:54:55.760 --> 01:55:02.720
npm update machen, mit elasticsearch, ja sowas ähnliches machen wir heute auch, nur dass

01:55:02.720 --> 01:55:11.600
wir postgres unten drunter verwenden, so also, weil man mkdir, ein ordner für unser frontend,

01:55:11.600 --> 01:55:18.640
wir nennen es einfach frontend, frontend, nee wir müssen das mit zweltprojekt machen, war

01:55:18.640 --> 01:55:30.440
das at next, hier init, init, init zwelt at next, das ist es, aber wir machen vorher noch

01:55:30.440 --> 01:55:51.280
npm update, minus g, mache ich das richtig leute, nee, nee ich muss nicht sudoen, normalerweise

01:55:51.280 --> 01:56:21.200
sollte der das hier npm installieren, npm init, was macht das hier überhaupt, npm,

01:56:21.200 --> 01:56:27.720
geht das das direkt von der seite runter, oder ist das jetzt, was macht das, nehmt das das

01:56:27.720 --> 01:56:45.000
was ich installiert hab, guckt ihr im internet nach, javascript zeug alter, sudo npm azure,

01:56:45.000 --> 01:56:57.680
ok npm how to upgrade cli tools, npm upgrade, npm upgrade ist es, npm upgrade, was ist das,

01:56:57.680 --> 01:57:06.760
wo ist der unterschied, minus g, ok sudo, warum, das hat er doch sonst auch immer bei mir im

01:57:06.760 --> 01:57:20.440
heimatverzeichnis installiert, weil ich eben gesagt hab, schmeißt diesen ganzen kram bei

01:57:20.440 --> 01:57:37.880
mir, moment hab ich das gelöscht, npm global local user, das ging doch, ah so musste man

01:57:37.880 --> 01:57:50.600
das machen, npm config set prefix, genau, und jetzt kann ich, ah ja ok ok, ok, minus

01:57:50.600 --> 01:58:04.520
g, minus g, nein, npm, upgrade, gut ist ja auch nichts installiert, oder update, ist

01:58:04.520 --> 01:58:17.640
ja nichts installiert, ok, alles klar, add next, so unsere app heißt einfach nur frontend,

01:58:17.640 --> 01:58:25.520
create yes, this is betasoftware, skeleton project, typescript no, linting, wer braucht

01:58:25.520 --> 01:58:38.520
linting, gbaited, prettier, no, alles klar, cd, frontend, npm install, shit in it, sparen

01:58:38.520 --> 01:58:48.160
wir uns jetzt erstmal und jetzt den browser aufmachen, welcome to swelledkit, alles klar,

01:58:48.160 --> 01:58:52.160
sehr schön, warum wir eine swelledkit app machen, verstehe ich auch nicht, eigentlich

01:58:52.160 --> 01:58:55.480
brauchen wir das gar nicht an der stelle, wir wollen ja serverseite nicht wirklich was

01:58:55.480 --> 01:59:08.000
rendern, wurscht, so, dann machen wir visual studio code auf, wir tauschen die desktops

01:59:08.000 --> 01:59:15.600
mal kurz, das kommt auf 4 und das kommt auf 3 und es möchte neu gestartet werden, auch

01:59:15.600 --> 01:59:23.560
ok und dann machen wir die frontendgeschichte, wie weit ist unsere datenbank eigentlich,

01:59:23.560 --> 01:59:52.680
oh, ist meine t-max session gerade verreckt, war das zu viel text, mein ram war voll, oh,

01:59:52.680 --> 02:00:00.320
ich glaube ich habe unlimited scrollback buffer, das ist keine gute idee für den so einen

02:00:00.320 --> 02:00:09.400
fall, ich glaube mein termin hat gerade meinen ram voll gemacht, naja, kommt mal vor, docker

02:00:09.400 --> 02:00:22.320
ps, der läuft aber noch, er läuft noch, er läuft noch, run, dann muss der jetzt nochmal,

02:00:22.320 --> 02:00:28.480
dann muss der nochmal sehen jetzt, aber vielleicht, vielleicht ist er ja auch fertig, meint ihr

02:00:28.480 --> 02:00:40.320
der war fertig schon, ne, wir lassen es nochmal laufen, ne, der war noch nicht fertig,.net

02:00:40.320 --> 02:01:04.880
run, ok, so, machen wir unser frontend zeug weiter, so, next, rider, search champ, frontend,

02:01:04.880 --> 02:01:14.200
social studio code ist auf, open, damn, so, das erste was wir brauchen ist darksteam,

02:01:14.200 --> 02:01:28.400
ne, damit schlage ich mich jetzt nicht rum, readme, source, roots, indexwelt, alles klar,

02:01:28.400 --> 02:01:36.480
ein, nochmal reload, gib ihm, reload so oft du willst, so, ok, wir machen dann autocomplete,

02:01:36.480 --> 02:02:06.240
jetzt, haben wir es jetzt, ec, ok, dann machen wir das jetzt, ok, ok, ok, ok, ok, ok, ok,

02:02:06.240 --> 02:02:23.360
machen wir das jetzt, machen wir jetzt, app, body, style, background, background color,

02:02:23.360 --> 02:02:37.800
ist nicht ganz so schlimm, eins, zwei, ok, sehr schön, so, wir müssen noch tailwind

02:02:37.800 --> 02:02:46.960
adden, für mehr css styles, das haben wir doch letztens ja auch schon gemacht, install,

02:02:46.960 --> 02:03:14.240
add latest, yes, forms, dass es schöner aussieht, schrift dann ec, ok, wir machen das, der chat

02:03:14.240 --> 02:03:25.160
sagt uns wie das auszusehen hat, wie sieht das gesiede eigentlich aus, oh, oh, oh, das

02:03:25.160 --> 02:03:35.160
sieht es immer noch, und wie sieht das aus mit tmp, postgres, sudo, wie groß ist, wir

02:03:35.160 --> 02:03:41.360
sind fast fertig Leute, bei 1,6 war das letzte mal fertig, 1,6 war das letzte mal durch,

02:03:41.360 --> 02:03:47.280
gleich haben wir es geschafft, gleich fertig gesiedet, ich hoffe mein terminal kackt nicht

02:03:47.280 --> 02:03:57.880
ab, mein ram ist gleich wieder voll, ich glaube unlimited scrollback buffer ist keine gute

02:03:57.880 --> 02:04:14.280
idee wenn man sowas im terminal macht, oh, oh, oh, Leute mein ram ist gleich voll, praege,

02:04:14.280 --> 02:04:34.440
reicht der ram, wir haben es geschafft, noch 100mb, noch 100mb in die datenbank, ich kann

02:04:34.440 --> 02:04:38.080
jetzt nichts mehr redirecten, da läuft es wieder 10 minuten, ich habe keinen swap, ich

02:04:38.080 --> 02:04:46.200
habe 16g ram, das muss reichen, nur für die vm, mein host hat 32, das muss reichen, swap,

02:04:46.200 --> 02:05:14.480
immer swapless, gleich haben wir es geschafft, 86% ram, ich glaube er ist fertig, ram auslastung

02:05:14.480 --> 02:05:26.640
geht runter, jawoll, ok, ja es hat gereicht, easy, so beenden, beenden und unbedingt deleted

02:05:26.640 --> 02:05:38.520
rausnehmen und create rausnehmen, so und jetzt mal gucken wie schnell die suche ist, 21ms,

02:05:38.520 --> 02:05:51.200
das flutscht, das riecht krass schnell oder, boah, alter mein scrollback buffer, guck mal,

02:05:51.200 --> 02:05:58.360
wie viele sind das, 1, 9, also fast 10 millionen zeilen, alles klar so viel braucht man natürlich

02:05:58.360 --> 02:06:04.520
in seinem terminal, das ist sehr sehr wichtig, sehr sehr wichtig, ich werde mal kurz das

02:06:04.520 --> 02:06:14.240
terminal zumachen, damit ich ein bisschen ram frei bekomme, auf einschlag, paar gigabyte

02:06:14.240 --> 02:06:27.960
mehr frei, run, ok, und zwar noch alles, 18ms, ok, also was soll ich als schrift verwenden,

02:06:27.960 --> 02:06:36.840
habt ihr gerade gesagt, ah das hab ich noch, ok, also wir halten uns jetzt aber wirklich

02:06:36.840 --> 02:06:58.400
nicht mit den schönheiten auf hier, ja, class, text, äh ne, ne, äh, was nicht, nicht text,

02:06:58.400 --> 02:07:09.080
achso, haha, die sache ist hier gar nicht drinnen, äh, text, oh wie ging das mit tailwind nochmal

02:07:09.080 --> 02:07:19.080
so was spezielles, man konnte doch irgendwie sowas hier machen, ne, ne, oh da bin ich zu

02:07:19.080 --> 02:07:31.560
low iq für, und wir müssen autosave wieder einmachen, format, format und save muss wieder

02:07:31.560 --> 02:07:49.680
eingeschaltet werden, jawoll, nicht style, quatsch, chat, chat hat wieder keine ahnung,

02:07:49.680 --> 02:08:10.560
was ist, ah so ging das, tailwind magic, so, so, und dann brauchen wir äh margin, ich

02:08:10.560 --> 02:08:14.040
kanns mir immer nicht merken was der unterschied zwischen margin und padding ist, padding

02:08:14.040 --> 02:08:19.920
ist innen und margin, ne, padding ist außen und margin ist innen vom element, ne, also

02:08:19.920 --> 02:08:34.360
will ich padding haben, außen, vier, landscape, dankeschön für den sub, gut, tailwind forms,

02:08:34.360 --> 02:08:39.600
wie hat man das jetzt nochmal hinzugefügt, margin ist außen, also will ich, also will

02:08:39.600 --> 02:08:51.720
ich m4 haben, ok alles klar, require plugin tailwind forms, so, jetzt sehen nämlich meine

02:08:51.720 --> 02:09:10.640
inputs auch hübsch aus, so, das hier ist pifat, cute, chat, text, search, class, text, xl,

02:09:10.640 --> 02:09:22.520
2xl, 3xl, ne gibts, oh, so, 2xl und font bold, sehr schön, so, beste, so, also viel

02:09:22.520 --> 02:09:35.400
hübscher kann die seite nicht mehr werden, input, inputfeld, iiih, ich habe legit keinen

02:09:35.400 --> 02:09:47.720
bock ein inputfeld zu stylen, inputfeld stylen sind abartig, class, strap, ne, ne, ne, ne,

02:09:47.720 --> 02:09:52.120
wir machen, leute ich mach das absichtlich selbst, weil ich keinen plan von css hab und

02:09:52.120 --> 02:10:04.640
ich will das ein bisschen lernen, bg, nicht transparent, black, ok, das funst schonmal,

02:10:04.640 --> 02:10:11.480
also bg, bg, jetzt brauchen wir ne schöne farbe, die dazu passt, wir brauchen, wir brauchen

02:10:11.480 --> 02:10:15.760
ne schöne farbe, die dazu passt, also wir nehmen, wir nehmen mal die eingebauten dinger,

02:10:15.760 --> 02:10:35.840
cray, so, so, jawoll, perfekt, so und dann sagen wir hier noch, das margin, bottom, here,

02:10:35.840 --> 02:10:41.320
w, full, so über die ganze seite, so und jetzt haben wir unser super krasser autocomplete

02:10:41.320 --> 02:10:54.400
am start, massive, beste autocomplete aller Zeiten, leute, die wir hier haben, poggers,

02:10:54.400 --> 02:11:03.360
so und jetzt müssen wir schauen, wie wir hier events hinbekommen, also, script, jetzt muss

02:11:03.360 --> 02:11:13.880
ich ein bisschen überlegen, also wir müssen mitbekommen, wenn man text typed, also value,

02:11:13.880 --> 02:11:18.880
bind value, da brauchen wir sowas wie let, nennen wir mal text, text ist standardmäßig

02:11:18.880 --> 02:11:27.920
leer, bind, text, kann ich sich einfach value nennen, dann kann der kram hier weg, ne, oder

02:11:27.920 --> 02:11:37.120
so, konnte man das hier irgendwie abkürzen, wenn das gleich heißt, value, achso, ne, das

02:11:37.120 --> 02:11:44.920
konnte ich weglassen, das konnte ich weglassen, ok, das bedeutet, wenn ich da jetzt was eingebe,

02:11:44.920 --> 02:11:49.240
dann bekomme ich es hier unten mit, ja, also theoretisch bekomme ich es dann hier unten

02:11:49.240 --> 02:12:05.200
mit, ok, also die variable wird gefüllt, wenn ich was eingebe, margin top 10, so, also ich

02:12:05.200 --> 02:12:09.320
bekomme schon mit, wenn man text eingeben, jetzt muss ich ein query zu meinem, oder query

02:12:09.320 --> 02:12:21.920
wie auch immer, zum Server schicken, für jede Texteingabe und dann das Ergebnis zurückgeben,

02:12:21.920 --> 02:12:27.920
ok, schauen wir mal, schauen wir mal, erstmal müssen wir den Server programmieren, dass

02:12:27.920 --> 02:12:46.080
er ordentliche Antworten schickt, konnte man nicht hier draufklicken, das ging zu, achso,

02:12:46.080 --> 02:12:58.600
das war die Frage im Chat, first level support ist grausam, wo ist die Frage, hier, moin max,

02:12:58.600 --> 02:13:05.320
ich muss mal kurz den Bonbon futtern, moin max, habe mal eine Frage bezüglich IT-Einschieb,

02:13:05.320 --> 02:13:08.960
habe die Möglichkeit in die IT als gelernter Einzelhändler einzusteigen, also ich höre

02:13:08.960 --> 02:13:16.160
erstmal nur first level support, also ich sag nicht, dass es allgemeingültig ist, was ich

02:13:16.160 --> 02:13:21.080
hier sage, muss ich gleich dazu sagen, aber meiner Erfahrung nach, vom aktuellen Arbeitgeber,

02:13:21.080 --> 02:13:28.920
wo ich jetzt bin, einmal first level, immer first level, sie haben den Leuten, die damals

02:13:28.920 --> 02:13:32.640
unter anderem mit solchen Voraussetzungen angefangen haben, immer gesagt, so nach dem

02:13:32.640 --> 02:13:36.920
Motto, ja fang doch mal first level an und danach hast du Aufstiegschancen, danach kannst

02:13:36.920 --> 02:13:46.640
du woanders hin, es hat bisher bei einem funktioniert und auch nur mit ganz viel durch die Reifen

02:13:46.640 --> 02:13:51.000
springen und er hat dann nach einem halben Jahr gekündigt, weil ihm das zu bunt wurde,

02:13:51.000 --> 02:13:55.000
so dieses wir wechseln in ein anderes Team, also ich kann es von meinem Arbeitgeber sagen,

02:13:55.000 --> 02:14:03.760
einmal first level, immer first level, oder einmal support, immer support und ganz ehrlich,

02:14:03.760 --> 02:14:09.560
support ist eines der undankbarsten Dinger, die du überhaupt machen kannst, das musst

02:14:09.560 --> 02:14:17.160
du halt abwägen, also wenn du sagst, hey du redest eh gerne mit Leuten, also das kann

02:14:17.160 --> 02:14:20.600
man, ich kenne immer noch von mir ausgehen, wenn du sagst, du hast Spaß daran mit Leuten

02:14:20.600 --> 02:14:26.920
zu reden, Leuten irgendwie bei ihren Problemen zur Seite zu stehen, wie auch immer und dich

02:14:26.920 --> 02:14:34.720
fackt dein Einzelhandelsberuf so ab, dass du lieber quasi support arbeitest, dann machs,

02:14:34.720 --> 02:14:40.640
ja klar warum nicht und man kann ja auch nicht allgemeingültig sprechen, dass das in jedem

02:14:40.640 --> 02:14:50.760
Unternehmen so sein müsste, einmal first level, immer first level, bei uns ist es halt so,

02:14:50.760 --> 02:15:06.640
also wenn ich das richtig abfackt im Einzelhandel, dann machs, ja ok, also wir geben jetzt hier,

02:15:06.640 --> 02:15:14.120
wir brauchen jetzt hier eine, ein Endpunkt für unseren HTTP Request, dem wir ein Query

02:15:14.120 --> 02:15:27.040
Parameter übergeben, String Query und muss ich mal überlegen, wie mach man das jetzt,

02:15:27.040 --> 02:15:33.120
so wie hier, das kommt auf jeden Fall weg, das da brauche ich, das da brauche ich, der

02:15:33.120 --> 02:16:02.320
Rest kommt weg, so, wir brauchen einen db-Kontext, ab db-Kontext, so, Query, return result, so

02:16:02.320 --> 02:16:09.080
und wir return definitiv nicht alles, sondern wir returnen nur die letzten, wie viele, Leute,

02:16:09.080 --> 02:16:15.520
wie viele Sachen in so einem Auto complete sind sinnvoll, 10, 20, mein alles definitiv

02:16:15.520 --> 02:16:29.640
nicht, da kackt mein Browser ab, 10, würde ich auch sagen, 10, 10, ok, by the way, macht

02:16:29.640 --> 02:16:36.560
so eine Scheiße hier nicht, ja, irgendwelche String Zusammengefüge in HTTP Request, das

02:16:36.560 --> 02:16:42.280
ist so eines der, der sichersten Garantien sich irgendwelche SQL Injection Scheiße einfangen

02:16:42.280 --> 02:16:54.720
zu lassen, SQL Injection goes brrr, ja, auf jeden Fall, so, ich glaube mehr brauchen wir

02:16:54.720 --> 02:17:05.320
an der Stelle gar nicht, ich glaube es geht an der Stelle sogar, weil das ne fertige Funktion

02:17:05.320 --> 02:17:11.820
ist, die das escapt, ich gehe davon aus, die escapen das, also, wenn ich jetzt hier

02:17:11.820 --> 02:17:17.200
sowas machen würde, drop table, wie auch immer, oder hier reinschreiben würde man

02:17:17.200 --> 02:17:30.560
query drop table, das dürfte nicht funktionieren, weil die das hier schon escapen, ja ja, ich

02:17:30.560 --> 02:17:35.480
gehe ganz stark davon aus, die escapen das schon für mich, also ich kann das machen

02:17:35.480 --> 02:18:02.560
in dem Fall, was soll denn der escape character sein, achso, nee, ich glaube das in dem Fall

02:18:02.560 --> 02:18:06.600
schon okay, ich glaube die escapen das hier für ein, aber man sollte das wirklich nur

02:18:06.600 --> 02:18:17.800
mit sehr Vorsicht genießen, ja, okay, also, weiter im Text, das sollte eigentlich reichen,

02:18:17.800 --> 02:18:23.120
wenn ich das jetzt starte und ein Query übergebe, dass ich Antworten in JSON bekomme, probieren

02:18:23.120 --> 02:18:41.640
das doch mal aus, run, okay, es läuft, also, curl local, achso, welchen port läuft denn

02:18:41.640 --> 02:18:48.160
das überhaupt, alter, 5268, das ist auch so ein komischer port, so, slash, api, slash,

02:18:48.160 --> 02:18:59.360
was haben wir gemacht, get, achso, gar nichts, das kann nicht funktionieren, das kann nicht

02:18:59.360 --> 02:19:06.440
funktionieren, Moment, das ist falsch, falsch hier, irgendwas, nee, nee, nee, das muss ich

02:19:06.440 --> 02:19:14.880
anders machen, ich muss sagen, http, get, so, und dann template, so, wir wollen das ganze

02:19:14.880 --> 02:19:25.720
mappen unter slash api slash search und dann irgendwie Query, so, so in der Richtung, glaube,

02:19:25.720 --> 02:19:31.480
muss man das machen, wenn ich das jetzt im Kopf richtig habe, search und dann suchen

02:19:31.480 --> 02:19:36.280
wir nach, nach was habe ich hier gesucht, dass ich auch auf jeden Fall was finde, was

02:19:36.280 --> 02:19:49.840
finde, süt, süt, süt, hey, uns, guck mal, wie schnell das ist, Leute, alter, das flutscht,

02:19:49.840 --> 02:19:57.360
das ist ja krasser autocomplete, guck mal, wie schnell das ist für 4,5 Millionen Textzeilen,

02:19:57.360 --> 02:20:09.760
das geht richtig, das flutscht, as fuck, feels bad man chain lore, da sieht man mal, die Einschläge

02:20:09.760 --> 02:20:13.240
kommen näher, ich kenne jetzt auch schon ein paar mittlerweile, bis vor kurzem kann ich

02:20:13.240 --> 02:20:24.080
nur zwei mit Corona, wie unterscheiden sich web api zu mvc, aber web api, achso, mvc ist

02:20:24.080 --> 02:20:34.000
doch die Geschichte mit razorpages, oder, ist mvc nicht die Geschichte mit razorpages,

02:20:34.000 --> 02:20:42.200
weil der view sind die razorpages, Leute, ich muss mal einen bonbon duschen, wird's,

02:20:42.200 --> 02:20:46.800
rocke in der Hals, ihr müsst mich, was habe ich gesagt, chat, chat, jetzt aber mal ernstes

02:20:46.800 --> 02:20:51.280
Wort mit dem chat reden, was habe ich euch vor zwei Wochen oder so gesagt, woran ihr

02:20:51.280 --> 02:20:58.640
mich erinnern sollt, richtig, ich soll was trinken, und jetzt habe ich nichts getrunken,

02:20:58.640 --> 02:21:16.560
jetzt habe ich trockenen Hals, sauererei, Anzeige ist raus, so, und jetzt noch ein bonbon

02:21:16.560 --> 02:21:29.200
hinterher, dann ist gut, 42 spielen, ja, alles klar, du hättest das auf jeden fall wissen

02:21:29.200 --> 02:21:44.320
müssen, ja, bei dem name, ok, also, text search, das gehen wir übrigens so nicht zurück,

02:21:44.320 --> 02:21:50.600
aber, egal, zum testen reicht das, ok, wir müssen jetzt ein query machen, bei jedem mal,

02:21:50.600 --> 02:22:00.840
wenn sich das value ändert, sehe ich das richtig, also, jedes mal, wenn sich das value ändert,

02:22:00.840 --> 02:22:11.600
jedes mal, wenn sich mein value ändert, dann machen wir ein fetch zum server, await, patch,

02:22:11.600 --> 02:22:16.720
achso, ich kann da nicht awaiten drin, warum kann ich da nicht awaiten drin, kann ich sowas

02:22:16.720 --> 02:22:29.120
hier machen, async, kachibas, nee, ah nee, nicht async, nee, ist da preserif noch da,

02:22:29.120 --> 02:22:34.400
der kennt sich doch mit zfeld aus, wie macht man das jetzt hier richtig, muss ich da, ich

02:22:34.400 --> 02:22:50.360
muss bestimmt ne function machen, async, function, irgendwie keine ahnung, query server, und,

02:22:50.360 --> 02:23:01.440
das ruf ich einfach auf, jedes mal, irgendwie so, server value, alter, das ist hässlich,

02:23:01.440 --> 02:23:13.080
das gefällt mir nicht, waren das anders, bind, on input, query server, also, immer, wenn

02:23:13.080 --> 02:23:17.800
der input sich ändert, machen wir mal hier die textkonsole auf, dass ich sehe, was passiert,

02:23:17.800 --> 02:23:23.920
immer, wenn sich der input ändert, von meinem search fällt, dann, wir loggen gerade erstmal

02:23:23.920 --> 02:23:44.480
nur was, value, a, b, c, o, a, a, a, ah, das laggt immer eins hinterher, nee, das kann

02:23:44.480 --> 02:24:01.560
ich dafür dann nicht nehmen, heck wait, na, das ist dumm, chico, wo kommst du her, na,

02:24:01.560 --> 02:24:17.320
der pacass ist grad da, na chico, was is, ja ich kann jetzt net, schmeißt wieder die

02:24:17.320 --> 02:24:30.080
runter hier. Chico? Na? Wollt ihr die Katze mal brummen hören? Komm mal her, Chico. Ne,

02:24:30.080 --> 02:24:35.400
die will nicht. Da bist du, komm. Einmal, einmal in das Mikrofon brummen, auf gehts.

02:24:35.400 --> 02:24:43.160
Die will nicht. Die will nicht, dass ich sie nimm. Auf, Chico, komm her. Ich wär wild

02:24:43.160 --> 02:24:57.520
markiert hier am Bein gerade. Ja, Chico, Chico, Chico. Die ist wirklich hartnäckig

02:24:57.520 --> 02:25:06.680
gerade. Chico, komm mal her. Komm mal her. Lass dich mal nehmen. Auf, jetzt gehts. Auf,

02:25:06.680 --> 02:25:13.680
Chico, ich schnapp dir. Ich schnapp sie jetzt.

02:25:36.680 --> 02:25:49.920
Siehst du, Chico? So, jetzt, Chico, hier, brummen in das Mikrofon auf. Ich weiß nicht,

02:25:49.920 --> 02:25:56.960
ob ihr was hört, aber wahrscheinlich nicht. Ihr müsstet aber eigentlich was hören. Nein,

02:25:56.960 --> 02:26:04.920
die will nicht. Sie ist weggeflützt. Musik zu laut. Ja, Chico, dann mach ich die Tür jetzt

02:26:04.920 --> 02:26:21.080
wieder zu. So, alles klar. Weiter, wo sind wir stehen geblieben? Ja, das leckt immer

02:26:21.080 --> 02:26:37.920
eins hinterher. Na, das ist ja doof. Dann müssen wir das doch so machen. Hier. Query

02:26:37.920 --> 02:26:53.320
vor. Und dann irgendwie, wenn sich das ändert oder so, keine Ahnung. Geht das jetzt? Lull.

02:26:53.320 --> 02:27:00.240
Oh, jetzt wirds doppelt ausgeführt. Achso, ja klar, wird doppelt ausgeführt, weil ich

02:27:00.240 --> 02:27:21.520
das doppelt gebindet hab. Lull, jetzt gehts hier, guckt. L-U-L. On key up. Hm. On key

02:27:21.520 --> 02:27:31.080
up, warum nicht? Das, on key down, könnte man probieren. Ich lass das jetzt so, das

02:27:31.080 --> 02:27:46.720
funktioniert. Wir querying jetzt den Server. Also, fetch, await, patch, HTTP, doppelt

02:27:46.720 --> 02:27:59.280
ausgeführt, localhost. Was für nen Port war der Krämpel hier? Ja. Hobby. So, und wir

02:27:59.280 --> 02:28:11.320
suchen nicht sud, sondern wir suchen value. Await, fetch. So, response. Und jetzt nicht

02:28:11.320 --> 02:28:23.160
da. Let, wir sind ja in Javascript. Let, json, gleich, await. So, runde json, parsen. Und

02:28:23.160 --> 02:28:28.840
jetzt brauchen wir hier, nennen wir das nennen wir items, also sprich in array an autocomplete

02:28:28.840 --> 02:28:48.000
vorschlägen. Oh, irgendwas hab ich kaputt gemacht. Error, connection refused. Warum?

02:28:48.000 --> 02:29:06.120
Why is connection refused? Wow. Ah, ich weiß woran das liegt. Das ist eine SvelteKit App.

02:29:06.120 --> 02:29:11.720
Also, das ist eine SvelteKit App, der muss ich erstmal verklickern, dass ich das nur

02:29:11.720 --> 02:29:29.040
im Browser machen will. Browser. Browser. Svelte, Browser. SvelteKit. Nicht kite. SvelteKit.

02:29:29.040 --> 02:29:45.880
Browser. If Browser. Genau. If Browser. Browser. Import Browser. Das da will ich haben. If Browser.

02:29:45.880 --> 02:29:54.640
Mit gebrost. If, nur wenn wir im Browser sind. Eigentlich ist es total bescheuer, dass

02:29:54.640 --> 02:29:59.920
ich was verändere, was Server-Side-Rendering machen kann, wenn ich überhaupt keine Server-Side-Rendering

02:29:59.920 --> 02:30:18.880
Sachen habe. Also, naja. Naja. Ich die Schenke blieb. Console. Oh, Monkey Edge. Was jetzt?

02:30:18.880 --> 02:30:28.120
Course has been blocked. Aber es kackt nicht mehr ab. Course has been blocked. Das stimmt.

02:30:28.120 --> 02:30:36.560
Das funktioniert jetzt nicht, weil die Webseite wird ausgeliefert über Localhost Port 3000

02:30:36.560 --> 02:30:42.960
und der Server selbst läuft auf einem anderen Port. Ich muss jetzt dem anderen Server, der

02:30:42.960 --> 02:30:49.160
muss quasi Anfragen akzeptieren von Seiten, die er nicht ausgeliefert hat. Ich glaube

02:30:49.160 --> 02:31:00.960
aber, wir können das umgehen, indem man die Locale IP verwendet. Ne. Dann brauche ich

02:31:00.960 --> 02:31:25.440
Core-Settings. Darf ich so? Was? Ne. Ne. Ok, dann. Dann brauche ich Core-Settings.

02:31:25.440 --> 02:31:31.960
Ähm. Haben wir da nicht noch irgendwas übrig, wo ich mir das abgucken kann? Kegway as a Service.

02:31:31.960 --> 02:31:38.200
Kegway as a Service hat doch bestimmt Core-Settings oder Core-Settings. New Window. Desktop 5 wird

02:31:38.200 --> 02:31:45.640
langsam viel. Startup. Force. Nein, haben wir nicht. Kegway as a Service hat das nicht.

02:31:45.640 --> 02:31:49.960
Ok, Open. Was haben wir noch? Der Heiz-Champ. Der Heiz-Champ ist keine Web-Anwendung. Der

02:31:49.960 --> 02:32:05.720
Speed-Champ vielleicht. Hat der Speed-Champ sowas? Hm. Ich muss mal kurz in meinem Projekte-File

02:32:05.720 --> 02:32:20.120
suchen. Der Preis-Champ. Den Preis-Champ habe ich hier aber nicht liegen. Course. Wow, wow.

02:32:20.120 --> 02:32:29.120
Wassertrinkzeit habe ich gerade schon. All oder so. Wie nenne ich ihn das immer? Ok,

02:32:29.120 --> 02:32:38.080
egal..NET. Course. Zeig her. All Origin. Ich brauche irgend so ein Template dafür. Aktivieren

02:32:38.080 --> 02:32:44.320
von ursprungsübergreifenden Anfragen. Alles klar. Gibt es das ganze auf Englisch? Jo.

02:32:44.320 --> 02:32:58.920
Hier. Add Policy. Use Course. Ok. Da hat doch bestimmt in Stack Overflow was einer für

02:32:58.920 --> 02:33:19.320
mich schon fertig. Hier. Configure Services at Course. Genau, das will ich haben. Services.

02:33:19.320 --> 02:33:36.040
Ok. Builder. Builder Services at Course. My Policy. Ja, heißt My Policy. Ok. All Origins.

02:33:36.040 --> 02:33:43.600
Allow any Origins. Any Methods. Jawoll. Perfekt. Und hier unten drunter sage ich jetzt App,

02:33:43.600 --> 02:33:57.840
Course, Course. Nee, was muss ich als nächstes machen? Achso. Use Course. Was soll ich jetzt

02:33:57.840 --> 02:34:10.800
machen? Use Course. Und jetzt? My Policy. My Policy. Gib ihm. So und jetzt sollten alle

02:34:10.800 --> 02:34:17.280
Requests erlaubt sein, wenn ich das richtig gemacht habe. Schauen wir mal. Wie kann man

02:34:17.280 --> 02:34:26.240
sich den grau hinterlegten Text einblenden lassen? Was da? Control Leerzeichen. Schauen

02:34:26.240 --> 02:34:34.680
wir mal, ob es geht. Jawoll. Unexpected End of JSON Input. Anzeige ist raus. Warum das

02:34:34.680 --> 02:34:57.560
denn? Loggen wir das mal? Was stimmt da an dem? Geht das immer noch nicht?

02:34:57.560 --> 02:35:27.280
Warte mal. Ist ja. Ist ja meine Course Settings immer noch nicht richtig? 404?

02:35:27.280 --> 02:35:56.880
Häh? 404? Funktioniert doch. Achso. Ah. Moment. If Browser und und Value und gleich

02:35:56.880 --> 02:36:05.040
null. Ich mache gerade Anfrage, ohne dass was drin steht. Ah. Jetzt Funktion auch guckt.

02:36:05.040 --> 02:36:15.840
So. Items. Jetzt ich habe ich habe eine leere Anfrage geschickt. Kann ja nicht funktionieren.

02:36:15.840 --> 02:36:31.160
Items. Schauen wir mal. Also A. B. Was zum? Achso, da findet nichts mit A, B. Also was

02:36:31.160 --> 02:36:46.600
muss ich sagen? Süt. Süt. Ah ja, da oben ist es übrigens. Süt. Nice. Funktioniert.

02:36:46.600 --> 02:36:53.800
Süt. Guck mal, wie schnell das ist, das geht. Ey, das ist richtig, richtig krass schnell.

02:36:53.800 --> 02:37:03.920
Man erkennt es, man erkennt es aber bloß nicht, weil ich das nicht iterate. Also Log. Items.

02:37:03.920 --> 02:37:08.040
Cola oder Pepsi? Ganz ehrlich, keins von beiden. Ich habe ewig nichts mehr davon getrunken.

02:37:08.040 --> 02:37:31.120
So. Süt. Ja, nice. Okay, also das sind unsere Elemente, die wir als Antwort bekommen. Auto,

02:37:31.120 --> 02:37:39.000
Autovervollständigung. Die bestehen aus dem Text und der ID. Na, das ist dumm. Eigentlich

02:37:39.000 --> 02:37:47.400
will ich den Text gar nicht haben. Ich möchte eigentlich nur. Ich möchte nur den Text,

02:37:47.400 --> 02:37:52.000
nicht die ID. Was will ich mit der Datenbank-ID? Das ist ja bescheuer. Die Datenbank-ID brauche

02:37:52.000 --> 02:38:02.760
ich nicht. Die schmeißen wir klar wieder raus. Also. AP Controller. Take 10. Und davon dann

02:38:02.760 --> 02:38:07.040
Select. Sonst wird es sonst. Wenn ich das Select am Anfang mache, wird es mega langsam.

02:38:07.040 --> 02:38:13.880
Und davon dann, also wir sind mit zehn Elementen. So und von diesen Elementen nehme ich jetzt

02:38:13.880 --> 02:38:19.200
nur den Text. Die ID brauchen wir nicht mehr. So. Und eine Sache, die wir auch noch machen

02:38:19.200 --> 02:38:32.080
ist. Ich logge mir mal die Zeit, wie lang so eine Anfrage braucht. Start new. Wobei. Steht

02:38:32.080 --> 02:38:41.160
das nicht sogar? Steht das nicht sogar drinne in diesem Request? Warum das mega langsam

02:38:41.160 --> 02:38:47.980
wird? Nee, Two Array ist kein Performance-Killer. Der muss es ja eh. Der muss ja eh das einmal

02:38:47.980 --> 02:38:52.160
durchlaufen, um es zu returnen. Two Array mache ich nur, dass ich die Zeit messen kann.

02:38:52.160 --> 02:38:57.400
Also. Die Erklärung dafür, warum das langsam wird. Folgendermaßen. Wenn man sich mal dieses

02:38:57.400 --> 02:39:05.200
Query hier anguckt. Das hier. Bis zu diesen. Das hier ist optimiert mit der Postgres. Also

02:39:05.200 --> 02:39:10.720
mit Postgres-Methoden. Also mit diesem PG Triggum und so, was wir gemacht haben am Anfang.

02:39:10.720 --> 02:39:15.520
Also sprich, dass die Textsuche schnell ist. So. Also das hier ist quasi Postgres-optimiertes

02:39:15.520 --> 02:39:21.320
Query. Davon nehme ich 10 Stück und dann wandel ich die um. Nicht in die eigentlichen Objekte,

02:39:21.320 --> 02:39:25.160
die in der Datenbank sind, sondern nur in den Text. Wenn ich das Select zuerst machen

02:39:25.160 --> 02:39:34.120
würde, würde alles hier.NET zur Laufzeit ausgeführt und nicht von der Datenbank. Also

02:39:34.120 --> 02:39:37.880
wenn ich das Select zuerst machen würde, dann würde sich einfach jeden Text aus der

02:39:37.880 --> 02:39:43.600
Datenbank holen und danach jedes Mal zur Laufzeit durchsuchen. Ohne Index und alles. Also manchmal

02:39:43.600 --> 02:40:00.720
ist die Reihenfolge tatsächlich entscheidend. Guck mal. Da sind wir. 11 Millisekunden. Ziemlich

02:40:00.720 --> 02:40:12.520
zackig. Das kann Link nicht wirklich automatisch optimieren. Achso. Naja gut. Ne ich glaube

02:40:12.520 --> 02:40:18.520
nicht, dass Link das automatisch optimiert, weil dass er an was anderes rauskommt. Und

02:40:18.520 --> 02:40:22.720
die Postgres-optimierung gehen ja nicht für Text, sondern die gehen auf die Objekte,

02:40:22.720 --> 02:40:26.720
die ich drinnen gespeichert habe. Das wird so nicht funktionieren. Soll ich es euch zeigen,

02:40:26.720 --> 02:40:34.480
dass es andersherum langsamer ist? Ich beweise es euch einfach. So. Eben hatten wir. Hups.

02:40:34.480 --> 02:40:39.280
Eben hatten wir. Jetzt funktionieren die ganzen Abfragen. Guck mal. Allein schon daran siehst

02:40:39.280 --> 02:40:47.680
du, dass es nicht das gleiche ist. Die Abfragen funktionieren nicht mehr. Mach mal so. Okay,

02:40:47.680 --> 02:40:53.760
das könnte. Es könnte tatsächlich doch noch optimiert funktionieren, aber schauen wir

02:40:53.760 --> 02:41:13.080
mal. Oder bei. Mal gucken. Mal gucken, wie schnell es jetzt ist. Eine Sekunde. 174 Millisekunden.

02:41:13.080 --> 02:41:27.320
Also ihr seht von 11 Millisekunden rauf auf 400. Es macht schon Unterschied. Wo das Select

02:41:27.320 --> 02:41:45.960
steht. Genau. Hier kommt das Menü rein. Die erste Anfrage ist immer ein bisschen langsam.

02:41:45.960 --> 02:42:03.480
Jetzt sind wir wieder runter auf 22 Millisekunden. 11 Millisekunden sind wir wieder. Ja. Und

02:42:03.480 --> 02:42:10.080
es über 166. Warum? Weil wahrscheinlich weil einfach mehr gefunden werden und es

02:42:10.080 --> 02:42:23.600
dauert noch länger. Ja, okay. Damit kann ich leben. Es ist noch tatsächlich. Wenn ich

02:42:23.600 --> 02:42:29.480
das oder bei raus mache, müsste es richtig krass schnell sein, weil das oder bei das

02:42:29.480 --> 02:42:36.920
ist, was es langsam macht. Also oder bei. Da muss er erst mal alles abfragen, um es

02:42:36.920 --> 02:42:41.760
dann zu sortieren. Und dann nehme ich wieder nur zehn weg. Wenn ich es oder bei rausmache,

02:42:41.760 --> 02:42:46.120
müsste das immer im 7 8er Millisekunden Bereich sein. Aber ich krieg halt nicht das, was ich

02:42:46.120 --> 02:43:06.280
haben will. Ja, wir lassen es jetzt so gut. Also das ist das ist unsere Response, die

02:43:06.280 --> 02:43:16.920
wir kriegen, die sehr, sehr zackig ist. Okay. Bin ich gerade ein bisschen aus dem Dix gekommen.

02:43:16.920 --> 02:43:20.600
Okay, wir müssen die anzeigen, dass wir brauchen. Wir brauchen so eine Art Menü, was hier unten

02:43:20.600 --> 02:43:30.200
aufploppt. Also Menü, Menü, was aufploppt. Das Menü, was aufploppt, hängt hier so unten

02:43:30.200 --> 02:43:50.280
drunter. Hat. Die gleiche Hintergrundfarbe. Wie das andere. Is rounded. Und hat Padding

02:43:50.280 --> 02:43:56.200
von vier, dass es auch ein bisschen was aussieht. Das ist unser Menü. Was dann aufploppt.

02:43:56.200 --> 02:44:05.880
Einfach random Einträge raussuchen, bis das Richtige gefunden wird. Das Problem ist dabei

02:44:05.880 --> 02:44:09.120
manchmal ohne Scheiß. Manchmal ist es sogar sinnvoll, so was zu machen. Das Problem ist

02:44:09.120 --> 02:44:13.520
bloß darin, dass es unterschiedlich lange Laufzeiten hat mal. Also du hast immer das

02:44:13.520 --> 02:44:19.960
Potenzial, dass die ersten zehn Treffer die richtigen sind. Aber ansonsten. Aber mit dem

02:44:19.960 --> 02:44:24.040
Order bei funktioniert gar nicht mehr. Da muss er erst mal alles abkragen. Preis ist

02:44:24.040 --> 02:44:30.000
offline. Ja, da hatte ich keinen Bock mehr, das weiter zu basteln. Ok, also das Menü zeigen

02:44:30.000 --> 02:44:42.000
wir nur an, wenn in value was drinnen steht und Items auch geladen oder nur wenn Items

02:44:42.000 --> 02:44:57.000
ausgeladen sind. Reicht ja. Ok, also if view if ich kann es mir nicht. If. Wie war das?

02:44:57.000 --> 02:45:09.280
If. Ah ja. If Items Länge größer Null, dann rendern wir das Menü. Das Menü wird standardmäßig

02:45:09.280 --> 02:45:15.960
nicht gerendert. Aber. Wenn Items größer Null sind, wird das Menü gerendert. Ich muss

02:45:15.960 --> 02:45:23.800
auch noch eingeben, wenn Items und value was drinsteht. Ok. Ah zack. Ok. Popup funktioniert

02:45:23.800 --> 02:45:29.800
schon mal. Steht zwar noch nicht sinnvoll, ist drinne, aber ok. Und da drinne brauchen

02:45:29.800 --> 02:45:43.960
wir jetzt eine Schleife. Each Items as item Liste. Ok, meine HTML kennt, also jetzt kommt

02:45:43.960 --> 02:45:50.840
es hier. Liste, ein Listelement pro item und dann schreiben wir das rein. Ich bin mal gespannt,

02:45:50.840 --> 02:46:00.320
ob das funktioniert. Item. Schauen wir mal. Ja, prinzipiell, prinzipiell sieht das schon

02:46:00.320 --> 02:46:03.720
mal. Leute, ich muss sagen, das sieht deutlich besser aus, als ich mir das vorgestellt habe.

02:46:03.720 --> 02:46:14.280
Und guck mal, wie schnell die Autocompletion ist. Das, das flutscht mal richtig. Das flutscht

02:46:14.280 --> 02:46:27.120
mal richtig. Ich kann jetzt auch noch Info suchen. Guck mal, es ist egal, was ich suche,

02:46:27.120 --> 02:46:34.720
der findet das irgendwo drinne. So. Info? Wie lange brauche ich für Info? 188 Millisekunden,

02:46:34.720 --> 02:46:40.040
das ist ja nichts für so eine komplette Durchsuchung. Der muss ja dafür quasi die komplette Datenbank

02:46:40.040 --> 02:46:53.560
durchsuchen. Da kannst du dich nicht beschweren. Das ist ziemlich pork. Was sind das eigentlich

02:46:53.560 --> 02:46:58.920
für Daten, das ist random generiert. Random generiert, die Datenbank ist 1,6 Gigabyte

02:46:58.920 --> 02:47:04.800
groß. Und der Witz ist, dadurch, dass wir das indiziert haben, selbst wenn die Datenbank

02:47:04.800 --> 02:47:12.880
zehnmal so groß ist, ist es wahrscheinlich nicht nennenswert langsamer. Du musstest

02:47:12.880 --> 02:47:19.920
debouncen am besten. Ne, ich muss das nicht debouncen. Alles plaud. Ne, wisst ihr was

02:47:19.920 --> 02:47:26.560
wir machen? Wir machen richtig high IQ. Wir machen, wir cancelen den Request. Also, es

02:47:26.560 --> 02:47:32.200
ist ja jetzt aktuell so, wenn ich schnell tippe, wie man hier ja auch sieht zum Beispiel,

02:47:32.200 --> 02:47:41.160
wenn ich jetzt hier schnell tippe, Info, dann macht der Request und ich habe schon mehr

02:47:41.160 --> 02:47:54.040
getippt, bevor der erste Request da ist. 106 Natsch Millisekunden, das ist wirklich gut

02:47:54.040 --> 02:47:59.200
für einen kompletten Request. Faker, ne, nicht Faker.net, bogus.net. Wir können das

02:47:59.200 --> 02:48:05.400
abbrechen. Es gibt nämlich seit ein paar HTML, CSS, JavaScript Versionen, gibt es nämlich

02:48:05.400 --> 02:48:12.240
die Möglichkeit, Requests abzubrechen. Ich weiß nicht, ob ihr das kennt, mit einem Abort-Controller.

02:48:12.240 --> 02:48:21.520
Hat das schon mal jemand verwendet? Ich habe das einmal verwendet bisher und ich weiß aus

02:48:21.520 --> 02:48:25.400
dem Kopf am besten nicht mehr, wie es funktioniert. Ich weiß nur noch, dass es das gibt. Du kannst

02:48:25.400 --> 02:48:31.880
quasi sagen, brich den alten Request ab, wenn ein neuer, also, ne, Schwachsinn. Ich kann

02:48:31.880 --> 02:48:36.560
sagen, ok, wenn ich einen neuen Character tippe und der alte Request noch läuft, dann breche

02:48:36.560 --> 02:48:46.240
ich ihn ab. Das ist sehr praktisch. Das muss ich mir nur hier mal zusammen. War Controller,

02:48:46.240 --> 02:48:51.280
New Controller, ok, wir machen das jetzt richtig. Also, Query Server mache ich immer, wenn es

02:48:51.280 --> 02:49:09.760
Neues, was Neues gibt. Also Controller, Signal und dann Fetch. Cool, Signal. Ich weiß nicht

02:49:09.760 --> 02:49:17.480
wirklich, was ich hier gerade treibe. Also, wir brechen das ab. Bei jedem neuen Request

02:49:17.480 --> 02:49:24.920
da reinkommt, setzen den Controller auf was Neues. Ich glaube, so habe ich das gemacht.

02:49:24.920 --> 02:49:31.640
Genau. So, und jetzt sollte der das, glaube ich, abbrechen. Nein, nein, nein. Jetzt sollte

02:49:31.640 --> 02:49:39.040
der das abbrechen, wenn ich schnell genug tippe. Info. Oh. User aborted the request.

02:49:39.040 --> 02:49:49.120
Nur mit dem Unterschied, dass es jetzt gar nicht mehr funktioniert. Weil ich Controller

02:49:49.120 --> 02:50:00.720
Signal machen muss. Einfach nur Signal so. Was jetzt? Darf man da keinen Punkt machen?

02:50:00.720 --> 02:50:13.160
Warum? Warum? Warum müssen da überhaupt? Warum müssen da so komische Klammern drum

02:50:13.160 --> 02:50:33.200
sein? Warum? Kann man die einfach weglassen? Richte aber nichts ab. Let Signal. Das ist

02:50:33.200 --> 02:50:38.280
bestimmt so ein JavaScript Ding, warum da Klammern drum sein müssen. Wir müssen Klammern

02:50:38.280 --> 02:50:46.040
drum. Okay, meinetwegen. Wenn JavaScript meinetwegen, dann müssen Klammern drum. Info. User aborted

02:50:46.040 --> 02:50:51.640
the request. Ja. Komm mal, ich tippe schnell, dreimal abgebrochen und letzte kommt durch.

02:50:51.640 --> 02:51:01.880
Das funktioniert. Ja, Pongas. Komm mal da. Das funktioniert. Aber vielleicht sollten

02:51:01.880 --> 02:51:14.080
wir jetzt noch ein Try Catch oder so was drumherum machen. Dass wir sagen. Try Catch. Das da.

02:51:14.080 --> 02:51:21.040
Das Lock können wir uns übrigens mal sparen. Error. Ignorieren wir. Null. Kein Error.

02:51:21.040 --> 02:51:32.480
Info. Ja. Wir canceln jetzt oder wir können noch einschreiben. Error. Schreiben wir noch.

02:51:32.480 --> 02:51:39.440
Block. Request. Ppega. Info. Dreimal Request. Ppega und letzte geht durch. Sehr schön.

02:51:39.440 --> 02:51:43.680
Und jetzt müssen wir das auf Serverseite noch implementieren, dass der das auch macht.

02:51:43.680 --> 02:51:48.840
Da bin ich mir aber nicht sicher, wie wir das auf Serverseite machen, weil wir müssten

02:51:48.840 --> 02:51:58.080
jetzt ja quasi das Datenbank Query on the fly abbrechen. Gibt es? Gibt es die Möglichkeit

02:51:58.080 --> 02:52:05.040
in Async Datenbank Query zu machen, was man canceln kann? Das ist eine Abkürzung für

02:52:05.040 --> 02:52:24.040
Signal Doppelpunkt Signal. Kann man? Ok, das muss jetzt EF Core Cancellation Token Query.

02:52:24.040 --> 02:52:40.240
Was? Ok, ich glaube, so ein Datenbank Query kann man nicht einfach canceln, wenn man da

02:52:40.240 --> 02:52:57.920
keinen Bock mehr drauf hat. Async Query. Da habe ich keinen Plan gerade davon, wie ich

02:52:57.920 --> 02:53:19.880
das machen soll. Einfach Stecker ziehen. Cancel Query. Das ist noch normales. Der will

02:53:19.880 --> 02:53:25.160
den Thread killen, um das Query zu killen. Das ist ja die dämlichste Idee, die ich bisher

02:53:25.160 --> 02:53:38.120
gelesen habe. Den Thread killen. Moment, das ist Entity Framework. Was interessiert mich

02:53:38.120 --> 02:53:56.880
Entity Framework? How can I abort EF Core Query? Genau, zeig her. Du kannst wie Postgres

02:53:56.880 --> 02:54:03.440
eine Query absetzen, dass es killt. Na gut, es ist jetzt ja nicht wirklich wild, weil,

02:54:03.440 --> 02:54:10.720
warum ist es nicht wild? Es ist nicht wild, weil die Queries sau schnell sind. Ja, das

02:54:10.720 --> 02:54:21.080
ist nicht so wild. Aber ansonsten. Was? Async in Amorable? With Cancellation. Seriously?

02:54:21.080 --> 02:54:36.400
Nee, das kann nicht sein. Das ist erst, wenn er fertig ist. Das ist erst, wenn er fertig

02:54:36.400 --> 02:54:59.720
ist. Cancel Long Running Query. Okay, da fällt mir jetzt gerade nichts ein dazu. Ich will

02:54:59.720 --> 02:55:07.600
das nicht in Javascript machen. Ich will mein Datenbank Query abbrechen. Auf der Javascript

02:55:07.600 --> 02:55:11.280
Seite ist es doch vollkommen in Ordnung. Auf der Javascript Seite bricht er ja auch

02:55:11.280 --> 02:55:18.160
alles ab. Da ist kein Ding. Die Queries auf dem Server müssen halt nicht fertig rennen.

02:55:18.160 --> 02:55:30.720
Aber das ist schon okay so. Wir müssen es ja nicht mit solchen Feinheiten aufhalten jetzt.

02:55:30.720 --> 02:55:42.840
Also wir machen jetzt das Autocomplete Menü. List Items, also ja. Kunstschommer. Wir müssen

02:55:42.840 --> 02:55:46.680
nur das List Item ein bisschen hübscher machen, weil das sieht mal richtig hängengeblieben

02:55:46.680 --> 02:55:54.040
und mies aus. Also wir machen jedes List Item. Pickt auf jeden Fall schon mal, wie war das?

02:55:54.040 --> 02:56:14.400
Y2? Das sind doch so Firefan Tailwind Klassen. Y2. Ja. Und 4. Ach nee, mein Y ist nur oben

02:56:14.400 --> 02:56:28.160
und unten einmalig, ne? Seh ich das richtig? Nee. Was war das nochmal? Ach, das war Margin

02:56:28.160 --> 02:56:44.960
Tee. Ja, genau, das meine ich. Dann 4 Sekunden, Leute. So, wieder da. Ja hey, das sieht doch

02:56:44.960 --> 02:56:58.840
jetzt ganz, ganz, ganz schick aus. Hat Postgres nicht irgendwas? Doch, doch, garantiert. Heading.

02:56:58.840 --> 02:57:18.680
2, 2. Ja. Okay. Das sieht doch schon besser aus. Ich überleg nur gerade, wie können wir

02:57:18.680 --> 02:57:22.920
die Items denn jetzt irgendwie sinnvoll gegeneinander? Also ich mein, so ist das doch schon mal ganz

02:57:22.920 --> 02:57:29.960
nett, ne? Dann klappt das aus, das Auto completed, zütt. Das Auto completed relativ schnell.

02:57:29.960 --> 02:57:37.160
Das ist schon mal nice. Ah, ich hab nen Fehler gesehen. Ist euch auch aufgefallen, wenn ich

02:57:37.160 --> 02:57:42.400
das schnell ersetze durch, guck mal, ich hab das hier und ersetze das durch ein A, dann

02:57:42.400 --> 02:57:47.400
bleibt noch das andere, da bleibt das andere noch da. Also ich müsste eigentlich sowas

02:57:47.400 --> 02:57:59.000
sagen wie, sobald es ein neues Value gibt, dann mach ich das Menü zu. Aber das sind

02:57:59.000 --> 02:58:01.920
so kleine, kleine Optimierungen, die kannst du zum Schluss machen. Erstmal, sodass es

02:58:01.920 --> 02:58:12.600
grob funktioniert. So, wir machen hier noch, wir machen hier noch nen Border drum, dass

02:58:12.600 --> 02:58:26.680
das ein bisschen, bisschen mehr heraussticht. Input, Border, Black, Border 2. Und wir machen

02:58:26.680 --> 02:58:34.360
den Border nicht Black, sondern wir brauchen irgendwas schönes. Grey, 200, so. Naja, schön

02:58:34.360 --> 02:58:55.480
ist was anderes. Schön ist was anderes. So, okay. Hab auch so Bock nen Stack zu lernen,

02:58:55.480 --> 02:58:59.080
aber zu faulen und kein Plan welches. Guck dich da einfach ein bisschen um, es gibt doch

02:58:59.080 --> 02:59:02.700
zigtausend Varianten und man muss sich ja auch nicht so sehr an einer Sache irgendwie

02:59:02.700 --> 02:59:07.680
festbeißen. Ich hab zum Beispiel die letzten Jahre, seit ich mir ein bisschen Vue.js angeguckt

02:59:07.680 --> 02:59:10.480
hab, alles in Vue gemacht, aber in letzter Zeit bin ich so auf den Geschmack von 12

02:59:10.480 --> 02:59:17.320
gekommen. Warum nicht? Post Class hab ich noch nie großartig was gemacht, aber hab

02:59:17.320 --> 02:59:20.800
ich mir gedacht, muss ich mir heute mal angucken. So, also wo sind wir denn stehen geblieben?

02:59:20.800 --> 02:59:24.480
Also wir müssen den Kram ja mit der Tastatur noch auswählen können und wir müssen auch

02:59:24.480 --> 02:59:33.160
sehen welches Item aktiv ist. Also sprich, wenn man das hier, wenn man hovert, brauchen

02:59:33.160 --> 02:59:38.120
wir eine andere Hintergrundfarbe. Machen wir das gleich mal hier. Value A starten wir mal,

02:59:38.120 --> 02:59:54.280
dass das auch immer wieder aufgeht. Also, hover, hover, hover, BG, ob das funzt? Ja,

02:59:54.280 --> 02:59:59.160
gar nicht mal so mies, oder? Was sagt ihr? Ich mein bisschen mehr, bisschen mehr Space

02:59:59.160 --> 03:00:08.320
bräuchte das noch, aber an sich gar nicht mal so mies. Ok, das ist die gleiche Farbe,

03:00:08.320 --> 03:00:25.360
das kann nicht funktionieren. Gar nicht mal so kacke, oder? Wie doch eigentlich? So, hover,

03:00:25.360 --> 03:00:37.840
jetzt müssen wir bloß noch ein bisschen, ein bisschen, was sehen wir, noch 2. Ja, viel

03:00:37.840 --> 03:00:53.400
besser so. Aber noch 3, 3 gibt es glaub auch. Ja, so ist doch gut, so ist doch schick. Was

03:00:53.400 --> 03:00:57.600
da random Daten werden da durchsucht? Es geht darum, wie schnell, es geht darum, wie schnell

03:00:57.600 --> 03:01:07.040
der sucht. Dass der eine 1,6 Gigabyte Datenbank mit 4,5 Millionen Zeilen Text so schnell durchsucht,

03:01:07.040 --> 03:01:20.480
das ist das Gute. Auch rounded? Leute, was meint ihr, rounded oder nicht rounded? Rounded

03:01:20.480 --> 03:01:30.360
oder nicht rounded? Rounded, probier das mal aus. Ja, rounded ist definitiv besser. Tracking

03:01:30.360 --> 03:01:36.360
App. Oh, aber ich will noch keine. Eine Tracking App, die kannst du ja fast schon komplett

03:01:36.360 --> 03:01:41.520
serverless machen, dass du gar kein Backend brauchst. Irgendwie Firebase oder irgendwie

03:01:41.520 --> 03:01:54.680
sowas. Da machst du ja mehr oder weniger alles kleinzeitig, bis auf eine Datenbank. Das finde

03:01:54.680 --> 03:01:59.760
ich gar nicht schlecht, muss ich ehrlich sagen. Ich finde das eigentlich ganz, ganz schick.

03:01:59.760 --> 03:02:08.160
So nice. So, jetzt müssen wir noch sagen, dass er hier kein, bei dem Text soll er keinen

03:02:08.160 --> 03:02:16.200
Textmarker machen, sondern einfach nur den Pointer anzeigen. Also müssen wir user select

03:02:16.200 --> 03:02:25.240
oder select, select ist das glaube ich dann, select none. Ok, nice. So, jetzt haben wir

03:02:25.240 --> 03:02:29.040
hier schon die Hovergeschichte. So, und jetzt wird es ein bisschen kompliziert. Jetzt muss

03:02:29.040 --> 03:02:32.960
ihr mal, chat, was meint ihr, sollen wir es auch noch machen, dass man es mit der Tastatur

03:02:32.960 --> 03:02:37.640
auswählen kann? Weil aktuell nur mit der Maus ist ein bisschen doof, oder? Aber wenn

03:02:37.640 --> 03:02:41.800
ich jetzt zweimal nach unten drücke und enter drücke, wäre es schon gut, wenn er das auswählt.

03:02:41.800 --> 03:02:48.640
Nur mit Tastatur ist blöd. Nur mit Maus ist doof. Also ich glaube schon, dass wir Tastatur

03:02:48.640 --> 03:03:01.080
noch machen sollten. Ach ja, wie checken wir eigentlich, was on click ist? Wäre vielleicht

03:03:01.080 --> 03:03:06.600
noch cool, wenn er nicht alles autocompleted, sondern nur die besten erst macht er doch.

03:03:06.600 --> 03:03:15.960
Er zeigt die besten 10 an. Er zeigt die besten 10 an. Guck, wenn du sagst Info, der guckt,

03:03:15.960 --> 03:03:21.000
ob irgendwas mit Info anfängt. Wenn nicht, dann nimmt er halt die Info-Dinger sortiert,

03:03:21.000 --> 03:03:32.280
wo Info drinne ist. Cursor-Pointer wäre noch gut. Cursor-Pointer. Meint ihr, dass wir

03:03:32.280 --> 03:03:37.040
wissen, dass man es anklicken kann? Oh ja, das ist nice, oder? Das ist gut. Das finde

03:03:37.040 --> 03:04:04.960
ich POG. Natalie.biz. Alles klar. Nice. Okay. So, wie machen wir das jetzt? Tastatur selectable.

03:04:04.960 --> 03:04:19.080
Alle von GoDaddy geklämt. Ernsthaft? Rashid.biz. Das sind einfach random Sachen. Kek. Kommt

03:04:19.080 --> 03:04:28.920
Kek drin vor? Kommt Lulu drin vor? Ah, Lulu. Lulu kommt drin vor. Okay, Lulvee. Max. Ah,

03:04:28.920 --> 03:04:40.240
Maximilian. Alles klar. Woop. Nee. Cute. Nee. Chat? Auch nicht. Nein, dann. Dann nicht.

03:04:40.240 --> 03:04:51.520
Dann nicht. Okay, selectable mit Katz. Katrin. Okay, selectable mit Tastatur. Wie machen

03:04:51.520 --> 03:05:04.840
wir das jetzt? Ich würde sagen, selectable mit Tastatur ist, ich muss sagen, Input.

03:05:04.840 --> 03:05:22.080
Nee. Keydown muss ich sagen. Keydown. Function. Function. Wie nennen wir das jetzt irgendwie?

03:05:22.080 --> 03:05:31.840
Keyboard select oder sowas. Event. Keyboard select. Müssen wir quoteen. Nicht quoteen,

03:05:31.840 --> 03:05:41.480
sondern klammern. Jetzt den Suchstring hervorheben. Das ist, das ist Feifett. Das ist Feifett.

03:05:41.480 --> 03:05:44.360
Das können wir machen. Das schreibe ich mir noch auf. Da müssen wir überlegen, wie wir

03:05:44.360 --> 03:05:53.960
das machen. Suchstring hervorheben. Das muss ich mir überlegen. Das ist eine gute Idee.

03:05:53.960 --> 03:05:57.840
Das finde ich, das finde ich gut. Das, das finde ich gut. Das machen wir natürlich kleinseitig,

03:05:57.840 --> 03:06:02.040
nicht serverseitig. Ich mache jetzt keine irgendwie Snippet-Geschichte in der Datenbank.

03:06:02.040 --> 03:06:05.600
Das ist rein kleinseitig. Zehn Dinger durch zu durchsuchen, wo er das findet, das kriegen

03:06:05.600 --> 03:06:11.400
wir noch hin. Er kann sogar mehrfach hervorheben. Guck, der kann da hervorheben, da hervorheben

03:06:11.400 --> 03:06:31.240
und so. Kann das Richtags? Nö. Da müsste ich serverseitig das ausliefern. Und dort

03:06:31.240 --> 03:06:41.680
schon quasi, naja. Wir überlegen uns was. Wir machen jetzt erstmal Tastaturselect. Also,

03:06:41.680 --> 03:06:46.680
was passiert, wenn man hier drinnen eine Taste drückt? Hoch, Down, Keyboard, Arrow Up, Arrow

03:06:46.680 --> 03:06:52.600
Down. Okay, wir brauchen was brauchen wir? Arrow Up, Arrow Down und Enter würde ich sagen.

03:06:52.600 --> 03:07:01.800
Arrow Up, Arrow Down, Enter. Brauchen wir sonst noch was? Nö. Also, if let key gleich

03:07:01.800 --> 03:07:31.000
E Punkt Key. E Punkt Key schreiben. Key gleich gleich. Arrow Down. Else, if. E. E. E. E.

03:07:31.000 --> 03:07:40.440
E. Was ist das für ein Scheiß Standard Highlighten? Das ist das ist die Go, das ist das Go Formatting.

03:07:40.440 --> 03:07:45.480
Ich will, dass es nicht so formatiert wird. Ich will, dass es so formatiert wird. Guck

03:07:45.480 --> 03:08:01.120
mal an. Das ist ja MonkaS. Wer macht denn so was? Okay, und dann haben wir noch Else, if.

03:08:01.120 --> 03:08:05.960
Was war das? Enter. Enter haben wir noch. Tab wäre auch nice. Tab für was? Tab ist

03:08:05.960 --> 03:08:13.920
das gleiche wie Arrow Down, oder? Oder, oder Key gleich. Was passiert denn bei Tab? Ach

03:08:13.920 --> 03:08:19.520
so. Nee, Tab können wir nicht Captchern. Tab können wir nicht Captchern. Tab ist vom Browser

03:08:19.520 --> 03:08:34.760
gesperrt. Tab kann man nicht Captchern. Weißt du mal, ob man Tab Captchern kann? Ich glaube

03:08:34.760 --> 03:08:44.720
nicht. Escape kann ich Florschläge schließen. Ach, das ist eine gute Idee. Escaped find...

03:08:44.720 --> 03:08:55.400
Lock Key. Ach doch Tab. Macht er doch. Und Escape. Ja, okay, machen wir. If Else Tab.

03:08:55.400 --> 03:09:05.280
Oh, was jetzt? Das ist so hässlich hier. Tab. Prevent Default brauche ich glaube noch.

03:09:05.280 --> 03:09:13.680
Tab und Escape. Switch Case. Solche Legacy Features. Legacy Features verwende ich nicht

03:09:13.680 --> 03:09:25.560
mehr. Escape ist schließen. Schließen ist doch relativ einfach zu bewerkstelligen, indem

03:09:25.560 --> 03:09:36.160
ich einfach Items auf nichts setze. Bäm. Escape funktioniert schon mal easy. Tab. Moment,

03:09:36.160 --> 03:09:45.160
Tab. Tab ist das gleiche. Tab ist das gleiche wie Arrow Down. Brauchen wir schon mal nichts

03:09:45.160 --> 03:09:57.200
eigenes. Switch benutzt nur Boomer. Korrekt. Tab. Und ich brauche E Punkt Prevent Default,

03:09:57.200 --> 03:10:07.000
dass er das mit dem Tab nicht macht. Haha. Prevent Default. Okay. Prevent Default brauche

03:10:07.000 --> 03:10:25.400
ich wahrscheinlich in so ziemlich jedem Fall. Okay. Also Escape schließt. Ja, Typen macht

03:10:25.400 --> 03:10:31.280
Autocomplete. Okay, und jetzt hoch und runter. Arrow Up, Arrow Down. Also schreiben wir es,

03:10:31.280 --> 03:10:39.400
machen wir jetzt mal irgendwie sowas hin. Let Selected Index. Fahren wir mal Minus 1

03:10:39.400 --> 03:10:50.240
an. Minus 1 ist halt leer. Nee. Prevent Default vor dem If ist keine gute Idee, weil dann

03:10:50.240 --> 03:10:56.000
kann ich auch nicht mehr nach links und rechts gehen. Das würde ich ja für jegliche Keyboard

03:10:56.000 --> 03:11:02.040
Shot, also für jegliche Tasten drücke. Das kommt mal, wenn ich das Prevent Default vor

03:11:02.040 --> 03:11:09.720
das If mache, dann kann ich nicht mehr nach links und rechts gehen. Das ist keine gute

03:11:09.720 --> 03:11:20.760
Idee. So. Also was machen wir denn jetzt? Arrow Down. Arrow Down sagen wir Selected Index plus

03:11:20.760 --> 03:11:29.440
plus. Arrow Up. Selected Index minus minus. Enter. Ja. Irgendwas. Weiß ich noch nicht

03:11:29.440 --> 03:11:35.200
genau. So. Und jetzt muss ich nur noch gucken, wie ich das hier hinbekomme. Ich glaube Komma

03:11:35.200 --> 03:11:44.720
i ging irgendwie, dass der mit den den Index mit hoch zählt. Nein, einfach nur so. Einfach

03:11:44.720 --> 03:11:50.080
nur i. Schauen wir mal, ob da jetzt eine Zahl rein kommt. Ja, tatsächlich. Einfach nur

03:11:50.080 --> 03:12:00.240
i. Ja, das mit den Abfragen muss ich noch machen. So und jetzt gucken wir. Ich möchte

03:12:00.240 --> 03:12:12.160
eine Klasse hinzufügen. Dafür, wenn ich mit. Wenn ich das dort Selected habe, also will

03:12:12.160 --> 03:12:26.680
ich. Im Prinzip. Wisst ihr, was wir machen? Wie kriege ich denn das am besten hin? Also

03:12:26.680 --> 03:12:38.800
eigentlich will ich ja sowas haben. Irgendwelche Klasse bindings jetzt. Klasse. BG. Gleich.

03:12:38.800 --> 03:13:01.520
True. 900. Wenn wenn Selected Index gleich ist. Achtung Achtung. Komma hier. Ich muss

03:13:01.520 --> 03:13:13.040
natürlich jetzt noch checken, dass ich nicht hier raus zählen kann. Damit kann ich leben,

03:13:13.040 --> 03:13:35.480
dass ich das so markiere. So, jetzt müssen wir hier noch gucken. If. Selected Index.

03:13:35.480 --> 03:13:59.800
Minus eins. Äh größer. Null. Gibt das Sinn, was ich da mache? Nee, nee. Ah ok, das funktioniert.

03:13:59.800 --> 03:14:18.600
Ok. Das Funst. Und hier will ich anstatt dem will ich gucken, wenn Selected Index plus

03:14:18.600 --> 03:14:33.880
eins. Kleiner. Items. Länge. Kleiner der Items Länge ist. Gibt das Sinn? Hey, es funktioniert.

03:14:33.880 --> 03:14:52.480
Easy. Beifährt. Was? Mathmax null Min. Warum nicht einfach so? So, es funktioniert. So,

03:14:52.480 --> 03:14:58.320
was machen wir bei Enter? Bei Enter machen wir das gleiche wie onClick. OnClick machen

03:14:58.320 --> 03:15:10.680
wir. Ähm. Function nennt es mal Set. Value. Äh ja Text. Value gleich Text. Vielleicht

03:15:10.680 --> 03:15:18.160
ein bisschen. Ein bisschen wenig. Ohne eine eigene Funktion für zu machen. Also onClick.

03:15:18.160 --> 03:15:34.040
Click. OnClick. Set. Value. Aha. Das hat er mir das letzte Mal beigebracht, der Preserief

03:15:34.040 --> 03:15:37.080
hier im Chat. Das weiß ich noch. So muss man das machen. Sonst gehts nämlich kaputt.

03:15:37.080 --> 03:15:50.240
Ich erinnere mich noch. So, wenn ich es anklicke. Oh. Ah, das ist keine so clevere Idee, das

03:15:50.240 --> 03:15:55.440
mit einem Postrequest zu machen. Guck mal. Ich muss das mit einem Postrequest im Body

03:15:55.440 --> 03:16:01.840
machen, weil ansonsten habe ich solche komischen Dinger in der Uhrl. Die nicht richtig funktionieren,

03:16:01.840 --> 03:16:11.200
weil es kapen muss oder sowas. Das ist nicht so schlau. Aber warum schließt er das denn

03:16:11.200 --> 03:16:19.880
jetzt nicht? Ah, ich muss Set. Value machen. Set. Value. Und dann muss ich sagen Items

03:16:19.880 --> 03:16:32.280
gleich. Ja. Guck mal da, wie das funzt. Ah. Ach so, ja gut, das funktioniert so nicht,

03:16:32.280 --> 03:16:41.760
weil mein Query kaputt ist. So und das gleiche machen wir bei Enter. Set. Value. Ist zwar

03:16:41.760 --> 03:16:51.200
doppelt gemoppelt, aber. Zack, zack, zack. Oh, zack, zack, zack. Oh, es geht nicht.

03:16:51.200 --> 03:17:01.720
Warum geht das nicht? Ach ne, es ist ja nicht Set. Value. Es ist ja auch Schwachsinn. Es

03:17:01.720 --> 03:17:15.040
ist Items. Es ist Items. Selected Index. So ist es ja. So. So das funzt. Ah. Enter. Funzt.

03:17:15.040 --> 03:17:22.760
Nice. Und doppelt Enter geht kaputt. Auch gut. Nice, nice, nice, nice. Poggers, Poggers,

03:17:22.760 --> 03:17:26.840
Poggers. Das funktioniert richtig gut. Ich hätte nicht gedacht, dass das so easy ist.

03:17:26.840 --> 03:17:31.120
Max, vermisse die guten alten CODs. Ja, das ist vorbei. Ich habe mir das letzte Call

03:17:31.120 --> 03:17:39.800
of Duty nicht mal mehr gekauft. Zack, nice. Richtig, richtig cool. Mach noch Selected Index

03:17:39.800 --> 03:17:51.600
gleich, wo immer diese Maus aktuell drüber hoffert. Hab ich doch. Guck mal. Nee, hover

03:17:51.600 --> 03:17:55.960
muss was anderes sein als Selected. Ich kann ja auch das hier sehen. Nee, nee, nee, nee,

03:17:55.960 --> 03:18:14.120
das muss, muss schon. Das muss schon so sein. Check bei Enter, ob Items empty. Ja. Ich muss

03:18:14.120 --> 03:18:19.280
nicht checken. Ich muss checken. Ich muss Items empty checken. Und ich muss vor allem

03:18:19.280 --> 03:18:33.560
checken, dass wenn ich hier Enter drücke, dass das, dass das nicht Minus ist. If Selected

03:18:33.560 --> 03:18:49.840
Index gleich Minus eins und und Items längst größer null. Nur dann will ich das machen.

03:18:49.840 --> 03:19:07.080
Und ich will und ich will bei Enter Selected Index auf Minus eins setzen. Ja. Sonst, weil

03:19:07.080 --> 03:19:10.880
sonst habe ich nämlich das Problem. Das habe ich glaube ich jetzt schon. Guck mal, wenn

03:19:10.880 --> 03:19:17.400
ich jetzt was anderes mache, dann bleibt es Selected. Also das heißt, ich muss auch.

03:19:17.400 --> 03:19:23.000
Das heißt, ich muss auch hier bei jedem bei jedem Change Selected Index auf Minus eins

03:19:23.000 --> 03:19:48.680
setzen. Info. Setzfunst. Info. Ja. Oder aber ich könnte auch einfach Items auf null setzen.

03:19:48.680 --> 03:19:57.120
Da geht nämlich das Menü zu. Info. Ja, so ist besser, oder? Dann schieben sich die Menüs

03:19:57.120 --> 03:20:04.400
nicht ineinander rein. Dann schieben sich die Menüs nicht ineinander rein, sondern es

03:20:04.400 --> 03:20:09.600
ist wirklich klar zu erkennen, wenn was fertig ist. Guck, wenn ich jetzt von Info umschwenke

03:20:09.600 --> 03:20:15.680
auf A, dann geht das Menü erst mal zu. Ja, sehr gut. Poggers. Ladebildschirm. Wer sollte

03:20:15.680 --> 03:20:27.920
noch Ladebalken anzeigen? If loading, if loading. Also das müssen wir jetzt. Let loading

03:20:27.920 --> 03:20:45.080
gleich false. So loading, wenn er fertig geladen hat. Wobei, das mache ich später. Was was

03:20:45.080 --> 03:20:49.400
machen wir jetzt als nächstes? Ich habe Leute, ich habe noch die Idee, wollen wir das animiert

03:20:49.400 --> 03:20:57.560
machen, das Menü, dass es, dass es ein und aus fadeet? Moment. Svelte Transition. Nicht

03:20:57.560 --> 03:21:05.720
Fly. Fade wollen wir haben. Fade. Das wird es richtig in Fade. Genau hier. Import Fade

03:21:05.720 --> 03:21:18.880
und Fly. Oh, jetzt wird es jetzt wird es richtig high IQ. Fade. Ups. Fade. In. Und

03:21:18.880 --> 03:21:30.520
nicht Fly, sondern Fade wollen wir haben. Und zwar. Und zwar. Können wir noch eins

03:21:30.520 --> 03:21:36.840
zurück machen? Hatten sie auch dieses Beispiel. Einfach nur Transition Fade musste ich mal.

03:21:36.840 --> 03:21:48.400
Also. Das ganze Menü, aber das ist das hier. Transition. Fade. Und dann. Oh nee. Duration.

03:21:48.400 --> 03:21:58.320
Funktioniert das jetzt schon? Boah, guck mal Leute. Ich meine, das ist viel zu langsam.

03:21:58.320 --> 03:22:14.240
Sind wir uns einig? Aber aber es funktioniert. So 200. Das ist doch schick. Leute, das ist

03:22:14.240 --> 03:22:21.680
richtig schick. Jetzt guckt mal. Jetzt ist das nicht so. Jetzt ist das nicht so in your

03:22:21.680 --> 03:22:34.320
face. Das ist das quasi Smoother. Ziemlicher Pog, würde ich sagen. Ist immer noch zu langsam.

03:22:34.320 --> 03:22:54.680
100. 100. 50. 1. 1 ist halt direkt. OK, 50. 50. Ja, 50 ist gut, oder? 50 Faded, aber

03:22:54.680 --> 03:23:10.560
nicht so wirklich wahrnehmbar. Das ist gut. Jetzt hier. Bäm. Auswahl. Zack. 75. Na ja,

03:23:10.560 --> 03:23:17.280
komm. Jetzt wird jetzt wird ihr schon micro optimist. Auch gut kann ich auch mitleben.

03:23:17.280 --> 03:23:25.720
Was macht was ich da mache? Ich hab. Das ist ein Autokomplete Feld. Das kennst du bestimmt

03:23:25.720 --> 03:23:30.960
auf ganz vielen Webseiten. Ja, gesuchten Text hervorheben. Wir wollten noch, wenn loading

03:23:30.960 --> 03:23:37.960
ist, eine Anzeige. Guck mal, wir machen hier oben oben drüber. Machen wir mal Procress,

03:23:37.960 --> 03:23:48.040
wobei dieses eingebaute Procress Ding ist richtig, richtig mies. Procress. Wie heißt

03:23:48.040 --> 03:24:03.160
denn das Ding Procress? Also die, dass das Procress HTML ist wirklich Müll. Kann man

03:24:03.160 --> 03:24:12.960
das sehen? Value 100. 40. Ach, das ist zwischen 0 und 1 immer. Das ist kacke. Das ist mega

03:24:12.960 --> 03:24:19.800
hässlich, diese Procress Sache da oben. Kannst du bitte mal die Datenbankstruktur zeigen?

03:24:19.800 --> 03:24:23.400
Durchsuchst du nur ein Feld oder ist die Suche automatisch für mehrere Felder? Ich durchsuche

03:24:23.400 --> 03:24:28.000
nur ein Feld. Man könnte aber ohne Probleme mehrere Felder durchsuchen. Also ich hab die

03:24:28.000 --> 03:24:33.440
einfachste Variante gemacht, schlechthin, die es aktuell geht. Ich hab eine Klasse

03:24:33.440 --> 03:24:37.600
für die Datenbank, die hat einen Feld für Text und eine ID. Die brauchst du, weil Entity

03:24:37.600 --> 03:24:48.840
Framework sonst keinen Bock hat. Und das hier ist halt die Sache, damit die Textsuche schnell

03:24:48.840 --> 03:24:55.680
funktioniert. Du musst eine Postgres Extension laden. PG Triggum. Also der Hintergrund da,

03:24:55.680 --> 03:24:58.840
warum das so heißt. Nur mal so, wir benutzen das die ganze Zeit. Ich hab's eigentlich noch

03:24:58.840 --> 03:25:04.280
gar nicht erwähnt. Also es ist irgendwie so, ich hab's selbst nicht richtig gelesen,

03:25:04.280 --> 03:25:09.760
ich hab's noch nicht richtig verstanden, dass mit diesem Modul Postgres quasi nicht

03:25:09.760 --> 03:25:15.200
einfach nur den Text eins zu eins drinstehen hat, sondern immer so dreier Buchstabenpaare

03:25:15.200 --> 03:25:23.320
bildet. Buchstabe eins davor und eins danach. Und dadurch, dass du quasi jedes Wort in

03:25:23.320 --> 03:25:28.720
dreier Buchstabenpaare zerlegst, kannst du Substring Matching machen, aber dich trotzdem

03:25:28.720 --> 03:25:33.240
relativ schnell durch den Index hangeln. Frag mich nicht, wie es genau funktioniert,

03:25:33.240 --> 03:25:38.800
das ist wirklich nur was für Leute, die Mathe studiert haben und wahnsinnig IQ 150 haben

03:25:38.800 --> 03:25:43.920
oder so. Müssen wir Algorithmen verstehen fragen, der würde wahrscheinlich, der könnte

03:25:43.920 --> 03:25:50.120
uns ja wahrscheinlich erklären, was das genau macht. Wobei, jetzt mal Spaß beiseite, ich

03:25:50.120 --> 03:25:53.440
glaube wir würden uns das auch verstehen, wenn wir uns das im Stream angucken, aber

03:25:53.440 --> 03:25:58.440
ich hab keinen Bock mir hier ne Stunde Theorie anzugucken, warum es schnell ist, mir reicht,

03:25:58.440 --> 03:26:06.280
dass es schnell ist. Das hier ist die Magic, dass die Suche schnell ist. 20 Millisekunden

03:26:06.280 --> 03:26:13.560
pro Textsuche und ohne die Sachen im RAM zu behalten. Und normalerweise ohne diese ganzen

03:26:13.560 --> 03:26:23.920
Sachen hat der 340 Millisekunden gebraucht. Wir machen nen Spinner, Leute wir machen

03:26:23.920 --> 03:26:27.600
nen Spinner, das ist die Idee, ich hab ne Idee, wisst ihr was wir mit nem Spinner machen?

03:26:27.600 --> 03:26:34.920
Ich weiß wie wir das machen. Hero Icons, Circle, Kogas machen wir jetzt, richtig Kogas, ne

03:26:34.920 --> 03:26:45.800
falsches Kogas. Circle, hier Spinner, was ist ein gutes Spinner Icon hier für Leute?

03:26:45.800 --> 03:26:56.920
Gutes Kogas Icon, sag mal was eignet sich da schön dafür? Progress, spin, weil man

03:26:56.920 --> 03:27:02.720
kann das richtig easy machen lassen, ich zeig euch mal was ich vor hab, ich zeig euch mal

03:27:02.720 --> 03:27:07.440
was ich vor hab, also guck mal wir können hier oben, aber man siehts ja gar nicht richtig,

03:27:07.440 --> 03:27:19.000
Moment, Class, ne da unten ist Text gleich White, hier was wir einfach machen können

03:27:19.000 --> 03:27:33.880
ist, Animate, spin, und schon dreht sichs. Aber wir brauchen halt irgendeinen Icon was

03:27:33.880 --> 03:27:45.800
sich eignet für so nen Spinner. Ja das ist Tailbit Animation, genau, du kannst es spinnen

03:27:45.800 --> 03:27:57.880
lassen, pingen lassen, pulsieren lassen standardmäßig und bouncing lassen, ah bouncing, spinnen

03:27:57.880 --> 03:28:10.480
ist schon ok. Refresh Icon, sehr gute Idee, Refresh, ja, exellent, exellent, High IQ

03:28:10.480 --> 03:28:16.800
und Chat wieder, ich sehs schon hier, richtig schlaue Leute, wir nehmen Refresh Icon, die

03:28:16.800 --> 03:28:19.680
ganzen Subs haben sich ausgeteilt, übrigens Leute falls jemand Subscribed hat und ich

03:28:19.680 --> 03:28:23.960
es nicht gesehen hab, die Notifications sind heute kaputt, hey das ist doch eigentlich

03:28:23.960 --> 03:28:31.400
ganz nett oder, das ist doch eigentlich ganz nett, das gefällt mir, das machen wir dahin,

03:28:31.400 --> 03:28:38.880
und wenn er sucht, und wenn er sucht dann macht es dann, dann spinnt das so. Anders

03:28:38.880 --> 03:28:53.720
herumdrehen, ich weiß nicht wie man das macht, ok Tailwind, spin, reverse, aber man kann

03:28:53.720 --> 03:29:11.400
auch glaube ich einfach Reverse dran schreiben, ne, Invert, ne, ich glaub das geht standardmäßig

03:29:11.400 --> 03:29:29.440
nicht, Animate, Reverse, ne, ne, guck mal wir sind nicht die ersten die auf so ne Idee

03:29:29.440 --> 03:29:47.760
gekommen ist, Keyframes, Reverse, spin, ok, you can just use Animate, spin, transform,

03:29:47.760 --> 03:30:00.280
rotate, 180, alles klar, yes, bestes, Stack Overflow, GitHub Issues, Leute, 5 hat, wenn

03:30:00.280 --> 03:30:05.800
es, guck mal, wenn es in die falsche Richtung rotiert, drehen wir es einfach vorher um 180

03:30:05.800 --> 03:30:12.160
Grad und dann rotate es in die richtige Richtung, richtig 360 Nose Scope, hatte ich nicht dazu

03:30:12.160 --> 03:30:30.360
irgendwo mal nen Sound sogar, 360 Nose Scope, nein, auch nicht, nein das ist ja auch der

03:30:30.360 --> 03:30:50.400
falsche Sound, nein, wo ist mein Nose Scope Sound, hier, jawoll, jetzt Nose Scope, alles

03:30:50.400 --> 03:31:02.640
klar, so jetzt haben wir das Loading Icon, wo machen wir das jetzt hin, am besten müssten

03:31:02.640 --> 03:31:17.920
wir das eigentlich Overlayen hier irgendwie oben drüber, ne, Relative, Class, Absolute,

03:31:17.920 --> 03:31:35.240
so und jetzt sagen wir einfach nur Write, Zero, Top, Zero, ne, Top, 10, 14, so ist doch,

03:31:35.240 --> 03:31:51.400
ist doch gut oder, ne, 14, sehr schön, so, ist das dann schick und das wird jetzt nur

03:31:51.400 --> 03:31:57.120
angezeigt, das wird jetzt natürlich nur angezeigt, wenn er lädt, ich will nicht, dass es lädt,

03:31:57.120 --> 03:32:12.520
weil wenn es lädt, dann stürzt das ab oder so ähnlich, Text White to Cray, ne, gar nicht

03:32:12.520 --> 03:32:16.080
Text White, brauchen wir gar nicht mehr, wir brauchen den Text White, kann weg, der soll

03:32:16.080 --> 03:32:27.120
den Default, Default Text Farbe nehmen, genau, also, lasst mal kurz überlegen, Queries,

03:32:27.120 --> 03:32:33.520
Query Server, ne, das brauchen wir nicht, also, wir stellen das auf Loading, wir stellen

03:32:33.520 --> 03:32:41.560
das auf Loading, Loading True und wenn er hier fertig geloaded ist, dann sagen wir Loading

03:32:41.560 --> 03:32:55.720
False, müsste doch eigentlich genauso funktionieren, so und jetzt gehen wir zum Spinner und sagen,

03:32:55.720 --> 03:33:01.520
ach ne, das ist ja Svelte, da muss man so ein komisches, weil, kann man nicht einfach

03:33:01.520 --> 03:33:15.120
sagen Hidden, Hidden und dann Loading, ne, funktioniert das denn jetzt überhaupt, mal

03:33:15.120 --> 03:33:22.280
noch mal Loading, Loading ausgeben, ob das überhaupt klappt, True, ja klappt, das ist

03:33:22.280 --> 03:33:39.640
falsch rum, ach, not Loading, ne, na gut, da muss ich ein If drum herum machen, If Loading,

03:33:39.640 --> 03:33:45.120
dann zeigen wir das an, hab ich das hier oben, ne, ich hab das hier oben schon richtig rum

03:33:45.120 --> 03:33:56.160
gemacht und dann ansonsten, wie macht man das If noch mal zu, If, die Syntax gefällt

03:33:56.160 --> 03:34:17.200
mir nicht, ja funs doch, was ist da jetzt los, warum ist das jetzt verschoben, Top 20,

03:34:17.200 --> 03:34:34.800
aha, ok, aus Gründen, die ich nicht verstehe, aber ok, ja, guck mal, nice, guck mal, solange

03:34:34.800 --> 03:34:39.560
es sucht, solange es sucht, solange es Self Accredit ist der Spinner da, ansonsten ist

03:34:39.560 --> 03:34:48.760
es weg, bock, finde ich ja mega nice, zack, gut, haben wir das auch, wir können es, wir

03:34:48.760 --> 03:34:53.680
können es markieren, Enter drücken, ja, das müssen wir in Postrequest machen, das ist

03:34:53.680 --> 03:35:01.320
als Get beschissen, weil, oder ich müsste es urline coden, oder ich müsste es urline

03:35:01.320 --> 03:35:07.880
coden, das kann ich jetzt mal machen, dass ich, dass es nicht so eklig ist, wie macht

03:35:07.880 --> 03:35:17.960
man ein urline coden, urline coden, urline coden, wie macht man ein urline coden im Browse,

03:35:17.960 --> 03:35:35.680
keine Ahnung, encode uri heißt das, ok, encode, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:35:35.680 --> 03:35:51.960
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:35:51.960 --> 03:36:02.540
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:36:02.540 --> 03:36:06.500
Eigentlich not found, das müsste doch eigentlich jetzt matchen auf Serverseite

03:36:11.900 --> 03:36:13.900
Müsste doch auf Serverseite eigentlich matchen

03:36:17.300 --> 03:36:20.060
Ja wir machen das als Postrequest, das ist doch Müll so

03:36:22.340 --> 03:36:24.340
Das ist doch kacke

03:36:24.340 --> 03:36:30.660
Was er encode und sucht nach dir, sowieso ist doch in Ordnung

03:36:35.020 --> 03:36:37.020
Was

03:36:37.020 --> 03:37:04.540
Chat, redet nicht wir, redet in normalen Sätzen, was ist los?

03:37:04.540 --> 03:37:07.620
Welche Distribution, das ist Manjaro mit E3 WM

03:37:12.340 --> 03:37:17.420
Ne ich muss auf Serverseite nicht decode, das sollte automatisch, ist egal, ich mach das als Postrequest, das ist hässlich

03:37:17.420 --> 03:37:21.180
Aber wir haben noch eine viel wichtigere Aufgabe, ich weiß nicht ob wir das heute noch hinkriegen

03:37:22.260 --> 03:37:24.100
Das Ergebnis

03:37:24.100 --> 03:37:29.660
Highlighten, boah wie machen wir das denn, das Ergebnis Highlighten

03:37:29.660 --> 03:37:34.660
Also hier setze ich die Items

03:37:36.220 --> 03:37:42.980
So bevor ich die Items setze, müsste ich, wie Highlighte ich das Ergebnis

03:37:42.980 --> 03:37:53.780
So wir machen das anders, wir machen

03:37:53.780 --> 03:38:13.980
Also let, noch mal irgendwie was weiß ich hier, tmp, Items, Items gleich

03:38:13.980 --> 03:38:23.020
Ok wir machen da eine eigene Funktion für, sonst blick ich nicht mehr durch, Highlight Items

03:38:23.020 --> 03:38:42.220
Highlight, heißt halt doppelt, so dann Highlight Items, so packen wir das hier rein und dann return Items

03:38:42.220 --> 03:38:49.620
Ja ja return, return Items, heißt jetzt alles doppelt und dreifach was funktioniert, so und hier drinne kann ich jetzt Highlighten

03:38:49.620 --> 03:38:55.780
Also wie Highlighten wir das richtig, wir brauchen auf jeden Fall schon mal eine Schleife denke ich mal

03:38:55.780 --> 03:39:14.020
Also Items, Log, Items, ja so, gut und da muss ich jetzt suchen danach, Split, Split ist eine gute Idee Chat, Split ist eine gute Idee

03:39:14.020 --> 03:39:27.340
Split, Splitten an, ja an was Splitten wir eigentlich jetzt, wir Splitten an Value oder, wir Splitten an Value

03:39:27.340 --> 03:39:53.740
Seht ihr das richtig, und das heißt wir bekommen dann raus, wat, hä, Highlighten musst du doch in den Le Elementen

03:39:53.740 --> 03:40:01.540
Ja ich muss das, ich muss hier aber html drum herumschreiben und das dann danach später unten reinrendern

03:40:01.540 --> 03:40:15.140
Split, Split ist dumm oder, Split nimmt den Buchstabe raus an dem, an dem er splittet

03:40:15.140 --> 03:40:38.140
Js, Split, Keep, Separator, anyway, hier Xenoverse, was, oh Gott, Ragex, Xis, Xis jetzt oder was

03:40:38.140 --> 03:40:48.140
Ja Obvious, alles klar, alles klar, ganz, ganz, ich mein man könnte, man könnte das richtig clever machen, Ragex und dann irgendwie Surround

03:40:48.140 --> 03:41:00.140
Warte mal, bekomme ich, bekomme ich wenn ich matche nicht den Index, das müsste doch eigentlich auch funktionieren, ich bekomme den Index

03:41:00.140 --> 03:41:10.140
Ich kann den Separator manuell wieder hinzufügen, ja das stimmt schon

03:41:10.140 --> 03:41:19.140
Ja ne, ihr habt recht, ihr habt recht, also Split und nochmal Schleife, nochmal Schleife

03:41:19.140 --> 03:41:33.140
Part, langsam gehen mir die Dinger aus, Part, so, jetzt haben wir das, jetzt haben wir das gesplitted

03:41:33.140 --> 03:41:50.140
Ne, wir brauchen keine Schleife, Schleife ist Low IQ an der Stelle, Select, ne, ist es Select, ne was ist es, was ist es in Map, ist es Map, in Jawa ist es Map glaube ich

03:41:50.140 --> 03:42:04.140
Item, so und das heißt davor ist jedes mal Value, ne, ich will nur gucken ob es von der Idee her passt was ich da mache

03:42:04.140 --> 03:42:14.140
Ah, ne, Moment

03:42:19.140 --> 03:42:25.140
Ne, ne das funktioniert so nicht, das funktioniert so nicht wie ich mir das gedacht habe

03:42:25.140 --> 03:42:34.140
Moment da ist was leeres, warum kriege ich denn was leeres, das stimmt ja im Prinzip

03:42:34.140 --> 03:42:41.140
Das ist schon richtig nur das erste, das erste, warum ist das erste denn leer

03:42:41.140 --> 03:42:50.140
Ok von der Idee her funktioniert es, doch, doch, doch, doch, guck mal von der Idee her funktioniert das

03:42:50.140 --> 03:42:57.140
So, wie Highlightet man denn jetzt richtig was, wie Highlightet man denn jetzt ordentlich was, muss ich mal testen

03:42:57.140 --> 03:43:00.140
Wie machen wir das HTML technisch überhaupt

03:43:00.140 --> 03:43:15.140
Spam, so blablabla, blablabla, so wie Highlighte ich das das, mein Color, ne, Color geht ja nicht

03:43:15.140 --> 03:43:25.140
Und dann einfach, ach ne, Moment, anders, diff, blablabla, so und dann jetzt hier

03:43:25.140 --> 03:43:37.140
Style und dann Color, Red oder sowas, ja, im Prinzip so in der Richtung

03:43:37.140 --> 03:43:51.140
Ich glaube du kannst Marktex, uiuiui, ai, da guck an, ist das irgendwie so Legacy Feature oder ist das was Neues

03:43:51.140 --> 03:44:09.140
Tatsächlich, hi, hi, hi, richtig mega IQ hier, Stein alt, ja, aber das benutzen wir erstmal, das ist gut

03:44:09.140 --> 03:44:27.140
Ok, das bedeutet im Endeffekt, ich sag Value, wir brauchen meistens Template String, Template String, sonst kannst du das hier nicht mehr händeln

03:44:27.140 --> 03:44:51.140
E, äh, warum Split, JS Split, First Element empty, empty, warum ist das erste Element empty

03:44:51.140 --> 03:45:01.140
String ist empty, ja super, super, ja da auf die Idee bin ich auch gekommen, dass ich das erste wegschmeißen kann

03:45:01.140 --> 03:45:21.140
Naja, so und das heißt da müsste ich jetzt sowas machen wie Mark, Mark, ja, ja, ja, das müsste funktionieren

03:45:21.140 --> 03:45:43.140
Let's, ist wirklich so wie der das geschrieben hat, Values, so, jetzt kriegen wir das Richtige raus

03:45:43.140 --> 03:46:03.140
Guck hier, A, V, Moment, V, das V muss dahinter, hier, A, A und dann der Rest, der Chat ist davor, oh, Moment, Chat ihr müsst umziehen, Sekunde

03:46:03.140 --> 03:46:16.140
Ihr müsst umziehen, so, da bist du ja wieder, irgendwas wollte ich dich fragen vorhin, aber ich hab's wieder vergessen

03:46:16.140 --> 03:46:25.140
So, jetzt haben wir das Mark, Mark, Mark, alles klar, so und jetzt müssen wir da wieder ein String draus machen, Join, äh, wie macht man das jetzt

03:46:25.140 --> 03:46:45.140
JS Array to String, bejoin ich das wieder, kann ich einfach so sagen, to String, to String, geht das, hey, Pfeiffer Java Skript

03:46:45.140 --> 03:47:13.140
Okay, so, das ist unser Result, ach jetzt ist Komma getrennt, ne, okay, dann ist was, Array, Join, ne, Join

03:47:13.140 --> 03:47:29.140
Ach, so muss ich es ja auch ausgeben, Result, jetzt ist es weg, to String, geht das auch, ne, okay, Join, alles klar

03:47:29.140 --> 03:47:46.140
So, jetzt haben wir hier das drinnenstehen, was wir brauchen und da müssen wir jetzt eine neue Itemliste draus basteln, also, let Result gleich Dings hier und dann

03:47:46.140 --> 03:48:00.140
Push, ob das funktioniert, äh, Return Result, so, noch funktioniert's nicht, aber man sollte jetzt schon, genau, genau, so und jetzt muss ich ihm sagen

03:48:00.140 --> 03:48:11.140
Interpretier mir das als HTML, da gibt es garantiert ins Welt irgendwas dafür, muss ich vielleicht doppelt Dingsen oder so, ne, wie sage ich ihm

03:48:11.140 --> 03:48:36.140
Interpretier das als HTML, was da drin steht, Span, Add HTML, ein Add davor, ne, Add HTML, easy, easy

03:48:36.140 --> 03:48:55.140
Easy as f**k, easy as f**k, na, na, na, nice, Komma, Info, oh

03:48:55.140 --> 03:49:06.140
Die Logik stimmt nicht

03:49:06.140 --> 03:49:15.140
By the way, warum kriege ich da mal Ava und warum kriege ich da mal Andy zurück

03:49:15.140 --> 03:49:26.140
Ah, ich weiß warum, weil ich es nie initial sortiere, wahrscheinlich müsste ich

03:49:26.140 --> 03:49:36.140
Wahrscheinlich müsste ich hier vorher noch mal Order machen oder so, aber kann ich mitleben

03:49:36.140 --> 03:49:42.140
Andy

03:49:42.140 --> 03:49:48.140
Und jetzt haben wir Alice, Moment, warum

03:49:48.140 --> 03:49:53.140
Hä, meine Logik ist flawed

03:49:53.140 --> 03:50:01.140
Ich mein, das sieht nicht nur hässlich aus, lass uns mal kurz das Shift weg, was ist jetzt doppelt, jetzt ist es doppelt und wie sieht es mit Info aus

03:50:01.140 --> 03:50:12.140
Jetzt funktioniert das mit Info aber, was, warum ist Info jetzt am Anfang

03:50:12.140 --> 03:50:18.140
Leute meine Logik funktioniert nicht

03:50:18.140 --> 03:50:24.140
Info

03:50:24.140 --> 03:50:31.140
Meine Logik ist kaputt

03:50:31.140 --> 03:50:44.140
Ah, Info

03:50:44.140 --> 03:50:50.140
Was macht denn Split für komische Dinger

03:50:50.140 --> 03:51:06.140
Ich mein, wisst ihr was, wir machen die Brute Force Methode, Split, äh, Filter, alle Elemente, die nicht leer sind, so

03:51:06.140 --> 03:51:19.140
Das geht bestimmt schöner

03:51:19.140 --> 03:51:22.140
Das funktioniert immer, aber jetzt ist das vorne

03:51:22.140 --> 03:51:33.140
Moment

03:51:33.140 --> 03:51:44.140
Okay, die Logik ist nicht so, ne, der Alejandro ist, äh, da funktioniert er irgendwie nicht so ganz

03:51:44.140 --> 03:51:49.140
Hä

03:51:49.140 --> 03:51:53.140
Replace all

03:51:53.140 --> 03:51:59.140
Replace all, ja klar, das müsste ja noch einfacher sein, Moment, mal gucken

03:51:59.140 --> 03:52:05.140
Moment, Moment, Moment, Replace all, ja, das ist eine gute Idee, gibt es sowas

03:52:05.140 --> 03:52:19.140
Replace, Replace all, okay, kann es sowas sein, Replace all, all value mit Heckweh

03:52:19.140 --> 03:52:35.140
Return values join

03:52:35.140 --> 03:52:50.140
Ach ne, Moment, das ist ja Schwachsinn, was ich hier mache, äh, ah, ich bin verwirrt, Sekunde, ich muss das pushen, values join, push

03:52:50.140 --> 03:53:01.140
Cannot read, weil da Return dazwischen ist

03:53:01.140 --> 03:53:05.140
Äh

03:53:05.140 --> 03:53:12.140
Macht es in place und ich muss so machen

03:53:12.140 --> 03:53:16.140
Jetzt, jetzt play ich nicht mehr durch, Leute

03:53:16.140 --> 03:53:27.140
Jetzt, jetzt ist mir, jetzt ist mir zu hoch

03:53:27.140 --> 03:53:33.140
Ich muss das gar nicht mehr joinen

03:53:33.140 --> 03:53:38.140
Aber, aber A ist nicht durch Heckweh replaced

03:53:38.140 --> 03:53:41.140
Ist, ist es so doch richtig

03:53:41.140 --> 03:53:44.140
Ne

03:53:44.140 --> 03:53:48.140
Hä

03:53:48.140 --> 03:53:52.140
Okay, wie funktioniert Replace all

03:53:52.140 --> 03:54:00.140
Search, string, Replace, value ist A

03:54:00.140 --> 03:54:06.140
Warum ist das nicht replaced durch Heckweh

03:54:06.140 --> 03:54:11.140
Warum ist das jetzt nicht replaced durch Heckweh

03:54:11.140 --> 03:54:31.140
Warum, ich replace das, ach, weil das Konst ist, kann das sein, weil das

03:54:31.140 --> 03:54:36.140
Ne, ne, das funktioniert, das funktioniert, das hat auch vorher auch geklappt

03:54:36.140 --> 03:54:44.140
Wenn ich hier was anderes reinschreibe, dann, dann funktioniert das ja, also hier, hier drinnen funktioniert es nicht, also, okay, Moment, ähm

03:54:44.140 --> 03:54:46.140
Mach mal anders

03:54:46.140 --> 03:54:50.140
Let temp, wir, uns gehen die Variablen aus

03:54:50.140 --> 03:54:56.140
Temp replace all

03:54:56.140 --> 03:54:58.140
Was zum

03:54:58.140 --> 03:55:02.140
Der replace all funktioniert nicht

03:55:02.140 --> 03:55:07.140
Replace all gibt einen neuen String zurück

03:55:07.140 --> 03:55:09.140
Okay

03:55:09.140 --> 03:55:13.140
Dachte eigentlich genau umgedreht

03:55:13.140 --> 03:55:15.140
Aha, aha, ja, okay

03:55:15.140 --> 03:55:18.140
Jetzt ist hier, jetzt ist hier Heckweh angesagt

03:55:18.140 --> 03:55:21.140
Also kann ich auch einfach sagen item

03:55:21.140 --> 03:55:25.140
Gleich item, item

03:55:25.140 --> 03:55:29.140
Ne, das funktioniert nicht, weil es Konst ist, funktioniert das nicht, okay

03:55:29.140 --> 03:55:31.140
So, gut

03:55:31.140 --> 03:55:34.140
Und jetzt kann ich jetzt einfach sagen

03:55:34.140 --> 03:55:48.140
Replace

03:55:48.140 --> 03:55:52.140
Value

03:55:52.140 --> 03:55:58.140
Ne, das funktioniert nicht mit replace all, weil ich muss ja, ich muss ja in der, ich muss ja innen drin was einsetzen

03:55:58.140 --> 03:56:02.140
Das funktioniert, das kann nicht mit replace all funktionieren

03:56:02.140 --> 03:56:18.140
Ich könnte das höchstens mit, ähm, regex groups oder sowas machen

03:56:18.140 --> 03:56:20.140
Hä?

03:56:20.140 --> 03:56:25.140
Warum funktioniert das jetzt?

03:56:25.140 --> 03:56:29.140
Ach so, der Rest bleibt ja noch da, ne, dann ist ja richtig, dann funktioniert es doch

03:56:29.140 --> 03:56:31.140
Okay, funktioniert das mit info auch?

03:56:31.140 --> 03:56:35.140
Hey, es funktioniert, alles klar, ich, ich hab nix gemacht

03:56:35.140 --> 03:56:38.140
So, let, wir können das bestimmt jetzt noch anders

03:56:38.140 --> 03:56:42.140
Let, let

03:56:42.140 --> 03:56:44.140
Jawoll, wunderbar

03:56:44.140 --> 03:56:46.140
Excellent, excellent

03:56:46.140 --> 03:56:48.140
Okay, wunderbar, vorgas

03:56:48.140 --> 03:56:52.140
Es funktioniert

03:56:52.140 --> 03:56:54.140
Es funktioniert jetzt wieder nicht mehr

03:56:54.140 --> 03:56:57.140
Äh, weil item

03:56:57.140 --> 03:57:00.140
Haha, info

03:57:00.140 --> 03:57:04.140
Leute, highlight funktioniert

03:57:04.140 --> 03:57:07.140
Massive

03:57:07.140 --> 03:57:11.140
Massive highlight

03:57:11.140 --> 03:57:16.140
Aijajaj, aijajaja, was ein Akt

03:57:16.140 --> 03:57:18.140
Ich bin begeistert

03:57:18.140 --> 03:57:25.140
Oh

03:57:25.140 --> 03:57:29.140
Natürlich, das funktioniert ja nicht mehr so, wenn es einfach nur Text ist

03:57:29.140 --> 03:57:31.140
Das ist mir zu kompliziert

03:57:31.140 --> 03:57:34.140
Da muss ich mir Gedanken zu machen, das muss man, das muss man anders machen

03:57:34.140 --> 03:57:38.140
Da müsste man, das müsste man irgendwie im, im, im, nur, nur fürs Rendern machen

03:57:38.140 --> 03:57:40.140
Also ich bräuchte quasi zwei Items

03:57:40.140 --> 03:57:45.140
Ich bräuchte quasi ein Items für

03:57:45.140 --> 03:57:58.140
Was ich eigentlich mache und ein Items, was ich eigentlich anzeige

03:57:58.140 --> 03:58:02.140
Also ich bräuchte dann quasi zwei Sachen da drin

03:58:02.140 --> 03:58:05.140
Nämlich, okay, das, das versuche ich jetzt schnell nochmal

03:58:05.140 --> 03:58:07.140
Domboi, Dankeschön, Dankeschön für den Zap

03:58:07.140 --> 03:58:10.140
Also quasi bräuchte man hier sowas dann

03:58:10.140 --> 03:58:13.140
Äh, äh, Highlight

03:58:13.140 --> 03:58:18.140
Und, und dann bräuchte man einmal

03:58:18.140 --> 03:58:22.140
Was ich, brauch ich doch

03:58:22.140 --> 03:58:26.140
Highlight, oder nehmen wir erstmal Highlight, so

03:58:26.140 --> 03:58:30.140
Highlight und dann bräuchte ich Text

03:58:30.140 --> 03:58:33.140
Item, so

03:58:33.140 --> 03:58:35.140
Object, Object

03:58:35.140 --> 03:58:37.140
Aha, Achtung, Achtung

03:58:37.140 --> 03:58:40.140
Item, Highlight

03:58:40.140 --> 03:58:42.140
Aha

03:58:42.140 --> 03:58:46.140
Und

03:58:46.140 --> 03:58:49.140
Ah nee, Object, beim Anklicken

03:58:49.140 --> 03:58:56.140
Beim Anklicken, Set, Set, Set value will ich Text

03:58:56.140 --> 03:58:57.140
Bam

03:58:57.140 --> 03:59:01.140
Mohammed.net, Anzeigen sind raus hier, ich seh schon

03:59:01.140 --> 03:59:03.140
Obert.com, jawoll

03:59:03.140 --> 03:59:09.140
Es funzt Leute, es funzt

03:59:09.140 --> 03:59:13.140
Es funktioniert, nachdem es bloß immer 10 Sachen sind

03:59:13.140 --> 03:59:15.140
Ist es überhaupt nicht wild

03:59:23.140 --> 03:59:29.140
Was ist mit dem, mit dem Refresh Ding los?

03:59:29.140 --> 03:59:39.140
Das, das hat eben, das hat vorhin schonmal falsch rumgehängt

03:59:39.140 --> 03:59:44.140
Ah ja, ach ja, Set, Set value, Set value hier

03:59:44.140 --> 03:59:47.140
Wo mach ich das denn, Set value links hier, Text

03:59:47.140 --> 03:59:51.140
Text

03:59:51.140 --> 03:59:54.140
Wobei nee, wenn es das gibt, gibt es das auch im Text

03:59:54.140 --> 04:00:00.140
Fuck, nice, ich bin begeistert, aber aus irgendwelchen Gründen

04:00:00.140 --> 04:00:06.140
Warum macht er beim, ah, beim Enter drücken, weil es einen Fehler gibt auf Serverseite, ja klar

04:00:06.140 --> 04:00:10.140
Na das ist natürlich doof, das heißt ich muss doch hier in das Try Catch rein und auch sagen

04:00:10.140 --> 04:00:14.140
Loading, Loading false, was, was ich aber nicht will

04:00:14.140 --> 04:00:18.140
Loading false

04:00:18.140 --> 04:00:22.140
Weil es dann auch beim Abbrechen, beim Abbrechen ausgeht

04:00:22.140 --> 04:00:26.140
Na das ist nicht Sinn und Zweck der Sache

04:00:26.140 --> 04:00:29.140
Das will ich net

04:00:29.140 --> 04:00:33.140
Ich muss einfach gucken, dass der Serverrequest nicht abkackt

04:00:33.140 --> 04:00:35.140
Nice

04:00:38.140 --> 04:00:42.140
Das lassen wir jetzt so, ich, ich mach da das nächste Mal dran

04:00:42.140 --> 04:00:46.140
Aber es ist schon echt nice und guckt mal, und jetzt ist die eigentliche Sache

04:00:46.140 --> 04:00:50.140
Guckt mal, wir zeigen, wir vergleichen mal, wie schnell das Auto complete ist

04:00:50.140 --> 04:00:53.140
Das ist richtig, das flutscht richtig

04:00:53.140 --> 04:00:57.140
Guckt mal, hier unten ist die Zeit immer, hier unten ist die Zeit

04:00:57.140 --> 04:01:00.140
Das langsamste ist, wenn man einen Buchstabe eingebt

04:01:00.140 --> 04:01:03.140
Logischerweise, weil er den kompletten Index irgendwie einmal sortiert

04:01:03.140 --> 04:01:07.140
So, guck mal, 290 Millisekunden bei einem Buchstaben

04:01:07.140 --> 04:01:16.140
So, aber sobald du mehr machst, hat er, hat er nämlich S, I, 27 abdrehen

04:01:16.140 --> 04:01:21.140
Das ist wirklich schnell und wohlgemerkt allem

04:01:21.140 --> 04:01:26.140
Alles ohne, dass das Ding im Arbeitsspeicher sein muss

04:01:26.140 --> 04:01:30.140
Und wollt ihr mal sehen, wie es richtig brutalst schnell wird

04:01:30.140 --> 04:01:34.140
Wenn ich das Order rausnehme, was aber blöd ist, weil das brauche ich

04:01:34.140 --> 04:01:39.140
Aber ich nehme es jetzt mal raus, wenn ich das hier rausnehme, dann ist es übelschnell

04:01:39.140 --> 04:01:47.140
Guckt mal

04:01:47.140 --> 04:01:49.140
7 Millisekunden, null

04:01:49.140 --> 04:01:55.140
Seht ihr das? 1 Millisekunde, 4 Millisekunden

04:01:55.140 --> 04:01:59.140
1 Millisekunde

04:01:59.140 --> 04:02:05.140
Jetzt ist es quasi Echtzeit, ja

04:02:05.140 --> 04:02:09.140
Aber die Dinger sind nicht richtig sortiert

04:02:09.140 --> 04:02:12.140
Weil ich habe den Sort rausgenommen

04:02:12.140 --> 04:02:17.140
Also jetzt, jetzt hat er einfach nur 10 Items

04:02:17.140 --> 04:02:22.140
10 Items, die in irgendeiner Art und Weise das enthalten

04:02:22.140 --> 04:02:35.140
Egal, ob es am Anfang steht oder nicht

04:02:35.140 --> 04:02:39.140
16 Monate, danke schön für den Sub, Pock

04:02:39.140 --> 04:02:42.140
Aber guck mal, wie krass schnell das ist, oder?

04:02:42.140 --> 04:02:46.140
Das flutscht ja mal sowas von

04:02:46.140 --> 04:02:51.140
Guck mal, wie, das ist mega schnell

04:02:51.140 --> 04:02:54.140
Das ist so krass, wie schnell das ist

04:02:54.140 --> 04:02:59.140
Das ist schneller, als wenn ich es komplett in Memory durchsuche

04:02:59.140 --> 04:03:01.140
Truth Force technisch

04:03:01.140 --> 04:03:07.140
Was hast du für einen Sorter drin? Das ist direkt das, was Postgres mitbringt

04:03:07.140 --> 04:03:10.140
Kannst du nicht kleinzeitig sortieren? Nee

04:03:10.140 --> 04:03:14.140
Ich meine, die Datenbank ist allein schon 1,6 Gigabyte groß

04:03:14.140 --> 04:03:17.140
Überleg mal, wie groß das Jason ist, was ich auf einen Client schicken müsste

04:03:17.140 --> 04:03:21.140
Da muss ich dem Client irgendwie 3 Gigabyte Jason schicken

04:03:21.140 --> 04:03:24.140
Viel Spaß, das kleinzeitig zu filtern

04:03:24.140 --> 04:03:30.140
Was genau hast du bisher gemacht?

04:03:30.140 --> 04:03:32.140
Was habe ich denn alles gemacht?

04:03:32.140 --> 04:03:39.140
Wir haben eine Postgres-Datenbank am Start, wo wir

04:03:39.140 --> 04:03:41.140
Ich zeige es dir mal

04:03:41.140 --> 04:03:45.140
Wir haben eine Postgres-Datenbank am Start, wo wir eine Postgres-Extension verwenden

04:03:45.140 --> 04:03:47.140
Die ist aber dabei, die muss man nur aktivieren

04:03:47.140 --> 04:03:54.140
Wo er die Sachen optimiert ablegt, dass man schneller durchsuchen kann

04:03:54.140 --> 04:04:03.140
Und dann haben wir ein Autocomplete gebastelt, was die random generierten Daten abfragt

04:04:03.140 --> 04:04:06.140
Und du siehst, die Query-Times sind mega schnell

04:04:06.140 --> 04:04:15.140
2 Millisekunden, 2 Millisekunden, 1,5 Millisekunden

04:04:15.140 --> 04:04:21.140
Also richtig, das flutscht, das flutscht richtig

04:04:21.140 --> 04:04:23.140
Und wir haben sogar Highlight in den Ergebnissen drin

04:04:23.140 --> 04:04:26.140
Guck mal, man kann hier so auswählen und so

04:04:26.140 --> 04:04:28.140
Ach ja, und wir hatten was, eine Anzeige oben rechts

04:04:28.140 --> 04:04:33.140
Die ist bloß gerade so schnell, dass man es nicht sieht, was eine Anzeige so lange erlädt

04:04:33.140 --> 04:04:37.140
Pok, pok, pok

04:04:37.140 --> 04:04:38.140
Strange

04:04:38.140 --> 04:04:40.140
Leute, ich glaube, ich gehe jetzt was essen

04:04:40.140 --> 04:04:43.140
Hat euch der Stream gefallen heute?

04:04:43.140 --> 04:04:51.140
Kannst du diese Stream eigentlich als Arbeitszeit abrechnen?

04:04:51.140 --> 04:05:01.140
Müsste ich mal meinen Chef fragen, Lul? Nein, kann ich nicht

04:05:01.140 --> 04:05:12.140
Hab nebenbei was ähnliches in den View gebaut, nice

04:05:12.140 --> 04:05:15.140
Ja, du hast geholfen, also du hast vor allem die letzten Streams richtig geholfen

04:05:15.140 --> 04:05:17.140
Wo ich auch gar keine Ahnung von Svelte hatte

04:05:17.140 --> 04:05:25.140
Aber das ist sehr, sehr nice hier

04:05:25.140 --> 04:05:27.140
Ach ja

04:05:27.140 --> 04:05:34.140
Hallo, eh, Hallo kann er nicht

04:05:34.140 --> 04:05:36.140
Und er ist auch schnell, wenn man was sucht

04:05:36.140 --> 04:05:42.140
Aber es ist immer ohne Scheiß, Leute, der Query-Speed ist so schnell

04:05:42.140 --> 04:05:45.140
1,4 Milliliter, okay, es ist nicht das Optimale

04:05:45.140 --> 04:05:51.140
Also besser wäre es tatsächlich, den hier zu machen

04:05:51.140 --> 04:05:54.140
Das Order wieder reinzunehmen

04:05:54.140 --> 04:05:59.140
Folge jetzt, Pok, ja heute gibt es keine Follower und keine Streaming Alerts und so was

04:05:59.140 --> 04:06:09.140
Und keine Subscription Alerts, weil die Steamlabs kaputt sind

04:06:09.140 --> 04:06:16.140
Order by

04:06:16.140 --> 04:06:20.140
ID, Order by ID sollte immer schnell sein

04:06:20.140 --> 04:06:36.140
Dann ist die Reihenfolge richtig, es kommt auch bei jedem Query das gleiche raus

04:06:36.140 --> 04:06:39.140
Das ist so schnell, ich finde es richtig geil

04:06:39.140 --> 04:06:43.140
Einmal zwei Buchstaben und so, dann brauche ich ein bisschen für

04:06:43.140 --> 04:06:49.140
Aber ich order es ja auch so, dass das quasi was mit einem A anfängt dann auch zuerst steht

04:06:49.140 --> 04:06:57.140
Das ist ja auch irgendwie das, was man erwarten würde

04:06:57.140 --> 04:07:04.140
Moment, haben die vielleicht in Postgres irgendwas drinnen, was automatisch schon nach irgendwie

04:07:04.140 --> 04:07:11.140
Sprachlogik sortieren kann, wo habe ich denn hier diesen originalen Post nochmal

04:07:11.140 --> 04:07:14.140
Hier, da

04:07:14.140 --> 04:07:19.140
Du hast doch zweimal Ordner drinnen, ja Moment, Moment, ich habe Order by ID

04:07:19.140 --> 04:07:24.140
Das habe ich, dass es immer die gleiche Reihenfolge ist, wobei müsste es

04:07:24.140 --> 04:07:30.140
Leute, das ist doch Schwachsinn, das brauche ich nicht, es ist immer by ID geordert

04:07:30.140 --> 04:07:34.140
Aber ich habe vorher unterschiedliche Ergebnisse gekriegt, je nachdem was ich abgefragt habe

04:07:34.140 --> 04:07:48.140
Dann habe ich Ayla am Anfang gekriegt und dann wieder was anderes

04:07:48.140 --> 04:07:51.140
Guck

04:07:51.140 --> 04:07:53.140
Lull

04:07:53.140 --> 04:07:57.140
Und jetzt suche ich wieder nach A

04:07:57.140 --> 04:08:00.140
Ich kriege immer was anderes mit A zurück

04:08:00.140 --> 04:08:06.140
Warum eigentlich

04:08:06.140 --> 04:08:10.140
Ah, ja weil mein Order by dumm ist

04:08:10.140 --> 04:08:17.140
Mein Order by ist ja auch richtig hängen geblieben, deswegen funktioniert das nicht

04:08:17.140 --> 04:08:24.140
Es ist, es ordert ja einfach nur nach Start Twist, also es ist entweder startet es damit oder nicht

04:08:24.140 --> 04:08:31.140
Ich müsste es vorher sortieren, es ist aber eigentlich auch richtig

04:08:31.140 --> 04:08:34.140
Order by

04:08:34.140 --> 04:08:37.140
By ID

04:08:37.140 --> 04:08:43.140
Also es müsste eigentlich funktionen dann

04:08:43.140 --> 04:08:45.140
Der erste ist langsam

04:08:45.140 --> 04:08:48.140
Lull

04:08:48.140 --> 04:08:50.140
Lull

04:08:50.140 --> 04:08:54.140
Nee, okay bin ich zu

04:08:54.140 --> 04:09:05.140
Zu Low IQ für jetzt, müsste ich mir angucken, das ist aber echt mein kleines Problem gerade

04:09:05.140 --> 04:09:10.140
Leute, ich hoffe euch das Streaming hat euch gefallen, also ich habe echt was gelernt heute

04:09:10.140 --> 04:09:14.140
Wir sehen uns im nächsten Stream, machts gut, bis denn

04:09:14.140 --> 04:09:20.140
Schön, dass so viele dabei gewesen sind und ich gehe jetzt was futtern, machts gut, CU

