Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Es war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's voor heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Das war's für heute.
Jetzt stell dir vor, du hast... was? Moment, das muss ich mal... was? Und jetzt stell
dir vor, du hast den BWL-Unterricht nicht, weil keine Lehrer da sind, musst du es im November zur
Abschlussprüfung... ja, das ist was in der Abschlussprüfung an BWL dran kommt, ist easy, easy as fuck hier. So ist das.
Generell ist die IHK-Prüfung der absolute Witz. So, also gucken wir mal, was, was gibt es denn hier so im Umkreis?
Umkreis, umkreis vor allem auf 50 Kilometer, Frankfurt am Main, dein Wunschberuf eingeben, okay. Fachinformatik, ah, okay, okay, es gibt ja gar keine
Unterscheidung, alles klar. Okay, in Frankfurt, das ist der größte Scheißladen, Alter. ERTO, GmbH, ich hatte
jemand in der Berufsschule, die war da, das ist irgendein Erotikunternehmen in Frankfurt, die haben
so Webcam-Pornseiten und Zimmervermietung und... frag mich nicht, was die alles haben. Übelster Kackladen.
Also, also der echte Proxy, geil mag das sein, allerdings nicht dort zu arbeiten. Also was die
erzählt hat in der Berufsschule, muss das wirklich der allergrößte Mistladen sein.
Ah, ne, ne, das muss übelst Ausbeutungsladen sein, wo keiner gerne arbeitet. Also das geht auf gar
keinen Fall hin, ich hab da nur schlechtes gehört. Also ich kenn einen, der hat da eine
Praktikierung gemacht, der fand's grausam, ich kenn einen aus der Berufsschule, der fand's grausam und mein jetziger
Azubi, oder unser jetziger Azubi, der hat auch zwei Leute in der Berufsschule, die dort arbeiten, die
finden's auch übelst kacke. Also es kann einfach nur Müll sein. Ist das nicht voll spannend? Ich glaube
nicht, dass du für solche Sachen so zuständig bist, was du dir so vorstellst, sondern für ganz
normales IT-Zeug nur, dass dir halt die Arbeit, dass sich die Arbeit abfuckt. Und die Leute,
dein Chef und alles. Also was man da so hört, ist grausam, also hier würde es auf gar keinen Fall
hingehen. Wir können ja mal suchen, wir können ja mal gucken, wir können ja mal gucken, was die
sagen. Wir können ja mal gucken, was die sagen. Also was schreiben die denn? Wie gesagt, geht da
nicht hin. Ich hab nur schlechtes gehört über den Laden bisher. Ausnahmslos, nur schlechtes.
Nichts, nirgendswo was Gutes. Steht da nicht der Name? Der Name von denen dabei? Was schreiben
die denn hier? Für unseren Standort suchen wir für 2020 Auszubildende. Naja, als Full-Surface,
Full-Surface. Okay, das ist bei einem Erotik-Laden jetzt die Frage, was die darunter verstehen.
Oh, der Tanzer geht wieder ab hier. 5 Stufe 1 Abos hat er verschenkt. Der Chat, der Kopf explodiert
Leute im Chat. Wer hat denn, wer hat denn was gekriegt? Prali99, gepad1HD, Solea von Astora.
Das hört sich irgendwie so, der Name, ich weiß nicht, Solea von Astora, das hört sich irgendwie so
griechisch, griechisch, philosophisch, big brain-mäßig an. Also, excellent hört sich das an. Aber
da bist du ja hier, richtig. Der Crazy, Emoy Carl und Foxtetzen. Alles klar, nice. Danke schön für die Subs.
Also, was verstehen hier drunter? Als Full-Surface-Werbe- und Medienagentur mit Star-Full-Surface. Okay,
wenn man weiß, was der Laden macht, stellt sich irgendwie Full-Surface irgendwie ein bisschen
anders da. Ähm, ich muss halt kurz schnell schauen. Oh, das Scam-Train ist am Start.
Oh, meint mal, Leute, ich hab den Chat aus Versehen zugemacht, das geht ja nicht.
Irgendwas übersehen? Nee, der 5, Michael 5 Billion hat abonniert, das hab ich schon gesehen.
Vollkorn-Mischbrot hat auch 7 Monate abonniert, hab ich jetzt sehe ich. Aber ich weiß nicht,
ob ich schon gesagt hab, danke schön für den Sub. So, also, ähm, da blablabla, im Bereich
Print-Online-Medien, wie gesagt, das ist irgendwie so ein Erotikladen. Wir entwickeln individual,
blablabla, blablabla, blablabla. Okay, da steht jetzt nichts Großartiges dabei. Ich weiß halt,
dass der Laden, dass ich nur von keinem was Gutes bisher gehört habe und dass es irgendwie so ein
komischer Abgang vor der Erotikladen ist. Nee, alles, alles Müll. So, Moment, jetzt hab ich
ja aus Versehen zugemacht. Was, gibt's denn ein paar gescheite Läden, die was haben? Hab ich
noch nie gehört, hab ich noch nie gehört, hab ich auch noch nicht gehört. Äh, die ist irgendwo bei
uns um die Ecke. Äh, keine Ahnung, ob das was taugt. Wie wär's, wie wär's mal nach Entfernung zu
sortieren? Null. Provades, von denen hab ich schon mal was gehört, keine Ahnung, ob die was taugen.
Oh, bei der VFG, bei der, oh, exzellent. Das sind die, die, die, äh, U-Bahn und Straßenbahn in
Frankfurt macht. Gibt's da nicht so, äh, ja, ja, wie heißt das? Konunu oder so, ne? RTO. Okay,
die scheinen ja richtig gut zu sein. Weiter Empfehlung, 28%. Oh, äh, okay, okay, bla, bla, bla.
Das, ah, die sind ja gar nicht so, ah, hier. Der hat, der war hier wenigstens wirklich am Start.
Flexibel, schlecht Respekt, weniger schlechter. Also, das deckt sich exakt mit dem, was ich von den Leuten
gehört hab, die dort, die dort, die dort arbeiten. Äh, mach bitte Position aus, wo geht denn das? Hier?
Okay. Hier, die meisten. Der find's übelst schlecht. Arbeitsatmosphäre, also, wie gesagt, ich hab nichts
Gutes bisher davon gehört, ja. Alle, allen, mit denen ich Kontakt hat, die da gearbeitet haben,
fand's richtig mies. Also, wenn das schon das einzige Gute ist, Gehalt kommt pünktlich an.
Das ist halt wirklich das Mindeste, oder? Schlecht für dich, kann ich gar nicht alles aufzählen. Am
besten alles ändern, was geht, okay. Die Arbeitsatmosphäre ist, ja, das haben auch alle gesagt, die ich, äh,
kennengelernt gearbeitet haben. Inoffiziell zu schwer. Das ist, das geht, das ist auch teilweise schlimm in
manchen Läden. So dieses, offiziell ist es so und so, weil man muss sich ja angesetzliche Vorgaben
halten, aber in dir inoffiziell wird erwartet, dass bla bla bla. Wir sind ja nicht in Japan, wo du nicht
vom Chef aus dem Büro gehen darfst, wobei ich keine Ahnung hab, ob das wirklich so ist, ne. Ich sag,
das wird immer so gesagt, keine Ahnung, ob das stimmt. Nicht alles ist schlecht, dafür aber sehr
vieles. Als ein Punkt wäre zum Beispiel, dass man sich einmal im Mund über ein Ticket an unseren
Vorgesetzten melden kann und diesem dann die aktuellen Probleme melden kann. Moment, du kannst,
du musst ein Ticket bei deinem Chef aufmachen, dass du mit ihm über aktuelle Probleme reden
darfst. Das ist gut. Eigentlich sollte man bei seinen, bei Problemen, wenn der jetzt grad im
Haus ist oder nicht grad irgendwie jederzeit zu seinem Chef gehen könnte. Was ist das für ein
Pluspunkt, Alter. Scheint ja ein absolut erstklassiger GitHub-Issue aufmachen, erstklassiger Arbeitgeber
zu sein. Also wie gesagt, geht da nicht hin. VFG ist wahrscheinlich gar nicht, VGF ist wahrscheinlich
gar nicht so übel. Die machen hier aber auch gar keinen, die fackeln aber auch nicht lange hier.
Die fackeln auch nicht lange. Gewünschte Vorqualifikation, Office. Okay, erweiterte
Fremdsprachenkenntnisse. Kein Problem. Ich habe mir die Rede vom Oettinger angehört. Ich kann jetzt
sagen, we are all sitting in one boat. Das reicht. Genug Fremdsprachenkenntnisse. Oh, die Bahn. Die
Bahn sucht auch Leute. Die habe ich sogar mal eingeladen. Aber ich habe mich nie wieder gemeldet.
Also nicht zur Ausbildung eingeladen. Also so eingeladen. Oh, ich bin da nie hin. Hab ich nie
gemeldet. Okay, Stadt Frankfurter Main. Nope. Okay. Die Messe sucht auch Leute. Zumindest anscheinend
gibt es da wirklich genug. Ich wollte mir jetzt gar nicht die Fachinformatik Ausbildung angucken.
So wirklich. Ich weiß nicht, wie ich da treffe. Moment, ich gucke mir lieber die Fachinformatik
Ausbildung, bevor ich mir irgendwas angucke, was mit C++ zu tun hat. Das müssen wir uns jetzt gleich
schon oft genug angucken. Ihr seht es hier oben rechts wieder. Ihr seht es ja hier, da. Ah ja, ja,
Display ist am Start. Wegen dem DB-Video. Wahrscheinlich wegen dem Video und wahrscheinlich
weil ich immer so Übels rumflame auf Twitter. Da hat mich einer eingeladen, ob ich nicht mal
meine Kritikpunkte da irgendwie, da irgendwie, ob ich da mal irgendwie dran betracht. Keine Ahnung.
Die haben so einen Turm, so ein Innovationsgebäude irgendwie in Frankfurt und so. C++ ist halt ein
Options-Type. Ja, ich habe mich notgedrungen die letzten Tage ein bisschen, ein bisschen mehr noch
mit C++ beschäftigt. Und C++ hat tatsächlich relativ vieles, wo man gar nicht denkt, dass es
das hat. Aber es ist übelst, also es ist nicht nur übelst, es ist mega beschissen integriert zum
größten Teil. Und also richtig beschissen zum größten Teil. Ich krieg so Anfälle. Was ich auch,
das ist auch so ein Ding, was ich in C++ nicht verstehe, ist, die haben, für vieles haben die
Typen drinne. Zum Beispiel, dass man nicht mehr mit irgendwelchen Raw-Pointern rumhantieren muss,
haben die sowas hier drinne. Wär ja wunderbar. Aber dann haben die anstatt ordentlichen Constructor
für diese Klassen, haben die dann sowas drinne. Hä? Und allein schon, wer der noch irgendwie bei
Verstand ist, erkennt denn jetzt auf den ersten Blick aus dieser Typdefinition, was man da für
Argumente reinstecken darf, oder? Was ist das hier? Ich mein, ich erkenne es mittlerweile. Das hier
ist das Template-Parameter 1, das ist Template-Parameter 2 und davon kannst du so viel wie du willst angeben.
Aber kann man den Scheiß nicht mal ordentlich benennen? Ich mein, so schwer kann das doch
nicht sein. Den Kram mal irgendwie einen Namen zu geben, wo man was mit anfangen kann. Aber es
ist halt echt grausam. Also ich werde euch mal kurz sagen, was wir heute vorhaben. Ich weiß nicht
genau, wie weit wir kommen und ich weiß auch gar nicht, ob es klappt. Ich habe im Vorfeld,
also auch wenn ich jetzt ein bisschen ahnungslos tue, dem Entertainment-Faktor zuliebe, ich habe
mir das im Vorfeld schon ein bisschen angeguckt. Wieso ist es erst 13.30 Uhr? Du meinst auf,
ist es da echt nur 13.30 Uhr erst? Ah, weil die Zeitzone nicht stimmt. Die Zeitzone stimmt nicht.
Wahrscheinlich habe ich die falsche Zeitzone angegeben in meinem AJAJA-NTP-Gedöns. Wahrscheinlich
ist es die falsche Zeitzone. Wollen wir gleich mal gucken. Ich denke mal, es ist die falsche
Zeitzone. Ja. NTP. Das ist nicht die richtige Zeitzone, oder? CET-1, CST-2. Das ist nicht
die richtige, oder? Was haben wir denn jetzt gerade? Wir haben plus, wir sind CET plus eins und im
Sommer plus zwei, oder? Wie sind wir? Summertime ist plus zwei und Winterzeit ist plus eins, oder?
Gut. Upload. Gucken wir mal, ob es jetzt stimmt. Machen wir das gleich mal richtig. Nicht, dass
die Uhrzeit jetzt irgendwie uns was bringen wird. Schauen wir mal, ob das jetzt richtig ist. Oh,
huge, massive Upload-Speed. Zum Glück müssen wir für die meisten Sachen gar nicht direkt
uploaden, sondern können vieles runterprogrammieren, ohne dass wir das uploaden müssen. Wir müssen
bloß abends mal uploaden zwischendurch, um zu gucken. Exzellent. Eine IP haben wir gekriegt.
Und stimmt's? Ich sehe es in der Vorschau net. Okay, NTP hat sich noch nichts geholt. Also,
der muss erst mal zum NTP sich eine Zeit holen. Jahr 70. Wer BigBrain-CET? Warum ist es erst der
1. der 1970? Ich weiß, der Chat ist BigBrain, er weiß das. Oder warum war das? Unix-Time. Richtig.
Erst der 1. der 1970 geht die Unix-Zeitrechnung los. Und nachdem sehr viele Netzwerksachen irgendwelche
Unix-Forks sind, also auch Windows hat auch so viel von BSD übernommen, deswegen ist das unter viel
Betriebssystem so. Aber jetzt hat er sich per NTP Zeit geholt und jetzt haben wir auch 13.33.
Ja, gut. Hat nicht so ganz funktioniert, würde ich sagen. Hat nicht so ganz funktioniert. Okay,
wir ignorieren das mal. Ich lasse das mal hier stehen. Wir ignorieren das. Keine Ahnung. Ich
gebe mal die Build-Time aus, ob der jetzt auch wirklich alles abgeloadet und gepusht hat. Nicht,
dass der jetzt vielleicht kaputt ist oder so. Ich mag. Man weiß ja nicht. Aber das ist eigentlich
falsch. Minus eins. Was auch immer. So, aber das ist gar nicht, was wir heute machen wollen. Also,
die Uhrzeit von diesem Display ist eigentlich erst mal vollkommen egal. Heute machen wir was relativ
kompliziertes. Was haben wir für eine Build-Time? 15.84. Das ist eigentlich recht korrekt. Aber
auf dem Display stimmt es nicht. Ja gut, das ist ja auch statisch. Also, ihr werdet vielleicht
feststellen, im Vergleich zum letzten Projekt. Das letzte Projekt war ja, was wir hatten,
dass das Display funktioniert und dass man ein Firmware-Update übers WLAN machen kann. Also,
auf das Gerät um. 15.84. Äh, 15.34 habe ich 84 gesagt. Aber man darf da nicht so genau
hinhören, was ich immer erzähle. So, im Vergleich zum letzten Projekt, seht ihr,
es sieht ein bisschen anders aus heute. Ich habe ein paar Sachen hier oben nach Lips geschoben und
es ist kein Arduino-Projekt mehr. Es ist, ich kaufe es in der Playstation 5 wahrscheinlich
erst mal nicht. Nee. Hat das Display Touch? Nee. Aber es hat zwei Knöpfe. Es hat links und rechts
zwei Knöpfe. Die kann man verwenden. Ich will jetzt nicht aufstehen, das reinschieben. Ich
zeige euch mal ein Bild davon. Das hat zwei Knöpfe, die man programmieren kann, was die
machen sollen. Aber es ist kein Touch. Ich sage, das ist ja auch, aber das ist klein. Das ist ein
1,6 Zoll oder irgendwas. Nee, 1,14 Zoll Display. Was willst du denn da touchen? Da brauchst du erst
mal, musst du erst mal deinen Finger irgendwie in die Presse stecken, dass er so klein wird,
dass du ihn da touchen kannst drauf. Link. Hier, TT-Go-T-Display heißt das Ding. Das,
was für ein Display da drauf ist, da ist ein IPS ST7789V drauf. Oder irgendein Stylus benutzen.
Aber Touch ist da drauf nicht so sinnvoll. Kriegst du darauf Doom zum Laufen? Ganz ehrlich,
keine Ahnung, ob irgendjemand schon versucht hat, Doom auf den ESP32 zu portieren. Anscheinend.
Anscheinend. Geht euch YouTube auch so auf den Sack in letzter Zeit mit diesem Pop-Up? Das kam
nie. Das kam nie. Das kommt seit einer Woche. Das ist so nervig. Ich frage mich, wann die ganzen
Pop-Up-Blocker das endlich hinkriegen. Das muss weg. Das nervt. Das ist wirklich extrem
massiv nervig. YouTube White Scene. Oh je, nee, das geht ja nicht. Warte mal, wo stellt man das
überhaupt um? Hier, da. Dark Scene. Exzellent. Lens Zeroes schreibt, ich habe keine Ahnung
vom Programmieren, geschweigenen von dem, was abgeht, aber ich höre trotzdem zu nur wegen Max.
Das ist schön, vielleicht ist ja trotzdem was für dich bei. Heute ist es ein bisschen komplizierter.
Genau, also anscheinend sind schon Leute auf die Idee gekommen und haben Doom laufen lassen auf
einem ESP32. Also ja, das scheint zu gehen. Es sieht ein bisschen abenteuerlich aus, aber ja,
es scheint zu funktionieren. Doom läuft ja nun mittlerweile echt überall drauf. Auf Druckern.
Wahrscheinlich läuft das sogar, wenn ich ein Display anschließen könnte auf meinem Klo.
HS-Yohi, neun Monate. Dankeschön für den Sub. Toostmyname sagt, so ein Russe, also du meinst so ein
Kekommret, hat auch mal alte Ram-Dims an einem Arduino angeschlossener Linux mit Bash über
ein paar Stunden geboot. Tja, also es gibt ja ein X86-Arduino, wo man Linux drauf laufen lassen kann.
Hast du noch Kontakt mit dem Frisur? Ja klar, ab und zu. Wenn du jetzt fragst,
mit dem Kambum? Ja, mit dem Kambum auch. Mit dem war ich vor drei Wochen oder so Sushi futtern
in Frankfurt. So, also was wir heute machen ist, als erstes muss ich mal sagen, das Projekt sieht
ein bisschen anders aus. Doom auf dem Schwangerschaftssitz, das habe ich noch nicht gesehen,
aber ich habe gelesen, dass es das gibt. Das Projekt sieht ein bisschen anders aus und zwar,
ich habe geupdatet. Erstens ist das Plattform IO50 jetzt, also das allerneueste, was es gibt und das
ist kein normales Arduino Projekt mehr. Das ist ein, kannste mal zeigen, das ist ein ESP-EDF-Projekt
mit Arduino als Modul. Das hat ein paar Vorteile, zum Beispiel, dass die Tools neuer sind, dass man
C++17 verwenden kann, ohne dass man sich in beiden ausreißen muss. Und auch die eingebauten Libraries
sind ein bisschen neuer, das ist ganz praktisch. Das schöne an Plattform IO ist ja, man kann den
ganzen Kram so konfigurieren über dieses INI-File, warum auch immer es unbedingt ein INI-File sein
musste, weiß ich auch nicht. Und dann läuft das auch. Und ich habe noch was, ich habe einen Custom
Build-Script, was läuft, wenn man einen Build macht. Und zwar, was das Custom Build-Script macht,
ist, ich zeige es euch mal, Moment, wo ist es? Hier. Ob man sowas wie Ingui zum Laufen bekommt,
da weiß ich nicht, was es unten drunter macht, kann ich mir durchaus vorstellen. Es gibt ja ein
paar Grafik-Libraries für den ESP32, also das ist wahrscheinlich gar nicht so weit weg von. So,
das Version-File schreibt nämlich einfach Build-Number, wir sind gerade bei, ich habe das aus
einem anderen Projekt kopiert, wir sind gerade bei compile-build-Vorgang 1898 und da schreibt ihr
auch die Zeit rein. Das ist ganz nützlich, da kann ich mir unten nämlich ausgeben lassen,
sprich, welche Version das ist und wann ich das Ganze gebaut habe. Da weiß ich, wie aktuell die
Kisten ungefähr sind. Und das ist so ein Mini, ein Mini-Python-Script, was das macht. Das zählt
einfach den ganzen Kram hoch pro compile-Folge, sprich, wenn ich jetzt Build mache, dann werdet
ihr gleich sehen, dann ist es dann eine Versionsnummer höher. Das ist zum Debuggen wirklich nützlich.
So, guckt, jetzt ist es 1899. Wenn wir noch ein bisschen machen, sind wir bei der aktuellen
Windows-Version angekommen heute irgendwann noch. So, ich habe jetzt übrigens geupdatet. So,
genau. Und das ist jetzt ein ESP-EDF-Projekt mit Arduino als Modul. Das heißt, man kann da
ein paar Sachen mehr konfigurieren und hat neuere Tools und einen neueren C++-Standard. Das ist
ganz praktisch. Ja, so weit, so gut. So, und was ich hier sonst auch drinnen liegen habe, ist
eigentlich mehr oder weniger, dass auch, das ist die Display-Klasse, die wir das letzte Mal
gebastelt haben, die oben rechts jetzt hier, was ihr seht, auf dem Display das ganze Zeug anzeigt.
Dann habe ich ein paar Helper-Sachen am Start zum File einlesen und sowas. Das ist mittlerweile
übelst lang. Ich zeige es euch mal. Guck mal hier, weil C++ halt nur mal so sackt, muss man halt viel
Zeug selbst machen. 500 Zeilen Helper-Gedöns. Guck mal, ein paar Dinger sind sogar so ordentlich
gemacht, dass ich sogar einen Kommentartext oben dran gemacht habe. Ja, warum die Uhrzeit nicht
stimmt, ist wirklich Frage. Ich weiß nicht, warum die Uhrzeit nicht stimmt. Ich würde eigentlich
sagen, die Uhrzeit ist richtig eingestellt. Also das stimmt nicht, aber... Tja. Ja, und ich habe mich
hier teilweise übelst ausgelassen mit... Ach ja, übrigens, ich habe sogar was eingebaut, dass man
pingen kann und sowas. Das ist wirklich ganz nützlich. Also, wie gesagt, ich habe da ein paar
Sachen selbst gebastelt, weil die mir halt einfach in C++ gefehlt haben. Zum Beispiel, dass man den
internen Temperatursensor vom ESP verwenden kann, dass man einfach mal filtern kann. Wieso
CST-2? Ich weiß, das ist verkehrt, aber auch wenn ich es ändere, ändert sich nichts. Warte mal,
gibt es da nicht eine Seite, wo man CZ-Infos-Generator machen kann? So. Falls da irgendwie einer Time Zone
Generator... Time Zone String Generator... Ich weiß nicht, wie der Kram richtig heißt. Nee. Ja,
sowas hier brauche ich. Ups. Sowas hier brauche ich. Da gibt es irgendwo Generator für und ich war
vergessen, wo. Aus irgendeinem Generator habe ich mir mal diesen DateTimeString hier auch
rausgeholt. Aber ich weiß beim besten Willen nicht, warum das jetzt hier nicht stimmt. Also,
ich meine, das ist falsch, aber wenn ich das update, stimmt es auch nicht. Wir hatten immer
eben gemacht plus 1 und plus 2 und dann habe ich wieder abgeloadet, aber da ging es auch nicht. Ja,
weil ich sagen wollte, ich habe mir da so ein paar Sachen eingebaut, zum Beispiel, dass man
einen Container filtern kann, ob es Elemente hat, ob es Elemente hat, die auf was matchen. Ich habe
mir im Prinzip, wenn man ehrlich ist, C++ ein bisschen mehr VC-Sharp gemacht mit so ein paar
Sachen, die hier drin sind. Ja, dass du Arduino-String zu C++-String und C++-String zu Arduino-String
machen kannst. Ein paar kleine Sachen, nichts großartiges. Also, man wird auch so alles
verstehen. So, was macht die Uhrzeit jetzt? Nee, stimmt immer noch nicht. Ich brauche so
einen komischen Generator, tz-info. Wie erstellt man sowas? Kannst du auch to upper und to lower?
Ja, kann ich, kann ich. Kann ich, pass mal auf, kann ich. Habe ich extra eingebaut,
weil mir das immer übelst auf den Sack geht, dass C++ sowas nicht hat. Kann ich? Hallo? Auto
completion, please? Come on, brah. Also ja, habe ich. Kann ich dir zeigen? Da. Da, kann ich,
aber warum mag ich den denn nicht? Warum geht mein Auto-Complete gerade nicht? Ah, plus plus.
Ah, jetzt geht es aus Gründen, die sich mir nicht erschließen. String to lower, String,
da habe ich eingebaut, ja. Kriegt übrigens C++ in 20, in C++ 20 kriegt das angeblich.
Moin Max, wie ist deine Meinung zu den neuen Konsolen? Konnte leider bei dem Chaos keine
PS5 vorbestellen. Würdest du die günstige Variante kaufen? Ich lade mir den Kram eh nur noch runter,
ich würde mir die ohne Lauf verkaufen. Aber ich habe es nicht verfolgt und ich habe mir auch die
letzte Vorstellung nicht angeguckt. Weiß ich gar nicht, keine Ahnung. Tja, also falls irgendwie
einer so einen Time Zone Generator, kann das sein, dass ich das gar nicht richtig setze?
Doch tzinfo. Für was ist die 1 da hinten dran? Override. Wie generiert man sowas?
Da ist doch sowas hier. Europe, Berlin. Okay, ich habe es richtige. Guck mal,
ich habe es richtige. CET-1, was auch immer. Aber es funktioniert nicht.
Habe ich den richtigen NTP Server? Vielleicht habe ich den falschen NTP Server gesetzt.
Also anscheinend muss man tatsächlich Minus dazwischen machen. Nee, der NTP Server stimmt.
Nee, der NTP Server ist falsch. Guck mal, was für ein IP habe ich? Aha, das ist der falsche
NTP Server, deswegen geht das nicht. Der kommt nicht zum NTP Server hin, würde ich mal vermuten.
Wobei doch, der muss zum NTP Server kommen, sonst hätte er die Zeit ja nicht abrufen können.
Na ja gut, ich kann ihn mal. Ich weiß es gar nicht, ist es 1.1? Ich weiß gar nicht,
was mein Gateway ist. Probieren wir es mal so aus, vielleicht geht die Zeit jetzt.
Aber wir halten uns da nicht so, doch wir sind GMT plus 2, aber anscheinend gibt es hier keine
Plusse, sondern nur Minusse. Es ist aber auch wurscht, das kriege ich easy gefixt. Wir wollen
heute nämlich was ganz anderes zu machen. Schon so früh zu Hause? Nee, ich habe Apppoint frei.
Morgen auch, übermorgen auch, in einem Monat auch. Legion 14982 Monate, dankeschön. Excellent
Subscription, big brain. So, wie sieht es jetzt aus? Nein, 13.57. Scheiß drauf. Kein Bock,
das machen wir jetzt nicht. Wir lassen das jetzt so. Ich mache da jetzt nichts, sonst brauche ich
ewig bis NTP geht und in Wirklichkeit ist es sinnlos. Das wollen wir gar nicht machen. Also,
was wir heute machen ist folgendes. Irgendeine Nase gelaufen gerade. Also, was wir heute machen
ist folgendes. Wir haben uns das letzte Mal programmiert, dass das Display funktioniert
und dass man Firmware Update hochladen kann hier dran. Ich weiß, dass das funktioniert,
dass man Standard Transform und Gedöns machen kann, aber mich nervt, dass es so kompliziert ist.
Deswegen habe ich wieder was eigenes gebastelt. Man könnte ja einfach in die Standard String
Klasse so was einbauen, so ein paar Basic Sachen. So to Upper, to Lower, Trim Left, Trim Right,
Replace und sonst was. Teilweise haben sie es drin. Ich hole mir eine 3090, sobald es das gibt. Also,
das hier haben wir gebastelt, dass das hier funktioniert, das letzte Mal im Stream,
so from scratch. Ich habe jetzt das Projekt konvertiert von einem reinen Arduino Projekt
zu einem ESP-EDF mit Arduino Projekt, dass wir ein bisschen neuere Tools haben und eine Sache,
die ja übelst nervig war, für mich auch die letzten Streams, die wir gebastelt haben, ist,
dass die ganzen Web-Server alle irgendwie sucken. Also, ich möchte ja einen Web-Server haben,
der HTTPS kann für Firmware Upload. Hauptsächlich, weil es geht, nicht weil ich denke,
dass irgendwie einer meiner Firmware mitschneidet oder so, was auch nicht schlimm wäre. Da gibt es
ja eh nichts Kompliziertes, nichts Tolles drin. Aber ich mag das einfach, wenn Firmware Update
über HTTPS ist und außerdem lernt man da ein bisschen was bei. Und eine Sache, die ich auch
schon eine ganze Weile machen will, ist, dass man sich die Logs hier unten auch über eine
HTTPS-Verbindung schicken lassen kann. So, und die ganzen Web-Server, die es so gibt,
finde ich ziemlich, ziemlich am Mist. Der eingebaute Web-Server von ESP ist ganz merkwürdig. Der ist
rein Single-Core und bleibt laufend hängen. Dann gibt es einen anderen, der auch noch HTTPS kann,
der bleibt, wenn man die Verbindung abbricht, hängen. Deswegen habe ich gedacht, wir probieren mal
einen Mini, wirklich einen Mini-Web-Server, was ganz kleines, also einer, der quasi nur Get und
Post kann und sonst nix. Get, Post und dann auch nur quasi Index-HTML ausliefern oder so was und
ein Post-Firmware-Update machen, weil unter Slash-Logs halt die Logs hier raus bekommen,
den eigenen Web-Server zu basteln. Allerdings soll der HTTPS können. Ich habe mir im Vorfeld
schon mal angeguckt, wie das funktioniert. Es gibt da, es gibt hier ein Beispielprojekt und zwar,
das müssen wir uns heute angucken. Examples haben die hier irgendwo oder Programs. Irgendwo haben
die hier einen Server-Example, genau. Es sieht mega kryptisch aus, fand ich auch am Anfang,
aber es ist gar nicht so kompliziert. Der ESP32 benutzt das hier als Libraries für TLS oder für
SSL. Was wir machen müssen, ist eigentlich nur dieses Beispiel hier in ein bisschen schöner
übersetzen, sodass es auf dem ESP32 auch ordentlich funktioniert. Dann sollten wir eine
verschlüsselte Verbindung vom Browser zu dieser Kiste hier aufbauen können und statische HTML
abrufen können. Wenn wir statisches HTML abrufen können, dann ist das kein großartiges Ding,
weil dann können wir auch einfach vom Flash-Speicher eine Webseite ausliefern.
Das probieren wir jetzt mal. Wie gesagt, ich habe im Vorfeld schon ein bisschen geguckt,
wie das Ganze funktioniert. Mich stört es ehrlich gesagt, dass die Zeit falsch ist,
aber da können wir jetzt nichts machen. Da habe ich jetzt auch keinen Bock. Großartig
dran rumzuwursten, bis das funktioniert. Vielleicht sollten wir mal den NTP-Server setzen. Ich habe
eine Idee. Wir setzen mal den NTP-Server nachdem das WLAN ab ist.
C++, hallo? What the fuck? Ich habe zwei Zeilen verschoben. Was ist dein Problem?
The fuck? What? Was denn jetzt? What the fuck? Das hat sich überhaupt nichts geändert. Was zum
Teufel geht ab? Was ist denn jetzt los? Habe ich irgendwas kaputt gemacht? What?
Okay, ich bin absolut planlos. Was hat er denn jetzt für Schmerzen? What the fuck?
Das ist so typisch C++. Du hast nichts geändert. Du kompilierst einfach nochmal. Bäm, geht nicht
mehr. Was hat er denn für Probleme jetzt auf einmal? Guck mal, hier, der meckert über die... Das ist
irgendwie... Moment. Ich habe nichts gesagt. Ich bin im falschen Fenster. Nee, bin ich nicht. Ich
bin im richt... Moment. Moment, ich war im falschen Fenster. Was ist das Richtige davon? Das ist das
Falsche. Das ist das Richtige. Ah ja, gut. Ich war nur im falschen Projekt. Ich war im falschen
Editor. Also wir programmieren, wir probieren heute einen Webserver zu bauen. Einen Mini. Einen wirklichen Mini. Einen kleinen, der nur ein bisschen
statisches HTML ausliefern kann. Allerdings... Also einen Webserver, der statisches HTML ausliefern kann auf dem
ESP32. Allerdings, der auch SSL können soll. Stimmt jetzt die Uhrzeit wenigstens? Nee, immer noch
verkehrt. Okay, wunderbar. Nee, ATX nicht schon vorbestellt. Ich bestell mir wenn überhaupt eine
3090. So, wo bin ich jetzt stehen geblieben? Genau, also das ist das Beispiel hierfür, für die
eingebauten SSL-Dinger vom ESP32. Und wir bauen einfach mal das nach, das Example und gucken,
gucken wie weit wir kommen. Also, müssen wir mal gucken, ob wir irgendwas aufräumen müssen, aber ich
glaube das passt. So, also wie fangen wir das am besten an? Wir machen hier ein neues File. Das nennen wir... Wie nennen wir das?
Ich hab doch gerade gesagt, das wird ein Mini-Webserver. Da nennen wir das Ding Mini-Surfer-Punkt. Top. So, und da brauchen wir eine
Klasse drin. Wir machen das mal in der C++-Way. Da brauchen wir eine Klasse drin. Vielleicht soll ich
es nicht... Vielleicht soll ich einfach erst mal ganz billig das Example nachbauen und gucken, ob
es funktioniert, bevor ich da irgendeine Klasse draus baue. Wollen wir gleich hier uns die volle
C++-Objektorientierungsladung geben oder wollen wir erst mal das das Example nachbauen, so wie es
hier drin steht? Nee, komm, wir geben, wir machen das gleich richtig. Easy. Gar kein Problem. Alles klar.
Wie gesagt, ich habe es mir im Vorfeld schon ein bisschen angeguckt. Also, ich weiß, dass dieses
Example funktioniert. Das habe ich schon ausprobiert. Das geht. Also, prinzipiell, prinzipiell geht
das. Muss ich das jetzt nicht nochmal machen. So, also, wenn wir uns... Also, das ist übrigens auch so ein
komisches C++-Feature, was ich sehr merkwürdig finde. Warum, vielleicht hat da einer von euch
irgendeine Erklärung zu, warum kann ich sowas hier machen? Also, das ist ja die Vermischung von
allem Möglichen. Also, das hier legt die Klasse Minisurf an und das hier legt im gleichen Zuge
eine globale Variable vom Typ Minisurf an, die Minisurf heißt. Was heißt, ich habe hier eine
Instanz von der Minisurf-Klasse unter Minisurf. Also, das muss ich erst mal importieren. Warum
geht sowas überhaupt? Wo ist der Sinn davon? Das leuchtet mir nämlich überhaupt nicht ein.
Wo machen wir denn mal den Include hin? Also, ich meine, wozu ist das gut? Das checke ich null.
Eigentlich sollte ich jetzt was haben. Ach so, dann soll ich vielleicht mal... Vielleicht muss
ich es anders schreiben. Ah, da ist er. Also, den Sinn verstehe ich nicht davon, weil ich könnte
auch einfach... Geht mit Structon Union in C auch? Ja, aber ich verstehe gerade hier den Sinn von nicht.
Ehrlich gesagt. Aber da bin ich wahrscheinlich zu low-prane, weil ich könnte genauso gut danach
hingehen und sagen... So, ist genau das gleiche, aber viel klarer getrennt, was was ist. Also,
wo ist da jetzt der Unterschied? Also, warum brauche ich das überhaupt? Aber wahrscheinlich
checke ich es nicht. So, und falls es für den Fall sein sollte, dass ich keine Klasse mehr von
diesem Typ anlegen können darf, ja, dann kann ich das aber auch anders machen. Das kann ich in den
Constructor Private machen und mache mir eine Public Create Methode oder sowas, was ich viel
sauberer finde, als irgendwie Klassendeklaration und das Initialisieren das irgendwie so komisch
zu vermischen. Aber war es nicht. Da war es nicht, genau. Übrigens eine Sache müssen wir machen,
weil das uns mega rumspackt. Ich muss das inline machen, weil ich habe eine Sache gelernt in meiner
letzten Zeit, wo ich mich mit C++ beschäftigt habe, ist entweder man ist ultra pingelig zwischen
der Trennung zwischen Header und C++-File oder wenn einem das auf den Keks geht, dass man im Jahr
2020 noch sowas wie Header und C++-File überhaupt trennen muss, kann man einfach alles in Header
schreiben. Dann muss man aber davor schreiben inline, weil er ansonst Fehler schmeißt,
dass das Duplicate Definition und alles geht kaputt. Sonst, ja. Na gut, das kann ich jetzt nicht so
nennen, weil das gibt es ja schon. Ist ja auch egal. Also wunderbar. Haben wir den jetzt. Gut. Also
was braucht so ein Web Server als Public Methode? Verwende einfach einen Header Guard. Funktioniert
nicht. Funktioniert nicht. Muss ich auch lernen. Also man kann sowas hier machen. Funktioniert
nicht. Funktioniert nur, solange die Dateien zusammen kompiliert werden. Also zum Beispiel,
wenn ich jetzt hier eine lib habe, da eine lib und da mein Mainprogramm und ich inklude jetzt quasi
das hier und das hier, dann sagt der Duplicate Definition, egal ob man sagt, Header nur einmal
oder nicht. Ja, genau. Die ganzen Libraries, die komplett im Header-File sind, die verwenden
alle inline. Der einzige Fall, den ich jetzt gefunden habe, wo man das nicht machen kann,
ist, wenn man Sachen verstecken will. Also wenn man beispielsweise hier was inkluden will,
was man nicht in Main inkluden will. Weil ansonsten ist ja, ist ja, das quasi, geht inklud komplett
durch. Also wenn ich hier was inklude und dieses dann hier inklude, inklude, dann das, was ich hier
inklude, auch noch da rein. Warum schreibst du eigentlich C++? Ja, weil es nicht anders geht.
Du musst, für den ESP32 gibt es nur C++ als Variante. Du hast noch, noch die theoretische
Möglichkeit. Also es gibt noch weitere Varianten, wenn man es unbedingt will. Du kannst den ESP32
in Micro-Python programmieren. Da hat das halt aber ganz andere Probleme. In Lua, dafür gibt es kaum
was. Es gibt eine Rust, eine Rust Preview-Build, was auch nicht richtig funktioniert und es gibt
sogar eine.NET-Implementierung, die auf dem ESP32 funktioniert. Dafür gibt es aber auch kaum
Libraries. Also die einzig sinnvolle Variante ist halt leider, dass man das in C++ programmiert.
Ja, C++ 20 mit Modules könnte die erste Version werden, die halbwegs benutzbar wird. Wobei ich
letzten schon wieder gesehen habe, dass sie Sachen, die andere Sprachen seit 15 Jahren haben und die
sehr sinnvoll wären für C++ schon wieder nicht machen werden oder vielleicht nicht machen werden
oder sowas. Es gibt zum Beispiel für C++, also ich muss es sagen, es gibt in C-Sharp, das war
einer der ersten Sprachen, die glaube ich sowas hatte. Also der einen der größeren objektorientierten
Sprachen, die sowas hatte, war, hatte die Möglichkeit, dass man Klassen erweitert, ohne dass man sie
vererbt. Also zum Beispiel, wenn ich jetzt hier einen Arduino-String anlege. So und das Ding hat
halt nur eine gewisse Anzahl an Methoden, was man damit machen kann. So und sagen wir mal, ich möchte
jetzt neben diesen toChar, toDouble, toInt, toFloat noch ein toCuteChat haben. Und ich kann die Klasse
nicht erweitern, das funktioniert nicht. Das einzige, was ich machen kann ist, ich kann die Klasse erben
und eine neue Klasse bauen, wo ich dann toCuteChat bastele. So in C-Sharp gibt es sowas wie
Extension-Methods. Das heißt, ich kann statisch was programmieren, was dann hier als Erweiterung
angezeigt wird, ohne dass ich eine Subklasse ableiten muss. Das ist für kleine Sachen wie
beispielsweise StringExtension, ist das unglaublich praktisch und sorgt dafür, dass man viel weniger
Klassen braucht und viel weniger, wir war, wo was ist. Und das wollten sie in C++, glaub für, das
gibt es seit 2014, wollten sie das einbauen, immer wieder in den nächsten C++-Standard und
haben es noch nie geschafft. Und jetzt sind sie schon wieder am überlegen, soll das denn in C++20
rein? Ich weiß nicht so genau. Die tun sich da selbst das Leben schwer machen, zumal die
C++-Standard-Library eh schon einfach nur, wie soll man das beschreiben, irgendwie wir ist.
Mal wollen sie es so, mal wollen sie es so. Also C++ halt. Also was wir brauchen ist für
den Web-Server, erstmal brauchen wir sowas wie Start. Wir machen das in eigenes C++-File. Wir
sind mal so nett. Void, Start. So, damit er das noch richtig schreiben könnte. So, da braucht man
sowas wie einen Port. 8, ne Moment, wie heißt das Ding nochmal? Int 8, uint 8, uint, ne 16 brauchen wir,
uint. Warum ist das nicht drinnen? Was muss ich da importen für? Was muss man da importen,
dass es erstmal Arduino-Include, das brauchen wir eh, kommen wir eh nicht drum herum. Uint 16 haben
wir es doch, oder? Uint 8 haben wir, haben wir auch 16, Port. Ja, ich habe meine Zweifel,
dass Modules und so richtig funktionieren werden in C++, weil eigentlich fast nichts in C++ so
funktioniert, wie man es erwartet. Das ist ja grad der Witz. Die haben relativ viel eingebaut auch
die letzten Jahre, aber es ist einfach so wir und an jeder Stelle anders, dass man nicht durchblickt.
Tuhappen, kennt ihr Happen? Happen, das war früher so ein Eis. Riesenhappen. Heißt heute Big Sandwich. Weiß nicht, wie ich da grad drauf komm. So, also, Tuhappen fragt, hey, wenn ich nach
circa 200 Stunden Java-Programmier irgendwie die Lustmotivation verloren habe, willst du sagen, das ist nichts für mich? Das ist kein Wunder, das ist ja auch Java. Es kommt drauf an, was sich da dran nervt. Wenn es Java ist, probier mal eine andere Programmiersprache. Probier mal was ordentliches. Wenn du was ähnliches wie Java willst, probier mal.NET Core. Ich finde.NET Core viel angenehmer an den meisten Stellen. Oder
aber wenn es dir gar nichts ist und du was Dynamisches angucken willst, guck dir mal vielleicht sogar Frontend Sachen mit JavaScript, HTML, CSS, JavaScript an. Wenn du visuell was sehen möchtest, was passiert. Generell finde ich zum Einstieg die Kombination JavaScript, HTML, CSS mittlerweile fast das Beste. Die Frage kommt ja fast jedes Mal. Was ich empfehlen würde zum Einstieg und ich sag dann immer, wenn du das machen willst, dem das, wenn du Windows Desktop
Wenn du das desktop machen willst mit das ich mittlerweile muss ich fast sagen ich habe da meine ich habe da meine meinung ein bisschen geändert
Ich denke dass das beste zum einstieg tatsächlich mittlerweile css html javascript ist weil man kommt eh nicht dran vorbei
Egal ob du später frontend sachen machst oder backendsachen oder sonst was
bisschen html javascript css was anderes
kannst du kommst nie dran vorbei ein bisschen was musst du damit immer machen, ein bisschen dich mit auskennen
Und zum einstieg ist es halt ganz cool weil du siehst was passiert
Wenn man mit irgendwelchen kommando zeilen tool oder sonst was anfängt dann ist das so unspektakulär
Ja, aber wenn man eine webseite macht wo dann auch dynamisch was passiert wo sich dann vielleicht
auch
Irgendwie was reagiert wenn ich was anklick und so dann ist das
Taubisch motivierender für den einsteiger als wenn er sich irgendwelche kommando zeilen dinge anguckt. Ja
Okay also das brauchen wir brauchen einen port und ich habe gedacht wir sind mal wir sind mal ganz ganz mutig
Wir sind ganz mutig und implementieren auch noch basic auth. Ich habe basic auth noch nie implementiert ich weiß nicht wie das funktioniert
Ich weiß es theoretisch
Ich weiß dass basic
Authifizierung im browser das ist quasi username passwort base 64 encoded das ist big brain
kryptographie wobei soll ja gar nicht gar nicht
verschlüsselt sein also basic auth müssen wir eigentlich müssten wir eigentlich hinkriegen wenn der rest funktioniert basic auth
Steht ein header drinne im request und der ist base 64 encoded username passwort also
Ja, deswegen auch übrigens wichtig dass man das über hattet tps macht
So dann brauchen wir noch ein paar variablen nämlich halt mein passwort und mein
user und mein
Port ne port brauchen wir nicht gut und jetzt schauen wir mal das ist eine sache die mache ich fast nie
Jetzt machen wir nämlich ein c++ file weil ich habe im vorfeld schon rausbekommen
Ja, du hast recht herving jetzt ja ich habe sie auch schon gesagt das hat ja mit verschlüsselung eigentlich gar nichts zu tun
Ich habe nämlich im vorfeld schon rausbekommen
Wir kommen rein mit header only nicht hin denn wir müssten hier dieses ganze
Tls zeug inkluden und wenn man das tls zeug inkludet geht das wlan in main kaputt
weil das irgendwelche sachen umdefiniert
Was halt was wir hier machen
Das heißt dadurch dass ich hier das inkluder und ich hier tls zeug inkluder
inkluder der ja das hier und hier an der stelle dann auch das tls zeug und dadurch dass das tls zeug
Inkludet wird bevor ich mein wi-fi anlege die zweifel geht es wlan kaputt
Hat man das jetzt verstanden
Also wenn ich irgendwelche header importiere die was mit
Netzwerksachen zu tun haben bevor ich wlan starte geht es wlan kaputt
Deswegen muss ich dafür sorgen dass das hier nicht inkludet wird
Das ist halt fail ja so und die einzige variante wie man das machen kann soweit ich rausbekommen habe ist
Man muss einen c++ feil anlegen was genauso heißt wie das hier und dann versteckt er alles was man z++ feil macht vor dem rest
Ist halt ein bisschen doof wenn man halt eine sprache hat die keine ordentlichen exports module oder irgendwas hat wo sowas standardmäßig schon geht und wo man sich
auch mit header und irgendwelche c++ feils rum ärgern muss also mal sowas hier das habe ich noch nie gemacht ich muss mal gucken ob das
funktioniert so
Und wie und wie geht das jetzt sage ich jetzt hier inklud
Header so und dann legt man. Moment wie ging das so, ne?
Jetzt muss man nämlich den ganzen kram noch mal schreiben
Allerdings dann nicht mit einer class dazwischen weil weil weil
So ging das so und jetzt bilden wir das ganze mal gucken ob es funktioniert
Okay, er muss erst mal wieder das ganze ding neu bilden mach mal du programmierst eine lennungsform korrekt wenn dich die config interessiert
Leider nicht auf einem ganz aktuellen stand ich muss mal wieder poschen ich habe so die mini config habe ich mal hier auf github hochgeladen
Und jetzt muss ich das ganze mal wieder ausprobieren
Und jetzt muss ich das ganze mal wieder ausprobieren
Und jetzt muss man wieder poschen ich habe so eine mini config habe ich mal hier auf github hochgeladen
Kannst du die config angucken und da muss ich habe ja mein notebook auf der arbeit neu installiert
Vor ein paar tagen und da habe ich genau die gleiche config hier verwendet und ich war begeistert wie gut das funktioniert einfach config also
Ich verwende das hierfür
Also das ist ein config manager config file manager
Das kann ich vielleicht mal im stream zeigen aber nicht jetzt
Da sagt man einfach nur mit diesem config manager clone dieses repo und verlinkt mir die ganzen dateien
Und dann legt er dir dann klont er das repo verlinkt alle dateien an die richtigen stelle wo sie sein müssen und ich habe mein notebook
neu gemacht
Mein mein mein config file repo geklont und ein paar pakete nachinstalliert und instant war mein war mein notebook auf der arbeit
Exakt so eingerichtet wie die vm daheim richtig gut
To happen das ist kein problem du musst du musst das nicht studiert haben
Also ich habe den kram auch nicht studiert ich habe den kram mal ich habe eine ausbildung gemacht vor uhrzeiten
Aber das wichtigste ehrlich gesagt ist dass man sich dafür interessiert
Und wenn man sich für einen bereich interessiert wird man auch immer besser in diesem bereich und umso besser man in einem bereich ist
umso größer sind die chancen dass man in diesem bereich auch arbeiten kann und umso besser wird man wieder also es hat
schon seine vorteile
wenn man
Da hartnäckig halt ist bei einer sache die einen interessiert
Es können die unterschiedlichsten dinger sein also ist man es muss nicht jeder
javascript css html mögen es muss auch nicht jeder
java zeug mögen nicht jeder pyson ai gedöns mögen
oder
irgendwelche dotnet geschichten und sonst was es hat jeder es hat jeder ganz unterschiedliche sachen
Manch einer mag vielleicht irgendwelche datenbank design
Geschichten ja manch einer mag halt vielleicht bisschen mehr die design
Ecke also es gibt ja da 1000 1000 richtung was man machen kann
Und wenn man das kann wird man gebraucht
Ja es gibt leute mögen die mögen fort ran ja es gibt auch leute mögen kobold
Bei mir hat einer eine ausbildung gemacht die hat ist jetzt im bereich
IBM großrechner und macht kobold im jahr 2020 muss man sich mal vorstellen aber die fand das toll
Wir müssen mal anfangen sonst wird das ganze nix
Also wo haben wir hier das Beispiel was was für was für headers brauchen wir denn das hier
Alles mal inkluden alles mal inkluden so und das problem ist jetzt wenn ich das hier hier inklude ich zeige es euch einfach mal
dass ihr mir das auch glaubt wenn ich das hier hier inklude an der stelle
und hochlade auf den esp dann geht mein wlan nicht mehr werdet ihr gleich werdet ihr gleich sehen
Und selbst wenn es geht ich weiß dass es später nicht geht weil ich habe schon ausprobiert
Huge upload massiv zum glück muss man das nicht so oft machen
Wie wechselst du die
Ja
Es hat funktioniert das wlan geht
Aber das liegt bestimmt auch daran weil ich hier nicht drauf zu arbeiten bin ich hier nicht drauf zu arbeiten
Aber das liegt bestimmt auch daran weil ich hier nicht drauf zugreife ich habe es ich habe es ausprobiert im vorfeld und es ging nicht
Es ging es ging nicht
Deswegen mache ich das jetzt mal mache ich das jetzt hier mal wirklich mal weiter weil ich weiß als früher noch spielen wir machen
Einfach mal weiter wir machen hier einfach mal so weiter wenn es kaputt geht kann ich es ja immer noch kann ich sie immer noch ändern
Hier übrigens das ist eine gute frage vom
Wo ist es denn
Genau das hier was das der plops thrusher geschrieben hat also
Es gibt wirklich so viele bereiche wo man was machen kann also mal grundsätzlich gesagt
Alles das was ich jetzt aufgezählt habe war ja eigentlich nur
unter unter
Punkte es gibt ja noch komplett andere bereiche zum beispiel
Das was ich war was wir jetzt hier machen fällt ja schon so ein bisschen in den embedded bereich also irgendwelche
microcontroller und und und kleinst
Dinger ja das ist noch mal ein ganz anderer bereich für sich dann gibt es irgendwelche industriesteuerungs
Sachen und es gibt so viele bereiche und so viele unterschiedliche
Gebiete also man findet da was was einem gefällt sofern man sich dafür interessiert und bei mir ist es so
Ich habe gemerkt ich mag das halt nicht so wenn ich am stück immer die gleichen sachen macht zum beispiel
Wenn ich in einem monat an einem programm rumbasteln
Da habe ich dann irgendwann kein bock mehr drauf und wenn ich da noch mal einen monat weiter dran rumbasteln dann fasse ich es nie wieder an
Das ist halt doof deswegen habe ich immer so zwei drei sachen wo ich dran rumbasteln kann also sprich wenn mir jetzt hier dieses microcontroller
ESP 32 C++ gebastelt auf dem keks geht dann bastel ich weiter an meiner
webcam nicht webcam
nicht webcam
security cam
sicherheits- also überwachungskamera
browser
übersicht
also meine meine sicherheitskamera
streaming sache mit go so und das sind dann zwei komplett unterschiedliche sachen das hier ist jetzt reines ekliges
abartiges c++ und das andere ist eine mischung aus go und c-sharp
Hast du dir eigentlich eine neue cam bestellt ja genau die gleiche wie das letzte mal und ich hoffe die geht jetzt nicht kaputt weil ich hab es bei amazon umgetauscht
Wie wechselst du den desktop ohne die vm erst detaching zum ich detach ich detach nur schlafen
Guck ich klicke ich sache control alt und direkt danach control mit windows links
Und dann wieder rechts und reinklicken ich detach ich detach nur schnell
Ich habe mir den makro gebaut für die für die für die maus hier kann man kann sie dir gut mit der logitech software mit irgendwas anderem bauen
Das ist ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen ein bisschen
Ich waiting for you
den seitentasten der maus das machen kannst ja angular hör wegen angular ist ja auch zum
kotzen angular ist so ein overengineertes enterprise ding damit bin ich nie ich will
nicht sagen das schlecht ist aber damit bin ich nie warm geworden und dann bin ich eigentlich
schon am start eine stunde wir haben noch erst noch keine zeile richtig programmiert
exzellent so wie immer also so so wir legen jetzt hier mal an dass das nicht nicht kaputt
geht wo ist mein set-up wo ist mein set-up hier ist mein set-up so start start port 4433 user
exzellent admin password 123456 so highly secure und nur hier gesehenes passwort verwendet sonst
keiner sondern implement jetzt fangen wir mal an also gucken wir uns mal das beispiel an den
kram haben wir included http response das ist so wer es noch nicht gesehen hat so sieht eine
webseite aus wenn man die abruft im klartext logitech lure ja das ist leider lure aber man
kann das auch mit diesem makro editor machen man muss das nicht direkt in lure machen so
so sieht eine webseite eine billige webseite aus wenn man sie per http geschickt kriegt das
ist die antwort http status code 1 0 ok und dann gibt es content type text html und jede
http requests ne nicht ja request auch und response auch die einzelnen sachen enden immer mit einem
carriage return new line carriage return new line immer diese zwei sachen hintereinander
so und das hier ist im prinzip des http was man dann zurück zurückgeliefert kriegt welche
programmiersprache würdest du empfehlen wenn man anfangen will gut dass du fragst weil das hab
ich vor fünf minuten beantwortet deswegen kann ich jetzt noch mal ganz kurz wiederholen ich
war früher der meinung man muss sich erstmal überlegen was für ein gebiet einem gefällt
und habe ich die leute immer gefragt so was meinst du was was ist so die richtung was dir gefällt
und dann habe ich den leuten was empfohlen mittlerweile bin ich andere ansicht das beste
zum einsteigen ist wenn man nicht schon ganz konkrete vorstellungen hat was man machen will
ja also wenn du jetzt wenn du jetzt sagst hey ich würde gerne irgendwelche microcontroller
programmieren oder ich würde gerne windows desktop software machen oder oder was auch immer also
wenn du noch keine genauen vorstellungen hast dann ist das beste meiner meinung nach aktuell
man fängt mit dem standard gespannt aus javascript html und css an einfach weil man sieht was
passiert und weil man an frontend geschiss geschiss ähnlich vorbeikommt also ein bisschen html
javascript css muss man immer machen immer guck mal ich bastel ich versuche in den webserver zu
basteln der statisches html ausliefert so das muss das das html muss doch aber irgendwas machen
dass im endeffekt ein bisschen html ein bisschen javascript da drin dass die seite dann funktioniert
die übrigens nicht in line hier in mein c++ dokument schreiben würde brauchst du dann wieder
also du kommst im prinzip nicht drum herum deswegen bin ich der man das beste was man machen kann
erst mal zum einstieg ist javascript html css so also fangen wir mal an dieses beispiel habe das
habe ich das habe ich ausprobiert das funktioniert so start also ich kopiere mir das gerade mal wir
schmeißen mal raus was wir nicht brauchen so also komischer name für den ssl sauber brauchen wir
schon mal netz moment mach mal kurz auf der anderen seite was auf dass ich das im zweiten
monitor abgucken kann da muss ich nicht muss ich nicht ganz so viel hin und her switchen
wo ist es ok so genau also müssen das ganze starten als erstes müssen wir noch sagen dass
ups soll das passwort was hier übergeben wird speichern wir hier oben in passwort drinne und
der user der hier übergeben wird speichern wenn user dass man das später basic aus mit machen
können und dann legen wir mal unseren server an also net context listen kleine das werden
wir wahrscheinlich brauchen wobei ich tue jetzt mal nicht so als hätte ich keine ahnung wie gesagt
ich habe das schon ein bisschen ausprobiert dass die klein geschichte brauchen wir nicht und den
kram können wir auch wegschmeißen so also was das hier macht nur mal so kurz kurz kurz zur erklärung
ember tls ist eine tls oder ssl https wie auch immer man es nennen mag implementierung für
microcontroller also für so krams ihr kennt wahrscheinlich eher open ssl open ssl ist die
fette variante die so ziemlich 90 prozent allen verschlüsselten traffic im internet abhandelt
das ist so der standard schlechthin gibt es ein paar forks von was gibt es in der open ssl libre
ssl und und free ssl und und alle möglichen dinger die haben sich ja wieder geforkt bis zum
gegner gegabelt bis bis zum geht nicht mehr zumindest open ssl ist eigentlich so mit mit
das bekannteste also sprich wenn ihr irgendwelche software verwendet die https verwendet da ist
garantiert das meister open ssl von ich bin mir gar nicht sicher was microsoft macht microsoft
unter windows wahrscheinlich was eigenes allerdings auf webserver seite also sprich wenn ihr was
abruft ist das zu 90 prozent wenn ich wenn nicht sogar zu 95 prozent open ssl und ember tls ist
quasi so was ähnliches wie open ssl bloß ein bisschen ressourcen sparen dafür hier kleine
kleine microcontroller und deswegen müssen wir das ganze tls zeug importieren dass das funktioniert
so was man jetzt machen muss ist die initialisierung ist ein bisschen eklig deswegen copy paste sich
jetzt auch zum größten teil das beispiel und gut ist man muss hier irgendwie kontexte anlegen man
muss hier irgendwie gedürft muss muss jetzt eigentlich nicht sonderlich großartig interessieren
weil ich habe es im vorfeld schon ausprobiert dass alles richtig so und das klappt ich habe
nämlich im vorfeld schon ein bisschen gebastelt und hat mir grad auf dem zweiten bildschirm das
beispiel aufgemacht was ich schon ein bisschen gebastelt habe da muss ich jetzt nicht komplett
planlos hier rum tippen übrigens eine sache die mir gerade auffällt das will ich gar nicht so
nämlich konfig setting ich will tabs ich will zwei tabs nicht vier editor tabs zwei ja spaces
wie sage ich dem jetzt dass er reformatet dass er die spaces neu einrückt wie sage ich ihm das
denn jetzt einfach mal zumachen
vier spaces ja wie sage ich ihm jetzt dass ich zwei spaces haben will er können vier spaces das
ist wie das code ja ich will zwei spaces ich habe es doch jetzt auch schon eingestellt aber
ein tab size lull ich habe das falsche in dem moment jedoch doch richtig indent
was rechts unten habe ich doch gerade schon jaja aber ich stelle ich das um aber ich stelle ich
das um wie reformat ich das format
was klickt dort auf using spaces ah ja ok easy das hätte ich jetzt ewig gesucht
mich das gefunden hätte ok wie gesagt ich tippe das jetzt aus meinem eigenen gebastelten
beispiel ein bisschen ab übrigens wir können an der stelle hier ein neues c++ feature verwenden
was wieder auf die absolut und also abwegigste art und weise überhaupt implementiert wurde
nämlich man kann jetzt das hier machen das ist neu sei glaube c++ 14 oder so wenn man also ok ich
flame jetzt nicht c++ warum sie das so gemacht haben ja aber was das macht ist folgendes wenn
man hier einen parameter übergibt und man den parameter nirgendswoanders mehr verwendet dann
man das in tabs und wenn man den parameter nirgendswoanders verwendet dann kann man dem kann
man hiermit quasi dem keine ahnung wie es unter der haupe fung ich sage jetzt mal dem compiler
sagen dass er quasi den diesen diese variable hier nicht kopieren muss von da nach da sondern
quasi einfach umlinken kann intern quasi verschieben kann also sprich weil ich weiß dass es hier unten
nicht mehr verwendet wird kann ich einfach sagen anstatt dass du jetzt user von hier nach user hier
oben kopierst kannst du einfach quasi das den speicherbereich umlinken du kannst einfach das
user da drauf zeigen lassen ja exakt aber vor allem warum denn so standard move rast macht das
übrigens auch so allerdings nicht mit standard move rast hat quasi das eingebaut dass man solche
sachen hier machen kann und dann ist das relativ offensichtlich wie man es benutzen muss das
benutzt man hat immer gleich und hier haben sie sich gedacht ach nee wir bauen irgendwie im
standard namesprays so eine magic methode ein die das macht typisch zippen moment leute
muss man kurz time on so weiter geht's also das ist jetzt angeblich viel mehr und krassere
performance und so nicht dass wir das bräuchten aber das ist jetzt ein neues plus plus feature
also können wir es mal verwenden gut weiter geht's was wir jetzt brauchen ist einmal einen
mbeth tls net context das ist quasi der port an dem der server später lauscht wenn man so will
was wird hier gebastelt ein webserver also ein ssl fähiger webserver der auf dem esp 32 läuft
und alle esp 32 kerne verwendet also quasi maximal vier threats weil dann der ram all ist mit ssl
oder 5 5 maximal fünf verbindungen gleichzeitig habe ich ausprobiert vorhin schafft er weil
dann ist der ram all ssl braucht halt ein bisschen mehr speicher als normales htp ja 14 die die
uhrzeit ist falsch der ntp server macht komische dinger und meine zeitzone settings sind fail
vielleicht ist es aber einfach nur ein re broadcast um an ich habe einfach nur chat
overlayt man weiß es nicht man weiß es nicht also das hier ist quasi der port an dem der
server lauscht also quasi bei uns viel für drei so das legen wir jetzt an dann muss man sagen
mbeth tls net init und dann muss man den kram übergeben weil weil c und c++ so und nachdem
wir den kram nicht also diese variable hier nicht nur einmal brauchen sondern die komplette
zeit während wir den server laufen haben kopieren wir die mal hier weg und kopieren die in die klasse
rein nämlich da ober hin da kopieren wir das jetzt aber funktioniert das nämlich auch
und jetzt können wir gucken dass das ding an dem port lauscht da kommen jetzt mbeth tls ssl
konfig init und damit das funktioniert müssen wir jetzt erstmal eine standard konfig also
erstmal konfig anlesen wie er die also was er alles einstellen soll an dem system das muss
jetzt mal kurz abgucken copy paste mir das jetzt nämlich einfach copy paste mir das jetzt einfach
da muss ich den kram nämlich nicht nochmal tippen so den ganzen miss brauchen wir jetzt
klein so also wir müssen ssl konfig anlegen ups wenn ich das so richtig machen würde
da können wir dann später so sachen konfigurieren wie welcher timeout bei connections und sowas in
der richtung also sprich ab wann bricht der connections ab wenn keine daten mehr kommen
und sowas ist ganz nützlich weil ich glaube das standard also nagelt mich jetzt nicht drauf fest
ich bin mir da jetzt nicht ganz sicher also wie gesagt nagelt mich nicht drauf fest ich
glaube standard htm standard ttp timeout sind glaube ich fünf minuten oder 15 minuten ehrlich
gesagt weiß ich aus dem kopf was ok request nach 30 minuten was ist was ist die fault fünf
minuten zumindest zu lang zumindest zu lang weil wie gesagt das ding hat nicht viel ram ich glaube
ich glaube man hat ungefähr mich nicht 80 gigabyte oder so zur verfügung und
ach moment ich verwechsel das gerade der pc der tcp timeout ist fünf minuten hatte tp keine ahnung
ehrlich gesagt ist auch wurscht bei man hat hier nicht so viel ram das heißt jede connection die
offen ist ist eine connection zu viel also jede connection die offen ist und 80 80 kilobyte nicht
80 gigabyte 80 gigabyte wäre poggers da hätten sie neue ram chips hier der 80 gigabyte ram chip
ist hier seht ihr eindeutig 80 kilobyte 80 kilobyte ram meistens zur verfügung das heißt jede
connection die offen ist und nichts macht ist eine connection zu viel also jetzt müssen wir
dem erstmal sagen an welchem port er lauschen soll ich copy paste übrigens mal den anderen
kram ja auch das ist einfacher da müssen wir uns das nicht angucken das ist initialisierungs kram
der legt hier speicherplatz an wo man ein zertifikat drin speichern kann dann wo man
ein private key drin speichern kann dann irgendwelche random generator und sowas ich
habe keine ahnung was es genau macht ich weiß nur dass es funktioniert und man muss es machen
weil wenn man es nicht macht dann funktioniert es nicht so und was wir auch noch brauchen ist
wir müssen den key einlesen und wie ihr seht ich habe hier einen zertifikat und einen private key
den müssen wir einlesen weil den brauchen wir jetzt denn irgendwie muss der server ja
https ssl verschlüsselung machen dazu brauchst du ein zertifikat und dazu brauchst du private key
dass das ganze funktioniert ja deswegen sagen wir wir brauchen noch wir brauchen noch ein paar
variablen für unsere keys und da machen wir sowas wie ein standard vector wir sind ja hier in c++
uint alter komm visual studio code gibt alles brauchen das so lang übrigens ich wollte mal
in nächster zeit sea lion ausprobieren können wir eigentlich auch mal im stream angucken weil
das chat brains zeug ist ziemlich gut also alles was ich bisher verwendet habe go land ist top
rider für dort net ist top ich muss sagen pp web storm habe ich nicht so viel mit gemacht hat
mir jetzt nicht so extrem gut gefallen aber pie charm ist ziemlich gut und ruby mein war früher
auch ziemlich gut also die machen die machen wirklich gutes teuer und die haben jetzt seit
einer weile was schon ein bisschen her auch eine c++ ide und ich finde die c++ unterstützung in
visual studio code sehr hakelig das funktioniert aber ihr seht es ist teilweise richtig langsam
kommt man hier ich habe hier grad uint also das ist das ist nicht so nicht so snappy oder so wie
man das auch immer nennen mag ja also wir brauchen wir brauchen speicher für unseren key und wir
brauchen speicher für unser unser zertifikat so weil ohne funktioniert das ganze tls ssl zeug
nicht das müssen wir jetzt einlesen da können wir einen von meinen big brain helper methoden
verwenden nämlich read file from spiff normalerweise macht man das so open ich kann ich kann
euch einfach die metode sein dass man sieht was er unter der haufe macht ignoriert man dass es
irgendwelche templates in ignoriert man dieses eklig zeug hier unten drunter das habe ich nur
gemacht weil c++ wieder nicht das macht was ich gerne hätte normalerweise ist so öffnet man
dateien vom flash vom flash speicher vom esp 32 flash speicher ich weiß dass es seit gestern oder
vorgestern c++ 1.0 ist in visual studio code allerdings die also die c++ extension besser
geworden ist dadurch auch nicht so macht man das normalerweise also sprich man sagt spiff
open dann gibt man ein fad an also zum beispiel sowas hier slash index html haben wir hier auch
nie haben wir gar nicht drin sowas hier zum beispiel zert spips fader fangen wir mit
dem slash an so ein bisschen linux unix style dann kriegt man die filesize dann braucht man
den buffer liest das ein schließt das feil wieder so das gedacht zu verwenden der rückt
dinger komisch ein für mich meinetwegen solange ich wieder kaputt geht und ich habe versucht ich
muss das ist das erste mal dass ich jetzt gucken kann ob das funktioniert weil ich habe da vorher
noch ein bisschen drum gebastelt ich habe gedacht ich bin jetzt mal ganz besonders massive brain und
zwar ich habe mir versucht ein template zu bauen was folgendes macht das ist wieder typische
c++ eigenheit das geht sonst in keiner anderen sprache aber keine anderen sprache braucht man
das auch jeder fad ist immer ist immer slash und dann dateiname also slash so hat der man kann
man ordner hat wenn man den ordner hat ist es slash ordner name slash sonst was ich habe hier
folgendes probiert deswegen sieht das auch so eklig mit template aus ich wollte wenn man
übrigens das können wir wegschmeißen da hinten das war habe ich ausprobiert wenn man das das
ist jetzt wieder c++ deluxe also wenn man sagt man möchte die datein als bytes haben dann macht
er einen vector mit bytes wenn man sagt man möchte die datei einlesen als arduino string dann gibt
er dann arduino string zurück und wenn man sagt man möchte ihn als c++ string haben dann gibt
er c++ string zurück dass das als template überhaupt funktioniert ist an sich schon mal wir
komplett unverständlich warum das funktioniert also ich weiß dass es wie man es machen muss in c plus
es ergibt für mich nur keinen sinn warum das geht weil hier gebe ich ein vector typ zurück und hier
gebe ich ein einfacher also hier gibt es ein container zurück mit elementen drinne und hier
gebe ich quasi ein objekt zurück warum ich quasi warum das warum das so ein takt also keine ahnung
warum das geht aber es funktioniert jetzt kann ich nämlich sowas einlesen und jetzt es kommt der
moment der wahre ob das funktioniert was ich da programmiert habe also wir lesen jetzt mal meinen
den da ein sort punkt der lesen wir ein und key punkt der und was er jetzt einliest ist ein ich
krieg einen weg also quasi in den array zurück mit den einzelnen bytes also quasi in den array mit
den mit den vector mit den bytes von dieser datei der zertifikat ist nie müde der key ist auch immer
von dem chef im büro so und jetzt können wir das ganze um reinschreiben also key buffer ob es
falsch rum key buffer gleich das und sort buffer ist das also alles was wir jetzt gemacht haben ist
das zertifikat vom flash lesen und in sort buffer schreiben und den key einlesen vom flash und in
key buffer schreiben der key encrypted immer schweißfrei der ist gut so weiter weiter im
text jetzt können wir nämlich gucken ob der server an sich tut jetzt den key also die wichtigsten
sachen haben wir jetzt wir haben komisches ssl zeug initialisiert wir haben key private key und
zertifikat eingelesen als nächstes können wir folgendes machen kann ich mir auch copy pasten aus
meinem test so als nächstes können wir folgendes machen wir müssen jetzt nämlich gucken ob das
zertifikat gültig ist heute cold war ich habe kein beta key ich habe mich auch null drum gekümmert
und beta key ich habe das auch überhaupt nicht verfolgt die letzten tage ich habe zehn tage am
stück jetzt gearbeitet ich habe nichts mitgekriegt was das angeht ist echt ist open alpha jetzt
excellent geht es auf dem pc pc auf ps4 only was ist dann hier sony was ist denn hier los
ne ps4 spiele nicht ganz ehrlich ich kann mit dem ps4 controller nicht umgehe ich kriege es
nicht gebacken ich bin schon mit dem xbox controller komplett außer übung aber wenn ich am ps4 oder
wisst ihr was ich machen kann ich kann meinen cheat auspacken ich habe ja so ein so ein maus zu den
verwende ich normalerweise nicht weil es im prinzip einfach cheating ist ja aber ich habe so einen
so einen konverter so ein maus maus zu tastatur konverter den könnte ich verwenden ob man mit
visual studio code auf remod mit ssr beim kunde arbeiten kann ja klar du kannst ramedes ich zeige
dir mal was falls du das nicht schon kennst was für dich sehr praktisch sein könnte und zwar
ich muss mal eine ssh server starten dass ich das zeigen kann so ich starte mal kurz den ssh server
stmctl start sshd ich weiß gar nicht ob ich jetzt sehne habe ich ok also ssh local host yes alles
klar also ich verbinde mich jetzt mal per ssh auf meinen auf meinen lokalen rechner aber das ist
egal also sprich das könnte auch in remote remote rechner sein es ist vollkommen vollkommen egal
ja also was man machen kann ist man kann mit jedem man kann mit jedem editor mit allem remote
ssh arbeiten weil es gibt so was schönes das nennt sich ssh fs und ssh fs funktioniert folgendermaßen
also wir gehen jetzt mal von aus ich habe irgendwo remote einen server stehen auf dem ich was
editieren möchte auf dem ich was editieren will so da kann ich nämlich einfach sagen ssh fs ich
hoffe ich habe sie haben ich überhaupt installiert ich muss mal kurz installieren so was ist denn
hier los oh ich muss mir glaube wieder updaten aber ssh fs ist es installiert ist übrigens
hat nicht installiert oder na toll ok ich muss mal schnell updaten ja aber wie gesagt ich zeig
dir das gleich das ist äußerst praktisch da kannst du nämlich einfach im ordner auf einem
remote server benutzen wie als wäre aber dir lokal das heißt du musst gar nicht wishell studio
ssh beibringen und du musst auch deine wim oder deinem emacs oder deinem atom oder deine wishell
studio kein ach du große scheiße was will der dann alles updaten musst du nicht beibringen
du machst einfach ssh fs und dann hast du den remote ordner lokal bei dir so lange der jetzt
updaten macht zeig ich zeig ich dir jetzt irgendwie ein beispiel gibt genau das ist das ist viel zu
übertrieben was die hier machen so ein bisschen so was wie nfs ja das ist total einfach genau
hier ist ein schönes beispiel du sagst du sagst einfach ssh ssh fs username server doppel punkt
und dann in dem fall ist das heimatverzeichnis und dann den ordner wo du es rein mounten willst
so und das heißt am ende hast du dann einen ordner von remote lokal gemountet und in diesem
lokalen ordner kannst du da mit jedem editor drin rumwursten wie du willst und der singt das dann
auf den remote server ich zeige es dir auch gleich wenn er irgendwann mal geupdatet hat
übrigens wisst ihr wie kacke wie kacke betriebssystem update über lte sind ich musste
auf der arbeit als ich auf der arbeit war und wie gesagt wir hatten ziemlich viele ausfälle
der netzwerk war auch im arsch teilweise ich musste einen update machen so ungefähr so ungefähr so
ein update wie hier über lte lte mitten in frankfurt über den wlan über den wlan hotspot den ich mit
meinem handy aufgemacht habe das hat keine ahnung drei stunden gedauert oder so das hat gar nicht
mehr aufgehört also wenn das hier fertig ist dann zeige ich dir so jetzt können wir starten jetzt
zumindest mal nebenbei den htp server so also wo sie mal stehen geblieben ich warte hier noch bis
das update durch dann zeige ich dir das mit sshfs weil das ist eines der praktischsten und
einfachsten tools dies gibt und die lösen so viele probleme also an sshfs sollte man immer
so als erstes denken wenn man remote sachen bearbeiten muss größere sachen remote bearbeiten
muss mit und und gerne die sachen verwenden möchte lieber lokal hat er stellt ihr vor du
musst eine router konfig über 2g das ist kein problem router konfig ist ja nur text und nicht
groß ja selbst so eine riesen sysco was auch immer konfig ist vielleicht was weiß ich 50 kilobyte
doch kein ding dauer trotzdem eine halbe stunde was ist da drin router konfig mit binaries oder
der update der wirklich drei stunden so also was wir kommen mal zurück zum webserver was
wir jetzt als nächstes checken müssen ist ob das zertifikat funktioniert also sprich
ob man das zertifikat pasen kann also ich habe jetzt hier das zertifikat und den key eingelesen
und es könnte ja sein dass sie im falschen format sind deswegen muss ich jetzt erstmal
sagen ok pasen mal das zertifikat und schreibt dann deine interne geschichte was auch immer du
mit dem zertifikat machst hier in diese variablen weil wir müssen ja davon also wir müssen ja
aufpassen dass die variablen nicht aus dem scope rausgehen c und c plus plus machen das so wenn
man variablen anlegt und die funktion wird verlassen dann werden die wieder gelöscht es sei denn man
hat vorher gesagt man will das nicht das ist übrigens auch das wo die meisten memory leaks
herkommen also wenn man sagt ok so kann es so gibt es keine memory leaks ja also wenn ich
variablen nur so anlege dass sie automatisch wieder auf auf geräumt werden sobald die funktion
beendet wird kann es logischerweise keine memory leaks geben aber nachdem man ja auch variablen
braucht die es länger gibt als die funktion muss man muss man dem halt auch dann sagen hey ich
brauche das länger und da kommen halt auch die meisten memory leaks her genau also der passt jetzt
das zertifikat der passt im private key und schreibt hier einmal nach key und einmal nach
zert jetzt muss man irgendwelche magic sachen machen die kopiere ich mir auch aus dem example hier jetzt
das ist eins zu eins zu eins aus dem example von denen ich habe keine ahnung was es macht magic
braucht man sonst geht es nicht und jetzt kann man gucken dass man verbindung annehmen kann wenn
ich es nicht nur irgendwas vergessen habe doch ich habe das leute ich habe das wichtigste vergessen
ich habe mich verguckt das sind jetzt auch zwei sachen die aus dem beispiel kommen und zwar man
muss ihm ja sagen an welchem port an welchem port man den server betreiben will den port
übergeben wir hier port 443 ist das bei uns so und nachdem wir das gemacht haben können wir
gleich mal gucken ob es funktioniert man sagt jetzt embed tls es fängt übrigens alles alles
so an net bind und da muss man ihm jetzt sagen welchen port da muss man erstmal den kontext
übergeben das ist das ist das da das ist das was wir hier oben hier oben angelegt haben das
nennen sie das nennen sie irgendwie in intern immer kontext kontext ist so eines der aussage
losesten worte überhaupt ist das ein selbst sein ja das ist komplett selbst generiert ja ja es
ist glaube ich von der ca keckw für den benutzer 0w ausgestellt das zertifikat können wir gleich
mal im browser gucken was das zertifikat meint update fertig ok ssh ssh fs also zeige ich das
mal falls ich jetzt installieren darf jo keckel hoffentlich geht das jetzt weil ich habe ein
kernel update hier drinnen gehabt und ich vielleicht vielleicht muss ich neu starten
vorher müssen wir mal schauen also ssh fs wir machen mal einen mount punkt nennen wir mal
remote so jetzt verbinden wir uns ich nehme jetzt mal nicht local host weil das viele leute immer
verwirrt wenn man in dem beispiel local host verwendet es ist zwar vollkommen egal ob der
endpunkt local host ist oder ein remote server aber viele leute sind immer verwirrt wenn man
local host verwendet deswegen verwenden wir jetzt mal eine ip jetzt sage ich ssh fs und zwar möchte
ich den ordner dort nehmen wir mal den ordner wollte ich habe kommens in der shell ausgeschaltet
wir nehmen jetzt mal den ordner in dem wir gerade hier am programmieren sind platform projects web
server also das ist der ordner remote auf dem auf dem remote server jetzt sage ich ssh fs auf
diesem server dieses verzeichnis möchte ich mounten lokal bei mir auf remote ok ich muss
wieboten kernel update gemacht dann geht es nicht dann ist die webseite im browser untrusted wenn
du selbst sein zertifikat verwendest korrekt aber das ist ja nicht wild ich meine das ist ein
dashboard für meinen esp 32 der bei mir rumhängt für firmware update zu machen klar ist das
untrusted ich könnte mir den letzten kript zertifikat ausstellen lassen aber wozu dann
muss ich das alle drei monate erneuern haben wir heute für hintergrund jede menge scharfe alles
klar firefox wer manchmal übrigens probleme hat wenn so sachen wie ssh fs nicht gehen wenn
ihr vorhin kernel update gemacht habt dann muss das muss ihr müsst ihr neu starten moment und
jetzt muss ich muss ich ssh neu starten so wunderbar so also ssh fs remote server verzeichnis wird
gemontet auf lokales verzeichnis zack und ihr seht jetzt gehe ich in mein lokales verzeichnis und
ich habe dort alle dateien vom remote server drin das heißt ich kann hier drinnen jetzt
dateien editieren wie lokal hier speichern und das singt mir das quasi rüber auf den remote server
das heißt ich kann alle tools verwenden ich muss das ding übrigens an mounten danach wieder wenn
ich fertig bin das heißt ich kann alle sachen und ihr seht jetzt ist das verzeichnis wieder
leer das heißt ich kann alle tools verwenden die ich lokal habe zum editieren obwohl die
dateien auf dem remote server liegen und wie gesagt lasst euch jetzt nicht dafür verwirren
dass ich das hier alles quasi von meiner vm mich über meine vm in meine vmp ssh also verbunden
hab es funktioniert aber im remote server du kannst die eigene ca du kannst die eigene ca
im browser hinterlegen ja das geht kannst du machen kannst du ll statt ls la ich glaube das
habe ich gar nicht angelegt doch habe ich angelegt lg gibt es ja nicht ls ist nur ein alias der bei
manchen sachen mitgeliefert wird ich habe mir aber mittlerweile den hier angewöhnt übrigens das ist
kein ls aber funktioniert bei ls genauso weil also ls das macht folgendes also list all reverse time
und mit human ist das human readable ob das ist human readable size genau also sprich der
listet alle dateien auf in umgedrehter rein folge nach dem änderungsdatum nach dem änderungsdatum
und das hier ist dass er die datei größe in ordentlichen einheiten anzeigt und nicht alles
in bites ja was für den status bar benutzt du das ist die drei
die drei status rast ist das warum auch immer es nicht installiert ist
weil hier outdated paket verwende ok die config dafür gibt es übrigens hier wenn
du es genau wissen willst ja da irgendwo hier die config drin da ist nicht sonderlich viel
aber wichtig dass man emojis verwendet exzellent ja und so sieht das mit sshfs aus das ist eines
der praktischsten tools überhaupt exzellent mal kurz schauen ob ich irgendwas mein chat kann ich
kann mein chat immer noch nicht scrollen auf anderen bildschirme ja gut aber das ist doch
egal also bei einem normalen service nicht aber bei einem esp 32 daheim im netzwerk ist das egal
und und übrigens die meisten iot geräte haben ungültige zertifikate du musst es nicht an
maunden aber ich an maunters immer der flascht und sinkt normalerweise auch so also musst du es
nicht unbedingt an maun aber ich an maunter das immer allein schon dass ich nicht aus versehen
was drin ender remote auf dem server also ich habe mal in meiner ausbildung den fehler gemacht
ich habe meinen ssh remote gemontet und habe dann dateien gelöscht in meinem heimatverzeichnis
recursive in meinem heimatverzeichnis dateien gelöscht und der ssh mount war halt da auch
drunter aber ich hatte glück das ding ist schlau genug und löscht nicht auf ssh mounts aber das
kann mal relativ einfach passieren also sprich wenn du den server gemontet hast über ssh fs und du
löscht dann was aus versehen dann geht es halt mit pech auch direkt über ssh fs drüber also ich
würde es immer an maunten wenn ich fertig bin gerade wenn es ein produktiver server ist ist immer
doof wenn man das aus wenn man dann aus versehen irgendwas irgendwas kaputt macht also machen wir
mal wieder hier den editor auf machen wir weiter aber wie gesagt man muss es nicht an maunten also
wenn es vergisst zu an maunten ist es nicht schlecht ist es nicht schlimm was oh
please don't klo alles klar ich klohse nicht ich ich war ab re-reload ja leider z plus plus und monka
darf ich jetzt monitor aufmachen von meinem controller sehr gut also wo sind wir stehen geblieben
wir wollten jetzt testen ob der server funktioniert wir wollen jetzt gucken ob der
ob der ob der server prinzipiell funktioniert und zwar muss man jetzt sagen an welchem port
er lauschen soll also sprich mit net bind und einem port kann man ihm sagen woran er lauschen
soll also wir sagen jetzt mal hier port kratzsch nie ip die ip ist ip ist egal es gibt wir haben nur
ein interfaz port viel für 33 da sieht man auch schon wieder mal komische sache die wollen den
port unbedingt als string ok meinetwegen können wir machen port viel für drei und protokoll das
ist tatsächlich relativ wichtig dass man das angibt weil ja sonst uns funktioniert es halt
einfach nicht wenn man das nicht angibt so da muss man ihm sagen m bed tls aner score net proto
tcp so und jetzt lauscht der server an port viel für drei und das kann man auch gleich ausprobieren
ob das funktioniert wir verbinden uns dann nämlich einfach mal per open ssl hin und gucken ob wir da
irgendwie eine art antwort bekommen so und jetzt muss man noch ein bisschen magic hinten dran
machen das copy paste ich aus dem example wieder weil wir das einfach machen muss dass es funktioniert
man muss die den random generator muss man sieben und und anwerfen und so und drauf geschissen ob
das funktioniert ja so und jetzt können wir das ganze mal speichern und hochladen gucken
ob es funktioniert hat es noch bin die klärt also ja logisch ok alles klar
what the fuck was zum geier jetzt schon wieder los z plus plus
alter wo ist denn jetzt ein problem schon wieder
oh man download update was hat er jetzt für schmerzen
warum kann warum schaffe dies eigentlich ordentliche fehlermeldungen zu geben
was ist das problem also ich kann mir vorstellen wo das problem ist glaube weil
ich hier nicht aufgepasst habe wartet mal weil ich nicht aufgepasst habe als ich hier mein
template angelegt habe zwar wo ist mein komisches template ne passt in line eigentlich alles
richtig ja ich weiß nicht was er für schmerzen hat ok also der mag nicht der mag nicht weil
ich den kram hier include so gut aus irgendwelchen gründen darf ich es hier nicht inkluden alles
klar welche sie mich nicht include dann geht allerdings kann ich dann die sachen nicht verwenden
was auch ziemlich toll ist ja exzellent redefinition ok das ist das ist der kram den ich meine wenn du
das nicht im z plus plus fein macht spackter irgendwie spackte irgendwie rum ich weiß nicht
genau was er jetzt für schmerzen hat ehrlich gesagt also warum er da jetzt rum meckert aber
wir machen das jetzt einfach z plus plus feil ist gut was bevor nun mehr was was ist happening
ok redefinition of template bool und so ist ja was ich nur reden das jetzt machen das jetzt
so copy paste ist jetzt darüber und alles ist gut da geht es nämlich zack naja start
keine ahnung was der was der im detail für für probleme wieder hat aber wir machen es
einfach so so und jetzt funktioniert das passt und das da machen wir auch hier raus und kopieren
das da rein und dann funktioniert oder ich weiß nicht genau warum aber es funktioniert oder auch
nicht was ach ist das geil exzellent aber wahrlich exzellent exzellent
ach so muss auch inkluden mache ich mache ich ich ich inklude ich inklud alles ich inklud
alles was du willst mir egal include und jetzt ha komm on bra gibs mir mach ha wo ist das
problem alter das scheiß funktioniert doch im anderen projekt eins zu eins was habe ich
denn jetzt vergessen ich bin immer wieder begeistert wie schön das ganz funktioniert
titan toaster mein beileid ja so was was was ist dein problem was ist dein problem c++ jetzt was
magst du nicht ich kopiere mir jetzt einfach mal den kram rüber aus meinem testprojekt wo das
alles funktioniert hat wohlgemerkt noch das können wir drin lassen gut
alter ich habe das eins zu eins aus meinem testprojekt probiert ah im moment was hat
er hier verschmerzen was was hat er da jetzt was hat er da jetzt für probleme standard ok ok ok
ok ich ich kopiere es ich kopiere es mir noch mal das ist das ist das was ich in meinem test
testprojekt habe geht das jetzt warum geht das jetzt moment
ich habe mein logger eingebunden ansonsten geht es nicht
ja natürlich geht das nicht logger war nicht da ja natürlich dann kann das ja auch nicht
funktionen alter bin ich blöd ok dann probieren wir das doch mal ohne hederf dann probieren wir
das doch mal alles im hederfall zu machen weil ich bin wirklich gespannt ob das alles ob das
funktioniert wenn ich das alles im hederfall mache ich habe nämlich in meinem test das problem dass
dann wähler nicht ging jetzt ist helper nicht drin ok ja so ordentliches modulsystem hätte doch was
oder so uint 8 ja das geht gleich weg was halt auch legendär ist an c++ in die hilfreichen
fehlermeldungen erst mal irgendwo kommen vergessen und hier 30.000 zeilen übrigens
wisst ihr was meine lieblings meine lieblings c++ moment ich muss mal kurz raussuchen weil
ich weiß gar nicht mehr genau aus dem kopf wie es funktioniert was meine lieblings c++
fehlermeldungs generierungs taktik ist moment ich zeig es euch ja passt mal auf also wenn
ihr mal unendlich viele c++ fehler sehen wollt dann müsst ihr das hier machen
sieht nicht so böse aus oder also sieht nicht so sieht nicht so mittlerweile erkennt er das sogar
oh er erkennt das ok gut gut ich habe nichts gesagt
achso moment
ane
moment wie ging das so wie ging
moment wie war es ein schlüssel wort ok ok ok dann geht das gar nicht mehr dann geht das
gar nicht mehr das ist ja cool das haben ok das haben sie mittlerweile auch mitgekriegt dass
es dass es ein fehler ist ja weil ein vergleich verkehrt ist
aber ich bin begeistert die letzte version von den c++ tools in visual studio hat das
noch nicht als fehler angezeigt da wusste ich gar nicht was sache ist warum es kaputt geht
aber es ist es ist schon ein bisschen merkwürdig warum darf man das ist auch so eine inkonsistente
geschichte von c++ warum darf ich also das ist rhetorisch gefragt ich weiß warum ich darf weil
die weil hier equals überladen haben aber warum ist das warum ist das überhaupt so und warum
ist das im standard so und im standard library warum darf ich in den null pointer einem standard
string zuweisen aber warum darf ich dann wiederum diese diesen standard nicht checken ob er null
ist ergibt erstmal keinen sinn wie so viel ist in c++ ergibt es keinen sinn das liegt daran weil
der gar kein weil das gar kein null pointer ist weil der wenn eine null pointer kriegt einfach
den leeren string draus macht also die haben die haben das hier überladen also es kann sein dass
es nicht 100 prozentig stimmt ich habe mir die implementierung jetzt nicht genau angeguckt aber
so weit ich es verstand die haben diesen assign operator überladen und wenn sie eine null pointer
bekommen machen sie einfach da raus das hier magic machen sie da draus das funktioniert jetzt ja
im moment funktioniert das nicht das ist mist das muss funktionieren der vergleich aber also das
hier ist es gleich wie das hier es ist halt einfach wir warum macht es magic da unten
drunter warum weshalb es ergibt für mich keinerlei sinn wenn man wenn man das nicht gegen null pointer
checken kann ok dann ist es halt ein typ der nie null sein darf es ist in ordnung aber dann sollte
man auch nicht equals null pointer sagen können sondern einfach dann gibt es error wenn man null
pointer zuweist oder kommt am besten compiler error type cannot be null irgendwas halbwegs wie
sie immer sagen irgendwie sowas was halt sein ist was halt irgendwie noch sein auf deutsch noch
noch bei verstand ist irgendwie gesund gesund ja was halt noch gesund ist und nicht so magic
dinger so wir waren hier aber gerade bei unserem webserver jetzt gucken wir mal ob das funktioniert
ich habe ich habe ich habe ich gerade abgelaudet ich upload immer auf unseren esp und dann checken
wir mal ob das funktioniert auch huge upload speed ich rede mich nicht auf wegen visual studio
code das ist tatsächlich ganz gut ich rede mich auf wegen c++ weil vieles davon kann
im visual studio code nichts da ist c++ dran schuld josen in dem fall ist es ganz einfach wenn
du das für so microcontroller machen willst installier platform iow und es macht alles für
dich komplett vorkonfiguriert ok also telnet oh wir haben was vergessen das geht noch gar nicht
telnet was haben wir für eine ip gekriegt ja ip 443 geht übrigens oh guck mal da wir haben
eine verbindung zum server hat funktioniert gut mehr funktioniert nichts weil ich rufe
noch nichts ab also ihr seht der server läuft port 443 da connect the two was wir jetzt auch
machen können ist ein curl aber das wird jetzt schon mal nicht da also da passiert jetzt nix
kann ich gleich sagen dass es mag nix weil das macht ja noch auf der ebene nix da der
kantor kann sich connecten und kann was hinschicken das ist aber alles mehr kann er nicht weil es
kommt ja nichts zurück also was wir jetzt gemacht haben ist in den surfer gestartet der auf port
443 läuft kein HTTPS kein sonst was nix gerade wenn ich ich versuche auf HTTPS zu connecten
dann sagt er hier ok verbindung ist connected und jetzt versucht er einen ssl handshake zu machen
der noch nicht funktionieren kann weil wir haben ja noch nichts gemacht außer eben den
server zu starten auf port 443 also der macht kein ssl handshake kein zertifikataustausch oder
irgendwas also josen wenn du keinen microcontroller programmiert habe ich das noch nie gemacht die
einfachste variante ist vielleicht dann wirklich so was wie das hier mal in der trial version
auszuprobieren ob das nicht einfach alles schon gut einrichtet keine ahnung das problem an c plus
plus und diesen ganzen uralt liegt daran dass halt viele tools teilweise richtig uralt sind und das
setup eklig ist dazu kommt dass c plus plus kein eingebauten module und package manager hat also
das heißt du musst ja auch irgendwie den files rum kopieren oder was nicht offizielles verwenden
das macht alles in der handhabung nicht schön also wenn du einfach nur anfangen willst zu
programmieren ohne dass du jetzt dass es c plus plus sein muss würde ich was anderes nehmen als
c plus plus den plus plus ist an vielen stellen einfach nur blanke zumutung wenn man ein bisschen
was neueres gewöhnt ist oder muss es c plus plus sein muss ja dann kommst du nicht drumherum dann
gut aber was man jetzt sieht ist läuft und wir können uns zum selber verbinden ssl funktioniert
noch nicht das ist das nächste was wir jetzt machen jetzt gucken wir das irgendwie ssl funktioniert
bei the way das hat übrigens in meinem test nicht funktioniert dagegen mein wähler nicht mehr wenn
ich den kram hier so eingestellt habe also so ist mir das ja sogar noch viel lieber wenn ich das
alles im header file schreiben kann so das nächste ist was wir jetzt machen müssen also verbindung zu
diesem server geht hallo kengin so ich übrigens ich ich zeige ich zeige euch noch mal was ich
habe nämlich was gebastelt die wollen ja hier aus irgendwelchen unerfindlichen gründen den port
als string haben und wir übergeben den port aber wie ich es persönlich für sinnvoller halte als
int ein import ist halt einfach eine zahl und wir übergeben es auch nur als in 16 weil wie viel
passt in den anscheinend in 16 rein leute big brain chat wie viel passt da rein anscheinend anscheinend
wohlgemerkt 64k ja genau 2 ja so in dezimal ich will da auf was bestimmtes rauf deswegen
muss jetzt einer die richtige sache sagen ja ok der hörwink sagt schon genau flinster sagt 65
536 exakt und wer ihr netzwerk technik ausge aufgepasst hat weiß dass es auch 565 535 ports
gibt das heißt in dem fall bietet sich das einfach allen anscheinend in 16 zu nehmen weil
hier passen exakt so viel zahlen rein wie es ports gibt und null mal drauf geschissen auf null
jetzt erst mal egal empfinde es immer irgendwas was nicht doch portnull gibt es tatsächlich es
gibt tatsächlich portnull portnull ist reserviert haben sie sich gedacht mit so ein blödsinn fangen
wir erst gar nicht an aber gibt es theoretisch natürlich ja weil es auch ein anscheinend in 16
nummer ist man könnte wahrscheinlich wirklich was auf portnull laufen lassen habe ich noch nie
probiert ob das funktioniert probieren wir mal aus wenn man ruht was auf portnull netcat minus
listen wie ist meine ip wobei brauche man für listen brauche man gar keine ip ne portnull
hört er jetzt wirklich auf portnull ich mache das ich mache das glaube ich falsch ich glaube
man musste kam netcat geschichten die aus dem kopf kann man nicht was ach minus p genau ja ja
ne war das minus ich jetzt blöd wie das ging doch so und letztes die ip weglassen
okay gucken ob man auf portnull lauschen kann ne das mag er nicht dann will er random in port
aus also man kann auf port 666 lauschen er lauscht auf port 6666 aber auf portnull darf man nicht
lauschen dann sucht er sich random ein aus wie es aussieht na gut darf man auf port 1 lauschen
auf port 1 darf man lauschen auf portnull darf man nicht laufen lauschen ja wahrscheinlich ist es
besser hätte sein können habe ich noch nie ausprobiert der chat der chat bringt mich immer auf so
ideen das ist gut wenn du random port brauchst ja ganz ehrlich habe ich mir noch nie gedanken
darüber gemacht aber ist gut zu wissen man lernt ja nie aus was das angeht also wir haben jetzt
ein server gestartet auf port 443 die wollen dass sie ja irgendwie als als string haben so als
character character c string character array mit null hinten dran und zwar ihr seht ja ich
habe hier die format library drinne dies ist übrigens eine eine die einzige die einzige
c++ library die ich wirklich gerne verwende weil damit kann man seine strings so formatieren wie
man das beispielsweise aus python kennt oder ein bisschen teilweise wie man es jetzt aus dem neuen
string aus die scharp kennt also man muss sich nicht mehr mit printf rum ärgern man kann sowas
machen fmt format und dann kannst du hier den kram reinschreiben also ein bisschen wie printf
allerdings deutlich besser als printf kann mehr typen hat mehr format option kann eigene typen
formatieren nicht nur wie printf was irgendwie nur eine handvoll sachen kann named arguments das
was c++ schon lange fehlt bringt auch so ein thema in c++ was ich übelst beschissen finde c++ hat
ganz sich auch formatieren muss man ausprobieren gut es kann so viel sachen machen dass es auch
dein hirn formatiert wahrscheinlich c++ hat ja sowas wie default arguments also ich kann jetzt
sagen keine ahnung mein standard password ist blub das heißt wenn ich diese funktion aufrufe
und nicht die nicht pw übergebe dann setzt er pw auf blub also hat die default arguments
allerdings irgendwie hat sich ein c++ gremium gedacht wir machen die fault arguments ohne
named arguments was heißt so was zum beispiel heißt wenn ich jetzt sowas hier habe dann muss
ich immer alles angeben in einer normalen sprache könnte man ich zeige ich mache da mal eine
funktion draus da kann ich euch das besser zeigen also wir haben jetzt hier die funktion start die
funktion start kann ich folgendermaßen aufrufen so das war es mir muss was halt für schmerzen
stimmt so was da jetzt passiert ist der ruft die funktion auf mit diesem port und nimmt für
user und für passport das default argument was ich hinten angegeben habe das ist ja schon mal
gut dass die sowas eingebaut haben in c++ aber was es jetzt fail macht ist dass c++ keine named
arguments hat das bedeutet mal angenommen ich möchte jetzt nicht user setzen sondern nur
passport setzen dann geht das nicht also wenn ich sowas hier machen möchte wie gleich lull das
geht nicht das gibt es nicht das kann das nicht also ich muss immer sagen ich muss immer sagen neuer
user neues password ich kann da keine named arguments also ich weiß nicht wie man auf die
idee kommt die fault arguments einzuführen allerdings nicht zeitgleich named arguments
verstehe ich nicht das eine braucht das andere irgendwie und in dem fall ist es ja noch relativ
sinnvoll wenn man das passport ändert dass man auch den usernamen aber überlegt euch mal ihr
habt jetzt irgendeine funktion die was vom datalysystem liest ja sowas hier nach der
nach dem motto file name keine ahnung size mode blocking irgendwas so ihr habt irgendwas langes
so und es wurde im prinzip für alles die falsachen alles für alle für alles wurde
die falsachen definiert so und die falsachen sind gut und ihr wollt bloß sagen ok ich will
es nicht blocking sondern ich will es asynchron haben dann könnt ihr nicht einfach sagen ok
wir machen jetzt hier datei datei index html und sagen jetzt blocking gleich falls so wäre
das in jeder sinnvollen programmiersprache gelöst wurde gelöst wäre das in jeder sinnvollen
programmiersprache gelöst oder so oder so irgendwie so ist was ich meine aber das geht
nicht weil c++ ich gedacht habe nein named arguments brauchen wir nicht und das heißt
wenn ich diese funktion hier aufrufen will und möchte nur das hier hinten ändern alles andere
ist ok muss ich das jedes mal so machen und gucken dass ich auch ja nicht das falsche
vergesse dass das falsche machen total hängen geblieben dazu kommt auch das problem bei
langen funktions aufrufen ist es so dass man man sieht hier an dieser funktion nicht was was ist
also man hat keine ahnung dass das hier feilen ist dass das hier size ist dass das hier mode ist
und das hier blocking oder nicht hat man nicht mit name mit named arguments hättest du das weil
dann würde es jetzt beispielsweise reinschreiben ok ich will den mode ändern ich will sagen mode
gleich reed so das wird dann funktionieren aber nein in c++ das ganze nicht es gibt
so einen so einen so einen so einen so einen antrag dafür glaube ich im c++ starr aber so
was kommt nie man muss sagen ordentliche programmiersprachen wie sagen wir massi
scharp oder so was javascript kann das übrigens glaubt mittlerweile auch wenn also wenn javascript
was schon kann ordentliche programmiersprachen sowas wie scharp heißen sonst was die können des
seit 15 jahren oder so wenn man null über gibt nein wenn man null über gibt ist das du hast
ein parameter gesetzt du musst es höchstens weglassen oder aber wenn du das default behalten
willst musst du explizit mal angenommen du willst das default behalten ja und du willst nur blocking
ändern du musst explizit das angeben was du oben schon mal geschrieben hast nur um hier dann falls
rein zu stecken woops richtig hängen geblieben dings scharp kann das passen rubik also können
die meisten programmiersprachen c++ hat es bis heute geschafft ist halt c++ also wir haben
den server gestartet server läuft auf port 443 wunderbar also normalerweise läuft er da jetzt
ist er gerade abgekackt irgendwie aber der läuft nach port 443 und ich habe euch ja gerade diese
format lip gezeigt du kannst es mit function ja das ist ein gutes beispiel das kann ich auch
noch mal zeigen du kannst es mit function overloading teilweise machen aber ich meine ganz ehrlich es
wird es wird noch eklig ja es wird noch eklig du kannst das natürlich mit overloading machen also
du kannst sowas hier machen aber da sieht man auch schon gleich dass es irgendwie eine merkwürdige
idee ist also du kannst natürlich sowas hier machen aber das das das ändert auch nichts
da dran dass du nicht einfach mal das letzte argument ändern kannst du kannst natürlich
sowas hier machen das wird funktionieren aber kannst du auch nicht das letzte argument ändern
was du machen kannst ist jede nur erdenkliche kombination einen overload erstellen aber das
heißt du brauchst dann schon für eine für eine sagen wir mal für eine funktion wie read mit
ein paar parametern die fünf die fünf parameter bekommt da bräuchte es die ja schon allein schon
was ich keine ahnung 40 overloads oder so und dann kommen die big brain leute wieder an start und
basteln dann für c++ irgendwie einen preprozessor ding was das für dich macht im zweifelsfall noch
am besten sowas einfach in die sprache einbauen dann ist es auch benutzbar also das
läuft auf port 43 ich kann jetzt mal die was zeigen von dieser format lip was wirklich praktisch ist
ok in dem fall ist es jetzt ehrlich gesagt ziemlich ziemlich ziemlich low brain aber
unter dem strich was wir jetzt machen müssen ist in 16 in zu einem string zu konvertieren da
gibt es bestimmt eingebaute metoden aber wir können das mit der format library machen ich
habe mir da so klein so eine kleine rapper funktion drum gebastelt die in den c++ string
draus macht die in den arduino string da draus macht ist im prinzip unter der haube immer noch
jedes gleiche wie die format library da sagen wir jetzt hier nicht am format zahl zack port und
weil es alles ist müssen wir so sagen und jetzt wandelt er den wenn ich es richtig gemacht habe
jetzt wandelt er die zahl in ein string um ich weiß ehrlich gesagt nicht was die empfohlene
variante ist in c++ also die eine robuste variante wie man ein int in einen string umwandelt keine
ahnung was es da eingebautes gibt in dort nett würde ich übrigens genauso machen also in dort
nett würde ich auch würde ich auch sagen war blubb gleich moment jetzt steht auf dem schlauch wie
sieht es in scharp noch mal aus moment wie sah das jetzt in scharp noch mal aus ach hier ja port so so
wird es in scharp aussehen hier setzt er den port ein ist noch ein bisschen kürzer als das hier
jetzt setzt er den port ein schon hast du die zahl als string hast du irgendwelche aktiven
haskel projekte nein genau und du könntest natürlich in scharp habe ich gar nicht dran
gedacht du könntest machen port to string ja das wäre die einfachste variante richtig aber
sowas gibt es in c++ selbstverständlich nicht wo kommen wir denn dahin jungfels point schön
dass du am start bist excellent chat iq steigt wieder ins unermessliche ich sehe schon gut jetzt
haben wir einen server laufen auf port 443 denn jetzt kommt die eigentliche big brain variante was
ich vor habe nämlich dass das ganze multithreaded funktioniert weil man darf nicht vergessen wir
machen das ja auf einem auf einem esp 32 bord zwar auf dem hier und der esp 32 hat zwei kerne um
genau zu sein hat er drei aber der dritte ist jetzt erst mal egal den kann man dafür nicht
verwenden der esp 32 hat zwei kerne mit jeweils 240 megahertz also das ist für so ein kleines
scheißding was in der billigsten ausführung 2 euro 50 kostet doch ziemlich ordentlich und
dementsprechend kann man auch den webserver multithreaded machen das heißt pro connection
machen wir den eigenen thread auf und lassen den unabhängig voneinander laufen das hat den
vorteil dass man zum beispiel locks dampen kann über htp gleichzeitig aber auch noch den webserver
verwenden kann für zum beispiel ein dashboard das geht normalerweise nicht gescheit ansonsten
muss eins immer warten und gerade für locks ist das doof weil locks will man möglich zeitnah
sehen und spätestens wenn die kiste rebooted hat sind die locks weg und zum beispiel wenn man
ein update hochlädt möchte man gerne schon auf einem auf einer zweiten verbindung sehen können
ok wenn man etwas debacken will ok was für locks kommen da eigentlich ja und das ist ja das was
ich schon seit einer weile probieren den server zu basteln oder den webserver zu basteln oder zu
verwenden falls es fertige sachen gibt über den ich ordentlich updates machen kann über wlan hat
der htps kann über den ich updates machen kann übers wlan firmware updates übers wlan machen
kann halt auf dem controller und nebenbei mir auch noch die locks über htp anzeigen lassen
kann also spricht hier die serielle ausgabe an sich eigentlich kein problem aber die ganzen
server die ich gefunden habe taugen irgendwie nix meiner wird nicht wirklich besser werden
kann ich euch gleich sagen aber meiner wird wahrscheinlich das machen was ich will und
sonst nix wo hast du es gekauft bei bengut habe ich gekauft bengut ist kein porn seite ist
china shop seite bengut gibt es glaube ich sogar gerade im angebot dieser shop hat eigentlich
exzellente bewertung bengut 1,9 sterne itygo t display der ist aber nicht schlecht habt
auch noch bestellt der der der d1 mini ist gut aber das ist kein esp 32 das ist ein esp 82 66
das 80 megahertz single core ist eine nummer nummer schwächer also aktuell gibt es die im
angebot hier auf bengut und sogar aus uk glaube ich aber ein bisschen zu teuer gut china shop
6 dollar 99 cent das ist ein komplett fertiges kit also sprich das board mit den pins und
halt dem display corona kommt gleich mit ja das ist ein bisschen und das ist guck mal das ist 14
tage unterwegs da musst du dir keine gedanken machen dann bestellt man sich gleich mal zehn
stück wenn man damit öfters was machen will oder fünf fünf fünf stück fünf stück und dann
bezahlst du im endeffekt aus china gerade mal 34 euro 95 inklusive versand für ein komplettes
board mit display da kannst du dich nicht beschweren wenn du was einfacheres brauchst wenn
du nicht unbedingt ein board mit display haben willst oder was esp 32 gibt es dort für für
für unter drei dollar das stück kleine andere andere module aber ich finde das hier gerade gut
stromverbrauch mit display was mich hier was 0,1 watt weiß ich nicht wenig sehr wenig
0,1 watt 0,5 keine ahnung nicht viel auf jeden fall das ding hat so im durchschnitt irgendwie
bei 5 volt zieht das irgendwie so 150 milliampere oder so kannst ja ausrechnen 5 mal 0,15
also brauche volle pulle beim wlan senden mit display an ungefähr 0,75 watt in wirklichkeit
das ist wahrscheinlich mehr also die brauchen nicht wirklich viel gibt es die dinge auch mit
das schöne daran ist ja dass du massig viele zumindest beim esp 32 gpo pins hast da kannst du
anschließen was du willst da kaufst du dir noch ein 50 cent relay dabei und alles ist gut bei
dem hier hast du einen ticken weniger gpo pins aber immer noch genug wie du siehst weil das display
braucht ja auch ein paar gpo pins in sein stufe eins dankeschön big brain subscription aber wenn
du dir so mal so einen anderen esp 32 anschaust zum beispiel den hier so node mcu was ist du
du hast hier du hast massig gpo aus und da kannst du ohne probleme so viele relays anschließen so
viele relays brauchst du nicht also damit kann man eigentlich nicht viel falsch machen und am
besten das ist so mein universal tipp wenn es um so wenn es um so controller bestellen geht am
besten wenn er irgendwie mal so auf bingo zeigt und euch irgendwas raus oder auf aliexpress geht
geht übrigens genauso wenn ihr grad seid und euch irgendwas raussucht also sagen wir jetzt mal
ihr nehmt hier irgendwie den node mcu oder so das ist eigentlich auch relativ beliebte
beliebte boards sagen wir mal ihr wollt jetzt das da haben so und das ganze irgendwie fünf
mal nehmt das mehr als einmal nehmt das die haben weifer die haben bluetooth die also die
dingen haben wirklich die haben alles drauf gepackt was irgendwie geht du hast wlan allerdings nur
2,4 gigahertz wlan ich glaube die neuen esp 32 die könnten es zwei die können fünf gigahertz
wlan haben da bin ich mir aber nicht ganz sicher ja die neuen haben glaub fünf gigahertz also die
sind nicht wirklich neu das ist das ist eine andere produkt also die esp 32 s2 das ist nicht
wirklich neu also das ist eine andere produktlinie haben beispielsweise auch nur eine cpu und sowas
also von der leistungsfähigkeit sind die esp 32 immer noch am besten von denen die haben
alles mögliche drauf du hast du hast wlan du hast bluetooth low energy bluetooth zwei cpu kerne mit
jeweils 240 megahertz im dritten low power cpu kerne mit acht megahertz also features das das
gedöns hat wirklich also die haben da die haben echt alle register gezogen was da drauf ist genau
also 2 dual core dual core cpu 240 megahertz was echt viel ist ne ne sickb haben sie nicht drauf
sickb kann es aber vielleicht mit irgendeinem schild nach nach russ das habe ich mir noch
da habe ich noch nie geguckt ob es da nicht irgendwelche zusätzlichen sachen gibt
keine ahnung ob es da irgendwelche sickb sachen gibt keine ahnung weiß ich nicht
wpa 3 habe ich noch nicht daheim so du hast wie gesagt 2 2 dual core 2 30 bit cpus 240 megahertz
was ziemlich ziemlich schnell ist die arduinos sind kacken da richtig dagegen ab du hast ein
low power prozessor und der dritte hast quasi drei cpus der low power prozessor der hat zwar nur
acht megahertz aber das trickreiche daran ist haben wir übrigens auch mal programmiert in
einem stream von vor zwei jahren oder so schon ewig her du kannst wenn du den sensor dran hast
an diesem teil da kannst du mit dem low power prozessor diesen sensor abfragen und erst wenn
der sensorwert sich ändert und du darauf reagieren möchtest kannst du quasi mit dem low power
prozessor dann eigentlich in die eigentliche cpu starten das spart halt ungemein strom also
du fragst deinen sensor quasi low power ab und sagen wir mal sagen wir mal du hast irgendwie nen
temperatursensor in deinem fischteich oder so ja und du möchtest eine warnung bekommen wenn
der fischteich unter zehn grad wird weil du weißt okay vielleicht unter fünf grad das gefriert du
möchtest abdecken so oder fragst du deinen sensor ab mit dem low power prozessor die cpu kerne sleep
wlan sleep bluetooth sleep alles alles lieb und sobald der low power prozessor dein er fragt keine
ahnung der fragt dann alle zwei minuten fragt er deinen oder alle halbe stunde reicht er alle halbe
stunde fragt er deinen sensor ab und sobald der sensor sagt ah fünf grad dann wächst du mit
diesem ultra low power prozessor eben deine haupt cpus und dort verbinden sich dann im wlan und
senden die nachricht fischteich temperatur unter fünf grad oder was auch immer spart strom wenn
man wenn man mit esp 32 was machen möchte weil hier gerade jemand fragt wie schließt man die
am besten an strom an usb einfach usb kabel dran und gut ist es gibt die möglichkeit über batterie
allerdings muss man das richtige bord dafür nehmen die meisten developer boards also sprich boards
wo alles schon on board drauf ist und usb anschluss und alles hat sind nicht so strom sparen dass man
sie gut an ein akku anschließen könnte die sind zwar strom sparend aber um einer batterie oder
einem akku zu laufen musst du halt schon ziemlich strom sparen sein dass das über den sinnvollen
zeitraum läuft und es gibt es gibt dafür ein paar ganz gute boards zum beispiel das ist der erste
der mir einfällt der ist ein bisschen teurer 22 ist deutlich zu teuer gibt es das bord das hat
halt einen richtig richtig geringen eidel eidelverbrauch und das eignet sich auch das
kannst du dann auch mit einem 1200 milliampere milliampere stunden akku kannst du das auch zwei
jahre laufen lassen du brauchst aber halt ein low power bord dass das gut funktioniert ansonsten
einfach usb usb und gut ist so du hast ram nicht so viel und nicht so viel wo man wirklich viel
am stück verwenden kann von trickboard trickboard ist aber fail in dem sinn weil es trickst das
trickboard ist nicht wirklich low power das trickboard hat einen timer was quasi alles
abschaltet und den time ab und zu aufweckt die den kerben und irgendwie glaubt man dann den
timer eine uhrzeit checkt oder so und das trickboard ist sp 266 kein sp 32 du kannst den strom auch
über pins anschließen das geht auch also wenn du eine batterie hast da kannst du die also besser
gesagt akku dann kannst du die auch an die pins anschließen manche boards haben dafür schon
den passenden akkuanschluss da guckt der hier zum beispiel der hat so einen passenden akku
anschluss für so eine für so ein normalen akku formfaktor da es gibt viele boards muss man
einfach gucken was man machen will welche man braucht nur mal kurz hier drüber zu gehen was
das ding noch für features hat wie gesagt im vergleich zu den billigen arduino relativ viel
ram aber ich meine wir reden hier von 520 kilobyte ram und um genau zu sein kibi beid ram für alle die
das jetzt hier ganz genau wissen wollte hier bei also ist nicht viel also man kommt also damit
kannst keine allzu großen sprünge machen du bekommst dafür wählen bluetooth beides relativ
neu jetzt gerade wählen nicht super neu aber relativ neu du hast analog digital konverter
digitaler log konverter touch sensor spi interface sp was ist denn sqs kenne ich gar nicht du hast
sqc 2 2 bus anschlüsse du kannst an ein sqc klauen bis zu 86 gerät oder so anschließen wenn die
ursprünge hat du hast 3 serielle verbindungen du hast anschlüsse für sd karten und sonstige
geschichten du kannst theoretische netzwerk anstehen du kannst für autos eine kann bus
sachen machen du kannst das ding remote steuern über infrarotfernbedienung du kannst pwm machen
für einen motor für den lüfter für sonst was du kannst led pwm machen also sprich auch leds
steuern die über pwm gesteuert werden es hat einen eingebauten magnet sensor der übrigens sagt es
hat einen eingebauten temperatursensor der übrigens auch sagt ja und also das hat schon wirklich also
features hat das ding wirklich ordentlich drauf also im vergleich zu so einem arduino 5000
prozent mehr dafür würde ich sagen sind die arduinos ein tick robuster wobei die sp32 geht
auch nicht wirklich kaputt also arduino ist halt so ein ding das kannst du quasi drei jahre ist
übertrieben gesagt drei jahre im schlamm verbuddeln und das geht danach immer noch das ist bei so einem
sp32 eher nicht so jetzt habe ich mich dazu mal ausgelassen ok wo sind wir stehen geblieben
genau wir wollen jetzt mit dem big mit dem mit mit dem big brain part anfangen und zwar dass
wir die verbindung multithreaded annehmen also wir haben ja gesehen wir haben hier den server offen
ja ich muss mal kurz den esp resetten dann kann ich euch mal zeigen dass das server läuft weil
das wlan geht nach zehn minuten aus das muss ich nach zehn minuten immer neu verbinden das
zehn minuten sind jetzt um ich habe zehn minuten lang geschwätzt
so schauen wir immer zu sehen wir gleich wenn er gebootet ist
ah ja ja wunderbar 1544 so server läuft port viel für 3 ist auf also sprich das funktioniert
und wir sehen es ja auch wenn man es mit karl auf htps probiert er sagt halt ok ich kann mich
verbinden auf den port aber wenn ich jetzt meinen tls handshake ssl handshake machen will das geht
nicht ist ja auch klar wir lesen ja noch überhaupt nichts ein und und machen ja nichts und jetzt
müssen wir dafür sorgen dass der die verbindung annimmt also erst mal muss die verbindung richtig
richtig also die die die verbindung annehmen und dann muss er einen ssl handshake machen dass
ich eine verbindung über htps herstellen kann so und wie man das jetzt machen ist folgendes ich
habe gesagt wir machen das ganze multithreader also sprich pro verbindung
genau pro verbindung machen wir ein thread auf das machen wir folgendermaßen die ich
ich zeige mal ganz kurz zwei varianten die man eingebaut verwenden kann wenn man mehrere
also wie gesagt der esp 32 hat hier zwei kerne und hat ein mini betriebssystem drunter mit einem
scheduler der quasi mehr also man hat hier zwei kerne aber man kann bis zu standardmäßig glaube
ich bis zu bis zu 4 bis zu 32 oder 64 glaube ich standardmäßig eingestellt prozesse oder
oder tasks laufen lassen weil die haben einen scheduler drunter der quasi cpu zeit halbwegs
gleichmäßig verteilt also so ein bisschen wie das windows auf eurem desktop auch macht also
sprich ich habe zwar nur zwei cpu kerne aber ich kann bis zu 32 tasks starten die sich je
nach priorität die cpu kerne teilen und halt mal zeit bekommen mal keine zeit bekommen dann
mal wieder zeit bekommen und sowas zwei eingebaute wege um diese task zu verwenden zeige ich euch
mal schnell es gibt die native variante das ist wie task create das ist die eingebaute
funktion um solche also die low leveligste funktion um tags anzulegen die es gibt man kann
entweder sagen x task create oder x task create pin to core da kann man eben sagen ok mir ist
egal auf welchem cpu kerne das ganze läuft kannst auch abwechselnd machen juckt mich nicht oder du
kannst sagen ich möchte dass er nur auf core 1 läuft das ist ganz sinnvoll weil was vermissen
muss dass wenn man arduino benutzt arduino die main arduino loop läuft immer auf core 1 das
ist vorkonfiguriert die haben das standardmäßig so eingestellt dass arduino komplett auf core 1
läuft und iow und wlan und so läuft auf core 0 das hat natürlich das hat seinen charm
das hat seinen charm weil du kommst du nicht in die quere also sprich selbst wenn ich arduino
komplett blocker und und dicht mache wlan geht immer noch das muss aber in dem fall einfach
einfach klar sein wenn man da seine seine kerne verteilt ja fips was du verpasst hast ja das kann
ich ja wie wir basteln kann ssl in den mini webserver der ssl kann so x task create und hier kann
man eben sagen auf welchem core erlaufen soll die argumente sind folgendermaßen als erstes muss
man angeben was man ausführen möchte also zum beispiel geben wir hier mal lambda an oder so also
irgendeine funktion die ausgeführt wird dann muss man ihm sagen den name für den task keine
ahnung cute chat task dann muss ihm sagen stack size stack size war ganz einfach gesagt ist wie
viel arbeitsspeicher der thread der task verwenden darf gibt es denn keine vorgefertigten sachen
doch gibt es gibt es gibt noch eine andere sache aber das ist die low level variante da
sagt man dann zum beispiel du darfst du darfst 4096 byte an also 4k 4 kilobyte an ram verwenden
das reicht normalerweise dicker aus ja so da kann ich parameter übergeben das wollen wir
nicht priorität sagen wir mal priorität eins immer der task mit der höchsten priorität wird
ausgeführt und ein task handle das brauche ich nicht so so ist die native art in den tag zu
starten hier sage ich beispielsweise was der task machen soll endlos schleife sensor abfragen zum
beispiel so würde so einen standard wie formatiert der das das ist ja abartig und ks so würde das
standardmäßig bringen sie noch die parameter so würde das standardmäßig aussehen wenn man
einen low level task machen will was ist das für eine notierung für lambda z plus plus mehr
muss ich dazu nicht sagen zu sagen sieht halt nun mal so aus und die sache noch komplett so machen
man dafür bringt den kram teilweise weglassen sieht so aus was es nicht schöner macht das
ist jetzt quasi hier würde ich den task starten der immer in der endlos schleifenden sensor abfragt
ne da gibt es keine library für es gibt eine library für es gibt eine eingebaute https library
mit einer neuen esp edf version die ist aber rein singel threaded und plockt alle furz lang und es
gibt ein github projekt der in endlos schleifen hängen bleibt wenn man die verbindung abbricht
also und auch nicht so genau das macht was ich will dazu kommt dass ich sowas schon immer mal
selbst ausprobieren wollte wie es funktioniert so also das ist die low level variante ein task
anzulegen die ist die würde ich bevorzugen wenn man das macht dann jetzt auch die z plus plus
variante standard thread ist im prinzip genau das gleiche bloß dass ich weniger optionen habe
das ist die das ist die z plus plus variante das problem dabei ist das funktioniert übrigens
genauso wie das andere da würde ich auch in den lander rein machen und sagen hier endlos schleife
zu sensor abfragen das wäre die z plus plus variante sie ist ein bisschen kleiner und ein
bisschen hübscher aber das problem dabei ist das ist übrigens mal so formatieren sonst jetzt kacke
aus das problem dabei ist dass man keinerlei konfig optionen hat für den task der unter der
haube angelegt wird also der z plus plus das hier macht genau das gleiche was ich euch vorher
gezeigt habe unter der haube nur dass ein party fault parameter setzt das problem ist dass die
wirklich dass sie eine viel zu hohe priorität vergeben für den task die vergeben priorität
fünf priorität fünf ist höher als alles andere was standardmäßig läuft und dementsprechend
kackt das ding ab wenn das hängt also sprich wenn ich hier sowas laufen lasse mit priorität
fünf und das ist und ich schliebe da drin nicht oder oder ich hänge zu lange in dem task fest
dann kackt mir der kackt mir das das der kontrolle ab und das nächste problem ist dass die stack size
viel zu klein ist ich glaube die habe ich weiß nicht was die standard für eine stack size haben aber
man kann einfach nicht genug ram verwenden in so einem z plus plus ding so und deswegen ihr wisst
ja dass ich ein c sharp fern bin deswegen habe ich mir was eigenes gebaut ich habe mir den wrapper
gebaut um das hier und ich habe mir sehr viele wrapper schon gebaut weil ich wie gesagt z plus
plus nicht lange ertrage ich habe mir den wrapper für das hier gebaut und zwar kann man das ganze
folgenden verfolgen der mast fern helfer task run vielleicht erfüllt sich da ein oder andere jetzt an
die standard task api für von dort nett erinnert ist ein bisschen ähnlich weil ich das erste ist
woran ich gedacht habe ja task run und hier kann ich jetzt angeben was ich was ich was ich laufen
lassen will nur dass ich bei meinem eigenen wrapper die möglichkeit habe wie man hier sieht noch
stack size priorität und auf welchem kern ich laufen will anzugeben also ich finde recht
sinnvolle abstraktion das ganze überlassen jetzt mal komplett die fault alles und sagen die task
run und was wir jetzt machen wollen ist folgendes wie gesagt verbindung annehmen funktioniert ja
jetzt müssen wir bloß sagen verbindung except und danach neu in zwölf also hier neun zwölf
starten und ssl handshake machen ich hoffe das kriegen wir heute noch hin wir sind doch schon
ein bisschen wir sind ein bisschen am starten ich merke es auch schon ein bisschen heißer wäre
zweieinhalb stunden zweieinhalb stunden big big brain programm so also wir haben jetzt einen
task gestartet und da drin machen wir jetzt eine endlos schleife endlos schleife immer beste
so machen wir endlos schleife drinne die connections annimmt und zwar funktioniert das folgendermaßen
ich habe hier gesagt er soll auf port 443 port 443 lauschen port 443 so und damit das ganze
funktioniert der also der nimmt jetzt connection auf port 459 der hat der lauscht auf port 443
der nimmt noch keine connections an damit der connection annimmt muss ich folgendes machen
stripes 007 exzellent damit der connections annimmt muss ich folgendes machen ich muss
ihm sagen except connection also wer hätte wer hätte das gedacht zwar muss ich ihm hier sagen
embed tls net accept und dann muss ich ihm sagen okay hier nehmen wir haben ich das ding genannt
hier listen fd habe ich es genannt ich muss auch sagen dass ich hier drauf zugreifen darf
ignoriert das ist irgendein c++ geschäft ach listen listen fd wie habe ich genannt alles gut
ich glaube die auto das auto komplett mag nicht weil das gibt es offensichtlich ich glaube das
auto komplett mag nicht also immer genau jetzt muss ich sagen connection annehmen der und
operator mit nene ich will ja das ganze ding übergeben als referent das passt schon ich habe
es ja auf dem vorfeld schon mal ausprobiert so und jetzt kommt ein bisschen magic ich kopiere
das gerade mal dass ich mich nicht verschreibe ich kopiere das mal schnell dass ich mich nicht
verschreibe und zwar das hier wtf ich ich ignoriere das mal weil ich weiß dass es funktioniert ich
habe das vorher ausprobiert also man legt jetzt erst mal noch eine variable an wo man die infos
wer sich verbindet hinterlegt zum beispiel kann ich hier dann abfragen welche ip hat der client
der sich verbunden hat also ich muss hier irgendwo die information speichern sprich aktueller status
der verbindung welche ip hat der client und solche geschichten das muss ich auch noch übergeben
klein fd wie lahm die autos auto komplett ist und dann der rest kann den rest kann man hier kann
man übrigens die ip abfragen vom client das könnte das könnte man eigentlich mal machen
das war mal gleich mal wenn wir gucken wenn wir gucken dass das hier funktioniert da kann
man sich nämlich die ip ausgeben lassen die der client verwendet so was hat er jetzt für schmerzen
was mag er hier dran nicht ah es funktioniert alles klar erst mal fehler anzeigen wo keiner ist
genau also sprich das hier ist quasi ein zeiger da da da drauf hier auf die klasse auf die
member variable so oder klassen variabler wenn man das genau nennen markt in c++ so
nee das wird nicht übergeben aber ich muss hier oben reinschreiben was ich übergeben will ich
könnte auch so was hier machen dann nimmt er alles auf was ich referenziere aber ich kann so
was reinschreiben finde ich ein bisschen überflüssig ehrlich gesagt man könnte einfach sagen okay
nimm standardmäßig alles per copy was ich hier drinnen nehme referenzier das automatisch für
mich oder wenn ich halt per reference haben muss ich es angeben oder wenn ich was exkluden will
muss ich unnötig viel geschreibe eigentlich so und jetzt jetzt nimmt er die verbindung an der macht
jetzt einen neuen thread auf und dieser thread macht nichts anderes wie immer in der endlosschleife
gucken gibt es neue verbindung gibt es neue verbindung gibt es neue verbindung wenn es
eine neue verbindung gibt dann annehmen dementsprechend muss ich jetzt auch gucken ob das
funktioniert hat also sprich aber aber die verbindung angenommen hat also ob das funktioniert
hat ich meine ich könnte ja könnte irgendwelche fehler geben könnte sein dass der client die
verbindung abgebrochen hat dass ich nicht genug ram habe um die verbindung anzunehmen oder was
kann ja alles mögliche sein so also können wir es okay wenn wenn ich die verbindung angenommen
habe dann mal handel connection das war mal als nächstes und wenn ich viel interessanter in
dem fall ist wenn die connection nicht annehmen konnte vielleicht weil er klein die verbindung
schon geschlossen hat dann muss ich noch ein bisschen aufräumen weil wir sind ja hier in
im low level c++ land das heißt was ich jetzt machen muss ist mtls net free free und zwar den
da klein fd den muss ich freeen und danach muss ich ihn löschen also in dem fall ich leg das hier
an ich reserviere hier speicher für manuell den räumt er nicht automatisch auf weil ich will
sonst die verbindung nicht wegschmeißen und wenn das annehmen der verbindung nicht funktioniert
da muss ich das wieder aufräumen ansonsten habe ich in memory leak und dann ist der esp startet
sich random neue und ich frage mich warum memory leaks sagt wollen wir nicht so und jetzt haben
wir die verbindung angenommen da können wir jetzt mal gucken was jetzt ob das jetzt anders aussieht
als vorher aber ich denke mal noch nicht allzu sehr die musik eintöner könnte sein aber dafür
längt sie nicht ab so mein ziel ist jetzt dass wir gleich noch ein ssl handshake machen da muss
unbedingt was essen ich hab übelst hunger vielleicht guck mal ne runde barbeque pit boys so zack guckt
ihr seht wir kommen schon ein bisschen weiter er nimmt die verbindung an er nimmt die verbindung
an er möchte den ssl handshake machen aber das funktioniert nicht warum naja ganz klar weil ich
nix weiter mache mit der verbindung außer sie annehmen ich nehme die verbindung an und danach
mache ich nichts mehr willst du dann gleich für jede verbindung einen neuen thread aufmachen so
ist der plan ja so ist der plan dementsprechend muss man auch sagen also wie gesagt das ding hat
nicht sonderlich viel ram ich zeige es euch mal wie viel ram das hat das hält sich echt in grenzen
esp get free hip geben wir mal geben wir mal den speicher aus dass ihr gleich seht wie wieder
speicher runter purzelt wenn ich da verbindung aufbau gucken wir uns mal an also das hat also
wie gesagt die sachen zwar hier dass sie 520 kb ram haben allerdings ist der ram ein bisschen
anders aufgeteilt wie das so bei einem normalen rechner ist also wenn ihr auf eurem desktop keine
ahnung 2 gigabyte ram habt ihr auch 2 gigabyte ram hier ist es ein bisschen anders ihr seht
sie habt ihr standardmäßig nur guck mal bei es zu kilobyte habt ihr nur 170 kilobyte ram zur
verfügung von diesen 520 das ist alles ein bisschen wird alles ein bisschen anders gehandhabt zum
beispiel gehen für statische variablen und solche sachen geht schon mal ram weg für für den wlan
für den wifi stack geht ram weg solche sachen also wir haben die schreiben zwar man hat 520
kilobyte kilobyte ram aber benutzbar sind im endeffekt nur so 170 wobei es auch hier unser
display unser display frisst ja auch noch ein bisschen ram keine ahnung 40 40 kilobyte ram
oder so wird wahrscheinlich auch die ganze display geschichte fressen normalerweise hat man so
circa 220 kilobyte zur verfügung ram das reicht aber auch dicke ich weiß im vergleich zu einem
desktop mit was mal kurz gucken mit 32 gigabyte ram kommen einem jetzt 220 kilobyte ram vielleicht
nicht allzu viel vor aber auf so einer plattform ist das doch ganz ordentlich was meint ihr wie
viel ram son arduino hat noch viel weniger weiß ich hat von euch einer mal arduino programmiert
das ging bisher an mir vorbei aber die haben teilweise noch deutlich weniger ram
und
sebaro bist du eigentlich am start ist der cute mod da glaube ich glaube nicht das war jetzt
noch schnell also wo sie stehen geblieben handel connection soweit so gut wir machen jetzt für
jeden hier müssen wir mal sagen kann man kann man der sache halbwegs folgen was ich hier treibe
jetzt war für die also ich weiß dass wir ein paar leute am start haben die sich damit gut auskennen
und ich weiß auch dass wir ein paar leute am start haben die einfach nur gucken weil sie es
entspannend finden und eigentlich sich nicht so damit beschäftigen aber so war die frau für
die leute das interessiert so kann man der sache halbwegs folgen was ich hier treibe ich meine ich
bin mir selbst nicht hundertprozentig sicher was ich mache und dass ich erhebe da jetzt auch keinen
anspruch darauf dass das alles so hundertprozentig stimmt was ich sag also es kann durchaus sein dass
ich mal ein bisschen misst erzähle aber unwissentlich zwischendurch zum beispiel ist es ja zum es ist ja
auch nicht ganz korrekt wenn ich sage dass die stack size von einem task gleich der sache ist
die das an speicher verwenden kann aber im großen und ganzen stimmt halt so also wir haben jetzt hier
ein extra task ich nenne es mal task weil das halt so der die die sagt man so schön die terminologie
ist also halt so einfach das wort was man dafür verwendet auf der plattform unter windows wären
das thread so ich habe hier einen extra thread gestartet wir nennen es mal task ich bin thread
spricht sich irgendwie für nicht native speaker so kompliziert aus das ist also wir haben extra
task gestartet mit der endlos schleife die macht quasi die ganze zeit das da plus bisschen schneller
und dort gucken wir einfach gibt es eine verbindung wenn ja nehmen wir die verbindung an wenn nein
beziehungsweise wenn die verbindung irgendwie geschlossen wurde dann machen wir den speicher
wieder frei soll jetzt kommen das eigentlich interessant jetzt müssen wir die connection
handeln also sprich jetzt müssen wir müssen wir in den ssl handshake machen also in den ssl handshake
das man weil aktuell ist es ja so wenn ich im browser da drauf gehe 1 2 2 1 6 8 1 1 2 auf fuck
was das 5 4 3 3 dann geht nix und auch mit HTTPS geht da nix secure connection fällt bäm end of
file error geht nicht aber er merkt schon mal dass da irgendwas ist und jetzt muss ich in ssl handshake
machen vielleicht klingt nach bedrohung ja das stimmt das stimmt schritt ist neuer schritt ist
das neue task jetzt muss die verbindung annehmen und in ssl handshake machen also sprich den
verbindungsaufbau für eine verschlüsselte verbindung muss ich jetzt machen und wir starten
jetzt einen weiteren task pro connection hier nehme ich die connection an und jetzt starte
ich einen weiteren task pro connection das heißt jede jede verbindung die kommt ist unabhängig von
der anderen das bedeutet ich kann zum beispiel einen firmware update machen und mir dabei über
eine andere verbindung die logs angucken die das firmware update verursacht also zum beispiel ich
könnte das hier unten mir anschauen in einem browser oder per curl oder sonst wie und gleichzeitig
ein firmware update machen und gucken okay gibt es einen fehler beim firmware update und so was
ein bisschen mehr low level gucken weil die verbindungen komplett unabhängig voneinander
sind ansonsten müsste die eine verbindung auf die andere warten was zum beispiel einem update gar
nicht funktionieren würde weil bei einem update block den kompletten vorgang ein update ist ja
den upload im endeffekt den upload von keine ahnung 600 kilobyte großer firmware und solang
ich 600 kilobyte firmware upload kann ich nichts anderes machen wenn das single threaded wäre
wird er upload upload upload und nach dem ende des firmware updates wird er einfach den esp neu
starten und ich hätte nichts mitbekommen hier meine logs im browser was denn während im
firmware update passiert ist deswegen ist es denke ich mal ganz ganz praktisch wenn man das
ganze multithreaded macht natürlich braucht es ein bisschen mehr ram als als alles in einem task
logisch und wir haben ja auch nur hier noch 170 kilobyte ram frei das heißt im endeffekt ich kann
auch nicht so viele verbindungen aufbauen also eine tls ssl htps verbindung wie auch immer man
es jetzt genau nennen mag braucht ungefähr 30 bis 40 kilobyte ram oder könnt ihr mal ausrechnen
wie viel verbindung ich da rein kriege realistisch betrachtet sind es wahrscheinlich drei vier oder
fünf insgesamt das liegt aber auch daran weil ich kontinuierlichen speicherplatz brauche und ich
muss erstmal 30 kilobyte am stück speicherplatz frei haben also wir machen jetzt für diese neue
verbindung noch einen neuen task auf und zwar was der macht ist der gibt das einfach zu einer
methode weiter die wir gleich oben anlegen also erst mal neuen lambda anschmeißen das da übrigens
wer sich das hier fragt diese dieses konstrukt hier ist eine funktion die keinen namen hat also
sprich ich könnte hier oben auch so was hinschreiben wie also anstatt dem hier könnte ich
dann auch so was machen wie keine woid bla bla blob sonst was hier irgendwas und dann anstatt anstatt
dem das da machen das wird auch funktionieren aber ich finde es insofern schöner dass man
die funktion an der stelle hat wo was passiert dann kann man kann man halt direkt sehen was ist
sobald das ein bisschen länger wird würde ich das nicht mehr im lambda in line schreiben sondern
wird halt wirklich eine eigene funktion machen das machen wir jetzt auch gleich also wir haben
jetzt die verbindung angenommen das heißt viel smart man excel das ist das gegenteil von dem
hier quasi quasi ex exquisite smart man da muss aber den stream oft gucken weil das ist ja
bekanntlicher maßen IQ steigerung bis mehr geht nicht mehr vor allem wenn man zappt wenn man
zappt habe ich gehört ist das noch mal eine steigerung was das angeht jeder sub plus 40
IQ punkte für den gesamten chat wissenschaftlich belegt so also neuer neuer task aufmachen und da
drin sagen wir jetzt okay nehmen die verbindung nehmen die verbindung und machen mal sowas hier
die mit die methode gibt es noch nicht also das gibt es ich schreibe das nur mal rein das gibt
es noch nicht also wir machen mit der verbindung gleich irgendwas aber zumindest eine sache brauchen
wir hier unten auch noch sollte die verbindung abkacken dann muss ich auf jeden fall auch wieder
aufräumen weil sonst habe ich memory leak ich zelebriere das hier jetzt so weil das schießt
dann total oft ins knie dass man das aufräumen vergisst und wir sind ja wir sind ja keiner sprache
die gabitsch collector oder sonst was hat alles seine vornachteile hier muss es halt webs machen
das heißt man dürfte auf keinen fall vergessen den graben den wir oben angelegt haben wieder
freizugeben sollte man es hier einfach so anlegen ist kein problem legt er automatisch wieder an
legt man das allerdings so an dann muss man das selbst wieder frei frei also new alles was man mit
new anlegt oder maloc in c muss man wieder freigeben in dem fall mit delete oder mit
free in c sonst memory leak und f in chat genau so jetzt werden wir mal die die metode anlegen
was wir wollen ssl handshake machen mit einem scheren pointer funktioniert glaube ich nicht mit
einem scheren pointer funktioniert nicht war das habe ich das habe ich mich ausprobieren
sonst beschwerst du dich die ganze zeit über c++ also es gibt genug über c++ wo man sich
beschweren kann unabhängig von c apis und gerade interop mit c apis müsste nur wirklich
eines der steckenpferden von c++ schlechthin sein und dafür ist es an einigen stellen ordentlich
haklich ich überlege gerade was war das doch doch an der stelle könnte man wirklich ein scherz pointer
machen also anstatt dem da anstatt dem da könnte man könnte kein scherz pointer machen konnte man
nicht machen ein scherz pointer also man könnte nein könnte man nicht machen weil wenn ich den
hier oben anlege dann geht er hier dann geht er hier aus dem scope und wenn er hier aus
dem scope geht funktioniert glaube ich nicht wenn ich den scherz pointer hier anlegen wird
ist das scope hier fertig ich könnte zwar hier übergeben aber ich glaube das bringt nichts
und vielleicht geht es auch ich glaube es geht nicht ich könnte das höchstens
moveen irgendwie wobei ich da nicht weiß ob das mit diesem c zeug funktioniert
ich probiere das nicht ich lasse es einfach so weil da weiß ich hat es funktioniert so
also wir brauchen jetzt eine neue metode für händel connection der kriegt die information
über den client übergeben also sprich ip vom client status vom client und sonst was so das
ding als händel connection kann visual studio sowas wie create method oder sowas geht das hier
anders sowas wie reflektor na anscheinend nicht gut da müssen wir da müssen wir das ganze von
hand anlegen händel connection also gehen wir mal hier ruf und sagen private void händel connection
so und das braucht als parameter ein m bünd tls net context den wir einfach mal so nennen oder
den pointer ist das na wie es code kann es auch muss ein plugin installieren ok welches
gibt ja bestimmt tausende ich glaube wir machen jetzt mal eine andere playlist die
habe ich jetzt schon zum dritten mal zum dritten mal durch gedudelt
was denn ok scheint scheint halt fix brauchbar zu sein und es geht mir nicht so sehr auf den
keks so also jetzt gucken jetzt mal mit ssl handshake also sprich aktuell kann sich der
browser ja nicht hierhin verbinden und jetzt nehmen wir die verbindung von dem browser an
da geben wir hoch in händel connection und müssen als erstes mal den ssl context anlegen
das ist das wo die ganzen informationen was verschlüsselung sachen und irgendwelche aktuellen
things wie heißt es session nummern und so geduldet drin gespeichert werden also sprich
alles was man braucht dass die verbindung mit klein weiter verschlüsselt funktionieren
kann kommt alles hier in diesen ssl context rein so den muss man erstmal anlegen das ist
jetzt nichts was man immer so macht das ist halt so eine mbtls spezifische geschichte
das habe ich auch noch aus dem tutorial dass das halt nun mal so gemacht werden muss man
sonst nicht funktioniert so und jetzt können wir gucken ob das ganze funktioniert hat also
sprich mal so was hier result oder so setup und da muss man eben jetzt das hier übergeben
sprich hier stehen die informationen vom client drin aktuell also sprich irgendwelche tcp
geschichten connection also was zu der verbindung gehört und hier stehen dann die ganzen ssl
informationen für den client drin also was man zum verschlüsseln braucht so und das
muss man jetzt sagen ok nimm mal die kleinen die die die kleinen verbindung und dein ssl
context wurschtel das zusammen und mach halt ssl setup also sprich richte das mal so ein
dass ich jetzt in der ssl verbindung handshake machen kann aufbauen kann übrigens ich erzähle
euch mist das ist nämlich verkehrt ich muss den ssl context übergeben und die es stimmt
übrigens auch die config die ich vorhin angelegt habe also vergiss es weil ich gesagt habe
das kommt jetzt gleich genau result so und jetzt müssen wir checken ob das funktioniert
hat also sprich wenn das result nicht null ist null ist immer ok das ist das das ist
aber vielen libraries so und das ist auch nicht eine reine cc plus plus geschichte also viele
programmiersprachen die oder libraries die ins als als fehler code verwenden da bedeutet
es meistens null ist meistens ok und alles was nicht null ist ist meistens nicht gut
also sprich wenn ich jetzt kein ssl context anlegen konnte dann gebe ich eine fehlermeldung
aus und die copy paste das copy paste ich mir mal weil ich das nicht machen muss error message
error message brauche ich noch copy paste ich mir auch mal das habe ich nämlich im
vorfeld schon mal gebastelt und zwar ember tls gibt ganz ultra kryptische fehlermeldung aus also
sowas wie ssl setup failed minus 582179 so und dann soll dann irgendeiner was dran erkennen
glücklicherweise haben die eine möglichkeit eingebaut nämlich mit dieser geschichte ember
tls error dem übergibt man einen error code einen buffer und eine länge und dann wandelt
er diese kryptische kryptische error fehlermeldung um in eine lesbare fehlermeldung was wir dazu
noch machen müssen ist allerdings ember tls error einbinden dann sollte es eigentlich
funktionieren sehr gut exzellent jetzt haben wir schöne fehlermeldung und er schreit ja auch
fett in rot wenn das nicht funktioniert ja und deswegen müssen wir danach auch sagen wenn wir
kein ssl setup machen konnten dann hier raus aus der funktion weil da können wir nicht weiter
machen ist klar wir können ja keine ssl verbindung aufbauen wenn es am anfang schon gescheitert ist
und danach kommt er dann wieder hier raus und macht ihn free das wichtig sonst sonst in your face
memory leak ich glaube ich probiere das nachher mal mit dem shared pointer ob das wirklich
funktioniert wie gesagt ich glaube das funktioniert nicht ich bin nach flow 690 wenn du heute
ein stream mitgekriegt hast ich bin definitiv kein c++ fanboy also ich bin das letzte wirklich das
allerletzte was ich wäre c++ fanboy es gibt halt keine andere möglichkeit wie viel den kram
sonst programmieren wenn ich mit c++ so also jetzt haben wir hier den ssl setup gemacht
du bist das grad von arbeit ich habe heute wieder übelst geflammt über c++ und jetzt kommt jetzt
kommt das eigentlich interessante so jetzt machen wir nämlich ein ssl handshake also sprich jetzt
machen wir verbindungsaufbau mit dem client hier also dass da nicht mehr dieser fehler kommt als
man wirklich ssl verbindungsaufbau der esp 32 kann lure allerdings gibt es dafür so wenig
esp 32 kannst du micro python machen lure aber hauptsächlich cc plus plus auch die ganzen
offiziellen libraries und sachen sind cc plus plus und auch die ganze die arduino geschichte
meistens auch alles c++ es gibt eine experimentelle rast implementierung und es gibt so eine low
level.net geschichte wo es aber auch keine libraries für gibt also es lohnt sich eigentlich nicht
die lure macht auch keinen spaß außerdem wie gesagt ich glaube mit lua hast du das
problem dass du auch viele sachen nicht verwenden kannst also jetzt war mein ssl handshake dazu
müssen wir vorher noch ein paar sachen machen und zwar ich copy paste mir das dann erkläre ich was
das macht weil sonst verschreibe ich mich da garantiert bei also man muss einmal das hier setzen
und zwar wenn die verbindung wieso c++ ja weil es die einzige sprache ist wo man das gescheit
machen kann ja für den controller also esp 32 musst du quasi fast schon in cc plus plus
programmieren die alternativen haben auch ihre probleme aber das also ich mache sie nicht umsonst
freiwillig in c++ da kannst du von ausgehen ich mache nichts freiwillig in c++ so was das hier
jetzt macht ist folgendes wir setzen ein timeout also sprich nach zehn sekunden wo die verbindung
nichts übertragen hat ah wlan ist abgekackt okay nach zehn sekunden wo die verbindung nicht
übertragen hat bricht er ab das ist insofern ganz wichtig weil wir haben eh nicht viel ram und wenn
ich irgendwann nach fünf verbindungen hängen habe kann ich keine sechste verbindung aufbauen
weil ich kein ram mehr habe und die verbindung machen gar nichts also wir sagen zehn sekunden
nach zehn sekunden ist schluss nach spätesten zehn sekunden ist schluss damit das ganze funktioniert
müssen wir sagen okay wir wollen nicht einfach nur senden empfangen wir wollen mit timeout das
ist alles was das hier macht also sprich das setzt ein timeout gut und jetzt kommt jetzt kommt
der eigentliche nackpunkt jetzt machen wir ein ssl handshake da überlege ich nur grad wie man
das am besten machen m wird tls handshake ssl und dann ist wieder das gleiche wenn das ungleich
null ist dann hat es funktioniert so ist die so ist die einfache variante also sprich man guckt
man macht einen ssl handshake guckt ob der ungleich null ist und dann ist gut ob der null
ist dann ist gut wenn der ungleich null ist dann gibt es einen fehler die sache ist jetzt nur die
dass das leider ein bisschen komplizierter ist man kann sich das hier auch im im offiziellen
example mal angucken wenn man sich hier den handshake anguckt die machen das in einer
schleife und zwar es könnte ja sein dass der client wenn ich das hier aufrufe ssl handshake
dass der client noch gar nicht genug informationen geschickt hat dass ich überhaupt einen ssl handshake
machen kann also stellt euch vor mein client ist kein 8700k desktop cpu sondern irgendwie was noch
schlechteres noch langsameres und er hat jetzt einen verbindungsaufbau gemacht aber noch gar
nicht genug daten geschickt dass ich überhaupt den ssl handshake machen kann dementsprechend machen
die das hier in der schleife und sagen okay wir machen so lang ssl handshake wie ich wieder client
noch sachen zum schrei mir sachen schicken will oder mir sachen oder oder ich sachen von ihm lesen
will und wenn das nicht der fall ist und trotzdem fehler dann kacken wir ab und dann gibt es eine
fehlermeldung also sprich die hab die behandeln den fall hier halt auch dass der client lahm ist
und das ist nicht verkehrt das sollten wir auch machen deswegen koppeln copy und paste ich mir
das auch mal mehr oder weniger aus dem beispiel fast eins zu eins raus wir können jetzt folgendes
machen wir können sagen okay wir machen so lange ssl handshake so lange ssl handshake ungleich
null ist ungleich null heißt irgendein fehler beziehungsweise irgendwas was nicht okay bedeutet
null bedeutet okay dann können wir weitermachen also sprich wenn ssl handshake okay gleich null
ist dann mache ich weiter also hier unten wenn es ungleich null ist dann gucke ich nach ob es
vielleicht bedeutet der klein möchte noch was schreiben beziehungsweise ich möchte dem klein
noch was senden umgedreht der klein möchte ich möchte vom klein noch was lesen oder der
klein möchte mir noch was senden wenn das der fall ist dann mache ich einfach so lange weiter bis
ich alles gelesen habe und alles dem klein geschickt habe was ich brauche dass ich den
ssl handshake machen kann so ist das nicht der fall dann kacke ich ab mit einem fehler und wir
müssen mal wieder die sachen freen weil ansonsten halt memory leak da machen wir return das heißt
wir kommen wieder hier unten raus und räumen auf und nehmen die nächste verbindung an und haben es
beendet so aber wir hoffen ja dass der ssl handshake funktioniert so und deswegen geben wir mal
hier irgendwie was aus handshake okay weil wir wissen wenn wir hier ankommen hat der ssl handshake
funktioniert dann müssen wir noch der form halber zwei sachen machen dass der klein nicht hängen
bleibt das ist auch recht wichtig wir müssen sagen okay wenn die verbindung beendet ist also
wenn ich fertig bin mit dem klein dann sage ich hier mach mal verbindung zu weil ansonsten bleibt
der bleibt ja unendlich lang hier hängen was auch nicht schön ist und danach machen wir wieder
sauber und jetzt ablauen wir das mal gucken ob das scheiß funktioniert
haas joho sagt ich mache gerade freiwillig t++ und opengl und das trex teil macht einfach
nix das ist ganz toll exzellent aber du hast ja aber auch eine tolle kombination ausgesucht
so jetzt schauen wir mal ich schieb mal die konzili schieb mal meine konsole hierüber dass
ich was sehe und jetzt gucken wir mal jetzt gucken wir mal ob der ssl handshake funktioniert
ja nee oder das ist schlecht
das hat nicht funktioniert das ist schon mal nicht gut weil jetzt weiß ich nicht warum
doch doch ich glaube das hat funktioniert es kam bloß keine antwort kann das sein okay
dass das das müssen wir uns jetzt genauer angucken wir gehen jetzt mal mit open ssl ran
open ssl boah fuck das weiß ich auch gar nicht open ssl handshake test irgendwie es klein
connect oder sowas das weiß ich doch aus dem kopf nicht wie der kram funktioniert genau
das thomas krenn wiki weiß das bestimmt ja das hier suche ich genau das da das da suche ich
thomas krenn wiki ist bescheid
so connected sieht doch eigentlich ganz gut aus
nee das sieht nicht gut aus das hat nicht funktioniert ok warum nicht es hat aber auch
kein fehler gegeben hier und das hat auch gesagt gibt doch kein fehler es gibt auch kein fokus
ok es gibt es gibt kein fehler habe ich irgendwas vergessen handel connection fd trs klar es gibt
kein fehler aber wo hängt er dann jetzt da gibt irgendwas nicht frei ok irgendwas habe
ich verkehrt gemacht kommst du aus der inneren weilschleife raus ja das das die vermute habe
ich auch dass ich irgendwo hänge drin drin hängen wir machen also mal gutes altes printf
debugging na gut das hier muss funktioniert haben sonst wobei ich mache sie auch ich mache
über mein was dahinter ok upload kannst du ob auf dein controller nachsehen ob der überhaupt
ist naja verbindung geht ja hier oben siehst ja verbindung geht auf 443 auf 443 3 also die
verbindung klappt aber der ssl handshake klappt nicht
was da geht da gar nicht rein ach oh leute ich weiß nee moment was what the hell warum
geht er da nicht rein der muss doch in der muss doch hier reingehen in die funktion wenigstens
moment moment moment er macht gar nichts der geht da gar nicht rein warum geht er da nicht
rein was hat er für schmerzen face gesicht neun monate dankeschön big brain big brain
manager huge face head was auch immer warum geht er da nicht rein what the fuck warum da
geht er überhaupt nicht rein auch visual studio court please nicht abkacken jetzt habe ich
irgendwas vergessen task run task startet er den task überhaupt kannst du mir das programmier
beibringen ja 350 euro die stunde eats nee aber du kannst natürlich öfters mal hier
im stream vorbeigucken vielleicht lernst du das eine andere das kannst natürlich ruhig
machen wenn du fragen hast kannst mich auch fragen aber also was mir geschützt wird das
programmier beibringen wird ein bisschen schwierig what the fuck will er mich verarren was ist
das okay moment also jetzt blick ich blick ich den mal durch was ist eine schleife
ich wollte jetzt den doofen spruch mit schleife machen weil die gar weil ihr wisst ja schleife
ist ja meine meine beliebteste sache wo ich mich dann immer am anfang ein bisschen drüber
beschweren kann bei den meisten leuten unser zu wie kam ja auch letztes damit schleife
okay das funktioniert moment das ging doch eben noch nicht trace ist gibt die aktuelle
zeile aus wo er was macht das habe ich mir selbst zusammengestrickt jetzt funktioniert
es irgendwie so 108 108 ist das da das funktioniert innet except aber das verbindung annehmen geht
nicht das verbindung annehmen geht nicht guck mal 108 was was warum geht ich blick ich den
mal durch warum geht das nicht okay ich habe keine ahnung warum das nicht funktioniert
ich meine die schleife läuft ja offensichtlich kommst du aus hessen ja richtig komm ich die
schleife läuft ja offensichtlich und die hängt hier auch weil ansonsten würde ja nicht immer
wieder wenn ich eine verbindung aufbauen aber aber die except nicht okay anders ich glaube
ich weiß woran es liegt ich glaube ich weiß woran es liegt ich bin total bescheuert lul
lul leute seht ihr es richtig richtig hängen geblieben guck mal
ich muss gucken ob das auch null ist ansonsten ist null ja falls und falls heißt alt else
ja pass mal auf jetzt funktioniert es was so geier ist miesra motor ich habe keine nachgut
motorindustrie software reliability association okay flow 96 was sagt miesra dazu erhelle
uns außer händewaschen wahrscheinlich sagen gerade alle so pass mal auf jetzt geht's easy
jetzt funktioniert es also was der jetzt sagt ist mein zertifikat ist falsch das ist aber
in ordnung mein zertifikat ist ja auch falsch kann es übrigens mal ignorieren bei der guck
ssl handshake bamb funktioniert hier haben wir übrigens mein tolles zertifikat und zwar
für keck weh ausgestellt von der ca 0w irgendwo steht drin also jemand zertifikat ssl schäder
funktioniert sehr schön ja aktuell ist es wirklich so if error except was ja keinen
sinn ergibt ich finde es aber gut dass es ist ich finde es beeindruckend dass das nicht
dass sie das so gut programmiert haben dieses mbc tls dass es nicht abkackt weil ich meine
ich habe hier was total ungültiges übergeben im endeffekt ok dann also weiß ich woran
es liegt jetzt kann ich mein ganzes trace wieder rausnehmen excellent übrigens diese
trace funktion die ist so eklig programmiert die will ich euch nicht zeigen aber es schon
cool dass es die aktuelle zeile anzeigen kann ok jetzt erklärt uns der flow 690 bz
hier wie es richtig geht und zwar bei misra muss bei einer if schleife ok ich gehe davon
aus dass es absicht zuerst die konstante dann die variable kommen beispielsweise if true
gleich gleich x und nicht if x gleich das ist eine gute idee das ist eigentlich gar
nicht so verkehrt das finde ich nicht schlecht welche im leben wahrscheinlich nicht machen
so wie ich mich kenne aber finde ich nicht schlecht hast du die preview von c sharp neu
gesehen ich habe morgen viertel stunde von zum 2 stunden video geguckt aber nicht lange
wir können wenn ihr wollt wenn ich wenn es mir mal wieder danach ist wir können mal uns
das angucken hast du ein gutes video dazu ich habe nur so ein webcast gesehen wo sie
so 2 stunden rumgelabert haben ich kein bock haben weiterzukommen stream ideen sie schatten
9 features so eine blog post auch gut aber ich muss da sagen flow 690 die idee finde
ich nicht schlecht ich nehm mir einen
wir haben ja nicht skin
C-Standard unklar spezifiziert sind. Zum Glück nicht im C++-Standard, weil da
du kannst es umgedreht machen, was ist da klar, sodass der Hersteller des Compilers
eine eigene Interpretation wählen muss. Eigentlich gut, ja, gefällt mir.
Find ich gut. Und ich find's auch in dem Fall gar nicht so blöd. Normalerweise sagt man ja
immer so, ah hier gleich gleich true und sowas, ah nee, oder gleich gleich voll sowas,
schreibt man ja nicht. Aber ich muss sagen, in dem Fall finde ich gar nicht mal so doof,
wenn halt in dem Fall der Return-Code eben nicht ganz klar True-False ist,
sondern ein Int. Und dann ergibt das tatsächlich Sinn. Na klar, ich meine,
wenn die Funktion schon gleich True-False zurückliefert, ob man weiß ob die jetzt
funktioniert hat oder nicht, dann kannst du einfach den ganzen Kram weglassen,
aber in dem Fall sind es ja Ints. Ja, ist eine gute Idee, finde ich nicht verkehrt.
So, aber mal unabhängig davon. Es hat funktioniert, seht ihr? Ah nee. Ja, Handshake,
Bam, Handshake, okay. Hat funktioniert, Poggers. Also Verbindungsaufbau klappt und da kann ich
meine 50 Milliarden Trace-Sachen auch wieder rausnehmen. So, alles Fott, weg, weg. Können
wir noch so ein globales Flag irgendwie mal setzen, dass der Trace das automatisch rausschmeißt.
So, wunderbar. In meine Main, werde ich das übrigens mal ein bisschen anders machen.
Den Heapspace, den müssen wir unbedingt mal in Orange machen. Ich bin da gerade,
das ist ein bisschen mehr Farbe. Ja. So, wie machen wir denn jetzt weiter, Leute? Eigentlich
habe ich übelst Hunger, wisst ihr das? Und mein Brain macht auch langsam nicht mehr weiter mit,
aber eine Sache würde ich noch machen, nämlich wir liefern mal ein bisschen. Also wir haben
jetzt ja so lange rumgewurstet. Ich will noch eine Webseite ausliefern. Ich will noch eine
Webseite ausliefern. Einfach nur HTTP 200. Okay, hast du einen Link reingeschickt? Ja,
na, heute gucke ich, ich bin zu low-primit, das heute anzugucken. Das müssen wir in einem der
nächsten Streams machen. Falls ich es vergessen soll, du kannst mir ruhig nochmal Bescheid sagen,
wir machen das. Mich interessieren nämlich die neuen Features auch. Wir gucken uns hier auf
jeden Fall im, ich schreibe sie mal auf hier, C++ neuen Features. Gucken wir uns das an. Und
wenn nicht, und du bist im Stream, kannst du mir ruhig Bescheid sagen, weil dann gucken wir uns
in der nächsten Stream an, wenn wir ein bisschen C-Sharp machen. So, ihr guckt mal, habt ihr es
gesehen? SSL Handshake failed. Das ist, wenn ich die Verbindung anfange und dann abbreche.
Sogar die Fehlermeldung funktionieren. Excellent. Excellent. Musik ist ein bisschen laut jetzt.
So, und jetzt will ich noch mal eine Browser, ich will noch mal eine Webseite ausliefern. Das
probieren wir jetzt noch mal aus. Also, wir haben, ab hier steht die SSL-Verbindung. Das
bedeutet, ab hier kann ich lesen aus der Verbindung. Ich kann lesen aus der Verbindung. Also, das heißt
sowas wie MBITT-TLS-READ oder sowas. Nein, SSL-READ. So, was ich da jetzt rüber rauskriege,
ist ganz normales HTTP. Also, da kommt jetzt ein GET. Also, das da kriege ich im Endeffekt.
Ah, nee, ich sehe es. Moment, ich zeige euch, was ich jetzt lesen will. Einlesen will. Oder
auch nicht. Was hat er für Schmerzen? Hallo? Ah, jetzt. So, ich will das hier einlesen. Guckt,
GET. Wir machen ein GET-Request auf slash im Endeffekt. GET slash. So, ich habe jetzt ja TCP-Verbindung
aufgebaut. Darüber eine verschlüsselte SSL-Verbindung. GitHub CLI, was ist das denn?
Git hat eigentlich eine ziemlich gute Kommandozeile. Sebaro, ja, genau so ist es.
Und jetzt kriege ich eigentlich hier normal diesen Text drüber. Also, das ganz normale
HTTP-Request kann ich jetzt hier drüber einlesen. So, also, machen wir mal MBITT-SSL-TLS-READ. Als
erstes brauchen wir den SSL-Kontext. Den braucht man immer für alles in MBITT-TLS. Wo ist er? Da
ist er. Und SSL. So, und wie geht es jetzt weiter? Buffer-Size-T-Length. Mal Frage an die C++ und
C-Leute, falls hier der ein oder andere da ist. Was bevorzugt ihr in diesem Fall? So was hier.
So was hier. 2048. So was hier. Oder, was ja auch eine Möglichkeit ist, in C++.
Das geht ja auch. Also, wie gesagt, es gibt einmal die Möglichkeit, das so zu schreiben.
Also einmal die Möglichkeit so zu schreiben. So. Oder die Möglichkeit, das so zu schreiben. Ich
glaube Size. Was ist davon besser? Das zweite sieht doch super aus. Sebaro, ich höre da irgendwie
so ein bisschen raus bei dir. Das zweite hat seinen Charme insofern, weil man hier die Size
direkt abfragen kann, aber nach dem es in der Zeit ist, kann ich einfach die Zahl doppelt schreiben.
Das C++-Cremium mag mit Sicherheit das zweite. Übrigens eine Sache, wo man auch wieder sieht,
finde ich, dass das Ganze, was das C++-Cremium mag, nicht immer so hundertprozentig durchdacht
ist. Man kann ja mit Standard-C-Arrays kann man ja sowas hier machen. Size, keine Ahnung, 2084.
Oder kann ich sowas hier machen? Sowas kann ich hier nicht machen. Also ich kann quasi,
nennen wir mal, dynamischer Wert kann ich quasi einen Array initialisieren oder Länge anlegen.
Const exp geht dann. Was? Echt? Ja gut, dann ist es ja zur Compile-Zeit. Dann ist es ja zur
Compile-Zeit. Ich meine ja, wenn man das einliest jetzt. Also zum Beispiel, es gibt ja jede Menge
Passing-Funktionen. Pass, bla bla bla. Und das gibt dann irgendwie eine Länge zurück. Und wenn ich
jetzt das hier anlegen will. Na gut, das ist jetzt ein doofes Beispiel, weil das gibt nichts zurück.
So und das wird funktionieren, wenn ich das mache in C. Allerdings in C++ geht das mit
dem Standard-Array nicht. Es ist klar, dass es nicht geht, weil es sind Template-Parameter.
Template-Parameter müssen zur Compile-Zeit feststehen. Ja, aber wie mache ich das denn dann?
Also mal angenommen. Also mal angenommen, ich bräuchte das jetzt. Ich meine klar,
ich kann einen Vektor machen. Das ist mir auch klar, das funktioniert. Wobei das dann hier
wieder schwierig wird. Wie würde ich das denn mit einem Vektor machen? Also sagen wir mal hier 2048.
Zack. Das ist nicht Standard. Okay, also das heißt, ich habe Glück, dass der GCC das frisst,
in dem Fall hier jetzt. Oder wie? Ja, also wie gesagt, mal angenommen. Mal angenommen. Okay,
wir machen das jetzt mal als Beispiel. Also mal angenommen, ich habe hier wirklich sowas. So und
das ist halt eine Parsing-Funktion, die gibt mir irgendwie zurück, wie viel Zeichen gelesen wurden
oder so. Irgendwas ist jetzt auch egal. So und also sprich, das ist dynamisch, je nach Input.
So, fangen wir erstmal an der Stelle an. Wie würde man das den C richtig machen? Also,
ich habe jetzt Glück, dass mein GCC, also wenn ich euch richtig verstanden habe,
ich habe jetzt Glück, dass der GCC das macht. So, mal angenommen. Ich will das jetzt,
ich will das jetzt machen. Also, mal angenommen, mein GCC könnte das nicht. Dann würde ich dann
sowas hier machen. Nur mal so. Nur ich habe keine Ahnung davon. Interessiert mich jetzt,
wie man es sagt. Alter, ist ja gut. Und jetzt irgendwie, keine Ahnung. Len mal size of, ja gut,
was ist es in dem Fall? Sowas hier, oder wie? Also, müsste ich dann in der Richtung machen,
oder? Ja, stimmt. Also sprich, so ist dann quasi die offizielle Variante. Ja gut, ob das jetzt auf
dem Stack liegt oder nicht, ist mir ehrlich gesagt ziemlich wurscht. Ich muss mich in dem Fall eh so
und so drum kümmern, dass ich selbst aufräume. Also, kommt mir ja nichts. Also, wo ist es dann
speichern? Juckt mich nicht. So, genau, in C kann ich new machen. Das heißt, in dem Fall müsste
ich jetzt das da machen. So müsste ich aufräumen jetzt wieder. So, ich meine, das ist jetzt
natürlich böse, weil klar. So, so rum. Also, jetzt müsste ich wieder aufräumen. Sprich,
das wäre die Variante, wenn mein GCC das nicht kann. So, ok. Also, so, und in C++. Und in C++
mache ich jetzt was? New uint. So. Würde das funktionieren? Ja, klar, mit dem Vektor geht's,
ist das klar? Das geht, ok. Ok. Und das geht jetzt auch nicht nur, weil ich GCC habe, sondern
das ist jetzt quasi C++ standardmäßig. Das ist ok, oder wie? Danach müsste ich mal wieder
aufräumen. Wenn mit dem Vektor ist, wie gesagt, mit dem Vektor ist klar, dass das funktioniert.
Wobei, was mir bei Vektor nicht ganz klar ist. Ich meine, ich glaube, wir machen das
jetzt mit Vektor. Also, was denkst du hier? Bovver. Wobei, das kann man ja auch schon
wieder so und so anlegen, ne? So. So, wie sage ich dem denn jetzt, dass er, warte mal,
da hat doch, da hat doch irgendeiner Travorekt, da hat doch gerade irgendwas im Chat geschrieben,
wie das funktioniert. Kann leider nicht richtig scrollen, weil es irgendwie sackt. Ähm, ja,
das ist offiziell C++. Ach, ok, man schreibt direkt die Size dahinter. Also, so was,
was ist das hier dann? Excellent. Und da Data. Ok, so wird das funktionieren? Wird das so
jetzt gehen? Ich mein, den muss ich jetzt ja nicht löschen, ne? Der räumt ja automatisch
wieder auf. Also, ok, also sprich, das ist dann, das hat dann die Länge. Also, in dem
Fall, sag mal mal, hat das dann, wir schreiben es jetzt mal rein und machen das sinnlose
Pass hier oben wieder weg. Ähm, also sprich, das wäre dann ein Vektor mit 2048 Nuller.
Ja, das ist eigentlich auch ok, warte mal. Da kann ich sie jetzt gar nicht dafür flamen,
großartig, das ist in Ordnung. Da kann ich, das ist in Ordnung, da kann ich mitleben,
das ist ok. Ähm, da probieren wir auch mal gleich aus, ob das Ganze funktioniert. Also,
jetzt müssen wir allerdings aufpassen, wenn wir hier was einlesen. Du kannst den Namen
Vektor flamen. Ja, das stimmt. Wie würdest du es nennen? So, so, so Dynamic Array oder,
oder wie würdest du es nennen? List? Oh, List, List, wie in, äh, wie in, äh,.net
könnte man es nennen, ja. Genau, Tommy, könnte man machen, aber pff. Weil, mit List könnte
ich jetzt auch eher was anfangen als mit Vektor, ehrlich gesagt. Denn Vektor ist für mich
eher sowas, wo es, äh, von irgendwie umgeschwindig, um Beschleunigung von Punkt A nach B oder
irgendwie sowas geht oder sowas. List ist auch schwarz. Äh, ja gut, ist ja auch, ist
ja auch egal. Also, zumindest es funktioniert. Äh, xxminifinixxx sagt, ich programmiere
in C ein Programm für einen, für meinen NXT-Roboter. Er hat aber noch ein Problem
mit kleinen Kurven. Könntest du mir helfen? Oh, nee, da hab ich gar keine Ahnung. Ist
das Lego? Übrigens, ihr habt's gesehen. Ihr habt's gesehen, der Browser ist der Meinung.
Da kommt ein SSL-Zertifikat. Äh, NXT-Roboter. Ist das Lego? Ah, Mindstorm ist das. Nee,
nee. Kein Schimmer. Hab ich noch nie was mitgemacht. Keine Ahnung. Machst du es einfach, weil es
dich interessiert oder machst du das für den Markt jetzt in der Schule? Aber ich hab,
ich hab, so und so hab ich absolut keinen Plan davon. Okay, also, wir lesen, wir lesen
das jetzt ein. Ähm, so, jetzt, jetzt muss ich mir mal überlegen. Also, Moment, wie,
wie, wie, wie, Example, Example, äh, Read. Okay, Read. Ei, was machen die dann hier?
embed tls read
Verstehe
Die lesen quasi so lange ein bis der klein nichts mehr schickt
Denke ich mal dass die dass es so was in der richtung ist so und da müssten wir den htp request request rausbekommen
Okay, also ich mache mal die einfache weil wir lesen jetzt mal ein bis das hier gleich null oder was ist
ähm
Ne
Moment was gibt es zurück?
Return, boah alter, die haben aber
Dokus as fuck hier positive numbers of bytes read also sprich es muss größer null sein
Nein
Also sagen wir mal okay größer größer null größer null wenn sie größer null ist dann habe ich was eingelesen alles klar
Achso moment das muss ich mir
Moment das muss ich mir speichern weil ansonsten kriege ich ja kriege ich ja die länge nicht raus
Länge so wenn die länge größer null ist
Ja tommys könnte ich machen aber also irgendwelche typedefs noch mal um fünf ecken finde ich machen die ganze sache noch komplizierter
Als einfach die die typen zu verwenden auch wenn sie blöd benannt sind
So also länge wenn die länge doch größer größer null ist dann habe ich was eingelesen größer gleich nur ist im prinzipiel auch
Okay, dann hat der klein nix geschickt
Und nun gebe ich das doch einfach mal aus würde ich sagen
Okay, gebe ich das doch einfach mal aus also was ich jetzt erwarten würde was der hier ausgibt ist
das art of the house also quasi kommt zu zumindest teilweise weiß ich aber ein Stück einlesen kann
Eigentlich müssen wir das ja auch in der schleifereien lesen weil ansonsten
Erhört einfach mittendrin auf aber mal gucken wie weiter einliest und jetzt müssen wir sagen jetzt brauchen einen string
Vor einem buffer aber wenn ich das ganz falsch liege kann man das so machen
Kann man nicht
Warum nicht?
Ach so, ich glaube das liegt daran, weil es Char sein muss. Kann das sein?
Moment.
Das nicht?
Ich meine, ich könnte einfach tricksen, weil ich habe schon mal nachgeguckt, wie das geht
und habe einfach mir was gebastelt. Mal gucken, wie ich das gemacht habe.
Wieso? Das ist doch richtig, was ich da gemacht habe. Guck mal da. Genauso habe ich es auch gerade gemacht.
Ah, ist das kein Int? Da ist auch ein Int.
Ach, das ist ja ein Vektor, da muss ich datake. Natürlich, ja klar. Aha, richtig. Stimmt ja.
Ja, klar. Aber jetzt müsste es eigentlich funktionieren.
Ich, ich upload einfach mal und gucke, ob es funktioniert. Das zeigt bestimmt einfach nur Mist an. Oh, nee. Monkeys.
Ach, der Cast, genau.
Bei der Gelegenheit.
So, jetzt, jetzt, aber jetzt, jetzt funktioniert es. So, und jetzt gucken wir mal, was wir da eingelesen haben.
Bäm, hier, der HTTP Request am Start. Exzellent. Funktioniert.
So, und jetzt bleibt uns nichts anderes übrig. Wir haben jetzt den HTTP Request eingelesen, haben festgestellt, dass es ein Get Request ist.
Das sparen wir uns jetzt alles, weil ich weiß, dass es ein Get Request ist, weil ich mach den Get Request selber.
Und jetzt antworten wir mit einer Webseite, mit einer, mit der simpelsten Webseite, die man sich nur vorstellen kann, antworten wir jetzt.
Und zwar schicken wir da jetzt folgendes zurück.
MWTLS write, SSL write. So, Buffer und Länge. OK. Also, HTML. Nee, nicht HTML. Spons. Da ist ja noch Zeug drin.
Was, was, was müssen wir jetzt sagen? Da krieg ich jetzt HTTP slash 1.1200. OK. So, und dann immer, immer, immer, immer schön Ctrl-R, Ctrl-N.
So, dann brauchen wir als nächstes, so ist die Content-Type, Content-Type.
Content-Type, was ist das Text? Text-HTML.
Auto. Ja, warum nicht Auto? Auto Beste. Warum soll ich den Kram von Hand schreiben?
Was ist Ctrl-R? Das ist Carriage Return. Das ist auf einer Schreibmaschine das Zurückschieben des Schreibkopfes.
Das klingt bescheuert, aber daher kommt das.
Deswegen ist ja Newline unter Windows. Falls ihr euch schon mal gefragt habt, warum Newline unter Windows das hier ist.
Das liegt daran, weil die Schreibmaschine, die Schreibmaschine macht, für eine neue Zeile macht die Schreibmaschine,
zurück auf Null schieben und dann eins nach unten drehen.
Und deswegen hat sich Microsoft gedacht, das ist es, was wir in Windows auch brauchen.
Ja, übrigens, Cheat95, das ist die beste Erklärung. Die ersten Terminals waren ja Drucker.
Also sprich, das was ihr hier seht, dieses Terminal, das ist ja, deswegen nennt man das ja auch Terminal Emulator.
Das ist kein Emulator im eigentlichen Sinne, wie jetzt irgendwie ein N64 Emulator.
Es ist aber kein richtig echtes Terminal oder auch kein richtig echter Drucker in dem Sinn.
Die ersten Terminals waren Drucker und da war das halt wirklich so, da musstest du zum Schreiben sagen,
ok, Drucker, Kopf nach links und nächste Zeile. So, und deswegen gibt es ja auch noch die Steuerzeichen für.
Das Backslash R ist Carriage Return, das ist das Steuerzeichen für Schreibkopf von der,
wie nennt man das, Schreibleser, nee, Schreibkopf von der Schreibmaschine nach links zurückschieben
und dann kommt nen Backslash N, das ist das Zeichen für Newline.
Andere Leute waren da ein bisschen fortschrittlicher und haben gesagt, ok, auf dem Computer reicht uns Newline zu verwenden.
Weil, naja, gut, Carriage Return gibt es da halt nicht so, wenn man hier sowas hat, aber daher kommt das.
Und bei HTML ist es halt, bei HTTP ist es halt nun mal im Protokoll so definiert,
dass die einzelnen Abschnitte eben mit Carriage Return Newline beendet werden.
Also sprich, das hier ist eigentlich die HTTP-Response.
Erst der Header, zweiter Header drin und alles muss Carriage Return Newline getrennt sein
und am Ende kommt ein Carriage Return Newline, Carriage Return Newline, dann ist es fertig.
Stimmt, Windows kann das mittlerweile auch, ja.
Und wir können jetzt übrigens noch mal eine richtig Big-Brain-Geschichte machen.
Wir können nämlich noch sagen, charset gleich utf8.
So, das ist dann noch besser.
Dann kommt der Browser gar nicht auf die Idee, das in irgendwelchen komischen Encodings anzuzeigen,
sondern utf8 bleibt einfach utf8 und ist utf8 und gut ist.
So, das ist die Response und jetzt kommt das HTML rein.
Ich glaube aber, dafür muss man erst mal sagen, dafür muss man das hier erst mal abschließen.
Genau, das ist quasi Response und Header und jetzt kommt der eigentliche Content.
Also, HTML, grandiose Seite gibt das jetzt, body, body, cute, cute chat, aiaia, so.
Und da schreiben wir jetzt, Response.
Wisst ihr was, ich bin faul.
Wobei, ich weiß, ich weiß, ich weiß, da schreien die C-Leute jetzt.
Ich meine, man kann auch einfach sowas hier machen, Response und strillen, strillen kann man machen.
Ach, das geht auch.
Äh, ups, doch nicht.
Äh, also, Moment, unsigned, const unsigned char.
Aha, so, einfach mal weggecastet, gut, so muss das sein.
So, upload und jetzt schauen wir mal, ob deine Webseite zurückkommt.
Übrigens, ich hätte jetzt einfach den Arduino-String genommen dafür und nicht strillen.
Chat, ich muss mal kurz das Fenster neu laden.
Und dann gucken wir mal, ich guck mal, irgendwas hat das Sebaro geschrieben, ich kann nämlich
gerade nicht hochscrollen.
Okay, also, seit der Umstellung von VDSL und letztens auf SVDSL habe ich seit eineinhalb
Jahren eine Störung, das DSL immer abbricht, mittlerweile wurde die Störung gefunden, 24
Volt Fremdspannung, machen die Leute denn da, hat da irgendwie einer ein Licht angeschlossen
oder so.
Was ist denn so eine typische Sache, 24 Volt, Akkustaubsauger laden oder so, nee, das ist
eigentlich mehr, halbes PoE, macht da, holt sich da einer irgendwie PoE-Lite raus oder
so aus der Telefonleitung.
So, jetzt gucken wir mal, ob eine Webseite zurückkommt und es kommt eine Webseite zurück
und jetzt gucken wir mal, ob es funktioniert.
Jetzt kommt der Moment der Wahrheit im Browser, okay, übrigens mein Zertifikat ist natürlich
Müll, ihr seht es ja hier, also, CACW, Organisation Unit, CACW, sonst was, also das Zertifikat
ist totaler Müll, kein Wunder, dass das dann funktioniert und das Zertifikat ist auch
für einen anderen Host ausgestellt und alles.
So, okay, wir, wir, wir accepten, we accepten the risk and continue, und bam, cute chat,
aiaia, wir haben eine, wir haben eine eigene Webseite über, einen eigenen Web-Server über
HTTPS ausgeliefert.
So, und jetzt ist es natürlich einfach, da mehr drüber auszuliefern, also, also wenn
ich jetzt cute chat darüber ausliefern kann, kann ich da noch mehr drüber ausliefern,
wir probieren jetzt mal was, wir probieren jetzt mal was, passt mal auf, passt mal auf,
wir machen jetzt, wir machen jetzt das nächste, und zwar, wir legen jetzt hier unter data
mal eine neue Webseite ein, index.html, so, und da legen wir, wir machen jetzt dort eine
richtige Webseite, richtig, in Anführungsstrichen, ne, so, 0W, ja, ja, das ist alles okay, und
ich brauche ein 0W-Bild, ja, 0W, perfekt, ja, 0W, nein, nein, nein, nein, keine halbnackischen
Twitch-Mädels, das brauchen wir jetzt nicht, ich brauche ein Bild, ich brauche ein Bild
zu 0W, ja, 0W, perfekt, View Image, so, Image, Source, 0W, exellent, haben wir ein schönes
Bild, muss man eigentlich Images so beenden, oder geht das auch ohne, so, dann machen wir
noch eine Überschrift, H1, Omega Lul, so, und diese Seite liefern wir jetzt aus vom
Flash, diese Seite liefern wir jetzt aus vom Flash, das wird, Leute, das wird big brain
jetzt, dass das funktioniert, so, also wir brauchen erstmal ein Terminal, Terminal,
Upload, also ich habe jetzt eine Webseite angelegt, die wahnsinnig wirklich High Octane
Inhalt hat, wir können übrigens, ich schaue mir mal kurz an, ob die Webseite an sich überhaupt
funktioniert, Platform, Documents, Platform IO, Projects, Web Server, Data, Chrome, habe
ich nicht drauf, Chrome, Index, HTML, ok, die Webseite funktioniert prinzipiell, jetzt
müssen wir nur gucken, dass wir die vom ESP ausgeliefert kriegen, so, Webseite abgeloadet,
Webseite abgeloadet, und nun gucken wir mal, so, Response hier ist klar, die Response brauchen
wir nach wie vor, allerdings der Inhalt, den brauchen wir noch anderes, noch andere Inhalte,
so, dann sagen wir Helper, read file from spiffs, ähm, als, keine Ahnung, String, oh, ich hoffe,
das was ich da gebastelt habe funktioniert, sonst müssen wir es von hart machen, slash
Index, HTML, also ist das was ich hier hochgeladen habe, ähm, zack, das ist jetzt HTML, Distortion,
Dankeschön, exzellent, so, ähm, und jetzt machen wir hier noch was, jetzt sagen wir
keine Ahnung, HTML gleich, Response plus HTML, und jetzt haben wir einen String mit der Webseite
und der Response, und wahrscheinlich müssen wir jetzt noch mal hinten dran, carriage return
newline, carriage return newline machen, denke ich, weil das funktioniert, das ist jetzt
aber einfach nur geraten, und jetzt schicken wir das ganze mal, ob das jetzt funktioniert,
was ich mir da gerade vorstelle, jetzt bin ich echt gespannt, ob das funktioniert, also
wir lesen jetzt die Datei, die ich gerade erstellt habe, vom Flash, und, ähm, zeigen
sie den Browser an, ich weiß ja nicht, ob meine Read Function funktioniert, die ich
hier gebaut habe, okay, jetzt, jetzt, jetzt kommt es drauf an, okay, wir testen es erstmal
mit dem Curl, ob es funktioniert, sieht sehr gut aus, sieht sehr gut aus, bam, Leute, Webseite
vom Flash Speicher ausgelesen, über den eigenen Webserver, über TLS ausgeliefert, an den Browser,
was gibt es besseres?
Also, ohne Scheiß, also, viel mehr kannst du dann wirklich in 4 Stunden streamen nicht
wollen.
So, und das nächste Mal erweitern wir das dann noch, dass der erstmal den Get Request
passen kann, und dass er einen Post annehmen kann, und Basic Ors machen wir das nächste
Mal noch, also ich muss jetzt aufschreiben, weil ich's dann vergesse, ich bin ja ganz
begeistert, also nächstes Mal mal Basic Ors, Postrequest und Request Passen, und dann
die Seite auf dem ESP-Display, ne, die Seite brauch ich nicht auf dem ESP-Display, außerdem
ne HTML-Seite auf dem ESP-Display rendern, dazu fehlt mir ne Render-Engine für den ESP,
der als HTML rendert, welches SDK ist das, was denn, achso, das ist, ich zeig's dir,
das ist ESP-IDF-4 mit Arduino als Modul, also im Prinzip ist es ein Arduino mit der Möglichkeit
ein bisschen mehr zu konfigurieren.
Mit nem reinen Arduino, ähm, geht ihr das auch ohne Probleme, dass, was dir da in die
Quere kommt, also was mir in die Quere kommt ist, dass ich ein paar, ne, das ist schon
ein ESP-32, genau, das ist ein ESP-32, das müsstest du aber auch auf dem ESP-2866 machen
können, allerdings, da machst du nicht mehr als eine Verbindung wahrscheinlich, da hat
er noch weniger RAM, also ich müsste hier so 4-5 Verbindungen maximal hinkriegen, da
ist auch der RAM vom ESP-32 voll, ähm, ja, das Problem mit dem offiziellen Arduino-Package
via Platform.io ist, die sind noch auf ESP-IDF-3.3, das ist uralt, das kann glaub ich nicht mal
C++, das kann glaub ich sogar nur C++14 oder so, das ist der Grund warum ich ein IDF-Projekt
eigentlich gemacht habe, dass ich eben die neueren Tools verwenden kann, also sprich,
dass ich ordentlichen C++17er Unterstützung habe, weil wenn schon C++, also wenn man sich
schon mit dem ganzen Kack rum ärgern muss, dann wenigstens was halbwegs neues, so, aber
das ist ja cool, also das hat jetzt echt einfacher funktioniert als ich mir das Ganze vorgestellt
hab, ich mein klar, ich will jetzt nicht so tun, ich hab es ja schon ein paar mal, ich
will es nicht so tun, als hab ich das jetzt hier einzig und allein im Stream jetzt zusammengesucht,
ich hab im Vorfeld schon ein bisschen ausprobiert, wie es funktioniert, klar, aber insgesamt
ging das doch deutlich einfacher als ich mir das vorgestellt hab, aber guck mal, da kann
man sich doch nicht beschweren, 132 Zeilen und man kann den Kram ja sogar lesen, so ist
das ja nun auch wieder nicht, also 132 Zeilen für ein bisschen statisches HTML ist doch
in Ordnung, zumal wir ab jetzt ja auch easy mehr machen können, wir haben schon ne Webseite
vom Flash ausgelesen hier und zurückgeschickt, das heißt, als nächstes, wie gesagt, als
nächstes machen wir Basic Auth, wir passen die HTTP Request und gucken, dass wir einen
Post Request für ein Update handeln können, achja und Logs ausliefern über ne Verbindung,
wobei das mit dem Logs ausliefern wird wahrscheinlich relativ simpel gehen, ich mach einfach die
Verbindung nicht zu und sende weiterhin Dinge, ich kann das ja mal kurz ausprobieren, das
schöne ist ja, dadurch, dass wir eben für jede Verbindung einen eigenen Thread aufmachen,
ist es auch ziemlich einfach, ich kommentier den Kram hier mal aus, dadurch, dass wir
für jede Verbindung einen neuen Thread aufmachen, ist es auch ziemlich einfach, hier Sachen
zu schicken, ne? So, Text, wollen wir mal Text Plane und ähm, ich glaub, das hat jetzt funktioniert,
so, jetzt machen wir hier mal ne Endloschleife und sagen, ok, wir verschicken einfach alle,
alle, keine Ahnung, 5, 5, alle, alle, jede Sekunde, jede Sekunde schicken wir jetzt mal
ne Nachricht, keck W, so und jetzt sollte die Verbindung eigentlich offen bleiben und
ich müsste jede Sekunde ne Nachricht kriegen, was ist eigentlich das aktuellste Http, äh,
irgendein Zweier, was hab ich jetzt verkehrt gemacht, achso, muss casten, ja was ist denn
nur mit casten los, hab ich nicht, haben sie nicht sogar schon was mit Http 3 letztens,
äh, Preview mäßig erzählt, ja doch, genau, genau, Http 3 ist hier grad ab, ab coming,
also wie gesagt, die sind auch schon bei 2, 2, 2 ist sogar schon mäßig verbreitet.
Ok, das, ah, Moment, Moment, ich hab ja das wichtigste vergessen, Ctrl R, Ctrl N, muss
ich noch schicken und er sollte jetzt jede Sekunde eigentlich ne Message schicken, äh,
was ist denn der aktuelle Standard, der am meisten benutzt wird, 1, 1, 1, 1, 1, 1 ist
so mit Abstand, äh, würd ich mal sagen 95% des Internet-Traffics wahrscheinlich, so
mal gucken, ob das jetzt klappt, ne, ok, es funktioniert doch nicht so, wie ich mir
das, ah doch, guck mal, hier, Leute, jede Sekunde krieg ich nen KQ geschickt, das ist
wunderbar um Logs zu schicken, äh, per Http, und die Verbindung geht nicht zu, jetzt können
wir auch gleich noch mal gucken, jetzt gucken wir doch gerade mal, ähm, guckt euch mal
den Speicher, oh der Speicher wird nicht freigegeben, warum wird der Speicher nicht freigegeben,
guck mal, der Speicher wird nicht freigegeben, achso, weil die Schleife nie endet, lull,
kann ja nicht gehen, die Schleife geht nie, ok, ähm, also, wenn hier, wenn ein Fehler
zurückkommt, ungleich Null, ungleich Null, ok, also wenn das, wenn das, äh, ungleich
Null ist, dann Break, oh, sieht das hässlich aus jetzt, ja, ja, ich wär mir den nicht
für Schönheit bezahlt, na, die Schleife eben, ich hör ja nie auf mit der Schleife hier,
kein Wunder, dass der Speicher nicht freigegeben wird, der hängt für Ewigkeiten in dieser,
in dieser Wildschleife jetzt drinne, so, Upload mal ein bisschen schneller, ich hab übelst
Kohldampf, oder wie der Karsten jetzt sagen würde, ich hab Knast, das sagt man im Osten
wohl irgendwie so, ich hab Knast, klingt, klingt eben beknackt, so, also, warum ist es
jetzt abgebrochen, solls nicht abbrechen, solls weiterschreiben, aber zumindest sieht
man jetzt, der Speicherplatz wird freigegeben, seht ihr, der Speicherplatz wird wieder freigegeben
das ist schonmal gut, nach einem Keg W bricht er ab, warum bricht er nach einem Keg W ab,
das gehört sich aber nett, na gut, dann mach ich das nochmal weg, und wir testen mal wie
viele Verbindungen, kann man zwar nur einmal testen, aber wie viele Verbindungen wir aufgebaut
kriegen, der break ist aber conditional gewesen, dass das nur abbricht, wenn er nicht richtig
schreiben kann, und der müsste einen schreiben können, weil die Verbindung noch läuft, so,
das ist das letzte was wir ausprobieren, ich will mal gucken wie viele Verbindungen ich
aufgebaut kriege, also ich tipp mal so auf drei oder vier oder maximal fünf, mehr gehen
da nicht, aber für so ein kleines Kackding, also für, ist das nicht verkehrt, ok, erste
Verbindung, geht, erste mal, zack 40 Kilobyte, na nicht ganz, 30 Kilobyte weg, so, nächste
Verbindung, zack, nochmal 30 Kilobyte weg, ja ungefähr, ungefähr 30 Kilobyte pro Verbindung,
zack, nächste Verbindung, wieder 30 Kilobyte, jetzt wird der RAM aber langsam schon knapp,
oh geht nicht mehr, ok, drei Verbindungen, mehr geht nicht, memory allocation fehlt,
mehr geht nicht, ok, aber ich mein, was willst du mehr, ja, ich denke mal wenn ich das Display
nicht finde, das Display, die ganze Display Geschichte braucht auch nochmal so ungefähr
40 Kilobyte RAM, also wenn wir die Displaysachen ein bisschen optimieren kriegen wir vielleicht
noch eine Verbindung hin, jaja brauche ich nur für mich, also das reicht wenn ich da
eins, zwei Verbindungen, zwei Verbindungen wären gut, zwei Verbindungen wären gut, weil
dann könnte ich locks mir angucken remote während ich einen Firmware Update mache,
zwei Verbindungen sind ok, der Rest ist jetzt nicht unbedingt, das muss nicht sein, exellent,
ich bin begeistert, wunderbar, Leute Chat, habe ich Fragen übersehen, wenn nicht dann
könnt ihr es jetzt noch raushauen, ich gucke jetzt nochmal durch, hast du WSL2 schonmal
probiert, ja, wenn man keine Linux VM benutzen kann ordentlich und wenn man kein Linux installieren
kann auf irgendeine andere, dann ist WSL2 nicht verkehrt, so Moment Chat, Dissortion
hat abonniert, habe ich gar nicht gesehen, Dankeschön, zwei Monate, exellent, so, jetzt
kann ich es jetzt noch raushauen, ich glaube ich habe nix übersehen, großartig, ne, WSL2
löst meine VM nicht ab, das liegt ja schon daran, dass grafische Programme nicht gut
funktionieren mit WSL, du kannst mit WSL2 zwar den X Server verwenden für Windows,
aber die X Server für Windows sind ja noch schlechter als die X Server für Linux, ne,
noch nicht, noch nicht, mein Chef hat geschrieben um 14.26, Briefing 14.30 bei mir, bin ich
ja froh, dass ich heute frei habe, im Oktober dann, an Weihnachten gibt es Cobalt Stream
und da gucken wir, da programmieren wir ein bisschen Cobalt, ich weiß gar nicht wie wir
darauf gekommen sind, irgendeiner war so hartnäckig und ich musste mich dann darauf festlegen
dass wir Weihnachten Cobalt programmieren, das wird schrecklicher, Cobalt exellent, aber
richtig ja, da brauchst du das passende Gehirn dafür, dass du Cobalt programmieren kannst,
exquisite Gehirn brauchst du da, also entweder so oder so, eins von beiden, so normale Leute
dazwischen, für die ist das nix, aber was sagt ihr denn, also ich bin ja heute wirklich,
ich bin heute wirklich zufrieden mit dem was wir hingekriegt haben, also ich sag jetzt wir,
der Chat ist ja auch immer mit dabei, ja, aber ich bin da wirklich zufrieden mit, dass
wir da einen halbwegs lauffähigen Webserver hinbekommen haben, der zwar nur statische
Seiten ausliefern kann und das auch nur auf einem Pfad, ja, weil einer url, aber ich
bin mit SSL und das funktioniert auch ziemlich gut, richtig nice, 1,7, exellent, passt ja,
das war ich eingeblendet habt, so, also Chat, wenn jetzt keiner mehr irgendwelche Fragen
hat, dann geh ich jetzt was essen und vorher geh ich mal aufs Klo, wann ist der nächste
Stream?
Morgen wahrscheinlich, ich hab jetzt ja frei, das ist, Leute ich sag euch, das ist richtig
angenehm, weil man 10 Tagen in Folge am Start war, auf der Arbeit und ohne Wochenende, 10
Tagen in Folge, jetzt 4 Tage frei zu haben, das ist ult, das kommt einem extrem erholsam
vor, nee, gibt's nicht, nein, was ich futter, irgendwas normales zum Abendessen, ich ess
jetzt kein Schnitzel oder Pizza oder so, irgendwie ein Brötchen oder sowas, gibt's auch mal
wieder PoE, ich weiß die neue Season fängt jetzt gleich an oder hat schon angefangen,
ich komm da grad nicht dazu, mich da auch einzulesen, PoE muss man immer ein bisschen
Theorie craften, ach heute um 10, nee, ich krieg das grad nicht hin, ich bin da auch
grad nicht drin, was sich da geändert hat und sowas, wahrscheinlich erst nächste Season
wieder, oder mich packts irgendwie am Wochenende noch, aber dann stream ich wieder nicht, weil
dann bin ich ja am Kreiselkraten, wir machen morgen weiter, wir erweitern morgen noch den
Webserver um Basic-Authentifizierung, um Postrequest, die Log-Geschichte und dass der überhaupt
HTTP-Request ordentlich parsen kann, exzellent, was die deutsche Telekom, was, ach so die Sponsoren,
irgendein LOL-Turnier wahrscheinlich, ja das hat die bestimmt ordentlich was gekostet,
weil das macht ja heute keiner mehr umsonst, was machen die sonst, also das, also LOL juckt
mich ehrlich gesagt nicht die Bohnen, was machen die, was machen die denn sonst so, Videos,
deutsche Telekom, Videos, was machen die sonst so, Clash Royale, what, Clash Royale, Lennarkrind,
Clash Royale, scheint voll angesagt zu sein, 4,47.000 Views, was ist mit der, warum streamt
die Telekom Clash Royale, das sind doch bestimmt keine Leute von der Telekom, das sind doch
irgendwelche eingekauften, halbwegs bekannten Streamer-Dudes, oder? Also ich kenne sie nicht,
aber das ist bestimmt kein Telekom, Leute. Ja Leute, schön, dass ihr alle dabei wart
heute, wir sehen uns wahrscheinlich morgen im Stream, machts gut, ich geh jetzt was essen,
bis dann, tschüss.
