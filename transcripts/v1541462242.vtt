WEBVTT

00:00.000 --> 00:09.600
So, schauen wir mal ob es jetzt besser funktioniert.

00:09.600 --> 00:16.760
So, mal gucken ob das jetzt besser klappt.

00:16.760 --> 00:25.320
Aaaah, ja aaah, guck mal da, meine Vorschau funktioniert, meine Vorschau funktioniert.

00:25.320 --> 00:26.320
Wahnsinn.

00:26.320 --> 00:31.480
Ich weiß nicht was da, komisch, ich meine ihr habt es ja alles gesehen, ich meine ich

00:31.480 --> 00:36.960
habe auch nur einen ganz normalen Browser, also die müsste eigentlich auch so funktionieren,

00:36.960 --> 00:37.960
aber ok.

00:37.960 --> 00:42.280
Na gut, dann können wir jetzt ja anfangen.

00:42.280 --> 00:49.080
Haskill stream, na gab's nicht, weg, Alter, wir haben schon Kobold gemacht, das sollte

00:49.080 --> 00:50.080
reichen.

00:50.080 --> 00:55.480
Ok, also was ich jetzt machen will, wie gesagt ich habe mir ein Tutorial angeguckt, was ich

00:55.480 --> 01:01.400
jetzt machen will, wir ignorieren mal diesen ganzen Blödsinn, den ich hier gemacht habe,

01:01.400 --> 01:10.080
und den ganzen Graben kopieren wir auch mal hier rein, und ja ja, das bleibt jetzt erstmal

01:10.080 --> 01:11.080
so wie es ist.

01:11.080 --> 01:17.440
Also, was ich gerne machen möchte ist sowas da, guck mal, api gleich, alert manager,

01:17.440 --> 01:27.760
ja ja, so ungefähr, new, und dann will ich sowas haben wie localhosts, so, so, geh mal

01:27.760 --> 01:39.680
weg, Ryder, so will ich das, so will ich das constructen, ja, aber, nee, so will ich das

01:39.680 --> 01:45.440
nicht constructen, so, so, so will ich das constructen, funktioniert nicht, oder sollte

01:45.440 --> 01:49.600
man das jetzt besser klein machen, Leute, was ist denn convention, sagt mal, muss das

01:49.600 --> 01:54.800
Package, sollte das Package groß sein, oder sollte das Package klein sein, der Typ, der

01:54.800 --> 01:59.480
Typ sollte auf jeden Fall, ok, dann sollte der Ordner also auch klein sein, geh ich mal

01:59.480 --> 02:05.040
von aus, so, aber der Typ muss auf jeden Fall groß sein, also ich will, also ich will sowas

02:05.040 --> 02:13.840
hier machen, new, so, das habe ich nämlich gesehen in diesem YouTube Tutorial, wie das

02:13.840 --> 02:20.880
funktioniert, und zwar, guck mal, ob ich das jetzt noch hinkriege, so, also, function,

02:20.880 --> 02:25.080
weil das das das blöde ist, ja, in.net, ich mach mal kurz Ryder auf, so, mal so zum

02:25.080 --> 02:37.240
Vergleich, ja, postchamp.cs, jawoll, dadurch den Stream neustart einfach 60 Zuschauer

02:37.240 --> 02:43.040
rausgeschmissen, in.net kannst du ja sowas hier machen, ja, aber zum Beispiel public

02:43.040 --> 02:48.680
class silence, und wenn ich jetzt einen Constructor anlegen will, weil ich sagen muss, hey, in

02:48.680 --> 02:54.400
dieser Klasse muss unbedingt eine ID angegeben werden, das ist Pflicht, dann würde ich

02:54.400 --> 03:01.320
sowas hier so machen, ja, ID, ID gleich ID und fertig, sowas gibt es in Go nicht, was

03:01.320 --> 03:06.560
man wohl in Go machen kann, wenn ich das, wenn ich das in diesem Tutorial Video richtig

03:06.560 --> 03:11.800
gesehen habe, ist sowas, ich habe keine Ahnung, ob das, ob das stimmt, was ich hier als, als

03:11.800 --> 03:21.440
Syntax fabrizieren, ne, also man kann irgendwie sagen New, Factory, genau, man kann irgendwie

03:21.440 --> 03:38.240
sagen New und dann muss man irgendwie sagen, Alert Manager RP, Return, URL, irgendwie so,

03:38.240 --> 03:51.400
so, dann braucht man hier den Parameter, so, irgendwie so, und jetzt kann ich angeblich,

03:51.400 --> 03:56.080
ja, stimmt doch, und jetzt funktioniert das, und jetzt funktioniert das, und jetzt kann

03:56.080 --> 04:02.680
ich Alert Manager RP New sagen und dann kriege ich ein neues Alert Manager RP Objekt, genau,

04:02.680 --> 04:06.880
habe ich das, habe ich zur Abwechslung mal in diesem Tutorial Video aufgepasst, natürlich

04:06.880 --> 04:10.200
ist das jetzt reichlich sinnlos, wenn man wirklich bloß die URL hat, das kann ich ja

04:10.200 --> 04:19.320
auch hier oben reinschreiben, ich würde gerade sagen, Most advanced struct an der Zeit,

04:19.320 --> 04:24.640
dafür brauchst du ja noch nicht mal den struct theoretisch, aber ok, so, und jetzt kann man,

04:24.640 --> 04:29.960
und jetzt kann man, wenn man das mit dem New mal außen, außen vor lässt, und jetzt kann

04:29.960 --> 04:35.560
man, wenn man API Punkt macht, kann man da irgendwie auch Methoden drauf registrieren,

04:35.560 --> 04:42.760
da weiß ich aber die, die Sündtags nicht, kann das Rider für mich machen, nee, Moment,

04:42.760 --> 04:53.600
Generate Constructor, ach, guckt mal, Rider kann mir den Campbell sogar automatisch generaten,

04:53.600 --> 05:02.480
keck weh, easy, dann nehmen wir doch das, was Rider generated hat, ob das jetzt schöner

05:02.480 --> 05:09.640
ist als meins weiß ich ja auch nicht, ich bleib bei meinem, allein schon weil es selbst

05:09.640 --> 05:16.480
gemacht ist, wo ist eigentlich der Sinn davon, dass einmal als Pointer, warum soll ich das

05:16.480 --> 05:26.200
als Pointer returnen, keine Ahnung, ist das Fiveheadiger mit Pointer Leute, ist das irgendwie

05:26.200 --> 05:34.000
High IQ mit Pointer, und ohne Pointer ist es Low Brain, Low Bob Gehirn, oder wie, ups,

05:34.000 --> 05:40.840
falsch, oder wie ist das, so, zumindest kann man jetzt, das weiß ich aber nicht, ob ich

05:40.840 --> 05:54.040
die Sündtags hin krieg, guck mal, Fivehead, Fivehead Go Land, Fivehead Go Land Autocomplete,

05:54.040 --> 06:00.440
das hab ich gesucht, weil jetzt kann man sowas sagen wie Get Silences, und jetzt kann ich

06:00.440 --> 06:07.200
wenn alles funktioniert sagen AP Punkt, und dann hab ich auf diesem Objekt ne Methode drauf,

06:07.200 --> 06:14.520
Go Land ist Massive, 180 EQ das Ding, weil ich hätte im Leben mir diese Sündtags hier

06:14.520 --> 06:22.040
nicht merken können, was ist das überhaupt für ne komische Sündtags, das sieht ein bisschen

06:22.040 --> 06:34.920
aus wie.NET Extension Methods, ohne Extension Methods zu sein, wisst ihr was das ist, das

06:34.920 --> 06:42.720
ist C++ Header Files Style fast schon, also kein wirklicher Header, in C++ wollen die

06:42.720 --> 06:46.600
Leute nämlich auch nicht, dass man Methoden und sowas inline schreibt, sondern unten

06:46.600 --> 06:52.320
drunter, das find ich aber hässlich, war das jetzt zu viel verlangt sowas zu haben, oder

06:52.320 --> 06:56.320
wie, das, ich mein, das wär doch irgendwie cooler, aber das wollten die, wollten die

06:56.320 --> 07:07.120
Go Leute anscheinend nicht, wäre zu, zu Obvious gewesen, was, Redo is Ctrl Shift Z, das kann

07:07.120 --> 07:14.000
ich mir doch im Leben nicht merken, das muss ich, das muss ich, das muss ich ändern, Shortcuts,

07:14.000 --> 07:21.320
Keymaps, ja, ja, hier, Redo, Redo, ach nee, Ctrl Y hat er schon remapped, ok, alles klar,

07:21.320 --> 07:27.440
da hab ich nichts gesagt, also kann ich jetzt, ok, passt, so, also Get Silences, ich möchte

07:27.440 --> 07:51.040
jetzt alle Silences, nein, nein, nein, nein, nein, nein, nein, nein, dann halt ohne Rider

07:51.040 --> 08:02.960
heute, ich hab mich ausgelockt über mein, mein Toolbox Account, aber Golan scheint es

08:02.960 --> 08:13.960
nicht zu interessieren, das ist erstmal egal, Rider Gag Buy, ja, ja Rider, machs gut, heute

08:13.960 --> 08:27.320
nicht, so, also wir sind verstehen geblieben, ok, das kommt raus, so, Get Silences, ok, alles

08:27.320 --> 08:35.240
klar, und jetzt muss ich diesen Krempel, den ich hier irgendwo eingebaut habe, nee, den

08:35.240 --> 08:50.280
ich noch gar nirgends wo eingebaut habe, ach das hab ich noch nirgendswo gemacht, muss

08:50.280 --> 08:55.840
ich da jetzt rein basteln, also sprich, wir können uns noch mal die Swagger API davon

08:55.840 --> 09:05.280
angucken von diesem Ding, sprich das da, das da wollen wir jetzt machen, Get Silences,

09:05.280 --> 09:11.360
das ist die Response, wisst ihr was, wir benutzen einfach mal wieder die High IQ Generierung

09:11.360 --> 09:34.760
von Golan, Silence, das hatten wir doch schon mal, Matchers, dann nehmen wir das anstelle

09:34.760 --> 09:46.920
von dem hier, das ist richtig geil, dass der Swagger Jason zu Go Classes machen kann, richtig

09:46.920 --> 09:55.200
High IQ Kram, so, ok, jetzt wirds Go technisch spannend, also ich will ein Get machen, ich

09:55.200 --> 09:59.720
will ein Get machen, allerdings will ich Filtern können nach Hostname, also machen wir mal

09:59.720 --> 10:07.920
sowas hier, sowas wie Query Filter String, und jetzt ist die Frage, wie machen wir Query

10:07.920 --> 10:15.880
Filter String nach Hostname Hoggers, keine Ahnung, ich muss mal kurz in mein Alertmanager

10:15.880 --> 10:31.880
etwas anlegen, ist nicht gestartet, ok, moin, falls einer der Monster ist, könnt ihr mal

10:31.880 --> 10:46.280
please das Daily Projekt heute aktualisieren, Mensch, Alertmanager, geh auf, also Silences,

10:46.280 --> 10:55.280
Silence, Add, New Silence, gegen den Müll eintragen, Hostname gleich, Hoggers, Create,

10:55.280 --> 11:13.840
was ist das Problem, achso, man muss das Quoten, ok, das Webinterface ist wirklich reine Zumutung,

11:13.840 --> 11:18.360
wobei eigentlich passt der Titel ja immer noch ganz gut, aber man könnte vielleicht

11:18.360 --> 11:27.720
hinschreiben, das machen wir weg, und dahinten heute in Go oder irgendwie sowas, also, wir

11:27.720 --> 11:32.640
müssen jetzt irgendwie gucken, wie man ein Getrequest machen kann, mit Go und dort ein

11:32.640 --> 11:41.040
Filter eingeben, also das Ziel ist folgendes aufzurufen, try out, Moment, wo gibt es nochmal

11:41.040 --> 11:57.800
die Curl Examples hier, so, heute und auch heute mit OOP, genau, so, also das ist natürlich

11:57.800 --> 12:07.960
Blödsinn, wir wollen Local Host, AP, V2, Silences haben, also sprich das hier, sind

12:07.960 --> 12:17.160
da überall Quotes drum herum, Mensch, ja, also das hier wollen wir mit Go machen, diesen

12:17.160 --> 12:21.760
Request, nur dass man hier noch ein Filter eingeben kann, weil man kann das Filter, man

12:21.760 --> 12:32.200
kann nämlich an irgendeiner Stelle sagen, Filter nach, wo steht es denn, hier, Filter,

12:32.200 --> 12:46.760
und da kann man dann verschiedene Sachen hinten angeben, was man irgendwie nicht, Parameter

12:46.760 --> 12:51.360
irgendwie nicht hier mit übergeben kann, kann man irgendwie Parameter einstellen, try

12:51.360 --> 13:11.760
it out, ane hier, add string item, Hostname, Kekl, so, ja, Filter, Hostname, gleich Poggers,

13:11.760 --> 13:20.400
das wollen wir eigentlich haben, Filter, Hostname, gleich Poggers, so, und wo Bezahlung, der Chat

13:20.400 --> 13:32.680
bezahlt euch mit, mit, dass er euch mag, ja, dass alle sagen, wir haben die besten Mods

13:32.680 --> 13:38.680
überhaupt, Chat, einmal Please Mod Check für unsere Mods, die sich so viel Mühe geben,

13:38.680 --> 13:47.760
im Discord, im Chat, überall, einmal Cute Mods, genau, leider ist der Ober Cute Mod

13:47.760 --> 13:52.000
schon eine Weile nicht mehr am Start, von dem habe ich auch schon eine Weile nichts mehr

13:52.000 --> 14:04.920
gehört, keine Ahnung, wo der steckt, genau, Paid in Exposure ist das, siehste, so sieht

14:04.920 --> 14:13.840
es aus, wo der Sebaro steckt, keine Ahnung, warum hast du dich dazu entschlossen Go zu

14:13.840 --> 14:19.040
lernen, weil saumäßig viel in Go programmiert ist und weil ich mal gucken will, was Go so

14:19.040 --> 14:27.440
für Vorteile hat, den einzigen Vorteil, den ich aktuell sehe ist Static Binaries, ansonsten

14:27.440 --> 14:33.400
ehrlich gesagt hält es sich noch in Grenzen die Vorteile, also es ist nicht so, dass ich

14:33.400 --> 14:42.860
sagen würde, Go ist der Giga Chat, die ist die Giga Chat Sprache, also Giga Chat ist

14:42.860 --> 14:50.640
eindeutig C Sharp vorbehalten bisher, wo kommt es denn zum Einsatz, Go, Go ist überall mittlerweile,

14:50.640 --> 14:57.280
gerade was Cloud, wie sagt man so, Cloud Native Software angeht, also so ziemlich alles was

14:57.280 --> 15:05.280
irgendwas mit Infrastructure, Escode, Container, Skalierung, Cloud Gedöns zu tun hat, wenn

15:05.280 --> 15:10.880
es nicht gerade Azure und.NET ist, dann ist es Bin bereit für den C Sharp Stream, wir

15:10.880 --> 15:19.960
haben schon sehr vieles gemacht, also sehr viel, Github, man kann den Github gar nicht

15:19.960 --> 15:25.800
gescheit sortieren nach Sprachen, Flutter haben wir mal gemacht, wer sich daran nicht

15:25.800 --> 15:32.120
mehr erinnern kann, wir haben die beste App der Welt in Flutter programmiert, das macht

15:32.120 --> 15:53.960
uns keiner nach, guckt euch die App an, die App hier, seht ihr das, Massive App, die

15:53.960 --> 16:04.440
Cute App haben wir entwickelt, die nichts machen konnte außer Aja Ja sagen, mit FFmpeg,

16:04.440 --> 16:08.320
so jetzt aber weiter, sonst wird das wieder nix hier, wie mache ich jetzt ein Get Request

16:08.320 --> 16:18.160
ordentlich in Go, mit irgendeinem Url Filter oder so, also HTTP nicht Post, Get, was wollen

16:18.160 --> 16:24.120
wir getten, wir wollen die AP Url, also das ist das, was wir hier oben in dem Struct drin

16:24.120 --> 16:36.840
stehen haben, AP Url plus Silences, dumme Frage, was ist die schönere Variante, Urls

16:36.840 --> 16:58.760
zu Combine in Go, gibt es sowas wie Url, Combine, Join, Pass Query, Unescape Pass, ok da muss

16:58.760 --> 17:15.280
ich Google, Google muss bemüht werden, Join Url Go Lang, Combine Url Pass Join, funktioniert

17:15.280 --> 17:22.120
das, da habe ich so meine Zweifel, dass das klappt, probieren wir mal aus, ob das klappt,

17:22.120 --> 17:30.120
Has, Join, probieren wir das mal aus, wir machen das jetzt ab, bevor jetzt wieder Sixhead

17:30.120 --> 17:35.760
Time im Chat angesagt ist, ich weiß, dass ich den Slash doppelt habe, aber das ist da

17:35.760 --> 17:41.200
gerade der Sinn davon, warum man sowas verwendet, weil die unter anderem solche Fehler abfangen,

17:41.200 --> 17:53.720
ich habe kein Terminal auf, Go Land Projects, Go, ok Run, guck, Broken, Pass Join, funktioniert

17:53.720 --> 18:09.440
nicht, löscht einen Slash aus dem HTTP raus, maybe sowas, ok wenn der Chat das sagt, das

18:09.440 --> 18:16.920
sind Query Parameter und keine Urls, die gejoint werden, oder, ne, das sind Query Parameter,

18:16.920 --> 18:23.080
ne ne, ich will ja die Url zusammenpappen, also ich will da Silences an apv2 hinten dran

18:23.080 --> 18:30.080
machen und für den Fall der Fälle, dass zwei Slashes drin sind, dass der das aufräumt,

18:30.080 --> 18:34.840
aber mit Pass Join scheint, sag mal kann das sein, dass Go sowas nicht hat in der Standard

18:34.840 --> 18:50.600
Library, das kann doch nicht sein, how to build, url, how to join components, add join

18:50.600 --> 18:58.240
pass, url join pass, ja genau, wieso man sowas joinen sollte, naja, dass du keine Slashes

18:58.240 --> 19:11.680
doppelt hast zum Beispiel, close, ja was sonst, anscheinend ist das über dem Niveau oder

19:11.680 --> 19:17.400
unter dem Niveau der Go Standard Library Entwickler sowas einzubauen, alles klar, dann machen

19:17.400 --> 19:28.520
wir halt einfach plus und gut ist, also plus, so, htp get ap url plus silences, so und jetzt

19:28.520 --> 19:34.840
muss ich hinten dran, also das Ziel ist ja, dass wir sowas hier bauen, silences, pilter

19:34.840 --> 19:41.240
gleich, hostname gleich, das muss url encoded werden, poggers, ja, weil so wird das nicht

19:41.240 --> 19:46.640
funktionieren, ich bin gar nicht sicher bin, ob man das encoden muss, aber wir werden sehen,

19:46.640 --> 19:47.640
ja.

19:47.640 --> 19:59.240
Sowas schreibt man schneller selbst, da habe ich meine Zweifel, dass das so einfach ist,

19:59.240 --> 20:05.600
wie du dir das vorstellst, ich denke mal ein korrektes url join, dass das alles richtig

20:05.600 --> 20:12.240
checkt ist gar nicht so einfach, das ist ja nicht, es ist ja nicht so, als müsste man

20:12.240 --> 20:15.840
einfach nur checken, hört das mit slash auf und dann lasst den slash weg, das muss ja

20:15.840 --> 20:20.640
auch solche Sachen händeln, wie steht htp da vor, du musst erstmal alle gültigen Protokolle

20:20.640 --> 20:26.680
kennen, das was da vorstehen kann, ah high iq kappa, ja, ok, hey, das kann man natürlich

20:26.680 --> 20:32.240
wunderbar erkennen an diesem Satz, ohne irgendwas dahinter, da weiß man natürlich obviously,

20:32.240 --> 20:38.000
dass das kapp gemeint war, im net url package, nö, das habe ich doch gerade ausprobiert,

20:38.000 --> 20:51.760
das ist nicht, guck hier url, url, was net, punkt url, nö, gibt's gar nicht, gibt noch

20:51.760 --> 20:57.040
immer das package, aber das url package selber, also hier in dieser ul-klasse selber gibt

20:57.040 --> 21:05.520
sowas nicht, ist auch egal, wir bauen das jetzt weiter zusammen, so get, wie kriege

21:05.520 --> 21:12.080
ich ein query string dahin, ich mein, die noob-variante wäre jetzt ja tatsächlich sowas

21:12.080 --> 21:26.680
zu machen, ja, aber das kann ja nun wirklich nicht, escape, also das kann jetzt ja nicht

21:26.680 --> 21:35.040
wirklich sinn und zweckgewollt sein in go, das kanns ja net sein, also das ist ja auch

21:35.040 --> 21:41.800
sehr fehleranfällig, query string hab ich gerade gepaustet, zeig ich mal, das da, copy

21:41.800 --> 21:53.760
address, ok, ah ja, ok, was new request, moment, also kann man nicht direkt in get machen,

21:53.760 --> 22:04.040
es wird advanced da, ich seh schon, also api-url-silences, get, hat go keine enums, dass man hier, muss

22:04.040 --> 22:07.640
man hier wirklich strings reinschreiben, weil ich mein, ich könnt jetzt hier auch cute-chat

22:07.640 --> 22:20.080
als htp-methode reinschreiben und die gibt's ja nicht, ok, error, error, jetzt war wirklich,

22:20.080 --> 22:26.600
wer glaubt denn ernsthaft, dass wir error handling machen, wir machen kein error handling,

22:26.600 --> 22:31.200
so bloated graben kommt mir gar nicht erst in die Tüde, so request, also wie geht das

22:31.200 --> 22:37.400
weiter, das ist halt auch das sinnloseste error handling aller Zeiten, einfach den error

22:37.400 --> 22:50.080
printen, tja, it's ja nicht so als würden exceptions für sowas erfunden, erfunden,

22:50.080 --> 23:01.160
vielleicht gibt es ja sowas, htp, get, ja, viel besser, viel besser so, ok, also was

23:01.160 --> 23:20.280
macht man jetzt, q, gleich, ok, jetzt wird's wir, query, gleich, query, url, add, what,

23:20.280 --> 23:34.680
who encode, was wollen die dudes von mir, alter, das ist ja mal, ok, das ist pepega

23:34.680 --> 23:47.520
hässlich, wer macht denn sowas, ich, ich weiß nicht, also auf der einen Seite wirkt

23:47.520 --> 23:51.520
die go standard library durchdacht und auf der anderen Seite so als hat man die Hälfte

23:51.520 --> 23:59.960
vergessen, ok, api key wollen wir nicht haben, wir wollen haben filter und dann ja query,

23:59.960 --> 24:12.680
query filter oder sowas, sowas in der Richtung, was, so kann man das auch machen, zeig her,

24:12.680 --> 24:19.360
the function path join expects a path, not, ja, das ist mir auch klar, pass url to get

24:19.360 --> 24:38.360
pass and join, was, rede mit, das ist jetzt nicht sein Ernst oder, url pass, pass join,

24:38.360 --> 25:02.480
das ist so wir, ich versteh doch nicht mal, was es macht, ah, doch, was in der standard

25:02.480 --> 25:15.160
library, zeig mal her, was, example, nee, was, und was soll es da geben, join, da ist

25:15.160 --> 25:27.800
kein join drin, aber hier unten stand doch irgendwas, url, ja in go 1.1, 9 ist das drin,

25:27.800 --> 25:36.320
das gibt es aber noch nicht, ok, das ist hardcore umständlich, was haben wir noch, use resolve

25:36.320 --> 25:42.920
reference, alter ist das kompliziert, meine Güte, ich will einfach den url zusammen

25:42.920 --> 25:47.600
joinen, dann mach ichs lieber so, dann ist im zweifelsfall halt die url kaputt, aber

25:47.600 --> 25:57.920
das passiert nichts schlimmes, ok, so, jetzt hab ich ein query, jetzt hab ich ein query-filter

25:57.920 --> 26:03.920
hinten dran, ok, alles klar, und wie sende ich das jetzt ab, request send oder sowas,

26:03.920 --> 26:07.600
ne, anscheinend nicht, alter ich bin doch nicht mal in der lage in go und ordentlichen

26:07.600 --> 26:25.520
http-request zu machen, content-type, content-type kann ich auch nicht, muss ich wirklich ein

26:25.520 --> 26:36.560
header selbst setzen für content-type, wie ist denn das, content-type, so, dann bin ich

26:36.560 --> 26:43.480
mir gar nicht sicher, ob das so funktioniert, nächsten monat, go 1.1, 9, ja die haben noch

26:43.480 --> 26:48.200
einiges vor sich, wenn sowas wie url-join noch nicht in der standard-library drin ist,

26:48.200 --> 26:54.160
ich glaube, ok, wir machen jetzt den ultimativen test, hat das c++ in der standard-library,

26:54.160 --> 27:03.400
ach ich will gar nicht in just chatting sein, du hast recht, ich will in software und spiele-entwicklung

27:03.400 --> 27:13.000
will ich sein, warum man go bevorzugen würde, ganz ehrlich, keine ahnung, mir fällt nur

27:13.000 --> 27:23.040
ein grund ein, mir fällt wirklich nur ein grund ein, und das ist, weil es gut static

27:23.040 --> 27:27.240
libraries baut, die überall drauf laufen, parsi, dankeschön für den sub, was anderes

27:27.240 --> 27:39.320
fällt mir nicht ein, weiß nicht, ob das dazu führt, dass es stabiler wird, ehrlich gesagt

27:39.320 --> 27:43.080
führt es eher dazu, dass leute anfangen sowas wie arrows zu ignorieren, weil es zu nervig

27:43.080 --> 28:06.040
ist, weil da so zawsze diese

28:06.040 --> 28:17.440
ja ich ich will mit rein klicken wie sendet man denn jetzt den request ok da muss ich da

28:17.440 --> 28:36.600
muss ich muss ich googeln go lang htp new requests new requests kleint du request ah guck

28:36.600 --> 28:42.360
du mal da ost das ist das ist ja das war mega umständlich ok wir brauchen erst mal einen

28:42.360 --> 28:49.920
kleint ein kleint htp kleint objekt oder struct oder ding wie auch immer man das nennen mag und

28:49.920 --> 29:03.080
dann müssen wir sagen kleint du ich habe es abgesagt ja ich kann nicht so gut über drei

29:03.080 --> 29:13.480
sachen gleichzeitig nachdenken error haben wir kein bloated ok so macht man jetzt das ist ich

29:13.480 --> 29:20.840
muss ehrlich sagen für dass das die go leute so standard library fans sind ich kann es nicht ganz

29:20.840 --> 29:26.840
nachvollziehen die standard library sieht mir sehr lücken behaftet irgendwie aus so weil ich

29:26.840 --> 29:36.960
mein viel umständlicher kannst ja den request kaum noch senden wenn man schön wenn man was

29:36.960 --> 29:41.600
schönes sehen will wie man request sendet ane ich kann ja ich kann ja ich kann ja rider nicht

29:41.600 --> 29:48.760
öffnen weil wenn ich weiter öffne dann sagt er mir mein meine subscription ist abgelaufen ja

29:48.760 --> 29:59.160
muss ich mir echt doch noch mal einloggen im pyson stream sind für eine stunde fertig ja ich

29:59.160 --> 30:06.640
glaube schon nee htp get funktioniert nicht weil ich muss ja so ein query filter ich muss ich muss

30:06.640 --> 30:17.680
ja die die query option setzen das kann man ja bei htp get direkt direkt nicht so so jetzt

30:17.680 --> 30:22.960
schauen wir mal jetzt schauen wir mal ob ich was gelernt habe chat also wir haben als return wert

30:22.960 --> 30:30.400
eher ein silence array jetzt schauen wir mal ob ich moment es muss bei go ja vorne hin ich

30:30.400 --> 30:36.120
habe mal eine dumme frage an euch warum ist in dem fall der parameter hinten und der name vorne und

30:36.120 --> 30:40.440
in dem fall ist der parameter also der typ nicht schwachsinn da gibt keinen sinn was ich sagen

30:40.440 --> 30:46.920
wollte da sind zwar unterschiedliche sachen aber warum ist es ein array slice und kein slice array

30:46.920 --> 30:56.720
oder warum ist es ein warum ist einfach warum ist es so falsch und also warum muss es vorne

30:56.720 --> 31:07.760
sein das finde ich total unintuitiv ist es ist aber glaube ich in in rust auch so und ich glaube

31:07.760 --> 31:17.320
dass der typ hinten kommt ist auch so ein ding man möchte anders sein als c einfach nur warte mal

31:17.320 --> 31:22.680
ab bis du mit erase slices arbeiten musst ja ja guck mal mal also jetzt mache ich erst mal den

31:22.680 --> 31:28.880
request response client to request alles klar so jetzt gucken wir mal ob ich was gelernt habe

31:28.880 --> 31:41.600
vom letzten letzten mal war silences silence silence und jetzt jason decoder das hat mir

31:41.600 --> 31:50.200
letztens der chat beigebracht leute messer feierkuh cute cute ist chat alive so und das ging jetzt

31:50.200 --> 32:01.480
folgendermaßen new jason decoder response body die code in silences so

32:01.480 --> 32:09.240
weil das ist ja ein array was wir da zurück kriegen aber das array ist falsch rumgeschrieben

32:09.240 --> 32:15.080
so das hat mir letztes der chat beigebracht jetzt gucken wir mal ob das funkt was alle

32:15.080 --> 32:25.200
für schmerzen anhändelt error wir händeln den error nicht das kann er sich abgewöhnen ich

32:25.200 --> 32:32.240
händel prinzipiell keine errors so und jetzt haben wir den jason graben gepasst hoffe ich ohne dass

32:32.240 --> 32:42.480
es crashed werden wir gleich sehen und jetzt könnte man theoretisch sagen return silences

32:42.480 --> 32:53.200
so und wenn das jetzt funktioniert dann rindeln dann sollte da jetzt alle gesetzten silences

32:53.200 --> 33:02.040
rauskommen man sieht es funktioniert schon sehr gut es kommt nichts raus

33:02.040 --> 33:09.520
und silences gibt es ja

33:09.520 --> 33:22.320
guck hier hostname poggers moment setze ich ja ja

33:22.320 --> 33:31.360
ach moment moment es ist nicht poggers ist hostname gleich poggers ich muss das auch schon

33:31.360 --> 33:41.200
richtig machen bäm da sind wir ach so ne das kann ich ja nicht ok funst also wir kriegen wir kriegen

33:41.200 --> 33:47.680
die silences zurück so was jetzt noch mega nice wäre was jetzt noch mega nice wäre wobei ich da

33:47.680 --> 33:53.320
wirklich keine ahnung wie man das fintaktisch machen sollten wenn wir so was wie ein result

33:53.320 --> 34:00.040
filter machen könnten also function function result filter dass wir das quasi mit irgendeiner

34:00.040 --> 34:10.320
lambda expression filtern können was da zurück kommt bevor wir es denn zurück bekommen ok mal

34:10.320 --> 34:22.200
gucken go lang beides patrick beides haben wir schon durch funk parameter function parameter

34:22.200 --> 34:32.280
function arguments nee can functions be passed as parameters genau das will ich wissen in dem

34:32.280 --> 34:40.880
fall brauche ich keine generics weil die der typ ist ja klar und wie ist das beispiel fn convert

34:40.880 --> 34:54.880
einfach so type so easy copy paste he lacks critical information ich habe keine ahnung

34:54.880 --> 35:03.520
warum es geht aber es scheint zu funktionieren ok result filter so der parameter ist immer

35:03.520 --> 35:09.560
silence und der return wird ist ein bool weil ich will ja quasi sagen können ich zeige euch das

35:09.560 --> 35:13.640
gleich was ich vor habe ja dann sieht man das ich hoffe es funktioniert also ich will ich will

35:13.640 --> 35:21.120
nämlich so was sagen können guckt mal kann kann auch gar die idee kann autocomplete hoge also ich

35:21.120 --> 35:27.560
will so was machen können guckt mal get silences für das query filter ich nach hosten in poggers

35:27.560 --> 35:42.680
und jetzt will ich sagen können die results will ich filter nach return silence status nicht

35:42.680 --> 35:51.280
expired also ich will nur silences haben die nicht expired sind das ist doch ganz nice so finde ich

35:51.280 --> 36:00.000
jetzt ist nur die frage funktioniert das und wie mache ich das eigentliche filtern hier drinnen

36:00.000 --> 36:15.760
wie mache ich denn das eigentliche filtern hier drinnen jetzt muss ich das von hand machen mit

36:15.760 --> 36:23.840
der schleife muss ich da so was machen das wäre schon ziemlich so biga aber wahrscheinlich ist

36:23.840 --> 36:39.880
das so dass ich brauche auch noch eine result variable oder sowas result irgendwie so ok if

36:39.880 --> 36:48.880
war das ist das ist wirklich mega mega umständlich also if result filter silence

36:48.880 --> 37:01.840
nichts hier ungleich null dann result add nee busch ach moment moment aber das ist die array

37:01.840 --> 37:17.200
syntax leute das ist die array syntax die ist die ist 5 hat in go die ist so ne silences

37:17.200 --> 37:35.440
die ist die ist so also das ist schon echt ziemlich umständlich ok result schauen wir mal ob das

37:35.440 --> 37:46.800
funktioniert gucken wir mal ob das funktioniert was ich mir da gedacht habe also run ja das

37:46.800 --> 37:53.320
funktioniert leute guck mal ich kriege jetzt nur die silences zurück die noch nicht expired sind

37:53.320 --> 38:00.680
so wenn ich jetzt sagen silences gleich expired dann ist das alles das funktioniert es ist nicht

38:00.680 --> 38:11.560
schön aber es funktioniert das ist doch tatsächlich jetzt relativ angenehm zu benutzen oder du sagst

38:11.560 --> 38:18.320
abi ich will alle silences haben beim abrufen filter nach hostname und das ergebnis filter mal

38:18.320 --> 38:26.920
hier nach das ist gar nicht schlecht das kann man tatsächlich benutzen so wir müssen aber noch

38:26.920 --> 38:31.960
mehr gucken also die silen soll nicht nur nicht expired sein sondern die silen soll auch ein

38:31.960 --> 38:43.760
kommentar haben und zwar ein kommentar mit contains includes ne chat nicht nicht back

38:43.760 --> 39:02.240
sie nicht kriegt das alles selbst raus habe ich glück und meine idee ist 5 hat und weiß das ok

39:02.240 --> 39:17.480
google weiß aber string contains string contains function moment was strings strings contain ok

39:17.480 --> 39:25.240
das war den standard library erstellern wohl zu viel arbeit string das string dem string

39:25.240 --> 39:34.720
struct ein paar sinnvolle metoden zu spendieren das ist ja fast so was geiles wie ein c++ standard

39:34.720 --> 39:43.000
to upper und sowas also strings contains so dann dann den text das kommen vergleichen mit

39:43.000 --> 40:03.440
set downtime wenn es da drin enthalten ist und und alles klar jetzt sollte ich nix finden string

40:03.440 --> 40:17.360
ist kein struct nicht was ist denn dann ach irgendein build in oder sowas na wenn es ein

40:17.360 --> 40:32.400
build in ist oder ist es ein value so ne irgendein magic build in typ der das nicht kann soll

40:32.400 --> 40:39.400
leute kurz was zu trinken hol gleich wieder am start ok

41:02.400 --> 41:16.720
wieder da so aber das passt ja das ist doch eigentlich ja also es hat funktioniert was

41:16.720 --> 41:21.680
ich vor habe das kann man doch jetzt wirklich gut lesen ich finde ich finde das ich weiß

41:21.680 --> 41:27.840
jetzt nicht ob das wie sagen sie so schön immer idiomatic idiomatic was auch immer go

41:27.840 --> 41:34.000
ist aber das ist mir egal für mich ist zwei sachen wichtig erstens es muss funktionieren

41:34.000 --> 41:39.240
zweitens es muss am besten auch noch irgendwie ganz gut lesbar sein und wenn diese zwei sachen

41:39.240 --> 41:45.240
erfüllt sind ist mir der rest ziemlich egal so ich muss den kram zweifels weil im halben

41:45.240 --> 41:51.560
jahr wieder verstehen also so jetzt haben wir das jetzt kommen wir jetzt mal weitermachen

41:51.560 --> 41:59.480
was brauchen wir dann sonst noch also wir müssen silences getten und wir müssen silences

41:59.480 --> 42:09.040
createn string ist kein struct daher keine metoden also das habe ich ja schon gelesen

42:09.040 --> 42:17.280
gerade also silences deleten müssen wir auf jeden fall auch silences aber ich würde sagen

42:17.280 --> 42:23.840
das machen wir dann wenn wir so weit sind weil es ist jetzt blöd wenn ich hier weitermache

42:23.840 --> 42:32.000
und alle metoden implementieren dann feststellen ich brauche die eigentlich gar nicht deswegen

42:32.000 --> 42:35.640
machen wir jetzt mal mit unserem kommando zeilen tool weiter hat jemand von euch schon

42:35.640 --> 42:55.400
mal das hier verwendet chat äh ähm vergessen wie es heißt das da urfuff cli der urfuff

42:55.400 --> 43:05.600
hat 18,7000 trillionen sterne und und das ist anscheinend ein go cli framework wo man

43:05.600 --> 43:14.680
so sachen wie argument parsing und sowas mit machen kann es gibt wohl auch noch codra

43:14.680 --> 43:19.000
es gibt wohl auch noch das da aber ich habe mir die hilfeseiten von beiden sachen mal

43:19.000 --> 43:30.000
angeguckt und ich finde ich finde dass das hier irgendwie verständlicher aussieht du

43:30.000 --> 43:46.720
magst bubble t mehr ist bubble t ein command line parser oder go lang wie passt man damit

43:46.720 --> 43:57.280
das ist doch nee das ist das ist ein ui framework für also ich will kommt mal weil das sieht

43:57.280 --> 44:03.160
tatsächlich relativ relativ simpel aus hier das ganze man sagt ihm sagt ihm name vom program

44:03.160 --> 44:08.720
usage was er standardmäßig aufräumen soll aufrufen soll und dann kann man noch ein paar

44:08.720 --> 44:15.160
flex angeben und das war es im endeffekt guck mal das sieht relativ das sieht relativ

44:15.160 --> 44:27.760
easy aus also man kann kann quasi sowas hier machen wenn man jetzt noch den include urfuff

44:27.760 --> 44:39.120
sink ja gut so also sprich ich finde sogar mit den ganzen referenzen und hier so da kann

44:39.120 --> 44:50.560
man sich darüber streiten aber ich finde das sieht relativ gut gut durchblickbar aus

44:50.560 --> 44:58.520
was man da hat so einfach es kann man packages ja aber man wobei ich das immer noch nicht

44:58.520 --> 45:03.560
schön hinkauf hinter mit diesen komischen magic magic urls für packages und package

45:03.560 --> 45:13.000
manager wäre schon was nices so jetzt brauche ich nämlich optionen für mein program nennt

45:13.000 --> 45:21.440
es nicht cccc kontext das heißt kontext bei mir fertig aus kommentieren also wir brauchen

45:21.440 --> 45:30.440
nämlich ein paar optionen wir brauchen nämlich ein paar optionen ne ne das verstehe ich nicht

45:30.440 --> 45:34.480
und am package manager und am package manager würde ich verstehen irgendwas mit eigener

45:34.480 --> 45:43.120
package registry sowas wie nougat oder npm oder so weil das hat auch seine probleme also

45:43.120 --> 45:47.920
url magic url import sachen finde ich blöd das ist das ist dann nur ein schritt besser

45:47.920 --> 45:58.040
als 10 plus plus header files temple ist in hundert sekunden schon gesehen ne ja hat

45:58.040 --> 46:05.440
es und es ist im prinzip genau das gleiche wie nc dass ich das ist referenz adresse wobei

46:05.440 --> 46:10.360
nc plus plus ja was anderes das ist die adresse quasi und das hier ist pointer dereferenzieren

46:10.360 --> 46:19.440
in den eigentlichen typ aber ich glaube du kannst in go du kannst den go 2 null pointer

46:19.440 --> 46:26.080
exception fabrizieren aber ich glaube du kannst nicht so einfach irgendwelche stack overflow

46:26.080 --> 46:42.360
aus und sachen produzieren mit pointer usage

46:42.360 --> 46:45.640
stimmt schon header files ist wirklich das allerschleppste

46:45.640 --> 46:57.600
so also was brauchen wir denn was brauchen wir denn für damit wir ein bisschen progress

46:57.600 --> 47:00.760
machen schreibe ich das jetzt mal wirklich ich sage jetzt nicht ich mache jetzt ein flag

47:00.760 --> 47:04.400
und probiere es aus wir schreiben jetzt wirklich mal die ganzen flags hin die wir brauchen

47:04.400 --> 47:11.080
also das erste ist wir brauchen ein string flag das heißt aber nicht language sondern

47:11.080 --> 47:18.080
das heißt comment wenn ich das einfach und usage

47:18.080 --> 47:47.960
und ich glaube ich habe mir nämlich vorhin die hilfeseite schon angeschaut ich glaube

47:47.960 --> 47:52.160
allias ist es da kann man dann kurzschreibweise von angeben

47:52.160 --> 48:02.240
es wäre dann quasi minus z im moment minus z haben wir schon für clear deswegen habe

48:02.240 --> 48:07.720
ich das reason genannt oder ich könnte auch einfach message nennen so kurzschreibweise

48:07.720 --> 48:14.300
ist dann minus er so wenn wir jetzt help eingeben dann sollte schon mal was halbwegs sinnvolles

48:14.300 --> 48:35.120
bei rumkommen mal her an den punkt keckel was jetzt flag minus er beginnt mit minus

48:35.120 --> 48:44.880
es haben flex so ansicht dass sie mit minus beginnen ja es kann auch sein dass es anders

48:44.880 --> 48:51.760
funktioniert das funktioniert genauso ach man muss das minus ohne das minus der macht

48:51.760 --> 49:10.240
magic ach hier guckt mal der macht der macht magic ist das ist value der default ja das

49:10.240 --> 49:28.640
default soll nee moment default soll silence sein fertig default value ok so dann brauchen

49:28.640 --> 49:35.680
wir als nächstes ein weiteres command line flag das muss ein user sein das ist easy das

49:35.680 --> 49:57.840
ist genau das gleiche user u die fault value haben wir gerade nicht usage user oder created

49:57.840 --> 50:10.200
by user so dann brauchen wir eine startzeit und das ist auch der grund warum ich warum

50:10.200 --> 50:17.000
ich vorhin bei der google suche diese cli parsing und und application framework gefunden

50:17.000 --> 50:26.160
haben weil wir brauchen eine startzeit und minus s und dort kann man folgendes machen

50:26.160 --> 50:31.240
man kann direkt den graben hier drinnen passen lassen das ist das was wir mit rust überhaupt

50:31.240 --> 50:36.800
nicht hingekriegt haben wo rust wollte dass ich in eigenen duration parser und so programmier

50:36.800 --> 50:42.800
ja also man kann quasi sagen dann was ist das hier usage text start time of silence

50:42.800 --> 50:56.120
default current time oder so so und was man jetzt machen kann ist man kann es hier angeben

50:56.120 --> 51:01.560
layout und dann kann man einstellen wie er diesen ganzen krempel parsen soll und jetzt

51:01.560 --> 51:13.120
kommt wieder diese diese moment nicht time layout oder mal ach man das ist ja noch stringflag

51:13.120 --> 51:26.040
es soll ja time es soll ja time stamp glaube sein time stamp ja sowas wie gesagt die hilfe

51:26.040 --> 51:34.000
seite habe ich vorhin schon gesehen timestamp black so und da kann man dann sagen wie er

51:34.000 --> 51:48.960
die zeit passen soll die man eben übergibt also sprich

51:48.960 --> 51:58.480
das ist auch so ein ding was mich an go ein bisschen nervt mein gott wie sind wie sind

51:58.480 --> 52:05.000
richtige die richtigen date time strings für für go probieren wir das jetzt aus hier

52:05.000 --> 52:14.200
ein pass ja keck hier layout also was ich haben will ist folgendes meine die zeiteingabe

52:14.200 --> 52:23.120
ist minute doppelpunkt sekunde also 04 05 obvius obvius nicht minute sekunde was laber

52:23.120 --> 52:35.080
ich denn für blödsinn nicht minute sekunde stunde minute 15 04 immer gleich ab das kann

52:35.080 --> 52:45.080
sich doch keiner merken also sprich time value time layout so value die default value ist

52:45.080 --> 52:55.160
time now wenn das funktioniert nein funktioniert nicht ja wie setzt man den default value das

52:55.160 --> 52:58.920
muss ich mir gleich nochmal angucken wie man den default value setzt genauso wie für für

52:58.920 --> 53:03.560
den user den default value wobei wie setzen wir den default value was will er denn haben

53:03.560 --> 53:15.960
für ein value der will das will er haben time stamp flag ich könnte das weil das coole

53:15.960 --> 53:24.120
ist den default value den zeigt er mir hier in der hilfe an das heißt aktuell steht hier

53:24.120 --> 53:29.640
nur start of silence und kein default wert wenn ich irgendwie einen default wert anlegen

53:29.640 --> 53:39.920
könnte wäre schon äußerst nice ja das funktioniert nicht und er zeigt uns auch nicht als beispiel

53:39.920 --> 53:51.360
ne time zone aber time zone können wir angeben time zone ist location gibt es in go irgendwie

53:51.360 --> 54:06.160
so convention dass man globale variablen oder so irgendwie static sachen groß schreibt

54:06.160 --> 54:22.080
also brauche ich quasi sowas wie irgendwie time stamp so was da time cli time stamp ok

54:22.080 --> 54:32.680
now time stamp jetzt muss ich mir noch die zeit setzen now time stamp set location ja

54:32.680 --> 54:46.600
auf jeden fall auch schon mal nicht verkehrt location in go bedeutet groß dass es public

54:46.600 --> 55:06.520
ist ok so und wie setzt man da jetzt die zeit set value set time stamp value time time

55:06.520 --> 55:16.920
point now so und nun können wir wenn wir glück haben sagen value now time warum geht das

55:16.920 --> 55:24.200
jetzt schon wieder nicht cannot use cli time stamp s type time stamp muss dann unter vormachen

55:24.200 --> 55:30.400
ah yes obvious guckt und jetzt haben wir hier ein default dran stehen ein äußerst hässliches

55:30.400 --> 55:36.040
default jetzt haben wir immer die aktuelle zeit als default dran stehen die das kann man

55:36.040 --> 55:50.800
das irgendwie besser die fall text klingt gut now ts string sieht immer noch kacke aus

55:50.800 --> 56:08.920
format nee value format stunde minute stunde minute reicht guck mal jetzt haben wir hier

56:08.920 --> 56:17.760
eine ordentliche ausgabe von default also sprich als default sagt doch einfach current time

56:17.760 --> 56:23.800
nee ich will es ja formatieren sonst sieht es doch kacke aus und ich will auch dass das

56:23.800 --> 56:30.320
hier und das hier das gleiche benutzt weil sonst leckt kurz und hier steht eine andere

56:30.320 --> 56:35.440
zeit als es eigentlich benutzt intern das ist doch eigentlich ganz sinnvoll massive

56:35.440 --> 56:43.600
richtig massive so jetzt haben wir aktuell jetzt haben wir eine ordentliche ausgabe so

56:43.600 --> 56:50.760
was kommt als nächstes duration duration kommt als nächstes glaube ich duration parsing

56:50.760 --> 56:57.920
das war das was mich in rust wirklich zur weisglut gebracht hat ok also copy pasten wir den krempel

56:57.920 --> 57:05.400
mal duration das gibt es hier als als argument das gibt es hier als argument das ist der

57:05.400 --> 57:09.200
grund warum ich dieses framework überhaupt gefunden habe vorhin da muss man nicht so

57:09.200 --> 57:15.360
viel selbst machen ok alias nee also das ding heißt duration der alias für dieses format

57:15.360 --> 57:28.840
ist minus d layout time zone brauche ich net usage is duration of silence so default text

57:28.840 --> 57:39.600
die fall text brauche man net die fall value ist time minute mal 15 15 minuten ist die fall

57:39.600 --> 57:48.520
setting wenn man nichts angibt so und was brauche ich jetzt noch eigentlich nur ich

57:48.520 --> 57:53.120
kann es leider in mein dotnet programm nicht reingucken das ist ziemlich ziemlich pain

57:53.120 --> 58:00.160
champ dass es nicht funktioniert jetzt muss ich tatsächlich mein dotnet programm in wim

58:00.160 --> 58:08.520
aufmachen ich fasse es nicht wobei ich kann ich mache den studio code auf da kann man

58:08.520 --> 58:25.120
das wenigstens halbwegs lesen yes yes wir trusten kann man kann man sich wenigstens

58:25.120 --> 58:31.400
kann man sich wenigstens angucken genau was braucht man eigentlich was hat er denn für

58:31.400 --> 58:43.160
schmerzen not all code path return hat das programm funktioniert das ist überhaupt nichts

58:43.160 --> 58:49.240
ok keine ahnung was der für schmerz hat das ist lauffähig das funktioniert aber was brauchen

58:49.240 --> 58:54.160
wir für kommando zeilen argument list clear duration start reason ja user haben wir jetzt

58:54.160 --> 58:59.680
noch dazu also list und clear brauchen wir noch wir machen auch noch einen debug flag

58:59.680 --> 59:22.200
oder sowas also ein bool flag was sich nennt list minus l so was da kein punkt am ende

59:22.200 --> 59:33.680
brauchen wir nicht overrated plaudit plaudit punkte am ende so also list clear und zum

59:33.680 --> 59:43.840
schluss machen wir noch mal ohne alias sowas wie minus minus debug clear ah debug kriegt

59:43.840 --> 59:49.800
auch kein usage das ist für die interne und und um ein arbeitskollege zu erfreuen brauchen

59:49.800 --> 01:00:00.440
wir noch ein extra bool flag das ist ein spezielles bool flag für den zwenn der kriegt eine

01:00:00.440 --> 01:00:11.360
eigene option bei dem programm weil weil er will immer irgendwelche spezielle also das

01:00:11.360 --> 01:00:15.800
wenn es jemand wenn du was wenn du wenn du was vorstellst und zeigt der sagt immer wenn

01:00:15.800 --> 01:00:20.240
du was sagst ja könnte man da nicht machen dass es noch irgendwie dort die tabelle links

01:00:20.240 --> 01:00:24.440
zentriert und kann es an der stelle nicht umgedreht formatiert werden oder kann es

01:00:24.440 --> 01:00:29.960
nicht so sein dass es exit code 0 oder exit code 1 macht und ich weiß schon und ich weiß

01:00:29.960 --> 01:00:34.360
schon dass da irgendwas in der richtung kommt deswegen kriegt er sein eigenes flag und dann

01:00:34.360 --> 01:00:39.800
sage ich zu ihm wenn er was erzählt sage ich wenn ruft das mal auf mach minus minus dran

01:00:39.800 --> 01:00:47.120
als parameter es macht nix das macht nichts kann man hinten sagen hinten heckl aller

01:00:47.120 --> 01:00:55.320
hinten zu man sieht so nicht mal in der hilfe perfekt es kriegt auch sein eigenes ganz

01:00:55.320 --> 01:01:06.840
eigenes command line argument und es funktioniert auch guckt er schmeißt kein fehler nee eigentlich

01:01:06.840 --> 01:01:22.040
also wahrscheinlich weil ich noch keine action habe oder so ist der eck ja so ok action das

01:01:22.040 --> 01:01:36.440
ist das was er auf ruft am anfang ok kurz überlegen machen wir das alles in line nee

01:01:36.440 --> 01:01:42.880
machen wir nicht wir machen eine function die heißt da nicht mehr die heißt keiner run oder

01:01:42.880 --> 01:01:47.920
so und das machen wir ein bisschen wie die wie die dort net von gibt es ein ordentliches

01:01:47.920 --> 01:01:52.880
dependency injection in go wahrscheinlich nicht oder ich meine ich gebe zu das wäre

01:01:52.880 --> 01:01:57.360
krasse overkill für eine kommando zeilen anwendung die nichts macht außer ein paar web requests

01:01:57.360 --> 01:02:06.280
schicken aber einfach nur mal so interesse halber das ist go land ja so und die diese

01:02:06.280 --> 01:02:12.000
funktion kriegt jetzt die richtigen parameter schon rausgepasst und und über übergeben

01:02:12.000 --> 01:02:25.800
ja also sowas wie start start time so duration time duration mehr fällt mir gerade nicht

01:02:25.800 --> 01:02:43.400
ein so action run wir behandeln keine fehler wie oft soll ich das dem ja noch sagen absolut

01:02:43.400 --> 01:02:50.640
absoluter blut error handling z-buffer moin so also wie funktioniert das hier jetzt action

01:02:50.640 --> 01:03:00.960
grufe ich da drin jetzt einfach mein kram auf wahrscheinlich also wie bekomme ich denn

01:03:00.960 --> 01:03:10.920
mir action wie bekomme ich denn hier meine parameter jetzt raus args

01:03:10.920 --> 01:03:20.520
also context string und dann wie die dinge heißen

01:03:20.520 --> 01:03:29.360
marsch in gaming danke für den zapp also sprich sowas dann hier context

01:03:29.360 --> 01:03:42.200
timestamp und wie habe ich das genannt start also start time gleich dann übergebe ich das

01:03:42.200 --> 01:03:51.240
an ran dann haben wir noch duration wobei duration kann ich doch so direkt eigentlich kann ich das

01:03:51.240 --> 01:04:05.480
alles so direkt duration aber mal hier so was hat er was hat er für schmerzen was mag er nicht

01:04:05.480 --> 01:04:13.240
missing return statement wir machen kein error handling error handling is overrated outdated

01:04:13.240 --> 01:04:22.600
start time erst ah das ist ein pointer das muss die die referenz werden also okay wir

01:04:22.600 --> 01:04:27.600
könnten theoretisch list und clear hier drinne schon abfangen dann muss es nicht in der main

01:04:27.600 --> 01:04:45.440
funktion laufen also if überlegen if list dann ja return ich habe noch keine funktion in der

01:04:45.440 --> 01:04:58.120
die das kann rinnt die gibt's die gibt's doch nicht aber die gibt's bald so und dann ist clear dann

01:04:58.120 --> 01:05:07.520
rufen wir auf clear clear silences und ansonsten machen wir einfach auch ein error zurück und

01:05:07.520 --> 01:05:13.920
gut ist ansonsten rufen wir das so auf und das müsste doch eigentlich schon soweit funktionieren

01:05:13.920 --> 01:05:22.040
so error zurückgeben so langsam aber sicher blicke ich zumindest bei den basics halbwegs

01:05:22.040 --> 01:05:35.040
durch so dann brauchen wir noch eine function rinnt silences brauchen wir und einer die list

01:05:35.040 --> 01:05:43.880
moment kann go land sowas sekunde kann mal ausprobieren kann go so kann go return heckl

01:05:43.880 --> 01:06:00.760
kann go für mich so was generieren go land ne doch great function nice poc progge das heißt

01:06:00.760 --> 01:06:15.160
wir testen mal wie das funktioniert wir machen das hier mal weg und lassen uns das lasst uns das auto

01:06:15.160 --> 01:06:35.520
jetzt noch mal voll nice return null wir machen kein error handling cool das gefällt mir dass

01:06:35.520 --> 01:06:48.040
das auto generieren kann das finde ich sehr sehr nice ok machen wir das run auch unten drunter aber

01:06:48.040 --> 01:06:53.280
das run auch unten drunter hat jemand erfahrung mit dem compiler von in video und sie mit nein

01:06:53.280 --> 01:06:58.480
habe ich nicht ich vermute mal er möchte irgendwelche kuda geschichten oder so machen

01:06:58.480 --> 01:07:16.680
ich würde jetzt mal raten so ok jetzt jetzt muss ich mal in mich gehen weil jetzt haben wir so die

01:07:16.680 --> 01:07:21.880
die boilerplate geschichte fertig jetzt muss ja die funktion eingebaut werden das ding hatte

01:07:21.880 --> 01:07:27.000
ja absolut noch keine funktion außer dass es schöne es kann schöne leute einfach sagen es kann

01:07:27.000 --> 01:07:34.040
schöne hilfemenüs zeigen das ist ja auch schon mal nice aber hilfemenü allein wird glaube ich

01:07:34.040 --> 01:07:42.720
noch kein großartig schocken ok es heißt noch ein new cli application das will ich nicht dass

01:07:42.720 --> 01:08:04.320
es so heißt das soll heißen usage name set down time soll das heißen new cli ok nicht

01:08:04.320 --> 01:08:15.160
usage description oder sowas description kackel ein bisschen twitchy mods reinbringen description

01:08:15.160 --> 01:08:23.600
jawoll so ist das so ist das gut beste beste description ich meine wir könnten seriös sein

01:08:23.600 --> 01:08:36.440
was ist eigentlich der unterschied zwischen usage in dem fall in der ah

01:08:36.440 --> 01:08:52.760
ist usage und description das gleiche in dem fall description passt besser

01:08:52.760 --> 01:09:14.880
user und description ist genau das ach nee ist es nicht ok dann dann lassen wir es so ist auch ok

01:09:14.880 --> 01:09:22.800
die fall 19 07 und 15 näher wie soll ich was soll ich sonst anders reinschreiben es ist ich meine

01:09:22.800 --> 01:09:36.520
ich könnte reinschreiben die fall current time oder so ja du hast recht minus er ist egal das

01:09:36.520 --> 01:09:44.680
verwendet eh keiner die sagen alle basic standardmäßig wir könnten minus m für message machen minus c ist

01:09:44.680 --> 01:09:57.000
schon für clear wir könnten wir könnten message message machen m konnten wir vielleicht besser

01:09:57.000 --> 01:10:14.680
anstatt friesen ja message message eine idee ist schon duration so und jetzt und jetzt überlegen

01:10:14.680 --> 01:10:20.800
also ral clear also wenn ich minus l mache passiert aktuell nichts genau minus c passiert auch nichts

01:10:20.800 --> 01:10:27.280
und alles andere geht dann in in die in der in die eigentliche main funktion würde ich sagen ok

01:10:27.280 --> 01:10:34.800
5 hat time jetzt müssen wir die eigentliche funktion da mal langsam aber sicher implementieren

01:10:34.800 --> 01:10:41.280
dass es überhaupt was sinnvolles macht ich mache vorher noch eine sache und zwar die back weil ich

01:10:41.280 --> 01:10:45.280
mir schon vorstellen kann es wird mal irgendwann nicht funktionieren will ich so ein paar basic

01:10:45.280 --> 01:10:56.800
sachen ausgeben zum beispiel was ich als alert manager url und sowas verwende also fm brindlen

01:10:56.800 --> 01:11:24.080
was geben wir dann mal aus später aber die back location location ap endpoint fqdn ja reicht

01:11:24.080 --> 01:11:28.240
eigentlich weil ich könnte mir vorstellen wenn das nicht funktioniert ist es tatsächlich nicht

01:11:28.240 --> 01:11:37.360
schlecht ein paar infos zu haben was er benutzt und woran es hängt ok also jetzt wird es etwas

01:11:37.360 --> 01:11:42.840
komplizierter jetzt muss ich das einbauen ich habe hier unten schon ein bisschen was gemacht

01:11:42.840 --> 01:11:58.640
alert manager api ja was wir machen das machen wir einfach mal global ich habe keinen bock das

01:11:58.640 --> 01:12:12.560
überall durch zu durch zu passen wir fällt nichts besseres ein außer den kram global zu machen also

01:12:12.560 --> 01:12:17.400
ansonsten müsste ich das ja wie jeder funktion irgendwie mitgeben alert manager api

01:12:17.400 --> 01:12:29.480
also den kram kann schon mal das muss ich aufheben das brauche ich gleich noch machen wir mal machen

01:12:29.480 --> 01:12:36.080
wir mal das list ich glaube das list ist tatsächlich noch relativ easy minus l also sprich was macht

01:12:36.080 --> 01:12:50.320
der beim auflisten der der silences dann dann dann fangen wir dann fangen wir doch damit erstmal an also print print silences ist nichts

01:12:50.320 --> 01:13:00.640
implementiert ok also wir rufen erstmal alle aktiven silences ab aus dem monitoring so alert

01:13:00.640 --> 01:13:08.680
manager api heißt das ding so wir filtern nach alles was nicht expired ist und was set down time

01:13:08.680 --> 01:13:13.360
im comment drin stehen hat da muss ich jetzt sicherstellen dass wir einen testeintrag haben

01:13:13.360 --> 01:13:27.760
dass das funktioniert edit set down time weil irgendwie muss ich das markieren dass es von

01:13:27.760 --> 01:13:34.240
meinem programm angelegt ist so jetzt habe ich alles silences an der stelle jetzt muss ich den kram

01:13:34.240 --> 01:13:46.640
sortieren nach end datum wir benennen noch mal ein bisschen was um das soll nicht startet add

01:13:46.640 --> 01:13:53.520
heißen sondern soll startet add utc ans add utc heißt weil der alert manager hat alle zeiten in utc

01:13:53.520 --> 01:14:00.720
und meine zeit ist in cst und das ist sonst total verwirrend und ich blicke nicht durch ob die

01:14:00.720 --> 01:14:10.840
zeiten stimmen wie sortiere ich denn jetzt ein array silences go sort array sortieren ist eklig ich

01:14:10.840 --> 01:14:17.760
gehe davon aus es ist so fast alles was ich sehe in der standard library nicht gerade schön ok sort

01:14:17.760 --> 01:14:21.680
strings das wird nicht funktionieren ich habe da objekte drin einfach nur sort werde ich nicht

01:14:21.680 --> 01:14:35.240
sagen können sort ins der schon blöd wenn man keine generics hat oder ok mittlerweile haben

01:14:35.240 --> 01:15:02.640
sie das ja aber ok sort es gibt wohl ein sort sort sort sort slice slice table ach nee stable

01:15:02.640 --> 01:15:10.320
ok der unterschied zwischen sort slice und sort slice stable ist wahrscheinlich das eine ist

01:15:10.320 --> 01:15:19.480
quick sort und das andere ist was bubble sort ich ich würde sagen wir machen slice

01:15:19.480 --> 01:15:31.600
sort slice ok silence sortieren und jetzt gibt man dort eine function was nennt int

01:15:31.600 --> 01:15:52.880
den int ach ist das der index oder was ok das check ich nicht sort slice go lang example

01:16:01.600 --> 01:16:10.760
das ist ein index das ist der index im array ja dumm wenn man keine generics hat hatte hatte

01:16:10.760 --> 01:16:23.360
aber anscheinend er noch nicht eingebaut hat ja das ist wahrscheinlich der index gut dass du uns

01:16:23.360 --> 01:16:29.680
das mitteilst hätten wir das nicht gewusst wäre dramatisch gewesen dramatische folgen aber lasst

01:16:29.680 --> 01:16:36.000
ihr schmecken pepo fett style also das ok das denn nicht a und b oder so keine an oder index

01:16:36.000 --> 01:16:42.520
eigentlich sollte man das i1 i2 nennen dass man das irgendwie versteht was da passiert also was

01:16:42.520 --> 01:16:49.480
soll man machen jetzt monka es man das ist das ist wirklich eklig ist wirklich eklig

01:16:49.480 --> 01:17:07.640
also so moment ich sortiere nach was startet oder endzeit leute den da nach dort nee nach

01:17:07.640 --> 01:17:17.120
nach was sortiere ich am besten startzeit oder endzeit startzeit oder ich glaube endzeit ist zu

01:17:17.120 --> 01:17:25.560
weird weird champ oder end na doch nee eigentlich ist die zeit wann es aufhört für mich interessanter

01:17:25.560 --> 01:17:35.120
also end utc funktioniert natürlich nicht wäre auch zu einfach gewesen wenn es einfach funktioniert

01:17:35.120 --> 01:17:56.240
ach so daytime geht ja nicht i2 ist i1 plus 1 korrekt das ist der erste index naja nicht

01:17:56.240 --> 01:18:03.280
unbedingt nicht unbedingt das ist implementations frage also meistens ist es wahrscheinlich index

01:18:03.280 --> 01:18:09.000
1 und 2 oder plus 1 aber muss es nicht sein sind einfach die zweite indexe der zwei elemente die

01:18:09.000 --> 01:18:13.720
man vergleichen soll also da bin ich echt ein bisschen dort nett verwöhnt weil da könnte ich

01:18:13.720 --> 01:18:30.240
einfach so was hier machen oder bei silence ends at was ist silence ist für ein typ hier ein strukt

01:18:30.240 --> 01:18:45.160
von mir also sage ich da jetzt nicht kleiner gleich sondern einfach bevor weil es ist ja ein

01:18:45.160 --> 01:19:07.560
date time also bevor so na ob das funktioniert

01:19:15.160 --> 01:19:20.560
es wäre jetzt eine gute gelegenheit sich go generics anzugucken aber will ich nicht weil

01:19:20.560 --> 01:19:33.120
ich will ich will weiter weitermachen ok soll ich ich lege noch mal testweise ein paar moment

01:19:33.120 --> 01:19:44.480
wo haben wir denn unsere unser dotnet programm liegen hier post jam dotnet ich muss mal ein paar

01:19:44.480 --> 01:20:02.880
maintenen zu setzen leute damit ich damit ich da welche drin stehen hab so alert manager gucken ja ok

01:20:02.880 --> 01:20:09.560
auf den auf den haus nahmen will ich filtern genau hier local haus gibt mir ausnehmen local haus

01:20:09.560 --> 01:20:17.120
local haus punkt local domain sehr außerirdisch so sort und jetzt schauen wir mal ob das ob das

01:20:17.120 --> 01:20:29.160
sortiert ist jetzt schauen wir mal ob das sinnvoll sortiert ist minus l fängt an 17 59 hört auf 18

01:20:29.160 --> 01:20:48.120
nur 14 17 das sieht sortiert aus easy ja aber nicht schön nicht schön easy aber echt nicht

01:20:48.120 --> 01:20:54.360
schön so jetzt brauchen wir noch eine ordentliche tabellen ausgabe dafür habe ich das hier gefunden

01:20:54.360 --> 01:21:02.960
leute auf github da kann man table da kann man tables tables machen im terminal mit und

01:21:02.960 --> 01:21:10.240
uns komische dinger im terminal meinen und es muss ja ein bisschen fancy aussehen deswegen

01:21:10.240 --> 01:21:26.920
gucken wir uns mal das example hier vorn an libby malen genau so ach nee moment ich muss

01:21:26.920 --> 01:21:43.480
es noch importieren skolle skolle skolle hallo sync ja excel genau naja vielleicht nicht ganz

01:21:43.480 --> 01:21:54.640
so fancy wie excel es mag er nicht leute das mag er nicht doch es funktioniert leute kommt

01:21:54.640 --> 01:22:01.040
mal da tabelle aber die programme von meinem dort net program sind deutlich schöner guckt

01:22:01.040 --> 01:22:10.680
mal minus minus minus minus ran guck mal hier die sehen deutlich web 3.0 liga aus als die da

01:22:10.680 --> 01:22:22.560
das ist viel schöner als das da aber ich will mal nicht so anspruchsvoll sein passt schon hauptsache

01:22:22.560 --> 01:22:37.920
hauptsache tabelle also start and time left created by brauche da start and time left created

01:22:37.920 --> 01:22:57.000
bei oder so message nennen wir das message message ok passt so den inhalt der ergibt

01:22:57.000 --> 01:23:08.000
natürlich überhaupt keinen sinn wie kann ich da jetzt was hintendran hängen ok table table

01:23:08.000 --> 01:23:12.880
oder sowas nee das wäre ja auch oh nee muss ich jetzt wird diese ekliche append syntax

01:23:12.880 --> 01:23:32.760
machen append oder so nee pointer what nein nein das ist moment das ist ein table printer

01:23:32.760 --> 01:23:41.720
das ist wieder was anderes aber wahrscheinlich muss ich das da erst mal rausnehmen und das

01:23:41.720 --> 01:23:49.840
so reinschreiben und jetzt kann ich sagen table append ok table append da muss ich jetzt

01:23:49.840 --> 01:23:55.360
den gleichen krempel ja noch mal hintendran hängen funktioniert das denn nein natürlich

01:23:55.360 --> 01:24:07.080
nicht was ist es denn für ein typ ok das ist nicht hilfreich was ist es denn für ein typ

01:24:07.080 --> 01:24:15.440
was ist chat was ist das hier für ein typ ich bekomme halt hier keine hilfe in der anzeige

01:24:15.440 --> 01:24:26.280
ein string array nee kein string array ein array aus string arrays also ein nested array

01:24:26.280 --> 01:24:38.960
also ist das hier quasi ein string array oder nee aber moment wir sind ja in go wie das

01:24:38.960 --> 01:24:47.400
funktioniert jetzt wait a minute das geht warum muss ich denn den typ explizit da vorschreiben

01:24:47.400 --> 01:24:53.280
sollte er nicht wissen was das für ein typ ist weil ich meine meine data table hat halt

01:24:53.280 --> 01:25:02.880
string elemente string array elemente naja gut muss ich muss ich nicht verstehen soll

01:25:02.880 --> 01:25:11.880
mir recht sein also da müssen wir jetzt ja die ganzen sachen hier anhängen also war mal

01:25:11.880 --> 01:25:23.400
eine schleife die haben wir nicht an dem moment über alle silences so und da drin machen wir

01:25:23.400 --> 01:25:34.440
jetzt table append machen wir das auch mal unten hin und das auch mal unten hin so also

01:25:34.440 --> 01:25:45.960
als erstes brauchen wir die startzeit also quasi silence utc start und dann wahrscheinlich

01:25:45.960 --> 01:25:56.960
string weil geht sonst nicht ok end time es ist keine valid array sind tags nur geschweifte

01:25:56.960 --> 01:26:04.160
klammern anzugeben ja aber warum geht es dann hier und hier nicht warum darf ich das da

01:26:04.160 --> 01:26:12.360
machen und da nicht so startzeit endzeit time left time left muss ich ausrechnen dass das

01:26:12.360 --> 01:26:39.880
funktioniert also wie machen man das jetzt time left vielleicht so stringer

01:26:39.880 --> 01:27:05.520
da verstehe ich den zusammenhang nicht ein stringer das ist so was wie to string über

01:27:05.520 --> 01:27:14.960
schreiben das brauche ich glaube ich nicht so also time left ist quasi silence moment

01:27:14.960 --> 01:27:29.280
das muss ich in der schleife machen so silence ends at utc abziehen davon time now ergibt

01:27:29.280 --> 01:27:42.840
das sinn also die zeit bis die silence abläuft ist die endzeit minus die aktuelle zeit die

01:27:42.840 --> 01:27:55.440
aktuelle zeit bis ja das ergibt sin das tatsächlich das ergibt sind so round auf seconds ok ok

01:27:55.440 --> 01:28:10.080
time left hätten wir auch string so created by ist wieder einfach sila silence created

01:28:10.080 --> 01:28:25.280
by silence created by comment ok er gibt nichts aus warum nicht weil ich nicht render moment

01:28:25.280 --> 01:28:40.520
ich render ja gar nicht hier und dann irgendwie render render ja und error ignorieren ich

01:28:40.520 --> 01:28:49.280
ich mache kein fehler war schickt hier einfach immer alle alle er war so tabel ok hey funktioniert

01:28:49.280 --> 01:28:58.800
leute guck mal und guck mal das sortieren funktioniert auch es fängt an mit 2 mit 52

01:28:58.800 --> 01:29:08.760
time left 580 das sortieren funktioniert auch aber das ist halt mega hässlich formatiert

01:29:08.760 --> 01:29:21.400
wie sieht das mit der upcoming silence aus also start time um 23 uhr starte in zwei stunden

01:29:21.400 --> 01:29:28.120
ja ok dann sagt er drei stunden ok das muss ich noch abfangen wenn die noch gar nicht

01:29:28.120 --> 01:29:44.880
gestartet hat also time left in seconds wunderbar dann machen wir sowas wie heim lefz heim lefz

01:29:44.880 --> 01:29:52.440
message oder so heim lefz string beste da weißt du gleich bescheid so weil wir können

01:29:52.440 --> 01:30:00.960
das nämlich so machen wenn wenn die silence noch nicht gestartet ist dann zeigen wir an

01:30:00.960 --> 01:30:06.240
was in state steht und in state sollte dann sowas wie pending oder upcoming oder sowas

01:30:06.240 --> 01:30:13.800
drin stehen so das heißt wir müssen jetzt gucken ist der silence status ich könnte mir

01:30:13.800 --> 01:30:19.800
vorstellen das kann man auch noch eine ganze ecke eleganter machen ist der silence status

01:30:19.800 --> 01:30:31.840
active dann sagen wir heim lefz dann print dann geben wir die echte zeit aus in zahlen

01:30:31.840 --> 01:30:47.680
und ansonsten geben wir aus dass es upcoming ist oder sowas pending genau ich finde das

01:30:47.680 --> 01:31:05.960
format gar nicht schlecht ehrlich gesagt ja aber nicht so advanced wie c so das ist gar

01:31:05.960 --> 01:31:12.040
nicht schlecht das ist genau das was ich haben will als ausgabe nur mit dem duration wäre

01:31:12.040 --> 01:31:19.960
noch toll in der tabelle noch eine duration ich meine wir haben start end und time left

01:31:19.960 --> 01:31:26.520
ob das reicht oder was meint ihr noch duration mein können wir machen ist jetzt nicht so

01:31:26.520 --> 01:31:31.360
als wäre das in irgendeiner art und weise duration als wäre das irgendwie schlimm

01:31:31.360 --> 01:31:50.600
vor created by so duration ist relativ relativ easy die duration ist silence end minus silence

01:31:50.600 --> 01:32:16.480
starts ane moment sab sab muss man machen nicht als wo string sein ok ja ne das muss

01:32:16.480 --> 01:32:22.080
man das muss wir hier oben machen das muss man das muss man rounden das sieht kacke aus

01:32:22.080 --> 01:32:34.680
das sieht das sieht dumm aus duration das sieht dumm aus rounds auf die sekunde und

01:32:34.680 --> 01:32:45.520
jetzt duration ring ja ja ja chat gute idee passt doch 15 minuten und davon time left

01:32:45.520 --> 01:32:52.640
zwei minuten endzeit ist dann dann und dann wunderbar finde ich gut schön jetzt muss

01:32:52.640 --> 01:32:58.800
wir die zeit noch ordentlich formatieren weil die sieht ziemlich ziemlich beknackt aus

01:32:58.800 --> 01:33:03.040
wir müssen utc vor allem noch umrechnen leute das ist ja utc wir wollen das ja gar nicht

01:33:03.040 --> 01:33:30.440
utc haben wir wollen local time haben location in in location 23 das ist schon besser in

01:33:30.440 --> 01:33:36.440
location ok ja das ist ok so als sozusagen format das ding muss noch ordentlich formatiert

01:33:36.440 --> 01:33:56.520
werden und zwar wollen wir jetzt haben moment tag monat ja stunde minute ach sekunde können

01:33:56.520 --> 01:34:07.120
wir uns glaube ich sparen ok in diesem format ja das sieht doch jetzt wirklich schon ganz

01:34:07.120 --> 01:34:14.040
brauchbar aus guckt mal startzeit von dann bis dann time left ne zeitzone brauchen wir

01:34:14.040 --> 01:34:19.040
nicht die anzeige ist immer in lokaler zeit ich will überhaupt nicht dass die leute wissen

01:34:19.040 --> 01:34:24.320
dass das ding auf utc läuft es ist immer die lokale zeit und die lokale zeit ist bei mir

01:34:24.320 --> 01:34:36.640
hardcoded auf europe berlin

01:34:36.640 --> 01:34:57.680
wir sind unten so tatsächlich das ist doch echt ganz nice ja ich also ich denke das können

01:34:57.680 --> 01:35:04.400
wir so lassen guckt mal unsere unsere silenzen sind ausgelaufen die waren bloß auf 35 sekunden

01:35:04.400 --> 01:35:12.000
und es hat funktioniert seht ihr ich war wir können jetzt wir können jetzt noch ein paar

01:35:12.000 --> 01:35:24.000
anlegen aber mal duration mal welche mit keine ahnung zwei stunden oder so legen wir noch

01:35:24.000 --> 01:35:32.760
mal ein paar an unit tests also wenn ihr seht wie oft ich fehler händler dann sollte klar

01:35:32.760 --> 01:35:43.080
sein ob es noch unit test gibt oder nicht einfach fehlerfrei programmieren easy so das

01:35:43.080 --> 01:35:49.560
finde ich tatsächlich ganz nett das gefällt mir jetzt so wie es ist ok also das haben

01:35:49.560 --> 01:35:58.640
wir print silences wunderbar next clear silences ist das nächste also sprich alle silences

01:35:58.640 --> 01:36:03.160
löschen die lasst mal überlegen fehlt noch irgendwas bei print nee eigentlich nicht

01:36:03.160 --> 01:36:07.880
ist alles alles sinnig oder ich meine du kannst ja auch angeben lassen wann was startet und

01:36:07.880 --> 01:36:15.400
dann ist gut ok als nächstes machen wir clear ich glaube clear ist ein bisschen

01:36:15.400 --> 01:36:29.360
feifertiger id nee die id ist egal es macht nur macht es nur unübersichtlicher ok also

01:36:29.360 --> 01:36:33.760
das brauchen wir hier oben auch auf jeden fall exakt das exakt das gleiche würde ich

01:36:33.760 --> 01:36:47.720
sagen ok clear doch ich habe eine idee was wir noch einbauen können wir können wir

01:36:47.720 --> 01:37:02.200
können noch gucken if silences ich will länge gucken wie guckt man denn länge in go cap

01:37:02.200 --> 01:37:10.160
was ist der unterschied ah das ist wie viel theoretisch reinpassen würde bevor er resize

01:37:10.160 --> 01:37:14.760
muss und länge ist wie viel elemente drin sind rate ich jetzt einfach mal weiß nicht

01:37:14.760 --> 01:37:24.200
ob das stimmt so wenn länge gleich gleich null dann sagen wir sowas wie no matching

01:37:24.200 --> 01:37:34.360
sei ist silences found und dann muss das raketen nee was moment was ist ein gutes emoji dafür

01:37:34.360 --> 01:37:54.680
set set face der da oder der da die rakete rakete haben wir schon setke was ein aski setke

01:37:54.680 --> 01:38:16.840
ok weil ihr seid setke weil ihr seid chat copy image we get hallo an ich copy image copy

01:38:16.840 --> 01:38:30.480
image link we get pog nie war wie ist das andere j

01:38:30.480 --> 01:38:51.760
color fill hier setke

01:38:51.760 --> 01:39:05.080
aber das kann kriege ich da so nicht rein 100 sekunden 100 sekunden templo ist nicht

01:39:05.080 --> 01:39:29.380
Leute wie kriege ich das kriege ich da gar nicht gescheit rein

01:39:29.380 --> 01:39:36.480
ich kann da nicht einfach sehr gerein kopieren das in pisen würde das funktionieren da würde

01:39:36.480 --> 01:39:41.080
ich dann einfach so machen und dann wird der string nicht es käme hat go so was wie go

01:39:41.080 --> 01:39:52.400
längs string string literal mit mit stimmt ich könnte in online escape tool verwenden

01:39:52.400 --> 01:40:09.800
wenn ich hier sagen prindle moment rider hat das formatiert für mich sekunde mal

01:40:09.800 --> 01:40:23.720
kurz schauen moment minus mensch go fack mich nicht ab

01:40:40.440 --> 01:41:00.400
es funktioniert selke es macht auf jeden fall meine farbausgabe kaputt da unten drunter

01:41:00.400 --> 01:41:26.920
das lasse ich drin das lasse ich drin aber nicht so dass das muss ich mir gucken wie

01:41:26.920 --> 01:41:33.360
ich das anders formatiere aber aber aber es funktioniert im prinzip schon das film moment

01:41:33.360 --> 01:41:49.800
irgendwie span terminal gerade kap kaputt champ normalerweise war das doch mal blau

01:41:49.800 --> 01:41:59.240
keine ahnung wir haben es irgendwie gebraked gerade

01:41:59.240 --> 01:42:14.600
so also next clear silences weiter im weiter im text also wir wollen alle silences löschen die

01:42:14.600 --> 01:42:22.920
es gibt das heißt wir müssen so was hier machen von der idee her wir rufen alle silences ab die

01:42:22.920 --> 01:42:28.480
vom programm erstellt wurden und die nicht expired sind weil die liten bedeutet expire

01:42:28.480 --> 01:42:35.040
setzen nicht wirklich die liten also da machen wir das gleiche hier nochmal no matching silences

01:42:35.040 --> 01:42:44.880
found return ich aus irgendwelchen gründen habe ich mir ganz gute er aus zu return die ich eh nicht benutze so

01:42:44.880 --> 01:42:52.600
no matching silences found so clear silences also vor wir brauchen im prinzip wieder die

01:42:52.600 --> 01:43:01.960
gleiche schleife wie hier unten nur nur mit weniger inhalt und und also wir brauchen die

01:43:01.960 --> 01:43:06.800
ganzen schmorder hier brauchen wir nicht mehr so und jetzt müssen wir es löschen also rein von

01:43:06.800 --> 01:43:20.000
der idee her ist es alert manager api delete silences silences id so nur mit dem unterschied

01:43:20.000 --> 01:43:29.040
dass es diese diese funktionen noch nicht gibt create method delete also muss sagen go land ist

01:43:29.040 --> 01:43:34.240
tatsächlich ziemlich high iq guck mal da kann es sogar für mich anlegen und sogar mit den richtigen

01:43:34.240 --> 01:43:44.680
sogar mit der richtigen id obendrinne stimmt die bedingung beim wer wo was welches wer

01:43:44.680 --> 01:44:04.360
was meinste state ja alles was nicht expired ist die will ich die will ich löschen ja ich

01:44:04.360 --> 01:44:11.120
will alles was aktiv ist löschen so also alert manager delete silences wie macht man ein delete

01:44:11.120 --> 01:44:17.960
da wirst du jetzt wieder in die schwäger api gucken ich war ich war mal ein paar tabs zu

01:44:17.960 --> 01:44:28.160
kann bis sie zu unübersichtlich die schwäger api delete einfach silences id ok das ist

01:44:28.160 --> 01:44:48.840
tatsächlich relativ easy also sprich eigentlich können wir doch eigentlich sagen htp delete ok

01:44:48.840 --> 01:44:53.920
es ist go ich hätte ich hätte wissen müssen dass die standard library nix taugt an der stelle

01:44:53.920 --> 01:45:01.280
wieder das ist doch bescheuert warum gibt es warum gibt es get und warum gibt es post warum

01:45:01.280 --> 01:45:09.840
gibt es nicht mal mindestens noch delete und update ne was was sind die vier dinge die man

01:45:09.840 --> 01:45:21.560
braucht standardmäßig öfters delete post get putt putt ne patch nicht putt putt meine ich ja aber

01:45:21.560 --> 01:45:27.480
warum ist das da nicht drinnen das ist ziemlich ziemlich beweger ok dann kopieren wir uns das mal

01:45:27.480 --> 01:45:42.480
hierher request new request method obwohl es da gibt das ist das ist wirklich das ist wirklich

01:45:42.480 --> 01:45:55.320
maximal bescheuert dass man das nicht da integriert hat ok api url plus silences ne plus silence

01:45:55.320 --> 01:46:07.680
slash plus id ja ich weiß dass das hier nicht schön ist sowas zu machen aber die standard

01:46:07.680 --> 01:46:20.560
library hat keine url join methode und jetzt sagen wir client du requests und natürlich wird

01:46:20.560 --> 01:46:26.760
der error ignorieren was sonst mehrere errors ignorieren alles ignorieren wie ignoren alle

01:46:26.760 --> 01:46:44.080
errors so delete silence ja das sollte das sollte jetzt so weit funktionieren ok in klein sagen

01:46:44.080 --> 01:47:04.960
was haben wir denn all silences for this post have been removed hog set by this program

01:47:04.960 --> 01:47:14.760
wir sparen uns einfach text wir schreiben einfach nur progo rein wenn man nur eine

01:47:14.760 --> 01:47:20.600
remove möchte hat man pech da muss man ins web interface gehen ja aber 119 ist noch nicht

01:47:20.600 --> 01:47:36.280
aus go so schauen wir mal ob das mit dem delete funktioniert ops ich habe mein terminal geschlossen

01:47:36.280 --> 01:47:51.960
ne wo müssen wir hin go bosschamp jetzt ist wieder blau guckt also list geht jetzt

01:47:51.960 --> 01:48:09.120
klären wir mal alles aus hat nicht funktioniert hat nicht funktioniert leute ich weiß aber

01:48:09.120 --> 01:48:22.760
nehmen nicht warum es nicht funktioniert hat das müssen wir jetzt irgendwie die bag dfx

01:48:22.760 --> 01:48:28.360
macht er denn hier eine schleife überhaupt lull error handling ist sowas von bloated

01:48:28.360 --> 01:48:40.960
aber minus z ja schleife macht er all silences id

01:48:40.960 --> 01:48:53.520
ne agil ist es nicht ist zu veröffentlichen was nicht funktioniert warum funktioniert

01:48:53.520 --> 01:49:04.080
mein krempel nicht den ich hier gemacht habe warum warum geht es nicht was ist hier was

01:49:04.080 --> 01:49:23.240
ist hier kaputt silence delete id ok es steht da steht da eine id drinne aber es funktioniert

01:49:23.240 --> 01:49:34.560
nicht ok da müssen wir uns doch die response angucken man die response ist was ist jetzt

01:49:34.560 --> 01:49:55.400
ahja doppelpunkt es hat alles funktioniert

01:49:55.400 --> 01:50:19.240
ich lösche auf jeden fall schon mal nicht das richtige

01:50:19.240 --> 01:50:29.680
1 2 3 4 stück der sollte 5 1 2 3 4 5 sollte er versuchen zu löschen

01:50:29.680 --> 01:50:53.400
ja die errors bringen wir aber an der stelle auch nichts was hat er jetzt für schmerzen

01:50:53.400 --> 01:50:59.760
ne ne da gibt es kein error ach mensch god ist so nervig an manchen stelle

01:50:59.760 --> 01:51:08.280
ey mann dass diese sprache fackt mich teilweise so krass ab was ist das für eine scheiße

01:51:08.280 --> 01:51:13.920
wieder ich mein warum darf ich die variablen nicht so drinnen lassen und ich meine ich

01:51:13.920 --> 01:51:17.080
weiß dass sie nicht benutzt wenn ich will sie jetzt auch gar nicht benutzen aber nachher

01:51:17.080 --> 01:51:23.200
schon also das ist wirklich so babysitting was ich echt nicht gebrauchen kann es gibt

01:51:23.200 --> 01:51:36.160
kein fehler ist alles ok das backend ist auch go ich lösche ich das falsche oder was

01:51:36.160 --> 01:51:43.680
es gibt keine permissions ok error handling kann wieder weg es gibt kein error error is

01:51:43.680 --> 01:51:50.920
bloated prominent so also er löscht alles aber er löscht auch gleichermaßen nix

01:51:50.920 --> 01:52:03.960
god go mann so eine nervige dreck sprache was das angeht ok also warum warum löscht

01:52:03.960 --> 01:52:17.120
er das nicht das verstehe ich nicht er findet aber er löscht es nicht was macht er denn

01:52:17.120 --> 01:52:24.440
überhaupt für einen request lass mal kurz gucken macht er das denn vielleicht verkehrt

01:52:24.440 --> 01:52:53.560
delete so a local host api silence wegen den doppelten slashes vielleicht tja

01:52:53.560 --> 01:53:02.240
zu dumm dass go keine url punkt join sache in der standard library hat das ist kein layer

01:53:02.240 --> 01:53:06.320
acht problem ich wollte es von anfang an richtig machen die go standard library hat einfach

01:53:06.320 --> 01:53:11.880
nix mit der man das machen kann gescheit ich wollte es von anfang an richtig machen um

01:53:11.880 --> 01:53:30.160
genau sowas zu vermeiden was halt richtig hängen geblieben ist also dann lege ich das

01:53:30.160 --> 01:53:43.920
mit ohne slash hinten aber das ist wirklich richtig richtig dämlich gut funktioniert

01:53:43.920 --> 01:53:48.960
go 1.19 enjoyer die gibt es noch gar nicht das ist noch nicht released das ist noch gar

01:53:48.960 --> 01:54:00.760
nicht raus ja pass join gibts ja aber url punkt join gibts nicht und pass punkt join

01:54:00.760 --> 01:54:11.880
funktioniert für urls für urls natürlich nicht so also so die die funktionalität drum

01:54:11.880 --> 01:54:30.720
herum haben wir jetzt jetzt bräuchten wir

01:54:30.720 --> 01:54:47.520
immer kann man sowas machen kann man sowas machen request url pass gleich pass dort join

01:54:47.520 --> 01:55:03.920
oder so da muss ich aber wahrscheinlich sowas hier machen ja immer kurz checken ob das jetzt

01:55:03.920 --> 01:55:28.920
funktioniert oder besser gesagt ob das funktionieren würde tragen wir es mal wieder falsch ein

01:55:28.920 --> 01:55:38.280
ach so ich muss erstmal das silence wieder anlegen lul naja oh hier das ist das silence

01:55:38.280 --> 01:55:51.520
anleger eu warum löscht er jetzt doppelt oder ist mein print einfach doppelt drinne

01:55:51.520 --> 01:56:08.720
aber mein print ist doppelt drinne äh jetzt so würde das silence äh warte mal ne moment

01:56:08.720 --> 01:56:25.560
das kann ja so nicht funktionieren ähm so und all die ja jetzt funktioniert ok so kann

01:56:25.560 --> 01:56:31.880
man dann kann man so auch nichts verkehrt machen das muss ich das muss ich dann hier

01:56:31.880 --> 01:56:36.120
oben auch machen aber das ist doch mal also das ist hässlich wie die nacht guckt euch

01:56:36.120 --> 01:56:41.960
das mal an ne ne ne ne also so da müsst ihr unbedingt was standard library technisch machen

01:56:41.960 --> 01:56:51.480
das kann so nicht bleiben so dann machen wir das so dann passt das ok und jetzt an die

01:56:51.480 --> 01:56:58.200
eigentliche hauptfunktionalität weil naja das listen und und löschen und so ist ja

01:56:58.200 --> 01:57:03.520
alles schön und gut aber wir wollen ja sachen erstellen wir wollen ja neue silences anlegen

01:57:03.520 --> 01:57:15.400
also ok lasst mal überlegen wie wie fangen wir denn da jetzt an wir verwerten mal ein

01:57:15.400 --> 01:57:21.000
paar sachen die wir die wir schon gemacht haben die wir die wir schon im letzten stream

01:57:21.000 --> 01:57:31.600
gemacht haben von dem was man hier was man hier braucht also ja das in kaddi die haben

01:57:31.600 --> 01:57:35.880
wahrscheinlich komplett eigene library für url handling und sowas gebaut glaubt mir

01:57:35.880 --> 01:57:43.440
das standard library kriegst du dir erst ab ok start time now now brauchen wir anscheinend

01:57:43.440 --> 01:57:59.040
ok start time haben wir schon system user system user könnten wir doch anlegen lassen

01:57:59.040 --> 01:58:07.280
aber ich habe eine idee system user könnten wir in main system user könnten wir in main

01:58:07.280 --> 01:58:15.040
schon anlegen lassen an der stelle hier allerdings nicht so wie es hier steht sondern dass es

01:58:15.040 --> 01:58:27.120
dann als default value drin steht also system user gleich blablabla username username so

01:58:27.120 --> 01:58:33.720
dann ist das default value bei user username dann sieht man nämlich auch was er standardmäßig

01:58:33.720 --> 01:58:45.040
nehmen würde nämlich default max also die folgtheit der user der wo man das ausführt

01:58:45.040 --> 01:58:54.240
ja so username ja passt doch eigentlich da können wir das nämlich hier gleich übergeben

01:58:54.240 --> 01:59:02.400
username string oder sollten wir das vielleicht besser irgendwie global setzen global global

01:59:02.400 --> 01:59:21.480
machen wir da aber nix global ist pains champ wir machen noch message string user ok

01:59:21.480 --> 01:59:36.920
also start time duration message message ist aber ein string argument message und jetzt

01:59:36.920 --> 01:59:47.880
brauchen wir noch was brauchen wir jetzt noch wir kriegen kein highlight user username und

01:59:47.880 --> 01:59:56.200
aber genau perfekt so und jetzt können wir anfangen date time now wir können auch sie

01:59:56.200 --> 02:00:01.480
was wir machen wir machen sonst jetzt einfach eine einfach weil wir haben sie ja oben schon

02:00:01.480 --> 02:00:25.520
mal ausgeführt wir geben es einfach als parameter mit so now easy ok da fehlten irgendwie so

02:00:25.520 --> 02:00:34.080
dann schrei ich mir einmal now aufrufen ja so und da können wir jetzt reinschreiben was

02:00:34.080 --> 02:00:38.200
man soll dann brauchen wir diesen krempel nicht mal das habe ich ja oben schon abgefackelt

02:00:38.200 --> 02:00:47.640
hostname ja hostname brauchen wir definitiv hostname brauchen wir hostname brauchen wir

02:00:47.640 --> 02:00:51.080
aber doch bei den anderen funktionen auch wenn ich das rechtliche erinnerung habe ja

02:00:51.080 --> 02:00:58.120
guckt mal hier hostname hostname gleich ok hostname muss glaubt da geht nichts anderes

02:00:58.120 --> 02:01:11.760
drum herum hostname fqdn hostname muss global sein gibt es irgendwie die möglichkeit dns

02:01:11.760 --> 02:01:19.680
für localhost zu machen go lang dns localhosts fqdn weil standardmäßig nimmt es bloß den

02:01:19.680 --> 02:01:24.720
normalen namen der bei mir progas ist aber ich will den fqdn von dem system haben how

02:01:24.720 --> 02:01:50.600
to find best fqdn for localhost best ane the nicht best ich ruf doch keine kommando zeilen

02:01:50.600 --> 02:01:57.800
what das mache ich jetzt ganz bestimmt nicht um den fqdn vom lokalen system rauszukriegen

02:01:57.800 --> 02:02:03.280
das sind das hier go fqdn hört sich nach der library an die das macht go lang package

02:02:03.280 --> 02:02:08.640
providing access to full qualif excellent das will ich haben genau das will ich haben

02:02:08.640 --> 02:02:32.400
show max show max park the show max hostname wie heißt das fqdn go fqdn ok leute ich bin

02:02:32.400 --> 02:02:46.760
zu ppega das zu zu benutzen habe ich was falsch gemacht examples ah moment ich noob da muss

02:02:46.760 --> 02:02:56.240
github davor so geht das nämlich auch und dann einfach fqdn fqdn hostname und wir sehen

02:02:56.240 --> 02:03:02.600
wieder exzellentes error handling so wie man es macht hostname fqdn weil dann kann ich

02:03:02.600 --> 02:03:09.040
nämlich die ganzen sachen dort wo ich das aktuell hardcoded drin stehen habe wegschmeißen

02:03:09.040 --> 02:03:23.040
zu hostname plus so exzellent ja ja über die shell könnte man das ohne probleme raus

02:03:23.040 --> 02:03:31.560
kommen ich will keine shell kommandos aufrufen dafür alles klar ok jetzt die eigentliche

02:03:31.560 --> 02:03:38.280
funktionalität für dieses tool hostname haben wir panic scheiß drauf start time start

02:03:38.280 --> 02:03:44.280
time passen müssen wir auch nicht mehr haben wir schon alles gemacht so dann fangen wir

02:03:44.280 --> 02:03:54.680
an message also gucken wir uns mal an was mache ich in meinem dotnet program als erstes

02:03:54.680 --> 02:03:59.920
set downtime anhängen an message ok das mache ich hier auch gucken ob das die gleiche syntax

02:03:59.920 --> 02:04:05.720
ist hey tatsächlich das ist der marker im web interface woran ich meine selbst gesetzten

02:04:05.720 --> 02:04:13.760
silencers und downtimes erkenne mach mal ausrufe zeichen heute da gibt es eine kleine

02:04:13.760 --> 02:04:19.240
erklärung also ich habe ein tool in dotnet mit dem du monitoring silencers setzen kannst

02:04:19.240 --> 02:04:22.720
von allen unsere server aus und das versuche ich gerade in go nachzubauen einfach weil

02:04:22.720 --> 02:04:30.920
es geht einfach weil es geht kein tieferen sinn einfach weil es geht so da kannst du

02:04:30.920 --> 02:04:35.640
wenn du auf dem system drauf bist dort wartungsarbeiten machen willst eingeben ja ich mache jetzt

02:04:35.640 --> 02:04:40.320
wartungsarbeiten und dann schlägt für dieses system die nächsten 15 minuten lang kein

02:04:40.320 --> 02:04:46.720
check mehr an und alarmiert auch keine leute dass das system down ist und sowas ok also

02:04:46.720 --> 02:04:59.920
message anhängen dann müssen wir diesen check hier machen genau if start time mach

02:04:59.920 --> 02:05:06.480
man kommt nanosekunden machen wir auch noch keckel schadet nichts location also was das

02:05:06.480 --> 02:05:14.400
hier macht ist folgendes das guckt ob die zeit die eingegeben wurde in der vergangenheit

02:05:14.400 --> 02:05:20.360
liegt und wenn die zeit also stellt euch mal vor ihr loggt euch das ist muss super precise

02:05:20.360 --> 02:05:25.920
mit nanosekunden sein stellt euch vor ihr loggt euch um 23.50 auf dem server ein weil

02:05:25.920 --> 02:05:35.480
ihr um 015 wartungsarbeiten macht und ihr gebt ein start der wartungsarbeit 015 dann

02:05:35.480 --> 02:05:41.040
nimmt er standardmäßig den aktuellen tag und der aktuelle tag ist ja letzte nacht

02:05:41.040 --> 02:05:48.040
015 und nicht nächste nacht 015 was es eigentlich sein müsste also nächster tag deswegen guckt

02:05:48.040 --> 02:05:53.320
er wenn das datum was man setzen will in der vergangenheit liegt dann macht er das

02:05:53.320 --> 02:06:01.200
gleiche datum aber für nächsten tag so und das finde ich ist an der stelle ganz sinnig

02:06:01.200 --> 02:06:10.120
so zu haben das ist 6 header check genau so end time brauchen wir da noch genau start

02:06:10.120 --> 02:06:25.920
time äh nee duration ist die end time und wenn nächster tag neuer ist wieso passt doch

02:06:25.920 --> 02:06:32.560
das kann der händel das kann der händel wenn du es am 31 macht das das das das checkt

02:06:32.560 --> 02:06:42.280
er dann zählt er auch das jahr hoch das checkt er soll jetzt legt er hier die silence an

02:06:42.280 --> 02:06:48.960
gut silence anlegen brauchen wir noch eine methode in unserer alert manager api klasse

02:06:48.960 --> 02:07:11.000
ok cutten wir das mal so nicht nicht delete silence sondern nennen wir es mal post silence

02:07:11.000 --> 02:07:14.880
und da kopieren wir mal diesen ganzen crap rein weil ich mir noch angucken muss was wir

02:07:14.880 --> 02:07:21.840
genau machen müssen also was brauchen wir denn erstmal das hier aus kommentieren und

02:07:21.840 --> 02:07:39.720
gucken was wir alles brauchen silence brauchen wir den hostname ok also hostname start time

02:07:39.720 --> 02:08:08.760
end time der autor und ein comment so können wir doch eigentlich alles so lassen soweit

02:08:08.760 --> 02:08:22.160
comment ja genau jason jason marschall gucken ob das noch passt was ich da gebaut habe

02:08:22.160 --> 02:08:26.640
jason marschall silence post ja moment nee das ist noch hardcoded das funktioniert natürlich

02:08:26.640 --> 02:08:45.600
an der stelle so auf gar keinen fall ja es ist ja noch hardcoded so also nicht hardcoded

02:08:45.600 --> 02:08:51.720
sondern wie muss man den krempel machen hier oben haben wir es doch muss ich das muss ich

02:08:51.720 --> 02:08:57.760
das wieder so machen ok ich muss es wieder ich muss es wieder unnötig kompliziert machen

02:08:57.760 --> 02:09:06.840
weil weil gold standard library also client request method ist diesmal post wollen post

02:09:06.840 --> 02:09:21.320
request machen url so silences passt achso nee wir wollen was posten wie mache ich denn

02:09:21.320 --> 02:09:44.640
ein poster mit jetzt body ja genau war jetzt so ja alles klar und dann sage ich response

02:09:44.640 --> 02:09:58.920
gleich client do request gut hat der chat erfahrung mit docker und zeitzone wie kann

02:09:58.920 --> 02:10:05.280
er am besten die zeitzone wechseln du kannst environment variable angeben meistens für

02:10:05.280 --> 02:10:32.120
zeitzone docker kram wir returnen übrigens bei post silence die id von dieser silence

02:10:32.120 --> 02:10:41.560
id so und wenn der kram den ich das letzte mal gemacht habe funktioniert dann sollte

02:10:41.560 --> 02:10:48.880
er hoffentlich auch heute noch funktionieren ich kann jetzt silences anlegen also lass

02:10:48.880 --> 02:11:03.240
mal überlegen end time da machen wir jetzt folgendes silence id wobei nicht alert mannager

02:11:03.240 --> 02:11:18.880
api post silence so hostname start time end time user und comment nee wie habe ich das

02:11:18.880 --> 02:11:24.160
comment message nicht message message heißt das ok jetzt sollte eine silence anlegen silence

02:11:24.160 --> 02:11:33.480
id sollte ich zurückbekommen wenns funktioniert hat so ok dann copy paste ich den kram von

02:11:33.480 --> 02:11:42.800
gestern und dann haben wir moment ansie konsole nee das ist nicht so ganz richtig was da steht

02:11:42.800 --> 02:11:51.920
kann man hier 25 stunden als duration angeben ja das geht probieren wir gleich aus erinnere

02:11:51.920 --> 02:12:00.760
mich dran sollte funktionieren das probieren gleich aus monitoring silence created silence

02:12:00.760 --> 02:12:08.640
id und dann die rakete ganz wichtig wir sind wir sind agil da muss die rakete muss schon

02:12:08.640 --> 02:12:15.080
rein so silence starts in bla lassen wir mal weg gucken wir mal ob es prinzipiell funktioniert

02:12:15.080 --> 02:12:23.200
also er sollte jetzt wenn das alles funktioniert ohne parameter eines silence anlegen von jetzt

02:12:23.200 --> 02:12:30.760
bis 15 minuten schauen wir mal ob das funktioniert hat wobei wir können doch uns selbst listen

02:12:30.760 --> 02:12:49.440
das ist schon mal nicht gut der sollte die jetzt auch schon finden wenn ich die angelegt

02:12:49.440 --> 02:13:18.520
hab es ist keine silence active stimmt id ist leer der hat die gar nicht angelegt warum

02:13:18.520 --> 02:13:35.360
was ist da schon wieder los was was soll das warum hat er die nicht angelegt

02:13:35.360 --> 02:13:54.960
was hat er was hat er für probleme ich muss mal kurz in die swagger doku gucken ob man

02:13:54.960 --> 02:14:14.200
es überhaupt so macht ja post silence das ist richtig du requests schau mal mal unsupported

02:14:14.200 --> 02:14:35.000
mediatype ja ja ja ja ja mediatype header also so request header add bam funktioniert

02:14:35.000 --> 02:14:58.080
easy minus l jawoll zeigt er auch an minus c clear minus l nichts mehr da wunderbar klappt

02:14:58.080 --> 02:15:02.760
so jetzt müssen wir natürlich auch ein paar status sachen anzeigen dass das ein bisschen

02:15:02.760 --> 02:15:12.720
ein bisschen mehr darüber weiß also start in was ist keck minutes was ist was ist keck

02:15:12.720 --> 02:15:20.240
keck minutes habt ihr habt ihr irgendein plan was das mal gewesen ist gestern in der duration

02:15:20.240 --> 02:15:36.760
müsste das sein irgendeine duration also ne duration keck minutes ja weiß man ich benenne

02:15:36.760 --> 02:15:41.460
meine variablen immer so vorzüglich dass man sofort bescheid weiß was mal was gewesen

02:15:41.460 --> 02:15:57.800
ist ja seile 132 a ja start time minus sub time now ah dann ist das sowas wie duration

02:15:57.800 --> 02:16:08.480
until start oder sowas in der richtung ist das dann ok start time sub now rounden wir

02:16:08.480 --> 02:16:27.200
mal wieder auf time seconds dann ist das dann ist das sowas hier ja string oh wat ne moment

02:16:27.200 --> 02:16:36.560
was mach ich denn da nutzen starts in null sekunden ok da machen wir jetzt noch ein

02:16:36.560 --> 02:16:40.440
bisschen wir sorgen dafür dass es noch ein bisschen schöner ist wir sagen jetzt einfach

02:16:40.440 --> 02:16:46.320
if duration until start ist kleiner gleich null ich weiß nicht ob es einen fall gibt

02:16:46.320 --> 02:16:50.280
wo es kleine null sein könnte aber wenn es kleiner gleich null ist dann sagen wir duration

02:16:50.280 --> 02:17:02.480
until start ist now ach ne moment das eine ist ja keine ahnung start text gleich duration

02:17:02.480 --> 02:17:25.040
string und ansonsten now so now starts in now ok also start in doppelpunkt now ja start

02:17:25.040 --> 02:17:35.160
now ne aber start in now ist auch durf start start now sowas so ich glaube besser so jetzt

02:17:35.160 --> 02:17:39.520
machen wir das noch ein bisschen farbig und zwar habe ich das gesehen das kann mit pterm

02:17:39.520 --> 02:17:47.080
machen dann kann man so sagen pterm red ist der text dann rot viel besser aber leute rot

02:17:47.080 --> 02:17:54.240
allein tut kattet es nicht es muss rot bold und underline und und andere und unterstrichen

02:17:54.240 --> 02:18:12.600
sein drunter mache ich es nicht bold ne ok wie macht man das jetzt bold ok pterm bold

02:18:12.600 --> 02:18:26.360
muss ich mir angucken blinkend sehr gute idee blink blink blink wie macht man blink blink

02:18:26.360 --> 02:18:32.800
pterm gibt es sowas wie blink blink jawoll ich bin mir nur nicht ganz sicher wie ich

02:18:32.800 --> 02:18:49.880
das wie ich das ausgebe ich brauche mal ein paar examples davon easy to use colors pterm

02:18:49.880 --> 02:19:11.760
utils pack ne colors ja sowas da im prinzip alter das ist ja mal die hässlichste terminal

02:19:11.760 --> 02:19:21.560
library von der formatierung die ich je gesehen habe bg term bg s print moment muss ich sowas

02:19:21.560 --> 02:19:39.080
machen blink s s print und und und dann start text funktioniert so das heißt wenn ich das

02:19:39.080 --> 02:19:46.800
jetzt bold und underline machen will muss ich dann allen ernstes sowas hier machen bold

02:19:46.800 --> 02:20:03.720
s print das ist ja nesting hell das wird ja dann pterm fg red s print das kann so nicht

02:20:03.720 --> 02:20:15.280
gedacht sein oder ne oder das kann so nicht gedacht sein pterm underscore s print ne leute

02:20:15.280 --> 02:20:19.640
sagt mir wie es anders geht das kann so nicht gedacht sein guckt euch das mal an das ist

02:20:19.640 --> 02:20:43.600
doch massif hyper keck ist das aber es funktioniert

02:20:43.600 --> 02:20:47.440
das muss schneller blinken ich glaube die blink geschwindigkeit kann man in der shell

02:20:47.440 --> 02:21:00.480
nicht angeben es gibt fast blink wirklich fast fast blink ist aber kein unterschied

02:21:00.480 --> 02:21:23.040
oder es ist kein unterschied das muss glaube ich das terminal unterstützen

02:21:23.040 --> 02:21:33.560
ich glaube dass das muss muss die shell unterstützen

02:21:33.560 --> 02:21:46.200
aber banana split schön ist es auch nicht oder so jetzt testen wir mal was ist was ist

02:21:46.200 --> 02:21:57.640
wenn ich sage start time start time ist um 23 30 das stimmt ja schon mal nett er startet

02:21:57.640 --> 02:22:26.440
nicht genau siehst du schon mal schon mal ein nicer back start time wir haben den back

02:22:26.440 --> 02:22:33.040
time wir haben den back time wir haben die back time das ist keinprint glass es ist ein

02:22:33.040 --> 02:22:47.240
Now year, now month, now day.

02:22:47.240 --> 02:22:50.640
PTM new style.

02:22:50.640 --> 02:22:53.360
Okay.

02:22:53.360 --> 02:22:58.440
Zeig mal her.

02:22:58.440 --> 02:22:59.880
Style.

02:22:59.880 --> 02:23:12.800
Okay und dann anstatt diesem hässlichen Krämpel hier, Style, ah okay, okay ja, das ist tatsächlich

02:23:12.800 --> 02:23:13.800
ein bisschen besser.

02:23:13.800 --> 02:23:27.960
Okay, bold, fg red, underscore, ja das ist schon, das ist schon besser so, ja ja.

02:23:27.960 --> 02:23:38.320
Aber trotzdem ist es irgendein Bug in der, in der, in der, in der Timelibrary, Moment,

02:23:38.320 --> 02:23:52.480
warum ist Starttime, warum hat Starttime keine, ja Blinken, das ist nicht so wirklich wichtig,

02:23:52.480 --> 02:24:00.840
kein Datum gesetzt, ich mach das doch da oben explizit, PTM blink, so wunderbar, ich sag

02:24:00.840 --> 02:24:15.280
doch hier explizit Starttime, das Jahr, den Monat und den Tag von Now.

02:24:15.280 --> 02:24:16.280
Was steht denn in Now?

02:24:16.280 --> 02:24:30.720
Was steht denn in Now drin, ach, wait a minute, wait, wait a minute, ich, ich übergebe da

02:24:30.720 --> 02:24:31.720
Müll oder?

02:24:31.720 --> 02:24:39.320
Wartet mal Leute, ich mach da, ich mach da, ich mach da Mist, das kann sogar nicht funktionieren.

02:24:39.320 --> 02:25:09.080
Nao TS Value, ah das wird überschrieben, das wird überschrieb, ah okay, nee, nee, das ist

02:25:09.080 --> 02:25:17.960
nicht die kleine, kleine Nullzeile, das ist das hier, das wird überschrieben, ach hier,

02:25:17.960 --> 02:25:37.160
FMT Print TS Nao TS, ja da ist nur die Zeit drinne, Value, da ist nur die Zeit, da ist

02:25:37.160 --> 02:25:50.600
nicht, ahja, ahja, okay, okay, das ist natürlich, das ist natürlich pepega, das muss ich fixen,

02:25:50.600 --> 02:26:10.880
das kann so nicht funktionieren, ja, also Nao, Time Nao und nicht Nao TS, das ist, das

02:26:10.880 --> 02:26:18.400
braucht man nur für, das muss ich vielleicht ein bisschen was besseres überlegen, Nao,

02:26:18.400 --> 02:26:23.720
aber jetzt funktioniert meine Logik nicht mehr, jetzt startet es in 2 Stunden 24, okay,

02:26:23.720 --> 02:26:28.960
das ist okay, aber jetzt wird das hier nicht mehr funktionieren, jetzt startet es in 24

02:26:28.960 --> 02:26:40.400
Stunden, ah fuck, weil er nach before guckt, guck mal da, ja das ist natürlich doof, der

02:26:40.400 --> 02:26:49.280
guckt hier ist das, ist diese Zeit davor und das ist sie ja, weil es sind ein paar Nanosekunden

02:26:49.280 --> 02:26:56.760
vergangen von einem Befehl zum anderen, okay, das ist wirklich, das ist richtig, richtig

02:26:56.760 --> 02:27:03.440
pepega Kram, ja dann muss ich mir das anderweitig speichern, dann muss ich das so machen, dann,

02:27:03.440 --> 02:27:10.960
oh ich hab das falsch rum sortiert, ich blicke da nicht mehr durch, dann muss ich das Nao

02:27:10.960 --> 02:27:25.440
tatsächlich nicht hier zuweisen, sondern hier und wir usen das dann hier als Default Value,

02:27:25.440 --> 02:27:34.280
jetzt sollte es funktionieren, Nao, so 23.30 Uhr, 2 Stunden 22.50 Uhr, jawoll, jetzt funktioniert

02:27:34.280 --> 02:27:46.640
es, progge, so, listen wir mal, sollte auch alles klappen, jawoll, alles auflisten, Time

02:27:46.640 --> 02:27:53.520
left und die anderen sind pending, die starten erst 23.30 Uhr oder morgen 21 Uhr, so wir

02:27:53.520 --> 02:28:00.440
können alle löschen, progge alle gelöscht, funktioniert auch, ich würde fast sagen wir

02:28:00.440 --> 02:28:09.400
haben es mehr oder weniger, also ein paar Ausgaben fehlen auf jeden Fall noch, stimmt ja und

02:28:09.400 --> 02:28:30.320
hier, progge, Duration größer 24, ja das können wir ausprobieren, Duration 31 Stunden,

02:28:30.320 --> 02:28:44.120
wie pass hour, warum kann die Duration nicht größer 24 Stunden sein,

02:29:00.320 --> 02:29:11.160
Invalid Value, lass mich raten 23 geht, nee geht auch nicht, ach ich muss glaube ich,

02:29:11.160 --> 02:29:18.240
ich muss glaube ich so eingeben, 31 Stunden, ich glaube das ist die Go-Syntax, ist so,

02:29:18.240 --> 02:29:33.800
hat funktioniert, Start Now, Duration 31 Stunden, ja 31 Stunden Duration, das funktioniert,

02:29:33.800 --> 02:29:42.760
Time left 30 Stunden 59 Minuten 49 Sekunden, ok unsere QuickMuffs funktioniert aber, kann

02:29:42.760 --> 02:29:48.640
GoLand Test automatisch generieren, keine Ahnung, aber ich werde dafür keine Tests erstellen,

02:29:48.640 --> 02:29:54.960
wobei es ohne Scheiß, es wäre gar nicht blöd dafür Tests zu erstellen, das gucken wir

02:29:54.960 --> 02:30:05.000
uns vielleicht mal angucken, das wäre gar nicht blöd an der Stelle, weil es gibt schon

02:30:05.000 --> 02:30:11.440
so ein paar Sonderfälle die wir testen sollten, so geht die Duration, clear der alles, listet

02:30:11.440 --> 02:30:19.040
der Testweise alles, ja vielleicht sollten wir dafür wirklich ein paar Tests erstellen,

02:30:19.040 --> 02:30:32.960
ich glaube das wäre gar nicht so blöd, so also was müssen wir noch ausgeben, Start

02:30:32.960 --> 02:30:40.800
müssen wir ausgeben, ach so wisst ihr was wir noch machen könnten, wir könnten gucken,

02:30:40.800 --> 02:30:59.320
wir machen das so, Style, der normale Style ist einfach Bold, Red, Underscore und der

02:30:59.320 --> 02:31:10.240
Style für Now ist Bold, Underscore und Blink, also sprich, wenn ich jetzt was starte was

02:31:10.240 --> 02:31:18.760
jetzt gleich anfängt dann sieht das so aus und wenn ich was um 22 Uhr starten lasse dann

02:31:18.760 --> 02:31:30.640
blinkt es nicht, wenn es blinkt es wirkt so, so Achtung es geht los, oder kann man das

02:31:30.640 --> 02:31:44.400
vielleicht anhängen, ne Sevenhead, ne kann man wahrscheinlich nicht anhängen, in.net

02:31:44.400 --> 02:31:50.040
hätte ich jetzt sowas erwartet und dann irgendeinen Flag anhängen aber geht nicht, Style-Ed gibt

02:31:50.040 --> 02:31:55.920
sowas, ach tatsächlich, damit hätte ich jetzt wirklich nicht gerechnet, dass sich

02:31:55.920 --> 02:32:04.480
jemand was gedacht hat bei so, das geht natürlich nicht, ach man kann Style an Styles anhängen

02:32:04.480 --> 02:32:12.920
was auch immer, wir lassen es, wir lassen es so, keine Fivehead Library hat nicht funktioniert,

02:32:12.920 --> 02:32:21.760
lassen wir es, lassen wir es so, ok Startzeit wird angezeigt, dann brauchen wir noch Duration,

02:32:21.760 --> 02:32:31.760
das ist dann relativ simpel, Duration ist im Prinzip einfach nur Duration String, Comment

02:32:31.760 --> 02:32:37.440
brauchen wir noch, Comment ist Message, das ist bescheuert, dass ich das unterschiedlich

02:32:37.440 --> 02:32:49.400
genannt habe, obwohl es das gleiche ist, dann brauchen wir noch den Autor, User, ist dumm,

02:32:49.400 --> 02:32:53.960
dass ich die Sachen unterschiedlich genannt habe, so, also wenn ich das jetzt anlege,

02:32:53.960 --> 02:33:00.880
dann sieht das, oh Moment hier fehlt, hier fehlt irgendwo, kann auch ein Printl sein

02:33:00.880 --> 02:33:09.640
und kein Printf, so jetzt mal Vergleich, so das ist die Go-Variante und das ist die.net

02:33:09.640 --> 02:33:15.920
Variante, ich würde mal sagen, was das angeht Mission Accomplished, das ist mehr oder weniger

02:33:15.920 --> 02:33:23.080
identisch oder den anderen Cramp hier unten können wir wegmachen, noch ein, noch ein Printline

02:33:23.080 --> 02:33:31.640
unten drunter, so wo, wo gebe ich, wo habe ich Pogu ausgegeben, so da geben wir nicht

02:33:31.640 --> 02:33:48.720
Pogu aus, sondern irgendwas sinnvolles, ne Leute, ich brauche, ich brauche Englisch Skills,

02:33:48.720 --> 02:34:01.320
F, F being removed, ich brauche 5 fette Englisch Skills, dass ich das besser anhört, so minus

02:34:01.320 --> 02:34:17.800
C, ah Moment, minus, minus, Punkt, äh, wait a minute, minus C, all silences set by this

02:34:17.800 --> 02:34:37.280
program, that's why I've been removed, das klingt, klingt bescheuert, aber ok, das ist,

02:34:37.280 --> 02:34:43.600
die Meldung stimmt ja nicht so, no matching silences found, wunderbar, China-Chinesen

02:34:43.600 --> 02:34:55.120
everywhere, was ist hier mit Silences gemeint, das hier, der Prometheus Alert Manager, das

02:34:55.120 --> 02:35:03.760
ist ein Monitoring System, was deine Server überwacht und wenn du eine Silences einträgst,

02:35:03.760 --> 02:35:08.360
dann kannst du den Server ausschalten beispielsweise und solange die Silences aktiv ist, benachrichtigt

02:35:08.360 --> 02:35:14.640
dir niemand und dafür ist das Tool auch gedacht, stell dir vor, du bist Admin, hast Wartungsarbeiten

02:35:14.640 --> 02:35:20.600
nachts, gehst auf das System, machst Wartungsarbeiten, hast vergessen das Monitoring zu deaktivieren

02:35:20.600 --> 02:35:24.920
für das System und der Vorstand kriegt eine SMS geschickt, weil irgendein wichtiges System

02:35:24.920 --> 02:35:30.440
angeblich down ist, das willst du ja nicht, deswegen musst du das Silences vorher eintragen

02:35:30.440 --> 02:35:36.120
und nachdem die Leute immer so faul sind, habe ich mir gedacht, ein Tool, wo man Silences

02:35:36.120 --> 02:35:46.120
direkt vom Server aussetzen kann, wäre schon praktisch, ja, das funktioniert, Leute, heute

02:35:46.120 --> 02:35:50.440
haben wir wirklich Progress gemacht, würde ich sagen, wie viele Zeilen haben wir denn,

02:35:50.440 --> 02:36:02.720
212 Zeilen, joa, lasst es mir gefallen, ich glaube wir haben auch nichts vergessen, großartig,

02:36:02.720 --> 02:36:07.120
Tests können wir als nächstes mal machen, mit Go ein bisschen testen, bisschen zu Tests

02:36:07.120 --> 02:36:16.440
beschäftigen, sicherlich nicht verkehrt, das hier hat 109 Zeilen, das ist der Alertmanager,

02:36:16.440 --> 02:36:31.960
der ist ein bisschen pepo fett, oder, ah gut, aber so ist es halt, also 300 Zeilen würde

02:36:31.960 --> 02:36:42.320
ich mal sagen, so insgesamt zu 330 Zeilen, kann man das nicht anders nennen, mal Refactoring,

02:36:42.320 --> 02:36:54.920
was F2, nee, Moment, was war das Refactoring Menü nochmal, Shift F6 ist Rename, einfach,

02:36:54.920 --> 02:37:21.560
einfach nur ID, und das Ding heißt Shift F6, so, gut, Notifications, ja, nice, ich würde

02:37:21.560 --> 02:37:26.280
sagen, das ist jetzt auch relativ fehlerfrei, gut, wir haben Null Error Handling drinne,

02:37:26.280 --> 02:37:35.680
also wenn irgendwas nicht da ist, dann kackts ab und keiner weiß warum, such mal nach was,

02:37:35.680 --> 02:37:53.400
Machting, nee, hat mich nicht verschrieben, hab das richtig geschrieben, Machting, nee,

02:37:53.400 --> 02:38:09.200
Production Ready, jawoll, achso, guck mal, würde ich auf GoLand hören, das sagt mir

02:38:09.200 --> 02:38:18.240
auch schon, dass das ein Schreibfehler hat, mach meine Handy nochmal als Error Message

02:38:18.240 --> 02:38:26.880
ja ganz bestimmt, dann rufen die mich noch nachts an, wenn was nicht funktioniert, nice,

02:38:26.880 --> 02:38:36.560
so mit Zuduf funktioniert es auch vermutlich mal, what, na gut, ja mit Zuduf stimmt der

02:38:36.560 --> 02:38:49.680
Auto auch noch, alles gut, hast du Bereitschaftsdienst, nö, also wir müssen ein paar Tests, ähm,

02:38:49.680 --> 02:38:55.320
wie würde man einen Test machen in Go, ob es mit Zuduf funktioniert, gar nicht, oder,

02:38:55.320 --> 02:39:00.560
das wäre dann eben ein externes Testprojekt, gibt es, gibt es eine gute Möglichkeit zu

02:39:00.560 --> 02:39:05.240
testen, ob was mit Zuduf vorher funktioniert, mir würde, mir würde dann wirklich bloß

02:39:05.240 --> 02:39:18.200
einfallen, dass das ein extra Satz an Tests ist, ich bin zum größten Teil Homeoffice,

02:39:18.200 --> 02:39:25.100
ja, und wisst ihr was ich cool an dieser einen Library finde, die Hilfe ist auch relativ

02:39:25.100 --> 02:39:34.320
aussagekräftig, guck mal, die Usage ist bescheuert, die ergibt überhaupt keinen Sinn, kann man

02:39:34.320 --> 02:39:42.440
Usage disablen, die Usage die der anzeigt, stimmt nämlich schlicht und ergreifend nicht,

02:39:42.440 --> 02:40:10.920
ist das doch Description, äh, Description, blub, blub, blub, blub, blub, blub, blub,

02:40:10.920 --> 02:40:20.800
blub, blub, blub, blub.

02:40:20.800 --> 02:40:26.480
Ah da muss was drinstehen usage text

02:40:32.480 --> 02:40:38.800
Usage text so einfach so perfekte usage kann man das nicht disablen

02:40:41.760 --> 02:40:47.400
Kann man nicht sagen dass der einfach nix was ist flack usage

02:40:47.400 --> 02:40:55.000
Ich will ich will das disablen

02:40:55.000 --> 02:41:22.120
Was soll ich da großgescheit reinschreiben?

02:41:22.120 --> 02:41:26.760
Okay ja usage okay wir machen so set down time

02:41:26.760 --> 02:41:33.680
Nur mit dem Unterschied es gibt keine command es gibt keine global options es gibt bloß options

02:41:33.680 --> 02:41:38.000
Und Arguments gibt es auch nicht es gibt nur options

02:41:38.000 --> 02:41:53.840
So perfekt genau so muss es sein

02:41:53.840 --> 02:42:09.600
Moment commands help das funktioniert ernsthaft

02:42:09.600 --> 02:42:15.800
Kann man das

02:42:15.800 --> 02:42:20.600
Jetzt soll der gar nicht anzeigen

02:42:20.600 --> 02:42:29.480
Help heid help perfekt aber wenn ich helb helb heide dann kommt da gar nichts

02:42:29.480 --> 02:42:32.560
Ah ja doch jetzt ist die helb weg okay

02:42:32.560 --> 02:42:44.920
Er muss minus minus help machen herkel ja okay dann steht dieser blödsinnig da

02:42:44.920 --> 02:42:54.520
Command gibt es auch nicht mehr perfekt ja nice cool

02:42:54.520 --> 02:42:56.280
So und jetzt machen wir mal ein build

02:42:56.280 --> 02:42:59.800
Go build mal gucken wie groß das binary ist

02:42:59.800 --> 02:43:05.120
Ja geht doch

02:43:05.120 --> 02:43:17.640
Time user bin time minus v das braucht nichts an zeit

02:43:17.640 --> 02:43:27.800
Wir können noch debug symbols raus machen falls das go verkraftet strip postchamp go

02:43:27.800 --> 02:43:37.760
6,5 mb leute damit können wir leben oder

02:43:37.760 --> 02:43:42.320
Schauen wir mal wie lange mein alert manager damit macht guck mal true du

02:43:42.320 --> 02:43:49.800
Mal gucken

02:43:49.800 --> 02:44:00.080
Ganz schön viel los hier

02:44:00.080 --> 02:44:01.400
Aber abbrechen abbrechen

02:44:01.400 --> 02:44:06.240
Und jetzt listen und jetzt listen

02:44:06.240 --> 02:44:24.080
Ah falsches falsches Fenster

02:44:24.080 --> 02:44:25.760
Na ja geht doch

02:44:25.760 --> 02:44:29.080
Ist doch okay

02:44:29.080 --> 02:44:37.000
Der muss ja auch ordentlich was listen

02:44:37.000 --> 02:44:38.200
Ich mein der muss jetzt gerade

02:44:38.200 --> 02:44:44.600
2712 12 mal die api abrufen

02:44:44.600 --> 02:44:50.480
Ne muss er nicht

02:44:50.480 --> 02:44:54.000
Der macht einen api abruf stimmt überhaupt nicht was ich erzähl

02:44:54.000 --> 02:44:59.320
Der macht einen api abruf hat dann aber halt 2700 objekte drin die er deserialisieren muss

02:44:59.320 --> 02:45:02.680
und dann die tabelle rendern

02:45:02.680 --> 02:45:05.760
Das ist halt nicht so krass performant

02:45:05.760 --> 02:45:07.440
So dann lassen wir mal alles löschen jetzt

02:45:07.440 --> 02:45:10.120
Wie das ging schnell

02:45:10.120 --> 02:45:13.200
Easy alles weg das löschen ging deutlich schneller

02:45:13.200 --> 02:45:19.680
Du kannst die durations highlighten wenn sie fast abgelaufen sind okay

02:45:19.680 --> 02:45:25.040
Also durations machen wir mal zwei minuten

02:45:25.040 --> 02:45:28.200
Funktioniert funktioniert echt gut hätte ich nicht gedacht

02:45:28.200 --> 02:45:31.920
Kannst du mit open tml ja ich will es jetzt nicht mal kommt das ist ein komando zeilen

02:45:31.920 --> 02:45:32.920
tool

02:45:32.920 --> 02:45:36.720
Ich sammle da bestimmt keine monka dsg vo daten drinne

02:45:36.720 --> 02:45:41.520
Ist sie dort net variante beim rendern schneller

02:45:41.520 --> 02:45:44.920
Gute gute frage können wir mal ausprobieren

02:45:44.920 --> 02:45:51.160
Time left ja können wir tatsächlich machen

02:45:51.160 --> 02:45:54.840
Time left erinnere mich mal gleich dran dass man das mit der dot net variante ausprobieren

02:45:54.840 --> 02:45:55.840
Okay time left

02:45:55.840 --> 02:46:02.640
Dann dann sagen wir hier style wieder style

02:46:02.640 --> 02:46:08.880
So style ist einfach ganz ganz normal ohne alles

02:46:08.880 --> 02:46:21.200
If time left total minutes

02:46:21.200 --> 02:46:22.200
Ne gibts nicht

02:46:22.200 --> 02:46:34.640
Duration

02:46:34.640 --> 02:46:35.640
Wie kriege ich den jetzt raus

02:46:35.640 --> 02:46:45.560
Achso kleiner time seconds mal 30 oder so

02:46:45.560 --> 02:46:46.560
Style

02:46:46.560 --> 02:46:54.120
Red underscore so

02:46:54.120 --> 02:46:59.600
Und jetzt time left sprintf

02:46:59.600 --> 02:47:09.560
Okay zeig mal ja

02:47:09.560 --> 02:47:13.560
Funktioniert nicht

02:47:13.560 --> 02:47:14.560
Funktioniert nicht

02:47:14.560 --> 02:47:19.560
Moment

02:47:19.560 --> 02:47:20.560
Löst das hier überhaupt aus

02:47:20.560 --> 02:47:32.080
Warum ach ich hab das nicht

02:47:32.080 --> 02:47:35.080
Lull

02:47:35.080 --> 02:47:38.880
Okay duration

02:47:38.880 --> 02:47:42.720
30 sekunden

02:47:42.720 --> 02:47:52.520
Ja funst

02:47:52.520 --> 02:47:56.360
Und das andere duration 5 minuten

02:47:56.360 --> 02:47:57.360
Ist normal

02:47:57.360 --> 02:48:09.400
Ja nice funst

02:48:09.400 --> 02:48:15.200
Mach mal ausrufezeichen heute da steht ne zusammenfassung

02:48:15.200 --> 02:48:18.360
Okay ich sollte gucken ob das in dot net schneller rendert

02:48:18.360 --> 02:48:19.960
Probieren wir mal aus

02:48:19.960 --> 02:48:20.960
Also erste mal

02:48:20.960 --> 02:48:22.960
Build

02:48:22.960 --> 02:48:25.960
While

02:48:25.960 --> 02:48:31.000
Ich lass ihn mal ein bisschen was anlegen

02:48:31.000 --> 02:48:41.840
So sollte reichen denke ich

02:48:41.840 --> 02:48:46.880
Also 2151 angelegt

02:48:46.880 --> 02:48:50.920
So go minus L

02:48:50.920 --> 02:48:52.520
Go run minus L

02:48:52.520 --> 02:48:57.240
Oh schon ein bisschen was

02:48:57.240 --> 02:49:03.560
Ist das Arbeitszeit nee

02:49:03.560 --> 02:49:05.960
User bin bin time

02:49:05.960 --> 02:49:10.120
Okay wie lang läuft das

02:49:10.120 --> 02:49:23.280
Achso ich sollte das vielleicht

02:49:23.280 --> 02:49:34.600
Kann ich das irgendwie

02:49:34.600 --> 02:49:35.600
Ja 4 sekunden

02:49:35.600 --> 02:49:40.200
5 sekunden oder so

02:49:40.200 --> 02:49:43.200
Ich müsste eigentlich nur die Ausgabe von diesem Programm heiden

02:49:43.200 --> 02:49:44.640
Also quasi sowas hier machen

02:49:44.640 --> 02:49:57.280
Ah nee Moment

02:49:57.280 --> 02:49:58.760
Wie lass ich den jetzt das gescheit

02:49:58.760 --> 02:50:08.520
Ich hab keine Ahnung wie ich den gescheit nur die

02:50:08.520 --> 02:50:16.680
Ich bad time die Ausgabe weg haue

02:50:16.680 --> 02:50:18.800
Naja gut wir wissen es sind 5 sekunden

02:50:18.800 --> 02:50:22.400
Nee im Moment ist doch alles gut

02:50:22.400 --> 02:50:23.960
Ist doch alles gut

02:50:23.960 --> 02:50:25.160
Passt doch passt doch alles

02:50:25.160 --> 02:50:29.080
Passt doch alles doch alles doch alles richtig

02:50:29.080 --> 02:50:32.240
Minus V hab ich vergessen

02:50:32.240 --> 02:50:34.720
So elapsed wall clock 4 sekunden

02:50:34.720 --> 02:50:37.760
So wir machen der 0 das ist nicht am terminal

02:50:37.760 --> 02:50:39.760
Wobei nee wir machen kein def 0

02:50:39.760 --> 02:50:40.760
Lass uns rendern

02:50:40.760 --> 02:50:48.360
Also go braucht ungefähr

02:50:48.360 --> 02:50:51.040
4 sekunden wir können das noch mal richtig benchmarken

02:50:51.040 --> 02:50:52.040
Hyper

02:50:52.040 --> 02:50:57.040
Build

02:50:57.040 --> 02:51:08.000
Aber da spielt die startzeit jetzt noch ne rolle das wollen wir ja nicht

02:51:08.000 --> 02:51:09.000
Egal pause

02:51:09.000 --> 02:51:10.000
Champ

02:51:10.000 --> 02:51:11.000
Go

02:51:11.000 --> 02:51:12.000
Plus L

02:51:12.000 --> 02:51:15.000
So

02:51:15.000 --> 02:51:31.280
Dann zeigt mal her was zum

02:51:31.280 --> 02:51:32.280
Wo ist das Problem

02:51:32.280 --> 02:51:45.280
Wie starte ich denn den benchmark ich dachte

02:51:45.280 --> 02:51:57.920
Hier bin ich nicht ganz sicher was er für schmerzen hat aber ok

02:51:57.920 --> 02:52:01.560
Was haben wir denn für ein exit code

02:52:01.560 --> 02:52:04.760
Es geht auch deutlich zu schnell

02:52:04.760 --> 02:52:12.840
Normalerweise müsste ich so doch den kram starten können

02:52:12.840 --> 02:52:16.320
Ah nee jetzt legt er noch mal

02:52:16.320 --> 02:52:28.000
Weiß nicht was er für schmerzen ist aber egal

02:52:28.000 --> 02:52:41.040
Also go braucht ungefähr 4 sekunden 20 oder so

02:52:41.040 --> 02:52:42.040
Oder deutlich länger

02:52:42.040 --> 02:52:43.600
Hier 10 sekunden brauche ich jetzt auf einmal

02:52:43.600 --> 02:52:44.600
MonkaS

02:52:44.600 --> 02:52:47.320
Hab ich noch mal mehr angelegt gerade

02:52:47.320 --> 02:52:53.480
Oh wir haben jetzt 3000 ich hab nix gesagt

02:52:53.480 --> 02:52:54.480
Dauert noch mal länger

02:52:54.480 --> 02:52:57.800
Ok jetzt haben wir so ungefähr 10-11 sekunden

02:52:57.800 --> 02:53:00.440
Deswegen hätte ich jetzt eigentlich den benchmark gerne gemacht

02:53:00.440 --> 02:53:02.680
Dann dann weiß man es relativ relativ genau

02:53:02.680 --> 02:53:10.000
Warum ein minus minus hinter meinem Programm

02:53:10.000 --> 02:53:14.120
Ah ok das ergibt tatsächlich sinn

02:53:14.120 --> 02:53:18.200
Du hast recht ja das ergibt sinn

02:53:18.200 --> 02:53:23.240
Das Problem ist

02:53:23.240 --> 02:53:24.680
Ich glaube das checkt das wie

02:53:24.680 --> 02:53:34.200
Ok ich habe keine Ahnung was er für schmerzen hat

02:53:34.200 --> 02:53:35.200
Ehrlich gesagt

02:53:35.200 --> 02:53:43.560
Sag mal läuft da im Hintergrund noch was was weiter anlegt

02:53:43.560 --> 02:53:44.560
Oder was

02:53:44.560 --> 02:53:52.600
Nee der checkt das mit den Parametern nicht

02:53:52.600 --> 02:53:55.240
Die ich übergebe

02:53:55.240 --> 02:54:04.320
Der checkt das mit den Parametern nicht

02:54:04.320 --> 02:54:07.400
Muss man das quoteen

02:54:07.400 --> 02:54:35.960
Und das quoteen

02:54:35.960 --> 02:54:37.680
Ok das führt er zu oft aus jetzt

02:54:37.680 --> 02:54:40.280
Jetzt braucht er 2 Minuten um das ganze vorzubereiten

02:54:40.280 --> 02:54:50.440
Keckel alter 40% CPU Last

02:54:50.440 --> 02:54:52.160
Also er braucht irgendwas um

02:54:52.160 --> 02:54:56.360
Es schwankt es schwankt ein bisschen

02:54:56.360 --> 02:55:01.920
Irgendwas um 13 Sekunden aktuell

02:55:01.920 --> 02:55:23.800
Um das einmal auszuführen

02:55:23.800 --> 02:55:24.800
Ganz schön lang oder

02:55:24.800 --> 02:55:28.200
Ja 13 Sekunden komm brechen wir ab

02:55:28.200 --> 02:55:36.640
13 Sekunden sollen die dotnet Variante brauchen wie lang

02:55:36.640 --> 02:55:37.640
Minus L

02:55:37.640 --> 02:55:43.040
Der Startup ist halt oh das geht deutlich schneller

02:55:43.040 --> 02:55:49.160
Leute dotnet rennt das deutlich schneller

02:55:49.160 --> 02:55:50.640
Trotzdem langsam Startup

02:55:50.640 --> 02:55:56.440
Ja deutlich schneller

02:55:56.440 --> 02:56:00.880
2,3 Sekunden

02:56:00.880 --> 02:56:02.960
Viel viel schneller als die Go Variante

02:56:02.960 --> 02:56:06.520
Ja ich würde sagen die Terminal Library scheint nicht so super optimist zu sein

02:56:06.520 --> 02:56:12.160
Oder ich machs einfach

02:56:12.160 --> 02:56:14.320
Oder ich machs einfach nicht sinnvoll

02:56:14.320 --> 02:56:18.280
Ja es kann ja auch sein dass ich das total bescheuert hier rendere

02:56:18.280 --> 02:56:23.400
Berechnen für jeden Eintrag noch die Duration

02:56:23.400 --> 02:56:25.400
Das stimmt aber das dürfte nicht

02:56:25.400 --> 02:56:27.840
Mein 3000 adi Duration berechnen

02:56:27.840 --> 02:56:29.760
Das dürfte nicht nennenswert ins Gewicht fallen

02:56:29.760 --> 02:56:37.240
Äh ne oder

02:56:37.240 --> 02:56:43.240
Achso können wir ausprobieren

02:56:43.240 --> 02:56:51.360
Wobei ne hab ich hier hab ich hier

02:56:51.360 --> 02:56:53.720
Ahead of time überhaupt drinnen

02:56:53.720 --> 02:56:55.480
Ich glaub nicht

02:56:55.480 --> 02:56:58.280
Ne können wir jetzt nicht ausprobieren

02:56:58.280 --> 02:57:03.360
Ja alles klar also das haben wir drinnen

02:57:03.360 --> 02:57:09.240
Post der Post Champion Go

02:57:09.240 --> 02:57:13.760
Ich würd sagen das können wir so lassen

02:57:13.760 --> 02:57:15.440
Müssen wir jetzt nicht weiter dran rum basteln

02:57:15.440 --> 02:57:17.440
Was hat er für Warnings

02:57:17.440 --> 02:57:20.360
Zwei Warnings weil

02:57:20.360 --> 02:57:24.960
Ne kann mich mal

02:57:24.960 --> 02:57:27.080
Ne Rust mach ich heute echt nicht

02:57:27.080 --> 02:57:28.200
Und auch die nächsten Tage nicht

02:57:28.200 --> 02:57:32.840
Das hat mich ziemlich geärgert wie kompliziert da viele Sachen sind

02:57:32.840 --> 02:57:37.440
Ich mein wir könnten noch ein paar Error handling Sachen machen

02:57:37.440 --> 02:57:41.080
Also wir könnten zum Beispiel checken ob

02:57:41.080 --> 02:57:45.320
Ob Location auslesbar ist und ob Username auslesbar ist und sowas

02:57:45.320 --> 02:57:50.880
Aber ich mein man könnte ja man könnte ja quasi sowas hier sagen

02:57:50.880 --> 02:57:56.640
If also if Error zum Beispiel

02:57:56.640 --> 02:58:07.200
Panic could not read system username oder so

02:58:07.200 --> 02:58:15.680
Oder sowas

02:58:15.680 --> 02:58:20.880
Aber Error Handling ist für Pessimisten die denken dass der Kram kaputt geht

02:58:20.880 --> 02:58:22.360
Ich bin für kein Error Handling

02:58:22.360 --> 02:58:25.600
Error Handling ist bloated

02:58:25.600 --> 02:58:27.000
Wollen wir nicht

02:58:27.000 --> 02:58:30.520
Wenn es keine Fehler gibt braucht man auch kein Error Handling

02:58:30.520 --> 02:58:33.600
Dass es nicht auf Shit hab

02:58:33.600 --> 02:58:39.320
Tests Chat was ist mit euch los

02:58:39.320 --> 02:58:41.680
Zu viel Daily Scrum gemacht gestern oder was

02:58:41.680 --> 02:58:52.680
Ich meine ok der Error Check ist tatsächlich nicht so blöd an der Stelle hier

02:58:52.680 --> 02:59:01.600
Eigentlich eigentlich müssten wir auch noch checken

02:59:01.600 --> 02:59:09.680
Ob der den Hostname auslesen kann

02:59:09.680 --> 02:59:10.760
Kann man sowas hier machen

02:59:10.760 --> 02:59:13.920
Mal String

02:59:13.920 --> 02:59:18.880
Mein Location geh ich jetzt mal von aus dass er das auslesen

02:59:18.880 --> 02:59:22.440
Kann man das so wie macht man das am besten

02:59:22.440 --> 02:59:26.480
So hier in der Richtung

02:59:26.480 --> 02:59:37.440
Postname FQDN gleich

02:59:37.440 --> 02:59:38.440
Kann man das so machen

02:59:38.440 --> 02:59:40.000
Error

02:59:40.000 --> 02:59:56.240
If Error Post FQDN irgendwie so

02:59:56.240 --> 02:59:57.360
Kannst du das auf GitHub pushen

02:59:57.360 --> 02:59:59.160
Ja aber was wollt ihr damit

02:59:59.160 --> 03:00:03.240
Ich meine das kann außer bei uns bei mir auf der Arbeit auf den Systemen keiner wirklich

03:00:03.240 --> 03:00:05.800
Gebrauchen das Ding was ich da gestreckt hab

03:00:05.800 --> 03:00:11.960
Zumal auch hier aktuell noch Hardcoded meine lokale Alertmanager AP drinsteht

03:00:11.960 --> 03:00:12.960
Die muss ja noch austauschen

03:00:12.960 --> 03:00:16.400
Das Tool bringt wirklich denke ich keinem was

03:00:16.400 --> 03:00:28.800
Ich kann das pushen das ist kein Ding aber ich weiß nicht was man damit anfangen will

03:00:28.800 --> 03:00:34.120
Ich hab das in meiner Freizeit gemacht da hat keiner Rechte drauf von der Arbeit

03:00:34.120 --> 03:00:41.560
Nur noch in docker packen warum

03:00:41.560 --> 03:00:46.560
Warum

03:00:46.560 --> 03:00:50.240
Wo ist der Sinn in dem Fall von docker

03:00:50.240 --> 03:00:54.040
Ich meine das ist ein Kommando Zeilen Tool was auf alle Server drauf soll

03:00:54.040 --> 03:00:56.000
Das muss nicht in docker laufen

03:00:56.000 --> 03:01:00.760
Man könnte in docker Build Container machen aber bei Go ist das ja reichlich unsinnig

03:01:00.760 --> 03:01:01.760
Das ist ja das Gute

03:01:01.760 --> 03:01:02.760
Ist ja gerade das Gute an Go

03:01:02.760 --> 03:01:07.760
Dass du deine Beine ruhig überall laufen lassen kannst

03:01:07.760 --> 03:01:14.400
Für das Python Programm oder für die.NET Implementierung oder so

03:01:14.400 --> 03:01:18.160
Da brauchen wir irgendeinen Build Docker Container dass es noch auf uralt Betriebssystem läuft

03:01:18.160 --> 03:01:19.160
aber bei Go nicht

03:01:19.160 --> 03:01:25.400
PostChamp as a Service

03:01:25.400 --> 03:01:28.280
Das Programm ist dass du

03:01:28.280 --> 03:01:32.200
Stell dir vor es ist 23.45 Uhr du bist Admin musst Wartungsarbeiten machen

03:01:32.200 --> 03:01:38.440
loggst dich aufm System ein und das System wird überwacht

03:01:38.440 --> 03:01:41.880
Wenn das System weg ist kriegt der Vorstand eine SMS geschickt und sagt

03:01:41.880 --> 03:01:46.720
Wichtiges System ist weg und du musst das System Rebooten weil Colonel Update

03:01:46.720 --> 03:01:54.360
Du sitzt auf der Kommando Zeile und sagst um 23.29 Uhr Reboot und dann sagst du

03:01:54.360 --> 03:01:57.600
Fuck ich hab vergessen eine Maintenance zu setzen

03:01:57.600 --> 03:02:00.000
eine Monitoring Silence einzutragen

03:02:00.000 --> 03:02:05.920
Und dann hast du kein Bock ins Web Interface zu gehen oder beim 24 7 Support anzurufen

03:02:05.920 --> 03:02:08.160
und sagen hier deaktiviert man das Monitoring

03:02:08.160 --> 03:02:12.600
Sondern du sagst dann einfach PostChamp und schon hast du eine Monitoring Silence für

03:02:12.600 --> 03:02:15.920
15 Minuten eingetragen und kannst deine Wartungsarbeit machen

03:02:15.920 --> 03:02:16.920
Und dann gehst du daheim

03:02:16.920 --> 03:02:23.200
Wo wird denn noch dieser Müll ausgegeben von der von der Zeit

03:02:23.200 --> 03:02:31.480
Hier Star Time weg Bild

03:02:31.480 --> 03:02:34.480
Jawoll äh wie kann ich ich mal Bild

03:02:34.480 --> 03:02:41.600
Golang Binary Size Reduce was kann man da noch machen

03:02:41.600 --> 03:02:47.920
Shrinking your Binary Mit diesem verwirrenden Trick oder mit diesem

03:02:47.920 --> 03:02:49.880
komischen Trick Na da bin ich ja mal gespannt

03:02:49.880 --> 03:02:55.000
Was soll man machen

03:02:55.000 --> 03:03:05.520
LD Flex minus S minus W das trippt einfach nur die Debug Symbols weg

03:03:05.520 --> 03:03:07.640
Genauso wie ich eben von Hand gemacht hab

03:03:07.640 --> 03:03:13.320
Ja 6,5 MB das ist genau das gleiche

03:03:13.320 --> 03:03:20.360
Nein UPX verwende ich ganz bestimmt nicht Wenn ich UPX verwende dann wisst ihr was

03:03:20.360 --> 03:03:23.400
das erste ist Chat ratet mal was ist das erste was passiert

03:03:23.400 --> 03:03:28.560
Wenn ich das mit UPX packagen würde Das ist das allererste beim drauf kopieren

03:03:28.560 --> 03:03:34.480
Der Windows Defender würde sagen Genau der Windows Defender wir haben ja mittlerweile

03:03:34.480 --> 03:03:39.120
auf allen unsere Linux Servern Leider also ich kümmere mich ja nur nur um Linux Systeme

03:03:39.120 --> 03:03:42.000
Wir haben Windows Defender auf allen unsere Linux Server mittlerweile drauf

03:03:42.000 --> 03:03:48.080
Kein Spaß ist echt so ok Microsoft Microsoft Advanced Threat Protection

03:03:48.080 --> 03:03:53.920
ist aber es ist der Windows Defender der Password Leaker genau und sobald ich das da drauf kopiere

03:03:53.920 --> 03:03:58.360
sagt der Windows Defender Achtung Virus wenn ich das mit UPX pange

03:03:58.360 --> 03:04:05.440
Da bin ich mir relativ sicher Ich weiß wir können es mal ausprobieren

03:04:05.440 --> 03:04:09.320
Ja nur mal ich kann euch das mal zeigen UPX ist an sich wirklich was cooles

03:04:09.320 --> 03:04:17.400
Das ist ein Package Programm das komprimiert die Binary Programme in quasi so eine Art

03:04:17.400 --> 03:04:24.320
Self Extracting Zip nenne ich das jetzt mal Das ist das ist tatsächlich ganz cool

03:04:24.320 --> 03:04:46.080
Wie geht das UPX best oder so Best

03:04:46.080 --> 03:05:06.560
Ja dann probieren wir das mal aus oder soll ich soll ich auch noch ultra ultra ultra Brut

03:05:06.560 --> 03:05:18.480
ultra Brut machen wir jetzt Strip Pause Champ Go

03:05:18.480 --> 03:05:22.480
Das wird aber dadurch die dadurch wird aber die Startup Zeit langsamer ist ja klar da

03:05:22.480 --> 03:05:33.160
muss es erstmal extrahieren wieder Das dauert jetzt der macht 17 Durchläufe

03:05:33.160 --> 03:05:39.680
Das ist ziemlich langsam wenn man die die extreme Variante am Ende ist das Binary vielleicht

03:05:39.680 --> 03:05:42.160
noch zwei MB oder so das lohnt sich nicht wirklich

03:05:42.160 --> 03:06:11.160
ultra

03:06:11.160 --> 03:06:17.720
Achja Mods und und YouTube Uploader den den ersten Stream von heute Abend nicht hochladen

03:06:17.720 --> 03:06:21.360
es ist nicht schlimm wenn ich E-Mail Adressen liege aber ich will die nicht für die Nachwelt

03:06:21.360 --> 03:06:29.080
überall sichtbar haben Wenn man es gesehen hat ist nicht weiter wild

03:06:29.080 --> 03:06:33.360
aber nicht hochladen Mitbekommen

03:06:33.360 --> 03:06:39.840
Ne das war auch das war blöd ich wusste nicht dass er da dass er dabei steht also Leute

03:06:39.840 --> 03:06:42.480
ich hab den ich hab den Stream von vorhin auch schon gelöscht

03:06:42.480 --> 03:06:58.880
So also es ist durch 2 MB haben wir jetzt fast fast ein C Programm allerdings guckt mal

03:06:58.880 --> 03:07:04.440
die Ausführgeschwindigkeit ist merkt ihr das ist eine ganze Ecke langsamer als vorher

03:07:04.440 --> 03:07:10.720
nicht nicht so krass schlimm aber ist schon ist schon eine Ecke langsamer

03:07:10.720 --> 03:07:28.280
also die Startup Performance der Rest ist egal

03:07:28.280 --> 03:07:39.720
Also bei 400 noch was ist Go noch schnell

03:07:39.720 --> 03:07:43.960
Serious Max könntest du weil ich weiß nicht wie lange ich noch da bin könntest du im

03:07:43.960 --> 03:07:49.000
Mod Channel im Discord sagen dass die nicht den Stream hochladen sollen wo ich vorhin

03:07:49.000 --> 03:07:53.800
meine E-Mail Adresse geleakt habe

03:07:53.800 --> 03:07:57.280
Ich hab den auch schon gelöscht also der ist eh weg wenn die noch nicht runtergeladen

03:07:57.280 --> 03:08:02.880
haben also nicht auf YouTube hochladen und nicht ins Archiv also nicht den hier sondern

03:08:02.880 --> 03:08:07.680
den direkt davor da wo es dann so rumgeleckt hat den hab ich auch eh schon gelöscht

03:08:07.680 --> 03:08:12.480
Wie gesagt nichts Schlimmes aber ich will es nicht in der Welt verteilen

03:08:12.480 --> 03:08:17.080
Guck mal hier die Anzeige mit läuft bald ab funktioniert

03:08:17.080 --> 03:08:27.400
Wisst ihr was wir jetzt noch bräuchte man bräuchte jetzt noch Minus Minus Watch Leute

03:08:27.400 --> 03:08:32.840
das wäre die High IQ Variante Minus Minus Watch dass man das in einem T-Max Fenster

03:08:32.840 --> 03:08:37.800
auf hat und dann permanent so sieht aha wie viel Zeit hab ich noch wie viel Wartungsarbeiten

03:08:37.800 --> 03:08:43.600
Zeit hab ich noch

03:08:43.600 --> 03:08:53.200
Das wärs oder P-Term kann ja Watch echt P-Term Watch

03:08:53.200 --> 03:09:00.120
Was darf ich mir darunter vorstellen wie soll das Watch

03:09:00.120 --> 03:09:03.520
Wisst ihr jetzt nicht was das mit P-Term zu tun hat

03:09:03.520 --> 03:09:17.520
Also dass wir noch sowas hier einbauen

03:09:17.520 --> 03:09:24.000
Watch und das einzige was bei Watch passiert das ist tatsächlich relativ easy relativ easy

03:09:24.000 --> 03:09:34.320
zu machen ja Watch würden wir einfach an der Stelle gucken

03:09:34.320 --> 03:09:54.800
Watch Einfach Endlosschleife 4 ne wie macht man eine Endlosschleife 4 true ne why go lang

03:09:54.800 --> 03:10:07.760
Endlosschleife infinite loop einfach nur 4

03:10:07.760 --> 03:10:11.240
Der Pause Jam wird nicht Pause Jam also er wird set down time heißen

03:10:11.240 --> 03:10:20.280
4 das ist einfach print silence gibt es sowas wie ein sleep

03:10:20.280 --> 03:10:27.960
time sleep duration time sleep seconds mal ne Sekunde können wir sleepen

03:10:27.960 --> 03:10:35.560
Was ist das Problem wieder irgendein Error den wir ignorieren müssen ne

03:10:35.560 --> 03:10:40.920
Was hat er für Schmerzen ach ich mach return ich will nicht return

03:10:40.920 --> 03:10:54.520
So Minusminuswatch ach ne run

03:10:54.520 --> 03:10:59.600
Minusminuswatch erstmal erstmal clearn erstmal clearn das ist sinnvoll da was da steht

03:10:59.600 --> 03:11:04.160
So und jetzt und jetzt duration ne und jetzt paar mal anlegen noch

03:11:04.160 --> 03:11:18.120
Und jetzt minusminuswatch da guck mal an wobei das ist nicht gut das soll sich überschreiben

03:11:18.120 --> 03:11:24.240
das muss clearn und dann und dann so ist das doof so ist das doof ich brauch ich brauch

03:11:24.240 --> 03:11:40.560
ein clear

03:11:40.560 --> 03:11:57.560
So ein clear screen terminal

03:11:57.560 --> 03:12:11.440
Thunders Pterm clear screen ah wir haben eine Demo

03:12:11.440 --> 03:12:35.640
Ah read was ne area könntet ihr also wenn ihr wollt kann ich

03:12:35.640 --> 03:12:39.240
das pushen aber ich glaube nicht dass man dieses Programm sinnvoll verwenden kann ohne

03:12:39.240 --> 03:12:46.840
Modifikationen also ich kann das pushen pushen wir können das nächste stream pushen also

03:12:46.840 --> 03:12:50.920
wenn es euch was bringt klar warum nicht aber ich kann mir halt nicht vorstellen das

03:12:50.920 --> 03:12:54.520
ist großartig ja guck mal hier so so macht man das

03:12:54.520 --> 03:13:13.800
Also area start und dann sleep seconds

03:13:13.800 --> 03:13:18.120
Keine endlosschleife keckel alter können wir uns das stopp auch sparen

03:13:18.120 --> 03:13:25.880
Was machen die denn hier kann man da kein newline drinne machen

03:13:25.880 --> 03:13:36.520
New letter from string s render default big text ne das will ich wahrscheinlich nicht

03:13:36.520 --> 03:13:50.160
haben ich will einfach nur print oder

03:13:50.160 --> 03:13:58.080
ne das funktioniert so nicht ich ich mach dir sprint ja in einer in einer

03:13:58.080 --> 03:14:20.080
Funktion und gib nicht irgendwie den text zurück ne ne das das das funktioniert nicht

03:14:20.080 --> 03:14:31.520
es wird da müsste ich das ganze ding anders anders bauen was ist das ok ich machs nochmal

03:14:31.520 --> 03:14:40.040
rückgängig ein kram hier so und jetzt sagen wir clear screen danach

03:14:40.040 --> 03:14:51.000
guck aufs jetzt funst naja ok schön ist was anderes schön ist

03:14:51.000 --> 03:14:55.400
schön ist echt was anderes es flimmert es flimmert schon flimmert schon ganz schön

03:14:55.400 --> 03:15:22.280
ne also ich mein so als funktioniert auch nicht in jedem emulator ja das stimmt

03:15:22.280 --> 03:15:28.560
ich mein ok besser als nix so jetzt kann man jetzt kann man watchen wie das wie das runter

03:15:28.560 --> 03:15:34.040
zählt wenn man das wenn man das wirklich sinnvoll implementieren will gerade auch hier vielleicht

03:15:34.040 --> 03:15:41.240
mit diesem area printer und sowas dann müsste man das tatsächlich dann müsste man das anders

03:15:41.240 --> 03:15:47.880
machen und zwar da dürfte das nicht print print silence heißen sondern irgendwie keine

03:15:47.880 --> 03:15:58.360
ahnung get string print silence oder so mit fünf sekunden das geflimmere ist immer das

03:15:58.360 --> 03:16:22.800
geflimmere ist immer doof dinox fast clear screen ja das mache ich ja gerade schon ne

03:16:22.800 --> 03:16:28.360
das müsste man das müsste man wirklich anders machen dass er nicht den den den screen cleart

03:16:28.360 --> 03:16:39.440
sondern dass das immer überschreibt also da mache ich mir da mache ich mir anderweitig

03:16:39.440 --> 03:16:48.240
mal Gedanken drüber so kann ich damit erstmal leben ja und dann machen wir es jetzt runter

03:16:48.240 --> 03:16:58.360
auf einmal in der sekunde dann flimmert zwar aber das flimmern hast du bei allem wo du

03:16:58.360 --> 03:17:03.960
clear screen machst normalerweise musst du ja bei sowas nicht nicht screen clearn sondern

03:17:03.960 --> 03:17:20.760
überschreibst die zeilen quasi wieder genau das das müsste man hiermit machen aber ich

03:17:20.760 --> 03:17:33.760
habe halt das hier nicht als text sondern das macht schon die ausgabe das das reicht

03:17:33.760 --> 03:17:41.040
jetzt erstmal jaja area macht das aber ich kann area nicht verwenden weil der eigentliche

03:17:41.040 --> 03:17:51.040
text der kommt ja hierher und der ich mein ich mein was ich machen könnte wäre wahrscheinlich

03:17:51.040 --> 03:18:02.720
anstatt die tabelle hier zu rendern ich mein anstatt die tabelle hier zu rendern könnte

03:18:02.720 --> 03:18:18.840
ich sagen irgendwie get silence silence table oder so und dann geben wir zurück eine was

03:18:18.840 --> 03:18:32.360
eine p-term table table printer und den könnte ich dann da rendern im in der area nähe aber

03:18:32.360 --> 03:18:44.360
das ist kacke da muss ich das umstricken da habe ich auch kein bock drauf in der area

03:18:44.360 --> 03:18:51.720
bringt das nix dass das versteht ihr falsch du musst den text geben den das dann da reinschreibt

03:18:51.720 --> 03:18:55.320
und wenn ich eine funktion habe die ich aufrufe die selber auf die konsole schreibt dann funktioniert

03:18:55.320 --> 03:19:01.760
das nicht dieses area render ding hier muss das handeln mit dem string kann ich einfach

03:19:01.760 --> 03:19:06.640
auf die konsole schreiben und an die area verwenden dass das funktioniert nicht ich bräuchte

03:19:06.640 --> 03:19:16.200
ich meine ich kann euch zeigen dass es prinzipiell funktioniert und das mal wieder rein so und

03:19:16.200 --> 03:19:23.800
jetzt führe ich einfach mal das da aus watch guck das refreshed ohne irgendwelches geflimmer

03:19:23.800 --> 03:19:31.440
weil es refreshed wirklich nur das was sich geändert hat das heißt ich kann jetzt halt

03:19:31.440 --> 03:19:38.280
nicht die die sache aus ausgeben da drin sondern müsste mir den string zurückgeben lassen also

03:19:38.280 --> 03:19:55.440
halt nicht so nicht so nice müsste ich ja quasi das da rausnehmen sondern es render

03:19:55.440 --> 03:20:08.440
kann das kommt dann da ein string raus bei ja das kann ich machen hier string das das

03:20:08.440 --> 03:20:16.960
würde funktionieren das return wir keinen error sondern ein string ne go pass hat glaube

03:20:16.960 --> 03:20:33.400
ich keiner gecheckt go pass go pass ist bloated

03:20:33.400 --> 03:20:50.640
so und jetzt können wir hier sagen wind silences so jetzt sollte das funktionen was ist das

03:20:50.640 --> 03:21:05.040
problem was hat jetzt ach so ja ja so komm egal brauche ich jetzt funktioniert das leute

03:21:05.040 --> 03:21:12.680
jetzt flimmert da auch nichts mehr aber jetzt haben wir es eigentlich nur unnötig kompliziert

03:21:12.680 --> 03:21:21.400
gemacht ne center wollen wir da nix

03:21:21.400 --> 03:21:30.880
jetzt aktualisiert er jede sekunde kannst du bei zugucken wie er updatet

03:21:30.880 --> 03:21:34.680
und abbrechen geht auch wobei man es dann halt eigentlich nicht print silences nennen

03:21:34.680 --> 03:21:46.840
dürfte sondern generate silences table oder so ja dann dann passt es wieder ein bisschen

03:21:46.840 --> 03:22:05.520
besser und ich darf dann auch nicht sagen hier drin

03:22:05.520 --> 03:22:11.600
no matching silences found sondern ich müsste dann sagen return no matching silences found

03:22:11.600 --> 03:22:23.840
weil wenn er nix findet wo ist das problem achso ja aber wenn er nix findet haben wir

03:22:23.840 --> 03:22:36.880
mal so löschen löschen wir mal alles und dann sagen wir minus minus watch so not found

03:22:36.880 --> 03:22:41.880
minus l funktioniert auch so was jetzt natürlich cool ist guckt mal was man jetzt machen kann

03:22:41.880 --> 03:22:46.680
ist wenn ich jetzt doppelt starte und leg jetzt welche an dann erscheinen die auf der linken

03:22:46.680 --> 03:23:07.880
seite gleich guckt bamm das ist das massive ausrufe zeichen heute ist es jetzt kann ich

03:23:07.880 --> 03:23:18.760
hier unten welche anlegen kannst du live zugucken wie es geedet wird und wenn man jetzt so was

03:23:18.760 --> 03:23:25.720
sagen könnte wie duration 10 sekunden dann taucht die auch in rot drauf auf und läuft

03:23:25.720 --> 03:23:49.360
dann gleich ab kann ich verkaufen genau huge money

03:23:49.360 --> 03:24:00.800
es hat einen was für den approach ein holistik approach was soll denn das bedeuten ich weiß

03:24:00.800 --> 03:24:09.680
gar nicht was das wort bedeutet ganz einheitlichen ah ja ob wir es feifert wort richtiges feifert

03:24:09.680 --> 03:24:22.040
wort wie ist heute deine meinung zu go ich finde es immer noch undurchdacht an vielen

03:24:22.040 --> 03:24:27.120
stellen und die standard library ist auch wohl obwohl die so super gelobt wird an vielen

03:24:27.120 --> 03:24:38.000
stellen irgendwie lückenhaft ja aber wir haben was sinnvolles mit hingekriegt wir sind auch

03:24:38.000 --> 03:24:43.360
fertig mehr oder weniger würde ich sagen aber das finde ich cool mit diesem automatisch

03:24:43.360 --> 03:24:49.200
das war eine gute chat wer hatte die idee ich glaube ich glaube ich hatte die idee der chat

03:24:49.200 --> 03:24:56.280
hat mich nur auf die idee gebracht ist gar nicht einfach dafür gedacht nö für rest service

03:24:56.280 --> 03:25:01.600
ist nö nicht zwangsläufig da ist eigentlich mal als einsteiger einfach zu lernende sprache

03:25:01.600 --> 03:25:07.200
gedacht gewesen aber ich finde weder die sündung sonderlich einfach noch die standard library

03:25:07.200 --> 03:25:16.480
sonderlich komplett ich weiß ich was mich als einzige was mich an go überzeugt ist die

03:25:16.480 --> 03:25:23.880
static binaries bei was genau lückenhaft zum beispiel dass es kein url punkt join gibt

03:25:23.880 --> 03:25:31.360
ok das gibt es jetzt mit go 1.19 bald oder dass es kein http punkt delete oder kein http

03:25:31.360 --> 03:25:45.560
punkt putt gibt sondern nur get und post

03:25:45.560 --> 03:25:49.920
was braucht länger in dort net oder dort net ist viel schneller gewesen in unserem test

03:25:49.920 --> 03:25:55.160
jetzt mit diesem programm das liegt aber an der tabellen render library also wir haben

03:25:55.160 --> 03:25:59.360
3000 einträge gemacht haben die rendern lassen im terminal was komplett auf schwachsinn ist

03:25:59.360 --> 03:26:04.440
ergibt ja keinen sinn dass da 3000 monitoring silences eingetragen sind also go hat 13

03:26:04.440 --> 03:26:09.080
sekunden gebraucht und und das dort net program hat es in ja irgendwie zweieinhalb gerendert

03:26:09.080 --> 03:26:23.120
aber das kein sinniger vergleich gewesen ja nein das ist einfach nur ein string wo

03:26:23.120 --> 03:26:33.960
drinne steht putt das ist nicht das ist nicht die funktion zum input ein putt absetzen

03:26:33.960 --> 03:26:47.760
mit http könnte man auch aber nicht so schön du hast ja aber nicht so schön also man könnte

03:26:47.760 --> 03:27:03.280
auch so machen ja das stimmt watch minus er kann color minus z ja aber das ist das ist

03:27:03.280 --> 03:27:11.200
nicht so schön wie eingebautes watch gehen tut das auch aber eingebautes watch ist mehr

03:27:11.200 --> 03:27:29.840
pock

03:27:29.840 --> 03:27:34.840
die umsetzung na die umsetzung ist in dort net viel viel in c sharp viel schneller gewesen

03:27:34.840 --> 03:27:41.000
für mich als in go also in go habe ich jetzt ja mehrere streams stundenlang darum gebastelt

03:27:41.000 --> 03:27:44.560
gut ich hatte auch keine ahnung von go mittlerweile habe ich doch schon ein bisschen besseren

03:27:44.560 --> 03:27:49.080
durchblick man hat es heute glaube ich auch gemerkt so ein paar sachen habe ich mittlerweile

03:27:49.080 --> 03:27:55.880
schon geschnallt wie es funktioniert für mich war das in c sharp zu programmieren deutlich

03:27:55.880 --> 03:28:02.600
nerven schonender angenehmer und schneller aber das liegt zum größten teil daran weil

03:28:02.600 --> 03:28:07.880
ich c sharp deutlich mehr gewohnt bin als go auf der anderen seite bin ich immer noch

03:28:07.880 --> 03:28:11.560
der meinung dass es die beste beste sprache und das beste framework ist was es so gibt

03:28:11.560 --> 03:28:19.000
zum entwickeln für fast alles nicht für alles aber für fast alles nein in c plus plus

03:28:19.000 --> 03:28:23.640
werden wir das nicht machen sage ich euch gleich allein schon ein web request in c plus plus

03:28:23.640 --> 03:28:35.560
zu machen ist doch komplette zumutung da habe ich auch anfälle gekriegt mit der zeit guckt

03:28:35.560 --> 03:28:46.760
euch das an ja sieht erstmal lesbar aus aber diese magic zahlen machen mich verrückt woher

03:28:46.760 --> 03:28:53.400
soll man wissen dass 0 2.01.0 2006 dass das so die formatierung ist also dann ist es mir

03:28:53.400 --> 03:29:06.680
lieber die klassische sache mit dd mm und sowas ss gibt es dann sonst noch months months

03:29:06.680 --> 03:29:16.200
in groß das ist das ist das ist besser als als hier diese komischen zahlen ne ne du musst

03:29:16.200 --> 03:29:27.240
nicht das datum eintragen in go ist es so dass das da 0 2 ist ein magic wert für ähm

03:29:27.240 --> 03:29:34.320
bei anderen programmiersprachen ist es dd also das ist das gleiche wenn da 0 2 steht

03:29:34.320 --> 03:29:44.980
weiß go dass man an dieser stelle den tag haben will das ist magic magic deswegen steht

03:29:44.980 --> 03:29:54.600
ja auch 2006 da warum warum auch immer also mit mit 15 weiß go damit ist die stunde gemeint

03:29:54.600 --> 03:30:05.960
und mit 04 mal weiß go damit muss die minute gemeint sein und sowas also es ist schon ein

03:30:05.960 --> 03:30:12.880
bisschen pence champ ne ne das ist kein beispiel das muss go so haben deswegen steht es ja

03:30:12.880 --> 03:30:16.320
auch zweimal unten drunter weil du musst das so machen wenn ich hier drei hinschreibe

03:30:16.320 --> 03:30:21.400
an der stelle dann denkt go das ist keine ahnung das ja in kurzschreibweise oder so

03:30:21.400 --> 03:30:27.640
was auch immer für was auch immer drei steht ne ne das ist das ist sehr wir das finde ich

03:30:27.640 --> 03:30:39.960
auch eklig was ich auch eklig finde ist diese append geschichte hier na aber wir haben es

03:30:39.960 --> 03:30:53.600
jetzt hinbekommen wunderbar funst alles pork chat wisst ihr was ich jetzt mache ihr kommt

03:30:53.600 --> 03:31:05.600
nie drauf das sage ichs wieder alter das würde ich bestimmt nicht so ankündigen hier im

03:31:05.600 --> 03:31:18.680
chat ne ich gehe jetzt pennen und vorher und vorher mache ich das hier und vorher mache

03:31:18.680 --> 03:31:41.040
ich pepo toilet zoom der chat wieder so chat schön dass ihr dabei gewesen seid hat ja

03:31:41.040 --> 03:31:48.000
alles funktioniert haben wir sehr viel progress gemacht heute und jetzt gehe ich auf bis

03:31:48.000 --> 03:31:49.040
dann machts gut zu

