so da bin ich
kurz klimaanlage ausmachen bis sie kühl sind nur 24,1 grad das geht ja nicht schnellste
teil was hat er gemacht er hat nix er hat channel points eingelöst was das denn er hat channel
points eingelöst ok verstehe weeps in heute wie es aussieht
oder weeps nein heute heute ist heute ist in so also ich habe was gesehen heute und zwar
dachte mir das müssen wir ausprobieren und zwar es gibt jede menge cooler neue features mit dotnet
7 und c sharp 11 aber es gibt eins neuer compiler genau aber es gibt eins das habe ich vor jahren mal
mitbekommen bei microsoft und zwar kommt das jetzt mit dotnet 7 zum ersten mal richtig offiziell
raus ich meine sie sagen es ist nur was für konsolenanwendungen und und also sachen die
nicht so kompliziert sind aber die haben zum ersten mal jetzt einen ahead of time compiler
also sprich ich zeige euch mal die seite von microsoft ich mache mal kurz die vm an die vm
wir sind ja cooler heckermans wir sagen bm wir sind so hier vm sagen nur die nups so machen wir
das mal an ich zeige euch mal die seite von microsoft gleich ja so ist es habe ich euch
übrigens schon den daily heckermann trick des tages gezeigt ja ich habe ihn euch gezeigt weil
ihr den auf twitter sehen konntet aber wusstet ihr dass ihr so eure public ip adresse rausbekommen
könnt und ich habe das absichtlich so gemacht natürlich gab es dann wieder leute die haben
drauf geschrieben max macht auch karl if konfig punkt mir karl amazon irgendwas aber der witz
hier dran ist doch gerade dass du deine public ip über ein dns query rausbekommen kannst nicht
http das alias ist falsch ja ich habe mich verschrieben ich habe hier ein p gemacht aber
das alias ich habe das alias ja schon in meiner zsh ac deswegen ging das so so das gibt ein service
von open dns da kann man seine eigene wenn man den queried seine eigene public ip auslösen
lassen und warum ist das besser als http ganz einfach weil dns in der regel immer geht und
http je nachdem wo man ist auch mal gut und gern geblockt sein kann ohne proxy und mit proxy ist
dann wieder die frage ob es eigentlich die public ip ist die du wissen willst so ja abuse das nicht
etwas das ups das protokoll auch ja ein bisschen es macht zumindest nicht das was dns machen
sollte aber gut ich mein warum auch nicht ja ich meine wenn du so willst ist auch diese ganze geo
dns geschichte nicht im sinne des erfinders gab mir mal zeiten da war ein ip adressen unic
weltweit aber das ist halt auch so nicht mehr ich muss mal schnell ein update machen ich zeige
euch während das ding updated ich so eine firefox ja dann geht das ja wobei ich ich starte mal neu
man weiß ja nie sondern zeige ich euch nämlich mal die seite von microsoft die ich gefunden
habe wo sie sich über das neue dotnet feature auslassen postman unbedingt postman nicht post
woman in dem fall weil kein kein dreger sein witz wo twitter jetzt über mich herfallen kann
es gibt wirklich das programm post woman weil sie irgendjemand gedacht haben postman ist zu alter
weißer mann das geht nicht da brauchen wir noch einen extra fork der post woman heißt den
haben sie jetzt aber wieder umbenannt wahrscheinlich kam der namen dann doch nicht so gut an oder so
ja das thema egal wo wir sind das gibt es überall auch im open source umfeld wir sind heute besonders
kappa pride sehe ich gerade im hintergrund das ist das bing image of the day ist das ist das die
pride fahren oder ist das irgendwie marokko oder sowas ne glaub schon dass das regenbogen stellt sein
soll wer witzig wenn es marokko wäre ich meine gerade marokko sieht ja nur mit rechte für schwulen
und so nicht gerade soll nicht rosig aus man soll es postperson nennen genau also ich zeige euch
jetzt mal die seite von microsoft die ich gefunden habe dort net 7 aot ich hoffe ich finde die seite
auf den ersten blick ja nie den heiße artikel mal meine ich nicht nein
ich muss die seite mal kurz finden dann sei zeige ich euch ich habe mir das
natürlich in weißer voraussicht nicht sollt keine marium marium und ich brauche was entspannend
spannenderes hier vielleicht hacker news ja ready to run ist gut es ist zwar nicht ready to run aber
es ist in der in den docs wo auch ready to run drinne steht ready to run hier systemeigenes
aot bereitstellung wenn ich die überschriften von den microsoft seiten auf deutsch schon wieder
sehe kriege ich kriege ich wieder anfälle ja wenn ich dann wenn ich mir das hier angucken
so gleich mal umschalten gut das meine ich und zwar das habe ich gefunden es ist auch ganz neu
die seite ist vom 17.06. also die ist gerade mal 14 tage alt ungefähr und zwar mit dort net 7
da steht auch hier mit dort net 7 wird offiziell native aot das ist ahead of time compilation
supported ahead of time compilation ist ein super fancy wird für das was jeder compiler macht also
das ist nix anderes was sonst jeder compiler macht nur mit dem unterschied dass der dort net
compiler ja eigentlich kein compiler im klassischen sinne ist da kommt also kein fertiges binary raus
da kommt ein binary raus mit dort net runtime und das wird quasi zur laufzeit dann etwas mal
kompiliert ja so macht das dort net bisher das hat vorteile dass er nachteile ein nachteil davon ist
zum beispiel so wie das dort net aktuell macht dass die das können wir gleich mal vergleichen wenn
wir die die features wenn wir das feature ausprobieren dass die startzeit von dort net anwendung ein
ticken wir reden hier nicht von sekunden oder so aber ein tick langsamer ist als von native sagen
wir cc plus plus oder ja wahrscheinlich auch von irgend von irgendeinem payson zeug wo wobei
na da wäre ich mir nicht so sicher was performance angeht eigentlich nie wirklich gut also go go ist
ein gutes beispiel ja go auch also im prinzip ist fast alles bisschen schneller beim starten als dort
net so und das wollen die jetzt ändern indem sie nämlich nicht mehr ihr komisches jit modell
machen was nichts mit git zu tun hat sondern hier geht es um just in time sondern sie kompilieren
noch mehr ahead of time also das was jeder normale compile auch macht und kurz dort nicht sie raussuchen
wo gibt es das denn da und das machen die jetzt auch was heißt dass damit theoretisch dort net
anwendung ich bin mir nicht sicher ob die kleiner werden am ende sie sollten zumindest deutlich
schneller starten an der performance macht das nix also die performance ist ja von dort net
eh schon ziemlich gut aber die performance wird dadurch nicht besser nur das starten wird ein
bisschen beschleunigt was aber wirklich cool ist gerade für kleine kommando zeilen anwendung also
wir reden hier von also wenn ich was weiß ich wenn ihr jetzt zum beispiel so was aufruft wie ls ja
beim das ist instant in ls von in ls mit dort net ist ungefähr weiß gar nicht man sleepen kann 0,3
ja also das ist ungefähr der unterschied also ein native native ls ahead of time kompilation ist so
instant ausgeführt und dort net kommando zeilen anwendung ist ungefähr so also es ist jetzt nicht
wirklich krass und bei programm die ein bisschen mehr machen als als einfach nur kleinen status
ausgeben ist das eigentlich zu vernachlässigen aber es wäre ja cool wenn dort net programme auch
einfach so starten würden und nicht so also sind 300 millisekunden also ich denke mal es wird sich
im bereich von 300 millisekunden bewegen so was die normalen dort net programme so ungefähr auf
halbe sekunde vielleicht also es ist nix nix großartiges so und warum ja genau gut gut hier
dass du das mit dem titel anspricht und zwar ein riesen vorteil den man ja go so nach sagt ist oder
was das gar nicht so kompliziert formulieren ein riesen vorteil von go ist oder was go gemacht hat
go hat jegliche deployment probleme einfach auf einschlag gelöst mit statischen binaries du
kannst go du kannst ein go binary kompilieren du kannst das hinschieben wo du willst rückwirkend
bis zu linux kernel 26 35 oder so das ist jahrzehnte alt und das läuft ich weiß ich weiß ich weiß gar
nicht ob das stimmt was ich erzähle das go minimum linux kernel komm mal hier 26 32 ist go
oh nee moment nee nee nee 26 23 vom februar 2008 also du kannst go binaries kompilieren
und das läuft rückwirkend auf jedem x beliebigen linux system wo die cpu architektur stimmt und
es ein neueren kernel ist als 26 23 26 23 wirklich uralt go hat ein paar andere dinger die ich
persönlich nicht so ja aber das ist ein unglaublicher vorteil von go go hat jegliche
deployment probleme gelöst weil du ein statisches binaries hast das schiebst du hin und gut ist klar
das kann man wenn für web anwendung lösen mit irgendwelchen docker container oder sonst was dass
man seine dependencies und alles mitbringt kein problem aber gerade im bereich von stand alone
kommando zeilen tools oder sowas ist go einfach richtig gut weil du kannst das auf irgendeinem
x beliebigen linux programmieren du kompilierst das als statisches binaries und jeder auf der
welt der irgendwie linux hat der letzten 20 jahre kann es verwenden letzten 15 jahre das
ist halt nicht schlecht so und bei dort net es ist aktuell so du kannst stand alone kompilieren
und das wandelt aber im endeffekt nur die runtime und den die die ganzen dort net dependencies
zusammen das ist aber auch relativ lange rückwärts kommen also ich glaube wir können mal kurz gucken
also ich glaube dort net unterstützt aktuell in version 7 als mindestversion cento s7 also das
was cento s7 hatte guck mal dort net supported versions das ist auch ziemlich alt supported
linux versions müssen wir gucken supported os also man muss sagen dort net fünf das ist die
aktuelle lts version die supported als mindest guck mal die haben ubuntu 1604 noch drinne
ubuntu 1604 das ist auch schon acht jahre alt sechs jahre alt erzähl ich denn noch schon sechs
jahre alt also das ist auch nicht auch nicht so ja gucken wir mal was mit dort net 7 ist ja ich
habe fünf genommen weil es die google suche ausgespuckt hat und dass die in fünf war ist die aktuelle lts version so
und mit supported us bei sieben ist es glaube ich ubuntu 1804 wobei diese ach sechs ist lts
ach ja nee fünf war die dort net umbenennung voll core nach dort net und sechs ist die erste lts
version jaja stimmt hast recht da die benahmung bei microsoft ist echt so für komplett abfall ich
sage immer noch dort net core teilweise so und hier haben sie mindestversion 1804 wobei das hier
oben ist alles ohne eigentlich ist das ziemlich egal was hier oben steht das interessante ist dass sie
als einzige library brauchen glibc 2.17 so gucken wir mal glibc release date also die brauchen was
von 2012 also man könnte sagen dass dort net auf allen linuxen der letzten zehn jahre ungefähr
lauffähig ist also das ist auch net schlecht es ist zwar nicht so krass wie mit go was zurückgeht
bis systemen bei 2008 aber das ist schon ganz ok man muss sagen das geht hier um systeme die
2012 rausgekommen sind also wenn jetzt einer ankommt mit nem ubuntu 1204 weiß ich nicht was
das für eine glibc version hat wenn ich ehrlich bin wahrscheinlich wahrscheinlich noch ein
bisschen älter zumindest allein schon allein schon dass das zento s7 noch supportet sollte
ein indikator sein dafür dass das eigentlich auf nahezu jedem linux was man heute so findet
läuft ich meine man muss sich angucken zento s7 released in release date war juli 2014 das sind
acht jahre das wird zehn jahre insgesamt supportet also ich was übrigens auch bedeutet dass die
nächste dort net version und die ist dann lts version glaube ich da noch rein fällt und
hoffentlich auch noch zento s7 kann das heißt man kann dann wirklich zehn jahre alte linux
supporten das reicht so und mit diesem neuen ahead of time feature hätte man dann was was
zumindest mal in die nähe von go kommt wenn das was taugt also sprich du hättest relativ
statisch kompilierte binaries die irgendeine glibc version brauchen der letzten zehn jahre und die
schnell starten so und das wollte ich mal ausbrühen ob das funktioniert wir können das ja mal
vergleichen wir machen irgend so eine minimal konsolenanwendung und dann probieren wir mal
aus wie schnell das startet mit normal kompiliert mit stand alone kompiliert und dann mit und dann
mit diesem neuen compiler feature kompiliert also mit diesem neuen ahead of time compiler feature
kompiliert ja wir können speedtest machen ja eigentlich eigentlich ist speedtest ja mittlerweile
schon so der standard schnell starten tut mit dort net alles das probieren wir aus das probieren
wir auch vielleicht braucht man das ja auch gar nicht mehr die größe ist mir gar nicht so wichtig
muss man das irgendwie angeben muss man das irgendwie angehen angeben oder geht das automatisch
muss man das irgendwie eintragen ihr iel mit enable oder das geht automatisch ok vielleicht
braucht man das ja auch gar nicht müssen wir mal ausprobieren ich muss jetzt erstmal ein
aktuelles dort net installieren so weil ich glaube ich download ich habe hier nix also wo
haben wir es dann ja wir machen wieder irgendwie so simple simple kommando zeilen anwendung ich
habe übrigens ein richtig progress command line framework gefunden für dort net das heißt
gefunden ich habe das in dem video gesehen ich finde das wirklich gut es gibt tausend dieser
frameworks aber das macht wirklich guten eindruck und wisst ihr wie das heißt kokona aber man
schreibt es so es ist falsch geschrieben offensichtlich ja also es ist jetzt ja auch
in der vergangenheit so gewesen dass dort net wenn du das als wie heißt das framework dependent
bild gemacht hast dann startet das ist ja schon immer schneller als stand alone ich bin mir
ehrlich gesagt gar nicht warum gar nicht weiß gar nicht warum ich mein gepackaged ist ja beides
zusammen wir probieren das jetzt einfach mal aus so und das wollte ich in einem der nächsten
steams auch mal ausprobieren das ist ein kommando zeilen framework und zwar kann man damit relativ
easy alles mögliche machen von von argumenten pasen also parameter pasen das hat control
c cancellation support es hat dependency injection support das macht wirklich einen ganz guten
eindruck und es sieht griffig aus ja was man es sieht selbst erklären aus was ich auch
immer gut finde wenn die libraries an sich so aufgebaut sind dass man versteht was das
was das macht hast du jemals ja ich habe nachgedacht aber ich habe nie darüber ernsthaft mir
gedanken gemacht zu machen ich finde es immer noch nicht super dass wpf nicht auf linux
will es gibt zwar abalone aber ja ja also abalone ist eine gute idee ich muss sagen ich habe
mir abalone lange nicht mehr angeguckt mittlerweile ich habe letztens mal ein reddit post über
abalone gelesen wo irgendwie was einer geschrieben hat über oder nee hacker news post in den
post casual gamer danke für den zapp sorry falls ich irgendjemand noch übersehen habe
der irgendwas über die interne ränder architektur mit xia von abalone ja geschrieben hat übelstes
feifehrer zeug kein schimmer aber zumindest abalone ja finde ich im prinzip gut weil abalone
ja macht es richtig abalone macht nicht diesen blöden ansatz wie das das heißt ja nicht
mehr xamarin das heißt ja maui macht abalone macht es richtig als gui framework abalone
malt ihre controls selbst das ist ich habe schon oft gesagt das ist aus meiner sicht
der einzig sinnvolle ansatz für eine für ein ui framework fallen für ein cross platform
ui framework ist die controls selber zu malen eto forms nutzt aber auch nicht malt aber
auch nicht die controls selbst eto forms ist quasi so ein bisschen was wie maui in die
richtung nur dass sie glaube ich linux support haben so zumindest abalone ja habe ich mir
vor längerer zeit angeguckt da gab es auch ein paar probleme da gab es beispielsweise
kein gescheite kein gescheite kein gescheites browser widget und es gab kein keine gescheite
möglichkeit eigene sachen rein zu rendern und so was da sind ja immer so die zwei sachen
die finde ich jedes ordentliche gui framework neben den controls braucht weil ein browser
brauchst du immer mal und ab und zu brauchst auch die möglichkeit einen content rein zu
rendern und ich meine damit jetzt nicht dass man sagt hier und malen recht deck sondern
irgendwas wie open gl x context irgendwo ins fenster malen und so dass da tun sich außer
windows forms lustiger weise unter windows auch alle schwer so zumindest abalone ist
eine gute idee die machen das auch besser als microsoft mit maui weil maui bis das mal
linux support hat weiß ich nicht aber cross platform ist eh pains jam ich gucke mir noch
mal kurz den chat an bevor wir anfangen ist sie scharpe immer noch so langsam vergleicht
zu z plus plus weil es interpretiert ist also sie war noch nie interpretiert und ja es
ist ein ticken langsamer als z plus plus aber das ist jetzt nicht irgendwie in wahnsinnigen
größenordnungen oder so und je nachdem was du machst gerade was web framework sachen
angeht ist das somit das schnellste was du verwenden kannst also asp.net core gerade
seit der dotnet version seit der dotnet 6 version steckt so ziemlich alles in die tasche
was es sonst noch an frameworks gibt also node.js ist ja komplett abgehängt aber auch
sachen wie die ganzen go frameworks oder frag mich was gibt es denn was gibt es denn da
sonst noch keine ahnung also asp.net core ist saumäßig schnell das dürfte eines der
schnellsten web framework sein die du aktuell verwenden kannst natürlich du kannst es auch
so weit aufbauen dass es langsam ist aber die normalen features wenn du die verwendest
sind saumäßig schnell also das ist auch eine coole funktion oder was funktion funktion
es war das ist auch eine eine einschalt eine eigenschaft die ich an dort net beziehungsweise
an sich hat mag die sprache ist nice und es ist man kann jetzt nicht sagen das schnellste
der schnellsten aber man kann sagen es ist schneller als das meiste was es sonst so gibt
und die kombination gibt es finde ich selten du hast so sachen wie pyson und ruby wobei
ruby eine ganze ecke schneller ist als pyson aber trotzdem ist pyson deutlich beliebter
die mögen zwar gut ausschauen gut lesbar sein sich schnell programmieren aber wenn
es richtig wums haben muss musste halt hoffen dass es irgendein c-modul gibt was das macht
was du machen willst so und dann hast du so sachen wie javascript die sind für das was
es ist auch ziemlich schnell mittlerweile aber können halt überhaupt nicht mithalten mit
sagen wir mal rust oder sowas in der richtung und das ist halt das schöne an c-sharp c-sharp
ist schön zu programmieren finde ich persönlich relativ lesbar finde ich als generell eines
der besten sprachen die es gibt und es ist auch noch saumäßig schnell und das ist eine
schöne kombination und es ist halt unglaublich universell du kannst in c-sharp nahezu alles
machen was du machen willst also du von ich mein guck mal so sachen wie von web anwendungs
backends bis zu web ich mein ich bin kein fan von blazer ja das habe ich schon oft genug
gesagt aber man sieht in welche richtung sich das entwickelt web assembly frontend anwendung
alles mögliche also das ist tatsächlich sehr nice und osu ist auch in c-sharp programmiert
ja osu ja unity und sowas osu ist glaube ich kein unity game aber unity hat hat unity
immer noch irgendwie diese uralt mono version also c-sharp war schon das ist war noch nie
interpretiert das weiß ich werde wer das erzählen hat aber das stimmt nicht ja flutter
frontend läuft überall solange überall mobile ist auf dem desktop ist das grausam also flutter
desktop ist noch sehr sehr pains champ gerade auf linux
microsoft verkackt das leute ich kann euch nicht empfehlen microsoft frontends microsoft
gui frameworks zu lernen ich persönlich bin der ansicht wpf ist das einzig sinnvolle was
es gibt nicht wpf windows forms ist das einzig sinnvolle was es gibt weil nicht wegen den
features oder so weil du damit ziemlich gut integration mit anderen technologien hinkriegst
falls du halt einfach nur was brauchst was deine fenster managt und den rest selbst machen
willst das ist das ist ok rest von dem was windows forms eigentlich ausmacht kann sie
windows forms komplett in die tonne kloppen da kommst du dir vor wie 1995 wpf ist zwar
neuer aber wpf ist auch nicht so viel moderner die haben zwar vielleicht deutlich moderne
ansätze als windows forms aber von dem was da an technik unterstützt wird ist auch uralt
das heißt microsoft hat nichts auf dem desktop die haben eine zeit lang versucht uwp zu
pushen uwp hat nicht funktioniert und jetzt gibt es intern irgendwie den halben framework
die kriegbar microsoft was sich jetzt durchsetzt eigentlich müsste es winui sein weil winui
die logische konsequenz die logische konsequenz ist aus dem was sie mit wpf mal ursprünglich
vor hatten nämlich ein ordentliches desktop framework allerdings für alle anwendungsformen
das problem ist nur dass sie mit winui absolut nicht hier in an start kommen kriegen kriegen
das seit jahren nicht hin und ich weiß ehrlich gesagt gar nicht was da was der aktuelle
stand mit winui 3 ist das letzte mal wo ich geguckt habe winui 3 dann haben sie geschrieben
hoho ihr könnt jetzt native desktop applications machen also kein uwp aber immer noch mit
packaging und clientzertifikat oder habe ich mir gedacht also wenn ich ein clientzertifikat
also kein clientzertifikat mit codesignzertifikat habe ich mir gedacht also wenn ich ernsthaft
für irgendeine publische drei fenster open source anwendung die ich auf github pushen
will für irgendwie in den nischenkreis an leute wenn ich mir dafür ernsthaft ein codesignzertifikat
kaufen soll dass der installer nicht meckert beziehungsweise der es sich überhaupt installieren
lässt oder ausführen lässt dann weiß ich auch nicht was das soll ja ich meine du kannst
natürlich immer noch sagen hey bitte bitte lieber download installiere noch einen kleinen
clientzertifikat von mir was ich selbst sein habe aber bis du es den leute erklärt hast
zeige ich dir doch den vorrl also das ist das ist müll bisher gewesen
spree pies sind megateil benchmark ich glaube das ist das was auch die was auch die microsoft
leute immer ganz gerne zeigen weil sie da gut gut dastehen was dort net dort net angeht
guck mal hier also web framework web framework web framework benchmark asp.net core ist auf
platz ich sag jetzt mal eins von denen die ich kenne actix ist das nicht in den rust
framework ja ok also es ist ok ein ein framework in rust ist schneller ganz ehrlich das obendrüber
habe ich alles noch nie gehört ich habe weder von lithium noch von just noch von droga noch
von may mini htp n text oder sonst was gehört außer in meinem chat ja also asp.net core
ist das schnellste web framework neben actix wovon ich zumindest mal also actix habe ich
zumindest schon mal gehört wenigstens ja und wenn man sich das mal anguckt die üblichen
bekannten müsste mal runter scrollen hier wann wann da was kommt guck mal hier php nginx
cacquade halb so schnell und wenn wir jetzt mal irgendwie node oder so gucken node.js
ist da ohne irgendwo oder wo ist hier gin von go ist auch da ohne irgendwo wo ist express
express ist hier komplett am arsch der welt pass mal auf django django ist halt eh eng
vorher oh rails rails ist noch langsamer als django cacquade ja gut das hätte ich gar
nicht gedacht ruby ist im prinzip schneller als python ich meine wir reden hier von doppelt
so schnell und es ist immer noch wahnsinnig langsam rails ist halt der abfang dafür muss
man sagen eins muss man halt wirklich rails lassen es ist entwickeln in rails ist mega
angenehm zumindest war es das damals ich denke mal mittlerweile nimmt sich das nicht so viel
flask ist schneller gut das wundert mich nicht das ist ja auch minimalistischer ja also man
sieht hier schon die jetzt genießt das war mit so ein bisschen portion skeptisch ja das
sind ja wahrscheinlich auch super optimierte sachen für die einzelnen dinger aber trotzdem
ich finde ein combined score bei den frameworks zeigt schon das asp.net core wirklich ziemlich
schnell ist übrigens gibt es den c++ framework oh nein igitt c++ frameworks sind auf platz
eins ok zeig mal habe ich noch nie was von gehört high performance attp server ja das
ist kein web framework das ist web server oder immerhin halbwegs halbwegs beliebt es
ist web server ja was ist das für ein komischer benchmark wenn der web server drin sind dann
ist wahrscheinlich engine x auch dabei und engine x ist halt der kann das gut weil er
kann gut web surfen für was ist dieses t hier neben was ist was ist denn das t ja ein plan
dass das sein soll ich ich kenne überhaupt nicht ja das ist nicht ganz so ah
ach so die sind noch meinem extra benchmark drinne ok da ist auch rails dabei ja also
das immer wieder dabei c++ first rast danach aber in naja man kann nicht sagen ähnlichen
gefilm aber doch ganz weit vor dem rest noch asp.net core und ich finde das macht es dazu
wirklich super kombination aus der sprache die super ist und es ist auch schnell was
war noch mal deine meinung zu self house und nextcloud ich mag nextcloud nicht alternative
fällt mir jetzt gerade nichts ein ok weiter wo ist arpeggio gut es ist kein web framework
das ist dann nicht drin aber pap engine x ist drinne pap pap mit engine x ist drinne
oder kumbia pap da sieht man mal pap ist besser als sein ruf ja guck mal es gibt fife hat
fife hat cpp und der große unterschied zwischen dem und den da oben könnte vielleicht auch
der feature umfang sein keine ahnung aber es ist schon saumäßig schnell so jetzt kommen
wir zur eigentlichen sache weil sonst wären wir heute nicht fertig ja das wollte ich gerade
sagen das ist wahrscheinlich abartig erst fack in c++ zu entwickeln aber ich kenne
das framework nicht deswegen keine ahnung so jetzt fangen wir mit der eigentliche sache
an die wir machen wollten jetzt die klima nach dem wieder einschalten also ich wollte
eine dotnet version runterladen download da wo sind wir download dotnet 7 also dotnet 7
kommt im november raus wir gucken wann irgendwann zu ihrer komischen dotnet konferenz 7 übrigens
wer jetzt da nicht so auf zack ist mit den dotnet versionen man könnte jetzt denken dotnet
1 wurde 13 februar 2002 veröffentlicht und dotnet 7 erscheint im november 2022 das würde
bedeuten es gab über 20 jahre nur sieben framework releases das stimmt aber nicht
weil die microsoft benahmung komplett für den arsch ist das war dotnet framework und
das hier ist die dotnet das ist der siebte release von dotnet core der unbeland wurde
in dotnet 5 und jetzt weiterentwickelt zu dotnet 6 und dotnet 7 weil microsoft sich gedacht
hat wir müssen mal alle gebaden und das darf keiner mehr durchblicken bei unserer benahmung
wie ist das eigentlich moment was wie ist das csharp ekosystem gibt es sowas wie cradle
nachdem ich weder maven noch cradle verwendet habe und genau weiß was die machen also ich
weiß so grob dass du mit cradle irgendwie was baust und mit maven irgendwie dann die
artefaktes stores oder so aber ich habe vom java ekosystem ehrlich gesagt relativ wenig
plan du kannst von ausgehen dass es sowas gibt ich kann es dir aber nicht genau sagen
weil ich nicht weiß was die zwei dinger genau machen also ich muss jetzt endlich mal den
graben downloaden hier dotnet 7 preview 5 für x64 also wegett bam
moment das finde das mag ich ja immer wenn man irgendwo download links macht und die
nicht wegettbar sind weil sie noch irgendwie redirecten mit javascript und so komisch im
krempel ja guck abbrechen so zack das da brauen wir wegett cradle ist ein tool welches mit
mir komfortabel die dependencies also das macht das macht das dotnet cli das macht das dotnet
cli und nuke standardmäßig schon dependency management ist dabei da brauchst du kein
extra tool und du kannst dann die meisten sachen einfach mit dotnet publish raushauen
wenn du extra wirste brauchst brauchst du eh unterm strich entweder irgendeinen automatischen
bild task der das macht oder halt irgendwelche containers aber gut ich kann es nicht vergleichen
weil ich den graben nicht kenne aus dem java umfeld kann ich das mich trauen das aufzumachen
ja ok 18 jahre dotnet genau 2002 framework framework framework framework und hier und
man sieht schon das hat das hat noch zu ballmer zeiten glaube ich ursprünglich mal angefangen
oder wurde in die wege geleitet aber dotnet core seit dem dotnet core release geht microsoft
richtig ab die am jeli releases sowohl von c-sharp major version als auch dotnet major
version wobei nicht unbedingt major version es können auch kleinere sprünge sein aber
die letzten sachen waren immer major version ich glaube das werden sie jetzt beibehalten
weil sich das einfach marketing technisch besser anhört und ich kann mir ehrlich gesagt
auch dotnet 567 besser merken als sind wir jetzt bei dotnet core 30 31 32 oder schon
37 dotnet core 1 muss ich muss ich dir sagen habe ich nicht ausprobiert ich weiß dotnet
core 1 ich habe da mal ganz ich habe ja ich mache ja schon seit 2002 hier 2002 2003 dotnet
sagen ich mache schon lange was ich habe mir das angeguckt als es neu war ich habe festgestellt
es hat irgendwelche jason run konfig gehabt habe ich mir schon gedacht ok dieses xml zeug
ist zwar nicht so geil aber das neue jason konfig format hat mir gar nicht gefallen und
was mich bei dotnet core 1 und 2 übelst abgefuckt hat ist dass die hälfte der klassen gefehlt
hat und microsoft damals gesagt hat das ist doch nicht schlimm das braucht man eh nicht
und dann kamen so dinge wie man möchte support einstellen für windows forms und wpf aber
hatte noch das nicht laufweg in dotnet core und solche dinge also microsoft hat sich schon
ziemlich da verrannt zwischenzeitlich aber mittlerweile haben sie ganz haben sie es eigentlich
ganz gut ganz ganz gut im griff das war auch die geschichte wie asp dotnet core lief ja
eine zeit lang auch parallel auf dotnet core und dem normalen dotnet framework nur mit
dem unterschied dass manche sachen die man machen wollte nur mit dem framework ging das
war auch ganz ganz wir und ich glaube stand alone anwendung kann das sein ich weiß es
nicht mehr genau was es war und es war ganz ganz mir also ich muss sagen so richtig regelmäßig
dotnet core verwende ich seit ja so ich denke mal so seit 21 in dem dreh irgendwie hier
so ja und ab da wurde es halbwegs benutzbar das stimmt so also runter geladen irgendwie
das hat es nicht downloaded dotnet core wird weiterentwickelt heißt jetzt plus dotnet also
hier guckt mal man sieht es ja auch hier dotnet 5 ist dotnet core microsoft hat sich nur gedacht
wir müssen die leute verwirren und man hat es witzigerweise dotnet 5 genannt und eigentlich
eigentlich leute eigentlich hätte man es dotnet core 4 nennen müssen bzw dotnet 4 das
wollten sie aber nicht weil die leute dann zu konfus werden wir dotnet framework 4.8 was
eigentlich viel älter ist deswegen hat man das übersprungen hat es dotnet 5 genannt was
trotzdem irgendwie nahe liegt dass es eine weite entwicklung von dotnet framework 4.8
ist ist es aber nicht weil es ist von dotnet core also ist microsoft und benahmung wissen
wir seli was ist mit discord link wenn du discord link ausrufe zeichnen discord gibt
es einen invite link so weiter gehts was ist denn mit dem microsoft download server los
wollen die mich wollen die mich rollen oder was ich will einfach dotnet downloaden das
ist nicht dotnet framework gemerkt aus dem dotnet framework ist da nix davon drinne das
ist dotnet core was sie gemacht haben bei dotnet 5 ist ja gut doch du hast schon du
hast in gewisser weise schon recht bei dotnet 5 haben sie zum ersten mal offiziell winnows
forms und gedöns unterstützt da haben sie bestimmt ein paar sachen aus dem framework
copy pasted einfach mehrfach ausführen dann funktioniert's mic microsoft microsoft logik
ok mk dir dotnet sieben mv dotnet dotnet sieben dotnet sieben yes excellent so ta xfz
v dotnet ok dann machen wir rider mal auf und stellen das um oder fügen das mal hinzu
in meine wie heißt es bei rider environments oder sowas build execution deployment tool
set und bild heißt genau nope wir wollen download dotnet sieben hallo dotnet wie sieht
deine entwicklungsumgebung für linux aus benutzen ja rider korrekt also visual studio
code reicht wobei ganz ehrlich ich mag ich mag visual studio code nicht für dotnet kram
so safe die haben jetzt auch schon ein bisschen dotnet sieben support drinne das reicht für
das was wir machen die drei zeilen kommando zeilen anwendung zum testen so also console
application komm hier speed test light wir machen wieder ein speed test speed test ist
jetzt unser neues hallo world programm weil wir machen gar kein speed test ich nenne das
einfach speed test copy paste drei kommando zeilen dinge rein kackel pock cute chat in
der ausgabe und dann ist gut so docker support brauche man nicht language kalson danke für
den sub visual studios beste für dotnet sagen nee ganz ehrlich ich muss sagen ich habe
deswegen habe ich den kram mittlerweile auch unter windows ich muss sagen ich mag tatsächlich
rider mittlerweile ich habe auch auf visual studio geschworen früher einfach aus dem
grund weil die alternativen für dotnet eklig waren aber seit es rider gibt oder sagen wir
in den letzten paar jahren ist mir rider deutlich lieber geworden als visual studio vor allem
der grund sollte aber offensichtlich sein bei mir weil ich das ordentlich unter linux
verwenden kann und bei dem anderen kram muss ich es unter windows machen das heißt es ist
für mich sogar richtig nice für mich ist es die beste idee in der besten entwicklungs
umgebung also die beste entwicklungs umgebung in der besten entwicklungs umgebung so gut
löschen wir das mal wir machen jetzt irgendwann hallo world programm so what the fuck ich
wollte command line schreiben darf ich nicht ok console right line kackel cute chat so
besser bestes kommando zeilen tut wobei ich ich habe doch hier ich mache jetzt die ich
mache die die kona standard anwendung da jetzt rein weil das wollte ich mir immer angucken
aber das war jetzt nicht heute im stream ich will einfach nur mal jetzt hinzufügen ich
habe youtube videos gesehen von einem auf ich habe auf youtube videos gesehen von einem
der dort net in wim programmiert ich bin fast vom glauben abgefallen habe gedacht wtf was
ist was mit euch los aber anscheinend wo genau ist dein problem
also kann sie mich kohle und lull so was ist hier download dot net sieben dot net run
ach ich habe nicht angeklickt dass der das im gleichen verzeichnis machen soll naja gut
gibt schlimmeres so dort net sieben run option error option name is required ok option übrigens
als kleiner als kleiner trick wenn ihr sachen mit dort net run ausführen wollt was kommando
zeilen argumente braucht dann macht einfach minus minus und dann die kommando zeilen argumente
dahinter und dann gelten die kommando zeilen argumente für eure app und nicht für dort
net run also ihr könnt jetzt sogar machen minus minus help und dann gehen die kommando
zeilen argumente an euer programm was nachdem es dort net run ausgeführt hat guckt jetzt
kriege ich die hilfe jetzt kriege ich die hilfe hier für den speed test light also
das hier das reicht als hello world programm zum ausprobieren heute warum wishell studio
versus rider noch mal ganz einfach weil rider unter linux läuft wishell studio nicht das
kann ich nicht beurteilen ich habe noch nie an projekten gearbeitet mit 200 projektmappen
drinnen rider frisst ram wie sau wishell studio aber auch also ich würde ganz ehrlich
sagen performance technisch ist es noch nicht mal so der unterschied der für mich jetzt
den ausschlag gibt der witz hat so ein bad mittlerweile arrow danke für den sub jaja
natürlich also resharper ist eingebaut in rider das ist ja vom gleichen hersteller rust
ist auch ziemlich pock also rider ist von jet planes genauso wie resharper nur das angeblich
wie sharper wishell studio komplett zugleistet und ist unbenutzbar langsam macht in manchen
fällen und rider eigentlich ganz gut benutzt bleibt so jetzt haben wir unsere super high
end kommando zeilen anwendung fertig und achso es gibt noch übrigens was cooles also das
ich kann ihr könnt sagen dort net watch run also wahrgenommen entwickelt jetzt daran habe
keinen bock das immer wieder neu auszuführen mit irgendeinem shortcut dann macht ihr einfach
dort net watch keine ahnung minus minus name keckel dann führt er das aus startet emojis
gehen bei mir hier nicht drinnen ganz fatal hallo keckel und jetzt kann ich hier was ändern
guck mal und ich drücke jetzt einfach save oder oder führt das neu aus lulvee blub blub
save oder führt es automatisch neu aus das geht mittlerweile auch für web anwendung und
sogar je nachdem was es für web anwendungen sind so feinfühlig dass sie nicht komplett
neu gestartet werden muss das ist praktisch so also keckel name das unsere konsolen anwendung
so und jetzt machen wir mal eine hot reload genau jetzt machen wir mal eine klassische
dort net anwendung und zwar also eine excel draus windows speak also ein binary draus
da muss ich mal gucken ob ich das jetzt richtig zusammen kriege publish habe ich noch was
im hintergrund also genau dort net publish allerdings mit dem richtigen dort net dort
net 7 dort net publish config release das muss man machen dass er alle compile optimierung
anmacht wir wollen es für alle linien und wir wollen es generik für linux bilden self
contained dass er alles an dependencies mit reinbaut und single file das am ende eine
excel oder ein binary rauskommt und das in bild ordner so das ist das was man die ganze
zeit schon machen konnte mit dort net kein kein ding so und dann hatten wir den bild
ordner und dann kann man hier reingucken und da liegt ein 64 megabyte massive massive
chunker binary rum das kriegt man mit tricks auch noch kleiner und wenn man das jetzt ausführt
dann sieht man schon guckt mal es ist name kecke oder name cute chat also man sieht schon
also ihr merkt den kleinen delay beim ausführen ja und das ist halt einfach was so typisch
für ein bisschen komplexere dort net kommando zeilenprogramme sind die wenden sind nicht
instant ausgeführt einfach weil die erstmal anfangen müssen zu starten und zu jitten
und dann dass es läuft und das ist das was die ganze ahead of time compilation deutlich
verbessern soll natürlich macht dieses framework hier das bestimmt jetzt auch noch mal ein
bisschen langsamer das ist tatsächlich eine relativ komplexe anwendung für dort net was
meinste was der krempel hier unter der haube macht das macht bestimmt irgendwelche reflection
damit es die kommandos findet und was auch immer das ist wahrscheinlich gar nicht so
einfach was passiert so wir mit mir teilen das jetzt mal user bin teilen minus v gibt
es net bsd teilen please teilen ich brauche bsd teil ich brauche ordentliches teilen nicht
dieses zsh krepp krepp teilen ach du scheiße wie heißt das
teilen also das normale teilen ist halt müll ne das normale teilen ist müll das zeigt
jetzt war schon so grob an was ist aber der output von dem anderen ist viel besser der
misst auch noch speicherverbrauch und alles mit und der zählt auch nicht nur die zeit
hier zusammen sondern zeigt dir an wieviel wirklich echtzeit vergangen ist und sowas
ne ne wir können sie best ich will das bsd teilen haben aber ich weiß nicht wie das
package heißt auch geil alda elisa kann ich installieren ich will teilen installieren
2300 oder ist das überhaupt das bsd teilen user bin teilen hyper hyper fein kenne ich
das habe ich schon ein paar mal benutzt ich weiß aber gerade nicht mehr aus war das das
war benchmark geschichte oder ne ne ne das meine ich nicht das haben wir sogar installiert
kannst du kannst du aber ne ne ne das meine ich nicht arsch wie kriege ich das user bin
missing was muss ich installieren was muss ich installieren leute sagt es mir user bin
teilen habe ich net bsd utils hast schon fleet ausprobiert nein und habe ich auch nicht
mehr vor weil es der da moment sorry ich habe es mit swarm verwechselt wo ist das wie
kriege ich das installiert also ja ok einfach teilen installieren mit pack man alles klar
mache ich pack man teilen installieren user bin teilen jawoll perfekt so das will ich
haben user bin teilen minus v so das will ich haben so das zeigt dir nämlich ramauslastung
an und das insgesamt 31 also 310 310 millisekunden also 0,3 sekunden kennst du ja kenn ich das
kann man mit steuerung weh gar nicht löschen ok also wir haben eine verzögerung von von
300 millisekunden beim start das ist nicht wirklich wild aber bei kommando zeilen tools
gerade welche die man in scripts ausführt oder schnell ausführen möchte ist das natürlich
doof so und jetzt machen wir das was wir ausprobieren wollten also die der bild von dort net hat
ein binary rausgehauen mit 64 megabyte man kann das ganze jetzt noch ein bisschen ich
zeige euch mal wie man den kram noch ein bisschen kleiner machen kann es gibt es gibt
ein paar tricks und das hat jetzt mit ahead of time kompilierung noch gar nichts zu tun
man kann sagen wie viel schneller ist ready to run das eine gute das eine gute frage
das probieren wir gleich aus wahrscheinlich wahrscheinlich ein bisschen die ready to run
sache ist es gibt ja aber es gibt ja alle hallo so es gibt ja bei microsoft wie üblich
wieder 50 verschiedene muss ja noch etwas anderes einstellen ach nee gleich true muss
ich machen es gibt ja wieder bei microsoft 150 verschiedene sachen was man machen kann
diese publish ready to run ist so ein hybrid aus ahead of time kompilierung und jit die
liefern wohl irgendwelche vor kompilierten run times aus die schneller starten aber dann
sobald euer programm anfängt zu laufen doch jitten oder ach keine ahnung genau es ist
microsoft zeug so ganz genau im detaill blick ich da auch nicht durch so jetzt noch mal
ein mb größer gucken wir mal wie schnell das startet das startet schon mal noch ein
bisschen schneller guckt mal das hat jetzt nur noch 200 millisekunden verzögern aber
es ist natürlich kein vergleich zu ls oder so ls hat einfach ist einfach instant da also
ready to run ist schon mal ein bisschen schneller also wir machen jetzt erstmal die binaries
kleiner damit ihr das auch mal gesehen habt ich hoffe ich krieg die passenden kommandos
aus dem aus dem kopf hin also 65 mb ist viel zu fett finde ich für so ein mini hello world
binary das liegt aber daran dass es komplett unoptimiert also sprich da wenn nichts unused
rausgekürzt oder sonst wie als er mit nichts getrimmt da wird auch sonst nichts großartig
komprimiert oder so also man kriegt das mit ein paar einfachen befehlen doch der ganze
ecke kleiner also zum beispiel kann man machen dafür bräuchte man mal was dafür bräuchte
man markt tepp completion jetzt weil ich kann mir das immer nicht merken dort net trim trimmig
jawoll minus p im public trimm kann man angeben das macht jetzt schon mal eine ganze ecke
kleiner werdet ihr gleich sehen so und dann gibt es noch irgendwas mit compresseds das
ist irgendwie enable compression oder sowas so guck mal jetzt sehen wir schon ein paar
14 mb also sieh du mal was für ein krasser unterschied das ist oder das hier ist also
14 mb finde ich ist für das binary durchaus ok 65 mb ist massif massif jonker binary ich
meine da ist die komplette runtime drin und alles was du sonst so inkludiert hast einfach
alles und hier streich da schon mal die sachen raus die du gar nicht verwendest das macht
aber bei der startzeit gar keinen wirklichen großen unterschied guckt es immer noch ob
es ist sogar langsamer geworden guckt mal warum ist ein getrimmtes bein das muss mir
jetzt mal auch einer von microsoft erklären warum ist ein getrimmtes binary 80 prozent
langsamer im start als er nicht getrimmtes binary sollte er nicht einfach nur die sachen
löschen die ähnlich verwendet werden microsoft wieder also keine ahnung das kann ich mir
jetzt nicht erklären warum ein getrimmtes binary so viel so viel kleiner so so viel
langsamer startet so und dann gibt es noch was irgendwas mit compression oder so net
enable compression ich habe ready to run rausgeschmissen ja also ich kann es auch noch mal mit ready
to run machen aber das hat es vorher ja schon langsamer gemacht also ohne ready to run
war es nur 30 millisekunden und jetzt sind 56 300 millisekunden jetzt sind es 560 ok
noch mal mit ready to run da ist es wieder schneller und das binary ist nur ein bisschen
größer also es gibt wieder 1000 varianten wie man das machen kann enable compression
wie ging das denn enable compression ich ganz ehrlich ok dotnet build all options da gibt
es auch bestimmt so eine man page oder sowas minus p ms build befehlt zeilen referenz da
wollen wir jetzt reinkommen kompress gibt's net ich weiß aber dass es eins mit kompress
gibt man enable compression in single file ist es das wahrscheinlich ist das jetzt so
schnell gefunden enable compression ja das meine ich also microsoft hat ein händchen
dafür die dinger besonders pock zu nennen ich meine wer wer würde nicht drauf kommen
dass diese option dass ich die wollte ja bild ist fewer hat den IQ aber er hat nicht er
hat nicht primes ab mit primes ab ist der IQ nochmal höher so und jetzt haben wir jetzt
haben wir noch ein paar mb jetzt haben wir da noch ein paar mb raus raus komprimiert
so und es startet immer noch halbwegs schnell so aber das hat alles nix mit der neuen ahead
of time compilation zu tun die ich mir heute angucken wollte so jetzt lassen wir nochmal
ready to run weg du hast das vor ein paar monaten gebraucht hast du das gemerkt ich
habe das auch schon gebraucht aber dass du dir das gemerkt hast und jetzt ist das binary
12 mb also das ist so ziemlich das kleinste was du mit dotnet bordmittel relativ easy
hinbekommst ja man könnte jetzt noch die symbols rausstrippen wobei ich mir da nicht
sicher bin ob das dann überhaupt noch lauffähig ist weil mit reflection und so und dann kommen
sogar nur noch 10 mb es funktioniert auch nicht mehr funktioniert das wohl nicht wahrscheinlich
weil irgendwelche reflection falfett shit macht oder so keine ahnung so und jetzt machen
wir das was ich eigentlich ausprobieren wollte nämlich ahead of time compilation
ubuntu 1804 also was muss ich machen ich muss publisch aot reinschreiben muss ich nicht
irgendwelche nougat packages installieren ich habe nämlich heise einen heise artikel
gelesen und laut dem heise artikel muss ich noch ein nougat package installieren mal gucken
wir vertrauen mal der micro den microsoft docs dass es ein dass es so funktioniert
so publisch ahead of time reload project gucken wir mal ob er das jetzt macht kein schimmer
build publisch single file trim enable compression build ok der macht dinger ok ok ok er ist schon
mal deutlich langsamer und er schreibt doch irgendwas von native warum warum sagt er dass
das ein dotnet 6 projekt ist habe ich oh oh monka ist alter watte oh das ist schlecht
mal ich stelle das mal auf dotnet 7 target framework dotnet 7 warum erzählt er mir hier
irgendwas von dotnet 6 ach weil die library noch selbst ja das ist kein ding ok wo exakt
ist das problem jetzt wenn ich frage fragen darf microsoft wie macht das microsoft denn
die machen das so die machen einfach nur die machen das ohne jegliche options die machen
das ohne jegliche options die sagen die machen das raus die machen trimmt raus die machen
single file raus die machen einfach nur so ob das jetzt funktioniert so jetzt easy 41
mb ok schon mal eine ganze ecke fetter aber guck mal das startet einfach instant jetzt
guck mal irgendwie 30 millisekunden für die für das gesamte programm also das ist das
ist startzeit plus ausführungszeit das ist quasi in regionen von einem ls um den ls
ist noch mal eine ganze ecke schneller aber ok also 30 millisekunden ausführungszeit
insgesamt das behaupte ich mal ist jetzt nicht nicht spürbar beim starten das ist einfach
sofort da geht das native auto ja das steht auch irgendwo drin dass es automatisch implied
single file zu sein wenn man das nicht angibt das natürlich schon mal cool ich mein 41
mb ist immer noch ziemlich ziemlich chunky ich weiß gar nicht ob es dieses wort gibt
klingt aber übelst cringe vielleicht muss man hier single file raus machen dass es funktioniert
publish trimmed enable compression ist das jetzt ist es jetzt kleiner geworden ähnlich
wirklich vielleicht muss ich noch was ändern hier drin keckel keckew also man muss halt
sagen das kompilieren an sich ist relativ langsam ich meine eine zeile c oder c++ kompiliert
deutlich schneller als das da der muss aber auch im hintergrund ja noch das halbe framework
kompilieren aber ehrlich gesagt damit kann ich leben das geht halbwegs 41 mb b test wir
probieren es auf der strippen noch mal binaries äh nicht beinahe was leih wir strippen noch
mal debug symbols aus dem binary raus wäre cool wenn das dotnet irgendwie standardmäßig
könnte speed test light bam strip 14 mb alter von 41 auf 14 mb ist da ist da der halbe windows
source code mit drin als docs oder was das entfernen von debug symbols bringt einfach
noch 30 mb mal gucken ob es noch ausführbar ist wahrscheinlich geht es jetzt nicht nee
moment das geht noch guck mal da das funzt einfach noch debug symbols entfernt das funktioniert
noch ja dann sollten wir noch immer einen strip hinterher hauen im bild hast du release
angegeben ja debug symbols dotnet public oder dotnet bild symbol daten mann schreibt es
mal kann man das nicht auf englisch haben trimmen trimmen will remove steht da vielleicht
hier was zu drinnen ne symbol dann weiß ich auch nicht so und jetzt ist natürlich die
große preisfrage wie kompatibel ist das ganze weil also meiner vermutung nach nicht sonderlich
kompatibel weil ich hab das auf einem super neuen linux kompiliert hier guck mal mal
strengs strengs warte mal strengs speed champ light grap lib c 229 ist glaube ich relativ
nahe 234 ok das läuft nur auf alle alle neu aller neuesten linux dingern also schlussfolge
echt das können wir mal ausprobieren machen einfach ein docker container wir machen einfach
ein docker container mit ubuntu ubuntu 16 16 04 oder so was und gucken ob es läuft
oder 1804 docker genau hi ich fange bald eine ausbildung mit csharp oder dotnet dann darf
ich mich freuen oder hyped sein wenn du sowas gerne machst schon ich finde gerade csharp
ist eines der schönsten und angenehmsten sprachen die es gibt und dotnet plattform
kannst du theoretisch so wie es jetzt aussieht dein restliches entwickler leben lang machen
wenn du da bock drauf hast ich mein ich würde es nicht empfehlen einfach sich gar so sehr
auf eine sache gerade wenn das die erste ist hier macht zu versteifen bis hin links und
rechts gucken ist immer gut aber wie gesagt ich habe auch mit dotnet angefangen ich mache
dotnet immer noch gerne auch 2022 ich habe 2002 angefangen und 20 jahre später mache
es immer noch gern ja docker machen wir mal ein docker container guck mal hier docker
docker ran komplettes verzeichnis da einfach rein mappen passt schon auf slash bild auch
gut docker ran was machen ubuntu wollen wir mal kommen nach 1804 1804 wird ja offiziell
noch supportet aber ich gehe mal davon aus dass das nicht funktioniert weil das mal ein
system zu neu ist auf dem ich gerade bin probieren wir das mal aus wie geht das minus minus
m minus it für eine shell docker kommandos merken oder muss ich noch bin bash hinten
dran machen ne jetzt so so also sind wir jetzt sind wir offiziell in einem ubuntu 1804 und
das lash bild sollte meine an nett warum nett deswegen
so also cd bild
ne die unterschied ist der unterschied in dem fall ist nicht docker oder docker komposed
der unterschied ist mit geschweiften klammern wird das in einer subshell ausgeführt bevor
das kommando läuft wird dann eingesetzt und mit mit sowas hier wird es in der aktuellen
shell aus was eigentlich keinen unterschied machen dürfte ach keine ahnung ach nee nee
nee quatsch ich erzähle mist geschweifte klammern ist variable einsetzen die variable pwd gibt
es nicht pwd ist ein chat der chat ist ja gut ich habe chat ich habe es vor euch auch
schon gemerkt ja also guck mal speed speed test light das ist ja für uns nicht das heißt
wenn wir alte betriebssysteme supporten wollen müssten wir das unter einem altem ubuntu
kompilieren dass es funktioniert na das schreit doch gerade nach irgendeinem bild script und
im docker file was sind die besten tools und programmier sprachen ja also das ist so sehr
allgemein das kommt die frage kommt kommt drauf an was du machen willst willst du wissen was
die beste programmier sprache zum einstieg ist oder willst du wissen wirklich was da steht was
die besten tools sind um programmier sprachen zu lernen also sprich welche plattformen mit
kursen sind die besten oder oder was also die beste einsteiger programmier sprache ist meiner
meinung nach javascript ich weiß jetzt schreien die ganzen payasen fans und und go fans und dot
net fans aber javascript hat un unbestreitbare vorteile jeder kann javascript verwenden den
browser installiert hat und du brauchst nichts anderes als ein text editor das heißt die
einstiegshürden für javascript sind mit abstand die geringsten was es gibt und das nächste ist du
kommst eh an an javascript und frontend sachen nie vorbei das heißt ein bisschen css html und
javascript intos haben schadet nichts weil du brauchst eh früher oder später also ich
finde zum einstieg ist javascript das beste das ist schwierig das für fünfjährige zu erklären
also im prinzip muss man zwei sachen trennen auch wenn es ungern getrennt wird aber es eine hat
eigentlich mit dem anderen jetzt zwar was zu tun aber es ist es nicht also was ich meine ist du
musst zwei sachen trennen bei docker du musst linux container trennen und du musst docker trennen
linux container ist eine funktionalität im linux kernel die erste mal nix mit docker zu tun hat
linux container setzen sich zusammen aus lxc im kernel namespaces cgroups was im endeffekt dazu
führt dass du ein prozess dass du ein programm starten kannst in einer äußerst leichtgewichtigen
sandbox wobei man sagen muss sandbox ist vielleicht das falsche wort in einer etwas
abgeschirmteren umgebung sandbox ist vielleicht bisschen zu hart ne vm ist eher eine sandbox
das triffts bei container vielleicht nicht wirklich also du hast im linux kernel funktionalität wo du
einem prozess bestimmte sachen vorgaukeln kannst ja zum beispiel er hatte er hätte eine andere
netzwerkkarte als in einem haus drin oder er hat einen anderen haus namen und du kannst
ihn ein bisschen besser isolieren vom restlichen system und nein das hat mit einer vm nichts zu
tun weil eine vm bis auf deine cpu quasi alles emuliert deswegen ist auch die cpu performance
in vms gut vms sind mehr oder weniger 99 prozent native cpu performance aber alles andere ist
emuliert und in der vm hast du aber auch mittlerweile den vorteil dass du die ganzen hardware vm
extensions und sowas hast also du hast einmal linux container im köln so und nachdem linux
container im köln relativ sagen wir mal anspruchsvoll zu benutzen sind brauchst du
irgendwelche tools dafür die dir das einfacher machen also du kannst relativ einfach ich sag
jetzt mal relativ einfach weil es sind nur fünf zeilen oder so aber dann kann der noch
nichts also kannst relativ einfach einen linux container starten mit fünf fünf oder sechs
zeilen c++ oder c oder was auch immer wenn du die richtigen die richtigen körner aufrufe hast
kannst mit fünf zeilen c in container starten wobei es wie gesagt container ich persönlich
finde das wort container nicht so schön weil container im kopf sich anhört wie irgendwie
isoliert in richtung vm das ist es nicht also es ist linux container ist nichts anderes wie
ein prozess den du ganz normal startest nur dass ein paar zusätzliche abschirmung noch drumherum
sind also wenn du jetzt wenn du in den prozess also wenn uns lieb startest hier auf der kommando
zeile oder ob du ein sleep im docker container startest das ist kein großer unterschied beides
ist ein ganz normaler prozess den du auch mit ps siehst übrigens also wenn du mit ps guckst
was läuft wenn du mit docker sachen ausführst du siehst das also ob du ein sleep im container
ausführst oder ein sleep auf deinem host ist ziemlich egal so und der einzige unterschied
ist dass wenn du einen sleep im container ausführst dass du dann die möglichkeiten
hast diesem sleep noch verschiedene sachen vorzugaukeln die nicht der realität entsprechend
ja zum beispiel oder sagen wir mal so du machst ein if konfig so if konfig gibt dir die die
netzwerk konfig von von deinem linux system raus so wenn ich ein if konfig bei mir im host
ausführe oder if konfig im container ausführe können die zwei unterschiedliche sachen anzeigen
weil das eine sachen was der linux container macht ist in name spaces und name spaces gibt
zum beispiel auch für netzwerk konfig das heißt dass if konfig was du im container startest
denkt du hättest andere netzwerk konfig nicht dass du trotz ist das im container wie wenn
du es direkt in der kommando zeile ausführst ein ganz normaler neuer prozess nix anderes
es ist keine vm es ist keine große sendbox es ist ein weiterer prozess mit nur ein paar
kleinen isolationsschichten drum herum dementsprechend ist es auch ressourcentechnisch und performenstechnisch
kein unterschied ob du den prozess auf deinem host ausführst oder im container ausführst
ich sage keiner theoretisch gibt es natürlich welche aber ich weiß gar nicht ob die überhaupt
messbar sind gescheit also es macht keinen unterschied ob du den prozess auf dem host
oder im container ausführst performenstechnisch deswegen sind ja container im vergleich zu
vms auch so beliebt bei vms hast du zwar gute cpu performance aber vms brauchen ram das
ist übrigens das was vms unattraktiv macht der speicherplatz und vor allem der ram das
ist auch das was docker container besser machen wenn es rein um die cpu performance ging dann
werden vms vollkommen ok cpu performance ist in der vm nahezu native wenn ich in cpu benchmark
machen würde in meiner vm und auf dem host würdest du das gleiche mehr oder weniger das
gleiche ergebnis bekommen und die ramauslastung ist halt der große vorteil weil überlegt
euch mal ich ich will jetzt ein sleep ausführen weil sleep bald bedgetime ist in 40 minuten
sleep das beste kommando jetzt wenn ich ein sleep ausführe hier auf der kommando zeile
oder im container dann braucht das was wird es brauchen ich sage jetzt einfach mal 10
kilobyte ram wenn ich diese sleep in der vm ausführen will dann müsste ich ein komplett
neues linux booten in der vm das bedeutet nicht einfach nur linux kernel starten sondern
alles was drumherum gehört das ist systemd starten der mich dann einlog eine shell starten
und in der shell dann sleep 5 machen das dauert erstmal 10 sekunden bis es überhaupt anfängt
fertig gebootet ist und das braucht von den 10 kilobyte ram die das normalerweise braucht
zum ausführen lokal oder im container braucht das zu ich sage jetzt einfach mal 250 mb ram
in der vm und das ist halt natürlich ein unterschied die vm braucht einfach viel mehr ram als
wenn du einen stink normalen prozess ausführst nichts anderes ist ja ein container so und
jetzt kommen wir zu docker das war die lino das war die container funktionalität die du
erst mal im linux kernel drin hast und alles was drumherum gehört docker ist ein frontend
für die funktion im linux kernel und docker ist bei weitem nicht das einzige frontend
dafür es gibt lxd die userland variante dann gibt es diese lxd geschichte von den ubuntu
leuten es gibt docker es gibt diesen komischen potman docker fake von redhead es gibt kubernetes
es gibt rancher noch hattest du noch coos und flatcar und es gibt oder wie heißt das
andere ding mini ach was auch immer es gibt zig tools um die container funktionalität
im linux kernel besser zu managen diese tools liegen unterschiedliche schwerpunkt ansporn
natürlich ansporn gibt es auch noch genau diese tools haben unterschiedliche schwerpunkte
und auch zu die gründe aus welchen sie entstanden sind warum docker oftmals synonym für linux
container verwendet wird ist folgendes ja snap gibt es natürlich auch noch genau so
und warum docker oftmals synonym mit linux container verwendet wird ist docker war die
erste mainstream linux container management das erste linux container management tool
flatpack sind glaube ich keine container bin ich mir nicht ganz sicher also sprich es gab
die linux kernel container funktionalität und dann gab es irgendwann danach docker was
diese funktionalität relativ einfach benutzbar gemacht hat für jedermann und deswegen wird
docker und linux container oftmals so in einem atemzug genannt aber es sind zwei unterschiedliche
paar schuhe linux container ist die kernel funktionalität und das was man unter namespaces
und cgroups alles so hat und docker ist eigentlich nur das frontend für diese kernel funktionalität
und kubernetes und alles andere auch und diese tool ich meine man muss sich überlegen natürlich
gehört zu so einem container mehr es gehört ein image dazu und alles und um solche sachen
kümmert sich docker auch also docker ist ein management tool für die linux container funktionalität
im kernel eines von vielen ja genau das ist auch der unterschied ich glaube das hat man
jetzt verstanden also der unterschied dazu zu einem befehl ausführen lokal oder im container
das ist kein unterschied also kein großer unterschied versus eine vm das heißt im endeffekt
wenn mein kernel bestimmte sachen nicht supportet also mal angenommen ich will ein filesystem
benutzen was mein kernel nicht kann dann kann ich das auch nicht im container benutzen selbst
wenn ich da für alles installiere was ich brauche in der vm sieht das anders aus in
dem vm booted ein komplett neuer kernel richtig ja das ist aber auch logisch es ist nicht
so container nutzt den host kernel es ist nicht so als hätten die container irgendwie
eine wahl was sie benutzen können das ist ein stink normaler prozess den ich starte
sowie alles andere was ich auch starte nur mit ein paar kleinen sonder sachen kernel funktionalität
drum herum ja und ich rede hier nur von linux container windows container und geschützt
das ist noch was anderes und das kommt übrigens auch aus dem linux umfeld das microsoft hat
es ja irgendwie nachgebaut mit top weiß gar nicht auf was laufen denn windows container
auf wsl oder was also ist docker eine art api für linux container umgedreht docker
ist das frontend was die ap im linux kernel für container verwenden an das thema du hast
doch ein ap aus amerika nee ich habe auf ebay deutschland gekauft aber ja ach so ja ich
habe den uss kam ursprünglich aus usa ja nee nee nee nee nee ich habe das umgestellt und
das ist die reichweite ist die gleiche das ist aber auch ein trugschluss dass die reichweite
größer wird weil deine geräte müssen ja auch zum access point kommen und deine geräte
sind auf jeden fall auf deutsch eingestellt also es würde dir gar nichts bringen wenn
dein access point eine größere reichweite hätte weil deine geräte da nicht zum access
point kommen zurück der grund warum das eine höhere reichweite das liegt nicht daran
weil es aus amerika ist sondern weil es schlicht ergreifend bessere access point ist docker
hat eine zukunft docker wird weiter relevant bleiben keine frage für lokale builds und
lokale sachen machen wir jetzt ja auch gleich ist doch das mittel der wahl was will ich
mit kubernetes cluster lokal bei mir komplett unsinnig kubernetes der riesen vorteil von
kubernetes ist sowas wie skalierung zum beispiel dass du sagen kannst hey ich habe eine web
anwendung die ist relativ stateless und die kann ich halt bei fünf usern auf einem container
laufen lassen und wenn ich auf einmal keine ahnung in dem pewdiepie video drin bin und
300.000 leute darauf zugreifen wollen dann skaliere ich das hoch auf ganz viele container
über mehrere hardware kisten und das kannst du mit kubernetes sogar on the fly machen
ohne dass du irgendwas von merkst und du kannst sogar automatisch machen das ging übrigens
vorher vor kubernetes auch alles schon aber mit kubernetes ist es deutlich einfacher
und schöner im handling du konntest du konntest früher auch schon laut balancer davor packen
und anhand der auslastung dann irgendwelche sachen anstoßen die backends hoch gefahren
haben also das ist einfach nur in mode gekommen die letzten die letzten jahre aber docker
wird es weiterhin geben docker ist nicht was anderes als lxd ja aber es gibt zwei sachen
also lxd diese linux container geschichte im kernel die nennen auch manche lxd das
ist für alles das gleiche es gibt noch ein kommando zeilen tool lxd das ist sowas wie
docker also ein management tool für container aber es ist nicht docker es ist ein anderes
management tool lxd ist eine container das ist dann von den ubuntu leuten das gibt es
auch noch das ist ein gepatchtes lxd mit ein paar sonderfunktionen und einem demon der
irgendwelche sachen automatisch machen kann keine ahnung wie gesagt docker unter windows
ist eh fake windows container ist irgendwas komisch dahin gewurzeltes
konnte man docker da nicht nutzen dafür und doch unter anderem unter anderem dafür wird
es ja auch benutzt das ist eigentlich das ist glaube ich so eines der beliebtesten tools
um genau sowas zu machen außer mit mech ja mit mech ist es ein bisschen schwierig weil
mech geht immer nur unter mech und ich weiß nicht wie es mit docker unter mech mittlerweile
aussieht ja gut der typ hat es auch nicht mehr alle mit seinen 30.000 notes daheim
genau so jetzt müssen wir mal weitermachen also wir können unser tolles kommando zeilen
tool nicht ausführen wo wir jetzt dabei sind wir machen jetzt einfach eine runde docker
also ihr seht mein kommando zeilen tool funktioniert nicht unter einem alten ubuntu und warum funktioniert
das nicht unter dem alten ubuntu naja weil das keine aktuelle den satz muss ich anders
anfangen weil ich das kompiliert habe auf meinem aktuellen manjaro und das hat deutlich
neuere libraries als das uralte ubuntu das heißt eigentlich müsste ich das auf einem
uralt linux am besten kompilieren dass es von dort an auf allen linuxen und neuer funktioniert
und nachdem ich mir garantiert jetzt keine vm mache mit ubuntu 1804 oder noch schlimmer
cento s7 machen wir das mit docker container wo wir gerade dabei sind können wir ein bisschen
docker stills machen also ein neues neues file docker file und dann hoffe ich mal dass
es funktioniert ich bin mir da nicht wirklich sicher jetzt aber man weiß ja nicht so und
wir machen uns die defops lite geschichte bild.sh das muss reichen bash k8 ads setzt
jetzt ich glaube du kannst auswählen was du machen willst ich bin nicht so der krasse
kubanier des profi aber ich glaube du kannst bei docker auswählen was du für eine runtime
verwenden willst letztendlich sind die images unter der haube ja eh alles mehr oder weniger
das gleiche das sind ja wir sind die oc dingsbums container images oic container images 1804
ist richtig alt guck mal das sind vier jahre schon ist schon was und wenn wir cento s7 das
von 2014 noch schlimmer acht jahre wir machen es cento s7 wir machen leute wir machen cento
s7 docker file wo wir das drin bilden kann man arm docker container auf x86 host machen
eh ne aber die meisten container gibt es für arm und x86 also es ist ja nicht so sehr
die frage gibt es docker für x86 oder arm das gibt es sondern das was da drinne ist
in dem jeweiligen image ist das in arm oder x86 software und die gängigen betriebssysteme
von ubuntu debian besonst was gibt es als arm und x86 varianten auch für docker und
die meisten images werden dank dem raspberry pi auch für arm gebaut mittlerweile und wenn
du jetzt meinst ob du das irgendwie cross compilen kannst auch wenn das nicht die frage
hier ist ja du kannst von x86 host cross compilen für arm das geht also du kannst also ich
könnte jetzt zum beispiel wo wir gerade hier dabei sind ich könnte jetzt zum beispiel
bei dotnet ist es halt besonders einfach ich könnte einfach ein arm bild machen hier arm
ich bin mir gar nicht sicher ist es arm es ist arm 64 ah ne arm 64 alter nein es ist es
ist linux arm so rum ja dann käme ein binary raus was ich auf raspberry pi kopieren kann
und direkt ausführen das wird funktionieren ja das hängt aber ein bisschen von der jeweiligen
runtime und den tools ab also in c++ geht das auch ist aber eklig eklig aber es geht
bei anderen sachen beißt man sich da die zähne dran aus das kommt eher auf die tools
an wenn ja das kannst du dann auch am ende im docker container machen aber ja also wir
machen mal ein bild punkt sh was was müssen wir dann machen um unsere software zu bilden
also wir brauchen die erste mal unser unseren bild bild befehl so lass mal lass mal kurz
in mich gehen bevor mein docker feil docker feil machen muss ich muss ich muss ich muss
mal kurz überlegen also wir löschen erstmal den bild ordner weil klinis bild ist immer
gut und wir machen neuen bild ordner das ist auf jeden fall auch schon mal nicht verkehrt
ich mache kein make feil aber bevor ich ein make feil macht da muss schon was passieren
zum beispiel c++ web assembly im browser muss passieren was wir letztendlich gemacht haben
da hatten wir ein make feil aber so und jetzt kommt ganz viel docker geschiss würde ich
sagen ja dass ich sage wie gesagt das ist def ob slide jetzt ich würde aber sagen das reicht
für die kleine geschichte hier also machen wir mal ein docker feil also from send os
7 ich bin mir da nicht sicher ob das richtig ist docker run from send os 7 ok das scheint
richtig zu sein ok nice also from send os 7 das ist das base image was man verwenden
will für seinen container und da drinne will ich jetzt machen run boah ich hab keine ahnung
das muss ich erstmal ausprobieren in einem send os 7 container also erstmal will ich
ein yum update machen da bin ich mir relativ sicher ja also yum update minus y jetzt sieht
man auch eines der großen vorteile von container also in diesem anwendungsgebiet wenn ich mein
docker feil und mein bildscript habe jeder der dieses repo sich auscheckt auf git kann
damit in bild durchführen es kommt exakt das gleiche binary oder es ist exakt das gleiche
bild womit ich das auch mache der muss sich nichts auf seiner ledungskiste installieren
was vielleicht irgendeine andere version ist und es dann wieder nicht funktioniert und
erst mal drei tage am gucken wo ist denn jetzt die unterschiedliche version der führt das
bildscript aus braucht docker installiert und es funktioniert einfach und wenn man da
noch einen schritt weitergehen will wenn man super super agile continuous integration pipelines
machen will von jenkins bis github action oder oder was gibt es da sonst noch drone
und und git lab ci und was auch immer also wenn man sowas machen will bietet sich das
auch an das reproduzierbar in containern zu machen so also ich will ich will in update
yum update machen ok nice dann muss ich dann muss ich dort net installieren wo war dann
hier der download link jetzt habe ich das doch im hintergrund htp download weget weget ist
nicht ok jam install weget will ich als nächstes machen jam install weget und wir machen auch
gleich bild essentials wie heißt denn das unter unter kann install bild essentials wie
heißen dieser krempel jam group install development tools habe ich schon mal gesagt dass ich
cento s nicht beziehungsweise die paketverwaltung in cento s nicht nicht mag wir verwenden auf
der arbeit hauptsächlich cento s beziehungsweise ist eigentlich red hat sieben nehm doch einfach
das dort net image es gibt kein dort net image für cento s sieben
dort net docker heißt der krempel source sdk sieben guck es gibt bloß ubuntu dieses
komische microsoft ding debian und alpine
cento s wir müssen das selbst machen ok weget ist installiert also weget wir installieren
uns dort net das base image ist doch egal ne ne das base image ist nicht egal ich will
ja ein uraltes cento s sieben haben dass ich den kleinstmöglichsten nennen habe für meine
dependencies also wenn ich jetzt in ubuntu guck mal ich hab doch das binary gerade bei
mir lokal kompilieren aktuelles ubuntu wird auch nicht so viel älter sein ich kann keine
ich kann kein binary kompilieren gegen den ubuntu 22 04 und es dann auf ein 1804 kompilieren
das mag er nicht deswegen bauen wir jetzt einfach ein uralt cento s kompilieren das
da drauf kopieren uns das binary runter und es funktioniert auf den letzten linungssystem
der letzten acht jahre zumindest soweit die idee so also wir haben dort net runtergeladen
wir haben dort net nach ruhr runtergeladen das vielleicht nicht so nicht so clever nie
wohin habe ich dort net runtergeladen oder so war nach ruhr komm scheiß drauf da xfz
dort net sdk ok also das muss ich als nächstes machen wegett wir haben install wegett run
wir machen was anderes mkdir slash dort net das weiß ich wenigstens wo der camp liegt
später und dann habe ich das runtergeladen in das da wegett so wir laden das runter
nach slash dort net slash dort net punkt ah punkt gz wegett weiß jemand aus dem kopf
ob es groß oder klein o ist ich glaube es ist groß und parkerl ist es standardmäßig
auf standard out das ist immer man weiß es nicht genau aus dem kopf so jetzt gehen wir
nach jetzt gehen wir nach slash dort net und machen da drinnen dann ein xfz v dort net
da punkt gz also ich mache jetzt im prinzip im docker fall das was ich hier gerade von
hand mache nur damit ich dann reproduzierbar bilden kann also dort net da ist es und wir
haben guckt etc rettet release wir haben ein cento s79 leute das ist uralt julie 2007 also
da also ich glaube älteres system müssen wir wirklich nicht supporten ok weiter weiter
im text was muss ich jetzt als nächstes machen also ich habe jetzt dort net runter ich habe
jam install ich habe die weddaubertools ich habe den kram runtergeladen wir machen noch
ein bildverzeichnis oder output dann am ende reinkommt was war wir denn jetzt wir kopieren
unser gar unser komplettes projekt nach slash bild ich weiß nicht ob man das so oder so
schreiben muss ich bin mir jetzt nicht sicher ob das funktioniert ehrlich gesagt schau
wir mal schauen wir mal gucken wir mal ob das docker filets funktioniert also und als skript
zum starten brauchen wir jetzt irgendwas wie docker run dann geben wir dem ding in den
namen speed yes das ding speed champ speed test die musik ist vorbei seg danke für den
sub mario speed test light bild oder so warum sind du es weil ich brauche das älteste die
älteste plattform die von dort net noch supportet wird damit es auf allen neueren plattformen
läuft pains champ cd dependency mist so als wir geben den dingen namen bild ne minus
minus no dependencies bringt nix der hat auf jeden fall dependencies auf die standard c
library ok ich muss mal kurz in mich gehen also wir füllen das ding aus docker run wir
müssen es vorher noch bilden habe ich ja ganz vergessen docker bild ok das kriege ich so
nicht in einem stück hin da muss ich das muss ich jetzt erstmal ein paar mal ausprobieren
gehen wir mal hier raus und gucken was passiert also docker bild punkt bildet das docker
feil im aktuellen verzeichnis so docker bild und jetzt gucke ich erstmal ob es funktioniert
keine ahnung ich bin mir da und und schlüssig ob das tut was ich da gerade basteln plus
nix bild punkt sr ok nein ok run das funktioniert schon mal also das der nimmt das docker feilen
im cento s installiert was auch immer hat ein jam update gemacht der macht gerade in
jam update im container ok das schöne ist der cache das das muss man nur einmal machen
so als nächstes sollte er weget installieren und developer tools installieren stimmt wir
sollten dem namen wir sollten dem ding noch ein name geben oder ja wir sollten dem ding
noch ein name geben aktuell hat es einen eigenen haschwert das ist nicht so nicht so
geil glaube vielleicht vielleicht nicht so nicht so schlau so und jetzt installiert er
sich die developer dependencies alles nice so weit so weit so gut danach sollte er dort
nicht runterladen
jetzt mach mal hinne wir haben nur so eine viertel stunde Zeit das wird jetzt hier spresiert
jam ist so ein rotz alter kannst du mal dein bild command pasten hier bild punkt ok er
downloaded gerade dotnet das ist das weget das ist das dotnet weget er unpack dotnet
das ist auch schon mal gut das ist devops light speedrun was wir hier machen ja genau
und jetzt ist er fertig oder docker run requires an argument ok also das was ich hier gemacht
habe das funktioniert schon mal prinzipiell so docker run name bild gibt das nicht den
hasch aus da muss ich leute wir machen fai ich habe die feife der idee schlechthin passt
mal auf pass mal auf messer feife ideen das habe ich nämlich letztes gemacht aber für
was ganz was anderes aber das wollte ich zeige ich euch mal pass mal feife also benutzt habe
ich das für einen script was eschers cli gerappt hat was ganz was anderes aber ich
habe high iq idee wir machen jetzt docker bild ich glaube wir könnten dem ein name geben
den bild ja null oder könnten wir einfach sagen docker starten null wollen wir nicht
wollen wir nicht pass mal auf der gibt doch am ende hier die id von dem bild raus so
passt mal auf pass mal auf docker bild punkt so das sollte jetzt easy funktionieren weil
das ja schon gecasht ist das dauert jetzt plus zehn sekunden oder so so passt mal auf
da sollte jetzt die aldi rauskommen so und jetzt jetzt kommt das was ich euch zeigen
wollte was ich schon was ich was ich letztes mal verwendet habe also man könnte jetzt zum
beispiel man könnte jetzt zum beispiel hier sowas machen man könnte jetzt hier zum beispiel
sowas machen und jetzt hätte ich hier drinnen den haschwert stehen von dem container bild
und könnte den jetzt quasi hier einfügen aber jetzt passt mal auf pass mal auf docker
bild minus ku nein ich will kein ku ich will kein ku ich will euch jetzt nämlich was zeigen
pass mal auf das problem wenn ich das so ausführe ist jetzt ich fühle es mal hier aus dem best
script aus auf der kommando zeite ich sehe den output ich sehe den output nicht vom docker
bild ach das ist standard error ich sehe den output nicht vom docker bild seht ihr
die sub shell verschluckt den output und schreibt schreibt in die variable rein ich habe letztens
einen richtig coolen trick gefunden auf stacker overflow man macht einfach sowas hier und
dann funktioniert es nicht geil jetzt wollte ich euch das zeigen man kann nämlich das in
den output in die variable schreiben ist das vielleicht irgendwas was nur in bash funktioniert
aber vielleicht funktioniert das vielleicht funktioniert das nur in bash
ach minus t muss natürlich minus t hat ja überhaupt nichts zu suchen guckt und jetzt
und jetzt sehe ich den output auf der kommando zeile und ich habe in meiner variable den
output drinstehen mit dem hash das ist massive big brain oder wie gesagt ich habe das letztens
für was verwendet wo man wo man es hier auf ruft und unter der haube aber den output trotzdem
sehen will das ist das ist next level shit oder wenn man zwei titi wise hat dann musst
du wahrscheinlich irgendwie die den channel angeben oder so das ist das ist wirklich das
ist wirklich feifett hier so jetzt starten wir den docker container dann lassen wir kurz
nämlich gehen dann müssen wir irgendwas kopieren wie docker docker c was nervt nicht rum docker
cp aus dem speed bild wo machen wir den bild überhaupt nach slash bild alter leute wenn
das funktioniert dann also von slash bild wollen wir das wollen wir den speed test light rüber
kopieren in bild lokal warum nicht einfach mit dem namen weil es kein namen hat weil
es wir sind wir sind next level wir brauchen keine namen haschwerte haschwerte only cringe
wenn auch namen verwendet also rüber kopieren weiß das nicht ob das ist so oder also rüber
kopieren den output und danach den speed bild löschen und wenn wir super mutig sind machen
wir noch am ende docker image hasch löschen so kann man über das kann das bestimmt ja
ja ich weiß man kann minus t und namen machen aber wie gesagt hasch beste wenn das fast
so also das hier müsste jetzt eigentlich soweit schon funktionieren außer der bild
der bild der dürfte noch nicht funktionieren ich führ noch mal kurz bild punkt sh aus
ja da funktioniert natürlich nicht da gibt es jetzt grad nichts zum bilden aber erlöscht
danach den container und wenn ich jetzt richtig advanced bin könnte ich danach sogar den
kompletten container wieder den kompletten container wieder löschen guck mal da hat
es sogar das image gelöscht wir bilden das jetzt ohne rückstände ich sag ja defops
any percent speedrun aber das mache ich weg weil ansonsten wird es nur unnötig unnötig
langsam ok jetzt müssen wir uns um unser docker file kümmern also wir kopieren uns den
graben nach bild was machen wir jetzt wir ob wie war das noch mal docker file command
warte mal command multiline runde fifa 1 gegen 1 tja kaufst du mir eine fifa lizenz und und
und die nötigen fifa points als ich ein ordentliches team bekomme ich gebe dir mein paypal account
easy dann spiele ich mit dir auch fifa 1 vs 1 entry point das war doch irgendwas mit breaking
up long lines in your docker file ich will wissen was command run war mensch war das
einfach command ich copy mein problem ist ich copy paste einfach immer aus bestehenden
docker files ich schreibe so gut wie nie neue docker files ich copy paste immer nur welche
run run oder cmd cmd einfach cmd was ist der unterschied zwischen entry point cmd und
und run also cmd wir gehen nach slash bild dann führen wir unser dotnet dotnet bild aus
das da ich glaube so für die nächste zeile so wir sind in bild wir haben kein dotnet
kommandos zur verfügung wir müssen slash dotnet da liegt unser dotnet rum wozu du das
script verwenden kannst dass wir unser programm kompilieren können in einem ural cento s7
ohne dass ich mir ein cento s7 lokal installieren muss also in der vm und es dann immer reproduzierbar
machen kann also cd bild dotnet publish config release also ich würde sagen chat was meint
ihr funktioniert das oder funktioniert das jetzt nicht also irgendwas habe ich garantiert
vergessen tausendprozentig aber ich ich ich fühle maus schon nee ich glaube nicht dass
es läuft ich bin nicht zuversichtlich dotnet installieren vergessen hier ist dotnet installieren
drauf dabei ok bild aber er versucht schon mal was zu kompilieren
musst du das binary nicht aus dem container rausholen doch das mache ich hier guck mal
docker cp das ist copy docker cp von speedtest lite bild slash bild slash dessa bild nach
in den bild ordner lokal doch doch
was hat er denn für schmerzen couldn't find any valid eco package i was interessiert
mich denn irgendwelche übersetzungen alternatively you can set configuration flag ach so ja das
muss die schon mal machen zeigt mal was gibt's dafür hast du eigentlich ein dual boot system
oder worauf läuft jeder linux windows windows das ist eine vm was zum ah man kann eine environment
variable setzen ok leute ich ich bevorzuge die environment variable das können wir nämlich
einfach in unser docker feil reinhauen haben wir hier unten hin entf hallo gleich eins so
build prege leute prege es ist schon spät wir haben immer viel zeit aha aha das sieht
nach einem dotnet bild aus schon mal oh fuck was wurde nicht gefunden klang das habe ich
das bin ich ausgerichtet ich habe das eigentlich immer sie lang ausgesprochen aber ich habe
letztens ein talk gehört auf youtube von irgendeinem der klang entwickler und die sprechen es
klang aus nicht sie lang klang not found stand das nicht sogar freund hier irgendwo drinnen
was man als dependencies braucht aha man braucht z lang und set lip set lip eins gef gibt es
den kram wie heißen der kram unter cento s überhaupt install wenn er das sagt muss
das stimmen ganz klar das ist wie das ist wie btr fs leute ist es btr fs ist es butter
fs ist es betta fs ist es was auch immer man hat keine ahnung aber set lip gibt es nicht
guck mal hier set lip set lip search set lip devil will ich wahrscheinlich haben vermute
ich jetzt mal also weget das und set lip devil soll mir recht sein noch mal mein bild ausführen
bild.sh das geht jetzt ein bisschen langsamer weil er die restlichen schritte noch mal neu
machen muss
ich habe keine ahnung was mir jam mit teilen will muss man nicht verstehen oder auf cento
s komm gib alles wir haben nur noch zwanzig minuten höchstens zeit hier warum warum installiert
er mir boost also es ist mir suspekt wenn er c++ shit braucht das machts in der regel
nicht besser auf cento s mach hinne warum ist jam eigentlich so ein müll ich weiß ich
hab schon öfters gesagt aber warum ist jam eigentlich so kacke so net installation noch
mal und dnf ist auch nicht viel schöner das ganze rpm ökosystem fuck mich übelst ab
es wird set lip nee ich glaub boost ist eher für base development package ok leute prege
prege ob der bild geht prege project to restore prege prege ja wir benutzen cento s7 auf der
arbeit aha aha ok der bild scheint zu laufen wenn er jetzt nicht noch abkackt fertig fertig
bild das ist nix drin no such pass irgendwas habe ich falsch falsch geschrieben leute irgendwas
habe ich falsch falsch geschrieben speed test light bild slash bild achso moment
ich mach output bild ich mach output output bild das heißt genau es ist doppelt es ist
doppelt bild das muss ja mal einer dran denken so noch mal geht jetzt schneller weil du noch
das dotnet programm übersetzen muss ach stand das noch mal da das habe ich jetzt gar nicht
gesehen ach hier oben guck nee nee noch anzuhören wir sehen jetzt ja ob es jetzt funktioniert
aha aha auf aha aha oh guck mal da bild speed test light und wir haben ein binary was funktioniert
kackel wobei ach h gibt's nicht h war in dem anderen projekt drinne ja funst so jetzt eine
sache haben wir noch vergessen eine sache haben wir noch richtige chonk champ eine sache
haben wir noch vergessen zum zum schluss strip und uns strip slash bild slash bild es ist
im container aus slash bild slash bild ja oder slash bild slash bild so ach ich habe oben
schon cd cd bild also muss ich jetzt eigentlich nur noch so machen so und da sollte jetzt
ein binary rauskommen was irgendwie 14 mb groß ist und funktioniert und kackel auf der
comando zeile ausgibt also das ist ja eh huge programm hier was wir da was wir am start
Leute doch chanel aber ich hab's vergessen ich weiß nicht mal was es war irgendwas den
heckermann kick sind groß kann das sein bild komm mal hier 14 mb binary so und es läuft
wenn das bei mir läuft muss ich das jetzt auch nicht mehr auf dem ubuntu wir sind wir
sind mal so frei leute wir sind mal so frei ubuntu 1804 bild speed build build speed test
valid ecopackage wait a minute wir haben doch gesagt er soll nix ecopackage machen
habe ich ihm nicht gesagt er soll er soll dort net system globalization invariant 1 machen
die endvariable zum bild doch nicht fertig gleich ist ein bug das ist eine runtime variabler
ich kann die nicht zur bild time ausstellen oder was ist aber ziemlich dumm checkt doch
wieder keiner dann man kann es zur bild time ausstellen ja wenn ich nur wüsste wenn ich
nur wüsste wie das bild das aber dann keine da müsste man sich jetzt raussuchen
das da muss muss das da rein oder ich mache das in die oder ich mache das in die projekt
ich mache das hier in das projekting rein und gut ist unload project ich machs uns da
muss ich noch mal bilden aber jetzt seht ihr guckt mal wie gut das mit dem bild jetzt funktioniert
ich kann jetzt reproduzierbar auf einem fucking uralt system einfach ein aktuelles binary
bilden und ich muss nix mehr dafür machen außer mein bild script anpassen und vor allem
muss ich mir nicht diesen ganzen müll lokal installieren und jeder andere der sich das
git repo klont könnte es gleich jetzt auch machen auf was stellt ihr von sento es um
wahrscheinlich ubuntu was ich schon seit jahren befürworte
das kann dort net jetzt was go kann ahead of time kompilieren und zwar rückwirkend
für relativ viele betriebssysteme wenn man es auf dem auf auf der passenden kiste
kommt halt so ist es im bild bild ordner drin 228 bettgetheim angesagt leute gleich bettgetheim
cd bild cd bild speed test jawoll funktioniert name keckel alles klar ok nice wisst ihr was
mich wisst ihr was jetzt mal ausprobieren leute wir testen mal wollen wir gucken ob
es mit ubuntu 16 16 04 funktioniert wahrscheinlich nicht ich glaube so alt so alt ist es nicht
ich meine wobei vielleicht funktioniert was denkt ihr leute funktioniert auf 16 04 wir
haben es auf dem cento s7 gebildet cento s7 kam vor ubuntu 16 04 raus ich meine das ist
jetzt bettel oft the oldest sozusagen hey es funktioniert sogar um ubuntu 16 04 guck mal
das doch nice also jetzt mal im ernst was älteres als ein ubuntu 16 04 muss man nur
wirklich nicht mehr supporten das ist ein das ist ein über sechs jahre altes betriebssystem
wollen wir mal wollen wir mal 14 04 ausprobieren wir machen das jetzt schrittweit schrittweise
15 15 10 habe ich 3000 dumme ubuntu images 15 10 ok cd bild bild speed test light achso
nicht cd würde auch funktionieren name keckel von wann ist der älteste lts kornel ubuntu
504 ich habe keine wort die wort die worthog war das erste ubuntu glaube ich 2004 das
glaube ich aber nicht dass es das unterstützt ok was haben wir da noch 15 04 14 04 ist
glaube ich das nächste lts dann wieder linux können dann nicht das ist alles schon ewig
end of life achso ubuntu support ist 1804 also extended support 16 04 das hat aber keiner
ubuntu lts geht immer fünf jahre also 16 04 1804 ist das das letzte ubuntu gerade das
funktioniert immer noch 14 ok kaum 14 04 das 14 04 genau 8 jahre altes ubuntu also ich
glaube das ist abwärts kompatibilität genug wir machen jetzt mal wir machen das mal wir
gucken mal kleines bettke kleines bettke ne ich mach die mach die schrittweise ich mach
die schrittweise du weißt guck mal die downloads sind schon mega langsam weil das keiner runter
geht muss ich da eben bin basch angeben oder so geht auch 13 10 geht auch noch 1304
ok
warum sollte ich rebooten ok also leute 13 04 ist schluss
weil library zu alt aber ganz im ernst 13.10 als letztes ubuntu also
was docker system remove unused data ja das ist gut ja weg damit
achso wir gehen gleich ja und gleich ab
was macht er denn so lange der lot der löscht images postchamp
laufen keine container gerade ich habe ein paar containers am start hier
er macht dinger so und jetzt machen wir noch eine sache zum schluss weil wir jetzt wissen
dass es funktioniert wir machen das image wir löschen das image das heißt im endeffekt
der sollte bilden binary raus kopieren und dann das image wieder löschen braucht das immer so
lang nicht dass der jetzt mal ein halbes system das jetzt mal ein halbes system löscht java
java ach das die idee lull ich wollte gerade sagen aber das ist die idee wie heißt das
programm was das hier b top das nervt mich aber weil weil das sagt es braucht eine mindestgröße
ja hartop ist immer noch beste hartop ist auch auf vielen seufern standmäßig drauf also
ich finde zum einfach über sie hartop ist top ja poc die haben auch eine outtap jetzt das ist relativ
neu kann auch b top b top hat halt sie dann fancy aus wie lange läuft dann die bitteschön
dieses docker aufräumen ding was macht es denn da b top gibt es auch noch her akustik
b top c top gibt es auch noch das irgendwelche container anzeigen das dauert ich muss jetzt
gleich bettke aber gut ich kann die vm ja einfach einfrieren kann man was ausführen in der
zwischenzeit naja aber das war doch wirklich defops any percent heute ging doch ging doch
zag ich hatte auch ganz gut funktioniert das können wir übrigens rausschmeißen weil es jetzt
im in der projekt mappe da drinne ist docker ist ist durch ok was hatten die alles gelöscht
docker images aber wieder alles runterschmeißen hier oder guck mal das ganze ubuntu zeug man
warum ist das doch docker images ja ubuntu ubuntu ubuntu ist gar zu ural zeugs man alles weg hier
ane es ist rmi nicht docker images rem bg das ist zum background entfernen von bildern hat aber
nicht so gut funktioniert so docker images aber der chat wieder mit massive 5 hat commands so
jetzt mal abschließend noch mal ein bild um zu beweisen es funktioniert alles und er löscht
alles also so hier nix da bild punkt sh bäm das ist jetzt wie wenn ich mir das konnten wie wenn
ich mir das repo frisch geklont hätte so er lädt sich in cento es image runter
er machten ja am update er sagt service not available das ist schlecht was macht die uni
bei reut da wieder warum ist die not available ich hatte eine idee wir könnten für diesen speed
für diese speed test tool was was ich was ich ja so ein bisschen will dass das so unser hallo
well stream projekt wird dass man das immer wenn man was ausprobiert machen wir so drei
zeilen speed test man könnte anstatt irgendwelche speed testing seiten anzuzapfen einfach
linux isos runterladen einfach fünf verschiedene mirros nehmen und gucken wo es schnell ist groß
genug sind die dinger so er installiert lvm lvm oder l wie sagen sie lvm so installiert
developer tools alles automatisch wohlgemerkt muss nichts dafür machen also wenn man quasi
eine neue version des tools release n will würde man das einmalig ausführen und dann
kann man das binary distributen man könnte natürlich das bildskript noch erweitern das
ist das dann automatisch auf github als neue release version also man könnte das bild man
könnte einen tag machen lassen zu dem zeitpunkt auf das repo dann pushen lassen und das am ende
das fertiggebildete binary hochladen oder man macht das gar nicht lokal sondern über github
actions bei einem push von einem neuen tag das wäre auch eine möglichkeit oder man macht
ein prot branch und da bei einem neuen push oder was auch immer gibt es ja gibt es ja zig
möglichkeiten so er entpackt das dotnet framework er kopiert die anwendung rüber er führt ein bild
also muss ich doch das environment muss ich doch die environment variable drin stehen lassen das
ist eher ein bug oder so ha bild und jetzt macht er das ganze noch mal da habe ich jetzt keinen
bock drauf da das noch mal gucke ich mir das jetzt nicht an okay man braucht die n und man
braucht im projekt warum auch immer muss man nicht verstehen aber soll mir soll mir recht sein
ach wisst ihr was sein kann dass der den bildvorgang erst gar nicht starten kann das liegt gar nicht an
meinem programm sondern der kann der kann dort das dotnet CLI gar nicht starten ohne dass das
installiert ist was damit gemeint ist zum beispiel dass du jetzt seit dotnet sieben ist das auch was
wofür der container im hintergrund auch gerade bildet dass du seit dotnet sieben jetzt offiziellen support für
ahead of time compilation hast du kannst binaries machen die schnell starten und die rückwärts
kompatibel sind vorausgesetzt die wurden auf dem richtigen system gebaut bis ubuntu 13.10 haben wir
gerade ausprobiert und ich würde mal behaupten binaries die bis rückwirkend 13.10 laufen sind
99,9 aller linke systeme und es ist gar nicht so groß ich meine es sind 14 mb binaries wie groß
ist so ein standard hello world go binaries 4 mb 3 mb es ist kleiner auf jeden fall aber nicht so
viel kleiner immerhin 60 mb war schon ein bisschen heftig ja na komm ich lasse den bild noch durch
laufen leute weil ihr seid ich wollte jetzt eigentlich auf orne jetzt hängt aber im studio
da habe ich keinen bock macht dann funktioniert es dann aus wozu braucht man hier die dev tools
weil der zeug kompilieren muss gegen glibc
haben die mich gerät limited oder was ist das problem bei microsoft dass der download so kacke
ist wann gibt es das ungefähr instable november also juli august september oktober also in vier
monaten kommt dort nicht sie raus hat er eigentlich für jetzt geht es was ist das bei microsoft denn
für komisches zeug der offizielle dort net download hängt man muss man zweimal ausführen dann geht
es alter was ist das denn krepp ist sie schafft nun wie go nähe go ist noch länger go läuft
rückwirkend rückwirkend bis karnel 26 23 oder so mein ganz so war was hatten ok warte mal
ubuntu ubuntu 13.10 körner was hatten es für körner noch ok 3.8 ja also 2013 versus 2008 aber
ganz ehrlich so wirklich relevant ist das nicht also ein system von ende 2013 ist voll und ganz
auch immer er hat gebildet sagt perfekt wunderbar ich bin äußerst zufrieden
ich kenne mich nicht richtig entscheiden ich würde gerne eine programmiersprache lernen
kann mich aber wirklich entscheiden irgendwelche tips ja in welcher richtung willst du denn was
machen am besten was man wie es kommt dann ist es ganz einfach wenn du noch nicht genau weißt was
du machen willst und du am liebsten studio code verwenden willst javascript text editor browser
auf geht's und es hat noch weitere vorteile erstens ist die einstiegshürde bei javascript mit
abstand die kleinste und du kommst eh nicht es sei denn du bist cobalt mainframe entwickler du
kommst eh nicht in irgendeine art und weise an html css und javascript vorbei ich auch wenn du
backends sachen machst ein bisschen ahnung von frontend braucht man immer und sei es nur dass
du mal irgendwie ein web interface für irgendwas basteln willst nicht halb skript javascript mit
halb skript würde ich nicht anfangen als erstes im studio code und im browser deiner wahl und
bastel javascript sachen zum einstieg du brauchst ja in javascript nichts zu machen die reicht in
text editor und browser ansonsten wenn du dann weiter guckst also was du nicht machen darfst
es auf reddit gehen weil auf reddit sagen die dir ja erst einmal not installieren dann machst du
die neuesten linting addons in visual studio code und dann brauchst du natürlich auch noch webpack
was du erstmal ordentlich konfigurieren musst am besten auch gleich react dabei weil vanilla
javascript und so macht ja keiner mehr und bei react brauchst du natürlich da noch die passende
state management library wenn du die state management library hast ist natürlich die
frage ob nicht auch noch tailwind cs obendrauf packst und dann am ende muss natürlich auch noch gucken
was du für ui frameworks nimmst weil von hand css machen und javascript components macht ja
keiner mehr dann brauchst du noch irgendwelche task runner und aber dass sie schwach sind die
javascript leute übertreiben massiv mit dem ganzen zeug genau das muss trishakeable sein
das hört gar nicht mehr das hört nicht auf nehmen den browser nehmen den text editor und fangen mit
javascript an javascript gibt es auch einfach und endlich viele tutorials ne ist es nicht bei
python plus gerade wer braucht denn jupiter jupiter war gar nicht richtig notebooks am anfangen das
ist wenn die hier krasse eine physik studierst meinetwegen oder so aber das zum einstieg doch
nix heißt an sich ist eine super einstiegssprache keine frage aber die hürde sich da irgendwie was
runterzuladen dass ich finde es am besten editor browser auf fertig mehr muss man nicht machen du
hast du hast schon alles was du brauchst auf dem rechner korrekt er hat recht es ist nicht
arch beide wey ok leute 22 23 es wird mal richtig massiv zeit für betke
feil ist in jazz leider schlechter feil geht in jazz gar nicht also du kannst über formulare
was hochladen und so aber feil geht nicht in javascript also in node schon im browser nicht
aber browser wäre fatal wenn ein browser zugriff auf feilsystem hätte
was verstehst du unter system näher du kannst in javascript alles machen was du machen willst
sogar desktop anwendung dann halt mit elektron und note deswegen ich dachte ja wenn du javascript
kennst ist das auf jeden fall immer ein gewinn du kommst um frontend sachen ähnlich drum herum
egal was du machst und du kannst dann potenziell mit javascript auch alles mögliche andere machen
ich meine du kannst mit javascript vielleicht kein bios updater programmieren oder so oder
kein bootloader sogar das würde ja theoretisch noch funktionieren du kannst ja theoretisch sogar
ein javascript ein bootloader programmieren du bräuchte brauchst halt ein paar assembler befehle
um auf die richtige adresse zu springen da sind ja so hart hard codete adressen wurde ein bootloader
hinspringen müssen und so was und wenn du schaffst dort auf den javascript interpreter zu springen
kannst du den restlichen bootloader bestimmt auch in javascript programmieren aber das ist
schwachsinn also ein bootloader wirst du wahrscheinlich nicht in javascript programmieren können aber
ansonsten kannst du alles in javascript machen was du willst ob sich dann alles das dafür auch
gut eignet ja es gibt immer spezielle sprachen und frameworks die so ihre schwerpunkte haben
wenn du mobile anwendungen machst ja dann ist es heutzutage hauptsächlich mal dart und flatter
wenn du cross platform desktop anwendungen machst dann ist es ja leider meistens elektron aber es
gibt auch so was wie c++ mit qt wenn du irgendwelche webseiten backends machst dann ist asp core eine
wunderbare geschichte oder go oder bei irgendwelchen cloud sachen ist go und python übel ist
angesagt es kommt einfach drauf an ja das würde ja prinzipiell schon wieder funktionieren so lange
du ja du musst erstmal laufe in laufenden javascript interpreter haben oder ist ja geil ist ja
nur so ein halber interpreter aus den laufe javascript runtime dann kannst du da alles
mögliche mitmachen ob das schön ob das jetzt schön ist einmal dahingestellt
naja jetzt aber vorbei leute ich gehe ins bett wir sehen uns bis denn macht's gut zu
