1
00:00:00,000 --> 00:00:02,000
Das war's für heute.

2
00:00:02,000 --> 00:00:04,000
Ich hoffe, dass es euch gefallen hat.

3
00:00:04,000 --> 00:00:06,000
Wenn ihr mehr von uns sehen wollt,

4
00:00:06,000 --> 00:00:08,000
dann schreibt mir in die Kommentare,

5
00:00:08,000 --> 00:00:10,000
was ihr noch mehr von uns sehen wollt.

6
00:00:10,000 --> 00:00:12,000
Bis dahin,

7
00:00:12,000 --> 00:00:34,000
bis zum nächsten Mal.

8
00:00:42,000 --> 00:01:02,000
So, moin Leute, heute wird's ganz furchtbar schlimm.

9
00:01:02,000 --> 00:01:04,000
Das weiß ich jetzt schon.

10
00:01:04,000 --> 00:01:08,000
Ihr wisst, wie gerne ich 10++ habe.

11
00:01:08,000 --> 00:01:14,000
Es gibt keine beschissene Sprache als 10++,

12
00:01:14,000 --> 00:01:16,000
aber wir kommen nicht drum herum.

13
00:01:16,000 --> 00:01:20,000
Wir kommen nicht drum herum, Leute.

14
00:01:20,000 --> 00:01:24,000
Ich hab mir ein paar WebAssembly Tutorials durchgelesen

15
00:01:24,000 --> 00:01:28,000
und gerade wenn man Libraries verwenden will,

16
00:01:28,000 --> 00:01:30,000
die eigentlich selbst 10++ sind,

17
00:01:30,000 --> 00:01:32,000
kommst du im Prinzip nicht drum herum.

18
00:01:32,000 --> 00:01:38,000
Das wird ganz, ganz schrecklich heute.

19
00:01:38,000 --> 00:01:40,000
Ich sag's euch.

20
00:01:40,000 --> 00:01:42,000
Ganz schlimm.

21
00:01:42,000 --> 00:01:44,000
Wir probieren das Gleiche,

22
00:01:44,000 --> 00:01:46,000
was ich gestern mit Rust probieren wollte,

23
00:01:46,000 --> 00:01:48,000
was überhaupt nicht funktioniert hat.

24
00:01:48,000 --> 00:01:50,000
Spider Schwein.

25
00:01:50,000 --> 00:01:52,000
Dankeschön.

26
00:01:52,000 --> 00:01:54,000
Wir probieren,

27
00:01:54,000 --> 00:01:56,000
FFM-Pack im Browser zu verwenden,

28
00:01:56,000 --> 00:01:58,000
und zwar nicht wie die ganzen Noobs das machen.

29
00:01:58,000 --> 00:02:02,000
Also nicht so, wie es beispielsweise schon zig Github-Projekte gibt oder so,

30
00:02:02,000 --> 00:02:08,000
die im Endeffekt einfach nur so die FFM-Pack-CLI rappen oder so.

31
00:02:08,000 --> 00:02:10,000
Nee, nee, nee, das machen wir nicht.

32
00:02:10,000 --> 00:02:12,000
Wir machen richtig echtes FFM-Pack.

33
00:02:12,000 --> 00:02:14,000
AV-Package-Decoder.

34
00:02:14,000 --> 00:02:16,000
Sonst was.

35
00:02:16,000 --> 00:02:18,000
Und wir gucken wir mal, ob ich's hinbekomme.

36
00:02:18,000 --> 00:02:28,000
Ein Video quasi mit FFM-Pack im Browser zu rendern.

37
00:02:28,000 --> 00:02:32,000
Das ist natürlich äußerst ineffizient.

38
00:02:32,000 --> 00:02:34,000
Allerdings, wenn man bestimmte Codex abspielen will,

39
00:02:34,000 --> 00:02:36,000
die der Browser nicht kann,

40
00:02:36,000 --> 00:02:38,000
theoretisch die einzige Möglichkeit, so was zu machen.

41
00:02:38,000 --> 00:02:42,000
Ansonsten ist es wahnsinnig ineffizient.

42
00:02:42,000 --> 00:02:52,000
Also...

43
00:02:52,000 --> 00:02:54,000
Gucken wir mal.

44
00:02:54,000 --> 00:02:58,000
Alter, hier steigt grad einer mit nem Turban aus.

45
00:02:58,000 --> 00:03:02,000
Gegenüber aufm Parkplatz.

46
00:03:02,000 --> 00:03:04,000
Gegenüber.

47
00:03:04,000 --> 00:03:06,000
OnKS.

48
00:03:06,000 --> 00:03:08,000
Hier los.

49
00:03:08,000 --> 00:03:14,000
Na gut, wenn er meint, sonderlich stylisch sieht das nicht aus für mich.

50
00:03:14,000 --> 00:03:18,000
So, ähm...

51
00:03:18,000 --> 00:03:22,000
Also, wo sind wir stehen geblieben?

52
00:03:22,000 --> 00:03:24,000
Genau, also, wir machen eine C++-Rap-Assembly.

53
00:03:24,000 --> 00:03:26,000
Und wie gesagt, ich weiß, dass ich kotzen werde.

54
00:03:26,000 --> 00:03:28,000
Das ist mir jetzt schon klar.

55
00:03:28,000 --> 00:03:30,000
Aber vielleicht bekomme ich noch ein bisschen mehr Zeit.

56
00:03:30,000 --> 00:03:32,000
Und dann kann ich noch ein bisschen mehr Zeit.

57
00:03:32,000 --> 00:03:34,000
Und dann kann ich noch ein bisschen mehr Zeit.

58
00:03:34,000 --> 00:03:36,000
Und dann kann ich noch ein bisschen mehr Zeit.

59
00:03:36,000 --> 00:03:38,000
Das wird schon klar.

60
00:03:38,000 --> 00:03:40,000
Aber vielleicht bekommen wir das hin.

61
00:03:40,000 --> 00:03:42,000
Wenn wir es hinbekommen, wär ich äußerst überrascht.

62
00:03:42,000 --> 00:03:46,000
Weil, gestern in Rust ging ja mal gar nichts.

63
00:03:46,000 --> 00:03:50,400
Aber, FFmpeg ist halt in C++ durchaus auch deutlich einfacher zu benutzen, als von Rust aus.

64
00:03:50,400 --> 00:03:54,000
Mit irgendwelchen Zwischenrappers und hast du nicht gesehen.

65
00:03:54,000 --> 00:03:56,000
FFmpeg ist zwar nicht memory safe,

66
00:03:56,000 --> 00:03:58,000
ABER die Browser sind memory safe,

67
00:03:58,000 --> 00:04:00,000
das heißt, kann nichts passieren.

68
00:04:00,000 --> 00:04:03,520
Im schlimmsten Fall stressht das Browser tab.

69
00:04:03,520 --> 00:04:05,520
Wobei, da bin ich mir gar nicht so sicher.

70
00:04:05,520 --> 00:04:10,440
kann man es mit WebAssembly schaffen den Browser crashen zu lassen oder crasht auch nur das Browser Tab

71
00:04:11,520 --> 00:04:13,520
Da bin ich mir gar nicht so sicher

72
00:04:14,920 --> 00:04:17,160
Bestimmt gibt es schon wieder tausend Sicherheitslücken dafür

73
00:04:18,960 --> 00:04:20,960
Mal gucken also

74
00:04:21,160 --> 00:04:25,540
Als erstes muss ich mal kurz den komischen Papagei weg machen und die vor allem einschalten

75
00:04:25,760 --> 00:04:30,340
Also Fireship hat so was ähnliches gemacht wie du vor hast kann ich die links teilen? Ja schick

76
00:04:30,340 --> 00:04:37,000
Ach du das ne ne ne ne ne das kenne ich ne das der hat was anderes gemacht der hat die Noob-Variante gemacht

77
00:04:37,380 --> 00:04:43,700
Ich meine ok man kann sich darüber streiten ob es wenn man mit WebAssembly überhaupt nur die Noob-Variante ist was der macht ist

78
00:04:43,780 --> 00:04:45,780
der verwendet glaube ich

79
00:04:47,220 --> 00:04:51,620
Einen fertigen FFmpeg Rapper also er verwendet entweder Wasm

80
00:04:52,660 --> 00:04:54,660
FFmpeg Wasm oder FFmpeg JS

81
00:04:54,660 --> 00:05:02,780
Und im Prinzip ist das quasi ein Rapper für die FFmpeg Kommandozeile. Wir machen richtig FFmpeg

82
00:05:04,180 --> 00:05:10,820
FFmpeg Decoder AV Package reinschieben AV Package auslesen also das was man low level mit FFmpeg macht

83
00:05:11,260 --> 00:05:13,260
Wir rappen nicht die Kommandozeile

84
00:05:14,580 --> 00:05:19,820
Stream war gemuted? Ne, na deiner meiner nicht also hier kommt das Sound raus

85
00:05:19,820 --> 00:05:26,820
Wir machen den Realshit ja Leute das was wir heute im Stream machen das gibt es nirgendswo im Internet zu sehen falls es klappt

86
00:05:26,820 --> 00:05:30,820
Ich hab ich hab wirklich rauf und runter gesucht es gibt da auch keine guten Beispiele für

87
00:05:30,820 --> 00:05:36,820
Ich habe einen Blogpost gefunden den hat gestern schon jemand im Chat gepostet wie der Urlaub ne warum?

88
00:05:37,820 --> 00:05:40,820
Kommst du heut nicht Samstag? Heute hat glaube ich fast jeder frei

89
00:05:41,820 --> 00:05:46,820
Das gibt es sonst nirgendswo im Internet also hier Exclusive Content soll den ganzen Krempel bis man wieder

90
00:05:46,820 --> 00:05:53,820
Wieder wegmachen. Ah ne Moment die Konsole lassen wir auf die Konsole ist gut die Qual da muss ich gleich wieder dran denken ich muss den Chat unten

91
00:05:55,820 --> 00:05:59,820
Ja das machen wir dann ich muss ich muss den Chat unten ja wieder einblenden

92
00:06:00,820 --> 00:06:02,820
Ok diesen ganzen Krempel machen wir mal zu

93
00:06:02,820 --> 00:06:06,820
repos mk dir monka monka

94
00:06:07,820 --> 00:06:08,820
C++

95
00:06:08,820 --> 00:06:12,820
Bester Projektname soll man schnell schnell noch ein Update machen

96
00:06:12,820 --> 00:06:15,820
Wer weiß vielleicht brauchen wir das ja

97
00:06:16,820 --> 00:06:24,820
Habt ihr das eigentlich mitbekommen mit der Internet Internet Grundversorgung was jetzt als Internet Grundversorgung gilt

98
00:06:31,820 --> 00:06:32,820
Guck mal

99
00:06:32,820 --> 00:06:42,820
1,7 Mbit Upload 2022 Poggers Upload richtig krasser Bandbreite richtig Breitband Internet Anschluss

100
00:06:43,820 --> 00:06:52,820
1,7 Mbit Upload 2022 Poggers Upload richtig krasser Bandbreite richtig Breitband Internet Anschluss

101
00:06:52,820 --> 00:07:01,820
1,7 Mbit Upload 2022 Poggers Upload richtig krasser Bandbreite richtig Breitband Internet Anschluss

102
00:07:03,820 --> 00:07:06,820
Beim Download bin ich mir übrigens gar nicht sicher was der Download

103
00:07:07,820 --> 00:07:08,820
Ist das überhaupt drinnen

104
00:07:10,820 --> 00:07:11,820
Download

105
00:07:11,820 --> 00:07:20,820
Den Mbit genau 10 Mbit 10 Mbit und 1,7 Mbit Upload ich mein what the fuck

106
00:07:22,820 --> 00:07:25,820
Damit kannst du noch nicht mal Full HD Streams gucken

107
00:07:27,820 --> 00:07:34,820
Das ist hier so ist das das ist das das ist ein äußerst passendes Gift dafür genau das ist das

108
00:07:34,820 --> 00:07:41,820
Mit 4K Video Streaming musst du da erst gar nicht anfangen

109
00:07:44,820 --> 00:07:52,820
4K lull da kannst du froh sein wenn es für 720p reicht und das wird auch knapp

110
00:07:52,820 --> 00:08:02,820
10 Mbit ist wirklich nicht viel 10 Mbit war der absolute Wahnsinn als der ganze Kram neu war

111
00:08:05,820 --> 00:08:09,820
Ich meine überlegt ich überleg grad was war mein erster DSL Anschluss

112
00:08:12,820 --> 00:08:15,820
Das war ein Mbit oder? Nee

113
00:08:15,820 --> 00:08:24,820
Was war was war das 768 768K war das oder das aller allererste DSL

114
00:08:30,820 --> 00:08:31,820
Oder

115
00:08:34,820 --> 00:08:38,820
Also quasi sogar noch unter dem Mbit naja gut

116
00:08:38,820 --> 00:08:43,820
Es kam einem wahnsinnig schnell vor damals

117
00:08:47,820 --> 00:08:53,820
Du kannst du kannst alles knicken im Endeffekt mit 10 mit 10 Mbit Download und 1,7 Upload

118
00:08:53,820 --> 00:08:59,820
Wisst ihr die 1,7 Upload haben sie auch bloß gemacht dass die TCP Bestätigungspakete überhaupt rausgehen

119
00:08:59,820 --> 00:09:01,820
Ich mach mal kurz Update überall

120
00:09:07,820 --> 00:09:14,820
Bald kommt eine Steuer für alle die ein Auto fahren geht mir mal nicht auf den Sack Alter

121
00:09:17,820 --> 00:09:25,820
Leute wisst ihr was die letzten 10 Jahre haben wir die 1,7 Upload gemacht

122
00:09:25,820 --> 00:09:32,820
Leute wisst ihr was die letzten 10 Jahre ich bin mir nicht sicher ob es an mir liegt oder an der Welt um mich drum herum

123
00:09:32,820 --> 00:09:38,820
Ich glaube es liegt an mir liegt weniger ich glaube die Welt um mich drum herum war im Prinzip schon genauso

124
00:09:38,820 --> 00:09:45,820
Aber was die was die letzten sagen wir letzten 10 15 Jahre passiert ist also vor 15 Jahren hatte ich so

125
00:09:45,820 --> 00:09:55,820
Ja wie nennt man das so standardmäßig Bauchgefühl mäßig oder meine standards herangehensweise war eigentlich die Welt will mich nicht verarschen

126
00:09:55,820 --> 00:10:01,820
Und will mir nicht auf den Sack gehen und die Leute sind eigentlich gar nicht so nervig wie wie sie vielleicht wirken und

127
00:10:04,820 --> 00:10:12,820
Die Welt will nichts böses von mir so das habe ich doch vor 15 Jahren gedacht mittlerweile mittlerweile denke ich die ganze Welt will mich nur noch abfacken

128
00:10:12,820 --> 00:10:22,820
Egal was ist heute auch heute bin ich bin ich wandern gefahren und auf dem Rückweg habe ich an der Schranke gestanden

129
00:10:22,820 --> 00:10:30,820
Schranke geht auf fährt los waren ganz schön viele Autos bestimmt 40 40 Stück oder so es geht dann langsam über die Straße drüber

130
00:10:30,820 --> 00:10:45,820
Und auf einmal hält ein Typ an direkt hinter der Schranke ich stehe mit dem Auto auf der auf der auf den Kleisen und er geht hinten zum Kofferraum macht den Kofferraum auf holt ein Paket und geht in die Post

131
00:10:50,820 --> 00:10:53,820
Ich komme natürlich nicht vorbei weil von der anderen Seite auch was kommt

132
00:10:53,820 --> 00:11:03,820
So ich hatte zum Glück das Fenster auf und ich habe so ich habe wohl so rum gebrüllt oder so dass er ganz absichtlich so

133
00:11:03,820 --> 00:11:09,820
Kennt ihr das wenn die Leute absichtlich weggucken so nach dem Motto ich höre dich gar nicht ich höre dich gar nicht

134
00:11:09,820 --> 00:11:15,820
Ich wusste gar nicht ich habe nicht in dem Moment dran gedacht ich das Fenster auf hab aber es war eigentlich richtig so

135
00:11:15,820 --> 00:11:24,820
Also ich habe mittlerweile das Gefühl alles will mich abfacken und mir ist auch immer wieder mir wird jeden Tag bewusst wie unfähig irgendwie die ich bestimmt auch

136
00:11:24,820 --> 00:11:31,820
Ich denke die andere Leute denken das auch aber man ist ja da halt ein bisschen wie soll ich sagen ein bisschen so ich bezogen bei den Sachen

137
00:11:31,820 --> 00:11:53,820
Weil man kann den anderen Leuten nicht ins Kopf in den Kopf gucken ja und mir fällt immer wieder auf jeden Tag wie unfähig alles ist die Leute die eigentlich nur dafür da sind eine Sache zu machen können diese eine Sache nicht ja guckt euch die Bahn an es ist unglaublich mittlerweile habe ich echt so die Standard wie gesagt das hat sich die letzten 15 Jahre gemacht und es ist wirklich alles so

138
00:11:53,820 --> 00:12:08,820
Ja guckt euch die Bahn an es ist unglaublich mittlerweile habe ich echt so die Standard wie gesagt das hat sich die letzten 15 Jahre mega gewandelt bei mir früher habe ich immer gedacht ach das meinen die bestimmt nicht böse oder ach so schlimm wie alle sagen ist das nicht

139
00:12:08,820 --> 00:12:19,820
Und heute denke ich mir die Welt ist scheiße und ich glaube nicht dass es an mir liegt also doch ich glaube dass es an mir liegt ich glaube die Welt war vor 15 Jahren auch schon scheiße

140
00:12:19,820 --> 00:12:33,820
Aber die Wahrheit liegt wahrscheinlich dazwischen die Welt ist wahrscheinlich genauso wenig also nicht so viel scheiße wie ich es gerade denke und bestimmt auch nicht so alles rosa wie ich es vor 15 Jahren gedacht habe

141
00:12:33,820 --> 00:12:45,820
Also also das ist so irgendwie so wahrscheinlich hält sich irgendwie in Grenzen und umso mehr beschissenes Zeug du mitkriegst umso schlechter ist so deine Gesamts Wahrnehmung

142
00:12:45,820 --> 00:12:59,820
Die Welt ist gut ja das ist nice wenn du da bist so also weiter wo sind wir denn jetzt was wollte ich jetzt machen genau wir wollten ja so viel stream an instant sidetracked

143
00:12:59,820 --> 00:13:15,820
So also ich habe vielleicht das hier sowas nervt mich auch das sind so Sachen und auch Gegängele auf dem Computer mit irgendwelchen Programmen die wir laufen irgendwas unterschieben wollen

144
00:13:15,820 --> 00:13:34,820
Letztens unter Ubuntu habe ich tatsächlich ich habe hierfür zum Arbeiten eine Ubuntu VM und da habe ich dann ein Update gemacht weil es mir diese Software Manager vorgeschlagen hat und auf einmal sagt es mir sie haben jetzt noch 13 Stunden Zeit oder sowas ihr Firefox neu zu starten

145
00:13:34,820 --> 00:13:47,820
Da habe ich gesagt was wollt ihr mir ernsthaft vorschreiben dass ich mein Firefox gefälligst neu zu starten habe was ist das was ist das ist ja Windows Taktik Alter

146
00:13:47,820 --> 00:14:01,820
Ja das ist glaube ich auch wahrscheinlich ja das ist im Prinzip das was ich auch schon eine ganze Weile mache ich wie gesagt ich bin ja auch in Twitter wohne ich auf Andorra ich gucke mir kaum was an ist natürlich auch blöd dass du dass du wenig drum herum mitbekommst

147
00:14:01,820 --> 00:14:14,820
Aber auf der anderen Seite eine Sache habe ich halt auch die letzten 15 Jahre über irgendwann mal realisiert ja früher habe ich mir auch gedacht so nachdem und ja da kann man doch hier irgendwie könnte man da jemand mit unterstützen und warum können wir hier eigentlich nicht das machen

148
00:14:14,820 --> 00:14:39,820
Und jetzt habe ich den faden verloren weil ich habe ich habe den ich habe die Chatnachricht gelesen habe ich den faden verloren keine Ahnung boomer hier es geht nicht weiter soll ich denn sagen

149
00:14:39,820 --> 00:14:54,820
Ja ist bei mir aber auch so wenn ich wenn ich allein wenn ich Twitter Twitter Zeug Twitter Zeug lese und so weiß ich nicht was ich sagen wollte

150
00:14:54,820 --> 00:15:15,820
So was ähnliches wollte ich sagen aber nicht dass ja egal

151
00:15:15,820 --> 00:15:37,820
Ach ja jetzt weiß ich wieder was ich sagen wollte man muss aber darf einfach mal nicht nicht nicht drüber nachdenken dann dann fällt es einem wieder ein also genau was ich was ich auch die letzten 15 Jahre über gelernt habe ist dass man sich nicht darauf verlassen kann dass irgendjemand anderes außer vielleicht

152
00:15:37,820 --> 00:15:54,820
Also jetzt die Eltern und so meine ich nicht aber dass niemand was für dich in deinem Interesse macht das sagen zwar alle aber es macht keiner was also kannst dich nicht darauf verlassen dass irgendjemand was in deinem Interesse macht also offensichtlich

153
00:15:54,820 --> 00:16:10,820
Ein Beispiel ist keine Ahnung du arbeitest irgendwie Mindestlohn und oder bis Krankenpfleger oder so und du wählst dann zu irgendeiner Wahl die Partei die sagt sie schauen dass sie ja das ist ernst gemeint

154
00:16:10,820 --> 00:16:25,820
Du wählst dann die Partei die beispielsweise sagt oder den Bürgermeister oder was auch immer sehr egal der sagt wir heben das an wenn ich wenn ich dann quasi was zu sagen habe dann heben wir das an und da gewinnen die vielleicht sogar auch aber das machen die nicht

155
00:16:25,820 --> 00:16:42,820
Ja das könnte man Problem ist nur dass das wahrscheinlich nicht sonderlich ineffizient ist das sind alle in dem Fall das sind alle die AfD sind bloß ganz ganz besonders große

156
00:16:42,820 --> 00:16:56,820
Ab ablenken also sie fahren immer irgendwelche Ablenkungsmanöver ich habe das ja im Wahlkampf auch ein bisschen Not getrunken hat man sich da halt mal ein bisschen mit beschäftigt in legit jeder Talkrunde wo jemand von der AfD drinne war

157
00:16:56,820 --> 00:17:15,820
haben die als Argument zum größten Teil ich sage nicht bei allem aber zum größten Teil haben die als Argument gebracht immer Ja ihr macht das alles schlecht und wenn die dann irgendjemand gefragt hat Ja wie würden sie das dann machen kam als Antwort so nach dem Motto Ja viel besser aber die anderen machen das schlecht

158
00:17:15,820 --> 00:17:34,820
also sie haben im Prinzip immer nur gesagt sie haben nie erklärt wie sie es eigentlich besser machen wollen das hat mich dann auch ein bisschen ein bisschen sagen verwundert weil anscheinend haben ja viele Leute den Eindruck dass sie voll krasses Zeug machen würden

159
00:17:34,820 --> 00:18:03,820
ich weiß nicht haben sie immer raus geredet und ich bin der Meinung es soll jeder wählen was er will meinetwegen auch AfD darf jeder persönlich entscheiden was er wählt dafür würden mich wahrscheinlich jetzt auf Twitter wieder die Leute steinigen allein schon das ich gesagt habe aber ich meine solange das eine zugelassene Partei ist in Deutschland warum darf jeder wählen das heißt nicht dass ich die wählen muss aber es ist nicht so dass ich sage ich bann euch wenn jemand sagt ich habe AfD gewählt ich bin der Meinung es sollte jeder für sich selbst entscheiden was er da macht

160
00:18:03,820 --> 00:18:15,820
allerdings muss er dann natürlich auch mit der Entscheidung leben also das ist das wird überall nur so viel Bullshit gelabert und

161
00:18:15,820 --> 00:18:44,820
das ist mir wurscht ganz ehrlich das ist das ist eure komplett persönliche Entscheidung solange mich nicht versucht zu bekehren zu irgendwas oder ihr irgendwie rumnervt mit sonst was kann jeder wählen was er will ich meine damit du was wählen kannst muss das offiziell ja anerkannt sein

162
00:18:44,820 --> 00:19:01,820
und dann ist das auch ok ob man sich jetzt natürlich mit dem Programm und den Sachen identifizieren kann ist was anderes also wie gesagt mich hat es in der Wahl im Wahlkampf überhaupt nicht überzeugt dass man zu 80% immer die Ausrede gebracht hat ja die anderen machen das so viel schlechter

163
00:19:01,820 --> 00:19:30,820
so und nachdem ich die letzten Jahre über schon beobachtet habe dass es oder die letzten 15 Jahre über schon beobachtet habe dass eigentlich keiner wirklich irgendwas macht im Interesse also im eigenen Interesse also in dem Fall in meinem Interesse denke ich halt da kann man sich einfach nicht darauf verlassen du kannst dich nicht darauf verlassen egal was du wählst egal wo du hingehst du kannst dich nicht darauf verlassen dass die Leute ihren Job erledigen

164
00:19:30,820 --> 00:19:46,820
das ist ganz ätzend du setzt dich in den Zug der fährt nicht richtig du gehst zu irgendeinem Amt willst was holen die hat keine Ahnung wie es funktioniert dann musst du denen das noch irgendwie erklären

165
00:19:46,820 --> 00:20:03,820
da gibt es da gibt es sich da gibt es sich Beispiel ja du gehst zum Arzt und du denkst dir nur ok jetzt war ich da zwei Minuten drin das hat absolut gar nichts gebracht also

166
00:20:03,820 --> 00:20:29,820
es ist es ist so viel un nicht Unfähigkeit aber keiner macht wirklich was ja keiner macht wirklich was in der was man so erhofft ja und irgendwann hat man dann halt leider so die Einstellung wie ich ich finde es ja auch nicht gut dass das Einzige ist was man machen kann ist um sich selbst kümmern

167
00:20:29,820 --> 00:20:39,820
weil du kannst dich einfach nicht darauf verlassen dass irgendjemand anderes was in deinem Interesse macht ja Vater Mutter und so mal außen vor aber gut mein Vater pumpt mich ab und zu an das war es dann im Prinzip aber

168
00:20:39,820 --> 00:21:08,820
kann sich einfach nicht darauf verlassen du kannst eigentlich nur noch gucken dass du selbst möglichst schaust dass du wie sagt man so schön deine Schäfchen im trockenen hast und für dich das so vorteilhaft wie möglich gestaltet das ist halt eigentlich kacke ja

169
00:21:08,820 --> 00:21:22,820
das ist ja noch das das Argument verstehe ich nicht das haben das wird auch immer oft gebracht ja zum Beispiel zum Beispiel ich kann mich auch dran erinnern als die Grünen und ich muss gestehen ich habe bin mir nicht ganz ich glaube ich habe die sogar damals gewählt also

170
00:21:22,820 --> 00:21:51,820
ne habe ich nicht glaube ich nicht wobei keiner kann durchaus sein ja ich habe das ja mal nicht alles so düster gesehen wie heute so ich habe in hessen damals ich sage jetzt einfach mal ich bin mir nicht mehr sicher die Grünen gewählt als sie gesagt haben sie sind unter anderem für das waren drei Dinge ich kriege jetzt bloß noch den Flughafenausbau zusammen genau Nachtflugverbot für den Flughafen kein Flughafenausbau

171
00:21:51,820 --> 00:22:02,820
ausbau und noch irgendwas das kriege ich das kriege ich nichts kriege ich nicht zusammen mittlerweile finde ich auch bescheuert ich finde es wichtig dass der Flughafen ausgebaut das was anderes also

172
00:22:02,820 --> 00:22:29,820
wisst ihr was davon passiert ist nix gar nichts und die waren in der Regierung gar nichts ist davon passiert und die Argument war jetzt ja hätten wir aber die hätten wir aber alleine regiert dann hätten wir das alles gemacht also ich finde das ein bisschen komisches Argument so nach dem Motto ja wir waren jetzt vier Jahre mit in der Regierung wir haben nichts gemacht von dem was wir gesagt haben aber wenn wir die einzigen gewesen dann hätten wir alles gemacht ja

173
00:22:29,820 --> 00:22:59,820
seriously ganz bestimmt also sprich man hat Müll gewählt man muss noch mehr Müll wählen dass es dann besser wird oder wie ich ich verstehe es ich verstehe es nicht mehr das macht das nimmt sich allerdings bei den anderen auch nichts also ich gebe mich da nicht der Illusion hin dass es mit irgendeiner anderen Butterwetter gelaufen wäre deswegen mir geht es mittlerweile echt alles am Arsch vorbei ich gucke dass bei mir gut läuft ich gucke dass ich genug Kohle habe ich gucke das

174
00:22:59,820 --> 00:23:15,820
ich möglichst viel das machen kann woran ich Spaß habe und scheiß mittlerweile wirklich auf alles andere ist mir einfach egal so kacke sichs anhört naja

175
00:23:15,820 --> 00:23:45,820
das ist halt richtig Pains Jam mittlerweile alles ja und dann hast du überall so Entscheidungen wo du denkst hat auch keiner drei Meter gerade ausgedacht beispielsweise wo diskutiert wurde bitte hier jetzt Leute wir wollen jetzt verbieten dass ihr mit Autos in die Innenstädte fahren könnt das ist so unüberlegt das Schnellschuss Dinger ich ich frage mich auch eh wie wir es machen wollen mit wir wollen auf der einen Seite unabhängig und unabhängiger werden

176
00:23:45,820 --> 00:24:14,820
von von russischen Lieferungen wir wollen alle Atomkraftwerke abschalten wir wollen keine neuen Verbrenner Autos mehr haben wir wollen allerdings auch jetzt nicht wirklich Forschung und Innovation fördern ja was wollen wir denn eigentlich machen also wie soll das denn wie soll das denn funktionieren ja wir können ja schlecht alles nicht machen irgendwas müssen wir ja machen also keine Ahnung wie das wie das funktionieren soll

177
00:24:15,820 --> 00:24:28,820
naja ich mein Klima und Meeresspiegel und Wetter Phänomen ist das ziemlich egal ob wir was machen oder nicht

178
00:24:28,820 --> 00:24:54,820
das ist ja das blöde da dran du kannst ja nicht einfach sagen oh guck mal da Überschwemmung ob wir verbieten jetzt aber Überschwemmung dann gibt es keine Überschwemmung mehr das funktioniert halt nicht du musst die Rahmenbedingungen drumherum verändern dass das nicht passiert und das ist halt eine Sache von nicht von heute auf morgen

179
00:24:54,820 --> 00:25:00,820
kann sich einfach Überschwemmung verbieten das ist keine Überschwemmung das funktioniert halt nicht

180
00:25:00,820 --> 00:25:26,820
oh man ich hab keine Ahnung wie das werden soll deswegen ich hab vor 15 Jahren oder so hab ich mir immer ausgemalt mann wie geil muss es sein 2022 oder wie geil muss es sein 2030 was wir da für unglaublich geile Games haben was wir da für unglaublich geile Technik haben was wir da für unglaublich geile Sachen in der Zwischenzeit erfunden haben müssen

181
00:25:26,820 --> 00:25:47,820
und die Welt muss viel besser sein und ähm die Leute bringen sich nicht mehr gegenseitig um und die Leute ziehen zusammen an einem Strang ähm wir haben so viele coole neue Sachen so viele innovative Sachen wo wir jetzt überhaupt nicht davon geträumt haben und jetzt 20 Jahre später ist eigentlich nicht viel unterschied

182
00:25:47,820 --> 00:26:16,820
WTF doch wir haben Smartphones das ist richtig ja ich weiß ich weiß ey ohne Scheiß ich war ultra optimistisch so vor 15 20 Jahren ja ich hab gemann was wir 2030 alles für mega geile Sachen haben und jetzt haben wir Diablo auf dem Handy ja das ist die Scheiße wisst ihr zu der Zeit

183
00:26:16,820 --> 00:26:40,820
wo richtig viele geile Games rausgekommen sind das war ja innerhalb von ein paar Jahren ist alles rausgekommen Quake Half Life Starcraft Warcraft also später dann irgendwie noch gute MMOs sagen wir so diese 10 Jahre die 10 Jahre sagen wir von 1996 bis 2000 bis 2006 es sind so ultra geile Sachen rausgekommen

184
00:26:40,820 --> 00:26:59,820
und es war halt genau das Alter wo ich halt auch die Zeit hatte und den Bock hatte 24 Steam in Games zu verbringen und ich hab mir ausgemalt mann wenn das jetzt schon so geil ist mit unserer doch noch relativ beschränkten Technik mann das war einem damals ja auch klar dass es noch schneller werden wird ja

185
00:26:59,820 --> 00:27:16,820
und da hab ich gesagt mann ist das geil was wir da alles haben werden ich hab mir ausgemalt wie richtig Poggers 2020 MMOs sein müssen und in den letzten 10 Jahren gab es zwei gescheite MMOs ja und die besten MMOs wurden damals das hätt ich mir im Traum nicht ausgedacht damals

186
00:27:16,820 --> 00:27:32,820
und heute haben wir Diablo auf dem Handy ich hab damals Diablo 2 gespielt hab mir überlegt alter wie krass groß und unglaublich geil könnte man das machen mit dem Internet standardmäßig Online Integration mit Technik in 20 Jahren das muss das geilste

187
00:27:32,820 --> 00:27:54,820
das ist dann quasi Diablo MMO hab ich mir damals vorgestellt wir haben ein Diablo MMO mit irgendwie ne Riesenwelt quasi Diablo 2 bloß noch viel geiler und im Endeffekt was haben wir Diablo auf dem Handy mit Microtransactions und zwischenzeitlich dann noch ab und zu irgendwelche NFT Scam Games ja

188
00:27:54,820 --> 00:28:10,820
also das hat sich leider nicht bewahrheitet was ich mir da so ausgemalt hab ich glaube ja dass das irgendeine Entwicklung ist die jeder durchläuft mal der Dalai Lama vielleicht außen vor wobei ich mir bei dem auch nicht sicher bin ob das nicht teilweise auch ein bisschen show ist aber der ist auch erleuchtet ja

189
00:28:10,820 --> 00:28:27,820
ich glaube das ist eine Entwicklung die durchläuft jeder deswegen hast du irgendwann 80 jährige Opas die alles hassen und alles scheiße finden wahrscheinlich bin ich auf dem Weg gerade

190
00:28:27,820 --> 00:28:41,820
es kommt ja auch nicht von nichts umso mehr scheiß Erfahrungen man macht umso schlechter schätzt man wahrscheinlich alles insgesamt ein

191
00:28:41,820 --> 00:29:02,820
und ich krieg immer anfälle wenn ich merke wie dumm die meist leute sind ok wahrscheinlich bin ich der dumme aber wenn ich mir das schon anhöre was da teilweise gelabert wird ja wahrscheinlich wahrscheinlich midlife ist ja mehr oder weniger jetzt ja

192
00:29:02,820 --> 00:29:28,820
das ist alles so oft auf dem niveau wie die von dem ein Mädchen aus dem aus dem arbeitsamt bewerbungskurs ich muss nicht lesen und schreiben können weil man kann das ja ist echt so

193
00:29:28,820 --> 00:29:45,820
ich meine die leute du musst dir nur youtube comments durchlesen du musst dir nur youtube kommentare durchlesen dann sieht man wie unglaublich zurückgeblieben viele leute sind es ist echt der wahnsinn ich hab letztens ein video geguckt bei trymax wo er richtig krass reingecashed hat in diablo immortal

194
00:29:45,820 --> 00:30:13,820
und die comments in dem video alter die leute sind so keine ahnung so minder bemittelt alter das ist der wahnsinn wenn ich die comments da durchskolle da krieg ich augenkrebs von wie sie das verteidigen auch noch das game ja gut was ja wahrscheinlich ist echt so aber

195
00:30:13,820 --> 00:30:22,820
ich war wahrscheinlich ja gut ich war als sag mal ehrlich ich war als 10 jähriger oder 8 jähriger auch so warte mal das 1904 wann kam mario 1964 raus

196
00:30:22,820 --> 00:30:41,820
96 96 da war ich 12 richtig 84 geboren war statt 12 ja ich hab leute ich war damals genauso ich war damals ganz genauso ich hab mal nach meinem echten namen den ihr nicht wisst deswegen könnt ihr auch danach nicht suchen

197
00:30:41,820 --> 00:31:10,820
hab ich letztens in einer news group suche gesucht da hab ich news news news post news group post gefunden von mir damals in irgendeinem mario 64 nicht subreddit wie ist das denn user group ja in der user group leute ich war so ein richtig kleiner wie heute heute würde ich sagen so ein richtig kleiner call of duty richtig nerviges call of duty kind damals nur das ist keine das ist keine call of duty gar noch kein call of duty kind

198
00:31:10,820 --> 00:31:39,820
gar noch kein call of duty gab ja ich hab ich hab in den mario 64 subreddits so richtig auf dicke hose gemacht so irgendwie irgendjemand hat bei mario 64 subreddit ne user group hat irgendjemand geschrieben ich hab probleme ich kann mich noch gar nicht erinnern hat irgendjemand geschrieben ich hab irgendwie probleme bei dem dem und dem stern und da hab ich sinngemäß sowas geschrieben cringe wenn ich 120 sterne hat ich hab nicht wirklich ich habs anders geschrieben

199
00:31:39,820 --> 00:32:08,820
ich habs anders geschrieben so würde man das heute sagen ja ich war so ein richtiger kacke spast alter ich hab dem typ dann irgendwie geantwortet lol wer hat dann schon bei 80 sterne und irgendwie probleme 120 wer das jetzt noch nicht hat ist einfach nur schlecht oder irgendwie sowas so ein richtiger kacke spast alter ja also richtig dummes zeugs hab ich in diese news groups gepostet absolut dummes zeug also ich war genauso dummes kind damals

200
00:32:08,820 --> 00:32:12,820
kind damals

201
00:32:12,820 --> 00:32:27,820
und das schlimme ist ja die generation vor mir muss den kram nicht lesen den sie damals verzappt haben mit zehn ich bin die erste generation die jetzt noch lesen kann was sie teilweise mit zehn jahren mit zwölf jahren im internet geschrieben haben

202
00:32:27,820 --> 00:32:33,820
unglaublich dumm alter unglaublich dumm

203
00:32:33,820 --> 00:32:46,820
ich dachte aber eine sache eine sache habe ich damals wirklich für wahr gehalten und zwar dass man mit leuten reden kann und leute quasi überzeugen wenn man stichhaltige sinnvolle

204
00:32:46,820 --> 00:33:03,820
aussagen trifft ja also zum beispiel ja was weiß ich wenn sich wenn sich meine mutter damals drüber aufgeregt hat dass der chef im krankenhaus irgendwie dummer sack ist ja damals im krankenhaus gearbeitet und da hat da hat die da hat die das dann erzählt ja aber warum ist das denn so oder hat sie dann erklärt

205
00:33:03,820 --> 00:33:32,820
keine ahnung man muss jetzt da was aufschreiben obwohl da eigentlich keiner guckt man muss dann die besser da und da hat man ich ich hab damals wirklich gedacht ich ohne scheiß ich hab damals wirklich noch gedacht ja das muss man dem halt sagen und wenn man dem erklärt warum das an der anderen stelle besser ist dann wird er das einsehen und das andere auch nicht mehr wollen ich hatte keine ahnung von der echten welt damals weil ganz im ernst versucht mal auf twitter guckt in die trends auf twitter

206
00:33:32,820 --> 00:33:46,820
sucht euch irgendeinen kontroversen trend raus und versucht mit sinnvollen argumenten jemand zu überzeugen das könnt ihr einfach vergessen das könnt ihr komplett klingen und das ist an vielen stellen so

207
00:33:46,820 --> 00:34:13,820
richtig richtig aber ich habe damals wirklich gedacht ich habe damals wirklich gedacht leute sind wie nennt man das rational leute sind logisch dachte ich damals ja also ich dachte damals wenn man irgendwie logisch etwas erklärt nachvollziehbar und es quasi auf der hand liegt dass es

208
00:34:13,820 --> 00:34:42,820
dass es so ist und dass dann die leute sagen ah ok ja ok das passt es ergibt sinn ja dann dann ist das so ist aber nicht so umso es ist es ist eher so in der jetzt in der echten welt ja das leider bei den meisten leuten umso stichhaltiger du quasi belegst dass etwas so ist oder nicht so ist also umso stichhaltiger du etwas begründest

209
00:34:42,820 --> 00:35:02,820
umso aggressiver wird der andere weil er sich dann also weil er sich quasi in seinem glaube nicht umstimmen lassen will und sauer auf dich wird weil ihm nichts einfällt was er dagegen sagen kann weil umso besser du das begründest umso weniger

210
00:35:02,820 --> 00:35:27,820
raum hat er quasi um erstmal mit sich selbst im hirn klar zu kommen dass es ja blödsinn ist und das irgendwie zu verteidigen und irgendwann fällt den leuten nichts mehr ein außer wirklich sauer zu werden das das habe ich damals nicht gedacht dass das so ist aber leider ist das so so aber jetzt habe ich 35 min geschwätzt jetzt können wir anfangen

211
00:35:27,820 --> 00:35:57,820
aporette aporette ist auch so ein spezieller kandidat ganz ehrlich wisst ihr was ich vermute ich habe keine ahnung ich kenne ihn nicht ich habe eine pn jemals mit ihm gewechselt das war es er kennt mich nicht ich kenne ihn nicht aber rein von dem was ich in dem video gesehen habe als er gesagt hat der insie modus ist aktiviert ganz im ernst ich glaube nicht dass er steuerbetrug begeht ich glaube der ist wirklich pleite und möchte das

212
00:35:57,820 --> 00:36:21,820
einfach nur nicht öffentlich eingestehen weil das an seinem ego kratzt im endeffekt ja also er ist pleite und er ist insolvent und er muss den insie modus machen und es ist natürlich blöd wenn man sich eingestehen muss und öffentlich ins internet geht und sagt jungs ich habe

213
00:36:21,820 --> 00:36:40,820
scheiße gebaut ich bin pleite dann ist besser man sagt ich habe den gleichen ich habe den insie modus aktiviert und mache jetzt dickes büsnens im ausland das ist einfach nur um dass ich das ganze schön zu gehen da ist wahrscheinlich einfach pleite ist zumindest meine überlege nachdem ich das gesehen habe wie gesagt wir kennen uns nicht

214
00:36:51,820 --> 00:37:20,820
ja ist ja ewig her noch zu call of duty zeiten das ist ja der witz ich kenne die meisten leute noch von von aus der damaligen zeit flüchtig flüchtig ja

215
00:37:20,820 --> 00:37:34,820
ihr kennt mich ich habe damals schon nicht große social dinger gemacht also ich hatte mit keinem großartig was zu tun aber zumindest flüchtig kenne ich die meisten noch kennt man ihn oh nee

216
00:37:34,820 --> 00:38:01,820
ja z plus plus ok ok wo sind wir stehen geblieben also ich habe diesen diesen artikel hier gefunden den hat auch jemand gestern im chat gepostet habe ich gesehen und das probieren wir jetzt mal aus ich habe es lange genug geschwätzt 37 minuten jetzt bin ich in passender laune zum progas stelsen

217
00:38:01,820 --> 00:38:30,820
leute ich muss mal kurz meine klimaanlage anmachen war ich denn hier mein was 24 grad monke ist zu warm was ist denn jetzt jetzt an ok klimaanlage ist an alles gut was für eine klimaanlage ich habe eine mitsubishi heavy frag mich nicht

218
00:38:30,820 --> 00:38:49,820
frag mich nicht keine ahnung findest du im stream archiv irgendwo wir haben nämlich mal ein arduino für das ding programmiert ich will nicht schwitzen so aber jetzt von diesen unangenehmen themen

219
00:38:49,820 --> 00:39:18,820
so ich muss kurz was am handy gucken also jetzt von den ganzen unangenehmen themen mal zu progas zeug also diesen artikel habe ich gefunden und da kriegt man erklärt wie man ffm pack im browser macht und ja bevor irgendjemand wieder auf die idee kennt ich kenne

220
00:39:18,820 --> 00:39:35,820
ffm pack wasm und ich kenne ffm pack js allerdings der unterschied zwischen dem was ich machen muss und das c++ ist ein wahnsinnig unangenehmes thema das stimmt von unangenehm zu c++ das ist ein downgrade

221
00:39:35,820 --> 00:40:03,820
arduino idee verwende ich nicht arduino idee ist auch pains champ was du verwenden musst ist moment habe ich gar nicht installiert doch du musst platform iow verwenden viel besser platform iow ist deutlich mehr guck mal der cool champ da ist er doch

222
00:40:03,820 --> 00:40:30,820
wobei war der cool champ das für die klimaanlage ach nee das war das für den das der cool champ war für den kühlschrank secrets mache ich jetzt nicht auf ja ja das das das willst du verwenden du willst den du willst platform iow verwenden

223
00:40:30,820 --> 00:40:49,820
arduino idee des pains champs also diese projekte hier kenne ich allerdings ist sowohl ffm pack wasm als auch ffm pack js nicht das was ich haben will ich will wirklich low level auf ffm pack sachen zugreifen so wir machen jetzt mal wir machen jetzt mal dieses tutorial durch

224
00:40:49,820 --> 00:41:15,820
und dann probieren wir das mal aus also das ist ein tutorial wie man ffm pack in docker selbst kompiliert und dann darauf über web assembly zugreift also beziehungsweise erstmal in ein web assembly static library übersetzt und dann von web assembly drauf zugreift ich bin mal gespannt ob das funktioniert und wenn das wenn das beispiel funktioniert

225
00:41:15,820 --> 00:41:31,820
dann den browser ausgeführt genau das ist der sinn das ist der sinn davon also zum beispiel stell dir mal vor du willst im browser irgendein format abspielen was dein browser nicht kann dann hast du gelitten kannst du nicht kannst du nichts machen es sei denn irgendjemand hat

226
00:41:31,820 --> 00:42:01,820
ein javascript decoder dafür programmiert was sehr unwahrscheinlich ist also kannst du vergessen so mit ffm pack das ist ja eine c++ library kannst du mit kannst du übersetzen den web assembly und dann den browser verwenden allerdings natürlich mit einschränkung du kannst jetzt nichts machen was irgendwie aus der browser sandbox ausbricht also wenn du jetzt sagst ja ich mach deine tcp server auf das geht nicht weil browser können keine tcp sockets öffnen listen dran listen lassen das funktioniert

227
00:42:01,820 --> 00:42:30,260
nicht so ich copy paste mal diesen ganzen klempel jetzt so ja und videos abspielen über ffm pack im browser ist sicherlich nicht die gute idee weil performance ist das ziemlich mies so haben ein dockerfile wir machen das ganze jetzt visual studio code auf yes trusten den ach quatsch so

228
00:42:30,260 --> 00:42:46,740
hier haben wir noch ein terminal kann man nie genug haben das brauchen wir wahrscheinlich so das ist das dockerfile ich will ein dockerfile nicht ein dockerfile also wir gucken uns das gleich mal an

229
00:42:46,740 --> 00:43:16,620
nein kein rust kannst vergessen ffm pack über rust ist abartig und mir wäre es deutlich lieber mir wäre es deutlich lieber als c++ c++ ist absolut kompletter pains champ aber was willst du machen ffm pack kann hardware beschleunigt ja das liegt daran also hier um das zu beantworten ja ffm pack kann mit dem passenden codec oder also mit dem passenden encoder oder decoder kann das das ganze hardware beschleunigt machen du kannst zum beispiel

230
00:43:16,620 --> 00:43:31,700
nvnk123 wie viele nvnk implementationen es auch immer gibt kannst du verwenden und wenn du die passenden grafikkarte hast ist es damit schnell aber dein browser hat keinen zugriff auf die grafikkarte für solche lowlevelencoding sachen

231
00:43:31,700 --> 00:43:59,300
ok also dockerfile was macht der typ hier denn mscript und msdk sbuild ok dann macht er irgendwie ein h264 decoder von 2017 ich ändere da jetzt mal nix dran weil ich denke sonst wird es nicht funktionieren oh gott pthreading auch noch über webassembly im browser das wird das wird ja was

232
00:43:59,300 --> 00:44:25,740
so dann baut er diesen ganzen krempel ffm pack version lädt er runter ffm pack version lädt er was runter 4 3 das erscheint mir ein bisschen alt was ist die aktuelle ffm pack version history also 5er gibts schon aber die 5er nehmen wir nicht weil die wahrscheinlich nicht funktioniert hier mit

233
00:44:25,740 --> 00:44:46,700
ich meine wir wobei doch wir könnten die 5 wir können es ja mal mit der 5er probieren von wo lädt er denn runter runter download video laden video laden snapshots ne das ist was falsches quatsch das da ffm pack releases was haben wir denn da als letztes zu bieten last modified

234
00:44:46,700 --> 00:45:09,700
die supporten noch die 2achter version boah die sind ja krass drauf die supporten die letzten 2achter die letzten 3 2er die 3 4er und die 4 2er wtf was ist denn mit denen loser da hast du grad schon was zu tun das zu maintainen

235
00:45:09,700 --> 00:45:29,300
so ffm pack 5 501 vom april die sache ist halt die ich hab keine ahnung ob das überhaupt funktioniert mit hab ich denn hier überhaupt selbst schon ffm pack installiert weil die header brauche ich tatsächlich ok 50 habe ich installiert

236
00:45:29,300 --> 00:45:59,100
es gibt was es gibt schon 507 ach ne das ist patch 50 ok das ist merkwürdige versionierung also dann nehmen wir das hier 501 ist die version die wir haben wollen ok 501 falls es leute wisst ihr was wir machen mal was wir gucken mal ob das kompilieren funktioniert ohne dass wir was dran ändern

237
00:45:59,100 --> 00:46:16,100
wir lassen es wir lassen es einfach so und wir kompilieren das jetzt mal und gucken ob es funktioniert weil es hat ja keinen sinn wenn ich da jetzt dicht ran editiere und danach geht es nicht wisst ihr wir machen jetzt einfach mal was das docker bild mp4 info alles klar

238
00:46:16,100 --> 00:46:33,700
den ganzen krempel für c++ installiere ich auch schon mal weil ich garantiert header files und sowas brauche und die bringen mir auch nix wenn das wenn die im docker container drin sind

239
00:46:33,700 --> 00:46:54,700
wieso sollte es funktionieren wenn der pass nicht stimmt hä weiß ich nicht woraus sich das bezieht ich meine vielleicht funktioniert es nicht mit der neuen version deswegen mache ich es mit der original version wie das tutorial geschrieben ist und wenn das funktioniert können wir es immer noch umtauschen austauschen

240
00:46:54,700 --> 00:47:11,700
so also beim bild

241
00:47:11,700 --> 00:47:18,700
was ist ein ms ms stk was ist da die richtige version

242
00:47:18,700 --> 00:47:35,700
was ist da die letzte version text 3 1 13 oder hat sich ein bisschen was getan die letzten jahre über ich glaube wir sollten das dann mal auch updaten ok also wir updaten dann ffm pack

243
00:47:35,700 --> 00:47:48,700
und hier können wir wahrscheinlich auch den codec updaten an den 2019 ist schon der neueste

244
00:47:48,700 --> 00:48:04,700
version jetzt von 2017 macht der dude hier wir updaten dann einfach alles wird alles geupdatet wenn das wenn der monkeys was jetzt

245
00:48:04,700 --> 00:48:18,700
ich glaube ich weiß woran das liegt docker hat sich wahrscheinlich mit dem standby mit dem standby verschluckt von der vm das kommt manchmal vor

246
00:48:18,700 --> 00:48:43,700
ja schon funktioniert so gucken wir mal wir haben jetzt gelernt hat es auch c top ist angesagt b top b top ist angesagt die coolen leute verwenden b top

247
00:48:43,700 --> 00:48:54,700
wobei ich ganz ehrlich h top schöner finde das ist das so schön simpel ich brauche keine true color console output mit sonst was ich weiß auch überhaupt nicht was jetzt genau was verbraucht

248
00:48:54,700 --> 00:49:19,700
so also weiß ich also ich finde ich persönlich finde ihr h top schöner zumindest out of the box ip league monkeys so aber h top ok das ist am compile

249
00:49:19,700 --> 00:49:43,700
ja dann compile mal im hintergrund wir lesen das tutorial und gucken wie es weitergeht ok dockerfile dockerfile bild writing the wrapper mp info wrapper punkt cpp ok es wird zeit für c++ files leute

250
00:49:43,700 --> 00:50:03,700
in welchen ordner muss ich den kram überhaupt legen einfach ins hauptverzeichnis oder wie macht er weiter bist in dist oh Gott make files alter hör mir auf make files ist eines der schlimmsten sachen der menschheitsgeschichte

251
00:50:03,700 --> 00:50:27,700
die technisch erfunden wurde ich bin nur noch gefolgt von c++ header files source ok ich brauche ordner der source heißt so und da drinnen legen wir jetzt ein

252
00:50:27,700 --> 00:50:48,700
erster krempel mp 4 info wrapper an alles klar show recommendations das c++ extension pack nein das c++ extension pack will ich nicht ich will nur die normale c++ extension und die haben wir auch installiert ja dann ist ja alles gut

253
00:50:48,700 --> 00:51:13,700
exzellent so und was machen wir da jetzt reinde mit gachibus haha wusste ich doch das also moment ich habe ich das nicht eben installiert wozu braucht man make files ja wenn man ein build script braucht also im prinzip das was man in bash machen kann

254
00:51:13,700 --> 00:51:25,700
halt bloß doch ein bisschen optimierter für c++ zeug ganz ehrlich ich verwende in der regel keine bild files und ich verwende in der regel auch keine custom npm npm scripts noch keine cargo scripts und ich überlege gerade was das

255
00:51:25,700 --> 00:51:42,700
die scharp gegenstück davon ist wahrscheinlich nichts und ich vermisse es auch nicht warum wischel studio code weil ich vermute wir brauchen c++ javascript html und docker in einem und ich will nicht 30.000 sachen aufmachen

256
00:51:42,700 --> 00:52:03,700
wist ihr was wist wisst ihr was an c und c++ auch immer gerade an c++ immer so pains champ ist immer wenn es kompiliert denkst du gleich bricht es ab das ist wie beim beim angry german kit was unreal tournament spielen will also du denkst gleich gleich ich will nicht

257
00:52:03,700 --> 00:52:20,700
dass es lebt weil dann bricht es ab aus fertig groß hat funktioniert die header sind doch im docker drin ja das bringt mir aber nix braucht die braucht die header ja hier wo sind die header überhaupt ich habe es doch ich habe es doch

258
00:52:20,700 --> 00:52:38,700
installiert ich meine ich könnte den docker container mountain lokal oder ich könnte in wischel studio code mich in docker rein attachen das geht ja irgendwie aber keine ahnung ich nehme die header die bei mir auf der platte liegen

259
00:52:38,700 --> 00:53:00,700
ich weiß du kannst das da weiß ich aber ich will jetzt nicht eine halbe stunde raus auch figuren wie das funktioniert ich kenne das was vias code remote try cpp was sample point to try out the vias code remote container extensions

260
00:53:00,700 --> 00:53:29,700
auf feife der kram ne ne das passt schon ich muss bloß mal kurz gucken pack pack mann minus query und dann ist include wo müssen wir hin ne user include wahrscheinlich net

261
00:53:29,700 --> 00:53:55,700
ok was ist hier drinnen bein punkt ha das da das brauche user bin m scripten system include das da das brauche hier so und jetzt wirst du ihm sagen edit include pass und unbedingt sollst du noch das hier nehmen und freuen

262
00:53:55,700 --> 00:54:10,700
es ist einfach wieder weggegangen

263
00:54:10,700 --> 00:54:28,700
ah siehst du schon funktioniert poc hat mich gebadet ok nice jetzt haben wir das kompilieren von dem kram hat auch geklappt

264
00:54:28,700 --> 00:54:41,700
so haben wir jetzt haben wir jetzt autocomplete haben wir jetzt autocomplete also zum beispiel ems oh guck mal da value tatsächlich autocomplete funktioniert die c++ extensions in visual studio code sind halt ziemlich ziemlich

265
00:54:41,700 --> 00:54:58,700
also die sind langsam die gehen aber die sind langsam wie sau also du brauchst hier teilweise zwei drei sekunden bis du sonntags highlighting richtig stimmt und sowas keine ahnung wer damit größere sachen überhaupt entwickeln kann so das haben wir ja wir vertrauen ihm einfach das geht

266
00:54:58,700 --> 00:55:17,700
mit makefile makefile ach nee im moment das gehört dazu ne makefiles haben ja so komische komische synthax dass da oben ist der jobname und das hier ist irgendwie dann was der ausführen soll makefile ok das heißt wir sollen jetzt hier

267
00:55:17,700 --> 00:55:35,700
noch ein makefile anlegen makefile nee nicht in sauce im things so

268
00:55:35,700 --> 00:55:54,700
add the following lines to your docker file wenn der das sagt dann machen wir das einfach und jetzt und wieviel wollen wir wetten dass es nicht funktioniert ich wette gar nicht wer weiß das ist das gefährlich mit dem chat ich glaube aber nicht dass es funktioniert

269
00:55:54,700 --> 00:56:23,700
ich wusste es ich wusste es war mir so klar dass es nicht funktioniert ja so ist es immer no makefile found hast du ein makefile erstellt ja ich habe eine idee woran das liegt

270
00:56:23,700 --> 00:56:34,700
vielleicht klappt das hier nicht home max was home wie geht da keine autocomplete was ist denn das

271
00:56:34,700 --> 00:56:53,700
no targets muss ich das vielleicht noch mal bilden oder tipp hat es bloß nicht ja wahrscheinlich muss ich das noch mal bilden vorher

272
00:56:53,700 --> 00:57:08,700
das ist was anderes missing separator makefile ich habe schon weiter gelesen nehme ich hier und das funktioniert nicht

273
00:57:08,700 --> 00:57:29,700
was ist denn wenn ich hier make drin ausführen ok mein makefile ist syntaktisch nicht korrekt obwohl ich das eins zu eins aus dem beispiel gepastet habe aber makefile haben so ein paar dumme angewohnheiten dass sie auf einrückung und irgendwie auch auf tabs und sowas

274
00:57:29,700 --> 00:57:46,700
wert legen

275
00:57:46,700 --> 00:58:11,700
das geht jetzt oder was ernsthaft das da in der anleitung steht doch überhaupt nichts drin was ist jetzt der bildet das an der stelle und danach kommt das raus und dieser step geht nicht btf warum warum okay kann mir irgendjemand logisch erklären warum das nicht geht und das geht

276
00:58:11,700 --> 00:58:23,700
es ist in makefile ich glaube wir vergessen es einfach ist egal das hauptsache hauptsache es geht jetzt tabs brauchen die tabs oder was

277
00:58:23,700 --> 00:58:45,700
tabs spaces das ist da if a single tab

278
00:58:45,700 --> 00:59:08,700
ok wir können machen und gucken ob das jetzt ohne fehler compiled und wenn das jetzt ah guck mal das ging ja sogar relativ schnell ja gut unser beispielprogramm sind auch noch fünf zeilen oder so ok nice das hat funktioniert und jetzt habe ich hier habe ich hier was liegen

279
00:59:08,700 --> 00:59:29,700
das ist einfach mal zwei megabyte groß oder was wir großartig was machen so ja dann updaten wir mal das docker file wobei das machen wir hier drüber wenn ich es hier schon auf habe

280
00:59:29,700 --> 00:59:51,700
jetzt schreiben wir mal aktuelle versionen rein also 501 ist glaube ich hier das aktuelle das ist das stk ist 3 3 1 13 und der decoder das das wird im leben nicht funktionieren

281
00:59:51,700 --> 01:00:04,700
der decoder ist decoder ist hier

282
01:00:04,700 --> 01:00:21,700
stable stable stable gibt es das hier stable ich muss das letzte suchen wo stable drin steht

283
01:00:21,700 --> 01:00:35,700
das da stable minus also minus stable

284
01:00:35,700 --> 01:00:56,700
so noch was da gibt es safe noch einen neueren nicht so aus

285
01:00:56,700 --> 01:01:12,700
das ist lip x 264

286
01:01:12,700 --> 01:01:26,700
es wäre interessant zu wissen es wäre interessant zu wissen von wo das gemirrored ist

287
01:01:26,700 --> 01:01:28,200
also hier was wir hier beim

288
01:01:28,200 --> 01:01:47,700
und hier auf

289
01:01:47,700 --> 01:01:53,700
hier einfach einfach noch eine stange effektiv

290
01:01:53,700 --> 01:02:16,460
Ich bilde das erstmal so, wenn das geht, nehmen wir die neueste Pleading Edge Version

291
01:02:16,460 --> 01:02:17,460
von...

292
01:02:17,460 --> 01:02:18,700
Wobei, ja, mal gucken.

293
01:02:18,700 --> 01:02:26,700
Letztendlich für unsere Tests ist es doch egal.

294
01:02:26,700 --> 01:02:27,700
Beat me?

295
01:02:27,700 --> 01:02:32,300
Denn dieses Repo nehmen sie, passt doch, das können wir dann nehmen.

296
01:02:32,300 --> 01:02:44,260
Also, wir gucken jetzt mal, was funktioniert, also wir haben FFmpeg aktualisiert, den Decoder

297
01:02:44,260 --> 01:02:56,020
und das, wahrscheinlich wird es jetzt nicht laufen.

298
01:02:56,020 --> 01:02:57,540
Gut dass wir gestern Platz gemacht haben.

299
01:02:57,540 --> 01:03:20,900
Ahhhh.

300
01:03:20,900 --> 01:03:38,660
Die Webseite machst du weiter in HTML und wenn du DOM-Interaktion brauchst, dann musst

301
01:03:38,660 --> 01:03:42,860
du das auch mit JavaScript machen, aber du kannst von WebAssembly JavaScript aufrufen

302
01:03:42,860 --> 01:03:46,340
und vor allem kannst du WebAssembly von JavaScript aus aufrufen.

303
01:03:46,340 --> 01:03:59,860
Was halt ziemlich pock ist, wenn du C-Libraries verwenden willst oder Go-Libraries oder Rust-Libraries

304
01:03:59,860 --> 01:04:03,620
oder so, im Prinzip alles was WebAssembly als Target hat.

305
01:04:03,620 --> 01:04:30,700
Das scheint so zu funktionieren Leute, oder Cobol, ich weiß nicht, kann man Cobol WebAssembly

306
01:04:30,700 --> 01:04:33,700
machen?

307
01:04:33,700 --> 01:04:39,100
282 Sterne!

308
01:04:39,100 --> 01:05:05,500
Oh, Cloudflare, anscheinend brauchen die das, ganz wichtig, oh das war mal als April-Scherz

309
01:05:05,500 --> 01:05:11,220
oder was auch immer, haben die hier Release Tags, wo ist denn in GitLab die Release Tags,

310
01:05:11,220 --> 01:05:15,740
ich hab GitLab schon ewig nicht mehr verwendet, ich hatte das mal self-hosted bei uns auf der

311
01:05:15,740 --> 01:05:26,820
Arbeit am Start, wo haben die Tags, hier Tags, gibt keine Tags, releases, wo sind die releases,

312
01:05:26,820 --> 01:05:33,140
releases gibt's wahrscheinlich auch nicht, Branches, ach was auch immer, stable, stable

313
01:05:33,140 --> 01:05:44,300
Branches, stable ist von einer Woche, na ok, das, haben wir jetzt fertig kompiliert, nein

314
01:05:44,300 --> 01:05:55,080
aber nicht, releases sind unter deployments, aha, gibt's aber auch nicht, das musst du

315
01:05:55,080 --> 01:05:58,460
wirklich alles selbst kompilieren, na dann, zum Glück habe ich einen halbwegs schnell

316
01:05:58,460 --> 01:06:05,940
Rechner, so ok, das haben wir geschafft, jetzt wird FFmpeg neu kompiliert, Cloudflare

317
01:06:05,940 --> 01:06:10,860
Workers now support Cobol, aber die Workers laufen doch bestimmt nicht mit WebAssembly

318
01:06:10,860 --> 01:06:11,860
oder?

319
01:06:11,860 --> 01:06:27,940
Ach tatsächlich, ach du Scheiße, ist das ein April-Scherz, nee 16.04, ja das ist für

320
01:06:27,940 --> 01:06:33,220
die ganzen Oldschool-Finanzdienstleistungsdinger, die noch Sachen in Cobol haben, aber in die

321
01:06:33,220 --> 01:06:42,860
Cloud wollen, das ist gar nicht so schlecht, ja finde ich auch, aber es ist trotzdem pain

322
01:06:42,860 --> 01:06:51,820
in the ass, oh guck mal, es ist wieder kurz vor dem abbrechen, die C++-Compiler-Fehlermeldungen

323
01:06:51,820 --> 01:07:08,940
sind auch die besten.

324
01:07:08,940 --> 01:07:27,700
Solange es keine Eros gibt, alles gut, hey, nice, make, pock, alles klar, das funktioniert

325
01:07:27,700 --> 01:07:38,020
mit neuesten Versionen auch noch, na dann, dann wollen wir mal, ne, gut, also wo ist die

326
01:07:38,020 --> 01:07:39,340
Anleitung, wo sind wir stehen geblieben?

327
01:07:39,340 --> 01:07:47,460
Also Serious Max, falls du doch mal den durchblickst, welchen Link ich verwenden muss, für die

328
01:07:47,460 --> 01:07:52,100
neueste Version, dann mach ich das, oder muss ich das gar nicht wehgetten, sondern ein Git

329
01:07:52,100 --> 01:07:58,460
clone machen anstatt dessen, also quasi anstatt den Kram hier downloaden, ein Git clone machen

330
01:07:58,460 --> 01:08:07,740
und dann da drinne bilden, könnte man auch probieren später, aber jetzt waren wir erstmal

331
01:08:07,740 --> 01:08:15,900
weiter, weil die Version wird es jetzt nicht so großartig ausmachen, so, bild, so, das

332
01:08:15,900 --> 01:08:23,700
haben wir, writing Javascript, alles klar, also wir brauchen einen Ordner für Javascript

333
01:08:23,700 --> 01:08:33,300
Zeug, gut, also machen wir mal einen neuen Ordner und zwar www, ne, HTML, www root heißt

334
01:08:33,300 --> 01:08:43,380
das normalerweise, www root, das heißt HTML, ne, www root, kann ich mir nichts davon vorstellen,

335
01:08:43,380 --> 01:08:55,380
so, da drinne gibt es jetzt File, index.html, zack, so, two spaces, korrekt, alles klar,

336
01:08:55,380 --> 01:08:57,020
so wie gehts weiter, was machen die hier denn jetzt?

337
01:08:57,020 --> 01:09:05,020
Since our mpe4info wrapper is compiled synchronous C++ code and can block browsers main thread,

338
01:09:05,020 --> 01:09:16,060
ach, juckt mich nicht, advantage of web workers, boah die ziehen aber alle Register hier, oder?

339
01:09:16,060 --> 01:09:26,900
WebAssembly in C++ aufrufen, aus web worker, public HTML, ne, unter Linux ist es eigentlich,

340
01:09:26,900 --> 01:09:36,020
meistens war www, HTML und bei vielen heißt es einfach www root, public underscore HTML,

341
01:09:36,020 --> 01:09:43,780
keine Ahnung, now let's create a new worker.js File, wo create ich das, hier wahrscheinlich

342
01:09:43,780 --> 01:09:48,780
ne, bei index.html, ok Leute, ich seh schon kommt, das müssen wir dann ein bisschen entschlacken

343
01:09:48,780 --> 01:09:53,860
danach alles, weil ich glaub ich will das gar nicht über web worker machen.

344
01:09:53,860 --> 01:10:01,380
Schauen wir mal, aber erstmal das, erstmal das Ding zum, das example zum laufen bekommen.

345
01:10:01,380 --> 01:10:11,380
So, was auch immer hier passiert, fs, wo kommt denn das her, das ist aber doch kein Standard

346
01:10:11,380 --> 01:10:23,540
javascript Zeug, ne ist es auch nicht, ist das irgendein WebAssembly Krempel, ja anscheinend

347
01:10:23,540 --> 01:10:30,580
multiswitching worker.js, ich bin mal gespannt was der Typ hier macht, so, fs, wo kommt denn

348
01:10:30,580 --> 01:10:51,500
das her überhaupt, hier vielleicht, mp4info.js, mp4info.js, fs, so, mkdir, können wir mal

349
01:10:51,500 --> 01:11:02,500
suchen, mkdir, ok, das kommt hier aus diesem javascript Ding, alles klar, ja sowas hat

350
01:11:02,500 --> 01:11:11,300
javascript aber nicht, normalerweise, ja das ist vom ffmpeg WebAssembly Ding, so wie es

351
01:11:11,300 --> 01:11:26,620
sieht, ok, weiter im Text, script, unten einfügen, ins index wahrscheinlich, ja monkaS, aber

352
01:11:26,620 --> 01:11:36,380
richtig monkaHyperS, so, ach der nennt es nur www, egal, ach man muss die Sachen da

353
01:11:36,380 --> 01:11:41,500
rein kopieren, Leute wir machen jetzt Trick 17, wir kopieren die Sachen nicht rein, weil

354
01:11:41,500 --> 01:11:53,100
die Sache ist ja die repo monkaCpp, ne, monkaCpp, die Sache ist ja die make, wenn wir das kompilieren

355
01:11:53,100 --> 01:12:06,820
kommt das in dist raus, wir linken das einfach, hab das x, ok, ne die werden jetzt nicht wahnsinnig

356
01:12:06,820 --> 01:12:15,940
neu, haben highspeed viel schneller das gemacht im letzten Jahr, können wir dann später machen,

357
01:12:15,940 --> 01:12:19,980
der kompiliert das ja immer nach dist, wir linken das jetzt einfach rein, wir gehen hier

358
01:12:19,980 --> 01:12:31,380
nach www root, Sachen ln-s dist js, ich glaube man könnte einfach Sternchen machen, wasm

359
01:12:31,380 --> 01:12:40,060
und worker, so, weil wenn ich es jetzt neu kompiliere ist es immer das aktuelle im www

360
01:12:40,060 --> 01:12:56,580
root, das ist im Prinzip Verknüpfung, so, haben wir den kram, ok, jetzt muss man noch

361
01:12:56,580 --> 01:13:08,620
irgendwelche header files einfügen, ok, dieses tutorial zieht aber alle Register, docker,

362
01:13:08,620 --> 01:13:18,980
c++, ffmpeg, webassembly, node.js, express, make files, html, da ist alles dabei, da ist

363
01:13:18,980 --> 01:13:24,260
alles dabei, ja die benutzen das nur um die richtigen header zu setzen, ja, aber trotzdem,

364
01:13:24,260 --> 01:13:35,100
das ist schon die hardcore variante, ok, wo muss das hin, server.js, das ist richtiger

365
01:13:35,100 --> 01:13:43,780
file fetched hier, wo sind wir denn, da, new file server.js, noch sind wir in der copy

366
01:13:43,780 --> 01:13:54,420
paste phase, npm install express, na dann, gib ihm, alles da rein, wenn es funktioniert,

367
01:13:54,420 --> 01:13:57,860
push, also wenn das funktioniert, was wir heute basteln, kann ich es nachher auch noch

368
01:13:57,860 --> 01:14:06,620
auf shitter posten, wenn ihr euch das angucken könnt, ok, alles klar, starten wir mal den

369
01:14:06,620 --> 01:14:21,180
server, www root, bam, server gestartet, chrome, was zum, warum habe ich überhaupt

370
01:14:21,180 --> 01:14:30,620
kein package jason in meinem heimatverzeichnis liegen, was, was, was macht das da, das ist

371
01:14:30,620 --> 01:14:49,900
weil ich express installt habe, warum installiert er das nicht da drin, cringe, so, ach weil

372
01:14:49,900 --> 01:15:03,540
ich kein npm init gemacht habe, ja, genau, localhost, 8080, so, da ist die website, ok,

373
01:15:03,540 --> 01:15:07,980
und jetzt brauche ich ein video zum testen, ich brauche ein video zum testen, dann nehmen

374
01:15:07,980 --> 01:15:17,380
wir noch eins von meinen, dann nehmen wir noch eins von meinen, irgendein kurzes, was

375
01:15:17,380 --> 01:15:22,180
ich mir schnell runterladen kann, dieses pixel spiel schlägt battlefield und cod, genau,

376
01:15:22,180 --> 01:15:30,140
das wollte ich schon immer haben, alles klar, kajibus.mp4, das können wir auch nehmen,

377
01:15:30,140 --> 01:15:37,940
wenn du das als mp4 video oder als h264 video hast, ne, katsch, nicht, youtube.dl, ne, nicht

378
01:15:37,940 --> 01:15:56,620
youtube.dl, wie heißt das andere, youtube.dl, ne, wie ist der krempel, ah, genau, dlp,

379
01:15:56,620 --> 01:16:13,180
so, minus f, no matches found, gut, lade ich mal mein eigenes video schnell runter, sollte

380
01:16:13,180 --> 01:16:22,860
ja zackig gehen, das, wisst ihr was, wir können sogar schon, leute, wir nehmen mal ein bisschen

381
01:16:22,860 --> 01:16:31,380
was kleineres, komm, wir nehmen mal das, wobei ich muss vom codec her gucken, es tut nicht

382
01:16:31,380 --> 01:16:48,460
jeder codec, avc1 ist h264, ne, ffprobe, ok, mv, das muss ich jetzt mal umbenennen,

383
01:16:48,460 --> 01:16:59,100
vid.mp4, ffprobe, vid, h264, main, avc, blablub, alles klar, gut, wir haben ein video,

384
01:16:59,100 --> 01:17:05,780
oder wir können es auch ffplay machen, vid, alles da, ich hab mein video ein bisschen

385
01:17:05,780 --> 01:17:10,100
runtergescaled, dass das im browser dann auch ordentlich funktioniert, falls wir es überhaupt

386
01:17:10,100 --> 01:17:18,500
jemals schaffen den kram zu rendern, gut, also wir haben ein video zum testen, so, also

387
01:17:18,500 --> 01:17:24,420
ich hab diesen blogpost ja vorher schon mal gelesen, ich glaube was das macht, ist, der

388
01:17:24,420 --> 01:17:30,140
lädt das video hoch, und dann lädt das in ffmpeg und lässt sich ausgeben was das für

389
01:17:30,140 --> 01:17:39,900
ein format ist, und das wars, das, wir wollen ja noch deutlich mehr machen, repos, monka

390
01:17:39,900 --> 01:17:53,260
cpp, ja dahin, postes video, ah, ww root, ne, ne, das machen wir eins hoch, kann man

391
01:17:53,260 --> 01:18:09,820
hier drin irgendwie copy pasten oder so, ups, hab ichs zerstört, monka cpp, ww root, vid,

392
01:18:09,820 --> 01:18:22,220
alles dahin, alles klar, so, vid.mp4, ne, das geht, ok, das macht mich schon mal zuversichtlich,

393
01:18:22,220 --> 01:18:30,540
dass das tutorial nicht schlecht war, also, wir haben jetzt ein video hochgeladen, ok,

394
01:18:30,540 --> 01:18:35,180
das muss ich jetzt erstmal verarbeiten, was da, jetzt müssen wir c++, servar.js brauchen

395
01:18:35,180 --> 01:18:42,620
wir nie wieder, duration 0, ja das kann sein, ne duration, minus, der erkennt die duration

396
01:18:42,620 --> 01:18:48,780
nicht richtig, der ist zu pepega dafür, wir könnens ordentlich machen, youtube hat das

397
01:18:48,780 --> 01:18:59,740
bestimmt müllig encoded, minus i vid, keine ahnung, out.mp4, wir lassen das mal reencoden,

398
01:18:59,740 --> 01:19:08,740
dann ist das bestimmt alles gut, youtube hat das bestimmt painschampig encoded, ok, das

399
01:19:08,740 --> 01:19:12,860
dauert jetzt kurz das video, ganz ehrlich so ein langes video brauchen wir doch gar

400
01:19:12,860 --> 01:19:19,020
nicht, wir machen mal noch was anderes, wir machen mal noch was anderes, wir machen noch

401
01:19:19,020 --> 01:19:30,460
skip, geht aus, oder, skip, boah, ffmpeg sachen, ne, ne, ne, first, ffmpeg first 20, oder first

402
01:19:30,460 --> 01:19:58,900
10 seconds, genau, skip, aha, skip von 0, time 10, time 20, ja das mit dem skippen kannste

403
01:19:58,900 --> 01:20:07,420
hätte ich mir auch gedacht, aber wer weiß, so, vielleicht checkt er das jetzt besser

404
01:20:07,420 --> 01:20:14,100
wie lang das ganze ist, out, duration, guck da, das ding war einfach müllig encoded von

405
01:20:14,100 --> 01:20:25,460
youtube, duration, 20 milliarden microseconds, milliseconds, was auch immer, microseconds

406
01:20:25,460 --> 01:20:30,260
wahrscheinlich, gut, das funktioniert, so jetzt muss ich hier erstmal kurz verarbeiten

407
01:20:30,260 --> 01:20:35,220
was hier eigentlich passiert, das brauche ich wahrscheinlich nicht mehr, ok, ich muss

408
01:20:35,220 --> 01:20:43,980
jetzt erstmal kurz verarbeiten was hier eigentlich, was hier eigentlich passiert, ok, index.html,

409
01:20:43,980 --> 01:21:00,260
wir haben ein inputfile, also inputformelement zum hochladen, dann starten wir einen webworker,

410
01:21:00,260 --> 01:21:06,420
wir subscriben zu dem change event von dem ding, also sprich, dass wir mitbekommen sobald

411
01:21:06,420 --> 01:21:10,540
hier was hochgeladen wird, aber es funktioniert anscheinend auch bloß einmal, weil ansonsten

412
01:21:10,540 --> 01:21:19,700
geht es kaputt, auch nice, so, on file change schickt dann zu unserem webworker das hochgeladene

413
01:21:19,700 --> 01:21:28,580
file, dann geht es hier weiter, der bekommt das, das bestimmt fucking viel overhead mit

414
01:21:28,580 --> 01:21:42,100
webworkern und sowas, so, dann macht der fs irgendwas, irgendwas eingebautes von ffmpeg,

415
01:21:42,100 --> 01:21:46,860
also der legt ein verzeichnis slash work an, virtuell, weil der browser hat ja kein filesystem

416
01:21:46,860 --> 01:21:54,500
in dem sinn, bzw. kann ich aufs filesystem zugreifen, dann kopiert er wahrscheinlich

417
01:21:54,500 --> 01:22:00,860
diese files nach slash work, sowas in der richtung, wird das wahrscheinlich sein, dann

418
01:22:00,860 --> 01:22:07,620
macht er module run, das ist wahrscheinlich das main aus meinem c++, nee, das heißt run,

419
01:22:07,620 --> 01:22:15,460
hier ruft er das c++ auf, dort bekommt er dann zurück, wie lang das video ist, das löschen

420
01:22:15,460 --> 01:22:23,500
wir, kann doch nicht mal was löschen hier draus, paintschamp file explorer, so, dann

421
01:22:23,500 --> 01:22:27,780
hier bekommt er zurück die ganzen infos, wie lang das video ist, duration, format, wie

422
01:22:27,780 --> 01:22:34,660
viele streams, das postet er dann zurück ins, in das main und dann kommt er hier raus

423
01:22:34,660 --> 01:22:41,380
und hängt es da unten an, ok und dann unmountet er den krempel wieder, ach du scheiße, ok

424
01:22:41,380 --> 01:22:55,500
jetzt müssen wir c++ programmieren, weirdchamp, jetzt kommt der fun part, ja jetzt kommt

425
01:22:55,500 --> 01:23:08,180
der massive, funhaver part kommt jetzt, was war das ergebnis von dem wassem ffm pack,

426
01:23:08,180 --> 01:23:20,860
was, du meinst das rust package von gestern, das hat nicht funktioniert, also, wie testen

427
01:23:20,860 --> 01:23:25,100
wir das denn jetzt, wir machen was kleines, wir fangen mit irgendwas wirklich minimalem

428
01:23:25,100 --> 01:23:31,020
an, also, das mit dem format, das können wir ja dalassen, dass da nicht so viel kaputt

429
01:23:31,020 --> 01:23:39,180
geht, open können wir auch dalassen, so jetzt müssen wir ffm pack machen, mein ffm pack

430
01:23:39,180 --> 01:23:44,740
in gerade in c ist nicht so gut, ich hab meistens den c sharp wrapper verwendet, der heißt

431
01:23:44,740 --> 01:23:55,620
zwar zum glück fast alles ähnlich, aber, ach ich weiß wo wir abgucken können leute,

432
01:23:55,620 --> 01:24:02,900
wir haben doch mal, der overlaychamp, den brauchen wir jetzt, wishlist studio 2019, guck mal wie

433
01:24:02,900 --> 01:24:09,140
lang ich schon nicht mehr unter windows was gemacht hab, der overlaychamp, das ist was

434
01:24:09,140 --> 01:24:18,620
ich mal gebastelt habe hierfür zum ablösen, ich hab doch hier mein tool, mit dem ich bilder

435
01:24:18,620 --> 01:24:23,940
anzeigen kann und sowas abspielen und sowas, ja und das ding hat probleme bei größeren

436
01:24:23,940 --> 01:24:31,860
gifs wie zb dem hier, guck, klick und da hab ich mal mit ffm pack ein overlay für gebaut

437
01:24:31,860 --> 01:24:39,420
und ich glaube, das ist der overlaychamp, muss mal kurz gucken wie so meine systemauslastung

438
01:24:39,420 --> 01:24:57,060
gerade ist, background download, monkaS was macht das da, hab ich edge, edge, edge dinger

439
01:24:57,060 --> 01:25:02,660
laufen, egal will ich gar nicht wissen, desktop ist das beste, so also da können wir nämlich

440
01:25:02,660 --> 01:25:11,500
hier ffm pack zeug abgucken, video frame, video decoder, aha hier machen wir sachen

441
01:25:11,500 --> 01:25:21,820
ok, open input, stream info, find decoder, av read, ok wir machen jetzt was ganz, ganz

442
01:25:21,820 --> 01:25:34,100
einfaches, wir lesen das komplette video ein und geben uns von jedem, noch komprimiert

443
01:25:34,100 --> 01:25:53,500
im frame einfach mal die größe aus, also machen wir sowas hier, while, true immer beste,

444
01:25:53,500 --> 01:26:00,340
av format context, ach du große, ob das funktioniert, wir brauchen den package, zum glück hab ich

445
01:26:00,340 --> 01:26:08,700
schon mal ein paar sachen mit ffm pack gemacht, halt selten in c++ direkt, aber alloc package,

446
01:26:08,700 --> 01:26:17,300
nein es ist package alloc, übrigens wisst ihr, wisst ihr, dass euch ffm pack richtig

447
01:26:17,300 --> 01:26:26,980
krass tribeten kann, es gibt free package und es gibt package free, also es gibt av package

448
01:26:26,980 --> 01:26:41,380
free und av free package, das ist deprecated, aber das ist echt was, pains jam, aber anscheinend

449
01:26:41,380 --> 01:26:52,380
habe ich es mit version 5 entfernt, so av alloc package, package und eigentlich müsste

450
01:26:52,380 --> 01:27:00,540
ich dann hier unten irgendwie sowas machen wie free packet oder so, aber scheiß auf

451
01:27:00,540 --> 01:27:18,180
memory leaks, das ist der browser, da kann ja nichts passieren, ok so, result null, result,

452
01:27:18,180 --> 01:27:27,700
wir machen nicht while true, wir machen while result null, reading via frames, ihr sagt

453
01:27:27,700 --> 01:27:31,340
jetzt wahrscheinlich, man könnte das da auch da oben reinschreiben, da bin ich mir aber

454
01:27:31,340 --> 01:27:37,820
noch nicht so sicher, ob das eine gute idee ist, ich mein man könnte ja auch sowas hier

455
01:27:37,820 --> 01:27:50,700
sagen, aber da bin ich mir unschlüssig, wobei warum nicht, kann man doch machen, so das

456
01:27:50,700 --> 01:28:08,020
werden wir noch öfters brauchen, den ffm pack Fehler anzeigen, alles klar, was muss

457
01:28:08,020 --> 01:28:17,860
ich jetzt machen, av read frame, ok also print f, ich mein wir sind in c++, aber ich fange

458
01:28:17,860 --> 01:28:25,380
garantiert nicht an mit std out kleiner kleiner irgendwas, jetzt lese ich es nicht mehr in

459
01:28:25,380 --> 01:28:30,060
eine variable, das ist richtig, aber brauche ich auch nicht, weil das was ich haben will

460
01:28:30,060 --> 01:28:34,100
ist das da, das hier ist nur der return code, das einzig dumm ist, ich kann den return code

461
01:28:34,100 --> 01:28:46,580
nicht ausgeben, wenn es Fehler schmeißt, ok print f, size und jetzt dollar, ne ach d,

462
01:28:46,580 --> 01:29:05,780
d ist ein int ne, packet size ist das überhaupt ein int, alles klar ok, mal schauen ob das

463
01:29:05,780 --> 01:29:19,820
noch, ob das noch maket, ah posture, oh es hat gemaked, nice, so wenn das jetzt funktioniert,

464
01:29:19,820 --> 01:29:26,620
kriegen wir die aus, jetzt liest ihr das komplette video ein frame für frame und gebt uns die

465
01:29:26,620 --> 01:29:37,460
größe von jedem frame aus, wenn er nix ausgibt geht was nicht, er gibt nix aus, ah newline

466
01:29:37,460 --> 01:29:48,220
vergessen, das liegt bestimmt am newline, zack, was ist denn dollar e in print f, wenn

467
01:29:48,220 --> 01:30:01,140
es das gibt, f, das wäre jetzt auch zu einfach gewesen, wenn das einfach funktioniert oder,

468
01:30:01,140 --> 01:30:08,940
dann brauchen wir doch den return code, moment ungleich 0 ist doch falsch, gleich gleich

469
01:30:08,940 --> 01:30:20,580
0, gleich gleich 0 will ich haben, alder ppega programmer hier am start, wenn es 0 ist dann

470
01:30:20,580 --> 01:30:28,780
ist ok, dann will ich weitermachen, ah, oh guck mal das funktioniert, ffmpeg im browser

471
01:30:28,780 --> 01:30:39,220
Leute, ffmpeg im browser, wir lesen das video ein, ultra low level und das im browser, alles

472
01:30:39,220 --> 01:30:52,780
klar so, das überrascht mich jetzt ein bisschen, dass das einfach funktioniert, aber das komplizierte

473
01:30:52,780 --> 01:30:57,900
kommt ja erst noch, also mein ziel by the way ist, was ich mir gedacht habe, was man

474
01:30:57,900 --> 01:31:04,100
mal ausprobieren könnte ist, sd videos, browser können in der regel nur hd videos abspielen

475
01:31:04,100 --> 01:31:13,380
und eigentlich auch nur h264, vp8, ich glaube das wars oder, ein standard video codex, die

476
01:31:13,380 --> 01:31:19,500
jeder browser unterstützt, vp9 und h265 ist glaube ich noch nicht überall gelandet, bin

477
01:31:19,500 --> 01:31:26,500
ich mir aber unsicher, zumindest die alten sd videos sind ja mpeg 2 video und da habe

478
01:31:26,500 --> 01:31:31,420
ich mir gedacht, man könnte so machen, dass man damit alte sd videos abspielen kann,

479
01:31:31,420 --> 01:31:42,380
sd videos brauchen auch nicht so viel leistung, ok jetzt kommt aber der komplizierte part,

480
01:31:42,380 --> 01:31:48,500
jetzt kommt der komplizierte part, wir müssen das video decoden, wir lesen ja aktuell nur

481
01:31:48,500 --> 01:31:57,060
das video ein und jetzt müssen wir das video decoden, dafür, das können wir uns abgucken,

482
01:31:57,060 --> 01:32:01,660
das habe ich nämlich hier gemacht vor ein paar jahren schon, also wie funktioniert das?

483
01:32:01,660 --> 01:32:16,660
av format alloccontext haben wir, stream format, stream, ich copy paste mir das jetzt einfach

484
01:32:16,660 --> 01:32:25,700
und dann bauen wir das um in c++, kannst du dateien speichern, ja aber nur über downloads,

485
01:32:25,700 --> 01:32:32,380
also nur über javascript umwege und gut ich könnte es im local storage speichern, aber

486
01:32:32,380 --> 01:32:39,860
ich glaube das ist ein bisschen klein für videos, wie groß 50mb oder so ist local storage

487
01:32:39,860 --> 01:32:47,620
maximum pro seite oder 20 sogar nur, nein 10, 10, 10 ist es nur, aber wisst ihr wofür

488
01:32:47,620 --> 01:32:55,060
das cool ist, man könnte zum beispiel einen qualitativ ansprechenden gif converter machen,

489
01:32:55,060 --> 01:33:02,260
der kleinseitig läuft, das ist cool, das klappt, wobei man das auch, das kann man auch mit

490
01:33:02,260 --> 01:33:09,500
ffmpeg wasm oder ffmpeg js machen, aber hier kann man halt deutlich mehr tunen, weil man

491
01:33:09,500 --> 01:33:17,580
den begriff auf die lowlevel sachen hat, also wie, ok was muss man machen, stream, gleich,

492
01:33:17,580 --> 01:33:21,220
warum machen die das eigentlich da oben hin, jetzt mal ernsthaft warum beschreiben die

493
01:33:21,220 --> 01:33:32,300
das nicht hier unten rein, die clearn den context auch nie, das ist memory leak, normalerweise

494
01:33:32,300 --> 01:33:46,340
musst du das closen am ende, normalerweise musst du close, av close, close input musst

495
01:33:46,340 --> 01:33:56,120
du normalerweise zum schluss machen, fmt context und dann einen pointer auf einen pointer übergeben

496
01:33:56,120 --> 01:34:13,420
und dann funktioniert es, weil ffc++ kam und dann können wir das nämlich auch hier machen

497
01:34:13,420 --> 01:34:16,860
und brauchen das da oben, warum hat der das als static da oben gemacht, das macht doch

498
01:34:16,860 --> 01:34:26,220
überhaupt keinen sinn oder, ich meine wahrscheinlich kann er deutlich besser c++ als ich, Rust hat

499
01:34:26,220 --> 01:34:30,980
nicht gut funktioniert, sonst würde ich heute nicht c++ machen, warum haben wir eigentlich

500
01:34:30,980 --> 01:34:35,460
schon kaum was gemacht, 30 milliarden files hier rumliegen, was ist das, was ist da los,

501
01:34:35,460 --> 01:34:47,100
amazing, danke schön für den sub, so, format open, red, red brauchen wir doch nie wieder,

502
01:34:47,100 --> 01:35:03,220
oder, red brauchen wir nie wieder, ah doch wir brauchen red, ah ich kack noob, 0w alter,

503
01:35:03,220 --> 01:35:16,540
ok, dann nehmen wir es so, alles klar, so jetzt müssen wir das hier in c++ umwursten, also

504
01:35:16,540 --> 01:35:21,420
zum glück, zum glück heißt das in dem wrapper gleich, also wir brauchen jetzt format context

505
01:35:21,420 --> 01:35:35,740
stream 0, das ist die gleiche syntax, so codec, codec gleich av codec find decoder und dann

506
01:35:35,740 --> 01:35:53,260
stream codec, so, aha, alles klar, gut dass wir das schon mal in c sharp gemacht haben

507
01:35:53,260 --> 01:35:57,180
damals, dass ich das jetzt einfach nur übersetzen muss, so das haben wir gemacht, das haben

508
01:35:57,180 --> 01:36:09,260
wir gemacht, jetzt brauchen wir noch einen, wisst ihr was, ich mag die schreibweise mehr,

509
01:36:09,260 --> 01:36:27,700
so, also, alter ok sehr gut, muss ich ja alles umbenennen, so und jetzt müssen wir, wie geht

510
01:36:27,700 --> 01:36:35,060
es denn jetzt weiter, package frame, na gut das wird so weit sind wir nicht, open, av

511
01:36:35,060 --> 01:36:51,500
codec open, oh das gibt es nicht, andere header vielleicht, welchen header, welchen header

512
01:36:51,500 --> 01:36:58,180
brauche ich denn dafür, gucken wir mal ein Beispiel an, von irgendwelchen anderen random

513
01:36:58,180 --> 01:37:06,100
includes im internet, include was gibt es, ok av codec, wo könntest du das, in welchem

514
01:37:06,100 --> 01:37:18,940
header könntest du das geben, lib av codec, codec, h oder av codec.h av, av codec.h wahrscheinlich,

515
01:37:18,940 --> 01:37:26,020
include five header, exellent, das wird sein, das ist include five header, included automatisch

516
01:37:26,020 --> 01:37:32,100
alle header richtig, weil es weiß was man haben will, ach guck mal da haben wir es jetzt,

517
01:37:32,100 --> 01:37:59,300
av codec open, so was brauche ich noch, codec oder decode, ctx, gleich, av codec, rlock,

518
01:37:59,300 --> 01:38:12,220
context 3, ganz wichtig 3, nicht 1, nicht 2, nicht 3, ich glaube nicht, dass ihr das

519
01:38:12,220 --> 01:38:22,940
mit blazer einfacher fällt, das stelle ich mir sogar ehrlich gesagt, schwierig bis fast

520
01:38:22,940 --> 01:38:33,220
unmöglich vor, p invoke gedöns über blazer web assembly auf irgendwelche c libraries,

521
01:38:33,220 --> 01:38:52,660
das wird was, wie soll das funktionieren, wie willst du das machen, du bräuchtest

522
01:38:52,660 --> 01:39:02,420
erst einmal ffmpeg als web assembly build, dann müsstest du darauf irgendwie, ich weiß

523
01:39:02,420 --> 01:39:09,180
ja nicht mal ob man überhaupt mit blazer p invoke ordentlich machen kann auf web assembly

524
01:39:09,180 --> 01:39:13,380
basis, boah das glaube ich nicht, dass das so easy ist, da vermute ich der ist sogar mit

525
01:39:13,380 --> 01:39:33,460
c++ deutlich einfacher, ok also wir sind stehen geblieben, so alloc context 3, so, es gibt

526
01:39:33,460 --> 01:39:43,700
zumindest schon mal keine syntax fehler und jetzt open decoder context, codec, gut euch

527
01:39:43,700 --> 01:39:47,660
das abschreiben kann, dann 0, 0 natürlich was sonst, ah ne wir sind ja in c++, da ist

528
01:39:47,660 --> 01:39:56,100
es 0, 0 pittere, ich habe eine zweifel ob das jetzt so funktioniert, können wir irgendwie

529
01:39:56,100 --> 01:40:05,660
checken ob es funktioniert hat, ffmpeg blazer, ach zeig mal her, zeig mal guck mal, interessant

530
01:40:05,660 --> 01:40:15,060
das muss ich mir mal schnell angucken, ffmpeg blazer, ffmpeg on web assembly, ffmpeg provides

531
01:40:15,060 --> 01:40:21,620
ability to utilize, ne ffmpeg wasm brauche ich nicht, ffmpeg wasm ist nicht das was

532
01:40:21,620 --> 01:40:30,500
ich haben will, das ist ja im prinzip nur ein ffmpeg cli wrapper für ein browser, also

533
01:40:30,500 --> 01:40:34,540
nur nur, das ist ja auch schon geile sache, aber wenn du interne sachen machen willst

534
01:40:34,540 --> 01:40:43,340
fällts dir damit schwerer, so strange, ja guck das ist ein cli wrapper, na das ist noob kram

535
01:40:43,340 --> 01:40:48,020
das braucht man nicht, wir wollen ja direkt auf einzelne decodete frames zugreifen, das

536
01:40:48,020 --> 01:40:58,500
wird damit nix, also gibts hier irgendwie gescheite return werte, hier rett, rett gleich,

537
01:40:58,500 --> 01:41:10,180
so schauen wir mal ob das mit dem codec funktioniert, also, öhm öhm open, open, ne codec oder

538
01:41:10,180 --> 01:41:18,940
kram, ja egal wie ich es nenne, jetzt gucken wir uns mal ein bisschen debug ausgabe an

539
01:41:18,940 --> 01:41:24,540
ob der kram funktioniert, so make, wir haben anscheinend keine syntaxfehler drin, es scheint

540
01:41:24,540 --> 01:41:30,500
schon zu funktionieren soweit, es passiert jetzt noch nicht viel mehr, aber wir sehen

541
01:41:30,500 --> 01:41:40,820
jetzt ob das an sich, codec no error information, no error information ist gut, weil no error

542
01:41:40,820 --> 01:41:46,420
information bedeutet es gibt keinen fehler und das hat funktioniert, alles gut, also

543
01:41:46,420 --> 01:41:51,660
return code ist, hat funktioniert, ok der hat das geöffnet, wir können das ja mal anders

544
01:41:51,660 --> 01:42:07,340
machen, öhm öhm codec, wir lassen uns mal den name ausgeben, name, da sollte jetzt

545
01:42:07,340 --> 01:42:21,460
rauskommen h264 sollte jetzt rauskommen bei dem codec als name, ja super, h264, ja gut

546
01:42:21,460 --> 01:42:30,900
das scheint bis jetzt zu funktionieren, alles klar, richtig feilfeder, gut und jetzt müssen

547
01:42:30,900 --> 01:42:45,380
wir decoden, ok wie geht das, öhm ffmpeg av codec open, das funktioniert, av seek brauchen

548
01:42:45,380 --> 01:42:49,620
wir nicht, das ist das mit das loop bei gifs, das brauchen wir nicht, so genau so ging das

549
01:42:49,620 --> 01:42:56,580
jetzt, av codec send package, av codec receive frame, exakt, da brauchen wir noch ein frame

550
01:42:56,580 --> 01:43:03,140
vorher, aber das kriegen wir hin, ok, also die logik bei ffmpeg ist, falls das irgendjemand

551
01:43:03,140 --> 01:43:10,060
von euch auch mal verwenden will, ein packet ist das, was, nee es muss ich auch sagen,

552
01:43:10,060 --> 01:43:17,740
ein packet ist ein noch komprimierter frame und ein frame ist ein video frame der decoded

553
01:43:17,740 --> 01:43:23,940
wurde, das heißt packages schiebst du in den decoder rein und frames bekommst du aus dem

554
01:43:23,940 --> 01:43:30,220
decoder raus, umgedreht wenn du was encodest schiebst du frames rein und bekommst packages

555
01:43:30,220 --> 01:43:37,660
raus, weißt was leute ich nenne das packet, ich nenne das packet, weil ich hab das andere

556
01:43:37,660 --> 01:43:41,940
frame genannt und sonst müsste ich es ja auch frim nennen, also leute c++ leute würden

557
01:43:41,940 --> 01:43:48,660
es, die richtig hardcore c++ leute würden es packet und frim nennen oder, gabs zu, klare

558
01:43:48,660 --> 01:43:57,140
schreibweise ist da nicht so hoch im kurs, so jetzt lesen wir den frame ein, wir müssen

559
01:43:57,140 --> 01:44:06,580
jetzt noch checken falls das mehrere streams hat, ob packet, p und f reicht eigentlich

560
01:44:06,580 --> 01:44:14,380
auch, ob packet stream index gleich gleich stream index ist, das ist wichtig, ich mein

561
01:44:14,380 --> 01:44:19,500
hier haben wir hardcoded, theoretisch muss man gucken wie viele streams in einem video

562
01:44:19,500 --> 01:44:23,220
sind, weil es könnte ja video stream sein, audio stream, untertitel stream und dann den

563
01:44:23,220 --> 01:44:28,500
rausfiltern den man haben will, aber wir machen es mal so, aber nur falls audio in dem stream

564
01:44:28,500 --> 01:44:34,900
ist, kann ich schlecht das audio in den video decoder pumpen, deswegen machen wir das mal

565
01:44:34,900 --> 01:44:39,620
so zur sicherheit, wobei wir sind in c++, coole c++ leute machen das wahrscheinlich

566
01:44:39,620 --> 01:44:59,940
so, alles klar ok, send packet, receive frame, decoding context, ret, ok, jetzt bin ich mal

567
01:44:59,940 --> 01:45:04,260
gespannt, leute irgendwo irgendwo kommt noch der haken, ich glaube einfach nicht, dass

568
01:45:04,260 --> 01:45:12,220
es einfach jetzt decoded, make, also von der idee her, wenn alles funktioniert, sollte

569
01:45:12,220 --> 01:45:20,620
der jetzt die einzelnen bilder von dem video nehmen und decoden, aber ich glaub noch nicht

570
01:45:20,620 --> 01:45:49,740
dran, dass es funktioniert, moment, das ist noch die alte version, äh, äh, äh, äh,

571
01:45:49,740 --> 01:46:16,180
was, warum printet der hier denn nix, warum printet der nur size und, äh, wo ist denn

572
01:46:16,180 --> 01:46:29,780
der rest, wo ist denn meine andere ausgabe, achso ich bin ja auch doof, guck mal da, ich

573
01:46:29,780 --> 01:46:39,260
muss sagen ungleich, ungleich stream continue, nicht gleich, gleich stream continue, lull,

574
01:46:39,260 --> 01:46:44,340
low iq am start, ich brauch mehr prime subs, der muss wieder rauf gehen, oh das sieht nicht

575
01:46:44,340 --> 01:46:58,540
so gut aus, was ist hier los, input, ok ich hab gehofft es gibt jetzt irgendeinen fehler

576
01:46:58,540 --> 01:47:18,860
mit dem ich was anfangen kann und es kommt bei jedem frame, shit, invalid data vent processing,

577
01:47:18,860 --> 01:47:46,660
äh, ich würd sagen wir googeln mal danach, äh, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

578
01:47:46,660 --> 01:48:14,660
ok, jetzt wirds natürlich, ffmpeg now says, ok, now says, ok, ok, ok, ok, ok, ok, ok,

579
01:48:14,660 --> 01:48:24,640
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

580
01:48:24,640 --> 01:48:29,980
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

581
01:48:29,980 --> 01:48:31,800
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, okurkwhere,

582
01:48:31,800 --> 01:48:35,800
Wir brauchen schon AV-Packet, wir brauchen schon die Raw-Geschichten.

583
01:48:39,800 --> 01:48:40,800
Oh shit.

584
01:48:50,800 --> 01:48:53,800
Oh shit, wie kriegen wir das jetzt gefixt?

585
01:48:53,800 --> 01:48:58,800
Ähm...

586
01:49:01,800 --> 01:49:04,800
Oh, not working. Der Chat googelt mit, das mag ich.

587
01:49:12,800 --> 01:49:15,800
Nee, das ist alt, das brauchen wir nicht mehr.

588
01:49:16,800 --> 01:49:18,800
Das brauchen wir nicht mehr, das brauchen wir nicht mehr.

589
01:49:18,800 --> 01:49:25,800
Der hat, es klappt ja auch alles. Es klappt nur nicht beim Decode.

590
01:49:32,800 --> 01:49:36,800
Vielleicht soll ich das andere noch mit No-Start-Code ist found.

591
01:49:36,800 --> 01:49:46,800
Oh, jetzt kommt Google Action.

592
01:49:50,800 --> 01:49:52,800
No-Start-Code.

593
01:49:53,800 --> 01:49:56,800
No-Start-Code ist found, aha.

594
01:49:57,800 --> 01:49:59,800
Ach fuck.

595
01:49:59,800 --> 01:50:06,800
Wir brauchen Raw-FFM-Pack-Zeug, nicht diesen Kommando-Zeichen-Crap.

596
01:50:18,800 --> 01:50:19,800
Super-User.

597
01:50:19,800 --> 01:50:28,800
Okay, also ich rate jetzt einfach mal was, ich glaube unser Decoder ist falsch konfiguriert.

598
01:50:29,800 --> 01:50:37,800
Manchmal muss man diesen Decoder nämlich noch was einstellen, sowas wie Höhe und Breite und solche, solche Dinger, dass es funktioniert.

599
01:50:37,800 --> 01:50:39,800
AV-Pack-It.

600
01:50:47,800 --> 01:50:49,800
AV-Pack-It.

601
01:50:50,800 --> 01:50:53,800
Probier nochmal, nee, vorher hat er nicht funktioniert.

602
01:51:03,800 --> 01:51:05,800
Hm...

603
01:51:05,800 --> 01:51:06,800
Monke-S, was ist das?

604
01:51:07,800 --> 01:51:09,800
Nee, das funktioniert nicht.

605
01:51:12,800 --> 01:51:14,800
Okay, was machen wir denn jetzt?

606
01:51:16,800 --> 01:51:22,800
Man konnte doch irgendwie den Kram kopieren.

607
01:51:22,800 --> 01:51:34,800
Man konnte doch irgendwie sagen, Codec, Copy oder irgendwie sowas, Codec, Kontext.

608
01:51:35,800 --> 01:51:37,800
Ach du Scheiße, wie ging das jetzt nochmal?

609
01:51:41,800 --> 01:51:43,800
Nee, das ist Doku von 2.8.

610
01:51:48,800 --> 01:51:50,800
Nee, nee, nee, nee, nee, das brauchen wir nicht.

611
01:51:50,800 --> 01:51:57,800
Nee, nee, es gibt, man konnte ihm sagen, nimm den Input-Stream und mach da draußen Decoder.

612
01:51:58,800 --> 01:52:00,800
Create-Kontext oder sowas?

613
01:52:00,800 --> 01:52:28,800
Hm...

614
01:52:28,800 --> 01:52:32,800
Ich wette, wir finden die Antwort auf Stack-Overflow.

615
01:52:35,800 --> 01:52:41,800
Stack-Overflow ist einfach das Beste, wir machen jetzt so lange Stack-Overflow.

616
01:52:42,800 --> 01:52:44,800
Set AV-Code-Flag-Global-Header.

617
01:52:45,800 --> 01:52:46,800
Nee, das wird es nicht sein.

618
01:52:47,800 --> 01:52:48,800
Macht der Typ das hier?

619
01:52:51,800 --> 01:52:52,800
Failed.

620
01:52:52,800 --> 01:52:57,800
Ach, der encoded das. Nee, nee, nee, nee, ich will es decoden.

621
01:53:03,800 --> 01:53:05,800
Ah Shit, wie war das denn nochmal?

622
01:53:08,800 --> 01:53:13,800
FFmpeg hat halbwegs brauchbare Docs, aber nicht bei so Dingern.

623
01:53:13,800 --> 01:53:20,800
Ja, das klingt auch ganz gut.

624
01:53:33,800 --> 01:53:35,800
Ich Stack-Overflow mich jetzt einfach kurz durch.

625
01:53:35,800 --> 01:53:42,800
Das meine ich, das meine ich, Parameters to Context, das meine ich.

626
01:53:43,800 --> 01:53:49,800
Mir konnte nämlich vom Input-Stream die ganzen Parameter wie Breite, Höhe, Bitrate, Geschiss übernehmen für den Decoder.

627
01:53:50,800 --> 01:53:55,800
Ohne, dass man die alle von Hand reinhält. Das meine ich, AV-Code-Parameters to Context, das meine ich, genau.

628
01:53:56,800 --> 01:53:58,800
So, mal gucken, wie man das jetzt verwendet.

629
01:53:58,800 --> 01:54:03,800
Ich glaube, GitHub Copilot versagt an der Stelle auch, aber das ist für Encoder.

630
01:54:04,800 --> 01:54:06,800
Hab ich das für Encoder verwendet?

631
01:54:10,800 --> 01:54:13,800
Mal schauen, okay, wir probieren das jetzt einfach mal aus.

632
01:54:14,800 --> 01:54:19,800
AV-Dings, okay, was muss man dem übergeben?

633
01:54:19,800 --> 01:54:29,800
Den Decoder-Context und die Codex-Parameters. Die Codex-Parameters gibt es von Stream-Codex-Parameter.

634
01:54:30,800 --> 01:54:33,800
So, und wenn wir jetzt Glück haben, funktioniert es.

635
01:54:35,800 --> 01:54:37,800
Obvious, Pfeif hat.

636
01:54:38,800 --> 01:54:41,800
Chat, was meint ihr? Geht es oder geht es nicht?

637
01:54:43,800 --> 01:54:44,800
Force-Champ.

638
01:54:44,800 --> 01:54:49,800
Prager, Leute, wir brauchen mindestens 20 Prager im Chat, sonst kann es nicht funktionieren.

639
01:54:50,800 --> 01:54:53,800
Ich brauche kurz mal den Prager-Spam.

640
01:54:54,800 --> 01:54:57,800
Prager, Prager-Chat, Prager, Massive-Prager.

641
01:54:58,800 --> 01:55:01,800
1, 2, 3, 4, 5, Prager ist erst, das wird nichts.

642
01:55:02,800 --> 01:55:05,800
6, 7, 8, 9, 10, Prager ist 11.

643
01:55:06,800 --> 01:55:11,800
Na, nur 11, 12, 13, 14, 15, 16, 17, 18, 19, 20.

644
01:55:11,800 --> 01:55:19,800
Na, nur 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, okay, gut, wir haben genug geprayt.

645
01:55:20,800 --> 01:55:21,800
Gucken wir mal, ob es funktioniert.

646
01:55:22,800 --> 01:55:25,800
Wir sind vom Praying in das Force-Champ übergegangen.

647
01:55:28,800 --> 01:55:32,800
Okay, was erwarte ich denn jetzt überhaupt? Ich erwarte, dass der Codex decoded.

648
01:55:33,800 --> 01:55:37,800
Und, das ist eine andere Fehlermeldung.

649
01:55:37,800 --> 01:55:41,800
Das ist eine andere Fehlermeldung, das ist schon mal gut, dass das eine andere Fehlermeldung ist.

650
01:55:42,800 --> 01:55:45,800
Restores temporary unavailable haben wir jetzt.

651
01:55:46,800 --> 01:55:51,800
Ich weiß, warum das ist. Das ist, weil ich den Frame nicht aus dem Decoder raushole.

652
01:55:52,800 --> 01:55:54,800
Der erste müsste geklappt haben.

653
01:55:55,800 --> 01:55:59,800
Bam, der hat decoded. Die ersten 5 Frames konnte er decoden, da war der Decoder voll.

654
01:56:00,800 --> 01:56:01,800
Es hat funktioniert.

655
01:56:01,800 --> 01:56:06,800
Es hat funktioniert. Exzellent, exzellent. Prager hat geholfen, Leute.

656
01:56:07,800 --> 01:56:09,800
Also, ab jetzt immer Prager, wenn was nicht geht.

657
01:56:10,800 --> 01:56:11,800
Okay.

658
01:56:15,800 --> 01:56:17,800
Also, wir wissen jetzt ja, dass es funktioniert.

659
01:56:21,800 --> 01:56:23,800
Receive Frame.

660
01:56:24,800 --> 01:56:25,800
Frame.

661
01:56:25,800 --> 01:56:30,800
Also, so decoded man in FFmpeg. So ist das gedacht.

662
01:56:31,800 --> 01:56:38,800
Du schiebst das Komprimierte rein in den Decoder und bekommst vom Decoder, das ist der Decoder, und bekommst vom Decoder das Unkomprimierte raus.

663
01:56:39,800 --> 01:56:40,800
So, so funktioniert das.

664
01:56:41,800 --> 01:56:44,800
So, jetzt holen wir das mal ab und gucken, wir gucken jetzt einfach, ob es durchläuft ohne Fehler.

665
01:56:45,800 --> 01:56:52,800
Ich meine, zwischendurch kann es vielleicht mal ein paar Fehler schmeißen, aber im Großen und Ganzen sollte es laufen.

666
01:56:52,800 --> 01:56:54,800
Out.

667
01:56:55,800 --> 01:56:58,800
Das geht einfach, Leute. Es geht ohne Probleme.

668
01:56:59,800 --> 01:57:01,800
Geschmeidig decoded das durch.

669
01:57:02,800 --> 01:57:05,800
Wir können jetzt auch gucken, ob das funktioniert mit dem Decoden.

670
01:57:06,800 --> 01:57:08,800
Wir lassen den Error Code, der juckt mich jetzt nicht.

671
01:57:09,800 --> 01:57:11,800
Package Size juckt mich jetzt auch nicht.

672
01:57:12,800 --> 01:57:15,800
Was viel interessanter ist, ist, doch wir vergleichen jetzt mal was.

673
01:57:16,800 --> 01:57:19,800
Leute, wir vergleichen jetzt die Size decoded und encoded.

674
01:57:19,800 --> 01:57:31,800
Daran können wir ganz klar erkennen, ob es, also zweimal Size hintereinander, ob es Frame Size.

675
01:57:32,800 --> 01:57:37,800
Ach so, das ist die Package Size, ja, die müsste ja exakt gleich sein.

676
01:57:38,800 --> 01:57:42,800
Wie kriege ich denn überhaupt die Size von einem Frame raus?

677
01:57:42,800 --> 01:57:50,800
Brauchst du nicht noch AV Packet Free, doch, das müsste ich hier unten eigentlich machen und Frame Free.

678
01:57:54,800 --> 01:57:56,800
So.

679
01:58:00,800 --> 01:58:04,800
Ich bin mir nicht ganz sicher, ob der das dann, ne, das passt schon, ne, das passt.

680
01:58:05,800 --> 01:58:07,800
Das reicht einmal am Ende.

681
01:58:08,800 --> 01:58:10,800
Was willst du hier sehen? Ganz schlimme Sachen, Leute.

682
01:58:10,800 --> 01:58:11,800
Twinko, ganz schlimme Sachen.

683
01:58:12,800 --> 01:58:15,800
C++, FFmpeg und das im Browser.

684
01:58:16,800 --> 01:58:22,800
Aber bis jetzt, muss ich sagen, erstaunlicherweise funktioniert es bis jetzt.

685
01:58:23,800 --> 01:58:25,800
Guck mal, wir können ein Video decoden im Browser.

686
01:58:26,800 --> 01:58:34,800
Ein H264 Video decoden im Browser über FFmpeg, also FFmpeg in WebAssembly übersetzt und dann ein Video decoden im Browser.

687
01:58:35,800 --> 01:58:36,800
Das ist schon Five Head Shit.

688
01:58:36,800 --> 01:58:42,800
Wozu braucht man das denn? Zum Beispiel, wenn du in deinem Browser Sachen anzeigen willst, die dein Browser nicht abspielen kannst.

689
01:58:49,800 --> 01:58:55,800
Oder wenn du jetzt beispielsweise irgendeinen GIF Renderer machen willst, der High Quality GIFs kreiert oder so.

690
01:58:56,800 --> 01:59:01,800
Oder Audio Effekte oder so. Ich könnte mir tatsächlich ein paar Anwendungsgebiete vorstellen.

691
01:59:01,800 --> 01:59:06,800
Warum ich das machen will, ist nicht, weil es wirklich irgendwie ein super krasses neues Startup oder so gibt.

692
01:59:07,800 --> 01:59:13,800
Ich habe mir überlegt, ob man nicht damit alte SD-Fernsehaufnahmen oder Videos abspielen könnte.

693
01:59:14,800 --> 01:59:16,800
Ist das schnell? Nee.

694
01:59:17,800 --> 01:59:24,800
Also im Vergleich zu normalem Video abspielen im Browser, was der Browser unterstützt, ist es sicherlich nicht schnell.

695
01:59:25,800 --> 01:59:28,800
Aber ich vermute, es ist für SD-Videos schnell genug.

696
01:59:28,800 --> 01:59:30,800
Das müssen wir jetzt gleich ausprobieren.

697
01:59:36,800 --> 01:59:39,800
Ja, das ist richtig. Nee, es ist nicht. Alles gut. C++.

698
01:59:42,800 --> 01:59:46,800
So, also wir sollten jetzt die Size angezeigt bekommen, unterschiedlich.

699
01:59:47,800 --> 01:59:51,800
Wobei, es kann sein, dass es nicht funktioniert, weil das die Packet Size ist und hier oben auch die Packet Size.

700
01:59:51,800 --> 01:59:54,800
Ja doch, guck mal. Guck mal Leute, es klappt.

701
01:59:55,800 --> 02:00:05,800
Komprimiert, komprimiert ist das Bild. 642 Kilobyte. Ich habe keine Ahnung.

702
02:00:06,800 --> 02:00:12,800
Und dekomprimiert ist es 2,4. Nee.

703
02:00:12,800 --> 02:00:20,800
242 Byte zu 2,4 Kilobyte? Nee, so. Ja, ach was auch immer.

704
02:00:21,800 --> 02:00:26,800
Aber das funktioniert. Das ist äußerst nice, dass das klappt.

705
02:00:29,800 --> 02:00:33,800
Kannst du das nicht im Voraus transkoden? Doch, das kann man auch machen. Das muss man aber serverseitig machen.

706
02:00:34,800 --> 02:00:36,800
Es geht ja um was kleinseitiges. Und um zu gucken, wie es funktioniert.

707
02:00:36,800 --> 02:00:42,800
Um zu gucken, wie es funktioniert ist eigentlich die Hauptsache.

708
02:00:43,800 --> 02:00:46,800
Also wir decoden ein Video. So, wie geht es jetzt weiter?

709
02:00:47,800 --> 02:00:54,800
Wie kommt man jetzt an die Videodaten ran eigentlich?

710
02:00:54,800 --> 02:01:10,800
Also, Size ist ja schön und gut. Aber Frame, Data gibt es, das kenne ich.

711
02:01:11,800 --> 02:01:20,800
Aber Data ist quasi nur ein... Moment, Moment, was sehe ich hier?

712
02:01:20,800 --> 02:01:28,800
Ist das jetzt ein Pointer auf Arrays oder ist das ein Pointer auf ein Array?

713
02:01:29,800 --> 02:01:32,800
Also ist das ein Pointer auf ein Pointer oder ist das ein...

714
02:01:33,800 --> 02:01:37,800
Also ist das ein Array mit 8x Pointer drinnen oder ist das ein Pointer...

715
02:01:37,800 --> 02:01:51,800
Oder ist das ein Pointer, also ist das ein Array? Das bin ich jetzt unschlüssig.

716
02:01:52,800 --> 02:02:04,800
Wie bekomme ich Pointer zum Array? Aber warum steht da 8 dahinter?

717
02:02:04,800 --> 02:02:15,800
Warum steht da 8 dahinter? 8 Elemente, aber das ergibt keinen Sinn.

718
02:02:16,800 --> 02:02:26,800
Wartet mal. Auto keqw, guckt mal. Das ist ein Pointer.

719
02:02:26,800 --> 02:02:33,800
Das ist ein Array mit Pointer auf weitere Arrays. Guckt.

720
02:02:34,800 --> 02:02:41,800
Das ist ein Array mit 8 Pointer zu weiteren Byte Arrays.

721
02:02:42,800 --> 02:02:48,800
Also sind 8 Byte Arrays quasi. Ach du Scheiße man.

722
02:02:49,800 --> 02:02:53,800
Was soll ich denn damit jetzt machen? Wie kriege ich denn da die Größe raus?

723
02:02:53,800 --> 02:03:01,800
Okay, AV Frame to Size. Was ist die Size von einem AV Frame?

724
02:03:02,800 --> 02:03:07,800
Determining Size. Das funktioniert auch auf Mobile Browsern?

725
02:03:08,800 --> 02:03:13,800
Wahrscheinlich schon, ja. How to get raw frame data? Genau das will ich haben.

726
02:03:13,800 --> 02:03:26,800
AV Picture. AV Picture soll man nicht mal verwenden.

727
02:03:27,800 --> 02:03:30,800
Da kann ich mich dran erinnern, da ist was dran gewesen.

728
02:03:30,800 --> 02:03:43,800
To Char Array. Buffer Calculation. AV Image Get Buffer Size. Das klingt doch gut.

729
02:03:44,800 --> 02:03:52,800
Das will ich haben. AV Image Get Buffer. Geil.

730
02:03:53,800 --> 02:03:57,800
Und was muss ich include dafür? Image Utils. Ich include jetzt einfach Image Utils.

731
02:03:57,800 --> 02:04:07,800
Image Utils und gutes. Image Utils. Include. Image. Lip Image. Lip Utils.

732
02:04:08,800 --> 02:04:14,800
AV Utils. Image Utils. Alles klar. Das muss ich sagen. FFmpeg hat die Dinger.

733
02:04:15,800 --> 02:04:23,800
Wenigstens noch funktioniert das auch in Safari. Ja ich glaube das funktioniert sogar in Safari.

734
02:04:23,800 --> 02:04:29,800
Wobei das natürlich nicht gegeben ist. Safari ist der neue Internet Explorer.

735
02:04:30,800 --> 02:04:36,800
Also was muss man da jetzt rein checken? Pixel Format. Okay. Frame Format haben wir.

736
02:04:37,800 --> 02:04:48,800
Breite ist Frame Breite. Nächste ist Frame Höhe. Int Align. Was soll das sein?

737
02:04:48,800 --> 02:04:54,800
Line Size Alignment. Return Size and Bytes.

738
02:04:55,800 --> 02:05:01,800
Of the amount of data required to store an image with.

739
02:05:02,800 --> 02:05:07,800
Was will das von mir?

740
02:05:08,800 --> 02:05:12,800
Multi-Threaded geht nicht in Safari.

741
02:05:12,800 --> 02:05:19,800
Es war klar das irgendwas nicht in Safari geht davon. Das habe ich nicht anders erwartet ehrlich gesagt.

742
02:05:20,800 --> 02:05:25,800
Safari geht immer irgendwas net. What is Line Size Alignment Meaning?

743
02:05:26,800 --> 02:05:39,800
Ja. Aha. Wie macht der das hier? Eins. Ne eins ist es wahrscheinlich net.

744
02:05:39,800 --> 02:05:45,800
32 klingt doch erstmal gut. Leute ich habe keine Ahnung warum was da Aligned wird.

745
02:05:46,800 --> 02:05:51,800
Wahrscheinlich die Speicher Adressen wo es anfängt oder irgendwas. Keine Ahnung.

746
02:05:52,800 --> 02:05:58,800
So und jetzt kommt C++ Shit. Wir müssen das casten dass das funktioniert.

747
02:05:58,800 --> 02:06:08,800
Gut. Klar gibt es Safari noch was meistens was auf IOS und Mac OS verwendet wird für einen Browser.

748
02:06:09,800 --> 02:06:16,800
Image oder keine Ahnung. Image Size.

749
02:06:16,800 --> 02:06:24,800
Okay. Printen wir mal. Image Size.

750
02:06:25,800 --> 02:06:31,800
Das ist wie groß der Buffer also wie viele Daten der Decoded Frame hat.

751
02:06:32,800 --> 02:06:35,800
Das brauche ich ja im Endeffekt dass ich weiß wie weit ich das Array lesen muss.

752
02:06:36,800 --> 02:06:40,800
Das ist natürlich blöd dass es so wissenschaftlich eine Wissenschaft für sich ist.

753
02:06:40,800 --> 02:06:48,800
So hat funktioniert. Nice. Zack. Out. Size.

754
02:06:49,800 --> 02:06:55,800
Und das ist jetzt wahrscheinlich Bytes. Also 345 Kilobyte.

755
02:06:56,800 --> 02:07:05,800
345 Kilobyte pro Frame. Decoded. Naja das ist Raw RGB.

756
02:07:05,800 --> 02:07:13,800
Raw RGB. Nee nicht RGB. Uff 420 oder so. Das klingt doch realistisch oder?

757
02:07:14,800 --> 02:07:20,800
So und jetzt ist natürlich die Frage wir haben jetzt ja noch einiges vor uns.

758
02:07:21,800 --> 02:07:26,800
Jetzt ist die nächste Frage. Wie bekomme ich die Image Daten zu JavaScript rüber?

759
02:07:26,800 --> 02:07:35,800
Okay wahrscheinlich muss ich mir die Image Daten erstmal in den eigenen Buffer kopieren.

760
02:07:36,800 --> 02:07:53,800
Weil ich kann mir nicht vorstellen dass ich Frame Data irgendwie zu JavaScript zurück kriege.

761
02:07:53,800 --> 02:08:02,800
Pointer to Picture Channels. Moment ein was? Ein Pointer to Picture Channel Planes.

762
02:08:02,800 --> 02:08:23,800
Also ich glaube nicht dass ich diese Daten so direkt nach JavaScript zurück bekomme.

763
02:08:23,800 --> 02:08:31,800
Du kannst einfach die Uint8 Arrays. Aber ich hab doch gar keine Größeninformationen.

764
02:08:32,800 --> 02:08:43,800
Ich hab doch nur die Gesamtgröße. Du machst was mit Go.

765
02:08:44,800 --> 02:08:50,800
Ich finde die Technik auch wahnsinnig spannend. Deswegen dachte ich mir ich muss mich da mal ein bisschen mit beschäftigen.

766
02:08:50,800 --> 02:09:01,800
Also wir machen das jetzt so. AV Image Buffer. Wir kopieren uns das jetzt in den eigenen Buffer rein.

767
02:09:02,800 --> 02:09:08,800
Also irgendwie Image Data. Nee Moment das funktioniert bestimmt anders.

768
02:09:08,800 --> 02:09:19,800
Das funktioniert bestimmt anders. Uint8 Destination. Also ich brauche den Buffer.

769
02:09:20,800 --> 02:09:29,800
Buffer gleich. So was da. Jetzt wird es wahnsinnig safe.

770
02:09:29,800 --> 02:09:38,800
Image Size. So. Und in was brauchen wir den Buffer jetzt? Void klar.

771
02:09:39,800 --> 02:09:46,800
Wenn schon dann richtig C++. Void Sternchen. Alles klar. Also wir brauchen das in Uint8.

772
02:09:46,800 --> 02:09:58,800
Buffer. Buffer Size. Nee Image Size. Vielleicht soll ich es Buffer Size nennen. Dann blick ich mehr durch was es ist.

773
02:09:59,800 --> 02:10:13,800
Ja ist klar. Falls jetzt kommt der nächste um die Ecke und sagt uns. Übrigens du verwendest nicht Linux. Du verwendest GNU Linux.

774
02:10:13,800 --> 02:10:26,800
Linux. Allow me to interject for a moment. Moment was mache ich denn da? Nee das brauche ich nicht.

775
02:10:27,800 --> 02:10:33,800
Moment. Ah ich bin verwirrt. Image Size. Buffer Size. Nur Buffer Size da rein. So. Und jetzt hier Buffer Size.

776
02:10:33,800 --> 02:10:44,800
Das funktioniert. Source Data. Ok das ist jetzt wahrscheinlich Frame Data. Und das hier ist Frame.

777
02:10:45,800 --> 02:10:53,800
Das gibt es zum Glück alle. Line Size. Pixel Format. Hatten wir hier oben schon mal.

778
02:10:53,800 --> 02:11:07,800
Frame Breite. 30 Milliarden Parameter. High. Alignment. Ja 32. Ich weiß nicht was es macht aber 32 ist Alignment.

779
02:11:08,800 --> 02:11:19,800
Oh der Buffer ist falsch. Was? Ah ich caste das zu einem End. Ich muss es zu einem Endpointer casten. Alles klar.

780
02:11:19,800 --> 02:11:27,800
Oh. Grip. Ok. Jetzt ging es auf einmal. War der Meinung geht nicht aber jetzt geht es wieder.

781
02:11:28,800 --> 02:11:33,800
Was ist denn nur mit casten? Ja wo ist denn der casten? Ehe ich nichts mehr gehört vom casten.

782
02:11:34,800 --> 02:11:42,800
So Buffer Size. Gut. So wie kriegen wir den Kram jetzt zurück? Wie kriegen wir den Krempel?

783
02:11:42,800 --> 02:11:56,800
Also ich lasse es mal kurz laufen und gucken ob es Crashed. Gucken wir mal ob es Crashed. Ach ja das ist ein Ccast.

784
02:11:56,800 --> 02:12:11,800
Ccast stimmt nicht. Crashed nicht. Wie ist denn die hässliche Variante für C++? Irgendwie Standard Cast? Nee.

785
02:12:11,800 --> 02:12:26,800
Dynamic Cast. Reinterpret Cast. Ich weiß noch nicht mal wie das funktioniert weil das so wirr ist alles in C++. Wie würde ich das hier in C++ schreiben?

786
02:12:26,800 --> 02:12:47,800
Static Cast. Also Static Cast. Nee Static Cast. Ach so. Also die C++ Variante wäre Static Cast uint 8 Sternchen. So? Nee.

787
02:12:47,800 --> 02:13:08,800
Alter C++. Ach so natürlich. So drum herum. Ist ja so eine Funktion quasi. Ok jetzt mal ernsthaft. Warum sollte ich das verwenden?

788
02:13:08,800 --> 02:13:26,800
Das hat bestimmt irgendwelche theoretischen Five Head Vorteile weil es Compile Time Checks macht oder sonst was. Aber das sieht ja so um Längen hässlicher aus als einfachen stinknormaler Cast.

789
02:13:26,800 --> 02:13:44,800
Nee das machen wir nicht. Das ist mir so doch deutlich lieber. Also es ist nicht gecrashed. Ok wie kriege ich diesen Crampel zurück nach JavaScript?

790
02:13:44,800 --> 02:14:01,800
Und noch viel interessanter. Wie mache ich denn ein Sleep? Weil ich muss ein Sleep machen damit ich auf die Frames warten kann. C++ Sleep. Sleep for Milliseconds. Sleep Function. Hau zu Sleep.

791
02:14:01,800 --> 02:14:23,800
Was für ein Sleep? Alter ich hasse C++. Das ist so eine Drecks Sprache Alter. Ich mein warum kann man nicht einfach machen Sleep Klammer auf 1000 Klammer zu.

792
02:14:23,800 --> 02:14:33,800
Warum brauche ich zwei Header? Ok das lasse ich mir noch gefallen. Aber was ist das für eine Ausgeburt der Hölle? Guckt euch das an.

793
02:14:33,800 --> 02:14:52,800
Ich nehme einfach C Functions. Wobei Moment. Das ist ja Wasm. Da kann man bestimmt nicht so einfach Sleepen. Da gibt es bestimmt was hierfür.

794
02:14:52,800 --> 02:15:13,800
Asyncify. Geil. Geht da was von Sleep? Sleeping. M Scripten Sleep. Gibt es. Alles klar. Millisecund. Eine ordentliche Funktion wo man was mit anfangen kann.

795
02:15:13,800 --> 02:15:28,800
Wunderbar. Lassen wir mal weg. Ok es ist immer noch die Frage wie kriege ich diesen Campel in Browser? Was unser C++ Prof im ersten Semester hat zwei verschachtelte Vorschleifen an Sleep benutzt.

796
02:15:28,800 --> 02:15:42,800
Ja gut wenn man möchte dass man viel Akkuleistung oder viel Akku zieht weil man CPU verbraucht. Vor allem wie Sleepst du dann gleich lang auf unterschiedlich schnellen Rechner?

797
02:15:43,800 --> 02:15:52,800
Brauchst du einen Untermust? Dann musst du erstmal einen Mini Benchmark machen dass du weißt wie lange du sleepen musst auf den unterschiedlichen Rechner dass es gleich lang sleept.

798
02:15:52,800 --> 02:15:59,800
Der Typ war pepega. Ja glaube ich auch wenn du zwei Vorschleifen für einen sleepen hast.

799
02:16:00,800 --> 02:16:07,800
Können wir zurück zu Rust? Ich würde viel lieber Rust machen als C++ aber geht ja nicht. So wie kriege ich den Kram Javascript?

800
02:16:07,800 --> 02:16:32,800
Also M scripten call callback call Javascript. Interacting with code. M scripten run script. Aha alert hi das bringt mir nichts.

801
02:16:32,800 --> 02:16:44,800
Ich muss in das return. Nee das return bringt mir nichts. Ich brauche die einzelnen Frames so wie sie aus dem Decoder kommen. Ich kann nicht auf das return warten.

802
02:16:45,800 --> 02:16:55,800
Ich brauche hier einen callback. Also hier habe ich die stream done. Und hier brauche ich einen callback nach Javascript der dann im Javascript das Bild rendert irgendwo hier hin.

803
02:16:55,800 --> 02:17:02,800
Also kann man da irgendwie Parameter übergeben oder so?

804
02:17:02,800 --> 02:17:31,800
Ein Anwender Object da habe ich glaube ich keinen Zugriff drauf. Das muss ich alles über Javascript machen. EMJS. Kann man da Parameter übergeben?

805
02:17:32,800 --> 02:17:48,800
Was für Dinger. Ok das scheint gar nicht so einfach zu sein was zurück an Javascript zu schicken. Guck mal hier. Guck mal hier übergeben die Argumente. Alles klar.

806
02:17:48,800 --> 02:18:02,800
Guck mal das ist so abgedreht das mein Formatter kommt damit nicht klar. Guck mal der ist überfordert damit das kriegt er nicht hin.

807
02:18:02,800 --> 02:18:22,800
Ok also. I received. Was passiert denn jetzt? Ok ok ok. Machen wir es so. Buffer. Buffer. Und buffer size. So.

808
02:18:22,800 --> 02:18:37,800
Dann gehen wir hier in den Worker rein. Und sagen Function. Wir callen jetzt einfach mal. Call me. So es gibt ein Pointer gibt es. Und es gibt eine Size.

809
02:18:37,800 --> 02:18:56,800
Ok. Lock. Pointer. Und lock. Size. Ok ob das jetzt funktioniert da bin ich wirklich mal gespannt. So. Call me.

810
02:18:56,800 --> 02:19:09,800
Ne ne Moment. Dollar 0 Dollar 1. Ok das ist ja absolute Pfeif her der Sonntags hier. So jetzt sollte ich eigentlich hier auf die. Jetzt sollte ich den Pointer bekommen.

811
02:19:10,800 --> 02:19:20,800
Und ich sollte die Size von dem Array. Ich sollte den Pointer zum Array und ich sollte den Size zum Array. Wie ich dann natürlich den Pointer wieder in die Daten umwandle in Javascript.

812
02:19:20,800 --> 02:19:25,800
Das steht noch auf einem ganz anderen Platt. Jetzt hoffen wir erstmal das der Kram überhaupt kompiliert.

813
02:19:25,800 --> 02:19:53,800
Leute das sieht erstaunlich gut aus. Pointer ändert sich immer. Und die Size ist für jeden Frame ungefähr gleich. Das sieht erstaunlich gut aus muss ich sagen.

814
02:19:53,800 --> 02:20:12,800
So. Und wie kriege ich jetzt den Pointer zu einem. Ok. Uint 8 Array. M. Scripten.

815
02:20:12,800 --> 02:20:22,800
Uint 8 Array. M. Scripten.

816
02:20:23,800 --> 02:20:32,800
Uint 8 Array. M. Scripten.

817
02:20:32,800 --> 02:20:42,800
Uint 8 Array. M. Scripten.

818
02:20:43,800 --> 02:20:49,800
Uint 8 Array. M. Scripten.

819
02:20:49,800 --> 02:21:04,800
Pointer. Size. Sowas da. Ok. Alter ich bin Pfeifett. Leute bin ich Pfeifett. Ich habe meine Variablen exakt so benannt wie aus diesem Beispiel.

820
02:21:04,800 --> 02:21:20,800
Way too dank. Gut ich mein Pointer und Size so zu nennen wie Pointer und Size ist jetzt glaube ich auch nicht so magic.

821
02:21:20,800 --> 02:21:38,800
So. Buffer. So. Lock. Buffer. Hau ma ma ob das funktioniert. Wahrscheinlich. Wobei Crashen kanns Leute wir sind im JavaScript Land an dieser Stelle da kann man nicht mehr Crashen.

822
02:21:38,800 --> 02:21:49,800
Da kann man komische Fehler schmeißen aber man kann nicht mehr richtig Crashen. Wobei kann man mit WebAssembly im Browser auch nicht mehr. Out.

823
02:21:49,800 --> 02:22:03,800
So.

824
02:22:05,800 --> 02:22:06,800
Moment.

825
02:22:06,800 --> 02:22:25,800
Mal kurz rückgängig machen. Vielleicht ist der erste. Vielleicht ist der erste Callback. Vielleicht geht der nicht. Vielleicht geht der nicht. Also dass ich quasi noch checken muss wenn Size kleiner als Out das funst.

826
02:22:25,800 --> 02:22:43,800
Die ersten zwei Frames sind im Arsch. Die gehen einfach nicht. Aber das müsste doch eigentlich mein Decoder auch checken. Sekunde. Das müsste mein Decoder mitbekommen eigentlich.

827
02:22:43,800 --> 02:22:57,800
Kommt das mein Decoder nicht mit. Der Decoder sollte ein Fehler schmeißen und dann kann ich sagen wenn der Decoder ein Fehler schmeißt dann mach ich gar nicht erst weiter.

828
02:22:57,800 --> 02:23:11,800
Hier. Resource Temporary Not Available. Okay dann machen wir es einfach so wenn der Decoder.

829
02:23:11,800 --> 02:23:25,800
Ungleich Null ist. Dann machen wir auch Continue. Und machen das gar nicht weiter. So damit sollte sich dieser Fehler eigentlich erledigt haben.

830
02:23:25,800 --> 02:23:40,800
So. Ups. Lock. Buffer. Jetzt sollte es eigentlich dieses Problem nicht mehr geben.

831
02:23:40,800 --> 02:23:54,800
Schauen wir mal. Also ich hoffe jetzt drauf dass ich hier ein Uint8 also ein Byte Array kriege in JavaScript was ich später weiter verwenden kann. Aha. Siehste das funktioniert.

832
02:23:54,800 --> 02:24:10,800
Uint8 Array. Mit ganz viel Zeug drinnen. Das sieht ja im Prinzip schon mal gar nicht so schlecht aus. So ich vermute mal wir brauchen noch etwas mehr.

833
02:24:10,800 --> 02:24:25,800
Ich vermute mal wir brauchen auch noch die Frame Breite und wir brauchen auch die Frame Höhe wenn man das rendern wollen. Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript.

834
02:24:25,800 --> 02:24:40,800
Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript.

835
02:24:40,800 --> 02:24:55,800
Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript. Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript.

836
02:24:55,800 --> 02:25:15,800
Guck mal proaktives googeln vom Chat. Das finde ich gut. Mit dem Unterschied das ist kein RGB. Das ist juff 420 weil das ist ein Video. Die sind meistens nicht RGB weil es schneller auf der Grafikkarte so geht oder warum auch immer ehrlich gesagt keine Ahnung.

837
02:25:15,800 --> 02:25:30,800
Also Frame. So wir haben Breite Höhe. Kriegen wir noch. Wir machen jetzt mal wir machen jetzt da mal ein Object raus. So Buffer.

838
02:25:30,800 --> 02:25:46,800
Size brauchen wir eigentlich nicht mehr. Und Höhe. So das müssen wir dann nämlich returnen an unser Frontend irgendwie noch. Alles klar. So also das funktioniert ja an der Stelle soweit.

839
02:25:46,800 --> 02:26:01,800
Kann ich irgendwie mein Sündtags Highlight Ding. Ja ok. Jetzt das das checkt er so. So checkt das auch. So checkt das auch noch halbwegs. Aber Zeilenumbruch checkt er nicht mehr.

840
02:26:01,800 --> 02:26:27,800
Zeilenumbruch ist zu 6 Head. Das kriegt er nicht hin. Wir machen das so. Das sollte reichen. Ach so ja Dollar 2 und Dollar 3. Sehr schön. Alles klar. So wie kriege ich diesen Krempel jetzt in mein Frontend. Call me.

841
02:26:27,800 --> 02:26:47,800
Call me. FFmpeg Wasm weil FFmpeg Wasm für die Noobs ist. Nein also der Sinn ist davon FFmpeg Wasm rappt quasi die FFmpeg FFmpeg CLI das Ding hier im Endeffekt.

842
02:26:47,800 --> 02:26:59,800
Was ich machen will ist ich will ja wirklich auf die raw Bildinformation zugreifen. Ich will ja ein richtig ein echten Decoder verwenden dort einzelne Bilder rausholen und die einzelnen Bilder dann im Browser rendern.

843
02:26:59,800 --> 02:27:17,800
Ich will keinen CLI Rapper. Weil der Vorteil davon ist du kannst dann beispielsweise auch Inputs streamen. Zum Beispiel du lädst dir ein Video runter und während das runterlädt kannst du schon anfangen es zu rendern und so. Da gibt es viel mehr Möglichkeiten.

844
02:27:17,800 --> 02:27:31,800
Und es gibt noch nichts. Deswegen du findest dazu nichts im Internet. Deswegen habe ich mir gedacht das müssen wir mal selbst probieren. Okay also wie kriege ich denn jetzt diesen ganzen Krempel von hier. Postmessage brauche ich jetzt.

845
02:27:31,800 --> 02:27:55,800
Creating the Ur. Ah Chat das gucke ich mir gleich alles an. Ich vermute nur das es eh in die Hose geht weil das eben keine RGB Daten sind. Aber gucken wir mal weiter. Also jetzt muss ich erstmal den Kram zurück bekommen.

846
02:27:55,800 --> 02:28:18,800
Postmessage und zwar posten wir jetzt unser JavaScript Objekt. Posten wir da. Alles klar. So jetzt sind wir zurück im Index HTML. OnMessage komplett unsinnig. Den ganzen Krempel brauchen wir hier nicht mehr.

847
02:28:18,800 --> 02:28:45,800
Hier unten schmeißen wir auch weg. Postmessage hier. Log davon schmeißen wir auch weg. Brauchen wir alles nicht. Okay so jetzt bekommen wir das hier rein. Jetzt muss ich nochmal checken. Bekommen wir das wirklich auch hier rein. Data muss ich nochmal kompilieren. Eigentlich nicht. Ist ja nur Frontend Zeug.

848
02:28:45,800 --> 02:29:11,800
So jetzt sollte ich das nämlich in meinem Main Render Loop Ding im Browser raus bekommen das ganze. Bäm. Da ist das. Guck mal Buffer haben wir am Start. Die Breite haben wir am Start und die Höhe haben wir am Start. So jetzt brauchen wir eigentlich ein Canvas. Aber wie? Creating an Ur Repress. Representing contents of a typed Array.

849
02:29:11,800 --> 02:29:38,800
Und dann? Und was mache ich damit dann? Ich will es ja auf ein Canvas rendern. Das ist kein JPEG. Das ist ja kein JPEG. Das ist ähm. Bytes. Also Raw Bytes. Das ist kein encodedes. Das ist ein Video Frame die komponiert wird.

850
02:29:38,800 --> 02:29:52,800
Das ist ein Video Frame decoded. Blob URL generieren. Kann das Canvas überhaupt RGB Daten direkt rendern?

851
02:29:52,800 --> 02:30:20,800
Okay ich habe keine Ahnung wie das funktioniert. Oh was macht der Typ hier? I have Uint8 Array. RGB Daten auf Canvas. Der Chat ist hier der Google Meister wieder. Canvas Rendering. Put image data. Put image data.

852
02:30:20,800 --> 02:30:41,800
Put image data. Image data. Ja sowas in der Richtung will ich machen. Das sieht relativ ähnlich. Das sieht ähnlich aus was ich machen will.

853
02:30:41,800 --> 02:31:01,800
Image Data Spacey RGB Array Bytes Array. Ja das will ich machen. Genau das finde ich gut. Also brauche ich ein Canvas erst mal. Ein Format muss es haben. Ja es ist quasi in Bitmap wenn man es so will.

854
02:31:01,800 --> 02:31:15,800
Aber warum soll ich eine Blob URL erstellen wenn ich es auch so direkt ins Canvas rendern kann? Das ist doch dann viel besser.

855
02:31:15,800 --> 02:31:40,800
Das Problem ist es ist kein RGB. Es ist UF420 glaube ich zumindest. Weil es halt ein Video ist. Es ist UF420. Alter der Chat ist hier am Hyper googeln.

856
02:31:46,800 --> 02:32:06,800
Wow. Das ist aber nicht Javascript. Alter was? Nee nee ich mache jetzt erst mal das. Mal gucken was passiert wenn ich das rende. Wir brauchen auf jeden Fall ein Canvas.

857
02:32:06,800 --> 02:32:31,800
Also Canvas. Das Ding kriegt eine ID. Keck. Was? Ja Breite Höhe. Okay setzen wir es mal so. Breite 640 Höhe 360. So und jetzt wo sind wir hier?

858
02:32:31,800 --> 02:32:48,800
Create. Ganz Commons Alter wer braucht denn diesen ganzen Crap? Hier weg. So. Commons Overrated, Outdated, Chebaded. Einfach fehlerfrei programmieren easy.

859
02:32:48,800 --> 02:33:03,800
So okay. Hier ist eine Funktion. Okay zeig her.

860
02:33:03,800 --> 02:33:31,800
What? Was? Eigentlich brauch ich nur die hier. Aber WebGL bringt mir doch auch nichts. WebGL braucht doch bestimmt auch RGB. Oder?

861
02:33:31,800 --> 02:33:40,800
Kann Pixi JS das? Juff. Nicht Pixi. Pixi JS.

862
02:33:40,800 --> 02:34:08,800
Anscheinend. Also wenn ihr irgendwie eine Ahnung habt wie man das macht. Okay aber erstmal. Ich muss den Kram überhaupt erst noch in das Canvas reinbekommen.

863
02:34:08,800 --> 02:34:20,800
Also Canvas. Canvas. Canvas. Also Cacvice. Cacvice. WebGL müsste juff rendern können. Tja da müsste man nur raus bekommen. Wie? Ist doch Cacvice. Also jetzt brauchen wir das Cacvice.

864
02:34:20,800 --> 02:34:42,800
Let Canvas gleich document by ID. Cacvice. Kurz mal schauen ob das funktioniert was ich da mache. Canvas da ist es. Okay. Cacvice.

865
02:34:42,800 --> 02:34:52,800
Chat jetzt habe ich vergessen was ich gucken wollte. Das wollte ich machen. Das wollte ich machen hier aus dem Example.

866
02:34:53,800 --> 02:35:01,800
Hier ist ein Post dazu. Chat kann das mal einer aufmachen. Sieht aus wie ein Virus Post.

867
02:35:01,800 --> 02:35:15,800
Das ist quasi ein Custom Player in einem Canvas wenn man es so will. Okay. Also CTX. Und Image Data.

868
02:35:16,800 --> 02:35:22,800
Das ist ein 5 fat Post über Juff. Okay.

869
02:35:22,800 --> 02:35:40,800
Play with some serious WebGL image. Ja. Ja ist ja ist ist ja ja na klar alles.

870
02:35:40,800 --> 02:35:53,800
Dazu kann ich nur sagen. Überhaupt gar kein Ding ich mein solange man das Copy Pasten kann soll mir das Recht sein.

871
02:35:54,800 --> 02:36:00,800
Also wenn ich das einfach eins zu eins zu Copy Pasten kann ja dann dann ist okay.

872
02:36:00,800 --> 02:36:20,800
Ist okay. Cringe wer das nicht so schon kann ja finde ich auch.

873
02:36:20,800 --> 02:36:30,800
Chat ich habe mal eine blöde Frage. Angeblich ist Put Image Data eine Methode von Kontext 2D.

874
02:36:31,800 --> 02:36:40,800
Also quasi das da Put Image Data ist es aber nicht. Das definieren die irgendwie selbst. Das verstehe ich jetzt nicht.

875
02:36:40,800 --> 02:36:49,800
Ist das jetzt der API Beschreibung oder ist das oder ist das selbstgebauter Kram.

876
02:36:50,800 --> 02:36:57,800
Das check ich jetzt nicht. Okay. Also wir sagen jetzt mal eine Sache.

877
02:36:57,800 --> 02:37:18,800
Sollte er das nicht checken. Okay das ist Cringe weil kein Type Script ich weiß aber.

878
02:37:18,800 --> 02:37:30,800
Okay. Okay. Okay. Nice. Das genau das habe ich gesucht.

879
02:37:30,800 --> 02:37:47,800
Also On Message Image Data New Image. Was Image Date. Nee das gibt es das gibt es nicht. New Image. Image Data ja.

880
02:37:48,800 --> 02:37:54,800
Ich kann sagen. Ja mein Autocomplete hat mich gebadet. Array Höhe Breite. Okay.

881
02:37:54,800 --> 02:38:04,800
Also im Prinzip. Im Prinzip ist es quasi. Destructen wir mal.

882
02:38:04,800 --> 02:38:23,800
Buffer. Size. Nee. Nee. Nee. Gebe ich Size zurück. Width. Height. Auch nochmal richtig schreiben. So. Buffer. Ja. Okay.

883
02:38:23,800 --> 02:38:36,800
Um es ohne TS Type zu bekommen kann man JS Docs Comment rübersetzen. Oh Fifeheader Kram. Massive. Extremer Six Kopf. Ja. Und jetzt.

884
02:38:36,800 --> 02:38:56,800
Eieiei. Guckt euch das mal an. Type Annotations mit. Mit Zeug hier. Aber Put Image Data gibt es angeblich gar nicht. Warum gibt es Put Image Data nicht. Put Image Data ist gebadet.

885
02:38:56,800 --> 02:39:12,800
Ach so. Ich muss Canvas Rendering Content. Ah. Put Image Data. Alles klar. Guck mal hier. Hier lernt man noch was.

886
02:39:12,800 --> 02:39:26,800
Also. Put Image Data. Null. Null ist wahrscheinlich wo er das Drawen soll. Leute wenn das. Wenn das geht. Und selbst. Also ohne Scheiß. Das kann nicht funktionieren weil es ist kein RGB. Da kommt das jetzt mit Grünstich raus oder so.

887
02:39:26,800 --> 02:39:43,800
Aber wenn das jetzt ein Bild rendert was nach einem Bild aussieht. Dann flippe ich aus. Wenn das wirklich so. In Anführung des Easy jetzt funktioniert. Auch wenn es nicht easy war. Aber ohne größere Probleme funktioniert dann. Dann beiß ich mir quasi sprichwörtlich in Arsch.

888
02:39:43,800 --> 02:40:00,800
Was habe ich? Was habe ich falsch? Data ist not defined. Ok. Ach hier. Was? Uncored. Worker on message.

889
02:40:00,800 --> 02:40:16,800
The provided value is not of type image data settings.

890
02:40:16,800 --> 02:40:44,800
The provided value is not of type image data settings. Moment.

891
02:40:44,800 --> 02:41:00,800
Kommt da jetzt überhaupt ein Buffer raus?

892
02:41:01,800 --> 02:41:04,800
Kommt ein Buffer raus.

893
02:41:04,800 --> 02:41:23,800
Ok. Wie macht man das? Da fehlt doch bestimmt noch was. Ok. Also SWNumber ist ja der Meinung. Ich habe ein Uint. Moment ich brauche ein Uint8 clamped Array. Ein was für ein Ding? Bitte schön. Ein was? Was ist denn der Unterschied zu meinem Uint8 Array?

894
02:41:23,800 --> 02:41:48,800
Ok. SWNumber. Ok. Width, Height, Settings. Ok. Was brauche ich ein Uint8 clamped Array? Obviously. Kann man das wenigstens constructen aus dem alten?

895
02:41:48,800 --> 02:42:05,800
Kann ich sowas hier sagen? Wenigstens. Geht das? Keine Ahnung. Keck weh heißt es jetzt.

896
02:42:05,800 --> 02:42:19,800
Das ist aber bestimmt ineffizient. Das sollte ich gleich zurückliefern hier. Eigentlich könnte ich doch das gleich hier machen oder?

897
02:42:19,800 --> 02:42:34,800
Sehe ich das richtig? Das müsste doch eigentlich auch funktionieren so. Da kann ich mir das nämlich hier sparen.

898
02:42:34,800 --> 02:42:50,800
Ok. Buffer raus hier. Es gibt keine Fehler. Es gibt aber auch kein Bild.

899
02:42:50,800 --> 02:43:04,800
Muss man noch CTX Draw oder sowas machen? Draw? Gibt es irgendwie Draw Image oder sowas?

900
02:43:04,800 --> 02:43:20,800
Leute ich check diese Hilfeseite nicht. Da steht noch Keck weh. Oh. Fuck.

901
02:43:20,800 --> 02:43:41,800
Fail to construct image data. The provided value must not be shared at worker. Was soll mir das sagen?

902
02:43:41,800 --> 02:43:57,800
Provided value must not be shared. Was?

903
02:43:57,800 --> 02:44:13,800
Ok. U8 int clamped. Wie heißt dieser Kempel überhaupt? Wie heißt das? U int 8 clamped Array habe ich noch nie gehört.

904
02:44:13,800 --> 02:44:27,800
Must not be shared. Ja. Must not be shared.

905
02:44:27,800 --> 02:44:44,800
If what you have are raw, then all you need to create from U int 16 Array. Ja was denn du? Aha. Ok. Man muss diesen Müll irgendwie erstellen. Aber man muss das hier drinnen direkt newer.

906
02:44:44,800 --> 02:44:59,800
Ok. Ok. Ok. Dann machen wir das jetzt so. Also das ist ein U int 8 Array. Kein clamped Array. Weil. Weil. So. Buffer.

907
02:44:59,800 --> 02:45:19,800
Ja was script shit. Fuck. Was? The input data length is not equal to 4 x width x height.

908
02:45:19,800 --> 02:45:41,800
Das kann schon sein, weil das ein anderes Format ist. Der will rgba vermutlich. Ja. Und ich hab. Ich hab weder. Ich hab weder.

909
02:45:41,800 --> 02:46:06,800
Warte mal. Ok. Wir googeln mal. Juf. Canvas. JS class to draw. Juf image frame buffers to. Das klingt doch schon mal gut. Probier mal buffer. Buffer? Nee. Oder? Nee.

910
02:46:06,800 --> 02:46:16,800
Nee. Nein. Was not be shared. Nee. Nee. Ist schon richtig so.

911
02:46:16,800 --> 02:46:37,800
Lock. Guck mal hier. Lock. Buffer. Buffer. Ja. Das hat gar keine Buffer Methode. Das ist ein Array. Das hat keine Buffer Methode.

912
02:46:37,800 --> 02:46:48,800
Das gibt's nicht. So. Also. Ok. JS class to draw. Ok. Stackoverflow. Wir fragen jetzt Stackoverflow.

913
02:46:48,800 --> 02:47:09,800
How to draw Juf image to HTML Canvas. I found this gist. Aha. Function. Juf to Canvas. Put image data. Das ist gut. Das ist genau das was ich brauche.

914
02:47:09,800 --> 02:47:25,800
Es ist halt dumm dass man das umwandeln muss. Das ist sehr rechenintensiv denke ich mal. Ok. Also.

915
02:47:25,800 --> 02:47:46,800
Ach du meinst ich muss sowas hier machen. Ok. Das probieren wir jetzt noch einmal. Nope. Nope. Nope. Das interessiert ihr nicht.

916
02:47:46,800 --> 02:48:01,800
Das interessiert ihr nicht. JavaScript Zeug. Also wir machen jetzt mal das da oben drüber. Wir machen das.

917
02:48:01,800 --> 02:48:17,800
Wir machen das. Wie macht denn der Typ das hier oben drüber. Guck mal. Create image data. Output data. Output data. Wo kommt denn Output data überhaupt her. Ach da.

918
02:48:17,800 --> 02:48:32,800
Output. Create image data. Ah. Das ist quasi ein leeres mit der Größe. Und dann. Und dann schreibt er das da rein.

919
02:48:32,800 --> 02:48:47,800
Doch. Doch. Ich kann das mit FFmpeg konvertieren. Aber das ist das ist nicht nicht so schön zu machen in FFmpeg. Ja. Ja. Ja. Das geht.

920
02:48:47,800 --> 02:49:01,800
Ok. Ich will erstmal überhaupt was rendern. Ganz ehrlich. Der Rest interessiert mich jetzt erstmal wenig. Ich will einfach dass ich irgendwas tut auf dem Bildschirm. Weil das wäre mega geil wenn das einfach irgendwas rendert.

921
02:49:01,800 --> 02:49:19,800
You've to canvas. Wie ruft man das jetzt auf. So. Buffer. Ja wahrscheinlich. Ok. Wits. Heiz. Und jetzt. Canvas. Canvas heißt glaube ich bei mir einfach Canvas.

922
02:49:19,800 --> 02:49:30,800
Wir machen nochmal was anderes. So mal um zu gucken ob es prinzipiell funktioniert überhaupt mein Canvas. Nicht dass es was rendert und ich sehe. Gar nichts.

923
02:49:30,800 --> 02:49:51,800
Ctx. Fill. Fill. Reckt. Null. Null. Keine Ahnung. 200 200. Wie stellt man hier die Farbe ein. Ok. Ist ok. Es funktioniert.

924
02:49:51,800 --> 02:50:01,800
Musst du nicht warten bis alles da ist. Nee ich will ja hier das einzelne Bild rendern. Also ich bekomme aus dem Decoder immer ein Frame. Und den will ich direkt rendern.

925
02:50:01,800 --> 02:50:23,800
Es geht. Es rendert was Leute. Es kackt zwar ab aber es funktioniert. Es rendert mal ein Video. Ich mein viel zu schnell. Viel zu schnell. Holy fuck alter. Das tut mir die Hand fehl.

926
02:50:23,800 --> 02:50:35,800
Ja ich habe kein sleep drin. Das ist fünf. 5.000.000.000.000.500.000 fps. Guckt euch das an.

927
02:50:35,800 --> 02:50:42,800
Es braucht aber einfach 70 prozent CPU Last. Ok. Wir müssen auch ein sleep reinhauen Leute. Aber. Aber ohne Scheiß.

928
02:50:42,800 --> 02:50:44,800
Das Hier ist Keine Sonderlich

929
02:50:48,560 --> 02:50:50,560
Also das Hier ist Keine Sonderlich

930
02:50:51,640 --> 02:50:54,760
Efficient Methode das Zu Rändern Glaube Ich

931
02:50:56,080 --> 02:51:01,900
Gibt es nicht die möglichkeit IrGendwie Juff mit Webgl das hatten wir doch das hatten wir hier diesen Komischen

932
02:51:03,080 --> 02:51:08,040
Wo war dieser leute wo war dieser 5 header wo war dieser 5 header blog post

933
02:51:08,040 --> 02:51:16,360
Hatte noch Jemand Irgendjemand aus so ein mega 5 header blog post gepostet Hier das Da das Machen wir Jetzt nicht Aber

934
02:51:17,800 --> 02:51:25,080
Oder Haben Die was fertig ist am ende was man Einfach Copy Pasten Kann Hier Einfach Copy Pasten easy Copy Pasten

935
02:51:26,200 --> 02:51:28,200
Complete Code Jawoll

936
02:51:28,840 --> 02:51:30,840
Massive Copy Past

937
02:51:30,840 --> 02:51:37,840
Massive Copy Past Einfach von dem typ Ich habe Keine Ahnung was der Typ Da Macht Aber

938
02:51:46,280 --> 02:51:53,280
Geht nicht FPS angabe statt sleep Nein Du musst den FFm pack Selbst Gucken wie lange hat die loop Gedauert und Dann Musst Du Sleepen

939
02:51:53,280 --> 02:51:58,280
Aber wir Machen Es Mal Ganz Wir Machen Es Mal Pima Daumen Jetzt

940
02:51:58,560 --> 02:52:01,880
Video ist mit 30 FPS

941
02:52:03,360 --> 02:52:08,000
1 Durch 30 also 33 Millisekunden Sleepen MüsSen wir Jetzt

942
02:52:09,600 --> 02:52:11,600
33 Millisekunden Sleepen

943
02:52:11,960 --> 02:52:17,840
Ich meine Eigentlich ist es dumm 33 Millisekunden zu sleepen weil wir MüsSen Eigentlich

944
02:52:17,840 --> 02:52:19,840
Einen frame Rendern

945
02:52:24,040 --> 02:52:31,320
Dann Den Nächsten Dann Sleepen und Im Hintergrund schon Den Nächsten frame Rendern

946
02:52:32,520 --> 02:52:34,520
Aber

947
02:52:34,520 --> 02:52:36,520
Nee

948
02:52:38,320 --> 02:52:42,800
Sleepen Mal nur 20 Millisekunden okay geht nicht

949
02:52:42,800 --> 02:52:48,800
Warum Ah doch geht?

950
02:53:02,040 --> 02:53:05,120
Wobei Nä Das ist Dann bringt Er nur am Ersten frame was

951
02:53:05,120 --> 02:53:09,800
Okay also sleep make

952
02:53:18,120 --> 02:53:20,120
Okay

953
02:53:20,800 --> 02:53:22,800
Funktioniert

954
02:53:23,600 --> 02:53:25,400
So Mal Gucken Jetzt Sollte Es Ja Nicht mehr

955
02:53:25,400 --> 02:53:27,400
So mal gucken jetzt Sollte Es Ja Nicht mehr

956
02:53:27,360 --> 02:53:29,360
So mal gucken jetzt Sollte Es Ja Nicht mehr

957
02:53:30,400 --> 02:53:32,400
So mal gucken jetzt Sollte Es Ja Nicht mehr

958
02:53:32,400 --> 02:53:34,800
So mal gucken Jetzt Sollte Es Ja Nicht mehr

959
02:53:34,800 --> 02:53:39,720
Oh crash was an court please compile your program is a sync support

960
02:53:44,120 --> 02:53:49,480
Wie macht man das m scripten a sync support a

961
02:53:51,600 --> 02:53:53,600
Syncify

962
02:53:53,600 --> 02:54:00,440
Ja Ja Ja Ja Minus es a Syncify okay das Muss ins make file

963
02:54:01,440 --> 02:54:03,440
Wo ist unser make file?

964
02:54:04,840 --> 02:54:07,920
Chat Irgendjemand Planen wo das hin Muss Einfach Hier rein

965
02:54:10,960 --> 02:54:12,960
Einfach Hier rein so

966
02:54:17,600 --> 02:54:19,600
anscheinend

967
02:54:19,600 --> 02:54:21,600
Ich

968
02:54:22,000 --> 02:54:25,440
Dachte auch nicht dass wir das bis Hierhin Schaffen ganz Ehrlich das Funktioniert

969
02:54:26,080 --> 02:54:29,200
Ausgesprochen gut das Funktioniert Ausgesprochen gut also

970
02:54:29,720 --> 02:54:36,040
Wisst ihr was das geile ist es gibt nichts im internet wo das Jemand Mal gemacht hat das ist wirklich hier pleading edge shit

971
02:54:37,840 --> 02:54:43,600
Out Hey das sieht Jetzt Ziemlich Ziemlich legit aus oder

972
02:54:43,600 --> 02:54:48,600
Mlg legit

973
02:54:55,240 --> 02:54:59,120
So wir Machen Mal Ein, bisschen ein Längeres video und Gucken Ob es uns Dann um die Ohren Fliegt

974
02:54:59,920 --> 02:55:03,280
20 prozent cpu Ja Aber 640 x 360

975
02:55:05,600 --> 02:55:08,720
Wir Machen Mal wir Machen Mal Anderes video youtube

976
02:55:08,720 --> 02:55:12,640
Wehendungscase wir Laden das ding Mal in 720p Runter

977
02:55:14,200 --> 02:55:16,200
Just

978
02:55:18,600 --> 02:55:20,600
Factory

979
02:55:21,840 --> 02:55:24,160
Video Euler ja sehr gut

980
02:55:26,000 --> 02:55:30,480
square

981
02:55:33,940 --> 02:55:35,940
Statistisch

982
02:55:35,940 --> 02:55:41,060
Mal gucken, ob es das überhaupt abspielen kann oder ob das YouTube-Encoding zu Pepega

983
02:55:41,060 --> 02:55:42,060
ist.

984
02:55:42,060 --> 02:55:49,580
Ob der das überhaupt da reinladen kann in den Browser?

985
02:55:49,580 --> 02:55:50,580
Okay.

986
02:55:50,580 --> 02:55:53,580
So funktioniert.

987
02:55:53,580 --> 02:55:57,420
Ah, da ruckelt es jetzt aber schon ein bisschen.

988
02:55:57,420 --> 02:55:58,780
Das lieb ich jetzt zu lange.

989
02:55:58,780 --> 02:56:02,380
Aber mal ohne Scheiß, das ist schon in Ordnung.

990
02:56:02,380 --> 02:56:04,620
Ach Moment, da fehlt ja die Hälfte vom Bild.

991
02:56:04,620 --> 02:56:06,620
Ja, vielleicht sollte man das hier machen.

992
02:56:06,620 --> 02:56:07,620
Canvas Width Height.

993
02:56:07,620 --> 02:56:08,620
Ah, viel besser.

994
02:56:08,620 --> 02:56:09,620
Viel besser.

995
02:56:09,620 --> 02:56:10,620
Excellent.

996
02:56:10,620 --> 02:56:11,620
Exquisite 5-Header-Gramm.

997
02:56:11,620 --> 02:56:12,620
Hey, guck mal.

998
02:56:12,620 --> 02:56:13,620
Jetzt sind wir schon mal 50% CPU-Last.

999
02:56:13,620 --> 02:56:14,620
Wo mache ich denn hier eigentlich das?

1000
02:56:14,620 --> 02:56:15,620
Ah, hier.

1001
02:56:15,620 --> 02:56:16,620
Ah, hier.

1002
02:56:16,620 --> 02:56:17,620
Ah, hier.

1003
02:56:17,620 --> 02:56:18,620
Ah, hier.

1004
02:56:18,620 --> 02:56:19,620
Ah, hier.

1005
02:56:19,620 --> 02:56:34,620
Ah, hier.

1006
02:56:34,620 --> 02:56:35,620
Ah, hier.

1007
02:56:35,620 --> 02:56:52,620
Ah, hier.

1008
02:56:52,620 --> 02:56:53,620
Ah, hier.

1009
02:56:53,620 --> 02:56:54,620
Ah, hier.

1010
02:56:54,620 --> 02:57:06,620
Ah, hier.

1011
02:57:06,620 --> 02:57:11,620
Ah, hier.

1012
02:57:11,620 --> 02:57:16,620
Ah, hier.

1013
02:57:16,620 --> 02:57:21,620
Ah, hier.

1014
02:57:21,620 --> 02:57:27,620
Ah, hier.

1015
02:57:27,620 --> 02:57:38,620
Ah, hier.

1016
02:57:38,620 --> 02:57:45,500
Ah, hier.

1017
02:57:45,500 --> 02:57:47,940
Ah, hier.

1018
02:57:47,940 --> 02:57:57,260
Das muss ich machen AV3 Waffe wahrscheinlich

1019
02:57:57,260 --> 02:58:13,300
blutet lull komm wir lassen ihn mal so schnell rendern wie geht

1020
02:58:13,300 --> 02:58:28,500
kann ich dem kann ich den parameter übergeben ok string in sleep ms ms

1021
02:58:28,500 --> 02:58:33,700
milli milliseconds da muss ich nicht immer neu kompilieren welche sleep anpassen will

1022
02:58:33,700 --> 02:58:46,540
so werker im moment ich kann mich schon immer richtig konzentrieren soll ich

1023
02:58:46,540 --> 02:58:54,900
das auf auf shit hab pushen dann run ich kann es kann ich auf shit hab pushen weil

1024
02:58:54,900 --> 02:59:00,940
ich kein weil ich nicht eingeloggt bin hier ich habe meinen key und so aber ich

1025
02:59:00,940 --> 02:59:06,460
habe ich bin ich eingeloggt auf dem rechner ok zwanzig sekunden

1026
02:59:06,460 --> 02:59:13,420
warum liebst du in deinem c plus plus er hält beim rennen an der frames

1027
02:59:13,420 --> 02:59:23,540
es gibt ihn ja was kriegt kein sleep

1028
02:59:23,540 --> 02:59:33,180
ich könnte promise machen mit set timeout auf den ich warte oder sowas ich

1029
02:59:33,180 --> 02:59:34,580
könnte mir selbst ins lieb basteln

1030
02:59:34,580 --> 02:59:53,340
nee sowas gibt es nicht oder in den ne das ist ja was kreppter ist so ok zack alles

1031
02:59:53,340 --> 02:59:58,380
ist falsche so ich sollte ich sollte keine memory leaks

1032
02:59:58,380 --> 03:00:10,380
mehr haben zumindest jetzt was war das macht er dafür dinger

1033
03:00:10,380 --> 03:00:25,860
ich habe kein memory leak mehr aber es kackt ziemlich ab

1034
03:00:25,860 --> 03:00:34,580
ich weiß woran es liegt leute ich weiß woran es liegt ich mache free ich mache

1035
03:00:34,580 --> 03:00:38,460
das free form sleep also das hier ist ja bestimmt asynchron

1036
03:00:38,460 --> 03:00:43,460
der callback und ich friere den buffer ich friere wahrscheinlich den buffer

1037
03:00:43,460 --> 03:00:48,980
während ich im java script noch am rendern bin gehe ich jetzt einfach mal

1038
03:00:48,980 --> 03:01:05,340
davon aus da so ein kleines sleep ist nicht verkehrt

1039
03:01:05,340 --> 03:01:21,940
nee daran liegt es nicht vielleicht dauert das rendern zu lang

1040
03:01:21,940 --> 03:01:26,860
das ist das hat 100 probas mit dem free zu tun weil wenn ich das free weg mache

1041
03:01:26,860 --> 03:01:32,220
guck mal wenn ich das free weg mache da gibt es kein problem

1042
03:01:32,220 --> 03:01:39,460
ja das sind die battlefield 2042 effekte genau die haben einfach renten die haben

1043
03:01:39,460 --> 03:01:44,940
einfach verbackten renderer

1044
03:01:44,940 --> 03:01:48,540
du hast recht nenas das ist eigentlich viel sinnvoller

1045
03:01:48,540 --> 03:01:52,260
nee kann ich nicht die frames sind unterschiedlich groß

1046
03:01:52,260 --> 03:01:57,820
oder sind sie theoretisch schon

1047
03:01:57,820 --> 03:02:01,900
wobei nee die frames sind immer gleich groß die frames sind immer gleich

1048
03:02:01,900 --> 03:02:03,980
du hast recht ich kann es am anfang anlegen

1049
03:02:03,980 --> 03:02:13,740
guck kaum ist das free weg habe ich jetzt habe ich aber memory leaks

1050
03:02:13,740 --> 03:02:17,100
jetzt habe ich memory leaks guck jetzt habe ich memory leaks

1051
03:02:17,100 --> 03:02:37,380
ist das free was ich hier ja ja das ist free das ist free was das für eine

1052
03:02:37,380 --> 03:02:38,380
bescheuerte anzeige

1053
03:02:38,380 --> 03:02:52,340
null von meine ram auslastung geht umgedreht hack wait

1054
03:02:52,340 --> 03:02:55,980
aber du hast recht ja wir machen das so das ist korrekt das ist sehr gute sehr gute

1055
03:02:55,980 --> 03:02:56,980
idee

1056
03:02:56,980 --> 03:03:10,540
jav3 buffer und die buffersize

1057
03:03:10,540 --> 03:03:13,820
die buffersize legen wir also es legen wir einmalig an

1058
03:03:13,820 --> 03:03:19,060
und zwar so wir haben jetzt ja hier keinen zugriff auf frame

1059
03:03:19,060 --> 03:03:25,620
so was das verwirrt mich sonst wir haben keinen zugriff auf frame aber wir haben zugriff

1060
03:03:25,620 --> 03:03:31,860
auf den context da muss ich aber jetzt erst noch sagen

1061
03:03:31,860 --> 03:03:37,740
av stream info oder sowas sekunde das haben wir doch hier irgendwo

1062
03:03:37,740 --> 03:03:43,300
find stream info find stream info

1063
03:03:43,300 --> 03:03:57,820
format ctx null pointer ja sonst lädt er das ja irgendwie nicht

1064
03:03:57,820 --> 03:03:59,940
warum das 13 gigabyte ram verbraucht ist der browser

1065
03:03:59,940 --> 03:04:01,260
komm wenn ich den browser schließe

1066
03:04:01,260 --> 03:04:11,280
ja ich mein ok der gibt erst wieder frei wenn angefordert wird aber das liegt das liegt

1067
03:04:11,280 --> 03:04:14,220
nur nur am browser und meinen komischen memory leaks hier

1068
03:04:14,220 --> 03:04:19,940
so also weiter im text

1069
03:04:19,940 --> 03:04:29,980
so stream format gibt sich es gibt ctx format witz ach nee

1070
03:04:29,980 --> 03:04:30,980
stream stream

1071
03:04:30,980 --> 03:04:41,820
wie kriege ich jetzt die breite raus

1072
03:04:41,820 --> 03:04:47,460
das geht das kriegt man raus das kriegt man raus bevor man

1073
03:04:47,460 --> 03:04:50,220
das kriegt man raus bevor man den ersten frame decoded

1074
03:04:50,220 --> 03:05:02,540
ja ich mein das ist format stream

1075
03:05:02,540 --> 03:05:14,500
fmt fmt fmt format input format

1076
03:05:14,500 --> 03:05:24,340
nee pixel

1077
03:05:24,340 --> 03:05:31,460
das kriege ich schon raus bevor stream codec parameter vielleicht

1078
03:05:31,460 --> 03:05:34,140
stream codec

1079
03:05:34,140 --> 03:05:48,140
ach ja ja ok das ist gut minus

1080
03:05:48,140 --> 03:05:49,140
codec parameter

1081
03:05:49,140 --> 03:05:54,980
x fmt format

1082
03:05:54,980 --> 03:05:59,060
nee das ist was anderes das ist ein anderes format

1083
03:05:59,060 --> 03:06:05,620
ach du scheiße man pixel format

1084
03:06:05,620 --> 03:06:06,860
ok das haben wir

1085
03:06:06,860 --> 03:06:13,380
oder kann ich codec

1086
03:06:13,380 --> 03:06:18,900
aber wie kriege ich denn jetzt die höhe und die breite raus

1087
03:06:18,900 --> 03:06:31,100
ach so ok alles gut

1088
03:06:31,100 --> 03:06:35,100
breite höhe

1089
03:06:35,100 --> 03:06:38,300
so und jetzt legen wir das nämlich nur einmal an das ist viel besser der chat ist wieder

1090
03:06:38,300 --> 03:06:42,820
richtig feifett gewesen jetzt jetzt haben wir keine memory leaks

1091
03:06:42,820 --> 03:06:47,340
es geht schneller und keine pixel fehler die frage ist nur ob es funktioniert

1092
03:06:47,340 --> 03:06:52,580
six headchat wieder

1093
03:06:52,580 --> 03:07:00,460
aha und es ist auch gleich in der ecke schneller

1094
03:07:00,460 --> 03:07:07,140
das rockerl am anfang ist wohl normal weil da irgendwelche frames verbackt sind

1095
03:07:07,140 --> 03:07:21,340
ich meine ganz ehrlich das läuft echt brauchbar gel

1096
03:07:21,340 --> 03:07:27,140
das läuft wirklich brauchbar machen wir mal

1097
03:07:27,140 --> 03:07:31,700
ok ich muss nicht neu kompilieren hier wir machen mal wir machen mal kein wir

1098
03:07:31,700 --> 03:07:35,020
machen mal kein sleep es wird es wird nicht gesleept

1099
03:07:35,020 --> 03:07:38,900
es gibt kein sleep

1100
03:07:38,900 --> 03:07:40,780
ok jetzt rennt er natürlich ein bisschen schneller

1101
03:07:40,780 --> 03:07:47,660
er rennt jetzt schneller als es fps hat dementsprechend skippt er halt

1102
03:07:47,660 --> 03:07:50,060
oder sieht so aus als würde das skippen so

1103
03:07:50,060 --> 03:07:56,460
einfach refreshen geht nicht weil er nicht im sleep hängt da kackt er ab jetzt dabei

1104
03:07:56,460 --> 03:08:03,940
mal zumindest zumindest mal kurz eine millisekunde sleepen sollte ich

1105
03:08:03,940 --> 03:08:14,260
die sekunde sleepen ja also

1106
03:08:14,260 --> 03:08:17,260
ja man kann das noch beliebig man kann das noch beliebig optimieren ja

1107
03:08:17,260 --> 03:08:27,020
ffmpeg performance zum cli wüsste ich jetzt habe ich keine gute idee wie man das

1108
03:08:27,020 --> 03:08:28,020
vergleichen könnte

1109
03:08:28,020 --> 03:08:37,180
da müsste ich mir was überlegen machen wir mal to do benchmark vergleich

1110
03:08:37,180 --> 03:08:38,180
irgendwie sowas

1111
03:08:38,180 --> 03:08:47,780
ja das geht das hat ffmpeg drinne stehen das muss man sich ausrechnen

1112
03:08:47,780 --> 03:08:53,420
das ist das geht ja ja das ist aber ein bisschen painstamp du musst gucken wie viel die zeit

1113
03:08:53,420 --> 03:08:57,540
ist und dann musst du es abziehen vom schleifen durchlauf und dann musst du es ausrechnen

1114
03:08:57,540 --> 03:08:58,540
aus den frames

1115
03:08:58,540 --> 03:09:20,180
ich glaube eher das problem ist dass bei zum beispiel ok benennen wir das mal kurz um

1116
03:09:20,180 --> 03:09:28,580
das hier ist 720p mp4 und jetzt machen wir noch youtube download jetzt jetzt jetzt machen

1117
03:09:28,580 --> 03:09:29,580
wir noch

1118
03:09:29,580 --> 03:09:31,580
den comments

1119
03:09:31,580 --> 03:09:42,300
jetzt machen wir noch hier die fullad version

1120
03:09:42,300 --> 03:09:50,100
was ist denn hier der unterschied leute av01 und avc das ist irgendein anderer codec oder

1121
03:09:50,100 --> 03:09:53,700
avc brauchen wir

1122
03:09:53,700 --> 03:10:01,740
und das ist oh leute jetzt wirds heftig das ist nicht nur 1080p sondern auch 60 fps jetzt

1123
03:10:01,740 --> 03:10:10,140
ok das kriegen wir nicht flüssig hin

1124
03:10:10,140 --> 03:10:18,900
das kriegen wir höchstwahrscheinlich nicht flüssig hin

1125
03:10:18,900 --> 03:10:21,220
sehe ich nicht von aus dass das funktioniert

1126
03:10:21,220 --> 03:10:24,980
vielleicht wenn wir das rendern schneller hinbekommen weil das rendern ist schon ziemlich

1127
03:10:24,980 --> 03:10:25,980
langsam

1128
03:10:25,980 --> 03:10:39,460
guck mal das spielt das noch nicht mal ab

1129
03:10:39,460 --> 03:10:43,980
das spielt das nicht ab weil das der falsche codec ist weil youtube wieder richtig hardcore

1130
03:10:43,980 --> 03:10:53,740
ppega ist mit ihren codecs das ist vp9 ich hab doch vp nicht vp9 runtergeladen oder

1131
03:10:53,740 --> 03:10:56,180
ich hab oh ich hab vp9 runtergeladen ich hab mich verguckt

1132
03:10:56,180 --> 03:11:10,140
ja kein wunder vp9 ist nicht rein kompiliert 299 brauche ich

1133
03:11:10,140 --> 03:11:15,820
ja das kann man alles schon noch optimieren ja das das synchronisieren und so

1134
03:11:15,820 --> 03:11:19,660
es gibt also ein paar optimierungsdinger ja zum beispiel dass wir jeden dass wir den dass

1135
03:11:19,660 --> 03:11:24,300
wir jeden frame vom internen buffer weil auch eine sache die ich auch nicht schön finde

1136
03:11:24,300 --> 03:11:30,940
ist guck mal wir kopieren uns die image daten von jedem frame aus dem internen buffer in

1137
03:11:30,940 --> 03:11:34,020
diesen copy buffer

1138
03:11:34,020 --> 03:11:44,300
das bräuchten wir wahrscheinlich gar nicht man kriegt es bestimmt auch so nach ins javascript

1139
03:11:44,300 --> 03:11:48,420
das muss man halt basteln ja also muss man hier

1140
03:11:48,420 --> 03:11:54,300
so jetzt laden wir das mal gucken was sache ist

1141
03:11:54,300 --> 03:12:05,940
das müssen wir umbelennen das müssen wir umbelennen das ist 1080p 60 60 das andere

1142
03:12:05,940 --> 03:12:13,140
ist 720p 720p 720 30

1143
03:12:13,140 --> 03:12:17,820
so mal gucken ob es das halbweg flüssig hinkriegt aber ich glaube nicht

1144
03:12:17,820 --> 03:12:35,420
das ist nicht aber ich meine das ist jetzt nicht es fehlt aber nicht so viel muss man

1145
03:12:35,420 --> 03:12:38,420
sagen ja

1146
03:12:38,420 --> 03:12:50,980
das ist so halbe speed halbe speed würde ich sagen 70 prozent speed vielleicht

1147
03:12:50,980 --> 03:12:51,980
aber es ist ok

1148
03:12:51,980 --> 03:13:08,820
das das lastet ihn aus da ist schluss wir können mal was ausprobieren mal gucken ob

1149
03:13:08,820 --> 03:13:09,820
er

1150
03:13:09,820 --> 03:13:23,460
ne ne ich hab den sleep auf ähm auf einer millisecunde

1151
03:13:23,460 --> 03:13:27,980
ist das bottleneck jetzt das js zum rendern oder das c++ zum decoden ehrlich gesagt ich

1152
03:13:27,980 --> 03:13:34,820
glaube das c++ zum decoden

1153
03:13:34,820 --> 03:13:37,660
das könnte man ausprobieren indem man das rendern einfach weglässt

1154
03:13:37,660 --> 03:13:44,780
ja das mit der gpu das müsste man ausprobieren das also ich vermute mal das rendern im c++

1155
03:13:44,780 --> 03:13:48,060
ist das problem das könnte man ausprobieren

1156
03:13:48,060 --> 03:13:52,620
wisst ihr wie man das ausprobieren könnte ich habe eine idee

1157
03:13:52,620 --> 03:14:04,340
wir machen uns jetzt in 20 20 sec 1080 60 und dann stoppen wir einfach die zeit wie

1158
03:14:04,340 --> 03:14:15,300
lange das durchläuft ohne zu rendern mp4

1159
03:14:15,300 --> 03:14:16,500
auf macht 20 sekunden

1160
03:14:16,500 --> 03:14:29,340
der ist ganz schön ich meine der decoded und encoded jetzt auch gleich

1161
03:14:29,340 --> 03:14:33,220
also was wir machen können ist das hin und her schicken zwischen webworker und so ist

1162
03:14:33,220 --> 03:14:37,820
auch doof gibt es nicht irgendein globales array wo ich was reinschreiben könnte dieses

1163
03:14:37,820 --> 03:14:39,340
post message ist auch nicht so geil

1164
03:14:39,340 --> 03:14:43,860
ne ne copy stimmt ich hätte copy machen können du hast recht ich brauche ja nicht reencoden

1165
03:14:43,860 --> 03:14:49,460
also was wir jetzt nämlich machen können ist wir lassen das rendern weg

1166
03:14:49,460 --> 03:14:52,540
guck mal wir lassen das rendern weg wir machen das hier

1167
03:14:52,540 --> 03:15:04,260
und wir stoppen wir stoppen die zeit ja also wir sagen hier beim post message also ungefähr

1168
03:15:04,260 --> 03:15:10,420
über den daumen gepeilt wir sagen time übrigens richtig nice dass so was mittlerweile eingebaut

1169
03:15:10,420 --> 03:15:16,980
ist in javascript console time und dann sagen wir

1170
03:15:16,980 --> 03:15:21,180
console time log und dann gucken wir was die letzte zeit ist die er gebraucht hat bei diesem

1171
03:15:21,180 --> 03:15:26,620
20 sekunden ding

1172
03:15:26,620 --> 03:15:29,900
ja bessere battlefee bessere performance als battlefee ist ja keine kunst

1173
03:15:29,900 --> 03:15:38,940
20 sekunden lassen wir jetzt durchlaufen und wenn das länger braucht als 20 sekunden

1174
03:15:38,940 --> 03:15:40,100
dann wissen wir dass es laggt

1175
03:15:40,100 --> 03:15:55,180
es laggt

1176
03:15:55,180 --> 03:15:56,820
der decoder teil ist nicht schnell genug

1177
03:15:56,820 --> 03:16:07,060
guck der decoder das liegt nicht am rendern vom video der decoder teil ist nicht schnell

1178
03:16:07,060 --> 03:16:12,660
genug guck der braucht 36 sekunden um das ding zu

1179
03:16:12,660 --> 03:16:20,300
rendern also 1080p 60 fps kannst du vergessen das ist aber auch nicht das was ich damit

1180
03:16:20,300 --> 03:16:29,140
machen will wir reden ja von sd videos mit wie viel fps hat pal 50

1181
03:16:29,140 --> 03:16:30,140
das sollte der hinkriegen

1182
03:16:30,140 --> 03:16:39,740
und und und mpeg mpeg 2 video ist wahrscheinlich auch nicht so ressourcenintensiv wie h264

1183
03:16:39,740 --> 03:16:49,100
ja wie gesagt da lässt sich eines noch einiges ob hier also der ist der ist nicht so schnell

1184
03:16:49,100 --> 03:16:54,940
also es sollte wir können es ja mal testen wenn ich das jetzt

1185
03:16:54,940 --> 03:17:03,100
ist das überhaupt 60 fps hier ff probe 60 ja wenn ich das jetzt hier um wir können

1186
03:17:03,100 --> 03:17:04,540
doch mal 30 fps machen

1187
03:17:04,540 --> 03:17:09,180
fps 30 ging das so nee

1188
03:17:09,180 --> 03:17:12,660
oh je das war ich aus dem kopf nicht

1189
03:17:12,660 --> 03:17:26,780
ffmpeg fps minus r30

1190
03:17:26,780 --> 03:17:27,780
der chat weiß bescheid

1191
03:17:27,780 --> 03:17:35,380
ich mein guck mal das normale ffmpeg kriegt es schon nicht hin

1192
03:17:35,380 --> 03:17:40,820
das zu decode und encode mit voller mit voller mit mit zur laufzeit hin

1193
03:17:40,820 --> 03:17:47,100
wobei das auch decode und encode und das encode ist aufwändiger als das decode glaube

1194
03:17:47,100 --> 03:17:48,100
ich zumindest

1195
03:17:48,100 --> 03:17:49,660
und der browser decode ja nur

1196
03:17:49,660 --> 03:17:56,060
ff probe 30

1197
03:17:56,060 --> 03:18:04,260
so guck mal mal das sollte fein sein eigentlich 30

1198
03:18:04,260 --> 03:18:10,780
guck mal mal also wenn das bei ungefähr 20 sekunden rauskommt ist alles ok und da sollten

1199
03:18:10,780 --> 03:18:11,860
wir auch kein slowdown sehen

1200
03:18:11,860 --> 03:18:20,260
true true

1201
03:18:20,260 --> 03:18:21,260
definitiv true

1202
03:18:21,260 --> 03:18:27,540
ja guck mit 30 fps kriegt das hin

1203
03:18:27,540 --> 03:18:40,260
da lassen wir ihn jetzt mal rendern

1204
03:18:40,260 --> 03:18:44,460
es ist schon ein bisschen laggy

1205
03:18:44,460 --> 03:18:51,580
also wir haben mehrere probleme wir haben die render performance von dem canvas und

1206
03:18:51,580 --> 03:18:52,580
wir haben

1207
03:18:52,580 --> 03:18:57,900
na gut es ist jetzt auch noch 30 fps guck die render performance load ist auch noch

1208
03:18:57,900 --> 03:18:58,900
down

1209
03:18:58,900 --> 03:19:05,540
oh alter mein browser

1210
03:19:05,540 --> 03:19:07,540
geht zu

1211
03:19:07,540 --> 03:19:15,900
ne nvn kriegen wir an der stelle bestimmt nicht hin

1212
03:19:15,900 --> 03:19:16,900
also doch webgl

1213
03:19:16,900 --> 03:19:21,340
ich weiß nicht ob ich das jetzt nach 3 stunden 20 noch auf die reihe kriege

1214
03:19:21,340 --> 03:19:24,860
ich meine ich kann es rein copy paste und gucken ob es funktioniert ja

1215
03:19:24,860 --> 03:19:28,620
das nächste mal können wir gucken wie wir das optimieren also ich denke schon dass es

1216
03:19:28,620 --> 03:19:33,940
möglich ist das hin zu bekommen nicht dass man es bräuchte aber

1217
03:19:33,940 --> 03:19:40,460
wir brauchen auch noch to do

1218
03:19:40,460 --> 03:19:42,380
neuere x-dings version

1219
03:19:42,380 --> 03:19:46,060
können wir auch noch machen

1220
03:19:46,060 --> 03:19:49,940
ja und das müsste man tatsächlich ein bisschen entkoppeln

1221
03:19:49,940 --> 03:20:01,180
ja ich nehme ich copy paste mir das jetzt ausnehmen

1222
03:20:01,180 --> 03:20:02,700
ich klau denen das jetzt einfach

1223
03:20:02,700 --> 03:20:10,100
wohin wohin macht man das jetzt

1224
03:20:10,100 --> 03:20:12,900
brauchen wir dann new file

1225
03:20:12,900 --> 03:20:21,500
kann auch render gs ok es geht schon mal es geht schon mal ohne sündungsfehler

1226
03:20:21,500 --> 03:20:22,500
das schon mal nice

1227
03:20:22,500 --> 03:20:29,540
auf wie verwendet man denn module in im browser

1228
03:20:29,540 --> 03:20:36,900
jemand messer pfeiffer plan kann man als einfach sagen import

1229
03:20:36,900 --> 03:20:46,100
punkt slash nee wie macht man das jetzt render punkt gs

1230
03:20:46,100 --> 03:20:48,420
keck wie so

1231
03:20:48,420 --> 03:21:09,500
script type module ok scheint funktioniert zu haben herkwe ja ja ja alles da so wie verwendet

1232
03:21:09,500 --> 03:21:10,500
man den kram jetzt

1233
03:21:10,500 --> 03:21:20,340
kein auto complete wie ging das wie ging das mit type kann man teil type annotations kann

1234
03:21:20,340 --> 03:21:21,340
man

1235
03:21:21,340 --> 03:21:26,060
noch mal let b gleich keck weh so haben man

1236
03:21:26,060 --> 03:21:32,980
nee moment ich weiß gar kann man type annotations auch machen für irgendwie dieses andere javascript

1237
03:21:32,980 --> 03:21:40,880
file oder so kann irgendwie sagen render punkt gs oder so nee ich muss sagen nicht render

1238
03:21:40,880 --> 03:21:43,740
punkt gs

1239
03:21:43,740 --> 03:21:47,380
ich muss wahrscheinlich sagen dings hier web g l class

1240
03:21:47,380 --> 03:22:04,860
web g l screen ok wie ver mache ich das also verwendet man das jetzt so ist das ist das

1241
03:22:04,860 --> 03:22:05,860
so gedacht ja

1242
03:22:05,860 --> 03:22:17,940
ok constructor canvas jetzt muss ich das lesen wie man das verwendet

1243
03:22:17,940 --> 03:22:20,060
oder haben die ein beispiel wie man das verwendet

1244
03:22:20,060 --> 03:22:36,300
du hast gut gute idee ja du hast recht wir können einfach sagen function heck weh new

1245
03:22:36,300 --> 03:22:40,860
web g l screen canvas da das war jetzt mal ali ali b mäßig hin

1246
03:22:40,860 --> 03:22:49,860
lets screen screen render image

1247
03:22:49,860 --> 03:22:59,540
alter wenn das funktioniert keck triple u dann

1248
03:22:59,540 --> 03:23:14,580
heck triple u ist klar richtig dumm so canvas so

1249
03:23:14,580 --> 03:23:19,380
cannot read off und defined render image achso ja da ist ein extrem null

1250
03:23:19,380 --> 03:23:33,380
gucken ob das mit dem screen klappt fill rekt

1251
03:23:33,380 --> 03:23:37,540
achso ja das das funktioniert an der stelle nicht mehr das gibt es nicht mehr

1252
03:23:37,540 --> 03:23:50,660
ok scheint zu funktionieren was mir hier screen render image

1253
03:23:50,660 --> 03:23:57,620
so das kann ich mir diesen ganzen krempel eigentlich sparen und ich kann direkt sagen

1254
03:23:57,620 --> 03:24:08,460
wie ging das höhe breite habs vergessen breite höhe data ok

1255
03:24:08,460 --> 03:24:19,180
breite höhe buffer das klappt doch nicht wow

1256
03:24:19,180 --> 03:24:29,620
es geht einfach und es ist deutlich flüssiger ist deutlich flüssiger aber es ist auch kleiner

1257
03:24:29,620 --> 03:24:43,980
es ist auch es ist auch nicht 1080 so machen wir mal das das das console lock

1258
03:24:43,980 --> 03:24:50,460
hier raus und heim raus wie kriege ich denn das jetzt mit dem size hin

1259
03:24:50,460 --> 03:25:04,700
mein canvas ist ja noch 16 also 1080 20 mal 1080 gibt es das jetzt sei es

1260
03:25:04,700 --> 03:25:14,220
gibt es jetzt sei es methode tatsächlich dann machen wir das doch so viel besser

1261
03:25:14,220 --> 03:25:22,460
aber die muss ich jedes mal aufrufen komm ich lass es jetzt mal so zum testen

1262
03:25:22,460 --> 03:25:35,700
zack leute das läuft erstaunlich gut muss ich mal sagen ohne scheiß das läuft erstaunlich

1263
03:25:35,700 --> 03:25:42,860
gut für das guckt mal vielen zwar also für das dass ich im browser den shit gerade die

1264
03:25:42,860 --> 03:25:51,860
code also das läuft wirklich nicht schlecht 60 fps ok 60 fps schafft er nicht 60 fps

1265
03:25:51,860 --> 03:25:56,940
kriegt er nicht hin da kriegt 60 fps mit 30 fps hin deswegen sieht es aus wie slow motion

1266
03:25:56,940 --> 03:26:03,980
jetzt guck mal da kriegt 60 fps mit 30 fps hin es ist flüssige slow motion jetzt an

1267
03:26:03,980 --> 03:26:15,660
der stelle also 1080p 30 fps ist schluss aber eigentlich sehr cool muss ich sagen sehr

1268
03:26:15,660 --> 03:26:28,900
sehr nice eine sache probieren wir jetzt noch aus ffm pack ja ich denke auch ein bisschen

1269
03:26:28,900 --> 03:26:33,020
was optimiert kriegen wir da schon noch hin wir probieren mal was aus wir nehmen jetzt

1270
03:26:33,020 --> 03:26:45,340
die 1080p und re-size die kannst du nicht jeden zweiten frame rennen doch doch das ist theoretisch

1271
03:26:45,340 --> 03:26:51,460
auch noch was wenn ich merke dass es zu langsam geht dann könnte ich theoretisch nee ich kann

1272
03:26:51,460 --> 03:26:59,020
nicht so einfach frame skippen das macht der decoder nicht mit nee nee nee das ist dann

1273
03:26:59,020 --> 03:27:07,140
ist das ja ich glaube das klappt das klappt nicht ich rufe eine millisekunde sleep auf

1274
03:27:07,140 --> 03:27:13,100
eine millisekunde sleep habe ich das sollte das sollte nicht das problem sein so warte

1275
03:27:13,100 --> 03:27:29,500
mal also wir machen jetzt was 1080 60 fps machen wir input output 720 60 und rate 60

1276
03:27:29,500 --> 03:27:44,740
wobei das egal ist ja schon ffm pack down scale scaling vf scale was ok ffm pack 1080p

1277
03:27:44,740 --> 03:28:02,780
720p stack overflow regelt scale einfach so was auch immer das mit den minions zu tun

1278
03:28:02,780 --> 03:28:24,900
hat keine ahnung ja ok also mache ich einfach minus s oder was

1279
03:28:24,900 --> 03:28:43,380
minus s 1280 mal 720 ah mist das dauert jetzt ein bisschen weil mein video ist ja könnte

1280
03:28:43,380 --> 03:28:46,740
ich auf dem haus mit fv engmann mein video ist ja zehn minuten ich will ihm noch jetzt

1281
03:28:46,740 --> 03:28:52,340
keine zehn minuten beim rendern zugucken ok ich lasse ihn ich lasse ihn einfach ich lasse

1282
03:28:52,340 --> 03:28:58,660
ihn einfach eine minute rendern das reicht 30 sekunden noch und dann breche ich ab eine

1283
03:28:58,660 --> 03:29:01,900
minute zum testen reicht ich will eigentlich nur wissen ob der noch memory leaks hat und

1284
03:29:01,900 --> 03:29:10,620
irgendwie out of memory geht und am abkacken ist ich meine wisst ihr was wir auch machen

1285
03:29:10,620 --> 03:29:16,020
können wenn wir gerade dabei sind wir machen das sleep wir machen das sleep wirklich komplett

1286
03:29:16,020 --> 03:29:40,300
raus oh es leckt wir machen das sleep komplett raus 8 90 prozent cpu vom ffm pack ist vorbei

1287
03:29:40,300 --> 03:29:50,060
ich bin in der vm da ist nichts mit gpu accelerated so und jetzt sagen wir an der stelle wo wir

1288
03:29:50,060 --> 03:29:55,580
das sleep haben oder wo wir das sleep brauchen machen wir es doch einfach so wir testen mal

1289
03:29:55,580 --> 03:30:03,060
wie das ist mit einem sleep wir testen das mal ganz ohne sleep komplett ohne sleep und

1290
03:30:03,060 --> 03:30:10,540
ansonsten hätte ich gesagt an der stelle sind wir denn da an der stelle wo er das dann

1291
03:30:10,540 --> 03:30:16,500
rendert das können wir mal kollapsen wo er rendert mache ich ein javascript delay oder

1292
03:30:16,500 --> 03:30:26,980
so rein dann ist halt die frage ob der auch wirklich das asynchron macht wahrscheinlich

1293
03:30:26,980 --> 03:30:33,180
skipter dann irgendwelche frames oder so weil weil er wartet ja wahrscheinlich nicht bis

1294
03:30:33,180 --> 03:30:38,100
es returned wenn ich hier drinne guck mal mal wie macht man ein sleep in javascript

1295
03:30:38,100 --> 03:30:52,660
gescheit promise ok immer sleep sleep gleich new promise chairs promise sleep der gober

1296
03:30:52,660 --> 03:31:22,420
flow beste excellent dann wir nehmen die function das besser sleep

1297
03:31:22,420 --> 03:31:35,100
ok ich quitte wir haben vier minuten gerendert das sollte reichen 720 60 hey das flutscht

1298
03:31:35,100 --> 03:31:46,900
leute sogar schneller sogar schneller als das sein müsste guck mal das sind eher 90

1299
03:31:46,900 --> 03:31:57,020
fps da kannst du dich echt nicht beschweren oder das ist ziemlich gut von der performance

1300
03:31:57,020 --> 03:32:02,900
ich meine für das dass das cross compile des c++ in browser ist ist das wirklich nicht

1301
03:32:02,900 --> 03:32:09,220
verkehrt wir checken ob das mit diesem sleep hier funktioniert ich glaube nicht ich glaube

1302
03:32:09,220 --> 03:32:18,380
man skippt der frames das juckt ihn überhaupt nicht aber das sind auch nur fünf millisekunden

1303
03:32:18,380 --> 03:32:31,140
moment sind das millisekunden leute an ich erwarte ja gar nicht lull so jetzt es interessiert

1304
03:32:31,140 --> 03:32:39,020
ihn überhaupt nicht das lieb und warum interessiert ihn ist nicht weil das hier auch das hier

1305
03:32:39,020 --> 03:32:46,100
gecalled wird ohne dass der wartet bis der rest durch ist also keine chance hier irgendwie

1306
03:32:46,100 --> 03:32:54,780
das lieb einzubauen das müsste man über irgendeine queue machen man bräuchte irgendwas

1307
03:32:54,780 --> 03:32:59,620
was rendert und wir bräuchte irgendwas was displayen sich das dann aus da war irgendwie

1308
03:32:59,620 --> 03:33:12,700
so aber genau du musst man wir müssten das rendern separat machen zu dem das da muss

1309
03:33:12,700 --> 03:33:17,340
ich mir was überlegen das war heute aber auf jeden fall immer ich mache jetzt mal das lieb

1310
03:33:17,340 --> 03:33:35,660
wieder rein make wo ist das mit dem run hier muss das lieb rein na ja das lieb zehn oder

1311
03:33:35,660 --> 03:33:47,340
so oder fünf fünf fünf ja leute das sieht ziemlich gut aus sogar noch ein bisschen mehr

1312
03:33:47,340 --> 03:33:52,820
acht da müsste man müsste jetzt stoppen da muss die zeit counten irgendwie und dann

1313
03:33:52,820 --> 03:34:07,340
ja also das ist performance technisch echt nicht schlecht ich meine ernsthaft wenn er

1314
03:34:07,340 --> 03:34:18,380
720p muss jetzt mal gucken meint ihr das läuft auf dem safari safari ios ne jetzt bestimmt

1315
03:34:18,380 --> 03:34:36,260
nicht

1316
03:34:36,260 --> 03:34:42,300
ich finde das sehr nice also ganz im ernst die performance geht doch absolut in ordnung

1317
03:34:42,300 --> 03:35:08,700
na super erkennt man ja viele die performance geht doch absolut in ordnung das als elektron

1318
03:35:08,700 --> 03:35:13,500
anwendung und man hat eine media play leute das ist so verrückter scheiß mich wunderts

1319
03:35:13,500 --> 03:35:19,700
also mich würde es nicht wundern wenn das jemand macht ffm pack erst mal in wassen um

1320
03:35:19,700 --> 03:35:28,740
es dann in elektron zu packen painstab gibt bestimmt leute die machen das ja ich könnte

1321
03:35:28,740 --> 03:35:44,620
wetten es gibt leute die machen das

1322
03:35:44,620 --> 03:36:09,900
also ich bin ich bin da wirklich überzeugt von ich finde das cool

1323
03:36:09,900 --> 03:36:18,140
der jetzt macht jetzt können wir jetzt kannst du sowas nehmen hier

1324
03:36:18,140 --> 03:36:21,420
damit geht das jetzt da musst du z plus plus krempeln machen

1325
03:36:21,420 --> 03:36:29,500
ok also das war es für heute ich gehe jetzt was essen

1326
03:36:29,500 --> 03:36:37,340
und wir machen einmal weiter weil ich kann ich kann mich nicht mehr groß konzentrieren

1327
03:36:37,340 --> 03:36:42,300
jetzt an der stelle nächstes mal wir bauen aber noch ein bisschen weiter auf jeden fall

1328
03:36:42,300 --> 03:36:48,020
was haben wir gemacht wir probieren das nächste mal ob wir das noch ein bisschen weiter optimiert

1329
03:36:48,020 --> 03:36:50,660
kriegen wen soll ich hosten haben wir irgendjemand

1330
03:36:50,660 --> 03:37:08,500
nee ich kann ich bin nicht eingeloggt also das nächste mal optimieren wird es gibt ja

1331
03:37:08,500 --> 03:37:13,540
auch noch einiges zum optimieren ja also zum beispiel diese geschichten hier dass man das

1332
03:37:13,540 --> 03:37:33,500
jedes mal kopiert das ist schon mal ziemlich pepega

1333
03:37:33,500 --> 03:37:39,300
habt ihr irgendeine ahnung könnte man könnte man das die koden auch multithreaded machen

1334
03:37:39,300 --> 03:37:47,180
ich glaube die coding multithreading ist pence champ das will man nicht weil ich meine der

1335
03:37:47,180 --> 03:37:54,140
muss sich ja sinken da muss ja die da muss ja die frames nacheinander die koden immer

1336
03:37:54,140 --> 03:38:01,300
man könnte teilweise die sachen parallel machen aber ich glaube das will man eigentlich nicht

1337
03:38:01,300 --> 03:38:14,900
aber es ist schon beeindruckend von der geschwindigkeit her für das dass es im browser läuft ist

1338
03:38:14,900 --> 03:38:24,260
schon wirklich in ordnung

1339
03:38:24,260 --> 03:38:28,220
macht der ffm pack nicht schon multithreading ich wüsste jetzt nicht an welcher stelle es

1340
03:38:28,220 --> 03:38:34,220
das machen soll ich mein das ist eine schleife ohne ohne jegliche multithreading geschichten

1341
03:38:34,220 --> 03:38:44,620
das kann es ja auch nicht jemand wie wo wo soll es das machen hier hier das

1342
03:38:44,620 --> 03:39:10,860
coding multithreaded how to use multithreading da brauchst du mehrere decoder kontexte oder

1343
03:39:10,860 --> 03:39:15,300
was ist ffm pack in wassen im chrome in einer vm richtig aber die vm macht das kleinste

1344
03:39:15,300 --> 03:39:31,340
problem hier

1345
03:39:31,340 --> 03:39:39,100
das kann doch gar nicht funktionieren was der dude da macht

1346
03:39:39,100 --> 03:39:56,640
wie soll denn das funktionieren meine schleife ist doch gar nicht multithreaded

1347
03:39:56,640 --> 03:40:03,100
das ergibt keinen sinn was was der typ da auf bare metal ist es noch performante außerhalb

1348
03:40:03,100 --> 03:40:09,020
der vm das nimmt sich nicht so viel das nimmt sich nicht so viel der dude da macht ergibt

1349
03:40:09,020 --> 03:40:13,980
überhaupt keinen sinn

1350
03:40:13,980 --> 03:40:27,540
oder startet er das startet er das jetzt irgendwie mehrfach multithreaded decoding ach du scheiße

1351
03:40:27,540 --> 03:40:47,540
ne ne ne ne ne ne

1352
03:40:47,540 --> 03:40:49,540
ok das machen wir heute definitiv nicht

1353
03:40:49,540 --> 03:40:55,420
das wird das also das würde richtig eklig sein und ich bin mir auch gar nicht sicher

1354
03:40:55,420 --> 03:41:04,940
wie man multithreaded machen kann bei dieser anwendung jetzt mein das muss das muss ja

1355
03:41:04,940 --> 03:41:10,220
sinken irgendwie also musst auf jeden fall gucken dass die frames in der richtigen reinfolge

1356
03:41:10,220 --> 03:41:16,300
also theoretisch müsstest du ein buffer machen oder eine queue machen da schreibst du die

1357
03:41:16,300 --> 03:41:23,140
frames rein und alle keine ahnung einmal in der sekunde holst du dir welche raus orders

1358
03:41:23,140 --> 03:41:27,460
die in die richtige richtung und dann renders zu sie so irgendwie so

1359
03:41:27,460 --> 03:41:38,420
weil du musst die du musst auf jeden fall die frames in der richtigen reinfolge rendern

1360
03:41:38,420 --> 03:41:44,060
weil ansonsten kommt ja nur müll raus man könnte es auch sein lassen ja das stimmt

1361
03:41:44,060 --> 03:41:47,300
aber muss machen was geht einfach um zu gucken ob es geht

1362
03:41:47,300 --> 03:41:52,260
leute wir sehen uns war ein sehr nicer stream wir haben deutlich mehr auf die reihe bekommen

1363
03:41:52,260 --> 03:41:55,460
als ich überhaupt gedacht hätte als ich angefangen habe zu streamen

1364
03:41:55,460 --> 03:42:22,460
und ich gehe zu was essen wir sehen uns bis dann macht's gut zu

