Das war's für heute und wir sehen uns beim nächsten Mal wieder, bis dahin, tschüss, tschüss, tschüss, tschüss.
Das war's für heute und wir sehen uns beim nächsten Mal wieder, tschüss, tschüss.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
Das war's für heute und wir sehen uns beim nächsten Mal wieder.
So, auf geht's.
Ich wusste die Krabi Musik aus, Mann.
Wir machen einfach ein bisschen leiser.
So Leute, also ihr habt das Gefühl wir müssen uns heute über Windows aufregen.
Und zwar eine Sache fehlt eigentlich jetzt noch bevor ich quasi das auf die Öffentlichkeit loslassen kann hier.
Und nicht weitere Web-Emotes, sondern die Möglichkeit die Bilder zu verschieben.
Weil ich meine manchmal will man das Bild vielleicht nicht so haben, sondern möchte das Bild keine Ahnung so haben oder so.
Oder ich möchte die Cuts unten links in der Ecke und die andere Cuts unten rechts in der Ecke und den in der oberen Mitte und was auch immer.
Was macht eigentlich das Windows Oktober Update?
Gibt es das mittlerweile eigentlich?
Ok man weiß es nicht.
Weil das Oktober Update bringt ein paar richtig coole Sachen für unser Programm hier.
Und zwar kann man ab dem Oktober Update neue UWP Controls in WPF Anwendungen verwenden.
Was noch sehr praktisch sein wird für uns.
Ich bin gerade aber überlegen für was. Für irgendwas war es echt nützlich.
Ah für die GIFs, genau für die GIFs.
Weil aktuell ist es ja so das GIF Overlay das geht komplett durch WPF durch und ist mit quasi einem oder zusätzlichen WPF Library die GIFs abspielen kann.
Und man sieht schon, dass beispielsweise größere GIFs die dauern lange zu laden.
Guckt euch mal den hier an.
Jetzt ist es erst da.
Also hier guckt.
Zack.
Also das ist so ein bis zwei Sekunden Delay, weil das komplette, weil diese Library erstmal das GIF laden muss und dann dauert es halt einfach.
Das ist ein bisschen blöd.
Und die UWP Apps haben ein Image Element, ein Media Element, das neuerdings auch GIFs anzeigen kann.
Das ist das gleiche was auch in Windows verwendet wird.
Zum Beispiel.
Zack.
Da sieht man wie schnell das geht.
Guck.
Kaum.
Man switcht da drauf und zack ist es da.
So und dieses Control ist allerdings aktuell nur exklusiv für UWP Anwendungen.
Und nachdem wir keine UWP Anwendungen haben, weil wir da viel zu beschränkt sind.
Machen wir es umgedreht mit dem Oktober Update.
Wir binden neue UWP Controls in unser alles WPF ein.
Alter manche Twitter-Poster schrecken einen echt.
Aber vorher wollte ich euch noch was cooles zeigen.
Und zwar, ich hab mir überlegt.
What the fuck.
Also ich hab mir nämlich überlegt, wir könnten doch hier mal den Klassiker einbinden.
Also nachdem ich jetzt ja quasi Bilder unterstütze, animierte Bilder unterstütze, Bilder mit extra Sound unterstütze, Text-to-Speech alleine unterstütze, Text-to-Speech mit Bildern.
Also alles.
Alles außer halt wirklich Videos.
Wollen wir gemeinsam mit dem Blitzkorn das haben wir gestern schon gemacht.
Am besten war der Typ, der gefragt hat, ob Diablo 3 immobilend ein April-Scherz ist.
Dass es nicht savage war.
Richtig savage, wie sie immer sagen.
Savage, Alter.
Ja und ich hab gedacht, wir binden jetzt mal hier den Klassiker schlechthin ein.
Und zwar, den kennt ihr bestimmt alle.
Den Typ hier.
Den kennt ihr bestimmt noch.
Und zwar, ich dachte, wir binden ihn mal als Sound ein.
Das kann man bestimmt mal gebrauchen, wenn man in irgendwo huge Plays reist, kann man es einfach abspielen.
So und ich wollte euch jetzt mal zeigen, wie einfach das eigentlich ist, sich sowas von YouTube zu downloaden und in ein Waff zu konvertieren.
Ich meine, das werde ich natürlich den meisten jetzt nichts Neues erzählen, weil ihr ja in der Regel eh schon immer viel schlauer seid als ich.
Aber für die Leute, die das noch nicht wissen, den wollte ich das mal zeigen.
Und zwar, das ist eigentlich relativ simpel.
Also für Kommando-Zeilen, Gegner ist das Ganze nix.
Also als erstes nehmen wir mal YouTube-DL.
Das ist ein...
Oh, das hab ich ganz installiert.
Installieren wir das mal.
YouTube-DL ist ein Programm, was genau das macht, was der Name sagt.
Nämlich Sachen von YouTube runterladen.
Nee, das ist ziemlich genau das, was ich jetzt machen will.
So, machen wir YouTube-DL.
Da lassen wir uns anzeigen, was es für dieses Video, für Dateien gibt.
So und uns interessieren da nicht die Videos, uns interessiert plus das Download, also sprich, den M4A.
Also machen wir minus F, 140.
Ja, das ist ein bisschen skriptisch, aber so muss man das machen.
So und jetzt haben wir das Ganze runtergeladen.
Also wir können das jetzt auch abspielen.
Alter, erschreck mich nicht so.
So und das Problem ist, mein Programm kann aktuell, das können wir vielleicht in Zukunft auch noch einbauen,
kann aktuell bloß WAF-Dateien.
Das ist relativ simpel, weil das Schöne daran ist, WAF kann dann alles abspielen.
Deswegen hab ich mir gesagt, komm, beschränken wir das Ganze mal auf WAF.
Und jetzt müssen wir das Ganze konvertieren und das Ganze einfach.
Sagt man einfach F auf MPEG, Input, die Datei, Output, Camera, Punkt WAF.
Bäm, fertig.
Und jetzt können wir den Explorer hier aufmachen an der Stelle und ziehen uns das einfach rein.
Und dann hoffe ich mal, dass das funktioniert.
Oh, ich hab irgendeinen Bug drin, das sehe ich gerade. Das ist doch nicht gedacht.
Nee, hat doch funktioniert. Hat doch funktioniert.
So, Upload.
Da ist er.
Funktioniert, easy.
Ich benutze immer Convert to MP3. MP3 unterstütze ich aber gerade noch nicht.
Das ist eine Sache, das können wir tatsächlich mal einbauen, dass wir MP4 und MP3 unterstützen,
beziehungsweise wir bauen einfach noch F auf MPEG ein.
F auf MPEG soll einfach konvertieren nach WAF und gut ist.
Da muss ich nicht gucken, dass mein Abspielzeug das unterstützt.
Nutzt du Packet Manager für Windows eigentlich aktiv? Ja.
Scoop finde ich viel besser.
Es ist ein bisschen ein Unterschied zwischen Schokolatier-Dings, Schoko und Scoop.
Scoop ist ein bisschen kleiner, was die Repos verwenden und nicht so komplex.
Und für Pakete, die sich im System installieren, eignet sich Scoop auch nicht.
Aber für so kleinen Scheiß hier, hauptsächlich für Entwicklerkram, ist es halt gut.
7-Zip installiert, CMD installiert, F auf MPEG, Git.
Weil das brauche ich eigentlich gar nicht, das ist im CMD drin.
Egal.
Oder ist es nicht?
Keine Ahnung.
So, Node.js, VLC, Force Code, YouTube, DL. Auf meinem Main-Account, also nicht auf dem Stream-Account, ist natürlich noch ein bisschen mehr da.
Microsoft wollte mal sowas machen für Windows 10, da ist aber nie was draus geworden.
NuGet ist ja das Ding für Packages, für Visual Studio und so.
Die wollten für Windows 10 sowas mal machen, sowas wie Scoop.
NextGet hieß das damals, genau, NextGet, aber da ist irgendwie, wir können ja mal gucken, aber da ist nichts draus geworden.
War das NextGet?
Nee.
Wie hieß denn das?
OneGet.
OneGet, das war ja die Zeit, wo Microsoft alles One genannt hat.
Jetzt gucken wir mal, ne.
Ok, da tut sich anscheinend doch noch ein bisschen was.
Ich weiß aber ehrlich gesagt nicht so genau, was es tut.
Ich verwende Scoop und da bin ich eigentlich recht glücklich mit.
Das sieht mir schon wieder unnötig kompliziert aus, was die bei Microsoft hier funktioniert haben.
Bringt das auch dem 0-15-Anwender aus?
Der 0-15-Anwender, die sehen in der Regel den Vorteil nicht dabei.
Die denken sich wieso, ich kann auch auf eine Webseite gehen und Zeug runterladen.
Also dem normalen Anwender würde das auch was bringen, aber die normalen Anwender erkennen die Vorteile davon nicht und deswegen verwenden sie das nicht.
GitHub dennächst in OneGet?
Das werden sie nicht machen.
Wobei es ist Microsoft, da weiß man nie.
So, jetzt haben wir das hier drinnen.
Alter, das ist viel zu laut, oder?
Das ist ja RIP Headphones, oder?
WTF?
Warum ist das überhaupt so laut?
Viel besser.
Der ist so leise. Na gut, das liegt an den Input-Sounds.
So, also legen wir mal los.
Lange genug geschwätzt.
Also das erste, was ich jetzt mal noch schnell einbaue, ist, dass hier wieder die Namen unten drunter stehen.
Das kann ich jetzt kurz und knackig mal machen.
Das müsste hier sein.
Ja gut, das war jetzt nicht sonderlich schwierig.
Da sieht man wenigstens wieder, was für ein Name ist.
Bringst den Save-Button habe ich mal deaktiviert, das funktioniert nicht so ganz.
Aktuell muss man löschen und neu hochladen, bevor man es ändern will.
Das ist so ein bisschen verbuggt gewesen, deswegen habe ich mal die Schalt erst mal aus, bis das ordentlich funktioniert.
Bei den meisten Sachen sollte das kein Ding sein.
So, und jetzt habe ich mir gedacht, jetzt machen wir mal was.
Und zwar, es ist ja so, dass diese ganzen Bilder, das sind ja Overlay.
Es ist ja im Prinzip, also wie das Overlay funktioniert, ist eigentlich relativ simpel.
Es ist einfach hier ein transparentes Fenster drum.
1.000 Pixel breit, 1.000 Pixel hoch und das ist einfach vollständig transparent.
Also sprich, man sieht ja, man kann durchklicken.
Durchklicken, es nimmt keinen Fokus weg oder sonst was.
Das ist vollständig transparent und hinter all geht es überhaupt nicht.
Aber es ist letztendlich, es ist ein transparentes Fenster hier oben drüber.
Und ich habe mir gedacht, wir könnten, ich mache das mal aus, ich zeige das mal.
Wir könnten, das hier unten ist das Projekt, das ist im Prinzip einfach nur ein ganz normaler WPF,
ein WPF Fenster ohne irgendwas.
Kann man den Editor auch wegmachen.
Also ganz normales WPF Fenster, da ist nichts anderes drin, wie ein Grid,
ein Mediaelement zum Abspielen von ein paar Sounds und ein Imageelement, mehr ist da nicht drin.
Das ist für das Overlay da.
Das könnte für Battle Eye kritisch werden.
Ich habe mir das schon auch ein paar Mal gedacht,
dass das eventuell alles irgendwie auf irgendwelche Cheaterkennung anspringen kann,
aber ist es das bisher noch nicht? Ich verwende das jetzt ja auch schon eine ganze Weile.
Und zweitens, ich meine, ein Fenster über einem Fenster im Window Mode,
das ist ja eigentlich so die normalste Sache ever.
Okay, und ich meine, wenn irgendwie einer der Meinung ist, man muss automatisch gekickt werden,
kann man es immer noch ausmachen.
Und ich habe ja auch einen OBS Plugin, nennen wir es mal OBS Plugin in Anführungszeichen.
Wir haben ja auch eine OBS Funktion, wie wir das direkt in OBS einbinden können,
ohne dass das Ganze hier auf dem Desktop angezeigt wird.
Aber Sinn und Zweck der Sache ist ja eben, dass ich selbst sehe das Ganze.
Ich mache mir da bei Anti-Cheat relativ wenig Gedanken,
weil wenn ich das Ganze in Borderless Windows spiele, das Game,
dann darf ich auch einen Overlay machen.
Ich meine, es gibt so viele Overlays, warum nicht?
Sollte sich da doch irgendwann mal was dran stören, muss man es halt ausmachen.
Aber 99% der Sachen dürften sich nicht dran stören,
und 99% der Sachen können natürlich heute auch Window Mode oder Borderless Window Mode.
Und ich habe mir gedacht, wir können es jetzt mal versuchen einzubauen, dass man BattleEye
flackt direkt für Layer-Transparent-Windows.
Da müsste er aber mal so ziemlich für alles bannen, oder?
Es gibt so viele Programme, die heute mittlerweile irgendwelche versteckten Windows-Overlays
sonst was haben, wenn man hier mal durchguckt, habe ich einen Prozess-Explorer irgendwo?
Wenn man hier mal durchguckt, alle Konsolendinger irgendwie versteckt,
das NVIDIA Zeug versteckt, irgendwelche Soundkarten-Settings versteckt,
das ganze NVIDIA-Gedöns, irgendwelche RGB-Geschichten,
es gab mal irgendwo ein Tool, da konnte man alle versteckten Fenster einen Rahmen drum machen,
da sind auf einmal 15 neue Fenster aufgeploppt.
Ich kann mir nicht vorstellen, dass dafür wirklich gebannt wird.
Ich meine, für transparentes Fenster, wenn man Borderless Window spielt.
What the fuck.
Außerdem, wenn man halt irgendwelche competitive-cheat-geschützten Games spielt,
dann ist die Frage, ob man es braucht.
Aber dann muss man halt die OBS-Geschichte verwenden.
Ich meine, es hat ja absolut mit Hack überhaupt gar nichts zu tun.
Und da sind wir wieder bei dem Punkt, wenn Anti-Cheat-Software quasi schon zu dem wird,
was sie eigentlich verhindern will.
Also ist ein bisschen wie bei mir ein Scanner.
Du bist nicht der Erste, der was dazu sagt, aber letztendlich, ich kann da wenig dran ändern.
Ich kann da wenig dran ändern, wenn ich die Bilder selbst sehen will.
Und ich meine, letztendlich ist es für Streamer und ich denke mal,
die meisten werden das hauptsächlich in Singleplayer-Games verwenden.
Ja, ne.
So, also ich habe mir gedacht, wir können es jetzt so machen,
dass wir das Fenster verschieben können.
Und ich bin mal nicht ganz sicher, wie wir das am besten machen.
Fakt ist, eine Sache müssen wir auf jeden Fall machen.
Du könntest das Window durchgehen und in den Vordergrund moveen.
Damit wäre es nicht mehr topmost.
Und warum ist das im Sinne von einem Anti-Cheat besser?
Außerdem, wenn ich Windows-Reihenfolge ändere, dann ändert sich auch der Windows-Focus.
Und das ist ja das eigentliche Problem, weil wenn sich der Windows-Focus ändert,
dann kann ich nicht mehr Overlay aufmachen und quasi, es würde in irgendeiner Form interagieren.
Zumindest habe ich mir gedacht, wir können das ja irgendwie machen,
dass man das jetzt verschieben kann an die Stelle, wo man die Bildchen haben will.
Und dann vielleicht in Zukunft, dass man pro Bild festlegen kann,
an welchen Koordinaten das Ganze angezeigt werden soll.
So, und warum ich glaube, dass wir uns über Windows aufregen müssen, ist,
wir machen ja hier übelste Magic, die wir uns von Stackoverflow kopiert haben,
wie wir das Fenster click-through und komplett transparent kriegen.
Ich fände es aber wirklich nicht, ich spreche nicht gerade für einen Anti-Cheat-Hersteller,
wenn sie einfach dann quasi blind irgendwelche Dinge...
Aber gut, man, was willst du machen, ja?
Das ist halt im Prinzip so ein bisschen das Wettrennen zwischen Hexors und nicht Hexors.
Das werde ich mir überlegen, vielleicht können wir das Handling noch ändern,
aber ich will es jetzt vor allem auf WPF-Seite erstmal nicht unnötig kompliziert machen.
Es ist ja auch noch lange nicht von großartig weit verbreitet.
Wir müssen eh, wenn wir die erste Version raushauen, wird es eh wieder lustig,
weil dann müssen wir erstmal, man muss ja mittlerweile an so vielen Sachen gewidelistet werden,
dann müssen wir erstmal Windows Screen, Battle Screen, oh fuck, Windows Screen,
wie heißt dieser Scheiß unter Windows, der Zeugs blacklisted?
Das ist ja neu unter Windows 10, wenn man Sachen runterlädt, wo Microsoft noch nicht kennt,
sind die erstmal geplockt und man muss erstmal bestätigen, dass man die wirklich ausführen will.
Screen, irgendwas mit Screen, wie heißt der Scheiß nochmal?
Screen, man sieht es immer, SmartScan, nee, SmartScan, SmartScreen.
SmartScreen, genau, das heißt wir müssen eh dort auch erstmal whitelisted werden,
es ist echt, egal, ich meine im Prinzip, ja, ich lasse mir diese Sachen irgendwo noch gefallen,
damit es ja irgendwo den 0-15-Windows-User eine gewisse Sicherheit gibt,
auch wenn es mir auf den Sack geht, aber gut, was willst du machen, ja?
Gut, und ich habe mir überlegt, wir machen das folgendermaßen, also es ist ja aktuell so,
ich starte das Ganze nochmal, es ist ja aktuell so, dass wenn man sich was anzeigen lässt,
wohlgemerkt, ich sage nochmal, weil das kommt in jedem Stream fünfmal,
was man denn hier raufklicken soll, während man im Spiel ist.
Der Browser, das Webinterface ist nicht dafür gedacht, das auf dem Streaming-Rechner starten zu lassen,
sondern auf dem zweiten Rechner oder auf einem Tablet.
Wenn man Sachen auslösen möchte auf dem Streaming-Rechner, dann kann man das mit Shortcuts machen,
wie zum Beispiel hier LUL, habe ich gerade gebeindet auf Steuerung L, wie man auch hier sieht.
Oh, die Hotkeys lade ich ein auch nicht, das ist noch ein bisschen, Fine-Tuning auf jeden Fall noch nötig.
Man Sachen wie Audio und Namen und so erkennt man schon, aber den Hotkey habe ich noch nicht zum editieren drinne.
Deswegen habe ich auch den L-Knopf erstmal deaktiviert, weil das noch ein bisschen Feinschliff braucht, bis das funktioniert.
Zumindest LUL ist jetzt auf Steuerung L gebunden und ja, da könnte man jetzt auch wieder sagen,
ok, vielleicht kommt jetzt irgendwelche Anti-Cheat-Software an oder vielleicht frisst das irgendwie meine Tasten-Inputs,
dann funktioniert es natürlich nicht.
Gibt es dann auch eine Rest-App, mit der man das Ganze direkt ansteuern kann?
Könntest du ja, weil ich meine letztendlich, also rein Rest ist das nicht, das ist eine Mischung aus Rest und Signal-R.
Signal-R für halt Echtzeit-Gedöns hier, wie klickt und nicht klickt und sowas.
Das ist über Signal-R, du kannst da für eigene Frontends basteln, wenn man möchte.
Das ist eigentlich ziemlich simpel, was ich da an Schnittstellen habe, das ist nicht schwierig.
Man sieht es ja hier, ich kann es mal kurz zeigen, man sieht es ja hier Main, wo ist mein Java, ah Moment, ich habe hier extra einen ordentlichen Editor aufgemacht für JavaScript.
Man sieht es ja hier zum Beispiel drinne bei Mounted, viel passiert da im Prinzip nicht.
Der subscribt sich zu zwei Event, Refresh und Changed, man könnte das vielleicht auch ein bisschen griffiger noch nennen.
Das hier ist im Prinzip komplett Update, inklusive allen Items, wenn sich was geändert hat.
Und das hier ist nur das, was sich geändert hat, Update.
Also sprich, das hier brauchst du eigentlich nur einmal, bzw. immer wenn ein neues Bild dazukommt.
Und das hier kriegst du immer als Event, wenn sich irgendwie was geändert hat.
Also sprich, wenn du einen Shortcut gedrückt hast, dann musst du ja erstmal das Frontend mitbekommen, ok, da wird jetzt ein Bild angezeigt.
Und das sind eigentlich die einzigen zwei Dinge, die du so wirklich brauchst.
Wer brauchst du eigentlich nicht?
Du brauchst eigentlich nur das Refresh Event und das Changed Event.
Musst du dich abonnieren über SignalR und dann hast du eigentlich alles, was du brauchst.
In Changed kriegst du die komplette Liste JSON mit den Items, also sprich, wo dann halt alles drinne steht von wo ist das Bild, wo ist die Audiodatei, welches Bild ist es genau und bla bla bla.
Und hier kriegst du halt was gerade aktiv ist, was abgespielt wird, was Text-to-Speech abgespielt wird, was gerade angezeigt wird.
Das sind eigentlich die zwei Funktionen, die du brauchst. Mehr, mehr ist es eigentlich nicht.
Wieso kann man dich eigentlich nicht abonnieren, weil du kein Twitch Affiliate oder Partner bist?
Und ich sag ja schon seit Wochen, dass ich das endlich mal machen will, aber so ist es halt.
Ich komm nicht bei.
So und um jetzt mal auf das eigentliche zurückzukommen, übrigens falls ich was übersehen hab, schreibts einfach nochmal.
Ein bisschen viel Chat überlegen, plus Zeug erzählen. Also jetzt haben wir hier die Bildchen und ich würde jetzt gerne dieses Bild hier verschiebbar machen.
Das bedeutet, das erste was wir jetzt machen müssen ist, wir müssen ausschalten, dass man durchklickt.
Ihr sehts ja, ich kann hier durchklicken. Also guck hier, da, durchklicken. Also als wäre es nicht da.
Und wenn ich das Bild, wenn ich das verschieben möchte und später resize möchte, dann muss ich es ja erstmal ausschalten können, dass es durchlässig ist.
Weil wie soll ich das verschieben und resize, wenn ich das Fenster nicht anklicken kann?
Ich glaube, das ist irgendwie logisch, oder?
Und ich hab mir gedacht, wir gucken erstmal, wie wir das wieder ausschalten können, das Ganze.
Und ich fürchte, das wird furchtbar eklig werden, weil ich keine Ahnung hab, was hier eigentlich drin passiert.
Also ich kann es mir so grob zusammenreimen.
Also was wir ja machen, wenn wir das Fenster erstellen, ist, wir sagen, warte mal, schieben wir das mal hier ordentlich hin.
Wir sagen dem Fenster erstmal, der Hinterkunden ist transparent. Logisch, dass so Transparente gibt und Transparente PNGs funktionieren richtig.
Dann sagen wir generell, dass es überhaupt erst mal erlaubt ist, dass das komplette Fenster transparent ist.
Dann sagen wir, wir wollen keine Windows, keine Graben und Windows Schaltflächen und Gedöns haben.
Und dann sagen wir, das Windows ist immer im Vorderkrott.
Und das könnte man vielleicht wirklich noch ändern, dass er das immer von Hand setzt.
Wobei wir jetzt echt auf den Sack gehen, ey.
Und dann sagen wir natürlich, das Ganze ist nicht in der Taskbar drin.
Gut, was uns allerdings noch nicht hilft, dass man durch das Fenster durchklicken kann,
weil das würde aktuell nur dafür sorgen, dass das Fenster komplett transparent ist und keine Windows hat.
Und dass das Fenster durchklickbar ist, also ihr seht es ja hier, ich habe es euch ja gerade gezeigt.
Ich habe es euch ja gerade gezeigt, wenn man hier LUL einblendet.
Also ihr seht es ja im Hintergrund, ich bin hier am tracken, droppen und kopieren und so.
Es grabt keinen Fokus und nichts.
Und ich kann auch durchklicken und so, ist alles egal.
So und damit das funktioniert, müssen wir hier das da setzen.
Müssen wir auf die Windows-AP zugreifen, müssen uns irgendwelche Attribute von diesem Window holen.
Und dann setzen wir irgendwie einen Extended-Windows-Style auf Transparent.
Und dann funktioniert das, weil Magic, weil Windows sagt, dass das so ist und so sein muss.
Und das steht ja auch bei Microsoft auf der Seite, dass das so funktioniert, aber es soll halt intuitiv ist es nicht.
Also das hier ist eigentlich das, wo es funktioniert, das da oben sind die zwei Net-Windows-Funktionen aus der User32-DLL.
Das Ding gibt es ja auch schon irgendwie seit 15 Jahren.
Gut, das heißt wir brauchen jetzt eigentlich den umgedrehten Fall, wir brauchen jetzt nicht eine Funktion, die quasi die Transparenz für ein Fenster setzt.
Ne TiraFox, das Layered verwenden wir nicht, wir verwenden nur Transparent. Layered machen wir gar nicht.
Also wir brauchen jetzt das Gegenteil davon, also sowas wie Z-Window-Exter...
off, mir fällt da jetzt nichts besseres ein erstmal.
Und jetzt müssen wir erstmal den Schalter einbauen. Ja und dann müssen wir noch Fensterrahmen anzeigen.
Wir müssen ja wieder Fensterrahmen anzeigen, dass das funktioniert.
Ja, das kommt auf GitHub, das kommt auf GitHub.
So, und ich hab mir überlegt, wir machen das mal über den Settings-Knopf, den ich
hab.
Unset.
Unset ist gut.
Das Nullenart, das ist gut, nennen wir unset.
Fertig, ja, es ist ja, wir sind ja fast fertig, im Prinzip fehlt ja nicht mal viel.
Wir müssen quasi das heute noch machen und einen One-Click-Installer bauen.
Mit Squirrel, also sprich, keinen richtigen Installer, sondern einfach was, was ein Updater
im Hintergrund hat und keine Admin-Rechte braucht und sowas.
Weißt du, ob man als Fachinformatiker Anwendungsentwicklung auch Webentwicklung macht?
Wahrscheinlich nur, was Anwendungsentwicklung, Webentwicklung ist Anwendungsentwicklung,
also Webentwicklung ist selbstverständlich ein Unterpunkt von Anwendungsentwicklung.
Sachen sind auch Anwendungen, aber das kommt drauf an, wo du bist.
Aber eins muss man sagen, es schadet nie, es schadet nie, wenn man ein bisschen auf
dem Stand ist, was gerade webtechnisch und javascripttechnisch abgeht, schadet nicht.
Das ist auch so eine schnellehmige Geschichte und man lernt auch ganz gut was bei.
So und ich hab mir gedacht, wir können das ja mal mit dem Settings-Knopf hier oben machen.
Der Settings-Knopf macht ja eh aktuell noch nichts, außer da sein.
Die anderen Knöpfe machen was.
Hierüber kann ich was uploaden, wenn ich nicht Trecken droppen will.
Hierüber kann ich mir einen Tab aufmachen, in dem ich dann quasi, man sieht es hier im
Hintergrund, in den Browser-Tab, den ich in OBS einbinden kann, falls ich das Overlay
nicht verwenden will.
Hier kann ich das Theme auf Light stellen, anstatt auf Dark-Theme, sieht auch ganz hübsch
aus, oder?
Hört ihr nicht auch?
Das Light-Theme sieht doch auch ganz hübsch aus.
Oder?
Guck mal, der Ejax ist auch da, moin.
So und der Setting-Button macht noch nichts.
Deswegen hab ich mir gedacht, wir verwenden mal zum Testen dafür mal den Setting-Button.
Passt ja irgendwie auch zu Settings.
Das heißt, wir müssen das Ganze jetzt hier erstmal einbauen.
Da, ins JavaScript müssen wir das einbauen, weißt du, warum wir das HTML einbauen?
Und zwar müssen wir uns den Button suchen, nämlich diesen Button da, den da, das ist
in der Navigations-Leiste, ist der Button da Settings und sagen, wenn ich den Settings-Knopf
drücke, dann machen wir mal Open Settings, rufen wir mal Open Settings auf, gibt's
jetzt noch nicht.
Deswegen wollen wir noch mehr Settings einblenden später, anstatt diese Fenster-Overlay-Zeug.
Das ist jetzt nur mal, dass wir was haben, um das an und aus zu machen.
Gut, dann gehen wir ins JavaScript rein und gehen mal hin und sagen Open Settings, also
sprich, das ist die Funktion, die aufgerufen wird, wenn wir diesen Settings-Button hier
oben drücken.
So, Open Settings und da machen wir jetzt im Prinzip nichts anderes, wie über SignalR
eine Message schicken, so nach dem Motto, keine Ahnung, Activate Resize Mode oder irgendwie
sowas in der Richtung.
Also sagen wir, Disconnection, das ist die SignalR-Connection, Send und dann muss ich
mal gucken, wie der Aufruf genau aussehen muss, da, so muss der Aufruf aussehen, Copy
Paste, also brauchen wir nicht, sondern sagen wir sowas wie Open, Resize, wir machen es
anders hier, Toggle, Resize, so, das rufen wir jetzt auf der Server-Seite auf, wenn wir
das Ganze jetzt Reload, werden wir feststellen, es passiert noch nichts, warum passiert noch
nichts, weil auf der Server-Seite, naja, auf der Server-Seite ist ja noch nichts, deswegen
ist er hier wahrscheinlich auch am Rummeckern, weil das gibt es auf der Server-Seite noch
nicht.
Deswegen müssen wir jetzt zum Beispiel Studio rein, mal die Anwendung ausmachen, wir gehen
auf den SignalR Endpunkt, jetzt ist der Meme-Hub und da machen wir jetzt eine neue Methode
rein, die nennen wir genau so, wie das, was wir im Frontend aufrufen, also das da, so
hier, nennen wir das, ich wollte, Resize, so, und da drin müssen wir jetzt irgendwie
unserem Desktop Fenster sagen, er soll mal den Resize Mode anmachen, hat sich eigentlich
viel bei deinem Server-Rom getan, noch nicht, aber es wird sich ein bisschen was tun, das
wird ein bisschen umgebaut, wird ein bisschen umgebaut, wird ein bisschen abgespeckt, weil
aktuell läuft ja alles, zeig es nochmal für die, die es nicht gesehen haben, aktuell
läuft ja bei mir im Server-Rom alles auf, was, aktuell läuft ja so ziemlich alles, was
ich hab hier oben auf dieser 4HE-Kiste, das ist wirklich alles, von Fileserver bis Router
bis TV-Aufnahme-Ding bis Fileserver bis jede Menge VMs bis Nextcloud, Nextcloud, Wikis,
alles, alles ist auf dem Server drauf, alles, so viel, dass ich gar nicht aus dem Kopf weiß,
was es alles ist, ich merke es bloß, wenn es weg ist, so, und das ist ein bisschen viel
auf einer Kiste, das ist ein bisschen viel, und eine Sache, die mir gar nicht gefällt
zum Beispiel ist, dass mein Internetzugang darüber geht, einfach für den Fall der Fälle,
wenn es wirklich mal ausfallen sollte oder mal irgendwas ist, dann habe ich keinen Internetzugang,
deswegen habe ich mir jetzt ganz einfach einen Mikrotik, deswegen habe ich mir den hier jetzt
geholt, einen Mini-Mikrotik-Router mit PoE, da kann ich nämlich auch meine Kameras dran
machen, die PoE sind, und mache mein Internet demnächst da drüber, also sprich, da kommt
dann hier die Fritzbox dran, hier kommt Unity Media dran, hier kommt irgendwie auch eine
Kamera dran und da kommt dann der Switch dran für Internet, ach ja, hier kommt noch WLAN
dran, so, fertig, easy, so machen wir das, und dann kann ich hier PFSense runterschmeißen
und ein Single Point of Fail ist weg, hast du auch eine Ausfall-Sicherung für die Daten,
ja, da drin laufen 3 10TB Platten mit ZFS und dem entsprechenden ZFS-Rate, also was,
ZFS-Rate 5 entspricht, das ist Z-Rate 1 glaube ich, Set Window Long Way, ja, irgendwie sowas
machen wir jetzt gleich, so, jetzt müssen wir erstmal natürlich dem Windows sagen,
dass wir die Options anmachen wollen, ok, Toggle Resize Memhub, das geht an der Stelle
nicht, weil ich hier keinen Zugriff auf meinen Desktop-Stells habe, die Desktop-App läuft
über diesen, läuft irgendwie in den Desktop-App Service, den ich da noch dazwischen gebastelt
hab, so als Rapper, weil ich nicht quasi aus meiner Anwendung von überall aus allen möglichen
Threads auf meinen Windows zugreifen will, weil dann ist quasi Fail vorprogrammiert,
wenn man das macht, so, das heißt wir injecten uns jetzt mal hier, und das finde ich ist
wirklich eine schöne Sache bei ASP.NET Core, dass das mittlerweile alles mit eingebaut
ist, wir injecten uns jetzt mal hier einen Desktop-Service, das ist eine Klasse von mir,
die ich gebastelt hab zum interagieren mit diesem Overlay-Fenster, die ist in der Start-Up,
in der Start-Up ist das Ding hier registriert, das heißt ich kann die einfach verwenden,
indem ich in den Konstruktor das reinschreibe, und dann wird die automatisch beim Anlegen
injectet von ASP.NET Core und ich muss mich um nichts mehr kümmern, das ist einfach da,
das ist natürlich sehr praktisch.
Das heißt wir rappen das ganze nochmal da drin, dann wäre einfach genauso, das sieht
jetzt vielleicht erstmal ein bisschen doppelt gemoppelt aus, aber es ist ganz praktisch,
dass ich nicht überall auf mein Fenster zugreife, sondern nur hier von dieser einen Klasse raus,
die sorgt dann beispielsweise auch dafür, dass alles im richtigen Thread aufgerufen
wird und sowas, sobald man quasi mit UI-Sachen interagiert sind, Multi-Threading-Probleme
sofort programmiert, wenn man nicht ein bisschen aufpasst.
Kann man das von hier eigentlich generieren?
Anscheinend, cool, nice, so und da sag ich jetzt, weil hier hab ich jetzt Zugriff auf
mein Window, auf meinen Desktop-Overlay und hier kann ich jetzt sagen, ja das brauchen
wir irgendwas für, wisst ihr was, wir malen einfach mal ein Fenster, wir malen einfach
mal einen schwarzen Rahmen drum herum, um zu gucken, ob das prinzipiell funktioniert,
dass wenn ich auf den Knopf drücke, dass dann was passiert.
Ich hab sogar noch eine Resizing Variable hier oben gebricht, ganz praktisch, anscheinend
hab ich schon mal sowas in der Richtung gebastelt, also sag mal, Border, Moment, ich hab hier
gar keinen Zugriff auf dieses ganze WPF Zeug, ne?
Ja, ich denk schon, es gibt ja sonst nichts anderes.
Wir müssen gucken, dass wir im richtigen Thread sind, weil Windows-Anwendungen, ne und so.
Ok, dann gehen wir in unser Window und machen da jetzt Methoden für wie auch immer Resize-Gedöns.
Aber irgendwie hier drüber, ich wollt irgendwie Enable, Resize, Disable, Resize, wie auch
immer es genau aussehen wird, müssen wir mal gleich mal gucken, also if Resize Mode
ist an, also sprich, wenn wir resizen, dann wollen wir Resize Disable und wenn wir nicht
resizen, dann wollen wir Resize Enable, also wir wollen so ein Switch, der quasi, ne, mit
dem Knopf oben wollen wir das an und aus machen, so und deswegen sagen wir Disresizing, ne Moment,
Schwachsinn, falsch rum, falsch rum, falsch rum, so rum, wenn es aus ist, wollen wir das
an machen und wenn es aus ist, wenn es an ist, wollen wir das aus machen, so rum, Tenryuch,
das ist schön, wenn es dir gefällt, sehr, sehr nice, so und jetzt müssen wir natürlich
noch gucken, dass es im richtigen Platz läuft, deswegen wrap ich den ganzen Mist auch immer
durch diese extra Klasse hier, weil ich keinen Bock hab, dass ich irgendwelche, irgendwas
verkacke beim Aufruf, ja, ok, so und jetzt zum testen ob das funktioniert, also zum testen
ob das funktioniert mit dem Klick oben drauf, machen wir einfach mal den Rahmen um das Fenster
drum herum, also machen wir mal bei Enable Resize, machen wir Border Brush, keine Ahnung,
New Solid Color Brush, ja und dann sagen wir Color, Colors, Black, so und dann sagen wir
hier Border, wie dick das ganze sein soll, sagen wir, keine Ahnung, 5 und hier unten
machen wir das ganze wieder weg, hier unten ist ein Null, so und von der Idee her sollte
jetzt wenn ich auf das, auf das Settings Icon drücke, sollte eigentlich ein schwarzer Fenster,
das muss man ein anderes Emote nehmen, sonst gibt es die Rassismus Anzeige gleich raus,
funktioniert, BÄM, siehst du Leute, manchmal zahlt es sich echt aus, wenn man seinen Code
ein bisschen ordentlich gebastelt hat, dann funktioniert sowas auch ohne 50 mal zwischendurch
kompilieren und zu debunken und zu gucken, ok, jetzt haben wir nun, also das Toggling
hier oben funktioniert schon mal, schwarzer Rahmen drum herum, als C++ von Yu-Gi-Trigger,
ja das ist so, ich weiß C++ Leute mögen keinen, warum eigentlich nicht, also in Qt
ist beispielsweise New auch Standard, da machst du das auch für alles, warum ist das eigentlich
so verpönt unter C++, Memory Leaks, manuell ein Delete kommen, ja das ist, das ist wohl
wahr ja, da musst du das nicht eh machen, wenn du irgendwo etwas anlegst, dann irgendwo
musst du es ja wieder löschen, oder du machst es halt, quasi, quasi, eh, eh, funktionslokal,
dann musst du es nicht löschen, dann wird es automatisch aufgeräumt, ach stimmt, ja
die haben doch jetzt genauer, die haben doch diesen Standard Pointer gedönnt und sowas
jetzt, ja stimmt, stimmt, ja ja, das gibt es ja noch gar nicht so lange, stimmt, ja ja,
da war was, ja ich mache nicht, ich mache nicht oft etwas mit C++, das einzige was ich
ab und zu mit C++ mache sind, wenn es um GUI-Geschichten mit Qt geht, da musste halt ein bisschen C++
basteln, es wird auf der Platte nichts anderes übrig, ja, du kannst zwar auch viel in diesem
komischen JSON-Dings, also in QML machen und auch ein paar Sachen JavaScript, aber du brauchst
letztendlich, eh, irgendwann musst du ein bisschen was C++-mäßiges machen, ok, also
das mit dem, mit dem Rahmen funktioniert jetzt ja schonmal ordentlich, so und jetzt,
jetzt kommt das, worüber ich mich, glaube ich, bei Windows aufregen werde, jetzt müssen
wir nämlich das Durchklicken deaktivieren, also wir müssen auf jeden Fall das Durchklicken
aktivieren beim disablen, klingt jetzt ein bisschen bescheuert, aber ich hoffe ihr könnt
mir folgen, also im Prinzip, wenn ich was, wenn ich den Resize-Mode ausschalte, will
ich ja wieder, dass man durchklicken kann, also das will ich auf jeden Fall machen und
jetzt ist die große Frage, wie kriege ich den ganzen Kram wieder ausgeschaltet, unset,
das müssen wir jetzt mal programmieren, was findet ihr denn schöner, unset so geschrieben
oder unset so geschrieben, irgendwie sieht es so natürlicher aus, oder, ich glaube nicht,
dass ich in sie schaffe, ne tilde, ne tilde vor, also ich, ich geht ja normalerweise schon,
ich glaube nicht, dass es, dass es den Operator, äh, gibt an der Stelle, wat, ach ne, oft muss
ich wegmachen, doch gibt's, tatsächlich, sehr, sehr nice, eats I have, ähm, ist das
XOR, ne, was ist denn das, also ich mein, das ist bitwise, äh, bitwise end, oh, was
genau macht die tilde an der Stelle, invert, ja, das ergibt Sinn, das ergibt Sinn, ja,
das passt, das müsste eigentlich funktionieren, aber, könnte ich es nicht einfach XORen, ja,
ne, ich könnte es nämlich einfach XORen, wollte ich gerade sagen, das, äh, oh, probieren
ich das mal aus, wir probieren das mal aus, vielleicht regt mich mir noch gar nicht so
sehr auf, wie ich gedacht hab, also es geht jetzt ja folgendermaßen, in hoher Art, das
mal zu zeigen, also, von der Idee her ist es ja so, ich will jetzt ja implementieren,
dass ich das, dass ich die ganze Sache hier resizen und, äh, vor allem erst mal verschieben
kann, also, die Bilder hier, ne, und aktuell ist es halt so, ich, ich, ich klicke durch,
wie ihr seht, also ich klicke durch und je nachdem, was dahinter ist, geht halt an, so,
und jetzt will ich das ausschalten, funktioniert, nice, nice, nice, nice, guck, jetzt kann
ich nicht mehr durchklicken, Leute, jetzt kann ich nicht mehr durchklicken, jetzt mache
ich das aus, jetzt kann ich wieder durchklicken, sehr schön, funktioniert, Porgas, ach guck,
meine Nidlson ist da, was geht, nice, okay, funktioniert, sehr schön, das ist einfach
viel einfacher, als ich gedacht hab, jetzt letztendlich, dann muss ich mich vielleicht
doch gar nicht so sehr über Windows aufregen, so, und nun kriegen wir auch wieder Mausevents
und Gedöns, ach so, wisst ihr, was ich eigentlich mal probieren könnte, bevor wir, bevor wir
das machen, ich könnte an der Stelle einfach mal versuchen, ob wir Windows Style, ob wir
Windows, äh, ob wir nicht einfach die, die, die, die, äh, den Rahmen wieder einschalten
können, ob das, ob das geht, also das wir irgendwie sagen hier, einfach, einfach wieder,
einfach wieder den Rahmen einschalten, geht das ja, aber ich vermute eher nicht, oh ne,
geht nicht, bäm, habt das gesehen, exception, und zwar, Windows Style none is the only valid
value for Windows Style, okay, also, okay, weil wir Transparency anhaben, dürfen wir
das nicht tun, nun gut, das dachte ich mir irgendwie schon fast, das dachte ich mir schon
irgendwie fast, aber wisst ihr, was wir machen können, eine Sache, ähm, die jetzt auf jeden
Fall funktioniert ist, wir können, wir können uns ein Mausdown Event registrieren, auf der
Form, und, ähm, die Form tracken droppen, das ist unter WPF relativ einfach, äh, hallo,
kann ich mal richtig schreiben, ja, track move, sprich, wenn ich den Maus, wenn ich jetzt
die Maustaste runterdrücke auf dem Fenster, allerdings nur, wenn ich, äh, ja den, den,
den Edit Mode quasi anhabe, dann kann ich das Fenster rumschieben, hoffen wir mal, dass
es jetzt so funktioniert, wie ich mir das gedacht habe, guckt, jetzt passiert nichts,
jetzt klicke ich hier noch durch, jetzt mache ich den Edit Mode an, move, easy, okay, okay,
okay, und mache ich den Edit Mode wieder aus, klicke ich durch, so muss es sein, resizeen
könnte jetzt allerdings ein bisschen komplizierter werden, weil ich will es ja nicht nur moveen
können, ich will es auch resizeen können, übrigens die, der Rahmen sieht massiv hässlich
aus, oder, kann man nicht, kann man nicht irgendwie Rahmen, wie macht man den WPF, äh,
dotted, kann man irgendwie sowas machen, dash, dotted, border, WPF, geht sowas, aber der macht
es doch nicht so kompliziert, kann ich einfach sagen, border style dotted oder so, das ist
sehr kompliziert, manchmal ist WPF viel komplizierter, als es sein müsste, äh, also anscheinend
muss ich den eigenen border style oder irgendwie sowas definieren, achso, äh, wie soll das
gehen, wat, check ich nicht, ey, ich hab keinen Bock meinen eigenen dotted border zu machen,
was möchte er uns hier sagen, ne, das wird zu kompliziert, gibt es nicht noch was anderes,
doch, es gibt einen Craydian brush, es gibt einen Linear Craydian brush, es gibt vieles,
es gibt kein, es gibt kein irgendwie dotted brush oder so, aber was gibt es eigentlich
aber brushes zur Auswahl, roges, black, ok, das können wir noch einfacher machen, easy,
image brush, Linear Craydian brush, sponsor mir mal Ramplitz, musst du games verkaufen
oder was, musst du texturen verkaufen, tile brush, aaah, daraus könnte man vielleicht
irgendwie nen dotted border bauen oder so, aber das ist mir jetzt die Arbeit nicht wert,
ehrlich gesagt, da bleibt der border halt einfach schwarz, meinetwegen, black, gut,
Ram, fertig, aus, ich hab dir schon, ja, ich hab dir schon Black Ops gesponsert, wo wir
ganze 15 Minuten Spielzeit oder so haben in Black Ops, ähm, tja, ja, dann müssen wir
halt mit dem hässlichen border leben, meinetwegen, ok, gucken wir mal wie wir resizen können,
ich hab ne Idee, wie wir uns das Leben sehr viel einfacher machen können, ohne dass wir
den Scheiß selbst implementieren müssen, also, weil jetzt müsste ich es ja so machen,
jetzt müsste ich mir nur mal so von der Idee haben, wie man das manuell machen würde,
ne, ich müsste mir jetzt quasi mouse move oder irgendwie sowas event registrieren und
dann müsste ich jedes mal gucken, wenn mouse move quasi irgendwie innerhalb von ein paar
Pixel der rechten oberen Ecke von meinen Windows Koordinaten ist, dann würde ich den
mouse cursor halt zu ner Hand oder so machen und wenn dann darin ein button down auftritt,
dann würde ich Fenster resizen, so ungefähr in der Richtung, ja, aber ich hab ne Idee,
wie wir uns das Leben sehr viel einfacher machen können, und zwar, man muss aber mal
probieren ob das funktioniert, was ich mir da so gedacht hab, man könnte nämlich einfach
sagen irgendwie, man konnte nämlich irgendwie bei WPF Fenster einstellen, wie die resizen,
also sprich was für Controls für Resize angezeigt werden sollen, vielleicht ist es aber auch
Windows Style, dann hab ich gelitten, dann geht das nicht, weil den darf ich nicht ändern,
Resize Mode gleich, was haben wir denn hier zur Auswahl, hallo, can resize with grip, das
hört sich doch schon mal gut an, minimize, maximize buttons are shown, gut, wir haben
kein Fenster, wir sehen die Buttons nicht, a resize grip appears in the bottom right corner
of the window, wenn das Ding angezeigt wird, wäre das die einfachste Variante irgendwie
zum Ziel zu kommen, aber vielleicht, ich geh eher davon aus, das wird nicht angezeigt,
weil wir haben keine Fenster decorations, hier gucken wir mal, doch, alter, guckt mal,
so ein nicer resize button, das ist aber sehr easy heute, ich hab mir das schwieriger vorgestellt,
ehrlich gesagt, ok, es ist ein bisschen scheiße zu crappen, das Ding, aber damit, es ist mega
scheiße zu crappen, aber damit muss man leben jetzt, lieber nen button, der scheiße funktioniert
als das ganze Zeug selbst zu reprogrammieren, so und jetzt könnte man quasi sagen, man möchte
seine Memes unten links haben, so, macht resize mode aus, und jetzt sind es so links, ist doch
sehr nice, oder, gefällt sogar der Katz, WPF kann alles außer Dashborder, dann scheiß ich
dann auf Dashborder, das resize Triag bleibt aber nö, ist nicht da, oder, achso, das müssen
wir noch ausschalten, äh, ja, das müssen wir noch ausschalten, no resize, ja, wir schalten
es ja auch nur ein, wir schalten es ja nicht mehr aus, so, hier, hier sieht man es jetzt
gut, jetzt ist es weg, guckt, jetzt ist es weg, jetzt wird er da, wartet mal, ich muss
nur kurz gucken beim resizeen, da ist ja WPF nicht gerade berühmt für, ähm, ach es geht
wieder eigentlich, 6%, 6% nochmal 5% Windows Manager, das ist doch gar nicht so wild, so
jetzt natürlich die große preisfrage, ob sich Windows das merkt, wo man das Fenster
gespeichert hat, ne, ich vermute mal eher nicht, ne, machts, machts natürlich nicht,
wobei, Leute, das könnte sogar sein, dass sich das Windows merkt, ich muss mal einstellen,
ich setze ja hier fest, das Windows am Anfang auf 1000 war 1000, was jetzt, ah, ja, ja,
ja, ja, ja, komm, ob sich das Windows merkt, das wäre natürlich cool, ne, merkt sich
es nicht, gut, dann müssen wir uns das speichern irgendwo, ne, dann müssen wir uns das irgendwo
speichern, dann muss ich mal überlegen, wie wir das jetzt am besten machen, wo kriegen
wir überhaupt die Werte her, also, genau, wir könnten das so machen, sobald resize disabled
wird, speichern wir das, Zugriff auf die Datenbank haben wir von hier nicht, das sind
auch Settings, die ich nicht unbedingt, wo ich nicht unbedingt die Datenbank mit versauen
würde, ehrlich gesagt, das ist ja kein Content in dem Sinn, wo sind denn die Kommentare
in dem Code hier, guck, also ich sehe schon mal eins, ansonsten, wozu, overrated, komplett
overrated Kommentare, also wir könnten das hier speichern, wir könnten das hier irgendwie,
da gibt es doch irgendwas, habe ich letztens gelesen, es gibt doch irgendwie so einen,
gibt es auch für ASP.NET Core irgendwie so einen, so einen config provider oder irgendwie
sowas, configuration als können wir das nicht in Englisch machen, settings files, ja, genau,
sowas wollen wir haben, settings files, jetzt kommt als nächstes noch einer, wo ist das
Strukturgramm oder sowas, JSON Configure Provider, ja, sowas in der Richtung wollen wir haben,
Post Configuration from JSON Key Value File, kann man das dann auch speichern, das ist
auch noch eine Methode, die Microsoft so nennen kann, wo ist das UML, Moment, Controversial
Studio nicht Klassendiagramme malen, Controversial Studio nicht Klassendiagramme malen, anscheinend
nicht mehr, ich bin mir eigentlich ziemlich sicher, dass es das früher mal konnte, so
eine Scheißfunktion, die keiner verwendet hat, deswegen haben sie es immer wieder ausgebaut,
ok, wie funktioniert der ganze Climates, Configuration, App Configuration, Hosting, Add JSON, Config,
Add JSON File, Config JSON, Optional, True, Reload und Change, sowas wollen wir haben,
da können wir nämlich unsere Settings drin speichern, ohne dass wir die Datenbank versauen
müssen, was sagst du eigentlich zu diesem Artikel 13 Mist, Mist sag ich dazu, Use Configuration,
ok und wie verwende ich das dann, wie genau funktioniert das jetzt, das ist mir schon
wieder ein bisschen zu verwirrend geschrieben, also hier registriere ich das File, ja das
habe ich gecheckt und wie verwende ich es dann, das muss ich ja irgendwo injecten, Get
Section, Eye Configuration, Aha, da kommen wir der Sache schon näher, ok, Suche, ASP.NET
Core Inject Configuration JSON, ein Optionsmuster, ah wir haben Microsoft mal wieder auf Deutsch
eingestellt, die Seite mal wieder auf Deutsch eingestellt, ach so geht das, ok das ist viel
einfacher als das andere, was sie da gezeigt haben, also man sagt jetzt Configure My Options
Configuration, was, Moment nein das ist wieder was anderes, mein Gott das ist das wieder
kompliziert gemacht, ok also das müssen wir wohl auf jeden Fall machen, Configuration
Builder, My Options, ich habe aber da eine eigene Klasse dafür, ach Mann, warum ist
das so ein großer Akt wieder, How To Access Configuration, das ist doch genau das was
ich machen will, How To Access Configuration vom Controller in ASP.NET Core, App Settings
JSON, Startup, Eye Configuration, ok das machen wir jetzt, das ist doch nicht so schwierig,
ja genau, genau so, genau so will ich das machen, genau so, ah das ist doch einfach,
ok probieren wir mal ob das funktioniert, genau muss ich das als Dinge registrieren,
egal probieren wir mal, probieren wir mal ob das funktioniert, an welcher Stelle macht
man das, machen wir es hier oben, Eye Configuration, Ach da brauche ich jetzt eine eigene Klasse
die Configurations enthält oder was, oder wie, oder was, ach nee, wie zum Geier funktioniert
der Kram, alles bürmische Dörfer, echt das ist wieder unnötig kompliziert gemacht um
auf eine Config Datei zuzugreifen, so was genau ist Configurations bitte schön, das
ist wieder so eine geile Anleitung, ja, ja wo ist denn diese Configurations Klasse,
just add things per bar, gibt es nicht, alter ist das wieder umständlich gemacht,
ja genau, ah, ok da kommt das her, Eye Configuration,
Startup Einfiguration, was so, eh ok, funktioniert das allen Ernstes so, das ist voll durch
die Brust ins Auge, so Configuration, Configuration, Configuration, ok, ok und woher weißt du
jetzt genau welches, welches File damit gemeint ist, wie sagt man heutzutage, YOLO, ja, ich
will das auch nicht als Singleton haben, ehrlich zu sein, you need to use Configuration App
Configuration, mein Gott es ist echt übelst verwirrend, einfach für eine Config Datei,
was hat Windows heute wieder angestellt, Windows hat eigentlich gar nichts böses gemacht,
das hat tatsächlich funktioniert, auch wenn ich das nicht gedacht hätte, ok, machen wir
das mal, das machen sie hier irgendwo drinnen, irgendwo im Startup, Config, App Configuration,
genau, so und dann brauchen wir da drin, wir sind ja Stack Overflow Driven ohne Ende, ok
dann brauchen wir das Geschwummel hier, alles für eine Config Datei, dauert gerade immer,
Config File, nicht so easy wie das aussieht, worum geht es gerade, ich versuche eine Config
Datei einzulesen, das scheint höchst komplex zu sein, App Settings Chasing, ok so kriegen
wir das dabei, so ne, App Settings Chasing, optional, äh, ja, was weiß ich, true, mal
legen wir das Ding mal an, wir nennen es nicht App Settings, wir nennen es, Windows Settings,
das klingt blöd, komm, wisst ihr was, wir nennen es einfach App Settings, egal, nicht
dass ich sowas hier schon liegen hab, so dann fügen wir das die Datei mal hinzu, add, Chasing
File, Yeson File, hab ich denn nie gemacht, App Settings Chasing, so jetzt irgendwie was
weiß ich, Test 1, gucken wir ob wir das jetzt ausgelesen kriegen, übelst komplizierter, ok
und im Startup, jetzt haben wir den Campbell registriert, mehr müssen wir noch irgendwie
sonst was machen, und dann injectet man es nicht ins Startup, ok, dann gucken wir mal
ob das jetzt prinzipiell funktioniert, also das heißt im Startup müsste ich jetzt ja
Zugriff auf den Campbell haben, wir machen hier einfach mal hier nen Breakpoint rein
und gucken was passiert, ob dann schon was drinne steht, was lernen wir daraus, nie
wieder config, da finden sie ja auch, dass das übelst kompliziert ist, ok anscheinend
funktioniert das, wie auch immer man da jetzt genau drauf zugreift, das ist ja nicht einfach
nur irgendwie, nicht einfach nur was wo man, Jason Provider, ja das sieht auch prinzipiell
ganz gut aus, geben wir mal hier irgendwas aus, configuration, get value, get value key,
test hieß das Ding noch einfach, einfach nur test, was hat er jetzt für Schmerzen, hallo
craxelicious, was, for method get get value cannot be, wat, was willst du von mir, ach
so, der will von mir wissen, was das für nen Typ ist, das ist ein Int, also, ey funktioniert,
wir haben bei der 1 aus einer config Datei ausgelesen, unglaublich, du scheiße ist das
kompliziert, was entsteht denn da gerade, Moment ich zeig's dir, wir haben schon mal
geschafft ne 1 auszulesen aus der config Datei, es fühlt sich nicht schön an, also zumindest
so könnten wir jetzt wahrscheinlich aus dem Rest der Anwendungen da drauf zugreifen, also
was hier entsteht, ich zeig's dir, es entsteht, also es ist ja schon ne Weile am Entstehen,
wir sind jetzt quasi mehr oder weniger fertig, dass wir demnächst wirklich auch mal da draußen
Installer basteln können und die erste Version rausgeben, es entsteht ein Tool für Streamer,
mit dem du Overlay Bildchen anzeigen kannst, es ist jetzt ein bisschen blöd zu sehen an
der Stelle hier, weil dieses Webinterface ist natürlich nicht gedacht, um es auf dem
Streaming PC zu verwenden, weil wie soll man beim Spielen da draufklicken, das ist irgendwie
logisch, das ist dafür gedacht auf dem zweiten Rechner aufzumachen oder halt auf dem Tablet
oder so, funktioniert natürlich auch wunderbar auf dem Tablet, so, dann kann man sich jetzt
Bilder rein tracken droppen, zum Beispiel nehmen wir mal irgendwie irgendein Bild, oh Coggers
haben wir nicht drin, nehmen wir das mal, Coggers einfach rein tracken droppen, Name vergeben
und Uploaden fertig, Coggers drin, und das schöne ist man sieht's halt selbst, die Bilder
haben keinen Einfluss auf nix, also siehst du ich kann durchklicken und alles, also das
richtet sich jetzt an den den der vorhin gefragt hat, wer hat den vorhin gefragt, der Chrisly
Wiesel, genau, ja, und du kannst auch mehr machen, also zum Beispiel, jetzt löschen
wir es mal wieder, Coggers macht grad nicht viel außer Coggers sein wenn ich drauf drücke,
was ich noch machen kann, nehmen wir wieder hier Coggers als Beispiel rein ziehen, dann
kann ich sagen, ich will Hotkey haben, Steuerung gedrückt halten, das ist noch ein bisschen
fail, sagen wir, ich will Steuerung B haben als Shortcut, Upload, wenn ich jetzt Steuerung
B drücke, auch wenn ich in anderen Anwendungen drinne bin, dann kommt Coggers, also sprich
das kann ich jetzt wenn ich am Spielen bin auslösen, also mal angenommen, ich bin jetzt
gerade irgendwie aufm Overwatch spielen und wer gerade von irgendeinem Doomfist weggefistet,
dann drücke ich Steuerung M und KS oder LUL oder was auch immer, also sprich vom Streaming
Rechner kann ich mit globalen Hotkeys die Bildchen, die Overlays aufrufen vom anderen
Rechner oder vom Tablet hier über das Webinterface, weil ich will ja nicht, ich will ja nicht
allen Bildern ein Hotkey zuweisen, das ist ein bisschen Overkill, man kann hier übrigens
auch Filtern hier oben, oh nein der Filter ist kaputt, was hab ich denn da gemacht, wie
konnte ich den Filter denn zerstören, was hab ich kaputt gemacht, Moment, ich muss
mal kurz den Filter fixen, Filter, ich zeig dir gleich was man noch schönes damit machen
kann, es gibt nämlich noch eine, es gibt noch zwei Sachen, die sind richtig cool, was
hat er genau für Schmerzen, das muss hier, Name ist 0, aber Name kann nicht 0 sein, Pattern
ist auf jeden Fall nicht 0 oder, hab ich denn irgendwas verkackt, Pattern ist nicht 0,
Item Text, ach ja Text kann natürlich 0 sein, das ist natürlich dumm wenn Text 0 ist, Name
darf auf keinen Fall 0 sein, das weiß ich, das schmeiß ich mal kurz raus ob es daran
liegt, aha geht wieder, ja Text ist 0, es gibt Bilder, das muss ich abfangen, da muss
ich quasi hier gucken, wenn Text, also quasi wenn Text dann, das wird jetzt ein ganz ekliges
If, ansonsten falls, das wird jetzt funktionieren aber es sieht nicht schön aus oder auch
nicht, warum genau geht das jetzt nicht, was hat er jetzt für Schmerzen damit, ich guck
doch ab in Text was drinne steht, wenn in Text was drinne steht, dann to lowercase, muss
man Javascript sowas machen, ne oder, jetzt bin ich verwirrt, wartet mal Leute wir machen
das mal weg, Debugging mit Console was sonst, das ist in der Javascript Loop da ist das
erlaubt, Moment warte mal, jetzt hab ich gerade zu viel gelöscht, hab ich gerade zu viel
gelöscht, so oder, ne was, was hab ich jetzt zu viel gelöscht, was wird das, bin ich
gerade dabei zu zeigen, aber irgendwas hab ich vorhin kaputt gemacht, alter Javascript
wo ist denn jetzt, wo fehlt denn jetzt hier was, alter, weihre Güte, wisst ihr was, wir
machen Andu, Andu geht immer, Andu, so jetzt gehts wieder, ja jetzt gehts wieder, so löschen
das da weg, geht immer noch, was weiß ich, was ich da aus Versehen gelöscht hab gerade,
ach, Moment ich bin ja auch falsch, das Console Lock muss ja auch dahin, warum, null, ja aber
das hab ich doch gecheckt eben, das hab ich doch eben gecheckt, ich hab doch, ich guck
mal, wenn Item Text nicht Null ist, wenn das nicht Null ist, dann darf ich doch, ok,
ich mein, das ist eigentlich das Sinnloseste einfach, aber ich will einfach nur wissen,
was von der Sonntags her stimmt, man wüsste ja zwar nicht, was nicht, aber ok, ok, so,
wenn das stimmt, dann kann ich doch jetzt auch sagen, Item Text to Lower Case, das muss
doch jetzt funktionieren, was, wie kann das Null sein, hä, ich guck doch, ob es nicht
Null ist, das ist JavaScript, ja, ne, hä, ich bin jetzt hochgradig verwirrt gerade,
ah, ich hab ne Idee, ich hab ne Idee, leg das vielleicht daran, weil das falsch geklammert
ist, muss man das irgendwie so klammern, soll das vielleicht klammern, ah, ja, Tira Fox,
die Idee hatte ich auch gerade, aha, ja dann, ja, das sind so Probleme, die hat man öfters
mal, ich versuch mal ungefähr zu erklären, woran das liegt, ich geh einfach mal stark
von aus, dass quasi die Sachen unterschiedlich stark beinden aneinander, je nachdem, also
ohne Klammern, also sprich, wenn ich hier keine Klammern davor habe, dann könnte es
sein, dass JavaScript es so interpretiert, das oder das und danach bleibt im Prinzip
als nächster Ausdruck das hier stehen, ohne dass er vorher quasi diese Sache hier macht,
irgendwie sowas in der Richtung, vermute ich mal, wird da passiert sein, wobei es dann
eigentlich nen Sündagsfehler geben sollte, weil sonst steht hier einfach so ein Fragezeichen
alleine da, aber sowas in der Richtung wird es wahrscheinlich gewesen sein, also ich vermute
mal, das und das haben zusammen gebunden irgendwie, weil halt keine Klammern drumherum sind und
dann blieb halt das hier noch übrig und das ging nicht, irgendwie sowas in der Richtung
wird es wahrscheinlich gewesen sein, so, aber es funktioniert wieder, ok, nachdem wir das
jetzt gefixt haben, sind die Leute noch da, die wissen wollen, was das Tool macht, weil
ich wollte noch eine coole Funktion zeigen, also Kogas haben wir uns jetzt schon angeguckt,
Kogas mit Shortcut haben wir uns auch schon angeguckt, ich zeige euch jetzt noch mal was
cooles, und zwar, zeige euch jetzt mal, Kogas mit Text to Speech, Kogas und alternativ kann
man sogar die Sprache wechseln auf die Weep-Variante, hört sich ziemlich dumm an, oder, aber es
funktioniert, und übrigens, es ist auch schneller, er cache das im Hintergrund, da muss es nur
einmal von der Text-to-Speech-RP abrufen, da braucht man sich jetzt halt, ah, warte mal,
wow, wie kann man dem Ding Nice zu entlocken, nicht wirklich, oder, ah, fast, oh, das ist
nicht so, was ist besser, so oder so, oder so, was nice.u, nee, oh, oh, oh, oh, oh, oh,
nee, oh, das muss ich noch deaktivieren, das track and drop hier aktiviert, das müssen
wir noch ausmachen, das sollte definitiv nicht so sein, das sollte kein track and drop aktivieren,
das muss ich mir mal irgendwo aufschreiben, track, was, naiku, nee, ach, das war am besten
bisher, oder, wenn du etwas übersetzt haben willst, nee, nee, das ist, wir übersetzen
ja nicht wirklich was, das geht einfach an einen koreanischen Text-to-Speech-Service,
oder einen japanischen Text-to-Speech-Service, aber es ist nice, dass du japanisch sprechen
kannst, das können nicht viele, pogas, mit Sicherheit nicht eats, ja genau, das ist so
eine Sache, die man auch machen kann, also man kann sich hier schöne Text-to-Speech hinterlegen,
plus ein Bild, so uploaden, dann wird das immer zusammen abgespielt, und was natürlich
noch viel cooler ist, man kann auch Bilder plus vorgefertigte Sounds auswählen, zum
Beispiel sowas hier, das ist natürlich sehr nice, was, was zum, was geht gerade mit den
Hosts ab, was geht mit den Hosts gerade ab, hostet mich jetzt jeder mit einem View oder
was.
der hosting dedos
sag mal habt ihr gerade habt ihr gerade alle host eingeschaltet oder was ist das hier
bitte schön gerade oder hat jetzt einer gerade seine seine hosting bots drauf
losgelassen oder was
ich werde bestimmt nicht gehack sort es ist ja eher umgedreht die leute die
hosten werden gehack sort
habt ihr jetzt jetzt bin ich echt verwirrt
ich muss auch mal einstellen irgendwie dass dass der host erst quasi so ab keine ahnung
so ab 5 5 jahre oder so angezeigt wird
ja danke für die ganzen ein viewer host
die die die die host hosting bots army ist am start
gachi bass hat keinen sound könnte man aber machen
ich werde nicht geview bot ich werde gehost bot
5
Ich habe jetzt mal kurz die host ausgeschaltet ach ne ändert sich das jetzt
wie auch immer das jetzt genau funktioniert
kurz jetzt habe ich jetzt genug verwirrt
sag mal hast du dir das neue kotz geholt ja habe ich habe ich
ich will mich jetzt nicht darüber beschweren gehostet zu werden ich frag mich halt nur wie
man das hinkriegt quasi mit gefühlt keine ahnung 50 accounts oder so allen zu hosten
da braucht man ja quasi irgendeinen bot oder so
ich werde es mal kurz ausmachen kann man dann wenn das vorbei ist wieder einschalten
wo sind wir jetzt eigentlich stehen geblieben
kann es sein dass es immer noch dass es immer noch sound macht obwohl es eigentlich aus
ist witzig
wahrscheinlich reicht das nicht wenn man das ausschaltet
ja wir sind beim config file
stehen geblieben
ah hier kann man einstellen viewer minimum 5
ok das hat anscheinend gegriffen sorry jetzt müssen mindestens 5 leute zugeschaut
haben dass der host angezeigt wird aber das hätte es wahrscheinlich noch 2 stunden angezeigt
ok config sind wir stehen geblieben ich war gerade noch dabei euch noch ein feature zu
zeigen also das haben wir schon ja genau und unter waff dateien die abgespielt werden
können alternativ geht das ganze auch ohne bilder das ist text to speech ohne bild und
das eine waff datei ohne bild da brauche ich noch ein paar schöne bildchen für ok stop
also wir wissen jetzt wie wir das auslesen können
config datei sind wir stehen geblieben genau
i options feature wtf wie viel zeug hat microsoft denn bitte schön noch für irgendwie eine
beschissene config datei i options feature
warum ist das so kompliziert
warum ist das so kompliziert please microsoft ich will eine config datei einlesen
ich mein das ich mein so könnte man das schon machen wie der typ das hier auch vorschlägt
ja ach so kann man da auch drauf zugreifen probieren wir das mal aus probieren wir mal
aus ob das funktioniert tatsächlich mein section test ok kommt mal ob das funktioniert
eins wir haben da eins ausgelesen aus der config datei ok merke das müssen wir muss ich mir
noch mal in ruhe angucken wir machen es jetzt auf die billige art und weise so wie der typ
das ja auch macht wir entjacken uns das einfach einmal am anfang dann können wir es nämlich
überall verwenden dadurch dass wir das jetzt registriert haben hier unser options configuration
object da können wir es überall verwenden aber das ist nicht schön da gibt es bestimmt
schönere varianten für das ganze zu machen wie save man überhaupt irgendwas wie schreibt
man jetzt was in die config datei save alter ist das kompliziert das ist doch scheiß config
datei
was 1 2 3 4 was war das
warum
ansonsten ich bin ja sonst immer so übelst wie nennt man das panisch zwingen wir den
prozess manager auf der wird jetzt wird jetzt immer gleich durchguckt mein gott läuft irgendwas
im hintergrund
dafür habe ich eigentlich adplug am start
mal dicht
aber vielleicht den neuen browser
aber was habe ich eigentlich den chrome installiert ist sonst launch mal update mal gucken ob es
was neues gibt neue version bm update mit macron man weiß ja nie monka es
ist
Abdrehen Blitz
Okay, ähm...
Sie machen
Ich bin echt immer so voll Paranoid wenn irgendwelche Pop-Ups aufgehen, ja?
Dabei hab ich doch einfach nur ein iPhone gewonnen.
Was ist das für Musik, äh, der Deep House Relaxed Study 24-7?
So, gut, wo sind wir stehen geblieben? Jetzt kann man nämlich endlich weitermachen.
Jährliche Besucherumfrage, nein, geh weg, ich will das nicht in meiner Historie haben.
Ok, jetzt haben wir Zugriff auf unsere Config-Datei, wie speichert man da jetzt eigentlich, was?
App-Settings-Update-Encode, ja.
Moment, warum ist das so kompliziert so eine Scheiß Config-Datei zu updaten?
Ach, so geht das. Ok, also sprich, ich kann jetzt einfach sagen, ob das funktioniert, muss man mal ausprobieren, also sprich, ich kann jetzt einfach sagen,
This Configuration Test gleich 2, oder was? Nein, geht natürlich nicht.
Ach so, ok, es muss ein String sein, anders ist es nicht erlaubt, auch gut.
Und das geht jetzt? Das funktioniert jetzt? Nö, funktioniert nicht.
Das funktioniert nicht. Also das ist mir jetzt echt zu blöd, ey.
Warum habe ich überhaupt so einen riesen Aufwand für Config-Dateien, wenn ich sie nicht ändern und speichern kann dann am Ende? Alter Falter, ey.
Boah, ey, ich mach das jetzt doch von Hand. So, Scheiß drauf. Geht fort.
Muss ich mir irgendwann mal angucken, wie man das macht. So, weg hier.
Also, wir wollten das ganze speichern in unserem Desktop-Service.
Hab ich eigentlich mal meine, ist hier abgedatet? Brauchen wir nicht.
Genau, hier können wir speichern, wir machen das jetzt einfach von Hand.
Was programmierst du eigentlich, teile ich gleich, wir speichern uns jetzt erstmal das Fenster, die Fensterkoordinaten.
File, wir machen das jetzt mal wirklich ganz billig, ich will einfach mal gucken, was wir machen. Write, Text, String, wir machen das jetzt mal Jason von Hand.
Warum? Weil es geht in Datei Settings, ach Moment, umgedreht, umgedreht, in Datei Settings Punkt Jason.
So, da kommt jetzt rein. Test, darf man Jason auch Single Quoten irgendwas?
Da kann man speichern, aber wie speichere ich da drin in ASP.NET Core quasi schreibend?
So, da ist hier, aiaia.
Hab ich jetzt ein Settings? Ich müsste jetzt irgendwie ein Settings Jason haben, da ist es doch, Settings Jason. Test 1, cool, nice.
Ok, man kann nichts, man darf nicht Single Quoten, das ist ziemlich dumm.
Moment, äh, wo ist denn was stehen geblieben? Hier, ähm, ja gut, da müssen wir halt Mr. Escape nehmen.
Wo noch nicht? Ah, doppelt muss man es machen, genau, wenn man Etta vor hat. Wenn man kein Etta vor hat, dann, jaja, ok.
Also, Test. Ja, das guck ich mal, ich will erstmal die Settings so speicher, einfach mal schauen, ob das funktioniert. So, und jetzt brauchen wir also von meinem Window, brauchen wir jetzt quasi Position oder sowas. Top.
Location. Gibt es nicht irgendwie eine schöne, eine schöne, in WPF eine schöne Variable, wo das alles schon drin steht? Window Startup Location können wir setzen, ja.
Ach nee, da kann man plus sagen, wo, Center. Ja, Position, Position irgendwie nicht. Location auch nicht. Ich meine, es gibt Top, Left und sowas, aber es muss doch auch sowas geben wie, sowas wie Point oder so.
Rectangle, Koordinaten, nee, suchen wir mal. ASP, äh, nicht ASP, WPF, Window, Diamond, sowas.
Äh.
How to Set a Location, ja, wo, wie heißt das sogar? Point to Screen Location, ok, anscheinend muss man.
Oh, das ist aber umständlich. Ja gut, dann müssen wir uns das irgendwie selbst speichern, da müssen wir irgendwie, das ist aber schon doof, da müssen wir quasi sowas sagen wie Top und dann müssen wir uns das irgendwie speichern.
Kann man, jetzt muss ich mal gucken, ob das prinzipiell funktionieren würde, weil nee, da müsste ich das JSON encoden.
Wir speichern uns jetzt nur mal Left. Wir speichern uns jetzt nur mal Left und saveen das hier drinnen. Oh, wie sah denn euer String Interpolation aus, so?
Nee, was mache ich denn? So? So? So? So? Moment, äh, das ist jetzt neu.
Wie escapet man da drinnen?
Kann man mit Vue.js leicht eine simple Web Anwendung bauen, ja? Naja, klar, das ist super simple. Ich hatte auch keinen Schimmer davon.
Okay, also man kann mit dem Backslash escampen.
Haha, hast du sie so gedacht? Ach, ich muss die, und da muss man zwei Stück machen oder was? Eieiei, ist das wieder kompliziert. Microsoft, please.
Boah, ey. Nee, Moment, da nicht, da, da so. So, und jetzt darf man hier nämlich Sachen einsetzen drinnen.
Darf ich nämlich noch mal Left. Wir könnten auch einfach irgendeinen JSON, JSONencoder oder irgendwie sowas nehmen. Nee, wie heißt das Ding, was die dabei haben? New, newdingsbumsoft.
JSONencoding, irgendwas, sodass man einfach das ganze Objekt mal encoden.
So, jetzt kann ich mir quasi speichern, wo das Fenster ist. Was heißt, ich könnte jetzt beim Startup den Kram, okay, gucken wir mal, ob das prinzipiell tut.
Äh, nope. Ich hab durchgeklickt.
So, hat es das jetzt gespeichert? Watt, warum nicht? Warum hat das nicht gespeichert? Überschreibt das nicht oder was?
Doch, das überschreibt doch. Wartet mal.
Ah, er ist am abkacken, weil, ach, weil ich nicht invoked hab. Deswegen sag ich, Leute, deswegen, ich hab's euch am Anfang gesagt, deswegen mach ich das alles durch diese Rapper-Klasse, weil du sobald du irgendwelche UI-Geschichten machst, instant irgendwelche Multiswitch-Geschichten hast, die nicht funktionieren. Immer.
Gibt es nicht irgendwie in WPF eine Position-Klasse oder sowas? Location-Klasse, nee, das sind Maps.
So geilen Bilder aus Form, es gab sowas.
Okay, die meinen das echt ernst, man muss wirklich left, right und so selbst setzen.
Das ist natürlich schon ganz schön blöde.
Da machen wir das anders, dann bauen wir uns das hier ins Fenster ein.
Dann brauchen wir irgendeine Klasse dafür.
Irgendeine, das kann doch nicht sein, dass man das von Hand machen muss.
Ist sowas wirklich nicht in WPF drin, das kann ich mir gar nicht vorstellen.
Das muss doch in WPF drin sein.
Dass man jetzt irgendwie was durch left, top und dann irgendwie...
Ja, einen Point gibt es, das ist aber generell.NET eingebaut.
Achso, ich bin ja auch blöd, wir können das anders machen, wir können eine Rectangle verwenden, die gibt es doch bestimmt.
Rect, eine Rect-Tangle.
Sowas können wir nehmen, Rect.
Moment, es gibt einen Struct, Rect und es gibt einen...
Moment, vielleicht heißt es auch... heißt es Rect, vielleicht? Nee.
Moment, das geht, das geht, das geht.
Hau du Kleinstars.
Das gibt es anscheinend wirklich nicht, sowas.
Ich glaube es immer noch net.
Ich meine, die fangen jetzt schon an irgendwelche native Windows Funktionen aufzurufen.
Ich meine, das kann doch nicht ernst sein, oder?
Okay, aber wir können eine Rectangle, das können wir zurückgeben.
Was ist eigentlich der Unterschied zwischen einem System Windows Shapes?
Ah, Moment, das hier ist was zu malen. Das ist was zu malen und das hier ist quasi was wir brauchen, ja.
Okay, naja, dann machen wir es halt so drüber.
Result gleich Rect.
Dann kann man das so machen. Left.
Ah, da kann man eine Location setzen anscheinend.
Ja, aber irgendwie kriege ich das aus meinem Window nicht raus.
Okay, dann müssen wir es von Hand setzen.
Also sagen wir X, X ist dann quasi Left.
Und Y ist dann quasi Top.
Korrigiert mich, falls ich irgendwie auf dem Schlauch stehe.
Width ist dann quasi Rectangle.
So, und dann kann man das gleich returnen.
Gut, dann haben wir da jetzt eben eine GetPosition Methode.
Weil, muss so sein.
Fail.
Dispatcher invoke.
Result, Result ist eine Rect.
Okay.
Davon weglassen, auch gut.
Rect.
So, und jetzt Chasifyen wir das Ganze, falls man das machen kann irgendwie.
Aber das müsste eigentlich Instruct doch.
Kann man Instruct mit, mit?
Rect.
Alter, ist das wieder, da mache ich lieber von Hand.
Okay, ich kann es ja mal probieren.
Jason Serializer.
Ich habe schon lange noch einmal verwendet.
Serialize.
Wie hat das noch mal funktioniert?
Wie ging das noch mal?
Das war, wenn man es weiß, total simpel.
Jason Convert.
Jason Convert, ja genau.
Jason Convert, Rect.
Gucken wir, ob das klappt.
So, wir speichern Standard, printen wir das mal.
Falls er das überhaupt Serializen kann, gescheit.
Moin Informatiker Unterstrich.
Hey, klappt.
Easy.
Hi.
Das sieht mir nicht aus wie ein Jason Serializer Rektangel.
Irgendwie.
Kann ich das wieder deserialisen?
Geht das dann?
Wahrscheinlich nicht, ne?
Deserialize Object.
Wieder zu einer Rekt.
Und zwar Output.
Mal gucken, ich habe das Gefühl, das wird so nicht funktionieren.
Die machen es uns heute aber wirklich verdammt schwer.
Max, wie häufig wirst du von Fremden eingeschworen?
Quasi gar nicht, ganz selten.
Weiß ich auch keiner so wirklich, wie ich ausschaue.
Okay, er sagt, dass es prinzipiell funktioniert hat.
Okay.
Da bin ich aber gespannt,
ob das wirklich funktioniert hat.
Rekt.
Ah, äh, äh, New Rekt.
Nein, warte mal.
Rekt heißt das Ding jetzt einfach.
Rekt.
Sollte das wenn nicht überhaupt ein Array sein?
Wenn überhaupt, ja.
Ich hätte eigentlich erwartet, dass da jetzt so was rauskommt,
wie in einer JSON-Objekte nach dem Motto x52, y120, width 3000.
Doch irgendwie sowas, weißt du?
Aber nein, ist es nicht.
Also ich weiß ja nicht so wirklich, was das Ding da ausgibt.
Aber es scheint irgendwas zu tun, ja.
Es scheint irgendwas zu tun.
Okay, also Leute, es funktioniert.
Ich weiß zwar nicht so genau warum, aber es funktioniert.
Also können wir uns das dann mal, äh, window size oder window position pos.
Das heißt einfach nur pos.
Ah.
Kann das sein, dass der Teil irgendwie gar nicht schreibt?
Für window Rekt, ja.
Wo, wo, wo, wo, wo kommt das her?
Ist mein string interpolation fail?
Ach, Moment.
Was mache ich denn für ein Scheiß?
Output muss da rein nicht Rekt.
Proggers, ja.
Proggers ist nice.
Arbeite so beruflich auch als Programmierer.
So, ich, ich, ich würde es mal eher in Richtung DevOps beschreiben,
wie sich das heutzutage ja schön stylish nennt.
Ja, ich programmiere auch Sachen, aber ich arbeite auch mit Admins zusammen.
So ein, es ist immer schwierig zu erklären.
Letztendlich hauptsächlich kümmere ich mich eigentlich um unsere Source Code Verwaltung, ja.
Also sprich, wenn neue Leute, neue Features, also wenn Leute Features programmieren,
dann sagen sie hätten es gerne für die nächste Version drinnen.
Oder wir brauchen noch einen Fix für die Version vorher.
Da muss man gucken, dass das Ganze funktioniert,
dass wir einmal im Monat eine neue Version rauskriegen.
Ja, selbst, selbst programmieren ist ein bisschen weniger geworden,
eigentlich in letzter Zeit in der Richtung.
Deswegen muss ich hier daheim mal ein bisschen ran.
Schreibt richtige Comment-Messages, ja, das gucke ich mir auch an.
Wobei, da bin ich nicht sehr kritisch.
Wobei, wir hatten früher einen Kollege, der ist nicht mehr da.
Der hat immer sowas geschrieben, wie Dinge hinzugefügt,
oder auch noch so richtig schön auf Deutsch, ja.
Dinge gefixt stand da manchmal drin im Comment.
Da habe ich mir auch gedacht, ja, schreibt doch mal ein bisschen,
ein bisschen irgendwas, wo man was mit anfangen kann rein.
Dinge gefixt, das war der beste.
Oder was, also meine Lieblingscomments in letzter Zeit sind eigentlich sowas wie
neue Zertifikate.
Du weißt ja, da ist es voll klar für den Typ, der das Comment schreibt,
voll klar was gemeint ist, ja.
Der überschreibt das nicht, kann das sein?
Der überschreibt standardmäßig nichts.
Das Problem ist, keiner hat eine Ahnung, was neue Zertifikate sind.
Man musste dann quasi die Zertifikate angucken,
und Zertifikate sind nur wirklich nicht schön zum Angucken.
Hä?
Wo kommt dieses hässliche, wo kommt dieses hässliche Dollar her?
Kommt das da her?
Ah, man muss da gar nicht escapen.
Ach so, ich bin ja ein Kackknub.
Zertifikate gehören nicht ins Git.
Tja, das ist nochmal ein ganz weiterer, nochmal ein ganz anderer Punkt.
Wir haben teilweise Sachen bei uns im Git drinnen liegen,
wo man allgemein erwarten würde, die gehören da eher nicht hin.
Zumindest checkt keiner mehr Tas und Zips ein.
Ich hab mittlerweile, hab ich einen Githook drinne,
der quasi alles, also erstmal alles über eine gewisse Größe ablehnt
und alles, wo irgendwas anderes außer Textfiles drin ist,
auch erstmal ablehnt.
Wo arbeitest du denn?
Ich kann dir nicht genau sagen, wo ich arbeite,
aber ich arbeite in Frankfurt am Main bei einem großen Finanzdienstleister,
der größte in seinem Sektor.
Also das ist nicht irgendwie so eine Klitsche oder so,
aber das ist glaube ich einfach schon wieder zu Business,
um manche Sachen ordentlich zu machen.
Habt ihr auch manchmal so den Tick, dass ihr immer in den Prozess Explorer guckt,
ob alles in Ordnung ist?
Ich mach das immer, ich guck dann immer durch so,
was haben wir denn hier wieder schönes am Start,
irgendwelche OBS Plugins, irgendwelche Konsolen Hosts,
die wir eigentlich auch mal schließen könnten,
zack, gehen sie wieder zu.
Ja, da haben wir Visual Studio am Start, da haben wir das Host am Start,
nicht irgendwie ein Host, sondern das Host ist da.
Intel Bluetooth Geschichten, weiß ich nicht,
guck mir das gerne ab und zu mal an,
dann ist da Standard Collector Service am Start
und dann sehe ich im Prinzip alles okay.
Also wir wurden trotzdem, dass wir ein iPhone gewonnen haben vorhin,
wurden wir nicht gehack-sort.
Nur 16 Gigabyte in 2K80.
Alul, alter, Alul.
Ja, RAM ist ja wieder ein bisschen billiger geworden,
aber ich habe Gerichte gehört,
dass RAM angeblich wieder teurer wird.
Kann man eigentlich mit dieser Overwrite...
If the target file already exists is overwritten.
Okay, anscheinend doch.
So, wir haben jetzt ewig rumgemacht,
weil wir versucht haben, rauszufinden.
Okay, funktioniert, nice.
Wisst ihr was, wir machen einfach gar nichts,
wir speichern das Ding einfach in der Datei.
Upsettings als Startsettings,
nee nee nee nee, Upsettings habe ich schon wieder aufgegeben,
Upsettings ging nur über diesen komischen Microsoft-Wrapper.
Was ich immer noch ganz komisch finde eigentlich.
Dass man da nicht reinschreiben kann.
Ja, warum geht das eigentlich nicht?
Warum geht das eigentlich nicht?
Ich meine, das hier kann ich, aber das Jasoning kann ich safen.
Das geht nicht.
Die haben quasi ein komplettes...
ein komplettes so Konfig-File-Injection-Sonstwass-System,
aber man kann das Konfig-File nicht speichern.
Das macht mich echt, das macht mich ganz, ganz nervös, ey.
Das macht mich ganz, ganz, ganz verwirrt mich das, ey.
Da machen wir an der Stelle jetzt auch nicht weiter damit,
bis ich mir was ausgedacht habe, wie man das schön machen kann, aber...
Schaut ihr doch das Property-Setting an, was ich vorher geschickt habe.
Ja, machen wir, machen wir.
Von 2006.
Ach, das, ja, das kenne ich.
Das kenne ich.
Das funktioniert ja prinzipiell in fast jedem Objekt.
Na, ich dachte mir, im Jahr 2018 können wir das irgendwie mit Jason oder so machen, aber...
Aber ich finde es sehr merkwürdig.
Ich finde es sehr, sehr merkwürdig.
Warum habe ich eigentlich so viele Zuschauer heute?
Kann mir das mal irgendjemand erklären?
Liegt es an den 180 Hosts von vorhin?
Oder woran liegt das?
An sich finde ich ASP.NET Core ultra nice, evoli, muss ich sagen.
WPF ist so eher Hassliebe.
Aber ASP.NET Core hat mich echt überzeugt.
Ich hatte ja vorher noch nicht viel mit ASP gemacht.
Noch kein Battlefield zum Spielen.
9. kam das, ne?
9. für Super Early Access.
9. war das, glaube ich.
Ich zur Open Beta.
Ich zur Open Beta.
Nicht zur Open Beta.
Ich hab's doch auf Twitter gepostet.
Nee, hab ich nicht.
Ja.
Reddit, Reddit ist immer gut dafür.
Ja, Early Access 9. Februar.
Wobei es mir ehrlich gesagt persönlich echt wieder strebt, hierfür Geld auszugeben.
Alle machen sowas in GS.
Das hab ich auch zu bieten hier.
Moment.
Ah, Moment, ich hab's zugemacht.
Ja, GS.
Hab ich auch zu bieten.
Ja, hier muss ich mir irgendwie mal was geschaffen.
Überlegen, wie wir das speichern können.
Das ist ja nicht schön.
Ja, genau.
Weil jetzt viele Leute gefragt haben, was ich hier bastle,
zeige ich das ganze noch mal.
Danach muss ich was futtern.
Also, für alle die sich fragen, was das Ganze ist.
Ich denke mal nächste Woche oder so, Sinnversand so weiter,
gibt es sowohl den Source Code auf GitHub,
als auch einen Installer für alle, die es ausprobieren wollen.
Also, ich bastle ein Tool für Streamer.
Irgendwie so, dass man alles schön sieht.
Im Prinzip ein bisschen wie Elgato Stream Deck.
Halt bloß rein, ohne Hardware dabei.
Ich habe allerdings eine Library gefunden für Elgato Stream Deck Integration.
Das werden wir uns auch noch irgendwann in einem der nächsten Streams angucken.
Sie scharf läuft auf Linux.
Ja, ja.
.NET Core ist eine coole Sache von Microsoft.
Ich werde langsam zu Microsoft-Fan.
Obwohl ich eigentlich auf der Arbeit, wenn es um Betriebssystems-Sachen geht,
hauptsächlich immer Geld mit Linux verdiene.
Aber Microsoft macht viele gescheite Sachen.
Okay.
Also, eine interessante Frage.
Frage Joke Gaming.
Auf wie?
Dann hat mein Programm Vorrang.
Normalerweise, ich habe jetzt registriert,
Steuerung L ist normalerweise in Chrome, dass man die Leiste fokussiert oben.
Meine Shortcuts haben Vorrang.
Und wenn du versuchst, einen Shortcut zu registrieren,
der schon global registriert ist, gibt es eine Fehlermeldung und es klappt nicht.
Logischerweise.
Es können ja nicht zwei Programme globale Shortcuts registriert haben.
Du kannst Gift darauf nehmen, dass in Visual Studio Steuerung L garantiert belegt ist.
Aber mein Programm hat Vorrang.
Weil es als System weit registriert ist.
Guck, das passiert hier.
Ich kann es dir auch mal zeigen, an welcher Stelle das Ganze passiert.
Da.
Ach, wir haben es sogar schon auf.
Da.
Add-Hotkey.
Hier passiert das.
Add-Hotkey, das wird letztendlich aus dem Controller aufgerufen
und einmal beim Start der Anwendung.
Und da wird ein bisschen rumkonvertiert, dass die Zeichen im Endeffekt stimmen,
welche Sachen wir beinden.
Wenn ein D davor ist, gucken wir eben, dass es ein Num Block oder eine Zahl ist
und kein normales Boost.
Egal.
Und hier unten beindet er den Hotkey.
Und wenn der Hotkey ausgelöst wird, wird eben die Funktion aufgerufen,
die hier oben übergeben wurde, als Callback.
So, und was wird als Callback übergeben?
Da, das da.
Also im Prinzip, es wird quasi auf Knopfdruck,
dass das Meme an Ausschalten getriggert.
Damit.
Und wenn das Hotkey hier, der Try Catch ist drum herum,
wenn das Registrieren eben in dem Fall, was du angesprochen hast,
wenn das nicht funktioniert, dann gibt es natürlich eine Exception.
Also sprich, wenn jetzt irgendein anderes Programm, Global,
Steuerung M, Steuerung L hier für Lul und MonkaS registriert hat,
da gibt es eine Fehlermeldung und die muss ich an der Stelle hier halt abfangen
und sag dann, nope, hat nicht funktioniert.
Hotkey registrieren, fehl geschlagen.
Hast du was mit Datenbanken zu tun?
Nur sehr am Rande.
Wir haben ein eigenes Team, was sich um Datenbanken kümmert.
Wir haben ein paar Postgres-Datenbanken, wir haben auch Oracle-Datenbanken,
wie quasi alle Business, Enterprise, Bank-Dinger.
Ja, wir haben relativ viel.
Wir haben auch MongoDBs auf der Arbeit.
Moin, Flo Schuller.
Ja, genau.
Und was das Ganze macht, kann ich jetzt auch nochmal zeigen.
Wie gesagt, die Oberfläche, warum habe ich 144 Zuschauer?
Warum sind das so viele Leute heute?
Ich meine, ich finde es nice.
Ich sage ja nichts gegen oder so.
Ich werde mich jetzt ja nicht beschweren, dass ich viele Zuschauer habe.
Übrigens danke für die ganzen Follows.
Wir haben ja schon mittlerweile richtig viele Follows.
Wir haben ja mittlerweile schon über 7000 Follows.
Alter, Poggers.
7.034 Follower haben wir mittlerweile schon.
Das ist tatsächlich sehr nice.
Nicht zu sagen sehr, sehr nice.
Leider sehe ich nicht alle Follower.
Ich sehe bloß die letzten paar, die gefollowt haben.
Aber schön, dass ihr alle dabei seid.
Ich weiß gar nicht, warum es heute so viele sind.
Genau, also was macht das Ganze?
Warum bist du noch kein Twitch-Partner?
Weil ich mich da noch überhaupt nicht drum gekümmert habe.
Es hat für mich jetzt auch nicht so die Priorität,
denn das ist für mich komplett zum Entspannen eigentlich nur Twitch.
Meistens mache ich ja...
Meistens wollte ich sagen, meistens mache ich was auf YouTube.
Ich mache eigentlich gar nichts aktuell.
Außer ab und zu mit meiner Katze auf dem Sofa sitzen,
wobei das die alte Katze ist.
Ja, aber was das Programm macht,
um jetzt mal zum Punkt zurückzukommen bei der ganzen Geschichte.
Es ist relativ...
Ach so, der Friseur.
Ja, der spielt Black Desert.
Den können wir übrigens hiernacht auch hosten.
Und das Programm zeigt Overlay-Bilder an.
Das habt ihr ja wahrscheinlich schon alle gesehen.
Und wie man hier sieht,
Overlay-Bilder, durch die man durchklicken kann.
Und die auch keinen Fokus nehmen oder sonst was.
Guckt mal hier auf die Browser-Neiste.
Es bleibt alles fokussiert,
egal ob ich Bilder einblende oder nicht.
Das heißt, das ist eigentlich ein Tool für Streamer,
die beispielsweise sagen, was Geiles passiert,
Poggers einblenden oder so.
Kann man einmal per Shortcuts einblenden.
Hier Steuerung M, Steuerung L in dem Fall.
Oder aber über das Web-Interface geht das Ganze natürlich auch.
Und das Web-Interface ist dafür gedacht,
um auf einem Tablet zu laufen.
Oder auf einem zweiten Rechner.
Oder auf der Xbox.
Oder auf irgendeinem Gerät mit Browser.
Weil letztendlich geht das überall.
Jeder halbwegs aktuelle Browser mit JavaScript kann das anzeigen.
Und dann kann man dann quasi Sachen,
die man nicht auf Shortcuts gebunden hat.
Also quasi jetzt in dem Fall.
Hier.
Aja ja.
Kann man dann beispielsweise was anklicken.
Oder dann gibt es dann.
Aja ja! Aja ja!
Inklusive Sound, inklusive Overlay.
Ohne dass es einen irgendwie aus dem Spiel rauskickt.
Oder sowas.
Also im Prinzip,
ein bisschen wie Elgato Stream Deck Plus,
dass ich selbst erweitern kann.
Läuft das im Internet Explorer?
Das ist eine richtig gute Frage.
Das probieren wir jetzt mal aus.
Das probieren wir jetzt mal aus.
Ich glaube eher nicht.
Ich glaube nicht,
dass das hier mit dem Internet Explorer funktioniert.
Nein.
Okay.
Internet Explorer ist nicht.
Wie macht man hier überhaupt DevTools auf?
Es kackt schon instant ab.
Müssen wir mal gucken.
Vielleicht ist es kein großer Akt.
Aber ich vermute mal.
Ich verwende ja relativ neue JavaScript Features.
Sowas wie Async, Await und sowas.
Ich gehe mal davon aus,
das kann der einfach nicht.
Zum Beispiel im Firefox und so ist es kein Problem.
Ah, falscher Port.
Da funktioniert es natürlich.
Außer dass er die Bilder komisch markiert.
Das hatten wir schon mal.
Das wollte ich mir mal angucken,
warum da Firefox eigentlich so komisch die Bilder markiert.
Das hatten wir das letzte Mal schon festgestellt,
dass es irgendwie ein bisschen buggt im Firefox.
Aber es funktioniert auch im Firefox.
Es wird also wahrscheinlich auf so ziemlich jedem anderen
Browser, Tablet, sonst was Browser funktionieren.
Edge.
Wollen wir mal gucken.
Leute, wollen wir mal gucken,
ob es in Edge funktioniert.
Wollen wir das nochmal überprüfen, ja.
Ach ja, vorher wollte irgendjemand wissen wegen dem...
Erst mal fragen, ob derjenige noch da ist.
Irgendjemand hatte vorher noch Fragen zu diesem MikroTik-Router,
den ich mir gekauft habe.
Falls derjenige noch da ist, was war das?
Und ja, bist du überhaupt noch da?
Edge kann das, ja.
Ich gehe auch mal davon aus, in Edge funktioniert es.
Ja, gar kein Ding.
In Edge funktioniert es sogar besser als im Firefox.
Komm mal, da ist das Highlight.
Der Highlight-Bug tritt nicht auf.
Edge funktioniert natürlich.
Generell ist der Edge gar nicht mal so...
Der Edge spackt aber bei Kogas rum.
Habt ihr das gesehen?
Okay, jetzt funktioniert es.
Edge ist an sich eh gar nicht so schlecht.
Edge fühlt sich auch schön schneller,
aber trotzdem...
Firefox für mich immer noch der beste Browser.
Auch wenn ich im Prinzip Chrome eigentlich lieber,
beziehungsweise Chromium eigentlich lieber verwende.
Guck mal, Kogas kackt ab nach einer Zeit.
Seht ihr es?
Im Edge.
Wahrscheinlich.
Ich glaube, der will CPU-Zeit sparen wegen für Animationen.
Guck, der...
Der macht nämlich auch hier die GIFs.
Der hält die GIFs an.
Ja, Desmond.
Genau das ist der Grund, warum ich Firefox verwende.
Genau das.
Weil die Suchleistung, die Ulber in Firefox einfach das Beste ist, was es gibt.
Wie läuft das eigentlich mit mehreren Geräten im Web-Interface?
Also funktioniert das dann alles mit Markierung?
Ja, das funktioniert.
Ich kann es euch ja mal zeigen.
Guck mal.
Also wir simulieren jetzt einfach mal mehrere.
Browser da, Browser hier.
Guck mal, ob wir das irgendwie gescheitert gesplittet kriegen.
So.
Edge, Firefox, wenn ich das hier aufmache...
Wir brauchen ein Bild, was man sieht.
Guckt, Leute.
Markiert, markiert.
Aus.
Echtzeit.
Und übrigens, wisst ihr, was noch ein schönes Feature ist?
Guckt mal, wenn ich das anklicke und Audio läuft, ist es orange.
Und sobald Audio vorbei ist, geht es nur noch auf normal aktiviert über.
Wie ruft man das Web-Interface auf?
Du gehst einfach auf Localhost Port 5000.
Oder aber ich könnte es auch so machen, dass das Web-Interface sich automatisch startet.
Also sprich, ich könnte quasi einbauen, dass wir einen Browser aufmachen beim Starten vom Programm.
Das könnte man machen.
Wobei, haben wir doch?
Habe ich doch.
Habe ich doch.
Es geht doch automatisch in den Browser auf, wenn du es startest.
Es geht automatisch in den Browser auf, wenn du das Programm startest,
und dann siehst du ja die Uhrl und kannst im zweiten Rechner drauf zugreifen.
Ja, und ihr seht mal, wie schnell das funktioniert.
Wir brauchen jetzt mal ein Bild, was man bei beiden sieht.
Hier, Kappa Pride.
Wo habe ich einen Lull? Lull ist da, Lull.
Kriege ich irgendwie Lull so hin?
Guckt mal, hier ist Lull.
Da ist Lull.
Guckt es euch mal an.
Seht ihr, dass das quasi komplett synchron ist.
Gesyncht in beide Browser, Desktop Fenster.
Ich halte jetzt einfach die Taste gedrückt.
Das ist instant.
Das ist mega schnell, das Ding.
Also das würde man gar nicht erwarten.
Es kommt einem vor, als ist das im Endeffekt alles eine Anwendung.
Natürlich ist das lokal.
Wenn es nicht lokal wäre, wäre das auch nicht so schnell.
Also sprich, wenn du da irgendwie 50 Millisekunden Latenz drin hast,
dann hast du halt 50 Millisekunden Latenz drin.
Aber ich finde es schon mal nicht schlecht, dass es so schnell ist, obwohl es lokal ist.
Ich meine, es ist wirklich instant da.
Dank SignalR.
Ja, localhost steht jetzt ja da auch bloß drinnen,
weil ich standardmäßig auf localhost das Ding im Browser starte.
Ich habe es ja gestern im Stream beispielsweise auch komplett vom anderen Rechner verwendet.
Also localhost würde ich jetzt nicht unbedingt reinschreiben.
Wir könnten auch zum Beispiel noch, das hatten wir nämlich in der ersten Version,
einen Task, einen Tray-Icon machen, wo man dann rechts draufklicken kann, so nach dem Motto öffne Webinterface oder sowas.
Kannst du mal sagen, welche Technologien du verwendest und für was die zuständig sind?
Ja, also im Backend ist das ASP.NET Core.
Wozu sollte ich den Nginx-Config mitliefern?
Das ist dafür gedacht, es lokal zu verwenden.
Das ist dafür gedacht, wenn man Streamer ist und im Stream Bildchen anzeigen will,
vom zweiten Rechner oder vom Tablet aus.
Da brauch ich ja keine Nginx-Config für.
Du kannst es einfach starten, gutes.
Ich meine, es ist Evidence Only.
Nee, das geht im lokalen Netz, das ist überhaupt kein Ding.
Guck, ich zeig dir das.
Du musst mal einkommentieren, dass er auch nicht nur bei mir lokal lauscht.
So, mach mal ein Chrome auf.
Zack, sind wir drauf.
Fertig.
Das ist eine relative Fahne, da muss man auch nichts umruten.
Die Meme-Bibliothek mitgeliefert?
Ja, ich hab mir schon Gedanken zugemacht, was man mit ausliefern könnte und was nicht.
Ein paar Examples einfach.
So, und auf die Adresse, ich mach's jetzt mal vom zweiten Rechner aus.
Das seht ihr jetzt halt nicht.
Ich mach das einfach auf vom zweiten Rechner aus.
Und jetzt klicke ich hier vom zweiten Rechner aus durch und es funktioniert.
Und ihr seht, es ist komplett gesyncht.
So, als würde ich jetzt auf dem Rechner klicken.
Aber ich klicke gerade auf den zweiten Rechner.
Big Brain.
Also das funktioniert tatsächlich ganz gut so.
Kann man eine Meme-Server machen, sodass man die sich die Memes direkt downloaden kann?
Meinst du, die Memes downloaden, die du erst selbst ge-uploaded hast?
Weil die hast du doch eh schon.
Oder meinst du, dass man eine Suchfunktion einbaut?
So nach dem Motto, ich suche jetzt ein Herr der Ringe-Meme und gebe das ein und ich bekomme
quasi so eine Google-Bilder-Suche, wo ich mir das auswählen kann.
Sowas in der Richtung meinst du, oder?
Da habe ich mir auch schon Gedanken zu gemacht.
Ob wir nicht irgendwie was bei Giphy oder so einbauen.
Name Tool Memes as a Service.
Es gibt ja, ähm, die gibt's.
Die haben eine API.
Jetzt sagt mal, jetzt lacht halt mal nicht über Memes as a Service.
Das gibt's schon.
Äh, API, da kannst du ja im Prinzip einfach machen.
API-Dings Search, Search nach blub und dann kriegst du hier alles was du willst, ne?
Also da könnte man schon eine schöne, äh, alle von den Usern genutzten.
Nein, nein, das ist Single-User, das Programm.
Das geht nur für einen Benutzer.
Da gibt's keine Benutzerverwaltung oder sonst was drinne.
Das ist komplett Single-User.
Beziehungsweise, was heißt komplett Single-User?
Im Prinzip könnten das mehrere Leute an mehreren Rechnern verwenden.
Mit einer Datenbank drunter, dann würden auch alle Leute das sehen.
Aber das ist ja im Prinzip gedacht für einen, der streamt und will er dabei overlayen will.
Das braucht kein Multi-User-Support.
Jetzt können wir gleich mal unser neues Feature testen.
Coggers ist an der falschen Position, was wir heute programmiert haben.
Also nehmen wir Coggers, verschieben Coggers, äh, minimieren Coggers ein bisschen
und sagen wir wollen Coggers oben links haben.
Wir wollen Coggers unten rechts haben.
Hier wollen wir Coggers haben.
So, speichern und jetzt ist Coggers unten rechts.
Zwar auch noch alles andere unten rechts, aber erst mal Coggers unten rechts.
Ja, also das habe ich mir schon gedacht, ob wir nicht sowas einbauen, dass wir beispielsweise die, ähm,
also die, die, die, die API verwenden für als GIF-Suche oder dass wir GIFI-API verwenden.
Da könnte man sich Sachen quasi direkt im Programm suchen.
Aber ich war ganz ernst.
Wenn es hochkommt, hat man da irgendwie, sagen wir mal, übertrieben 100, 100 Bildchen oder so drinne.
Da muss es ja auch noch irgendwie überschauen können.
Und es ist erst mal zumutbar, dass man sich die Dinger selbst runter lädt und dann hier wieder hoch lädt.
Ich glaube, das sollte jeder auf die Reihe kriegen.
Das ist ja auch nicht so viel.
Das macht man einmal und dann ist gut.
Ab und zu löscht man vielleicht mal welche.
Übrigens, löschen funktioniert mittlerweile auch.
Löschen ist ganz einfach, wenn man jetzt zum Beispiel, wenn Sie hier mal Kokona löschen wollen,
sagt man einfach Bam, ist er weg.
Kokona, aus Kokona.
Jetzt fügen wir, fügen wir ihn mal wieder hinzu.
Zack.
Okay, Kokona.
Da ist er.
Die Sortierfunktion, da habe ich ein paar Leute danach gefahren, ob wir das sortieren können.
Eine Drag-and-Drop-Sortierfunktion ist mir zu aufwendig.
Ich bin mir auch ganz nicht sicher, ob das so ohne Weiteres funktionieren würde,
weil ich meine, das hier ist ja kein Grid, wo ich einfach Sachen umsortieren kann.
Das ist einfach so ein Stack, das wird einfach reingeschoben.
Also sprich, wenn ich jetzt hier Drag-and-Drop-e, müsste er das hier reinschneiden und so.
Dann müsste ich irgendwie, wahrscheinlich irgendwie mit einer Link-List oder so.
Aber was wir machen könnten, also machbar wäre das, das zu sortieren.
Ja, aber es ist eigentlich die Arbeit nicht wert, letztendlich.
Was wir machen werden, ist, wir können Sachen favorisieren.
Und sobald Sachen favorisiert sind, erscheinen sie eben als erstes.
Das reicht, ich meine, das hat man im Prinzip.
Ja, und ich mache noch einen Knopf, wo man halt nach Kategorie sortieren kann,
so nach dem Motto, man möchte quasi nur Sachen mit, mit Reap-Kategorie,
nur Sachen mit Audio dabei, nur Sachen mit, nur GIFs oder so.
Ja, dass man nach Kategorien und Upload-Datum sortieren kann.
Und das kombiniert mit favorisieren reicht dicke aus.
Da favorisierst du dir deine fünf Memes, die, die Dinger, die du oft benutzt hast,
du eh auf irgendwelche Shortcuts gebindet und dann ist gut.
Ups.
Was noch nicht geht, sind die Animationen, die ich im ersten drinne hat.
Im ersten hatte ich eine Animation drin, dass man LUL noch drehen kann.
Dass, dass man quasi LUL 4D draus machen kann, das müssen wir noch einbauen.
Nein, LUL 4D geht gerade nicht, das ist noch nicht eingebaut, die Animation.
Das alte konnte quasi das noch so kippen, dass der dann so 4D LULt.
Also man sieht, es gibt noch Optimierungspotenzial.
Aber ich denke, für eine erste Version ist das schon mal ganz nice,
auch für die Leute zum benutzen, vor allem zum ausprobieren,
wo es noch Fehler gibt in den grundlegenden Sachen.
Und im Prinzip, was mir jetzt eigentlich noch fehlt, ist, dass man,
dass man die Position speichern kann.
Am besten noch je nach Meme an einer anderen Stelle oder je nach Bild an einer anderen Stelle,
weil das wäre ganz cool, dass man dann sagen kann,
ihn hätte ich gerne unten, den anderen hätte ich oben größer.
Und das Editieren muss noch funktionieren.
Also sprich, dass man, dass man Sachen, die man hochgeladen hat,
nochmal bearbeiten kann, anstatt zu löschen und neu hochladen zu können.
Das ist irgendwie nicht im Sinne des Erfinders.
So und wenn das fertig ist, dann würde ich mal sagen,
entweder diese Woche oder nächste Woche machen wir mal erste Testversionen,
wo die Leute mal ein bisschen ausprobieren konnten.
So viele werden das jetzt auch nicht benutzen, wahrscheinlich ein paar, die hier zugucken.
Funktionieren auch Soundtateien wie in einem Soundboard, ja klar.
Es gibt Text-to-Speech und es gibt, also es gibt zwei Varianten,
zwei Varianten, was du machen kannst.
Du kannst, zum Beispiel hier habe ich ein Bild, habe ich ein Bild plus eine Audio-Datei,
eine WAF-Datei, also stinknormale Audio-Datei.
Und wenn du dann draufklickst, kommt ein Bild plus Sound.
In dem Fall, du brauchst aber auch kein Bild.
Du hast die Möglichkeit Text-to-Speech, ich zeige es dir mal,
du hast die Möglichkeit ein Text-to-Speech-Service zu verwenden.
Also du kannst hier Text-to-Speech-Windows verwenden oder Text-to-Speech-Japanisch.
Oder aber du lädst irgendeine WAF-Datei hoch und die kannst du,
also wie in einem Soundboard im Endeffekt richtig.
Das hier ist zum Beispiel Kamera, ist nur eine WAF-Datei.
Ja, kannst du machen, du machst kaputt, du hast da Erfahrung drin.
So und jetzt, da fehlen uns hier oben noch ein paar Kategorien-Buttons,
wo man dann, oder hier, oder wo auch immer,
dass man sortieren kann nach nur Sounds.
Wie du gesagt hast, gibt es ja Leute, die sagen,
okay vielleicht will ich das als Soundboard verwenden,
dann kann ich quasi alles außer Sounds filtern.
Aktuell kann ich bloß suchen nach einzelnen Sachen.
Aber es ist doch, wer die Anfänge kennt, muss man sagen,
mittlerweile ist das richtig sophisticated,
im Vergleich zu den ersten paar Versuchen da, wo wir angefangen haben.
Also ich werde als nächstes, wie gesagt, mal gucken,
dass man die Position hier speichern kann, noch Meme-abhängig,
und dass wir eine ordentliche Sortierfunktion haben.
Und das war's, danach gibt es erste Versionen zum Testen,
das wird nicht mal zu lange dauern.
Läuft das auf Linux und Mac oder Windows?
Das läuft nur auf Windows, weil es einen WPF-Frontend hat.
Also, diese Overlay-Geschichten ist eine WPF-Anwendung,
und WPF ist Windows Only, keine Chance.
Wenn, also das Hauptsächliche, also quasi hier die,
das Web-Interface und so, das läuft natürlich potenziell,
also back-end-technisch auch auf jedem anderen Betriebssystem,
aber man braucht ja was, um die Bilder anzuzeigen als Overlay.
Und das geht aktuell nur auf Windows, weil es halt WPF ist.
Würde man das mit einem anderen, würde man das mit Qt oder so machen,
dann würde das auch unter Linux laufen, dann hätte man halt noch
eine andere Technologie, alter, dieser Knopf hier unten,
da hätte man auch eine andere Technologie dabei.
Und da muss man auch wieder, also, man kommt bei sowas
nicht dran vorbei an Betriebssystem-abhängige Sachen.
Ach so, einen Browser-View gibt's, ja, ja, Browser-View,
ach so, äh, ja, den Browser-View gibt's allerdings nur recht
rudimentär, ne, wie du siehst, das, was den OBS einbinden kann,
ohne dass man das als Overlay kriegt.
Aber das gerade Sinn und Zweck des Programms ist ja,
dass man Overlay hat und der Streamer das Ganze selbst zieht.
Das Skalieren sollte Aspekt-Ratio beibehalten, macht's doch.
Macht's doch.
Macht's doch.
Ja, und wie gesagt, man kommt bei sowas nicht dran vorbei,
dass man sich mit jeweiligen Betriebssystemeigenheiten
beschäftigen muss, weil so, ähm, der Crabber sollte noch
optimieren, ja, das wird schwierig, da was zu machen.
Das ist halt der WPF-Crabber, der dabei ist.
Ich mach, ich glaub, ich weiß, wie ich's mache,
ich mach die rechte untere Ecke, mach ich so, dass man
nicht mehr durchklicken kann.
Wir machen rechts unten irgendwas hin in das Fenster,
was hinter dem Crabber ist, und dann ist alles gut.
Oder wir machen den Rahmen dicker, das probier ich mal kurz aus,
ob man den Rahmen nicht einfach dicker machen kann.
Ja, und es sieht zwar einfach aus, quasi ein transparentes
Fenster mit Bildern drinne, aber mach das mal unter X.
Oder mach das mal unter Mac.
Ich hab keine Ahnung, wie das funktioniert.
Und, ähm, ich geh mal davon aus, dass du selbst, wenn du
einen CrossGui Framework für Qt verwendest, dass das sowas
nicht eingebaut ist.
Das sind ja sehr spezifische Anforderungen.
Das heißt, du müsstest immer gucken, wie mach ich
transparente Sachen unter Linux, unter X, und X will ich nicht
von Hand programmieren, ganz ehrlich.
Es gibt ein paar Sachen, die sind noch viel schlimmer als
manche Windows-API-Geschichten.
X möchte niemand von Hand programmieren, garantiert nicht.
Und Mac hab ich keine Ahnung von.
Das heißt, wenn man das hinkriegen würde, und wie gesagt,
das Ganze mit Open Source auf GitHub, dann ist das wahrscheinlich
mit relativ wenig Anpassung auch lauffähig auf Linux und Mac.
Ich wollt mal gucken, ob wir nicht den Rahmen dicker machen können.
Wir machen den Rahmen jetzt mal super sick.
Mal gucken, ob der Crabber dann hinter dem schwarzen Rahmen ist.
Nein, der ist immer in, keine Chance.
Der Crabber ist immer in.
Wir müssten irgendwie gucken, dass wir unten rechts im Grid
irgendwas positioniert kriegen.
Also irgendwo hier unten rechts oder so brauchen wir irgendwas.
Bis dann, Nilsson.
Das könnte man aber unten hinzufügen.
Was was immer unten rechts ist.
Eine Schrecktangel.
Mal gucken, ob die jetzt unten rechts ist.
Okay, das ist prinzipiell schon mal besser als vorher.
Jetzt kann man nicht mehr durchklicken, wobei das nicht so
wirklich gedockt ist.
Wie dock ich das denn an?
Wie dockt man das denn gescheit?
Wahrscheinlich gar nicht, oder?
Unten, jetzt ist es gedockt.
Jetzt müssen wir das Ding natürlich noch unsichtbar machen.
Crabber wreckt.
Das Ganze mal ein bisschen kleiner.
Hier 40 mal 40.
Ist das eklig einzustellen.
40.
40 mal 40.
Crabber wreckt.
Und dann sagen wir hier enable resize.
Crabber wreckt.
Und hier unten sagen wir.
Sollten wir das noch mal verschieben.
Und hier unten sagen wir.
Crabber wreckt.
Visibility gleich.
Hidden.
So und jetzt sollte das schon besser funktionieren.
Da ist sie.
Jetzt ist sie.
Weg.
Poggers geht.
Guck mal und jetzt geht das Crabben auch ganz gut da unten.
Es sieht zwar hässlich wie die Nacht aus.
Das Fenster jetzt mit dem schwarzen Rand und dem.
Und diesem Crab Ding da unten dran.
Aber immerhin.
Aber es funktioniert.
Da hat man auch gleich noch was, wo man das Fenster anfassen kann, wenn man nicht weiß,
dass man es da anfassen kann.
Man könnte es noch ein Stückchen.
Noch ein Stückchen kleiner haben.
Kann man den WPF Polygon Dinger irgendwie kann man kann man das irgendwie.
Okay, das ist wieder übertrieben kompliziert.
Probieren wir das mal aus.
Machen wir mal die rekt weg.
Da, da, da, mal da was hier, oder?
Ja, das ist ja.
Aber ich will ein Dreieck malen.
Ein gefülltes Dreieck.
Boah, ist das umständlich.
Wir lassen erst mal das Reck da unten.
Füll, ja stimmt Füll.
Oder auch nicht.
Den letzten Punkt verbinden wahrscheinlich.
Ich finde das immer schon wieder toll.
Ich weiß glaube ich warum.
Wahrscheinlich weil es transparent ist.
Jetzt, jetzt ist die Reckt am Start.
Guck da ist die Reckt, seht ihr sie?
Die Reckt, reckt sich einer ab.
Da brauchen wir jetzt Geometrie für.
Dass man quasi sagen kann.
Ich möchte es, ich möchte, ich möchte die Reckt ja so haben.
Also quasi.
Ich will jetzt, ja Leute ich brauch mal eure QuickMuffs Kenntnisse.
Wir wollen ja die Rektangle wollen wir ja so nicht so haben.
Sondern wollen wir so haben.
So wollen wir die haben.
Kann man mit Prozent statt Pixel arbeiten, keine Ahnung.
Das habe ich noch nie verwendet.
Also Starting Point ist 00, das ist schon mal da.
Also müssten wir doch eigentlich sagen Starting Point irgendwie keine Ahnung.
100 oder so.
Boah, Moment das war die falsche Achse.
50.
Aha.
20.
Easy.
Warum sieht die eigentlich so unförmig aus?
Die direkt.
Stroke Thickness.
Wollen wir nicht.
Wir brauchen keine Strokes.
Wir brauchen einfach nur Rand.
Das ist doch schon mal gut so, ne?
So jetzt wollen wir es allerdings.
Wir wollen es in der unteren Ecke haben.
Also wir wollen es nicht hier haben, sondern wir wollen das.
Kann man hier auch sowas machen?
Jetzt ist direkt da drüben.
Okay also Leute QuickMuffs ist jetzt gefragt.
Chat.
Okay Rekt kommt weg.
Das ist X-Name.
Wir nennen es mal so, dass das Ding noch kompiliert, auch wenn es keine Rekt mehr ist.
Okay Leute, wir müssten es umdrehen.
Wir müssten es umdrehen.
Was?
20 00 20.
One plus one is two minus.
Wie ging das?
One plus one ist.
Ich kann kein Big Shark QuickMuffs mehr.
Also Leute, wie muss es richtig aussehen?
Ich meine Rotation wäre jetzt der einfachste Fall.
Aber das ist nichts in uns weg der Sache.
Wir müssen einfach den direkt richtig malen.
Ich habe da nicht mehr genug Big Brain für heute mir das auszulenken.
Jetzt seid ihr gefragt.
Okay Starting Point Leute.
Starting Point 00.
00.
Starting Point 20.
Geht nicht.
Okay.
Was passiert hier?
Starting Point 20.
Aha.
Also hier fängt er an zu malen.
Jetzt fängt er hier an zu malen.
20 0.
0 20 20.
Da bin ich jetzt mal gespannt.
0 20.
20 20.
Ha fast.
Wir sind nah dran.
Oder meinst du es anders?
Oder meinst du hier 00?
Fast.
Fast.
Wir sind nah dran.
Wo ist eigentlich der Starting Point 00?
Ist das jetzt hier?
00 und dann sagt er quasi 20 nach da.
20 nach da.
Wir haben es fast.
Wir haben es fast.
Nicht mal viel.
Es muss jetzt anstatt es nach da zu malen müsste es eigentlich nach da malen.
Also quasi so.
Ne.
So.
So.
So müsste es malen.
Ich überlasse euch die Quickmaps.
Ups.
Ich weiß gar nicht was die einzelnen Dinge machen.
Wahrscheinlich in welche Richtung er malt.
Jetzt fängt er da an.
Ohje.
Quickmaps.
Klingel.
Ja.
Ich weiß.
Klingel.
Muss ich aber nicht ran.
Ich habe ja Home Automated.
Ich sehe das ja hier sogar das geklingelt hat.
Das ist halt nicht so der Zweck der Sache.
Oh Leute ich glaube mein Chat hängt.
Kann das sein?
Mein Chat hängt.
Ich muss mal Chat reloaden.
Brose hängt.
Um nicht zu sagen Brose ist abgekackt.
Falls ihr gerade was geschrieben habt.
Ich dachte der Chat bewegt sich nicht.
Wahrscheinlich habe ich es einfach noch nicht übersehen.
Ihr müsst nochmal schreiben.
Ihr müsst nochmal schreiben Chat war down bei mir.
20.
20.
Wow.
20.
20.
20.
Null.
Null.
Null.
20.
Null.
Was?
20.
Ah.
Null.
20.
Fast.
Okay.
Starting point 0,20.
Und dann 20,20,20,0.
Okay.
20.
20.
20.
Null.
Nein.
Fast.
Falsche Richtung.
Mach das Line Segment raus.
Ah.
Nee.
Hätte es immer noch falsch rum.
Aha.
Alles muss man selber machen.
Ja du warst nah dran.
Du warst nah dran.
So.
Und jetzt müsste das natürlich gleich.
Oh Moment.
Ich hab.
Ah Moment.
Da ist immer noch die Transformation drinnen.
Vergesst Leute.
Das ist falsch rum.
Das ist falsch rum.
Das ist immer noch die Transformation drin.
Jetzt ist falsch rum.
Bam.
Also.
Jetzt müssen wir es nochmal umdrehen.
Nee.
Ich bin verwirrt.
Null.
20.
20.
Null.
Ah.
Fast.
So geil ey.
Ah.
Ok.
Starting Point.
Null.
20.
Dann 20.
20.
Null.
Ok.
20.
20.
20.
Null.
Bam.
Der Charakter hat's.
Neue Funktion fürs Memeboard.
Im Prinzip, dass wir das Fenster resizen können.
Sonst nix.
Guck, Sebaru, ich zeig dir mal, was wir machen.
Mal gucken, wahrscheinlich ist es zu groß.
Wir müssen jetzt weitermachen.
So.
Guck hier.
Jetzt können wir nämlich resizen.
Da unten.
Passend zur Musik.
Ok.
Ok.
Das brauchen wir auch noch als Text-to-Speech.
Ok.
Ok.
Also es wird funktionieren, aber es wird wahrscheinlich nicht so bleiben.
Ja.
Das funktioniert.
Das funktioniert auch.
Das funktioniert.
Nicht.
Also links.
Links und rechts geht.
Aber Fullscreen geht nicht.
Rechts geht auch.
Fullscreen geht nicht.
Beziehungsweise doch.
Fullscreen geht.
Aber da save es irgendwie nicht richtig.
Aber das kann man sich alles noch angucken.
Ich will es aber eigentlich eher, mir geht es eher darum, dass ich eine Möglichkeit habe,
eben so riesen Dinger zu resizen.
Ja.
Und halt pro Meme dann eine eigene Position zu machen.
Ist meine Katze nicht niedlich?
Beste Katze.
Wobei das die alte Katze ist.
Meine neue Katze ist aber auch niedlich.
Das ist nicht meine Katze.
Niedlich und resizable, jo.
Eine Funktion, die Lautstärke einzustellen, wäre auch nicht verkehrt, oder?
Weil ich mein, das hier ist zum Beispiel noch erträglich laut.
Das hier ist schon ein Stückchen lauter.
Und das hier, RIP headphone user.
Aber alles in allem bin ich da schon jetzt echt zufrieden mit.
Also meine Zwecke sind damit erstmal super abgedeckt schon.
Alles andere ist jetzt ja nur noch, quasi, noch besser machen.
Nee, ich mein, dass man leiser stellen könnte hier intern.
Dass man quasi sagen könnte, ey, ich will, dass das nur 50% Lautstärke ist und so.
Braucht halt noch ein extra Feld, um das zu speichern.
Aber das ist kein Ding.
Ich mein, man kann es ja auch am Anfang erstmal von Hand leiser machen,
bevor man es uploadet.
Man muss ja nicht alles am Anfang einbauen.
Sobald ich eh noch ein paar, mit FFmpeg noch ein paar Konvertierungen einbauen will,
zum Beispiel, dass man für Audio und sowas,
dass man quasi alles Mögliche hochladen kann an Bildern,
auch was der Player gar nicht abspielen kann.
Und im Hintergrund konvertiert er mir das FFmpeg einfach alles zu waff.
Da muss ich nämlich nicht gucken, dass der Player das kann.
Aber es ist doch nice, oder?
Jetzt haben wir sogar noch die Möglichkeit, den ganzen Schmorder hier zu verschieben
und zu resize und mit der komischen Rektangle hier hinten dran.
Das ist auch noch gleich viel besser.
Ich mein, man muss sagen, das sieht schon sehr hässlich aus mit dem schwarzen Rahmen.
Wir können ja mal was...
Was könnten wir noch für eine Farbe nehmen?
Was gibt's denn?
Was könnten wir noch für eine Farbe nehmen, dass man das schön hervorsticht?
Also wir könnten zum Beispiel als Borderfarbe...
Was könnten wir denn hier zum Beispiel nehmen?
Pink?
Nein, kein Pink.
Anstatt Black, was haben wir denn für vorgefertigte Sachen?
Okay, wir können aber einfach so ein New Solid Color Brush...
New Color...
From RGB oder so kann man doch machen.
From RGB, dann kann man da alles Mögliche eingeben.
Grau ist beste.
Wir könnten sogar einen...
Wir könnten sogar einen Farbverlauf machen.
Linear Gradient Brush.
Wir könnten sogar Farbverläufe machen, wobei das ein bisschen zu...
Machen wir doch einfach mal.
Probier ich jetzt mal aus.
Colors von Schwarz nach Colors Weiß.
90, 45.
Schwarz ist keine Farbe.
Sind wir jetzt...
Willst du Kunstlehrer werden?
Guck hier, Farbverlauf.
Porgas.
Sieht noch beschissener aus, oder?
Mit Farbverlauf.
Sieht noch mal viel beschissener aus mit Farbverlauf.
Mit Farbverlauf sieht noch mal viel räuniger aus.
Ich dachte, das sind mal Cray mit E.
Naja.
Der Beat.
Sieht auch nicht besser aus, oder?
Kann man eigentlich runde Ecken machen.
Jetzt wird es aber langsam advanced, oder?
How do you create round corners, Container?
Gibt es nicht.
Ist ja was, wir machen es einfach mal weiß.
Dann sieht man das wenigstens.
Red könnte man tatsächlich auch machen.
Ach komm.
So ist das mal okay.
Damit können wir leben, oder?
So Leute, genug für heute.
Ich gucke mir jetzt gleich nochmal an.
Ein bisschen Offstream, wie man das mit Konfig Dateien ordentlich macht.
macht das zwischenspeichern zu können weil das ist ja komplett der witz hier gerade
ich hoffe euch hat es gefallen mich hat es wirklich gefreut dass so viele leute heute dabei waren
wo kommt ihr eigentlich alle her heute 140 zuschauer programmier stream ist so selten
hatten wir glaube ich noch nie das ist ein massiver poggers um nicht schon zu sagen ein
hyper pock gibt es so was eigentlich hi du musst mal gucken gibt es bestimmt schon als als hi pock
das war klar dass es so was gibt schon das ist nicht so gut das ist nicht so gut das
gefällt mir nicht aber progas finde ich gut progas das muss man das muss man aufschreiben
des progas das war uns als im out progas progas only
war das denn jetzt
ich hoffe ich habe es gefallen ich muss jetzt was füttern wir haben ja doch ganz gut pro class
gemacht border brush corner radius aber corner radius hatte ich doch nicht oder
ich hatte ich hatte kein corner radius sonst hätte ich doch gemacht
ach da ist der corner radius ich habe doch kein corner radius sonst hätte ich es auch gemacht
was genau macht am hintergrund gerade schon wieder hexa angriffe
ok leute ich hoffe ich habe es gefallen danke fürs dabei sein schön dass so viele leute am
start waren heute danke für die ganzen follows ist die scharp fun yes wir machen jetzt schluss
ich hause den friseur wer ihn auch kennt der freut sich bestimmt wir machen jetzt schluss
macht's gut bis zum nächsten mal zu
wenn du dann aber höhere brackets erreichst dann hier besser wird und du kannst mit kutum
261 ap oder 269 ap erreichen dann ist wieder kutum besser
