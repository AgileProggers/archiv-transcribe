Das war's für heute.
Ich hoffe, dass es euch gefallen hat.
Wenn ihr mehr von uns sehen wollt,
dann schreibt mir in die Kommentare,
was ihr noch mehr von uns sehen wollt.
Bis dahin,
bis zum nächsten Mal.
So, moin Leute, heute wird's ganz furchtbar schlimm.
Das weiß ich jetzt schon.
Ihr wisst, wie gerne ich 10++ habe.
Es gibt keine beschissene Sprache als 10++,
aber wir kommen nicht drum herum.
Wir kommen nicht drum herum, Leute.
Ich hab mir ein paar WebAssembly Tutorials durchgelesen
und gerade wenn man Libraries verwenden will,
die eigentlich selbst 10++ sind,
kommst du im Prinzip nicht drum herum.
Das wird ganz, ganz schrecklich heute.
Ich sag's euch.
Ganz schlimm.
Wir probieren das Gleiche,
was ich gestern mit Rust probieren wollte,
was überhaupt nicht funktioniert hat.
Spider Schwein.
Dankeschön.
Wir probieren,
FFM-Pack im Browser zu verwenden,
und zwar nicht wie die ganzen Noobs das machen.
Also nicht so, wie es beispielsweise schon zig Github-Projekte gibt oder so,
die im Endeffekt einfach nur so die FFM-Pack-CLI rappen oder so.
Nee, nee, nee, das machen wir nicht.
Wir machen richtig echtes FFM-Pack.
AV-Package-Decoder.
Sonst was.
Und wir gucken wir mal, ob ich's hinbekomme.
Ein Video quasi mit FFM-Pack im Browser zu rendern.
Das ist natürlich äußerst ineffizient.
Allerdings, wenn man bestimmte Codex abspielen will,
die der Browser nicht kann,
theoretisch die einzige Möglichkeit, so was zu machen.
Ansonsten ist es wahnsinnig ineffizient.
Also...
Gucken wir mal.
Alter, hier steigt grad einer mit nem Turban aus.
Gegenüber aufm Parkplatz.
Gegenüber.
OnKS.
Hier los.
Na gut, wenn er meint, sonderlich stylisch sieht das nicht aus für mich.
So, ähm...
Also, wo sind wir stehen geblieben?
Genau, also, wir machen eine C++-Rap-Assembly.
Und wie gesagt, ich weiß, dass ich kotzen werde.
Das ist mir jetzt schon klar.
Aber vielleicht bekomme ich noch ein bisschen mehr Zeit.
Und dann kann ich noch ein bisschen mehr Zeit.
Und dann kann ich noch ein bisschen mehr Zeit.
Und dann kann ich noch ein bisschen mehr Zeit.
Das wird schon klar.
Aber vielleicht bekommen wir das hin.
Wenn wir es hinbekommen, wär ich äußerst überrascht.
Weil, gestern in Rust ging ja mal gar nichts.
Aber, FFmpeg ist halt in C++ durchaus auch deutlich einfacher zu benutzen, als von Rust aus.
Mit irgendwelchen Zwischenrappers und hast du nicht gesehen.
FFmpeg ist zwar nicht memory safe,
ABER die Browser sind memory safe,
das heißt, kann nichts passieren.
Im schlimmsten Fall stressht das Browser tab.
Wobei, da bin ich mir gar nicht so sicher.
kann man es mit WebAssembly schaffen den Browser crashen zu lassen oder crasht auch nur das Browser Tab
Da bin ich mir gar nicht so sicher
Bestimmt gibt es schon wieder tausend Sicherheitslücken dafür
Mal gucken also
Als erstes muss ich mal kurz den komischen Papagei weg machen und die vor allem einschalten
Also Fireship hat so was ähnliches gemacht wie du vor hast kann ich die links teilen? Ja schick
Ach du das ne ne ne ne ne das kenne ich ne das der hat was anderes gemacht der hat die Noob-Variante gemacht
Ich meine ok man kann sich darüber streiten ob es wenn man mit WebAssembly überhaupt nur die Noob-Variante ist was der macht ist
der verwendet glaube ich
Einen fertigen FFmpeg Rapper also er verwendet entweder Wasm
FFmpeg Wasm oder FFmpeg JS
Und im Prinzip ist das quasi ein Rapper für die FFmpeg Kommandozeile. Wir machen richtig FFmpeg
FFmpeg Decoder AV Package reinschieben AV Package auslesen also das was man low level mit FFmpeg macht
Wir rappen nicht die Kommandozeile
Stream war gemuted? Ne, na deiner meiner nicht also hier kommt das Sound raus
Wir machen den Realshit ja Leute das was wir heute im Stream machen das gibt es nirgendswo im Internet zu sehen falls es klappt
Ich hab ich hab wirklich rauf und runter gesucht es gibt da auch keine guten Beispiele für
Ich habe einen Blogpost gefunden den hat gestern schon jemand im Chat gepostet wie der Urlaub ne warum?
Kommst du heut nicht Samstag? Heute hat glaube ich fast jeder frei
Das gibt es sonst nirgendswo im Internet also hier Exclusive Content soll den ganzen Krempel bis man wieder
Wieder wegmachen. Ah ne Moment die Konsole lassen wir auf die Konsole ist gut die Qual da muss ich gleich wieder dran denken ich muss den Chat unten
Ja das machen wir dann ich muss ich muss den Chat unten ja wieder einblenden
Ok diesen ganzen Krempel machen wir mal zu
repos mk dir monka monka
C++
Bester Projektname soll man schnell schnell noch ein Update machen
Wer weiß vielleicht brauchen wir das ja
Habt ihr das eigentlich mitbekommen mit der Internet Internet Grundversorgung was jetzt als Internet Grundversorgung gilt
Guck mal
1,7 Mbit Upload 2022 Poggers Upload richtig krasser Bandbreite richtig Breitband Internet Anschluss
1,7 Mbit Upload 2022 Poggers Upload richtig krasser Bandbreite richtig Breitband Internet Anschluss
1,7 Mbit Upload 2022 Poggers Upload richtig krasser Bandbreite richtig Breitband Internet Anschluss
Beim Download bin ich mir übrigens gar nicht sicher was der Download
Ist das überhaupt drinnen
Download
Den Mbit genau 10 Mbit 10 Mbit und 1,7 Mbit Upload ich mein what the fuck
Damit kannst du noch nicht mal Full HD Streams gucken
Das ist hier so ist das das ist das das ist ein äußerst passendes Gift dafür genau das ist das
Mit 4K Video Streaming musst du da erst gar nicht anfangen
4K lull da kannst du froh sein wenn es für 720p reicht und das wird auch knapp
10 Mbit ist wirklich nicht viel 10 Mbit war der absolute Wahnsinn als der ganze Kram neu war
Ich meine überlegt ich überleg grad was war mein erster DSL Anschluss
Das war ein Mbit oder? Nee
Was war was war das 768 768K war das oder das aller allererste DSL
Oder
Also quasi sogar noch unter dem Mbit naja gut
Es kam einem wahnsinnig schnell vor damals
Du kannst du kannst alles knicken im Endeffekt mit 10 mit 10 Mbit Download und 1,7 Upload
Wisst ihr die 1,7 Upload haben sie auch bloß gemacht dass die TCP Bestätigungspakete überhaupt rausgehen
Ich mach mal kurz Update überall
Bald kommt eine Steuer für alle die ein Auto fahren geht mir mal nicht auf den Sack Alter
Leute wisst ihr was die letzten 10 Jahre haben wir die 1,7 Upload gemacht
Leute wisst ihr was die letzten 10 Jahre ich bin mir nicht sicher ob es an mir liegt oder an der Welt um mich drum herum
Ich glaube es liegt an mir liegt weniger ich glaube die Welt um mich drum herum war im Prinzip schon genauso
Aber was die was die letzten sagen wir letzten 10 15 Jahre passiert ist also vor 15 Jahren hatte ich so
Ja wie nennt man das so standardmäßig Bauchgefühl mäßig oder meine standards herangehensweise war eigentlich die Welt will mich nicht verarschen
Und will mir nicht auf den Sack gehen und die Leute sind eigentlich gar nicht so nervig wie wie sie vielleicht wirken und
Die Welt will nichts böses von mir so das habe ich doch vor 15 Jahren gedacht mittlerweile mittlerweile denke ich die ganze Welt will mich nur noch abfacken
Egal was ist heute auch heute bin ich bin ich wandern gefahren und auf dem Rückweg habe ich an der Schranke gestanden
Schranke geht auf fährt los waren ganz schön viele Autos bestimmt 40 40 Stück oder so es geht dann langsam über die Straße drüber
Und auf einmal hält ein Typ an direkt hinter der Schranke ich stehe mit dem Auto auf der auf der auf den Kleisen und er geht hinten zum Kofferraum macht den Kofferraum auf holt ein Paket und geht in die Post
Ich komme natürlich nicht vorbei weil von der anderen Seite auch was kommt
So ich hatte zum Glück das Fenster auf und ich habe so ich habe wohl so rum gebrüllt oder so dass er ganz absichtlich so
Kennt ihr das wenn die Leute absichtlich weggucken so nach dem Motto ich höre dich gar nicht ich höre dich gar nicht
Ich wusste gar nicht ich habe nicht in dem Moment dran gedacht ich das Fenster auf hab aber es war eigentlich richtig so
Also ich habe mittlerweile das Gefühl alles will mich abfacken und mir ist auch immer wieder mir wird jeden Tag bewusst wie unfähig irgendwie die ich bestimmt auch
Ich denke die andere Leute denken das auch aber man ist ja da halt ein bisschen wie soll ich sagen ein bisschen so ich bezogen bei den Sachen
Weil man kann den anderen Leuten nicht ins Kopf in den Kopf gucken ja und mir fällt immer wieder auf jeden Tag wie unfähig alles ist die Leute die eigentlich nur dafür da sind eine Sache zu machen können diese eine Sache nicht ja guckt euch die Bahn an es ist unglaublich mittlerweile habe ich echt so die Standard wie gesagt das hat sich die letzten 15 Jahre gemacht und es ist wirklich alles so
Ja guckt euch die Bahn an es ist unglaublich mittlerweile habe ich echt so die Standard wie gesagt das hat sich die letzten 15 Jahre mega gewandelt bei mir früher habe ich immer gedacht ach das meinen die bestimmt nicht böse oder ach so schlimm wie alle sagen ist das nicht
Und heute denke ich mir die Welt ist scheiße und ich glaube nicht dass es an mir liegt also doch ich glaube dass es an mir liegt ich glaube die Welt war vor 15 Jahren auch schon scheiße
Aber die Wahrheit liegt wahrscheinlich dazwischen die Welt ist wahrscheinlich genauso wenig also nicht so viel scheiße wie ich es gerade denke und bestimmt auch nicht so alles rosa wie ich es vor 15 Jahren gedacht habe
Also also das ist so irgendwie so wahrscheinlich hält sich irgendwie in Grenzen und umso mehr beschissenes Zeug du mitkriegst umso schlechter ist so deine Gesamts Wahrnehmung
Die Welt ist gut ja das ist nice wenn du da bist so also weiter wo sind wir denn jetzt was wollte ich jetzt machen genau wir wollten ja so viel stream an instant sidetracked
So also ich habe vielleicht das hier sowas nervt mich auch das sind so Sachen und auch Gegängele auf dem Computer mit irgendwelchen Programmen die wir laufen irgendwas unterschieben wollen
Letztens unter Ubuntu habe ich tatsächlich ich habe hierfür zum Arbeiten eine Ubuntu VM und da habe ich dann ein Update gemacht weil es mir diese Software Manager vorgeschlagen hat und auf einmal sagt es mir sie haben jetzt noch 13 Stunden Zeit oder sowas ihr Firefox neu zu starten
Da habe ich gesagt was wollt ihr mir ernsthaft vorschreiben dass ich mein Firefox gefälligst neu zu starten habe was ist das was ist das ist ja Windows Taktik Alter
Ja das ist glaube ich auch wahrscheinlich ja das ist im Prinzip das was ich auch schon eine ganze Weile mache ich wie gesagt ich bin ja auch in Twitter wohne ich auf Andorra ich gucke mir kaum was an ist natürlich auch blöd dass du dass du wenig drum herum mitbekommst
Aber auf der anderen Seite eine Sache habe ich halt auch die letzten 15 Jahre über irgendwann mal realisiert ja früher habe ich mir auch gedacht so nachdem und ja da kann man doch hier irgendwie könnte man da jemand mit unterstützen und warum können wir hier eigentlich nicht das machen
Und jetzt habe ich den faden verloren weil ich habe ich habe den ich habe die Chatnachricht gelesen habe ich den faden verloren keine Ahnung boomer hier es geht nicht weiter soll ich denn sagen
Ja ist bei mir aber auch so wenn ich wenn ich allein wenn ich Twitter Twitter Zeug Twitter Zeug lese und so weiß ich nicht was ich sagen wollte
So was ähnliches wollte ich sagen aber nicht dass ja egal
Ach ja jetzt weiß ich wieder was ich sagen wollte man muss aber darf einfach mal nicht nicht nicht drüber nachdenken dann dann fällt es einem wieder ein also genau was ich was ich auch die letzten 15 Jahre über gelernt habe ist dass man sich nicht darauf verlassen kann dass irgendjemand anderes außer vielleicht
Also jetzt die Eltern und so meine ich nicht aber dass niemand was für dich in deinem Interesse macht das sagen zwar alle aber es macht keiner was also kannst dich nicht darauf verlassen dass irgendjemand was in deinem Interesse macht also offensichtlich
Ein Beispiel ist keine Ahnung du arbeitest irgendwie Mindestlohn und oder bis Krankenpfleger oder so und du wählst dann zu irgendeiner Wahl die Partei die sagt sie schauen dass sie ja das ist ernst gemeint
Du wählst dann die Partei die beispielsweise sagt oder den Bürgermeister oder was auch immer sehr egal der sagt wir heben das an wenn ich wenn ich dann quasi was zu sagen habe dann heben wir das an und da gewinnen die vielleicht sogar auch aber das machen die nicht
Ja das könnte man Problem ist nur dass das wahrscheinlich nicht sonderlich ineffizient ist das sind alle in dem Fall das sind alle die AfD sind bloß ganz ganz besonders große
Ab ablenken also sie fahren immer irgendwelche Ablenkungsmanöver ich habe das ja im Wahlkampf auch ein bisschen Not getrunken hat man sich da halt mal ein bisschen mit beschäftigt in legit jeder Talkrunde wo jemand von der AfD drinne war
haben die als Argument zum größten Teil ich sage nicht bei allem aber zum größten Teil haben die als Argument gebracht immer Ja ihr macht das alles schlecht und wenn die dann irgendjemand gefragt hat Ja wie würden sie das dann machen kam als Antwort so nach dem Motto Ja viel besser aber die anderen machen das schlecht
also sie haben im Prinzip immer nur gesagt sie haben nie erklärt wie sie es eigentlich besser machen wollen das hat mich dann auch ein bisschen ein bisschen sagen verwundert weil anscheinend haben ja viele Leute den Eindruck dass sie voll krasses Zeug machen würden
ich weiß nicht haben sie immer raus geredet und ich bin der Meinung es soll jeder wählen was er will meinetwegen auch AfD darf jeder persönlich entscheiden was er wählt dafür würden mich wahrscheinlich jetzt auf Twitter wieder die Leute steinigen allein schon das ich gesagt habe aber ich meine solange das eine zugelassene Partei ist in Deutschland warum darf jeder wählen das heißt nicht dass ich die wählen muss aber es ist nicht so dass ich sage ich bann euch wenn jemand sagt ich habe AfD gewählt ich bin der Meinung es sollte jeder für sich selbst entscheiden was er da macht
allerdings muss er dann natürlich auch mit der Entscheidung leben also das ist das wird überall nur so viel Bullshit gelabert und
das ist mir wurscht ganz ehrlich das ist das ist eure komplett persönliche Entscheidung solange mich nicht versucht zu bekehren zu irgendwas oder ihr irgendwie rumnervt mit sonst was kann jeder wählen was er will ich meine damit du was wählen kannst muss das offiziell ja anerkannt sein
und dann ist das auch ok ob man sich jetzt natürlich mit dem Programm und den Sachen identifizieren kann ist was anderes also wie gesagt mich hat es in der Wahl im Wahlkampf überhaupt nicht überzeugt dass man zu 80% immer die Ausrede gebracht hat ja die anderen machen das so viel schlechter
so und nachdem ich die letzten Jahre über schon beobachtet habe dass es oder die letzten 15 Jahre über schon beobachtet habe dass eigentlich keiner wirklich irgendwas macht im Interesse also im eigenen Interesse also in dem Fall in meinem Interesse denke ich halt da kann man sich einfach nicht darauf verlassen du kannst dich nicht darauf verlassen egal was du wählst egal wo du hingehst du kannst dich nicht darauf verlassen dass die Leute ihren Job erledigen
das ist ganz ätzend du setzt dich in den Zug der fährt nicht richtig du gehst zu irgendeinem Amt willst was holen die hat keine Ahnung wie es funktioniert dann musst du denen das noch irgendwie erklären
da gibt es da gibt es sich da gibt es sich Beispiel ja du gehst zum Arzt und du denkst dir nur ok jetzt war ich da zwei Minuten drin das hat absolut gar nichts gebracht also
es ist es ist so viel un nicht Unfähigkeit aber keiner macht wirklich was ja keiner macht wirklich was in der was man so erhofft ja und irgendwann hat man dann halt leider so die Einstellung wie ich ich finde es ja auch nicht gut dass das Einzige ist was man machen kann ist um sich selbst kümmern
weil du kannst dich einfach nicht darauf verlassen dass irgendjemand anderes was in deinem Interesse macht ja Vater Mutter und so mal außen vor aber gut mein Vater pumpt mich ab und zu an das war es dann im Prinzip aber
kann sich einfach nicht darauf verlassen du kannst eigentlich nur noch gucken dass du selbst möglichst schaust dass du wie sagt man so schön deine Schäfchen im trockenen hast und für dich das so vorteilhaft wie möglich gestaltet das ist halt eigentlich kacke ja
das ist ja noch das das Argument verstehe ich nicht das haben das wird auch immer oft gebracht ja zum Beispiel zum Beispiel ich kann mich auch dran erinnern als die Grünen und ich muss gestehen ich habe bin mir nicht ganz ich glaube ich habe die sogar damals gewählt also
ne habe ich nicht glaube ich nicht wobei keiner kann durchaus sein ja ich habe das ja mal nicht alles so düster gesehen wie heute so ich habe in hessen damals ich sage jetzt einfach mal ich bin mir nicht mehr sicher die Grünen gewählt als sie gesagt haben sie sind unter anderem für das waren drei Dinge ich kriege jetzt bloß noch den Flughafenausbau zusammen genau Nachtflugverbot für den Flughafen kein Flughafenausbau
ausbau und noch irgendwas das kriege ich das kriege ich nichts kriege ich nicht zusammen mittlerweile finde ich auch bescheuert ich finde es wichtig dass der Flughafen ausgebaut das was anderes also
wisst ihr was davon passiert ist nix gar nichts und die waren in der Regierung gar nichts ist davon passiert und die Argument war jetzt ja hätten wir aber die hätten wir aber alleine regiert dann hätten wir das alles gemacht also ich finde das ein bisschen komisches Argument so nach dem Motto ja wir waren jetzt vier Jahre mit in der Regierung wir haben nichts gemacht von dem was wir gesagt haben aber wenn wir die einzigen gewesen dann hätten wir alles gemacht ja
seriously ganz bestimmt also sprich man hat Müll gewählt man muss noch mehr Müll wählen dass es dann besser wird oder wie ich ich verstehe es ich verstehe es nicht mehr das macht das nimmt sich allerdings bei den anderen auch nichts also ich gebe mich da nicht der Illusion hin dass es mit irgendeiner anderen Butterwetter gelaufen wäre deswegen mir geht es mittlerweile echt alles am Arsch vorbei ich gucke dass bei mir gut läuft ich gucke dass ich genug Kohle habe ich gucke das
ich möglichst viel das machen kann woran ich Spaß habe und scheiß mittlerweile wirklich auf alles andere ist mir einfach egal so kacke sichs anhört naja
das ist halt richtig Pains Jam mittlerweile alles ja und dann hast du überall so Entscheidungen wo du denkst hat auch keiner drei Meter gerade ausgedacht beispielsweise wo diskutiert wurde bitte hier jetzt Leute wir wollen jetzt verbieten dass ihr mit Autos in die Innenstädte fahren könnt das ist so unüberlegt das Schnellschuss Dinger ich ich frage mich auch eh wie wir es machen wollen mit wir wollen auf der einen Seite unabhängig und unabhängiger werden
von von russischen Lieferungen wir wollen alle Atomkraftwerke abschalten wir wollen keine neuen Verbrenner Autos mehr haben wir wollen allerdings auch jetzt nicht wirklich Forschung und Innovation fördern ja was wollen wir denn eigentlich machen also wie soll das denn wie soll das denn funktionieren ja wir können ja schlecht alles nicht machen irgendwas müssen wir ja machen also keine Ahnung wie das wie das funktionieren soll
naja ich mein Klima und Meeresspiegel und Wetter Phänomen ist das ziemlich egal ob wir was machen oder nicht
das ist ja das blöde da dran du kannst ja nicht einfach sagen oh guck mal da Überschwemmung ob wir verbieten jetzt aber Überschwemmung dann gibt es keine Überschwemmung mehr das funktioniert halt nicht du musst die Rahmenbedingungen drumherum verändern dass das nicht passiert und das ist halt eine Sache von nicht von heute auf morgen
kann sich einfach Überschwemmung verbieten das ist keine Überschwemmung das funktioniert halt nicht
oh man ich hab keine Ahnung wie das werden soll deswegen ich hab vor 15 Jahren oder so hab ich mir immer ausgemalt mann wie geil muss es sein 2022 oder wie geil muss es sein 2030 was wir da für unglaublich geile Games haben was wir da für unglaublich geile Technik haben was wir da für unglaublich geile Sachen in der Zwischenzeit erfunden haben müssen
und die Welt muss viel besser sein und ähm die Leute bringen sich nicht mehr gegenseitig um und die Leute ziehen zusammen an einem Strang ähm wir haben so viele coole neue Sachen so viele innovative Sachen wo wir jetzt überhaupt nicht davon geträumt haben und jetzt 20 Jahre später ist eigentlich nicht viel unterschied
WTF doch wir haben Smartphones das ist richtig ja ich weiß ich weiß ey ohne Scheiß ich war ultra optimistisch so vor 15 20 Jahren ja ich hab gemann was wir 2030 alles für mega geile Sachen haben und jetzt haben wir Diablo auf dem Handy ja das ist die Scheiße wisst ihr zu der Zeit
wo richtig viele geile Games rausgekommen sind das war ja innerhalb von ein paar Jahren ist alles rausgekommen Quake Half Life Starcraft Warcraft also später dann irgendwie noch gute MMOs sagen wir so diese 10 Jahre die 10 Jahre sagen wir von 1996 bis 2000 bis 2006 es sind so ultra geile Sachen rausgekommen
und es war halt genau das Alter wo ich halt auch die Zeit hatte und den Bock hatte 24 Steam in Games zu verbringen und ich hab mir ausgemalt mann wenn das jetzt schon so geil ist mit unserer doch noch relativ beschränkten Technik mann das war einem damals ja auch klar dass es noch schneller werden wird ja
und da hab ich gesagt mann ist das geil was wir da alles haben werden ich hab mir ausgemalt wie richtig Poggers 2020 MMOs sein müssen und in den letzten 10 Jahren gab es zwei gescheite MMOs ja und die besten MMOs wurden damals das hätt ich mir im Traum nicht ausgedacht damals
und heute haben wir Diablo auf dem Handy ich hab damals Diablo 2 gespielt hab mir überlegt alter wie krass groß und unglaublich geil könnte man das machen mit dem Internet standardmäßig Online Integration mit Technik in 20 Jahren das muss das geilste
das ist dann quasi Diablo MMO hab ich mir damals vorgestellt wir haben ein Diablo MMO mit irgendwie ne Riesenwelt quasi Diablo 2 bloß noch viel geiler und im Endeffekt was haben wir Diablo auf dem Handy mit Microtransactions und zwischenzeitlich dann noch ab und zu irgendwelche NFT Scam Games ja
also das hat sich leider nicht bewahrheitet was ich mir da so ausgemalt hab ich glaube ja dass das irgendeine Entwicklung ist die jeder durchläuft mal der Dalai Lama vielleicht außen vor wobei ich mir bei dem auch nicht sicher bin ob das nicht teilweise auch ein bisschen show ist aber der ist auch erleuchtet ja
ich glaube das ist eine Entwicklung die durchläuft jeder deswegen hast du irgendwann 80 jährige Opas die alles hassen und alles scheiße finden wahrscheinlich bin ich auf dem Weg gerade
es kommt ja auch nicht von nichts umso mehr scheiß Erfahrungen man macht umso schlechter schätzt man wahrscheinlich alles insgesamt ein
und ich krieg immer anfälle wenn ich merke wie dumm die meist leute sind ok wahrscheinlich bin ich der dumme aber wenn ich mir das schon anhöre was da teilweise gelabert wird ja wahrscheinlich wahrscheinlich midlife ist ja mehr oder weniger jetzt ja
das ist alles so oft auf dem niveau wie die von dem ein Mädchen aus dem aus dem arbeitsamt bewerbungskurs ich muss nicht lesen und schreiben können weil man kann das ja ist echt so
ich meine die leute du musst dir nur youtube comments durchlesen du musst dir nur youtube kommentare durchlesen dann sieht man wie unglaublich zurückgeblieben viele leute sind es ist echt der wahnsinn ich hab letztens ein video geguckt bei trymax wo er richtig krass reingecashed hat in diablo immortal
und die comments in dem video alter die leute sind so keine ahnung so minder bemittelt alter das ist der wahnsinn wenn ich die comments da durchskolle da krieg ich augenkrebs von wie sie das verteidigen auch noch das game ja gut was ja wahrscheinlich ist echt so aber
ich war wahrscheinlich ja gut ich war als sag mal ehrlich ich war als 10 jähriger oder 8 jähriger auch so warte mal das 1904 wann kam mario 1964 raus
96 96 da war ich 12 richtig 84 geboren war statt 12 ja ich hab leute ich war damals genauso ich war damals ganz genauso ich hab mal nach meinem echten namen den ihr nicht wisst deswegen könnt ihr auch danach nicht suchen
hab ich letztens in einer news group suche gesucht da hab ich news news news post news group post gefunden von mir damals in irgendeinem mario 64 nicht subreddit wie ist das denn user group ja in der user group leute ich war so ein richtig kleiner wie heute heute würde ich sagen so ein richtig kleiner call of duty richtig nerviges call of duty kind damals nur das ist keine das ist keine call of duty gar noch kein call of duty kind
gar noch kein call of duty gab ja ich hab ich hab in den mario 64 subreddits so richtig auf dicke hose gemacht so irgendwie irgendjemand hat bei mario 64 subreddit ne user group hat irgendjemand geschrieben ich hab probleme ich kann mich noch gar nicht erinnern hat irgendjemand geschrieben ich hab irgendwie probleme bei dem dem und dem stern und da hab ich sinngemäß sowas geschrieben cringe wenn ich 120 sterne hat ich hab nicht wirklich ich habs anders geschrieben
ich habs anders geschrieben so würde man das heute sagen ja ich war so ein richtiger kacke spast alter ich hab dem typ dann irgendwie geantwortet lol wer hat dann schon bei 80 sterne und irgendwie probleme 120 wer das jetzt noch nicht hat ist einfach nur schlecht oder irgendwie sowas so ein richtiger kacke spast alter ja also richtig dummes zeugs hab ich in diese news groups gepostet absolut dummes zeug also ich war genauso dummes kind damals
kind damals
und das schlimme ist ja die generation vor mir muss den kram nicht lesen den sie damals verzappt haben mit zehn ich bin die erste generation die jetzt noch lesen kann was sie teilweise mit zehn jahren mit zwölf jahren im internet geschrieben haben
unglaublich dumm alter unglaublich dumm
ich dachte aber eine sache eine sache habe ich damals wirklich für wahr gehalten und zwar dass man mit leuten reden kann und leute quasi überzeugen wenn man stichhaltige sinnvolle
aussagen trifft ja also zum beispiel ja was weiß ich wenn sich wenn sich meine mutter damals drüber aufgeregt hat dass der chef im krankenhaus irgendwie dummer sack ist ja damals im krankenhaus gearbeitet und da hat da hat die da hat die das dann erzählt ja aber warum ist das denn so oder hat sie dann erklärt
keine ahnung man muss jetzt da was aufschreiben obwohl da eigentlich keiner guckt man muss dann die besser da und da hat man ich ich hab damals wirklich gedacht ich ohne scheiß ich hab damals wirklich noch gedacht ja das muss man dem halt sagen und wenn man dem erklärt warum das an der anderen stelle besser ist dann wird er das einsehen und das andere auch nicht mehr wollen ich hatte keine ahnung von der echten welt damals weil ganz im ernst versucht mal auf twitter guckt in die trends auf twitter
sucht euch irgendeinen kontroversen trend raus und versucht mit sinnvollen argumenten jemand zu überzeugen das könnt ihr einfach vergessen das könnt ihr komplett klingen und das ist an vielen stellen so
richtig richtig aber ich habe damals wirklich gedacht ich habe damals wirklich gedacht leute sind wie nennt man das rational leute sind logisch dachte ich damals ja also ich dachte damals wenn man irgendwie logisch etwas erklärt nachvollziehbar und es quasi auf der hand liegt dass es
dass es so ist und dass dann die leute sagen ah ok ja ok das passt es ergibt sinn ja dann dann ist das so ist aber nicht so umso es ist es ist eher so in der jetzt in der echten welt ja das leider bei den meisten leuten umso stichhaltiger du quasi belegst dass etwas so ist oder nicht so ist also umso stichhaltiger du etwas begründest
umso aggressiver wird der andere weil er sich dann also weil er sich quasi in seinem glaube nicht umstimmen lassen will und sauer auf dich wird weil ihm nichts einfällt was er dagegen sagen kann weil umso besser du das begründest umso weniger
raum hat er quasi um erstmal mit sich selbst im hirn klar zu kommen dass es ja blödsinn ist und das irgendwie zu verteidigen und irgendwann fällt den leuten nichts mehr ein außer wirklich sauer zu werden das das habe ich damals nicht gedacht dass das so ist aber leider ist das so so aber jetzt habe ich 35 min geschwätzt jetzt können wir anfangen
aporette aporette ist auch so ein spezieller kandidat ganz ehrlich wisst ihr was ich vermute ich habe keine ahnung ich kenne ihn nicht ich habe eine pn jemals mit ihm gewechselt das war es er kennt mich nicht ich kenne ihn nicht aber rein von dem was ich in dem video gesehen habe als er gesagt hat der insie modus ist aktiviert ganz im ernst ich glaube nicht dass er steuerbetrug begeht ich glaube der ist wirklich pleite und möchte das
einfach nur nicht öffentlich eingestehen weil das an seinem ego kratzt im endeffekt ja also er ist pleite und er ist insolvent und er muss den insie modus machen und es ist natürlich blöd wenn man sich eingestehen muss und öffentlich ins internet geht und sagt jungs ich habe
scheiße gebaut ich bin pleite dann ist besser man sagt ich habe den gleichen ich habe den insie modus aktiviert und mache jetzt dickes büsnens im ausland das ist einfach nur um dass ich das ganze schön zu gehen da ist wahrscheinlich einfach pleite ist zumindest meine überlege nachdem ich das gesehen habe wie gesagt wir kennen uns nicht
ja ist ja ewig her noch zu call of duty zeiten das ist ja der witz ich kenne die meisten leute noch von von aus der damaligen zeit flüchtig flüchtig ja
ihr kennt mich ich habe damals schon nicht große social dinger gemacht also ich hatte mit keinem großartig was zu tun aber zumindest flüchtig kenne ich die meisten noch kennt man ihn oh nee
ja z plus plus ok ok wo sind wir stehen geblieben also ich habe diesen diesen artikel hier gefunden den hat auch jemand gestern im chat gepostet habe ich gesehen und das probieren wir jetzt mal aus ich habe es lange genug geschwätzt 37 minuten jetzt bin ich in passender laune zum progas stelsen
leute ich muss mal kurz meine klimaanlage anmachen war ich denn hier mein was 24 grad monke ist zu warm was ist denn jetzt jetzt an ok klimaanlage ist an alles gut was für eine klimaanlage ich habe eine mitsubishi heavy frag mich nicht
frag mich nicht keine ahnung findest du im stream archiv irgendwo wir haben nämlich mal ein arduino für das ding programmiert ich will nicht schwitzen so aber jetzt von diesen unangenehmen themen
so ich muss kurz was am handy gucken also jetzt von den ganzen unangenehmen themen mal zu progas zeug also diesen artikel habe ich gefunden und da kriegt man erklärt wie man ffm pack im browser macht und ja bevor irgendjemand wieder auf die idee kennt ich kenne
ffm pack wasm und ich kenne ffm pack js allerdings der unterschied zwischen dem was ich machen muss und das c++ ist ein wahnsinnig unangenehmes thema das stimmt von unangenehm zu c++ das ist ein downgrade
arduino idee verwende ich nicht arduino idee ist auch pains champ was du verwenden musst ist moment habe ich gar nicht installiert doch du musst platform iow verwenden viel besser platform iow ist deutlich mehr guck mal der cool champ da ist er doch
wobei war der cool champ das für die klimaanlage ach nee das war das für den das der cool champ war für den kühlschrank secrets mache ich jetzt nicht auf ja ja das das das willst du verwenden du willst den du willst platform iow verwenden
arduino idee des pains champs also diese projekte hier kenne ich allerdings ist sowohl ffm pack wasm als auch ffm pack js nicht das was ich haben will ich will wirklich low level auf ffm pack sachen zugreifen so wir machen jetzt mal wir machen jetzt mal dieses tutorial durch
und dann probieren wir das mal aus also das ist ein tutorial wie man ffm pack in docker selbst kompiliert und dann darauf über web assembly zugreift also beziehungsweise erstmal in ein web assembly static library übersetzt und dann von web assembly drauf zugreift ich bin mal gespannt ob das funktioniert und wenn das wenn das beispiel funktioniert
dann den browser ausgeführt genau das ist der sinn das ist der sinn davon also zum beispiel stell dir mal vor du willst im browser irgendein format abspielen was dein browser nicht kann dann hast du gelitten kannst du nicht kannst du nichts machen es sei denn irgendjemand hat
ein javascript decoder dafür programmiert was sehr unwahrscheinlich ist also kannst du vergessen so mit ffm pack das ist ja eine c++ library kannst du mit kannst du übersetzen den web assembly und dann den browser verwenden allerdings natürlich mit einschränkung du kannst jetzt nichts machen was irgendwie aus der browser sandbox ausbricht also wenn du jetzt sagst ja ich mach deine tcp server auf das geht nicht weil browser können keine tcp sockets öffnen listen dran listen lassen das funktioniert
nicht so ich copy paste mal diesen ganzen klempel jetzt so ja und videos abspielen über ffm pack im browser ist sicherlich nicht die gute idee weil performance ist das ziemlich mies so haben ein dockerfile wir machen das ganze jetzt visual studio code auf yes trusten den ach quatsch so
hier haben wir noch ein terminal kann man nie genug haben das brauchen wir wahrscheinlich so das ist das dockerfile ich will ein dockerfile nicht ein dockerfile also wir gucken uns das gleich mal an
nein kein rust kannst vergessen ffm pack über rust ist abartig und mir wäre es deutlich lieber mir wäre es deutlich lieber als c++ c++ ist absolut kompletter pains champ aber was willst du machen ffm pack kann hardware beschleunigt ja das liegt daran also hier um das zu beantworten ja ffm pack kann mit dem passenden codec oder also mit dem passenden encoder oder decoder kann das das ganze hardware beschleunigt machen du kannst zum beispiel
nvnk123 wie viele nvnk implementationen es auch immer gibt kannst du verwenden und wenn du die passenden grafikkarte hast ist es damit schnell aber dein browser hat keinen zugriff auf die grafikkarte für solche lowlevelencoding sachen
ok also dockerfile was macht der typ hier denn mscript und msdk sbuild ok dann macht er irgendwie ein h264 decoder von 2017 ich ändere da jetzt mal nix dran weil ich denke sonst wird es nicht funktionieren oh gott pthreading auch noch über webassembly im browser das wird das wird ja was
so dann baut er diesen ganzen krempel ffm pack version lädt er runter ffm pack version lädt er was runter 4 3 das erscheint mir ein bisschen alt was ist die aktuelle ffm pack version history also 5er gibts schon aber die 5er nehmen wir nicht weil die wahrscheinlich nicht funktioniert hier mit
ich meine wir wobei doch wir könnten die 5 wir können es ja mal mit der 5er probieren von wo lädt er denn runter runter download video laden video laden snapshots ne das ist was falsches quatsch das da ffm pack releases was haben wir denn da als letztes zu bieten last modified
die supporten noch die 2achter version boah die sind ja krass drauf die supporten die letzten 2achter die letzten 3 2er die 3 4er und die 4 2er wtf was ist denn mit denen loser da hast du grad schon was zu tun das zu maintainen
so ffm pack 5 501 vom april die sache ist halt die ich hab keine ahnung ob das überhaupt funktioniert mit hab ich denn hier überhaupt selbst schon ffm pack installiert weil die header brauche ich tatsächlich ok 50 habe ich installiert
es gibt was es gibt schon 507 ach ne das ist patch 50 ok das ist merkwürdige versionierung also dann nehmen wir das hier 501 ist die version die wir haben wollen ok 501 falls es leute wisst ihr was wir machen mal was wir gucken mal ob das kompilieren funktioniert ohne dass wir was dran ändern
wir lassen es wir lassen es einfach so und wir kompilieren das jetzt mal und gucken ob es funktioniert weil es hat ja keinen sinn wenn ich da jetzt dicht ran editiere und danach geht es nicht wisst ihr wir machen jetzt einfach mal was das docker bild mp4 info alles klar
den ganzen krempel für c++ installiere ich auch schon mal weil ich garantiert header files und sowas brauche und die bringen mir auch nix wenn das wenn die im docker container drin sind
wieso sollte es funktionieren wenn der pass nicht stimmt hä weiß ich nicht woraus sich das bezieht ich meine vielleicht funktioniert es nicht mit der neuen version deswegen mache ich es mit der original version wie das tutorial geschrieben ist und wenn das funktioniert können wir es immer noch umtauschen austauschen
so also beim bild
was ist ein ms ms stk was ist da die richtige version
was ist da die letzte version text 3 1 13 oder hat sich ein bisschen was getan die letzten jahre über ich glaube wir sollten das dann mal auch updaten ok also wir updaten dann ffm pack
und hier können wir wahrscheinlich auch den codec updaten an den 2019 ist schon der neueste
version jetzt von 2017 macht der dude hier wir updaten dann einfach alles wird alles geupdatet wenn das wenn der monkeys was jetzt
ich glaube ich weiß woran das liegt docker hat sich wahrscheinlich mit dem standby mit dem standby verschluckt von der vm das kommt manchmal vor
ja schon funktioniert so gucken wir mal wir haben jetzt gelernt hat es auch c top ist angesagt b top b top ist angesagt die coolen leute verwenden b top
wobei ich ganz ehrlich h top schöner finde das ist das so schön simpel ich brauche keine true color console output mit sonst was ich weiß auch überhaupt nicht was jetzt genau was verbraucht
so also weiß ich also ich finde ich persönlich finde ihr h top schöner zumindest out of the box ip league monkeys so aber h top ok das ist am compile
ja dann compile mal im hintergrund wir lesen das tutorial und gucken wie es weitergeht ok dockerfile dockerfile bild writing the wrapper mp info wrapper punkt cpp ok es wird zeit für c++ files leute
in welchen ordner muss ich den kram überhaupt legen einfach ins hauptverzeichnis oder wie macht er weiter bist in dist oh Gott make files alter hör mir auf make files ist eines der schlimmsten sachen der menschheitsgeschichte
die technisch erfunden wurde ich bin nur noch gefolgt von c++ header files source ok ich brauche ordner der source heißt so und da drinnen legen wir jetzt ein
erster krempel mp 4 info wrapper an alles klar show recommendations das c++ extension pack nein das c++ extension pack will ich nicht ich will nur die normale c++ extension und die haben wir auch installiert ja dann ist ja alles gut
exzellent so und was machen wir da jetzt reinde mit gachibus haha wusste ich doch das also moment ich habe ich das nicht eben installiert wozu braucht man make files ja wenn man ein build script braucht also im prinzip das was man in bash machen kann
halt bloß doch ein bisschen optimierter für c++ zeug ganz ehrlich ich verwende in der regel keine bild files und ich verwende in der regel auch keine custom npm npm scripts noch keine cargo scripts und ich überlege gerade was das
die scharp gegenstück davon ist wahrscheinlich nichts und ich vermisse es auch nicht warum wischel studio code weil ich vermute wir brauchen c++ javascript html und docker in einem und ich will nicht 30.000 sachen aufmachen
wist ihr was wist wisst ihr was an c und c++ auch immer gerade an c++ immer so pains champ ist immer wenn es kompiliert denkst du gleich bricht es ab das ist wie beim beim angry german kit was unreal tournament spielen will also du denkst gleich gleich ich will nicht
dass es lebt weil dann bricht es ab aus fertig groß hat funktioniert die header sind doch im docker drin ja das bringt mir aber nix braucht die braucht die header ja hier wo sind die header überhaupt ich habe es doch ich habe es doch
installiert ich meine ich könnte den docker container mountain lokal oder ich könnte in wischel studio code mich in docker rein attachen das geht ja irgendwie aber keine ahnung ich nehme die header die bei mir auf der platte liegen
ich weiß du kannst das da weiß ich aber ich will jetzt nicht eine halbe stunde raus auch figuren wie das funktioniert ich kenne das was vias code remote try cpp was sample point to try out the vias code remote container extensions
auf feife der kram ne ne das passt schon ich muss bloß mal kurz gucken pack pack mann minus query und dann ist include wo müssen wir hin ne user include wahrscheinlich net
ok was ist hier drinnen bein punkt ha das da das brauche user bin m scripten system include das da das brauche hier so und jetzt wirst du ihm sagen edit include pass und unbedingt sollst du noch das hier nehmen und freuen
es ist einfach wieder weggegangen
ah siehst du schon funktioniert poc hat mich gebadet ok nice jetzt haben wir das kompilieren von dem kram hat auch geklappt
so haben wir jetzt haben wir jetzt autocomplete haben wir jetzt autocomplete also zum beispiel ems oh guck mal da value tatsächlich autocomplete funktioniert die c++ extensions in visual studio code sind halt ziemlich ziemlich
also die sind langsam die gehen aber die sind langsam wie sau also du brauchst hier teilweise zwei drei sekunden bis du sonntags highlighting richtig stimmt und sowas keine ahnung wer damit größere sachen überhaupt entwickeln kann so das haben wir ja wir vertrauen ihm einfach das geht
mit makefile makefile ach nee im moment das gehört dazu ne makefiles haben ja so komische komische synthax dass da oben ist der jobname und das hier ist irgendwie dann was der ausführen soll makefile ok das heißt wir sollen jetzt hier
noch ein makefile anlegen makefile nee nicht in sauce im things so
add the following lines to your docker file wenn der das sagt dann machen wir das einfach und jetzt und wieviel wollen wir wetten dass es nicht funktioniert ich wette gar nicht wer weiß das ist das gefährlich mit dem chat ich glaube aber nicht dass es funktioniert
ich wusste es ich wusste es war mir so klar dass es nicht funktioniert ja so ist es immer no makefile found hast du ein makefile erstellt ja ich habe eine idee woran das liegt
vielleicht klappt das hier nicht home max was home wie geht da keine autocomplete was ist denn das
no targets muss ich das vielleicht noch mal bilden oder tipp hat es bloß nicht ja wahrscheinlich muss ich das noch mal bilden vorher
das ist was anderes missing separator makefile ich habe schon weiter gelesen nehme ich hier und das funktioniert nicht
was ist denn wenn ich hier make drin ausführen ok mein makefile ist syntaktisch nicht korrekt obwohl ich das eins zu eins aus dem beispiel gepastet habe aber makefile haben so ein paar dumme angewohnheiten dass sie auf einrückung und irgendwie auch auf tabs und sowas
wert legen
das geht jetzt oder was ernsthaft das da in der anleitung steht doch überhaupt nichts drin was ist jetzt der bildet das an der stelle und danach kommt das raus und dieser step geht nicht btf warum warum okay kann mir irgendjemand logisch erklären warum das nicht geht und das geht
es ist in makefile ich glaube wir vergessen es einfach ist egal das hauptsache hauptsache es geht jetzt tabs brauchen die tabs oder was
tabs spaces das ist da if a single tab
ok wir können machen und gucken ob das jetzt ohne fehler compiled und wenn das jetzt ah guck mal das ging ja sogar relativ schnell ja gut unser beispielprogramm sind auch noch fünf zeilen oder so ok nice das hat funktioniert und jetzt habe ich hier habe ich hier was liegen
das ist einfach mal zwei megabyte groß oder was wir großartig was machen so ja dann updaten wir mal das docker file wobei das machen wir hier drüber wenn ich es hier schon auf habe
jetzt schreiben wir mal aktuelle versionen rein also 501 ist glaube ich hier das aktuelle das ist das stk ist 3 3 1 13 und der decoder das das wird im leben nicht funktionieren
der decoder ist decoder ist hier
stable stable stable gibt es das hier stable ich muss das letzte suchen wo stable drin steht
das da stable minus also minus stable
so noch was da gibt es safe noch einen neueren nicht so aus
das ist lip x 264
es wäre interessant zu wissen es wäre interessant zu wissen von wo das gemirrored ist
also hier was wir hier beim
und hier auf
hier einfach einfach noch eine stange effektiv
Ich bilde das erstmal so, wenn das geht, nehmen wir die neueste Pleading Edge Version
von...
Wobei, ja, mal gucken.
Letztendlich für unsere Tests ist es doch egal.
Beat me?
Denn dieses Repo nehmen sie, passt doch, das können wir dann nehmen.
Also, wir gucken jetzt mal, was funktioniert, also wir haben FFmpeg aktualisiert, den Decoder
und das, wahrscheinlich wird es jetzt nicht laufen.
Gut dass wir gestern Platz gemacht haben.
Ahhhh.
Die Webseite machst du weiter in HTML und wenn du DOM-Interaktion brauchst, dann musst
du das auch mit JavaScript machen, aber du kannst von WebAssembly JavaScript aufrufen
und vor allem kannst du WebAssembly von JavaScript aus aufrufen.
Was halt ziemlich pock ist, wenn du C-Libraries verwenden willst oder Go-Libraries oder Rust-Libraries
oder so, im Prinzip alles was WebAssembly als Target hat.
Das scheint so zu funktionieren Leute, oder Cobol, ich weiß nicht, kann man Cobol WebAssembly
machen?
282 Sterne!
Oh, Cloudflare, anscheinend brauchen die das, ganz wichtig, oh das war mal als April-Scherz
oder was auch immer, haben die hier Release Tags, wo ist denn in GitLab die Release Tags,
ich hab GitLab schon ewig nicht mehr verwendet, ich hatte das mal self-hosted bei uns auf der
Arbeit am Start, wo haben die Tags, hier Tags, gibt keine Tags, releases, wo sind die releases,
releases gibt's wahrscheinlich auch nicht, Branches, ach was auch immer, stable, stable
Branches, stable ist von einer Woche, na ok, das, haben wir jetzt fertig kompiliert, nein
aber nicht, releases sind unter deployments, aha, gibt's aber auch nicht, das musst du
wirklich alles selbst kompilieren, na dann, zum Glück habe ich einen halbwegs schnell
Rechner, so ok, das haben wir geschafft, jetzt wird FFmpeg neu kompiliert, Cloudflare
Workers now support Cobol, aber die Workers laufen doch bestimmt nicht mit WebAssembly
oder?
Ach tatsächlich, ach du Scheiße, ist das ein April-Scherz, nee 16.04, ja das ist für
die ganzen Oldschool-Finanzdienstleistungsdinger, die noch Sachen in Cobol haben, aber in die
Cloud wollen, das ist gar nicht so schlecht, ja finde ich auch, aber es ist trotzdem pain
in the ass, oh guck mal, es ist wieder kurz vor dem abbrechen, die C++-Compiler-Fehlermeldungen
sind auch die besten.
Solange es keine Eros gibt, alles gut, hey, nice, make, pock, alles klar, das funktioniert
mit neuesten Versionen auch noch, na dann, dann wollen wir mal, ne, gut, also wo ist die
Anleitung, wo sind wir stehen geblieben?
Also Serious Max, falls du doch mal den durchblickst, welchen Link ich verwenden muss, für die
neueste Version, dann mach ich das, oder muss ich das gar nicht wehgetten, sondern ein Git
clone machen anstatt dessen, also quasi anstatt den Kram hier downloaden, ein Git clone machen
und dann da drinne bilden, könnte man auch probieren später, aber jetzt waren wir erstmal
weiter, weil die Version wird es jetzt nicht so großartig ausmachen, so, bild, so, das
haben wir, writing Javascript, alles klar, also wir brauchen einen Ordner für Javascript
Zeug, gut, also machen wir mal einen neuen Ordner und zwar www, ne, HTML, www root heißt
das normalerweise, www root, das heißt HTML, ne, www root, kann ich mir nichts davon vorstellen,
so, da drinne gibt es jetzt File, index.html, zack, so, two spaces, korrekt, alles klar,
so wie gehts weiter, was machen die hier denn jetzt?
Since our mpe4info wrapper is compiled synchronous C++ code and can block browsers main thread,
ach, juckt mich nicht, advantage of web workers, boah die ziehen aber alle Register hier, oder?
WebAssembly in C++ aufrufen, aus web worker, public HTML, ne, unter Linux ist es eigentlich,
meistens war www, HTML und bei vielen heißt es einfach www root, public underscore HTML,
keine Ahnung, now let's create a new worker.js File, wo create ich das, hier wahrscheinlich
ne, bei index.html, ok Leute, ich seh schon kommt, das müssen wir dann ein bisschen entschlacken
danach alles, weil ich glaub ich will das gar nicht über web worker machen.
Schauen wir mal, aber erstmal das, erstmal das Ding zum, das example zum laufen bekommen.
So, was auch immer hier passiert, fs, wo kommt denn das her, das ist aber doch kein Standard
javascript Zeug, ne ist es auch nicht, ist das irgendein WebAssembly Krempel, ja anscheinend
multiswitching worker.js, ich bin mal gespannt was der Typ hier macht, so, fs, wo kommt denn
das her überhaupt, hier vielleicht, mp4info.js, mp4info.js, fs, so, mkdir, können wir mal
suchen, mkdir, ok, das kommt hier aus diesem javascript Ding, alles klar, ja sowas hat
javascript aber nicht, normalerweise, ja das ist vom ffmpeg WebAssembly Ding, so wie es
sieht, ok, weiter im Text, script, unten einfügen, ins index wahrscheinlich, ja monkaS, aber
richtig monkaHyperS, so, ach der nennt es nur www, egal, ach man muss die Sachen da
rein kopieren, Leute wir machen jetzt Trick 17, wir kopieren die Sachen nicht rein, weil
die Sache ist ja die repo monkaCpp, ne, monkaCpp, die Sache ist ja die make, wenn wir das kompilieren
kommt das in dist raus, wir linken das einfach, hab das x, ok, ne die werden jetzt nicht wahnsinnig
neu, haben highspeed viel schneller das gemacht im letzten Jahr, können wir dann später machen,
der kompiliert das ja immer nach dist, wir linken das jetzt einfach rein, wir gehen hier
nach www root, Sachen ln-s dist js, ich glaube man könnte einfach Sternchen machen, wasm
und worker, so, weil wenn ich es jetzt neu kompiliere ist es immer das aktuelle im www
root, das ist im Prinzip Verknüpfung, so, haben wir den kram, ok, jetzt muss man noch
irgendwelche header files einfügen, ok, dieses tutorial zieht aber alle Register, docker,
c++, ffmpeg, webassembly, node.js, express, make files, html, da ist alles dabei, da ist
alles dabei, ja die benutzen das nur um die richtigen header zu setzen, ja, aber trotzdem,
das ist schon die hardcore variante, ok, wo muss das hin, server.js, das ist richtiger
file fetched hier, wo sind wir denn, da, new file server.js, noch sind wir in der copy
paste phase, npm install express, na dann, gib ihm, alles da rein, wenn es funktioniert,
push, also wenn das funktioniert, was wir heute basteln, kann ich es nachher auch noch
auf shitter posten, wenn ihr euch das angucken könnt, ok, alles klar, starten wir mal den
server, www root, bam, server gestartet, chrome, was zum, warum habe ich überhaupt
kein package jason in meinem heimatverzeichnis liegen, was, was, was macht das da, das ist
weil ich express installt habe, warum installiert er das nicht da drin, cringe, so, ach weil
ich kein npm init gemacht habe, ja, genau, localhost, 8080, so, da ist die website, ok,
und jetzt brauche ich ein video zum testen, ich brauche ein video zum testen, dann nehmen
wir noch eins von meinen, dann nehmen wir noch eins von meinen, irgendein kurzes, was
ich mir schnell runterladen kann, dieses pixel spiel schlägt battlefield und cod, genau,
das wollte ich schon immer haben, alles klar, kajibus.mp4, das können wir auch nehmen,
wenn du das als mp4 video oder als h264 video hast, ne, katsch, nicht, youtube.dl, ne, nicht
youtube.dl, wie heißt das andere, youtube.dl, ne, wie ist der krempel, ah, genau, dlp,
so, minus f, no matches found, gut, lade ich mal mein eigenes video schnell runter, sollte
ja zackig gehen, das, wisst ihr was, wir können sogar schon, leute, wir nehmen mal ein bisschen
was kleineres, komm, wir nehmen mal das, wobei ich muss vom codec her gucken, es tut nicht
jeder codec, avc1 ist h264, ne, ffprobe, ok, mv, das muss ich jetzt mal umbenennen,
vid.mp4, ffprobe, vid, h264, main, avc, blablub, alles klar, gut, wir haben ein video,
oder wir können es auch ffplay machen, vid, alles da, ich hab mein video ein bisschen
runtergescaled, dass das im browser dann auch ordentlich funktioniert, falls wir es überhaupt
jemals schaffen den kram zu rendern, gut, also wir haben ein video zum testen, so, also
ich hab diesen blogpost ja vorher schon mal gelesen, ich glaube was das macht, ist, der
lädt das video hoch, und dann lädt das in ffmpeg und lässt sich ausgeben was das für
ein format ist, und das wars, das, wir wollen ja noch deutlich mehr machen, repos, monka
cpp, ja dahin, postes video, ah, ww root, ne, ne, das machen wir eins hoch, kann man
hier drin irgendwie copy pasten oder so, ups, hab ichs zerstört, monka cpp, ww root, vid,
alles dahin, alles klar, so, vid.mp4, ne, das geht, ok, das macht mich schon mal zuversichtlich,
dass das tutorial nicht schlecht war, also, wir haben jetzt ein video hochgeladen, ok,
das muss ich jetzt erstmal verarbeiten, was da, jetzt müssen wir c++, servar.js brauchen
wir nie wieder, duration 0, ja das kann sein, ne duration, minus, der erkennt die duration
nicht richtig, der ist zu pepega dafür, wir könnens ordentlich machen, youtube hat das
bestimmt müllig encoded, minus i vid, keine ahnung, out.mp4, wir lassen das mal reencoden,
dann ist das bestimmt alles gut, youtube hat das bestimmt painschampig encoded, ok, das
dauert jetzt kurz das video, ganz ehrlich so ein langes video brauchen wir doch gar
nicht, wir machen mal noch was anderes, wir machen mal noch was anderes, wir machen noch
skip, geht aus, oder, skip, boah, ffmpeg sachen, ne, ne, ne, first, ffmpeg first 20, oder first
10 seconds, genau, skip, aha, skip von 0, time 10, time 20, ja das mit dem skippen kannste
hätte ich mir auch gedacht, aber wer weiß, so, vielleicht checkt er das jetzt besser
wie lang das ganze ist, out, duration, guck da, das ding war einfach müllig encoded von
youtube, duration, 20 milliarden microseconds, milliseconds, was auch immer, microseconds
wahrscheinlich, gut, das funktioniert, so jetzt muss ich hier erstmal kurz verarbeiten
was hier eigentlich passiert, das brauche ich wahrscheinlich nicht mehr, ok, ich muss
jetzt erstmal kurz verarbeiten was hier eigentlich, was hier eigentlich passiert, ok, index.html,
wir haben ein inputfile, also inputformelement zum hochladen, dann starten wir einen webworker,
wir subscriben zu dem change event von dem ding, also sprich, dass wir mitbekommen sobald
hier was hochgeladen wird, aber es funktioniert anscheinend auch bloß einmal, weil ansonsten
geht es kaputt, auch nice, so, on file change schickt dann zu unserem webworker das hochgeladene
file, dann geht es hier weiter, der bekommt das, das bestimmt fucking viel overhead mit
webworkern und sowas, so, dann macht der fs irgendwas, irgendwas eingebautes von ffmpeg,
also der legt ein verzeichnis slash work an, virtuell, weil der browser hat ja kein filesystem
in dem sinn, bzw. kann ich aufs filesystem zugreifen, dann kopiert er wahrscheinlich
diese files nach slash work, sowas in der richtung, wird das wahrscheinlich sein, dann
macht er module run, das ist wahrscheinlich das main aus meinem c++, nee, das heißt run,
hier ruft er das c++ auf, dort bekommt er dann zurück, wie lang das video ist, das löschen
wir, kann doch nicht mal was löschen hier draus, paintschamp file explorer, so, dann
hier bekommt er zurück die ganzen infos, wie lang das video ist, duration, format, wie
viele streams, das postet er dann zurück ins, in das main und dann kommt er hier raus
und hängt es da unten an, ok und dann unmountet er den krempel wieder, ach du scheiße, ok
jetzt müssen wir c++ programmieren, weirdchamp, jetzt kommt der fun part, ja jetzt kommt
der massive, funhaver part kommt jetzt, was war das ergebnis von dem wassem ffm pack,
was, du meinst das rust package von gestern, das hat nicht funktioniert, also, wie testen
wir das denn jetzt, wir machen was kleines, wir fangen mit irgendwas wirklich minimalem
an, also, das mit dem format, das können wir ja dalassen, dass da nicht so viel kaputt
geht, open können wir auch dalassen, so jetzt müssen wir ffm pack machen, mein ffm pack
in gerade in c ist nicht so gut, ich hab meistens den c sharp wrapper verwendet, der heißt
zwar zum glück fast alles ähnlich, aber, ach ich weiß wo wir abgucken können leute,
wir haben doch mal, der overlaychamp, den brauchen wir jetzt, wishlist studio 2019, guck mal wie
lang ich schon nicht mehr unter windows was gemacht hab, der overlaychamp, das ist was
ich mal gebastelt habe hierfür zum ablösen, ich hab doch hier mein tool, mit dem ich bilder
anzeigen kann und sowas abspielen und sowas, ja und das ding hat probleme bei größeren
gifs wie zb dem hier, guck, klick und da hab ich mal mit ffm pack ein overlay für gebaut
und ich glaube, das ist der overlaychamp, muss mal kurz gucken wie so meine systemauslastung
gerade ist, background download, monkaS was macht das da, hab ich edge, edge, edge dinger
laufen, egal will ich gar nicht wissen, desktop ist das beste, so also da können wir nämlich
hier ffm pack zeug abgucken, video frame, video decoder, aha hier machen wir sachen
ok, open input, stream info, find decoder, av read, ok wir machen jetzt was ganz, ganz
einfaches, wir lesen das komplette video ein und geben uns von jedem, noch komprimiert
im frame einfach mal die größe aus, also machen wir sowas hier, while, true immer beste,
av format context, ach du große, ob das funktioniert, wir brauchen den package, zum glück hab ich
schon mal ein paar sachen mit ffm pack gemacht, halt selten in c++ direkt, aber alloc package,
nein es ist package alloc, übrigens wisst ihr, wisst ihr, dass euch ffm pack richtig
krass tribeten kann, es gibt free package und es gibt package free, also es gibt av package
free und av free package, das ist deprecated, aber das ist echt was, pains jam, aber anscheinend
habe ich es mit version 5 entfernt, so av alloc package, package und eigentlich müsste
ich dann hier unten irgendwie sowas machen wie free packet oder so, aber scheiß auf
memory leaks, das ist der browser, da kann ja nichts passieren, ok so, result null, result,
wir machen nicht while true, wir machen while result null, reading via frames, ihr sagt
jetzt wahrscheinlich, man könnte das da auch da oben reinschreiben, da bin ich mir aber
noch nicht so sicher, ob das eine gute idee ist, ich mein man könnte ja auch sowas hier
sagen, aber da bin ich mir unschlüssig, wobei warum nicht, kann man doch machen, so das
werden wir noch öfters brauchen, den ffm pack Fehler anzeigen, alles klar, was muss
ich jetzt machen, av read frame, ok also print f, ich mein wir sind in c++, aber ich fange
garantiert nicht an mit std out kleiner kleiner irgendwas, jetzt lese ich es nicht mehr in
eine variable, das ist richtig, aber brauche ich auch nicht, weil das was ich haben will
ist das da, das hier ist nur der return code, das einzig dumm ist, ich kann den return code
nicht ausgeben, wenn es Fehler schmeißt, ok print f, size und jetzt dollar, ne ach d,
d ist ein int ne, packet size ist das überhaupt ein int, alles klar ok, mal schauen ob das
noch, ob das noch maket, ah posture, oh es hat gemaked, nice, so wenn das jetzt funktioniert,
kriegen wir die aus, jetzt liest ihr das komplette video ein frame für frame und gebt uns die
größe von jedem frame aus, wenn er nix ausgibt geht was nicht, er gibt nix aus, ah newline
vergessen, das liegt bestimmt am newline, zack, was ist denn dollar e in print f, wenn
es das gibt, f, das wäre jetzt auch zu einfach gewesen, wenn das einfach funktioniert oder,
dann brauchen wir doch den return code, moment ungleich 0 ist doch falsch, gleich gleich
0, gleich gleich 0 will ich haben, alder ppega programmer hier am start, wenn es 0 ist dann
ist ok, dann will ich weitermachen, ah, oh guck mal das funktioniert, ffmpeg im browser
Leute, ffmpeg im browser, wir lesen das video ein, ultra low level und das im browser, alles
klar so, das überrascht mich jetzt ein bisschen, dass das einfach funktioniert, aber das komplizierte
kommt ja erst noch, also mein ziel by the way ist, was ich mir gedacht habe, was man
mal ausprobieren könnte ist, sd videos, browser können in der regel nur hd videos abspielen
und eigentlich auch nur h264, vp8, ich glaube das wars oder, ein standard video codex, die
jeder browser unterstützt, vp9 und h265 ist glaube ich noch nicht überall gelandet, bin
ich mir aber unsicher, zumindest die alten sd videos sind ja mpeg 2 video und da habe
ich mir gedacht, man könnte so machen, dass man damit alte sd videos abspielen kann,
sd videos brauchen auch nicht so viel leistung, ok jetzt kommt aber der komplizierte part,
jetzt kommt der komplizierte part, wir müssen das video decoden, wir lesen ja aktuell nur
das video ein und jetzt müssen wir das video decoden, dafür, das können wir uns abgucken,
das habe ich nämlich hier gemacht vor ein paar jahren schon, also wie funktioniert das?
av format alloccontext haben wir, stream format, stream, ich copy paste mir das jetzt einfach
und dann bauen wir das um in c++, kannst du dateien speichern, ja aber nur über downloads,
also nur über javascript umwege und gut ich könnte es im local storage speichern, aber
ich glaube das ist ein bisschen klein für videos, wie groß 50mb oder so ist local storage
maximum pro seite oder 20 sogar nur, nein 10, 10, 10 ist es nur, aber wisst ihr wofür
das cool ist, man könnte zum beispiel einen qualitativ ansprechenden gif converter machen,
der kleinseitig läuft, das ist cool, das klappt, wobei man das auch, das kann man auch mit
ffmpeg wasm oder ffmpeg js machen, aber hier kann man halt deutlich mehr tunen, weil man
den begriff auf die lowlevel sachen hat, also wie, ok was muss man machen, stream, gleich,
warum machen die das eigentlich da oben hin, jetzt mal ernsthaft warum beschreiben die
das nicht hier unten rein, die clearn den context auch nie, das ist memory leak, normalerweise
musst du das closen am ende, normalerweise musst du close, av close, close input musst
du normalerweise zum schluss machen, fmt context und dann einen pointer auf einen pointer übergeben
und dann funktioniert es, weil ffc++ kam und dann können wir das nämlich auch hier machen
und brauchen das da oben, warum hat der das als static da oben gemacht, das macht doch
überhaupt keinen sinn oder, ich meine wahrscheinlich kann er deutlich besser c++ als ich, Rust hat
nicht gut funktioniert, sonst würde ich heute nicht c++ machen, warum haben wir eigentlich
schon kaum was gemacht, 30 milliarden files hier rumliegen, was ist das, was ist da los,
amazing, danke schön für den sub, so, format open, red, red brauchen wir doch nie wieder,
oder, red brauchen wir nie wieder, ah doch wir brauchen red, ah ich kack noob, 0w alter,
ok, dann nehmen wir es so, alles klar, so jetzt müssen wir das hier in c++ umwursten, also
zum glück, zum glück heißt das in dem wrapper gleich, also wir brauchen jetzt format context
stream 0, das ist die gleiche syntax, so codec, codec gleich av codec find decoder und dann
stream codec, so, aha, alles klar, gut dass wir das schon mal in c sharp gemacht haben
damals, dass ich das jetzt einfach nur übersetzen muss, so das haben wir gemacht, das haben
wir gemacht, jetzt brauchen wir noch einen, wisst ihr was, ich mag die schreibweise mehr,
so, also, alter ok sehr gut, muss ich ja alles umbenennen, so und jetzt müssen wir, wie geht
es denn jetzt weiter, package frame, na gut das wird so weit sind wir nicht, open, av
codec open, oh das gibt es nicht, andere header vielleicht, welchen header, welchen header
brauche ich denn dafür, gucken wir mal ein Beispiel an, von irgendwelchen anderen random
includes im internet, include was gibt es, ok av codec, wo könntest du das, in welchem
header könntest du das geben, lib av codec, codec, h oder av codec.h av, av codec.h wahrscheinlich,
include five header, exellent, das wird sein, das ist include five header, included automatisch
alle header richtig, weil es weiß was man haben will, ach guck mal da haben wir es jetzt,
av codec open, so was brauche ich noch, codec oder decode, ctx, gleich, av codec, rlock,
context 3, ganz wichtig 3, nicht 1, nicht 2, nicht 3, ich glaube nicht, dass ihr das
mit blazer einfacher fällt, das stelle ich mir sogar ehrlich gesagt, schwierig bis fast
unmöglich vor, p invoke gedöns über blazer web assembly auf irgendwelche c libraries,
das wird was, wie soll das funktionieren, wie willst du das machen, du bräuchtest
erst einmal ffmpeg als web assembly build, dann müsstest du darauf irgendwie, ich weiß
ja nicht mal ob man überhaupt mit blazer p invoke ordentlich machen kann auf web assembly
basis, boah das glaube ich nicht, dass das so easy ist, da vermute ich der ist sogar mit
c++ deutlich einfacher, ok also wir sind stehen geblieben, so alloc context 3, so, es gibt
zumindest schon mal keine syntax fehler und jetzt open decoder context, codec, gut euch
das abschreiben kann, dann 0, 0 natürlich was sonst, ah ne wir sind ja in c++, da ist
es 0, 0 pittere, ich habe eine zweifel ob das jetzt so funktioniert, können wir irgendwie
checken ob es funktioniert hat, ffmpeg blazer, ach zeig mal her, zeig mal guck mal, interessant
das muss ich mir mal schnell angucken, ffmpeg blazer, ffmpeg on web assembly, ffmpeg provides
ability to utilize, ne ffmpeg wasm brauche ich nicht, ffmpeg wasm ist nicht das was
ich haben will, das ist ja im prinzip nur ein ffmpeg cli wrapper für ein browser, also
nur nur, das ist ja auch schon geile sache, aber wenn du interne sachen machen willst
fällts dir damit schwerer, so strange, ja guck das ist ein cli wrapper, na das ist noob kram
das braucht man nicht, wir wollen ja direkt auf einzelne decodete frames zugreifen, das
wird damit nix, also gibts hier irgendwie gescheite return werte, hier rett, rett gleich,
so schauen wir mal ob das mit dem codec funktioniert, also, öhm öhm open, open, ne codec oder
kram, ja egal wie ich es nenne, jetzt gucken wir uns mal ein bisschen debug ausgabe an
ob der kram funktioniert, so make, wir haben anscheinend keine syntaxfehler drin, es scheint
schon zu funktionieren soweit, es passiert jetzt noch nicht viel mehr, aber wir sehen
jetzt ob das an sich, codec no error information, no error information ist gut, weil no error
information bedeutet es gibt keinen fehler und das hat funktioniert, alles gut, also
return code ist, hat funktioniert, ok der hat das geöffnet, wir können das ja mal anders
machen, öhm öhm codec, wir lassen uns mal den name ausgeben, name, da sollte jetzt
rauskommen h264 sollte jetzt rauskommen bei dem codec als name, ja super, h264, ja gut
das scheint bis jetzt zu funktionieren, alles klar, richtig feilfeder, gut und jetzt müssen
wir decoden, ok wie geht das, öhm ffmpeg av codec open, das funktioniert, av seek brauchen
wir nicht, das ist das mit das loop bei gifs, das brauchen wir nicht, so genau so ging das
jetzt, av codec send package, av codec receive frame, exakt, da brauchen wir noch ein frame
vorher, aber das kriegen wir hin, ok, also die logik bei ffmpeg ist, falls das irgendjemand
von euch auch mal verwenden will, ein packet ist das, was, nee es muss ich auch sagen,
ein packet ist ein noch komprimierter frame und ein frame ist ein video frame der decoded
wurde, das heißt packages schiebst du in den decoder rein und frames bekommst du aus dem
decoder raus, umgedreht wenn du was encodest schiebst du frames rein und bekommst packages
raus, weißt was leute ich nenne das packet, ich nenne das packet, weil ich hab das andere
frame genannt und sonst müsste ich es ja auch frim nennen, also leute c++ leute würden
es, die richtig hardcore c++ leute würden es packet und frim nennen oder, gabs zu, klare
schreibweise ist da nicht so hoch im kurs, so jetzt lesen wir den frame ein, wir müssen
jetzt noch checken falls das mehrere streams hat, ob packet, p und f reicht eigentlich
auch, ob packet stream index gleich gleich stream index ist, das ist wichtig, ich mein
hier haben wir hardcoded, theoretisch muss man gucken wie viele streams in einem video
sind, weil es könnte ja video stream sein, audio stream, untertitel stream und dann den
rausfiltern den man haben will, aber wir machen es mal so, aber nur falls audio in dem stream
ist, kann ich schlecht das audio in den video decoder pumpen, deswegen machen wir das mal
so zur sicherheit, wobei wir sind in c++, coole c++ leute machen das wahrscheinlich
so, alles klar ok, send packet, receive frame, decoding context, ret, ok, jetzt bin ich mal
gespannt, leute irgendwo irgendwo kommt noch der haken, ich glaube einfach nicht, dass
es einfach jetzt decoded, make, also von der idee her, wenn alles funktioniert, sollte
der jetzt die einzelnen bilder von dem video nehmen und decoden, aber ich glaub noch nicht
dran, dass es funktioniert, moment, das ist noch die alte version, äh, äh, äh, äh,
was, warum printet der hier denn nix, warum printet der nur size und, äh, wo ist denn
der rest, wo ist denn meine andere ausgabe, achso ich bin ja auch doof, guck mal da, ich
muss sagen ungleich, ungleich stream continue, nicht gleich, gleich stream continue, lull,
low iq am start, ich brauch mehr prime subs, der muss wieder rauf gehen, oh das sieht nicht
so gut aus, was ist hier los, input, ok ich hab gehofft es gibt jetzt irgendeinen fehler
mit dem ich was anfangen kann und es kommt bei jedem frame, shit, invalid data vent processing,
äh, ich würd sagen wir googeln mal danach, äh, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, jetzt wirds natürlich, ffmpeg now says, ok, now says, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, okurkwhere,
Wir brauchen schon AV-Packet, wir brauchen schon die Raw-Geschichten.
Oh shit.
Oh shit, wie kriegen wir das jetzt gefixt?
Ähm...
Oh, not working. Der Chat googelt mit, das mag ich.
Nee, das ist alt, das brauchen wir nicht mehr.
Das brauchen wir nicht mehr, das brauchen wir nicht mehr.
Der hat, es klappt ja auch alles. Es klappt nur nicht beim Decode.
Vielleicht soll ich das andere noch mit No-Start-Code ist found.
Oh, jetzt kommt Google Action.
No-Start-Code.
No-Start-Code ist found, aha.
Ach fuck.
Wir brauchen Raw-FFM-Pack-Zeug, nicht diesen Kommando-Zeichen-Crap.
Super-User.
Okay, also ich rate jetzt einfach mal was, ich glaube unser Decoder ist falsch konfiguriert.
Manchmal muss man diesen Decoder nämlich noch was einstellen, sowas wie Höhe und Breite und solche, solche Dinger, dass es funktioniert.
AV-Pack-It.
AV-Pack-It.
Probier nochmal, nee, vorher hat er nicht funktioniert.
Hm...
Monke-S, was ist das?
Nee, das funktioniert nicht.
Okay, was machen wir denn jetzt?
Man konnte doch irgendwie den Kram kopieren.
Man konnte doch irgendwie sagen, Codec, Copy oder irgendwie sowas, Codec, Kontext.
Ach du Scheiße, wie ging das jetzt nochmal?
Nee, das ist Doku von 2.8.
Nee, nee, nee, nee, nee, das brauchen wir nicht.
Nee, nee, es gibt, man konnte ihm sagen, nimm den Input-Stream und mach da draußen Decoder.
Create-Kontext oder sowas?
Hm...
Ich wette, wir finden die Antwort auf Stack-Overflow.
Stack-Overflow ist einfach das Beste, wir machen jetzt so lange Stack-Overflow.
Set AV-Code-Flag-Global-Header.
Nee, das wird es nicht sein.
Macht der Typ das hier?
Failed.
Ach, der encoded das. Nee, nee, nee, nee, ich will es decoden.
Ah Shit, wie war das denn nochmal?
FFmpeg hat halbwegs brauchbare Docs, aber nicht bei so Dingern.
Ja, das klingt auch ganz gut.
Ich Stack-Overflow mich jetzt einfach kurz durch.
Das meine ich, das meine ich, Parameters to Context, das meine ich.
Mir konnte nämlich vom Input-Stream die ganzen Parameter wie Breite, Höhe, Bitrate, Geschiss übernehmen für den Decoder.
Ohne, dass man die alle von Hand reinhält. Das meine ich, AV-Code-Parameters to Context, das meine ich, genau.
So, mal gucken, wie man das jetzt verwendet.
Ich glaube, GitHub Copilot versagt an der Stelle auch, aber das ist für Encoder.
Hab ich das für Encoder verwendet?
Mal schauen, okay, wir probieren das jetzt einfach mal aus.
AV-Dings, okay, was muss man dem übergeben?
Den Decoder-Context und die Codex-Parameters. Die Codex-Parameters gibt es von Stream-Codex-Parameter.
So, und wenn wir jetzt Glück haben, funktioniert es.
Obvious, Pfeif hat.
Chat, was meint ihr? Geht es oder geht es nicht?
Force-Champ.
Prager, Leute, wir brauchen mindestens 20 Prager im Chat, sonst kann es nicht funktionieren.
Ich brauche kurz mal den Prager-Spam.
Prager, Prager-Chat, Prager, Massive-Prager.
1, 2, 3, 4, 5, Prager ist erst, das wird nichts.
6, 7, 8, 9, 10, Prager ist 11.
Na, nur 11, 12, 13, 14, 15, 16, 17, 18, 19, 20.
Na, nur 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, okay, gut, wir haben genug geprayt.
Gucken wir mal, ob es funktioniert.
Wir sind vom Praying in das Force-Champ übergegangen.
Okay, was erwarte ich denn jetzt überhaupt? Ich erwarte, dass der Codex decoded.
Und, das ist eine andere Fehlermeldung.
Das ist eine andere Fehlermeldung, das ist schon mal gut, dass das eine andere Fehlermeldung ist.
Restores temporary unavailable haben wir jetzt.
Ich weiß, warum das ist. Das ist, weil ich den Frame nicht aus dem Decoder raushole.
Der erste müsste geklappt haben.
Bam, der hat decoded. Die ersten 5 Frames konnte er decoden, da war der Decoder voll.
Es hat funktioniert.
Es hat funktioniert. Exzellent, exzellent. Prager hat geholfen, Leute.
Also, ab jetzt immer Prager, wenn was nicht geht.
Okay.
Also, wir wissen jetzt ja, dass es funktioniert.
Receive Frame.
Frame.
Also, so decoded man in FFmpeg. So ist das gedacht.
Du schiebst das Komprimierte rein in den Decoder und bekommst vom Decoder, das ist der Decoder, und bekommst vom Decoder das Unkomprimierte raus.
So, so funktioniert das.
So, jetzt holen wir das mal ab und gucken, wir gucken jetzt einfach, ob es durchläuft ohne Fehler.
Ich meine, zwischendurch kann es vielleicht mal ein paar Fehler schmeißen, aber im Großen und Ganzen sollte es laufen.
Out.
Das geht einfach, Leute. Es geht ohne Probleme.
Geschmeidig decoded das durch.
Wir können jetzt auch gucken, ob das funktioniert mit dem Decoden.
Wir lassen den Error Code, der juckt mich jetzt nicht.
Package Size juckt mich jetzt auch nicht.
Was viel interessanter ist, ist, doch wir vergleichen jetzt mal was.
Leute, wir vergleichen jetzt die Size decoded und encoded.
Daran können wir ganz klar erkennen, ob es, also zweimal Size hintereinander, ob es Frame Size.
Ach so, das ist die Package Size, ja, die müsste ja exakt gleich sein.
Wie kriege ich denn überhaupt die Size von einem Frame raus?
Brauchst du nicht noch AV Packet Free, doch, das müsste ich hier unten eigentlich machen und Frame Free.
So.
Ich bin mir nicht ganz sicher, ob der das dann, ne, das passt schon, ne, das passt.
Das reicht einmal am Ende.
Was willst du hier sehen? Ganz schlimme Sachen, Leute.
Twinko, ganz schlimme Sachen.
C++, FFmpeg und das im Browser.
Aber bis jetzt, muss ich sagen, erstaunlicherweise funktioniert es bis jetzt.
Guck mal, wir können ein Video decoden im Browser.
Ein H264 Video decoden im Browser über FFmpeg, also FFmpeg in WebAssembly übersetzt und dann ein Video decoden im Browser.
Das ist schon Five Head Shit.
Wozu braucht man das denn? Zum Beispiel, wenn du in deinem Browser Sachen anzeigen willst, die dein Browser nicht abspielen kannst.
Oder wenn du jetzt beispielsweise irgendeinen GIF Renderer machen willst, der High Quality GIFs kreiert oder so.
Oder Audio Effekte oder so. Ich könnte mir tatsächlich ein paar Anwendungsgebiete vorstellen.
Warum ich das machen will, ist nicht, weil es wirklich irgendwie ein super krasses neues Startup oder so gibt.
Ich habe mir überlegt, ob man nicht damit alte SD-Fernsehaufnahmen oder Videos abspielen könnte.
Ist das schnell? Nee.
Also im Vergleich zu normalem Video abspielen im Browser, was der Browser unterstützt, ist es sicherlich nicht schnell.
Aber ich vermute, es ist für SD-Videos schnell genug.
Das müssen wir jetzt gleich ausprobieren.
Ja, das ist richtig. Nee, es ist nicht. Alles gut. C++.
So, also wir sollten jetzt die Size angezeigt bekommen, unterschiedlich.
Wobei, es kann sein, dass es nicht funktioniert, weil das die Packet Size ist und hier oben auch die Packet Size.
Ja doch, guck mal. Guck mal Leute, es klappt.
Komprimiert, komprimiert ist das Bild. 642 Kilobyte. Ich habe keine Ahnung.
Und dekomprimiert ist es 2,4. Nee.
242 Byte zu 2,4 Kilobyte? Nee, so. Ja, ach was auch immer.
Aber das funktioniert. Das ist äußerst nice, dass das klappt.
Kannst du das nicht im Voraus transkoden? Doch, das kann man auch machen. Das muss man aber serverseitig machen.
Es geht ja um was kleinseitiges. Und um zu gucken, wie es funktioniert.
Um zu gucken, wie es funktioniert ist eigentlich die Hauptsache.
Also wir decoden ein Video. So, wie geht es jetzt weiter?
Wie kommt man jetzt an die Videodaten ran eigentlich?
Also, Size ist ja schön und gut. Aber Frame, Data gibt es, das kenne ich.
Aber Data ist quasi nur ein... Moment, Moment, was sehe ich hier?
Ist das jetzt ein Pointer auf Arrays oder ist das ein Pointer auf ein Array?
Also ist das ein Pointer auf ein Pointer oder ist das ein...
Also ist das ein Array mit 8x Pointer drinnen oder ist das ein Pointer...
Oder ist das ein Pointer, also ist das ein Array? Das bin ich jetzt unschlüssig.
Wie bekomme ich Pointer zum Array? Aber warum steht da 8 dahinter?
Warum steht da 8 dahinter? 8 Elemente, aber das ergibt keinen Sinn.
Wartet mal. Auto keqw, guckt mal. Das ist ein Pointer.
Das ist ein Array mit Pointer auf weitere Arrays. Guckt.
Das ist ein Array mit 8 Pointer zu weiteren Byte Arrays.
Also sind 8 Byte Arrays quasi. Ach du Scheiße man.
Was soll ich denn damit jetzt machen? Wie kriege ich denn da die Größe raus?
Okay, AV Frame to Size. Was ist die Size von einem AV Frame?
Determining Size. Das funktioniert auch auf Mobile Browsern?
Wahrscheinlich schon, ja. How to get raw frame data? Genau das will ich haben.
AV Picture. AV Picture soll man nicht mal verwenden.
Da kann ich mich dran erinnern, da ist was dran gewesen.
To Char Array. Buffer Calculation. AV Image Get Buffer Size. Das klingt doch gut.
Das will ich haben. AV Image Get Buffer. Geil.
Und was muss ich include dafür? Image Utils. Ich include jetzt einfach Image Utils.
Image Utils und gutes. Image Utils. Include. Image. Lip Image. Lip Utils.
AV Utils. Image Utils. Alles klar. Das muss ich sagen. FFmpeg hat die Dinger.
Wenigstens noch funktioniert das auch in Safari. Ja ich glaube das funktioniert sogar in Safari.
Wobei das natürlich nicht gegeben ist. Safari ist der neue Internet Explorer.
Also was muss man da jetzt rein checken? Pixel Format. Okay. Frame Format haben wir.
Breite ist Frame Breite. Nächste ist Frame Höhe. Int Align. Was soll das sein?
Line Size Alignment. Return Size and Bytes.
Of the amount of data required to store an image with.
Was will das von mir?
Multi-Threaded geht nicht in Safari.
Es war klar das irgendwas nicht in Safari geht davon. Das habe ich nicht anders erwartet ehrlich gesagt.
Safari geht immer irgendwas net. What is Line Size Alignment Meaning?
Ja. Aha. Wie macht der das hier? Eins. Ne eins ist es wahrscheinlich net.
32 klingt doch erstmal gut. Leute ich habe keine Ahnung warum was da Aligned wird.
Wahrscheinlich die Speicher Adressen wo es anfängt oder irgendwas. Keine Ahnung.
So und jetzt kommt C++ Shit. Wir müssen das casten dass das funktioniert.
Gut. Klar gibt es Safari noch was meistens was auf IOS und Mac OS verwendet wird für einen Browser.
Image oder keine Ahnung. Image Size.
Okay. Printen wir mal. Image Size.
Das ist wie groß der Buffer also wie viele Daten der Decoded Frame hat.
Das brauche ich ja im Endeffekt dass ich weiß wie weit ich das Array lesen muss.
Das ist natürlich blöd dass es so wissenschaftlich eine Wissenschaft für sich ist.
So hat funktioniert. Nice. Zack. Out. Size.
Und das ist jetzt wahrscheinlich Bytes. Also 345 Kilobyte.
345 Kilobyte pro Frame. Decoded. Naja das ist Raw RGB.
Raw RGB. Nee nicht RGB. Uff 420 oder so. Das klingt doch realistisch oder?
So und jetzt ist natürlich die Frage wir haben jetzt ja noch einiges vor uns.
Jetzt ist die nächste Frage. Wie bekomme ich die Image Daten zu JavaScript rüber?
Okay wahrscheinlich muss ich mir die Image Daten erstmal in den eigenen Buffer kopieren.
Weil ich kann mir nicht vorstellen dass ich Frame Data irgendwie zu JavaScript zurück kriege.
Pointer to Picture Channels. Moment ein was? Ein Pointer to Picture Channel Planes.
Also ich glaube nicht dass ich diese Daten so direkt nach JavaScript zurück bekomme.
Du kannst einfach die Uint8 Arrays. Aber ich hab doch gar keine Größeninformationen.
Ich hab doch nur die Gesamtgröße. Du machst was mit Go.
Ich finde die Technik auch wahnsinnig spannend. Deswegen dachte ich mir ich muss mich da mal ein bisschen mit beschäftigen.
Also wir machen das jetzt so. AV Image Buffer. Wir kopieren uns das jetzt in den eigenen Buffer rein.
Also irgendwie Image Data. Nee Moment das funktioniert bestimmt anders.
Das funktioniert bestimmt anders. Uint8 Destination. Also ich brauche den Buffer.
Buffer gleich. So was da. Jetzt wird es wahnsinnig safe.
Image Size. So. Und in was brauchen wir den Buffer jetzt? Void klar.
Wenn schon dann richtig C++. Void Sternchen. Alles klar. Also wir brauchen das in Uint8.
Buffer. Buffer Size. Nee Image Size. Vielleicht soll ich es Buffer Size nennen. Dann blick ich mehr durch was es ist.
Ja ist klar. Falls jetzt kommt der nächste um die Ecke und sagt uns. Übrigens du verwendest nicht Linux. Du verwendest GNU Linux.
Linux. Allow me to interject for a moment. Moment was mache ich denn da? Nee das brauche ich nicht.
Moment. Ah ich bin verwirrt. Image Size. Buffer Size. Nur Buffer Size da rein. So. Und jetzt hier Buffer Size.
Das funktioniert. Source Data. Ok das ist jetzt wahrscheinlich Frame Data. Und das hier ist Frame.
Das gibt es zum Glück alle. Line Size. Pixel Format. Hatten wir hier oben schon mal.
Frame Breite. 30 Milliarden Parameter. High. Alignment. Ja 32. Ich weiß nicht was es macht aber 32 ist Alignment.
Oh der Buffer ist falsch. Was? Ah ich caste das zu einem End. Ich muss es zu einem Endpointer casten. Alles klar.
Oh. Grip. Ok. Jetzt ging es auf einmal. War der Meinung geht nicht aber jetzt geht es wieder.
Was ist denn nur mit casten? Ja wo ist denn der casten? Ehe ich nichts mehr gehört vom casten.
So Buffer Size. Gut. So wie kriegen wir den Kram jetzt zurück? Wie kriegen wir den Krempel?
Also ich lasse es mal kurz laufen und gucken ob es Crashed. Gucken wir mal ob es Crashed. Ach ja das ist ein Ccast.
Ccast stimmt nicht. Crashed nicht. Wie ist denn die hässliche Variante für C++? Irgendwie Standard Cast? Nee.
Dynamic Cast. Reinterpret Cast. Ich weiß noch nicht mal wie das funktioniert weil das so wirr ist alles in C++. Wie würde ich das hier in C++ schreiben?
Static Cast. Also Static Cast. Nee Static Cast. Ach so. Also die C++ Variante wäre Static Cast uint 8 Sternchen. So? Nee.
Alter C++. Ach so natürlich. So drum herum. Ist ja so eine Funktion quasi. Ok jetzt mal ernsthaft. Warum sollte ich das verwenden?
Das hat bestimmt irgendwelche theoretischen Five Head Vorteile weil es Compile Time Checks macht oder sonst was. Aber das sieht ja so um Längen hässlicher aus als einfachen stinknormaler Cast.
Nee das machen wir nicht. Das ist mir so doch deutlich lieber. Also es ist nicht gecrashed. Ok wie kriege ich diesen Crampel zurück nach JavaScript?
Und noch viel interessanter. Wie mache ich denn ein Sleep? Weil ich muss ein Sleep machen damit ich auf die Frames warten kann. C++ Sleep. Sleep for Milliseconds. Sleep Function. Hau zu Sleep.
Was für ein Sleep? Alter ich hasse C++. Das ist so eine Drecks Sprache Alter. Ich mein warum kann man nicht einfach machen Sleep Klammer auf 1000 Klammer zu.
Warum brauche ich zwei Header? Ok das lasse ich mir noch gefallen. Aber was ist das für eine Ausgeburt der Hölle? Guckt euch das an.
Ich nehme einfach C Functions. Wobei Moment. Das ist ja Wasm. Da kann man bestimmt nicht so einfach Sleepen. Da gibt es bestimmt was hierfür.
Asyncify. Geil. Geht da was von Sleep? Sleeping. M Scripten Sleep. Gibt es. Alles klar. Millisecund. Eine ordentliche Funktion wo man was mit anfangen kann.
Wunderbar. Lassen wir mal weg. Ok es ist immer noch die Frage wie kriege ich diesen Campel in Browser? Was unser C++ Prof im ersten Semester hat zwei verschachtelte Vorschleifen an Sleep benutzt.
Ja gut wenn man möchte dass man viel Akkuleistung oder viel Akku zieht weil man CPU verbraucht. Vor allem wie Sleepst du dann gleich lang auf unterschiedlich schnellen Rechner?
Brauchst du einen Untermust? Dann musst du erstmal einen Mini Benchmark machen dass du weißt wie lange du sleepen musst auf den unterschiedlichen Rechner dass es gleich lang sleept.
Der Typ war pepega. Ja glaube ich auch wenn du zwei Vorschleifen für einen sleepen hast.
Können wir zurück zu Rust? Ich würde viel lieber Rust machen als C++ aber geht ja nicht. So wie kriege ich den Kram Javascript?
Also M scripten call callback call Javascript. Interacting with code. M scripten run script. Aha alert hi das bringt mir nichts.
Ich muss in das return. Nee das return bringt mir nichts. Ich brauche die einzelnen Frames so wie sie aus dem Decoder kommen. Ich kann nicht auf das return warten.
Ich brauche hier einen callback. Also hier habe ich die stream done. Und hier brauche ich einen callback nach Javascript der dann im Javascript das Bild rendert irgendwo hier hin.
Also kann man da irgendwie Parameter übergeben oder so?
Ein Anwender Object da habe ich glaube ich keinen Zugriff drauf. Das muss ich alles über Javascript machen. EMJS. Kann man da Parameter übergeben?
Was für Dinger. Ok das scheint gar nicht so einfach zu sein was zurück an Javascript zu schicken. Guck mal hier. Guck mal hier übergeben die Argumente. Alles klar.
Guck mal das ist so abgedreht das mein Formatter kommt damit nicht klar. Guck mal der ist überfordert damit das kriegt er nicht hin.
Ok also. I received. Was passiert denn jetzt? Ok ok ok. Machen wir es so. Buffer. Buffer. Und buffer size. So.
Dann gehen wir hier in den Worker rein. Und sagen Function. Wir callen jetzt einfach mal. Call me. So es gibt ein Pointer gibt es. Und es gibt eine Size.
Ok. Lock. Pointer. Und lock. Size. Ok ob das jetzt funktioniert da bin ich wirklich mal gespannt. So. Call me.
Ne ne Moment. Dollar 0 Dollar 1. Ok das ist ja absolute Pfeif her der Sonntags hier. So jetzt sollte ich eigentlich hier auf die. Jetzt sollte ich den Pointer bekommen.
Und ich sollte die Size von dem Array. Ich sollte den Pointer zum Array und ich sollte den Size zum Array. Wie ich dann natürlich den Pointer wieder in die Daten umwandle in Javascript.
Das steht noch auf einem ganz anderen Platt. Jetzt hoffen wir erstmal das der Kram überhaupt kompiliert.
Leute das sieht erstaunlich gut aus. Pointer ändert sich immer. Und die Size ist für jeden Frame ungefähr gleich. Das sieht erstaunlich gut aus muss ich sagen.
So. Und wie kriege ich jetzt den Pointer zu einem. Ok. Uint 8 Array. M. Scripten.
Uint 8 Array. M. Scripten.
Uint 8 Array. M. Scripten.
Uint 8 Array. M. Scripten.
Uint 8 Array. M. Scripten.
Pointer. Size. Sowas da. Ok. Alter ich bin Pfeifett. Leute bin ich Pfeifett. Ich habe meine Variablen exakt so benannt wie aus diesem Beispiel.
Way too dank. Gut ich mein Pointer und Size so zu nennen wie Pointer und Size ist jetzt glaube ich auch nicht so magic.
So. Buffer. So. Lock. Buffer. Hau ma ma ob das funktioniert. Wahrscheinlich. Wobei Crashen kanns Leute wir sind im JavaScript Land an dieser Stelle da kann man nicht mehr Crashen.
Da kann man komische Fehler schmeißen aber man kann nicht mehr richtig Crashen. Wobei kann man mit WebAssembly im Browser auch nicht mehr. Out.
So.
Moment.
Mal kurz rückgängig machen. Vielleicht ist der erste. Vielleicht ist der erste Callback. Vielleicht geht der nicht. Vielleicht geht der nicht. Also dass ich quasi noch checken muss wenn Size kleiner als Out das funst.
Die ersten zwei Frames sind im Arsch. Die gehen einfach nicht. Aber das müsste doch eigentlich mein Decoder auch checken. Sekunde. Das müsste mein Decoder mitbekommen eigentlich.
Kommt das mein Decoder nicht mit. Der Decoder sollte ein Fehler schmeißen und dann kann ich sagen wenn der Decoder ein Fehler schmeißt dann mach ich gar nicht erst weiter.
Hier. Resource Temporary Not Available. Okay dann machen wir es einfach so wenn der Decoder.
Ungleich Null ist. Dann machen wir auch Continue. Und machen das gar nicht weiter. So damit sollte sich dieser Fehler eigentlich erledigt haben.
So. Ups. Lock. Buffer. Jetzt sollte es eigentlich dieses Problem nicht mehr geben.
Schauen wir mal. Also ich hoffe jetzt drauf dass ich hier ein Uint8 also ein Byte Array kriege in JavaScript was ich später weiter verwenden kann. Aha. Siehste das funktioniert.
Uint8 Array. Mit ganz viel Zeug drinnen. Das sieht ja im Prinzip schon mal gar nicht so schlecht aus. So ich vermute mal wir brauchen noch etwas mehr.
Ich vermute mal wir brauchen auch noch die Frame Breite und wir brauchen auch die Frame Höhe wenn man das rendern wollen. Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript.
Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript.
Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript. Das ist das nächste nämlich wie rendert man eigentlich so ein Byte Array in JavaScript.
Guck mal proaktives googeln vom Chat. Das finde ich gut. Mit dem Unterschied das ist kein RGB. Das ist juff 420 weil das ist ein Video. Die sind meistens nicht RGB weil es schneller auf der Grafikkarte so geht oder warum auch immer ehrlich gesagt keine Ahnung.
Also Frame. So wir haben Breite Höhe. Kriegen wir noch. Wir machen jetzt mal wir machen jetzt da mal ein Object raus. So Buffer.
Size brauchen wir eigentlich nicht mehr. Und Höhe. So das müssen wir dann nämlich returnen an unser Frontend irgendwie noch. Alles klar. So also das funktioniert ja an der Stelle soweit.
Kann ich irgendwie mein Sündtags Highlight Ding. Ja ok. Jetzt das das checkt er so. So checkt das auch. So checkt das auch noch halbwegs. Aber Zeilenumbruch checkt er nicht mehr.
Zeilenumbruch ist zu 6 Head. Das kriegt er nicht hin. Wir machen das so. Das sollte reichen. Ach so ja Dollar 2 und Dollar 3. Sehr schön. Alles klar. So wie kriege ich diesen Krempel jetzt in mein Frontend. Call me.
Call me. FFmpeg Wasm weil FFmpeg Wasm für die Noobs ist. Nein also der Sinn ist davon FFmpeg Wasm rappt quasi die FFmpeg FFmpeg CLI das Ding hier im Endeffekt.
Was ich machen will ist ich will ja wirklich auf die raw Bildinformation zugreifen. Ich will ja ein richtig ein echten Decoder verwenden dort einzelne Bilder rausholen und die einzelnen Bilder dann im Browser rendern.
Ich will keinen CLI Rapper. Weil der Vorteil davon ist du kannst dann beispielsweise auch Inputs streamen. Zum Beispiel du lädst dir ein Video runter und während das runterlädt kannst du schon anfangen es zu rendern und so. Da gibt es viel mehr Möglichkeiten.
Und es gibt noch nichts. Deswegen du findest dazu nichts im Internet. Deswegen habe ich mir gedacht das müssen wir mal selbst probieren. Okay also wie kriege ich denn jetzt diesen ganzen Krempel von hier. Postmessage brauche ich jetzt.
Creating the Ur. Ah Chat das gucke ich mir gleich alles an. Ich vermute nur das es eh in die Hose geht weil das eben keine RGB Daten sind. Aber gucken wir mal weiter. Also jetzt muss ich erstmal den Kram zurück bekommen.
Postmessage und zwar posten wir jetzt unser JavaScript Objekt. Posten wir da. Alles klar. So jetzt sind wir zurück im Index HTML. OnMessage komplett unsinnig. Den ganzen Krempel brauchen wir hier nicht mehr.
Hier unten schmeißen wir auch weg. Postmessage hier. Log davon schmeißen wir auch weg. Brauchen wir alles nicht. Okay so jetzt bekommen wir das hier rein. Jetzt muss ich nochmal checken. Bekommen wir das wirklich auch hier rein. Data muss ich nochmal kompilieren. Eigentlich nicht. Ist ja nur Frontend Zeug.
So jetzt sollte ich das nämlich in meinem Main Render Loop Ding im Browser raus bekommen das ganze. Bäm. Da ist das. Guck mal Buffer haben wir am Start. Die Breite haben wir am Start und die Höhe haben wir am Start. So jetzt brauchen wir eigentlich ein Canvas. Aber wie? Creating an Ur Repress. Representing contents of a typed Array.
Und dann? Und was mache ich damit dann? Ich will es ja auf ein Canvas rendern. Das ist kein JPEG. Das ist ja kein JPEG. Das ist ähm. Bytes. Also Raw Bytes. Das ist kein encodedes. Das ist ein Video Frame die komponiert wird.
Das ist ein Video Frame decoded. Blob URL generieren. Kann das Canvas überhaupt RGB Daten direkt rendern?
Okay ich habe keine Ahnung wie das funktioniert. Oh was macht der Typ hier? I have Uint8 Array. RGB Daten auf Canvas. Der Chat ist hier der Google Meister wieder. Canvas Rendering. Put image data. Put image data.
Put image data. Image data. Ja sowas in der Richtung will ich machen. Das sieht relativ ähnlich. Das sieht ähnlich aus was ich machen will.
Image Data Spacey RGB Array Bytes Array. Ja das will ich machen. Genau das finde ich gut. Also brauche ich ein Canvas erst mal. Ein Format muss es haben. Ja es ist quasi in Bitmap wenn man es so will.
Aber warum soll ich eine Blob URL erstellen wenn ich es auch so direkt ins Canvas rendern kann? Das ist doch dann viel besser.
Das Problem ist es ist kein RGB. Es ist UF420 glaube ich zumindest. Weil es halt ein Video ist. Es ist UF420. Alter der Chat ist hier am Hyper googeln.
Wow. Das ist aber nicht Javascript. Alter was? Nee nee ich mache jetzt erst mal das. Mal gucken was passiert wenn ich das rende. Wir brauchen auf jeden Fall ein Canvas.
Also Canvas. Das Ding kriegt eine ID. Keck. Was? Ja Breite Höhe. Okay setzen wir es mal so. Breite 640 Höhe 360. So und jetzt wo sind wir hier?
Create. Ganz Commons Alter wer braucht denn diesen ganzen Crap? Hier weg. So. Commons Overrated, Outdated, Chebaded. Einfach fehlerfrei programmieren easy.
So okay. Hier ist eine Funktion. Okay zeig her.
What? Was? Eigentlich brauch ich nur die hier. Aber WebGL bringt mir doch auch nichts. WebGL braucht doch bestimmt auch RGB. Oder?
Kann Pixi JS das? Juff. Nicht Pixi. Pixi JS.
Anscheinend. Also wenn ihr irgendwie eine Ahnung habt wie man das macht. Okay aber erstmal. Ich muss den Kram überhaupt erst noch in das Canvas reinbekommen.
Also Canvas. Canvas. Canvas. Also Cacvice. Cacvice. WebGL müsste juff rendern können. Tja da müsste man nur raus bekommen. Wie? Ist doch Cacvice. Also jetzt brauchen wir das Cacvice.
Let Canvas gleich document by ID. Cacvice. Kurz mal schauen ob das funktioniert was ich da mache. Canvas da ist es. Okay. Cacvice.
Chat jetzt habe ich vergessen was ich gucken wollte. Das wollte ich machen. Das wollte ich machen hier aus dem Example.
Hier ist ein Post dazu. Chat kann das mal einer aufmachen. Sieht aus wie ein Virus Post.
Das ist quasi ein Custom Player in einem Canvas wenn man es so will. Okay. Also CTX. Und Image Data.
Das ist ein 5 fat Post über Juff. Okay.
Play with some serious WebGL image. Ja. Ja ist ja ist ist ja ja na klar alles.
Dazu kann ich nur sagen. Überhaupt gar kein Ding ich mein solange man das Copy Pasten kann soll mir das Recht sein.
Also wenn ich das einfach eins zu eins zu Copy Pasten kann ja dann dann ist okay.
Ist okay. Cringe wer das nicht so schon kann ja finde ich auch.
Chat ich habe mal eine blöde Frage. Angeblich ist Put Image Data eine Methode von Kontext 2D.
Also quasi das da Put Image Data ist es aber nicht. Das definieren die irgendwie selbst. Das verstehe ich jetzt nicht.
Ist das jetzt der API Beschreibung oder ist das oder ist das selbstgebauter Kram.
Das check ich jetzt nicht. Okay. Also wir sagen jetzt mal eine Sache.
Sollte er das nicht checken. Okay das ist Cringe weil kein Type Script ich weiß aber.
Okay. Okay. Okay. Nice. Das genau das habe ich gesucht.
Also On Message Image Data New Image. Was Image Date. Nee das gibt es das gibt es nicht. New Image. Image Data ja.
Ich kann sagen. Ja mein Autocomplete hat mich gebadet. Array Höhe Breite. Okay.
Also im Prinzip. Im Prinzip ist es quasi. Destructen wir mal.
Buffer. Size. Nee. Nee. Nee. Gebe ich Size zurück. Width. Height. Auch nochmal richtig schreiben. So. Buffer. Ja. Okay.
Um es ohne TS Type zu bekommen kann man JS Docs Comment rübersetzen. Oh Fifeheader Kram. Massive. Extremer Six Kopf. Ja. Und jetzt.
Eieiei. Guckt euch das mal an. Type Annotations mit. Mit Zeug hier. Aber Put Image Data gibt es angeblich gar nicht. Warum gibt es Put Image Data nicht. Put Image Data ist gebadet.
Ach so. Ich muss Canvas Rendering Content. Ah. Put Image Data. Alles klar. Guck mal hier. Hier lernt man noch was.
Also. Put Image Data. Null. Null ist wahrscheinlich wo er das Drawen soll. Leute wenn das. Wenn das geht. Und selbst. Also ohne Scheiß. Das kann nicht funktionieren weil es ist kein RGB. Da kommt das jetzt mit Grünstich raus oder so.
Aber wenn das jetzt ein Bild rendert was nach einem Bild aussieht. Dann flippe ich aus. Wenn das wirklich so. In Anführung des Easy jetzt funktioniert. Auch wenn es nicht easy war. Aber ohne größere Probleme funktioniert dann. Dann beiß ich mir quasi sprichwörtlich in Arsch.
Was habe ich? Was habe ich falsch? Data ist not defined. Ok. Ach hier. Was? Uncored. Worker on message.
The provided value is not of type image data settings.
The provided value is not of type image data settings. Moment.
Kommt da jetzt überhaupt ein Buffer raus?
Kommt ein Buffer raus.
Ok. Wie macht man das? Da fehlt doch bestimmt noch was. Ok. Also SWNumber ist ja der Meinung. Ich habe ein Uint. Moment ich brauche ein Uint8 clamped Array. Ein was für ein Ding? Bitte schön. Ein was? Was ist denn der Unterschied zu meinem Uint8 Array?
Ok. SWNumber. Ok. Width, Height, Settings. Ok. Was brauche ich ein Uint8 clamped Array? Obviously. Kann man das wenigstens constructen aus dem alten?
Kann ich sowas hier sagen? Wenigstens. Geht das? Keine Ahnung. Keck weh heißt es jetzt.
Das ist aber bestimmt ineffizient. Das sollte ich gleich zurückliefern hier. Eigentlich könnte ich doch das gleich hier machen oder?
Sehe ich das richtig? Das müsste doch eigentlich auch funktionieren so. Da kann ich mir das nämlich hier sparen.
Ok. Buffer raus hier. Es gibt keine Fehler. Es gibt aber auch kein Bild.
Muss man noch CTX Draw oder sowas machen? Draw? Gibt es irgendwie Draw Image oder sowas?
Leute ich check diese Hilfeseite nicht. Da steht noch Keck weh. Oh. Fuck.
Fail to construct image data. The provided value must not be shared at worker. Was soll mir das sagen?
Provided value must not be shared. Was?
Ok. U8 int clamped. Wie heißt dieser Kempel überhaupt? Wie heißt das? U int 8 clamped Array habe ich noch nie gehört.
Must not be shared. Ja. Must not be shared.
If what you have are raw, then all you need to create from U int 16 Array. Ja was denn du? Aha. Ok. Man muss diesen Müll irgendwie erstellen. Aber man muss das hier drinnen direkt newer.
Ok. Ok. Ok. Dann machen wir das jetzt so. Also das ist ein U int 8 Array. Kein clamped Array. Weil. Weil. So. Buffer.
Ja was script shit. Fuck. Was? The input data length is not equal to 4 x width x height.
Das kann schon sein, weil das ein anderes Format ist. Der will rgba vermutlich. Ja. Und ich hab. Ich hab weder. Ich hab weder.
Warte mal. Ok. Wir googeln mal. Juf. Canvas. JS class to draw. Juf image frame buffers to. Das klingt doch schon mal gut. Probier mal buffer. Buffer? Nee. Oder? Nee.
Nee. Nein. Was not be shared. Nee. Nee. Ist schon richtig so.
Lock. Guck mal hier. Lock. Buffer. Buffer. Ja. Das hat gar keine Buffer Methode. Das ist ein Array. Das hat keine Buffer Methode.
Das gibt's nicht. So. Also. Ok. JS class to draw. Ok. Stackoverflow. Wir fragen jetzt Stackoverflow.
How to draw Juf image to HTML Canvas. I found this gist. Aha. Function. Juf to Canvas. Put image data. Das ist gut. Das ist genau das was ich brauche.
Es ist halt dumm dass man das umwandeln muss. Das ist sehr rechenintensiv denke ich mal. Ok. Also.
Ach du meinst ich muss sowas hier machen. Ok. Das probieren wir jetzt noch einmal. Nope. Nope. Nope. Das interessiert ihr nicht.
Das interessiert ihr nicht. JavaScript Zeug. Also wir machen jetzt mal das da oben drüber. Wir machen das.
Wir machen das. Wie macht denn der Typ das hier oben drüber. Guck mal. Create image data. Output data. Output data. Wo kommt denn Output data überhaupt her. Ach da.
Output. Create image data. Ah. Das ist quasi ein leeres mit der Größe. Und dann. Und dann schreibt er das da rein.
Doch. Doch. Ich kann das mit FFmpeg konvertieren. Aber das ist das ist nicht nicht so schön zu machen in FFmpeg. Ja. Ja. Ja. Das geht.
Ok. Ich will erstmal überhaupt was rendern. Ganz ehrlich. Der Rest interessiert mich jetzt erstmal wenig. Ich will einfach dass ich irgendwas tut auf dem Bildschirm. Weil das wäre mega geil wenn das einfach irgendwas rendert.
You've to canvas. Wie ruft man das jetzt auf. So. Buffer. Ja wahrscheinlich. Ok. Wits. Heiz. Und jetzt. Canvas. Canvas heißt glaube ich bei mir einfach Canvas.
Wir machen nochmal was anderes. So mal um zu gucken ob es prinzipiell funktioniert überhaupt mein Canvas. Nicht dass es was rendert und ich sehe. Gar nichts.
Ctx. Fill. Fill. Reckt. Null. Null. Keine Ahnung. 200 200. Wie stellt man hier die Farbe ein. Ok. Ist ok. Es funktioniert.
Musst du nicht warten bis alles da ist. Nee ich will ja hier das einzelne Bild rendern. Also ich bekomme aus dem Decoder immer ein Frame. Und den will ich direkt rendern.
Es geht. Es rendert was Leute. Es kackt zwar ab aber es funktioniert. Es rendert mal ein Video. Ich mein viel zu schnell. Viel zu schnell. Holy fuck alter. Das tut mir die Hand fehl.
Ja ich habe kein sleep drin. Das ist fünf. 5.000.000.000.000.500.000 fps. Guckt euch das an.
Es braucht aber einfach 70 prozent CPU Last. Ok. Wir müssen auch ein sleep reinhauen Leute. Aber. Aber ohne Scheiß.
Das Hier ist Keine Sonderlich
Also das Hier ist Keine Sonderlich
Efficient Methode das Zu Rändern Glaube Ich
Gibt es nicht die möglichkeit IrGendwie Juff mit Webgl das hatten wir doch das hatten wir hier diesen Komischen
Wo war dieser leute wo war dieser 5 header wo war dieser 5 header blog post
Hatte noch Jemand Irgendjemand aus so ein mega 5 header blog post gepostet Hier das Da das Machen wir Jetzt nicht Aber
Oder Haben Die was fertig ist am ende was man Einfach Copy Pasten Kann Hier Einfach Copy Pasten easy Copy Pasten
Complete Code Jawoll
Massive Copy Past
Massive Copy Past Einfach von dem typ Ich habe Keine Ahnung was der Typ Da Macht Aber
Geht nicht FPS angabe statt sleep Nein Du musst den FFm pack Selbst Gucken wie lange hat die loop Gedauert und Dann Musst Du Sleepen
Aber wir Machen Es Mal Ganz Wir Machen Es Mal Pima Daumen Jetzt
Video ist mit 30 FPS
1 Durch 30 also 33 Millisekunden Sleepen MüsSen wir Jetzt
33 Millisekunden Sleepen
Ich meine Eigentlich ist es dumm 33 Millisekunden zu sleepen weil wir MüsSen Eigentlich
Einen frame Rendern
Dann Den Nächsten Dann Sleepen und Im Hintergrund schon Den Nächsten frame Rendern
Aber
Nee
Sleepen Mal nur 20 Millisekunden okay geht nicht
Warum Ah doch geht?
Wobei Nä Das ist Dann bringt Er nur am Ersten frame was
Okay also sleep make
Okay
Funktioniert
So Mal Gucken Jetzt Sollte Es Ja Nicht mehr
So mal gucken jetzt Sollte Es Ja Nicht mehr
So mal gucken jetzt Sollte Es Ja Nicht mehr
So mal gucken jetzt Sollte Es Ja Nicht mehr
So mal gucken Jetzt Sollte Es Ja Nicht mehr
Oh crash was an court please compile your program is a sync support
Wie macht man das m scripten a sync support a
Syncify
Ja Ja Ja Ja Minus es a Syncify okay das Muss ins make file
Wo ist unser make file?
Chat Irgendjemand Planen wo das hin Muss Einfach Hier rein
Einfach Hier rein so
anscheinend
Ich
Dachte auch nicht dass wir das bis Hierhin Schaffen ganz Ehrlich das Funktioniert
Ausgesprochen gut das Funktioniert Ausgesprochen gut also
Wisst ihr was das geile ist es gibt nichts im internet wo das Jemand Mal gemacht hat das ist wirklich hier pleading edge shit
Out Hey das sieht Jetzt Ziemlich Ziemlich legit aus oder
Mlg legit
So wir Machen Mal Ein, bisschen ein Längeres video und Gucken Ob es uns Dann um die Ohren Fliegt
20 prozent cpu Ja Aber 640 x 360
Wir Machen Mal wir Machen Mal Anderes video youtube
Wehendungscase wir Laden das ding Mal in 720p Runter
Just
Factory
Video Euler ja sehr gut
square
Statistisch
Mal gucken, ob es das überhaupt abspielen kann oder ob das YouTube-Encoding zu Pepega
ist.
Ob der das überhaupt da reinladen kann in den Browser?
Okay.
So funktioniert.
Ah, da ruckelt es jetzt aber schon ein bisschen.
Das lieb ich jetzt zu lange.
Aber mal ohne Scheiß, das ist schon in Ordnung.
Ach Moment, da fehlt ja die Hälfte vom Bild.
Ja, vielleicht sollte man das hier machen.
Canvas Width Height.
Ah, viel besser.
Viel besser.
Excellent.
Exquisite 5-Header-Gramm.
Hey, guck mal.
Jetzt sind wir schon mal 50% CPU-Last.
Wo mache ich denn hier eigentlich das?
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Ah, hier.
Das muss ich machen AV3 Waffe wahrscheinlich
blutet lull komm wir lassen ihn mal so schnell rendern wie geht
kann ich dem kann ich den parameter übergeben ok string in sleep ms ms
milli milliseconds da muss ich nicht immer neu kompilieren welche sleep anpassen will
so werker im moment ich kann mich schon immer richtig konzentrieren soll ich
das auf auf shit hab pushen dann run ich kann es kann ich auf shit hab pushen weil
ich kein weil ich nicht eingeloggt bin hier ich habe meinen key und so aber ich
habe ich bin ich eingeloggt auf dem rechner ok zwanzig sekunden
warum liebst du in deinem c plus plus er hält beim rennen an der frames
es gibt ihn ja was kriegt kein sleep
ich könnte promise machen mit set timeout auf den ich warte oder sowas ich
könnte mir selbst ins lieb basteln
nee sowas gibt es nicht oder in den ne das ist ja was kreppter ist so ok zack alles
ist falsche so ich sollte ich sollte keine memory leaks
mehr haben zumindest jetzt was war das macht er dafür dinger
ich habe kein memory leak mehr aber es kackt ziemlich ab
ich weiß woran es liegt leute ich weiß woran es liegt ich mache free ich mache
das free form sleep also das hier ist ja bestimmt asynchron
der callback und ich friere den buffer ich friere wahrscheinlich den buffer
während ich im java script noch am rendern bin gehe ich jetzt einfach mal
davon aus da so ein kleines sleep ist nicht verkehrt
nee daran liegt es nicht vielleicht dauert das rendern zu lang
das ist das hat 100 probas mit dem free zu tun weil wenn ich das free weg mache
guck mal wenn ich das free weg mache da gibt es kein problem
ja das sind die battlefield 2042 effekte genau die haben einfach renten die haben
einfach verbackten renderer
du hast recht nenas das ist eigentlich viel sinnvoller
nee kann ich nicht die frames sind unterschiedlich groß
oder sind sie theoretisch schon
wobei nee die frames sind immer gleich groß die frames sind immer gleich
du hast recht ich kann es am anfang anlegen
guck kaum ist das free weg habe ich jetzt habe ich aber memory leaks
jetzt habe ich memory leaks guck jetzt habe ich memory leaks
ist das free was ich hier ja ja das ist free das ist free was das für eine
bescheuerte anzeige
null von meine ram auslastung geht umgedreht hack wait
aber du hast recht ja wir machen das so das ist korrekt das ist sehr gute sehr gute
idee
jav3 buffer und die buffersize
die buffersize legen wir also es legen wir einmalig an
und zwar so wir haben jetzt ja hier keinen zugriff auf frame
so was das verwirrt mich sonst wir haben keinen zugriff auf frame aber wir haben zugriff
auf den context da muss ich aber jetzt erst noch sagen
av stream info oder sowas sekunde das haben wir doch hier irgendwo
find stream info find stream info
format ctx null pointer ja sonst lädt er das ja irgendwie nicht
warum das 13 gigabyte ram verbraucht ist der browser
komm wenn ich den browser schließe
ja ich mein ok der gibt erst wieder frei wenn angefordert wird aber das liegt das liegt
nur nur am browser und meinen komischen memory leaks hier
so also weiter im text
so stream format gibt sich es gibt ctx format witz ach nee
stream stream
wie kriege ich jetzt die breite raus
das geht das kriegt man raus das kriegt man raus bevor man
das kriegt man raus bevor man den ersten frame decoded
ja ich mein das ist format stream
fmt fmt fmt format input format
nee pixel
das kriege ich schon raus bevor stream codec parameter vielleicht
stream codec
ach ja ja ok das ist gut minus
codec parameter
x fmt format
nee das ist was anderes das ist ein anderes format
ach du scheiße man pixel format
ok das haben wir
oder kann ich codec
aber wie kriege ich denn jetzt die höhe und die breite raus
ach so ok alles gut
breite höhe
so und jetzt legen wir das nämlich nur einmal an das ist viel besser der chat ist wieder
richtig feifett gewesen jetzt jetzt haben wir keine memory leaks
es geht schneller und keine pixel fehler die frage ist nur ob es funktioniert
six headchat wieder
aha und es ist auch gleich in der ecke schneller
das rockerl am anfang ist wohl normal weil da irgendwelche frames verbackt sind
ich meine ganz ehrlich das läuft echt brauchbar gel
das läuft wirklich brauchbar machen wir mal
ok ich muss nicht neu kompilieren hier wir machen mal wir machen mal kein wir
machen mal kein sleep es wird es wird nicht gesleept
es gibt kein sleep
ok jetzt rennt er natürlich ein bisschen schneller
er rennt jetzt schneller als es fps hat dementsprechend skippt er halt
oder sieht so aus als würde das skippen so
einfach refreshen geht nicht weil er nicht im sleep hängt da kackt er ab jetzt dabei
mal zumindest zumindest mal kurz eine millisekunde sleepen sollte ich
die sekunde sleepen ja also
ja man kann das noch beliebig man kann das noch beliebig optimieren ja
ffmpeg performance zum cli wüsste ich jetzt habe ich keine gute idee wie man das
vergleichen könnte
da müsste ich mir was überlegen machen wir mal to do benchmark vergleich
irgendwie sowas
ja das geht das hat ffmpeg drinne stehen das muss man sich ausrechnen
das ist das geht ja ja das ist aber ein bisschen painstamp du musst gucken wie viel die zeit
ist und dann musst du es abziehen vom schleifen durchlauf und dann musst du es ausrechnen
aus den frames
ich glaube eher das problem ist dass bei zum beispiel ok benennen wir das mal kurz um
das hier ist 720p mp4 und jetzt machen wir noch youtube download jetzt jetzt jetzt machen
wir noch
den comments
jetzt machen wir noch hier die fullad version
was ist denn hier der unterschied leute av01 und avc das ist irgendein anderer codec oder
avc brauchen wir
und das ist oh leute jetzt wirds heftig das ist nicht nur 1080p sondern auch 60 fps jetzt
ok das kriegen wir nicht flüssig hin
das kriegen wir höchstwahrscheinlich nicht flüssig hin
sehe ich nicht von aus dass das funktioniert
vielleicht wenn wir das rendern schneller hinbekommen weil das rendern ist schon ziemlich
langsam
guck mal das spielt das noch nicht mal ab
das spielt das nicht ab weil das der falsche codec ist weil youtube wieder richtig hardcore
ppega ist mit ihren codecs das ist vp9 ich hab doch vp nicht vp9 runtergeladen oder
ich hab oh ich hab vp9 runtergeladen ich hab mich verguckt
ja kein wunder vp9 ist nicht rein kompiliert 299 brauche ich
ja das kann man alles schon noch optimieren ja das das synchronisieren und so
es gibt also ein paar optimierungsdinger ja zum beispiel dass wir jeden dass wir den dass
wir jeden frame vom internen buffer weil auch eine sache die ich auch nicht schön finde
ist guck mal wir kopieren uns die image daten von jedem frame aus dem internen buffer in
diesen copy buffer
das bräuchten wir wahrscheinlich gar nicht man kriegt es bestimmt auch so nach ins javascript
das muss man halt basteln ja also muss man hier
so jetzt laden wir das mal gucken was sache ist
das müssen wir umbelennen das müssen wir umbelennen das ist 1080p 60 60 das andere
ist 720p 720p 720 30
so mal gucken ob es das halbweg flüssig hinkriegt aber ich glaube nicht
das ist nicht aber ich meine das ist jetzt nicht es fehlt aber nicht so viel muss man
sagen ja
das ist so halbe speed halbe speed würde ich sagen 70 prozent speed vielleicht
aber es ist ok
das das lastet ihn aus da ist schluss wir können mal was ausprobieren mal gucken ob
er
ne ne ich hab den sleep auf ähm auf einer millisecunde
ist das bottleneck jetzt das js zum rendern oder das c++ zum decoden ehrlich gesagt ich
glaube das c++ zum decoden
das könnte man ausprobieren indem man das rendern einfach weglässt
ja das mit der gpu das müsste man ausprobieren das also ich vermute mal das rendern im c++
ist das problem das könnte man ausprobieren
wisst ihr wie man das ausprobieren könnte ich habe eine idee
wir machen uns jetzt in 20 20 sec 1080 60 und dann stoppen wir einfach die zeit wie
lange das durchläuft ohne zu rendern mp4
auf macht 20 sekunden
der ist ganz schön ich meine der decoded und encoded jetzt auch gleich
also was wir machen können ist das hin und her schicken zwischen webworker und so ist
auch doof gibt es nicht irgendein globales array wo ich was reinschreiben könnte dieses
post message ist auch nicht so geil
ne ne copy stimmt ich hätte copy machen können du hast recht ich brauche ja nicht reencoden
also was wir jetzt nämlich machen können ist wir lassen das rendern weg
guck mal wir lassen das rendern weg wir machen das hier
und wir stoppen wir stoppen die zeit ja also wir sagen hier beim post message also ungefähr
über den daumen gepeilt wir sagen time übrigens richtig nice dass so was mittlerweile eingebaut
ist in javascript console time und dann sagen wir
console time log und dann gucken wir was die letzte zeit ist die er gebraucht hat bei diesem
20 sekunden ding
ja bessere battlefee bessere performance als battlefee ist ja keine kunst
20 sekunden lassen wir jetzt durchlaufen und wenn das länger braucht als 20 sekunden
dann wissen wir dass es laggt
es laggt
der decoder teil ist nicht schnell genug
guck der decoder das liegt nicht am rendern vom video der decoder teil ist nicht schnell
genug guck der braucht 36 sekunden um das ding zu
rendern also 1080p 60 fps kannst du vergessen das ist aber auch nicht das was ich damit
machen will wir reden ja von sd videos mit wie viel fps hat pal 50
das sollte der hinkriegen
und und und mpeg mpeg 2 video ist wahrscheinlich auch nicht so ressourcenintensiv wie h264
ja wie gesagt da lässt sich eines noch einiges ob hier also der ist der ist nicht so schnell
also es sollte wir können es ja mal testen wenn ich das jetzt
ist das überhaupt 60 fps hier ff probe 60 ja wenn ich das jetzt hier um wir können
doch mal 30 fps machen
fps 30 ging das so nee
oh je das war ich aus dem kopf nicht
ffmpeg fps minus r30
der chat weiß bescheid
ich mein guck mal das normale ffmpeg kriegt es schon nicht hin
das zu decode und encode mit voller mit voller mit mit zur laufzeit hin
wobei das auch decode und encode und das encode ist aufwändiger als das decode glaube
ich zumindest
und der browser decode ja nur
ff probe 30
so guck mal mal das sollte fein sein eigentlich 30
guck mal mal also wenn das bei ungefähr 20 sekunden rauskommt ist alles ok und da sollten
wir auch kein slowdown sehen
true true
definitiv true
ja guck mit 30 fps kriegt das hin
da lassen wir ihn jetzt mal rendern
es ist schon ein bisschen laggy
also wir haben mehrere probleme wir haben die render performance von dem canvas und
wir haben
na gut es ist jetzt auch noch 30 fps guck die render performance load ist auch noch
down
oh alter mein browser
geht zu
ne nvn kriegen wir an der stelle bestimmt nicht hin
also doch webgl
ich weiß nicht ob ich das jetzt nach 3 stunden 20 noch auf die reihe kriege
ich meine ich kann es rein copy paste und gucken ob es funktioniert ja
das nächste mal können wir gucken wie wir das optimieren also ich denke schon dass es
möglich ist das hin zu bekommen nicht dass man es bräuchte aber
wir brauchen auch noch to do
neuere x-dings version
können wir auch noch machen
ja und das müsste man tatsächlich ein bisschen entkoppeln
ja ich nehme ich copy paste mir das jetzt ausnehmen
ich klau denen das jetzt einfach
wohin wohin macht man das jetzt
brauchen wir dann new file
kann auch render gs ok es geht schon mal es geht schon mal ohne sündungsfehler
das schon mal nice
auf wie verwendet man denn module in im browser
jemand messer pfeiffer plan kann man als einfach sagen import
punkt slash nee wie macht man das jetzt render punkt gs
keck wie so
script type module ok scheint funktioniert zu haben herkwe ja ja ja alles da so wie verwendet
man den kram jetzt
kein auto complete wie ging das wie ging das mit type kann man teil type annotations kann
man
noch mal let b gleich keck weh so haben man
nee moment ich weiß gar kann man type annotations auch machen für irgendwie dieses andere javascript
file oder so kann irgendwie sagen render punkt gs oder so nee ich muss sagen nicht render
punkt gs
ich muss wahrscheinlich sagen dings hier web g l class
web g l screen ok wie ver mache ich das also verwendet man das jetzt so ist das ist das
so gedacht ja
ok constructor canvas jetzt muss ich das lesen wie man das verwendet
oder haben die ein beispiel wie man das verwendet
du hast gut gute idee ja du hast recht wir können einfach sagen function heck weh new
web g l screen canvas da das war jetzt mal ali ali b mäßig hin
lets screen screen render image
alter wenn das funktioniert keck triple u dann
heck triple u ist klar richtig dumm so canvas so
cannot read off und defined render image achso ja da ist ein extrem null
gucken ob das mit dem screen klappt fill rekt
achso ja das das funktioniert an der stelle nicht mehr das gibt es nicht mehr
ok scheint zu funktionieren was mir hier screen render image
so das kann ich mir diesen ganzen krempel eigentlich sparen und ich kann direkt sagen
wie ging das höhe breite habs vergessen breite höhe data ok
breite höhe buffer das klappt doch nicht wow
es geht einfach und es ist deutlich flüssiger ist deutlich flüssiger aber es ist auch kleiner
es ist auch es ist auch nicht 1080 so machen wir mal das das das console lock
hier raus und heim raus wie kriege ich denn das jetzt mit dem size hin
mein canvas ist ja noch 16 also 1080 20 mal 1080 gibt es das jetzt sei es
gibt es jetzt sei es methode tatsächlich dann machen wir das doch so viel besser
aber die muss ich jedes mal aufrufen komm ich lass es jetzt mal so zum testen
zack leute das läuft erstaunlich gut muss ich mal sagen ohne scheiß das läuft erstaunlich
gut für das guckt mal vielen zwar also für das dass ich im browser den shit gerade die
code also das läuft wirklich nicht schlecht 60 fps ok 60 fps schafft er nicht 60 fps
kriegt er nicht hin da kriegt 60 fps mit 30 fps hin deswegen sieht es aus wie slow motion
jetzt guck mal da kriegt 60 fps mit 30 fps hin es ist flüssige slow motion jetzt an
der stelle also 1080p 30 fps ist schluss aber eigentlich sehr cool muss ich sagen sehr
sehr nice eine sache probieren wir jetzt noch aus ffm pack ja ich denke auch ein bisschen
was optimiert kriegen wir da schon noch hin wir probieren mal was aus wir nehmen jetzt
die 1080p und re-size die kannst du nicht jeden zweiten frame rennen doch doch das ist theoretisch
auch noch was wenn ich merke dass es zu langsam geht dann könnte ich theoretisch nee ich kann
nicht so einfach frame skippen das macht der decoder nicht mit nee nee nee das ist dann
ist das ja ich glaube das klappt das klappt nicht ich rufe eine millisekunde sleep auf
eine millisekunde sleep habe ich das sollte das sollte nicht das problem sein so warte
mal also wir machen jetzt was 1080 60 fps machen wir input output 720 60 und rate 60
wobei das egal ist ja schon ffm pack down scale scaling vf scale was ok ffm pack 1080p
720p stack overflow regelt scale einfach so was auch immer das mit den minions zu tun
hat keine ahnung ja ok also mache ich einfach minus s oder was
minus s 1280 mal 720 ah mist das dauert jetzt ein bisschen weil mein video ist ja könnte
ich auf dem haus mit fv engmann mein video ist ja zehn minuten ich will ihm noch jetzt
keine zehn minuten beim rendern zugucken ok ich lasse ihn ich lasse ihn einfach ich lasse
ihn einfach eine minute rendern das reicht 30 sekunden noch und dann breche ich ab eine
minute zum testen reicht ich will eigentlich nur wissen ob der noch memory leaks hat und
irgendwie out of memory geht und am abkacken ist ich meine wisst ihr was wir auch machen
können wenn wir gerade dabei sind wir machen das sleep wir machen das sleep wirklich komplett
raus oh es leckt wir machen das sleep komplett raus 8 90 prozent cpu vom ffm pack ist vorbei
ich bin in der vm da ist nichts mit gpu accelerated so und jetzt sagen wir an der stelle wo wir
das sleep haben oder wo wir das sleep brauchen machen wir es doch einfach so wir testen mal
wie das ist mit einem sleep wir testen das mal ganz ohne sleep komplett ohne sleep und
ansonsten hätte ich gesagt an der stelle sind wir denn da an der stelle wo er das dann
rendert das können wir mal kollapsen wo er rendert mache ich ein javascript delay oder
so rein dann ist halt die frage ob der auch wirklich das asynchron macht wahrscheinlich
skipter dann irgendwelche frames oder so weil weil er wartet ja wahrscheinlich nicht bis
es returned wenn ich hier drinne guck mal mal wie macht man ein sleep in javascript
gescheit promise ok immer sleep sleep gleich new promise chairs promise sleep der gober
flow beste excellent dann wir nehmen die function das besser sleep
ok ich quitte wir haben vier minuten gerendert das sollte reichen 720 60 hey das flutscht
leute sogar schneller sogar schneller als das sein müsste guck mal das sind eher 90
fps da kannst du dich echt nicht beschweren oder das ist ziemlich gut von der performance
ich meine für das dass das cross compile des c++ in browser ist ist das wirklich nicht
verkehrt wir checken ob das mit diesem sleep hier funktioniert ich glaube nicht ich glaube
man skippt der frames das juckt ihn überhaupt nicht aber das sind auch nur fünf millisekunden
moment sind das millisekunden leute an ich erwarte ja gar nicht lull so jetzt es interessiert
ihn überhaupt nicht das lieb und warum interessiert ihn ist nicht weil das hier auch das hier
gecalled wird ohne dass der wartet bis der rest durch ist also keine chance hier irgendwie
das lieb einzubauen das müsste man über irgendeine queue machen man bräuchte irgendwas
was rendert und wir bräuchte irgendwas was displayen sich das dann aus da war irgendwie
so aber genau du musst man wir müssten das rendern separat machen zu dem das da muss
ich mir was überlegen das war heute aber auf jeden fall immer ich mache jetzt mal das lieb
wieder rein make wo ist das mit dem run hier muss das lieb rein na ja das lieb zehn oder
so oder fünf fünf fünf ja leute das sieht ziemlich gut aus sogar noch ein bisschen mehr
acht da müsste man müsste jetzt stoppen da muss die zeit counten irgendwie und dann
ja also das ist performance technisch echt nicht schlecht ich meine ernsthaft wenn er
720p muss jetzt mal gucken meint ihr das läuft auf dem safari safari ios ne jetzt bestimmt
nicht
ich finde das sehr nice also ganz im ernst die performance geht doch absolut in ordnung
na super erkennt man ja viele die performance geht doch absolut in ordnung das als elektron
anwendung und man hat eine media play leute das ist so verrückter scheiß mich wunderts
also mich würde es nicht wundern wenn das jemand macht ffm pack erst mal in wassen um
es dann in elektron zu packen painstab gibt bestimmt leute die machen das ja ich könnte
wetten es gibt leute die machen das
also ich bin ich bin da wirklich überzeugt von ich finde das cool
der jetzt macht jetzt können wir jetzt kannst du sowas nehmen hier
damit geht das jetzt da musst du z plus plus krempeln machen
ok also das war es für heute ich gehe jetzt was essen
und wir machen einmal weiter weil ich kann ich kann mich nicht mehr groß konzentrieren
jetzt an der stelle nächstes mal wir bauen aber noch ein bisschen weiter auf jeden fall
was haben wir gemacht wir probieren das nächste mal ob wir das noch ein bisschen weiter optimiert
kriegen wen soll ich hosten haben wir irgendjemand
nee ich kann ich bin nicht eingeloggt also das nächste mal optimieren wird es gibt ja
auch noch einiges zum optimieren ja also zum beispiel diese geschichten hier dass man das
jedes mal kopiert das ist schon mal ziemlich pepega
habt ihr irgendeine ahnung könnte man könnte man das die koden auch multithreaded machen
ich glaube die coding multithreading ist pence champ das will man nicht weil ich meine der
muss sich ja sinken da muss ja die da muss ja die frames nacheinander die koden immer
man könnte teilweise die sachen parallel machen aber ich glaube das will man eigentlich nicht
aber es ist schon beeindruckend von der geschwindigkeit her für das dass es im browser läuft ist
schon wirklich in ordnung
macht der ffm pack nicht schon multithreading ich wüsste jetzt nicht an welcher stelle es
das machen soll ich mein das ist eine schleife ohne ohne jegliche multithreading geschichten
das kann es ja auch nicht jemand wie wo wo soll es das machen hier hier das
coding multithreaded how to use multithreading da brauchst du mehrere decoder kontexte oder
was ist ffm pack in wassen im chrome in einer vm richtig aber die vm macht das kleinste
problem hier
das kann doch gar nicht funktionieren was der dude da macht
wie soll denn das funktionieren meine schleife ist doch gar nicht multithreaded
das ergibt keinen sinn was was der typ da auf bare metal ist es noch performante außerhalb
der vm das nimmt sich nicht so viel das nimmt sich nicht so viel der dude da macht ergibt
überhaupt keinen sinn
oder startet er das startet er das jetzt irgendwie mehrfach multithreaded decoding ach du scheiße
ne ne ne ne ne ne
ok das machen wir heute definitiv nicht
das wird das also das würde richtig eklig sein und ich bin mir auch gar nicht sicher
wie man multithreaded machen kann bei dieser anwendung jetzt mein das muss das muss ja
sinken irgendwie also musst auf jeden fall gucken dass die frames in der richtigen reinfolge
also theoretisch müsstest du ein buffer machen oder eine queue machen da schreibst du die
frames rein und alle keine ahnung einmal in der sekunde holst du dir welche raus orders
die in die richtige richtung und dann renders zu sie so irgendwie so
weil du musst die du musst auf jeden fall die frames in der richtigen reinfolge rendern
weil ansonsten kommt ja nur müll raus man könnte es auch sein lassen ja das stimmt
aber muss machen was geht einfach um zu gucken ob es geht
leute wir sehen uns war ein sehr nicer stream wir haben deutlich mehr auf die reihe bekommen
als ich überhaupt gedacht hätte als ich angefangen habe zu streamen
und ich gehe zu was essen wir sehen uns bis dann macht's gut zu
