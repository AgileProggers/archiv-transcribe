Das war's für heute.
Vielen Dank für's Zuschauen.
So Leute, ich bin auch mal wieder abgestanden.
So Leute, ich bin auch mal wieder am Start.
Hat jetzt fast ne Woche gedauert, seit ich da war.
Aber ich war ein bisschen beschäftigt.
Außerdem musste ich auf der Arbeit relativ viel machen.
Ich hatte nach der Arbeit echt keinen Bock mehr,
großartige Streaming-Actions zu machen.
Aber jetzt ist der Wochenende und jetzt passt das wieder.
So, mal gucken.
Äh, ohje hier, jetzt gibt's ja schon Abos ohne Ende.
Was ist denn hier los?
Der Versuch ist am Start, 4 Monate.
Exzellent.
Subscription.
Subscriber.
In groß sehend die Bilder so derart schlecht aus.
Ähm.
Haben wir noch?
Neh was, ne Tri peeland auch 9 Monate.
Exzellent, Subscription nicht mehr.
Subscriber.
Das ist ja fast schon.
Du hast dank des Abonnements von Tribulon ein Emote erhalten.
Hä?
Und was mache ich damit jetzt?
Ja, excellent.
Hyper Crown habe ich bekommen.
WTF?
Was soll das sein?
Twitch Bits Belohnung.
Moment.
Ich habe keine Bits gesperrt.
Twitch Logik.
Man weiß es wieder nicht.
Ja.
Der Tazer ist wieder da hier.
Fünf Stück.
Er hat schon insgesamt 129 verschenkt, Alter.
Da platzt, da platzt der Kopf fast schon, ja.
Ähm, wer hatten denn?
Ja, Dankeschön, Tazer.
Im Moment.
Drei Stück, nicht fünf Stück.
Ich habe mich verguckt.
Er schreibt fünf Emotes geteilt.
Alter, Twitch, please.
Come on, brah.
Der Mark Jojo.
Ich habe gerade gesagt, der Mark Yolo hat eins gekriegt.
ChrisW.de.
RagingFox1337.
Jaja.
Lose96 ist auch zehn Monate am Start, ja, das ist ja schon wirklich.
So.
Ähm, also.
Ich wollte euch jetzt mal was zeigen.
Fällt euch hier oben rechts was auf.
Da.
Fällt euch da oben rechts irgendwas auf.
Ihr denkt, das ist ein Bild.
Aber wenn ihr genau hinguckt, werdet ihr feststellen, das ist kein Bild.
Weil wenn ihr ganz genau oben rechts hinguckt, seht ihr die blaue LED blinken.
Haha, ein GIF.
Ja, das kasst ihr mal gleich.
Ja.
Das ist nämlich ein Livestream.
Von.
Ähm.
Vom VLC.
Der wiederum Livestreamt von einer Kamera, die ich hier neben auf den Rechner gestellt
habe.
Mit einem ESP32-Bot.
Vollkorn-Mischbrot.
Exzellent-Subscription.
Geht ja wieder ab 6.
Monat.
Dankeschön.
Ja.
Man sieht hier oben auch, ich hab das ein bisschen gecropped in meinem OBS.
Ups.
Ähm, das ist das 3D-gedruckte Gehäuse, was ich dafür hab.
Oh, Moment.
Kirby.
Kirby, halt mal die Klappe.
Ah, jetzt.
Gleich, gleich viel entspannter.
Man muss es ja nicht übertreiben.
So.
Ähm.
Und man sieht.
Es, es, es funktioniert.
Ich kann euch ja mal kurz, kurz zeigen, dass es, dass es real ist.
Ich halt mal kurz was, ich halt mal kurz was ins Bild.
Jetzt wird sich, wird sich gleich, gleich wird sich hier was tun.
Bloop.
Habt ihr's gesehen?
Live.
Kam-Leak, Finger, Leute, Finger-Leak, IP-Leak, alles Leak, Alter, oh shit hier, Leute, das
ist echt, das ist echt, das ist echt, das ist echt, das ist echt, das ist echt, das
ist echt, Leute, Scheiße, ich hab meine IP geleaked wieder.
Weird-Champ.
Moment, ich sollte die Emotes vielleicht mal ein bisschen verkleinern.
X-Fatal, 14 Monate, ja jetzt geht's aber ab hier.
Dankeschön für den Sub.
Vollkorn-Mischbrot auch 6 Monate, ich glaub, den hatte ich schon, aber ich bin grad, grad
zu viel.
Ja, wunderbar, ich mach mal kurz hier nebenbei den Chat auf, damit ich, falls irgendwelche
Sachen kommen, dann nachher nochmal zurückscrollen kann.
Also, was man hier schön sieht ist, ihr könnt mal ne Runde dedoßen, ja 122.168.1.1.1.0,
kommt hier direkt bei der Polizei raus.
Das war, ne, das war nicht Weird-Champ, das war, wo ist Pains-Champ, wo ist Pains, wo
ist mein Pains-Champ?
Moment, siehst du mal, ich hab jetzt ne Woche nicht gestreamt, schon find ich meine Emotes
nicht mehr.
Ha, Pains-Champ, da, Pains-Champ, exellent, na so muss das sein, ja.
Was macht das blaue Licht, es leuchtet blau, gut erkannt.
Tja, ja und zwar, was ich heute vor hab, ist folgendes, also wir gucken uns jetzt nicht
nur das Board an, wie es da irgendwie blau blinkt oder so, wir probieren das heute mal
ein bisschen aus, weil, das Meme-Board braucht Voice-Commands, das hat, das kann doch Voice-Commands,
guck.
Das kann doch, das kann doch, kann doch Voice-Commands, oder, oder es kann, was er, eine Runde Monke
ist.
Ja, es ist, mein Chancen, oh, wieder am Start, oder das hier, das hier, kann, kanns ja auch,
also kann er Waff, Waff und MP3, ach, dass du dem sagst, was er zeigen soll, ach, du meinst
so ne Alexa Light oder was, oh ja, genau, also heute, heute gibt es huge Hacker-Man-Streams
und zwar, was wir heute machen, ist folgendes, oh Gott, es war es dringend, ich übelst
den Verhals, jetzt kommt mir keiner an mit, ach, so, genau, heute gibt es übelsten Hacker-Man-Streams
und zwar, ich hab mir ne, ich hab mir ne neues Board bestellt, schon vor ner Weile, diesmal
hab ich den Fehler gemacht, tatsächlich nur eins zu bestellen, enemyac130, das war, das
war der beste Ansager, ey, der enemyac130-Typ, der ist immer so richtig, der ist, der Typ
ist immer so richtig eskaliert, wenn du TDM gespielt hast, oder enemyac130above, so immer
kurz vor, total am eskalieren, ja und ich hab sogar, diesmal, diesmal den komischen, ich
hab das bei Amazon bestellt, ja, mein neues Mutterbrett, genau, viel zu teuer, wenn man,
wenn man bei Aliexpress gerade guckt, kostet der Kram im Endeffekt die Hälfte, nein,
Aliexpress darfst nicht, kostet bei Aliexpress kostet der Kram die Hälfte, man muss gucken,
dass man das Richtige findet, was, aus Polen verschicken die hier, was, Moment, what, what,
warum kann man aus Polen nicht nach Deutschland liefern lassen, aber aus China nach Deutschland,
was ist das für ne Logik, ja, viel Spaß, oder besser gesagt, viel Erfolg, der Scamtrain
ist abgeschlossen, 8 Abos, 0 Bits, weird Scamchat, also, aus Polen kannst du hier Deutschland
liefern lassen, aus China, China funktioniert, so, guckt euch mal den Versand an, der Versand
aus China ist halt der Witz, ne, 69, alternativ kann man auch Special Line YW machen, das
ist schneller und noch billiger, und hat sogar Sendeverfolgung oder so, was auch, immer,
keine Ahnung, Aliexpress Logik, da kommt DHL, 60 Cent, 69, 79, 1, 18, DHL, 27, 66, kannst
du erzählen, wie du vom Azubi gegebated wurdest, ach, meinst, Tribulon meinst du das hier,
wir müssen mal gucken, ich hab's extra oben rechts im Bild hingemacht, da ist eigentlich
nix spannendes, deswegen hab ich das mal oben rechts im Bild hingemacht, ähm, du meinst,
ne Moment, hier, das da, wo mich der Azubi gebated hat, ja, da hat mich der Azubi gebated,
ja, allerdings muss man mal sagen, der Azubi hat mich auch nur zum Teil gebated, weil letztendlich
hab ich ja das letzte Wort, ob das jetzt okay war oder nicht, also da kann mich gebaten,
wie er will, und er kann mich auch zurecht gebaten, und im Zweifel kann ich sagen, kann
ich sagen, trotzdem falsch.
Weißt du, das war irgendwie neun und dreiviertel, ich hab gesagt, ey, komm, mach bis elf, was
du willst, und damit hab ich ja eigentlich gemeint bei unserem Azubi, eigentlich wollte
ich ihm ja sagen, du kannst halt irgendwas von den sinnvollen Sachen dir was aussuchen
und machen, ja, ähm, und dann kam, elf Uhr hatten wir Gruppenrunde, danach haben wir
diese Dockerzeugen gemacht, und dann fünf Minuten später AFK, das ist das AFK-Zeichen
im Teams, also sprich, er hat, was du, äh, oder was du willst, wörtlich genommen, er
ist einfach AFK gegangen, hat's gedacht, leck mich, ich hau ab, der Smiley impliziert aber
nichts machen, ne, ja, also da kann man jetzt viel reininterpretieren, da kann man jetzt
viel reininterpretieren, weil der Tag lang ist, ich glaube, er könnte auch seine Antwort
sagen, sei es gleich nah, ich schreib einfach mal, ja, ja, in der Hoffnung, ich hab meine
Ruhe, na, ansonsten ist er aber echt nicht übel, muss sagen, ähm, der fragt teilweise
richtig, richtig, äh, advancede Sachen, unser neuer Azubi, ne, also, der hat zum Beispiel,
wir haben uns ein bisschen Dockerzeug angeguckt, ähm, und da haben wir uns so, die verschiedenen,
die, die, richtig Massive Brain, Alter, da haben wir uns die unterschiedlichen, äh,
Modi so angeguckt, was man so Netzwerk-Config machen kann für Container und allgemein für
VMs und sowas, und da geht's, du hast ja, du hast ja verschiedene Möglichkeiten, wie
du so ne, sag mal mal eine VM, bei Container ist das mehr oder weniger ähnlich, äh, Docs
Fame, Twitch Prime, dankeschön, huge subscription, dankeschön, für den, Moment, wo ist er,
Sub.
Ähm, genau, da gibt's ja verschiedene Varianten, was man machen kann, ähm, du kannst beispielsweise
das ganze, äh, intern lassen und dann musst du halt ne Portweiterleitung machen, äh, du
kannst aber natürlich auch so Sachen machen wie, benutze die gleiche Netzwerkkarte im
Host für, für unterschiedliche VMs mit jeweils eigener IP, und da hat der Azubi gefragt,
hoffentlich ist er nicht im, heimlich im Chat verdreht, kann sein, kann sein, wir haben
hier manchmal einen Heinrich rumlaufen, ja, hm, keine Ahnung, zumindest hat er mich dann
gefragt, und das fand ich wirklich nicht, nicht verkehrt, war echt schon richtig, richtig
gut, also da musst du mal ein bisschen, musst du, musst du, weit denken, um da drauf zu
kommen, da hatten wir es davon, dass du ja auch eine Netzwerkkarte in deinem Host nehmen
kannst und verschiedene, ähm, VMs können sich die Netzwerkkarte teilen, jeweils mit
eigenen IP, und da meinte der so, ja aber heißt das denn nicht, dass, ähm, dann, äh,
entweder VM wäre oder das Betriebssystem die MAC-Adresse faken muss von der, von der
Netzwerkkarte, oder muss ich sagen, auf die Idee musste er erst mal kommen, das ist gar
nicht so doof, und ja, muss er, natürlich muss er die MAC-Adresse faken, weil wie soll
das sonst gehen, mit unterschiedlichen IPs, zugleiche, zugleiche, funktioniert ja sonst
nicht, natürlich muss er die MAC-Adresse faken, und dass er da drauf gekommen ist, das fand
ich wirklich, äh, exzellent, ja, also da sieht man schon ganz, ganz so, äh, low brain
ist er nicht, also da ist schon, das ist nicht übel gewesen, und er fragt auch ein paar
andere Sachen, die sind, die sind ganz, äh, ganz clever, allerdings allgemein muss man
sagen, ich hab den ein bisschen, ein bisschen geil findet er sich, aber, ähm, wenigstens
hat er Ahnung, nicht so wie unser anderen, den, den wir mal hatten, der, ähm, hab ich
das, hab ich das eigentlich schon mal erzählt, ähm, wir hatten mal einen Azubi, der, ähm,
aber da kann ich jetzt weder, weder, noch nicht mal Vorname sagen, weil sonst ist das
zu offensichtlich, wir hatten mal einen Azubi, der, ähm, hat sich auch für, für ultra
big brain gehalten, also da reicht das hier nicht, der war, der dachte von, ups, Moment,
der dachte von sich selbst, der ist ungefähr so brain hier, also min, mindestens, mindestens
so, hat er gedacht, ja, also, wenn nicht sogar so oder, oder irgendwie so, ja, also der war,
der war wirklich vor, vor, äh, vor haus het oder was auch immer, zumindest, zumindest,
ähm, hat er sich dann irgendwann überlegt, ok, so als Azubi hat man ja nicht allzu viel
Geld, was könnte man dann machen, sag mal ist die Musik auch ein bisschen laut bei euch,
aber eigentlich, eigentlich passt die Musik ganz gut, aber ich find's ein bisschen, hör
mal einen Ticken leiser, so, ähm, so, genau, wo bin ich jetzt stehen geblieben, ja, und
der, der dachte halt, der ist, der ist wirklich massive, äh, massive big brain und hat sich
überlegt so, ok, bei, also als Azubi verdient man ja wenig Geld und irgendwie haben wir
eh nicht so viel zu tun und dann hat der auf einer, auf einer ausgemusterten Hardware bei
uns im Rechenzentrum, die er eigentlich hatte, für so ein Azubi Übungs, äh, ESX Cluster,
also sprich, der hat, der hat von sich aus gesagt, er kümmert sich um so ein Azubi ESX
Cluster zum Üben, für andere Azubis, wo die, wo die, äh, quasi Übungs-Vorhems drauf
machen können, also ja, hier so ein, so ein Virtualisierungs-, so ein, so ein Virtualisierungs-Kram
im Endeffekt und irgendwann ist dann rausgekommen, aber das ist, glaub ich, nie so an die große,
an die große Glocke gehängt worden, irgendwann ist rausgekommen, der Typ hat einen Filesharing-Service
betrieben. Der Typ hat einen Filesharing-Service betrieben und der war so low-brain, wie gesagt,
der hat ja, der hat sich viel, viel zu, viel zu big-brain gehalten, der Typ hat, der hat
sogar Werbung dafür gemacht, der hatte sogar eine Webseite, dass man bei ihm kostenlos
Videos gucken kann und sowas, das war, das war schon nicht mal Grauzone, das war schon
hardcore illegal, was er getrieben hat, ja, es hat nie eine, also, es hat nie auf der Arbeit
jemand an etwas höherer Position als sein jeweiliger Teamleiter mitgekriegt, der hat
gesagt, mal raus, ähm, und, ähm, er selbst, die Polizei hat es wohl auch nicht mitgekriegt,
aber, richtig low-brain, Alter, das war auf dem ESX in der Firma gehostet, ja, auf dem
Azubi ESX, also der wollte es echt, Kim.com als Azubi, das ist doch nicht so lange her,
aber, der war, der war wirklich, der war next-level, man kann, man kann es auf beide Arten sehen,
da war entweder next-level big-brain oder schon sowas von low-brain, das ist nicht,
ich weiß auch nicht, ja, keine Ahnung, was bei dem los war, ja, und zumindest, der hat
auch gedacht, der wäre es halt voll und, außer diese Sachen hat er eigentlich nichts
auf die Reihe gekriegt, und unser jetziger, der stellt, also der fragt die richtigen Sachen
und hat auch schon, der fragt eigentlich recht clevere Sachen, also da kann ich mich, kann
ich mich nicht beschweren, wo wir übrigens gerade bei Azubis sind, ich hab noch, noch
eine Geschichte, die ich euch erzählen kann, und zwar, ähm, kannst du empfehlen, was man
tun kann, um sich auf Physi-Ausbildung vorzubereuen, ja, also was du tun kannst, als vor der Ausbildung
eigentlich nicht, sondern nicht viel, du solltest Interesse für, für solche Themen haben,
das ist das, das ist das wichtigste, also solltest dich vielleicht ein bisschen fürs Programmieren
interessieren, vielleicht ein bisschen für Hardware, Computergedöns allgemein, für Technik
halt einfach, dass man da so ein bisschen scharf drauf ist, Neues zu lernen, ja, das
ist aber großartig, man, also was ich jedem empfehlen kann, ob Physi oder, oder nicht
oder vor der Ausbildung, sich ein bisschen so Grundlagen programmieren, beschäftigen
ist nicht verkehrt, das bringt einem überall was, genau, also eine andere Sache, ähm, Tro
M sagt, hab gerade vier Azubis in meinem Team, da fühlt sich der Tag so an wie eine
Lehrstunde in der Uni, ja man muss auch so viel labern, das geht, das geht, das, gut,
ich bin es ja mittlerweile hier vom Stream gewöhnt, wenn ich nicht ne Woche, ne Woche
weg bin, aber ansonsten schon, ähm, hab probiert auf dem Raspberry Pi ein Web-Server, bin abgekackt
ab Engine X, ja, Engine X ist auch nicht, also sag mal so, Apache ist das komplizierteste,
was die Konflikt angeht, Engine X ist dahinter, nicht ganz so kompliziert, aber der beste
Web-Server, einfach nur, wenn man, einfach nur ein Web-Server braucht, ohne irgendwas,
den hier, das ist easy as fuck, bist du der einzige Ausbilder, äh, ich bin ja noch nicht
mal Ausbilder, also ich darf das ja eigentlich gar nicht, dafür mach, ich weiß dafür mach
ich das jahrelang schon, aber wir haben einen, der darf, ja, ähm, ne bin ich nicht, nächste
Woche ist er, nächste Woche ist er auch woanders und wir sind eh ne überall, überall woanders,
zumindest eine Sache, die ich euch noch erzählen wollte von dem anderen Azubi, wir hatten
mal so den, so richtig den Massive, Massive Brain Azubi, also der hatte, der hatte gar
keine Ahnung, der ist jetzt übrigens, äh, Junior-Consultant bei irgendeinem Consulting,
äh, bei irgendeinem Consulting Laden und ich frag mich ernsthaft, Consultant ist ja
jemand vom Namen her, den frage ich zu Dingen, wo ich selbst nicht weiterkomme, beziehungsweise
wo ich halt, wo ich halt fachmännische Hilfe brauche und der Typ hat absolut keinen Plan
gehabt und jetzt ist er Consultant, also das bestärkt mal wieder so meine Meinung, was
das Thema, was, ne, dieses Consulting-Thema angeht, zumindest, ähm, der, das ging bei
dem auf die Abschlussprüfung zu und der hatte selbst von kundlegendsten Sachen im Netzwerk
keinen Plan, da hab ich gesagt, ok, weißt du was, setz dich mal ne Woche zu mir, wir
gucken uns immer mal wieder zwischendurch was an, das ist jetzt auch schon wieder, keine
Ahnung, vier Jahre her oder so und da haben wir uns jetzt ne Woche angeguckt, zu wirklich
im Detail und auch jetzt nix großartiges kompliziertes, wir haben uns angeschaut, wie kommt ein Rechner
von A nach B, wie weiß ein Rechner, beispielsweise überhaupt, im gleichen Netz, wie er was
an andere Rechner schicken kann, Chat, Frage an euch, machen wir mal den Chat IQ Test,
woher weiß Rechner A, wie er was an Rechner B schicken kann, wenn sie im gleichen Netz
sind, wie funktioniert das, also sprich, ich mach ping IP Adresse von Rechner A von Rechner
B aus, wie weiß mein Rechner, wie der zum Ziel kommt, also sprich, wie er den anderen
erreichen kann, wohlgemerkt im gleichen Netz, also sprich, Router, Gedöns, sprich, ist
alles egal, IPs sind auch statisch vergeben, also nix mit DHCP, das zwei Rechner, statische
IP von A nach B. Über MAC Adresse, ja, das ist schonmal richtig, aber der Chat, der Chat
ist natürlich, wäre nicht mein Chat, wenn er nicht hier Massive Brain wäre, das ist
ja schon hier quasi, der Chat hat es schon richtig erkannt, Arp, korrekt, nicht Routinkabelle,
also jeder der gesagt hat, Arp ist korrekt, alle anderen sind nicht korrekt, aber das
war ja schon, so, das funktioniert ja folgendermaßen, bevor dein Rechner was zu einem anderen Rechner
schicken kann im gleichen Netzwerk oder überhaupt zu irgendwas im gleichen Netzwerk, muss der
die MAC Adresse in irgendeiner Art und Weise bekommen, weil die Zustellung erfolgt auf
Layer 2 und das ist nunmal MAC Adresse basiert, das heißt, was der macht ist, ein Request
ins Netzwerk, war ganz vereinfacht gesagt, ich such die MAC Adresse zu dieser IP Adresse
und dann antwortet derjenige, der Rechner, gibt es übrigens auch interessante Angriffsszenarien,
wenn man darauf antwortet und nicht die MAC Adresse, da gibt es verschiedene Szenarien,
aber ganz einfach gesagt, der eine Rechner fragt ins Netzwerk rein, quasi wer hat die
MAC zugehörig zu dieser IP und der Rechner, der die halt antwortet, gut ist, dann habe
ich die MAC Adresse und kann das ganze adressieren, so, und so Sachen, so Sachen haben wir durchgekaut
ne Woche lang mit dem Azubi vor ein paar Jahren und der hat ja auch den Eindruck gemacht,
dass er das kapiert hat und wenn man ihn gefragt hat, dann hat er auch die Sachen halbwegs
sinnvoll beantworten können, allerdings muss man sagen, der Kerl hatte ein wahnsinniges
Talent und deswegen ist er glaube ich als Konsultant gar nicht schlecht, da hat er ein
wahnsinniges Talent, fließend den Übergang zu schaffen von er kennt sich aus zu er kennt
sich nicht aus, also sprich, wenn der, ja Edelknecht, irgendwann vergisst man das aber
Azubi sollte man das schon wissen, also sprich, wenn der was erzählt hat von irgendeinem Thema,
dann hat er erzählt und erzählt und erzählt, hat er Ahnung und irgendwann kam der Punkt
wo er keine Ahnung mehr hatte und hat einfach weiter erzählt und erzählt und erzählt und
du hast diesen Übergang nicht gemerkt, bei den meisten Leuten merkst du den Übergang
von ich hab Ahnung und jetzt kommt das wo ich mir on the fly was ausdenke, aber der
hatte huge randomness Prozessor im Kopf, der konnte sich quasi on the fly neue Sachen
ausdenken ohne dass das aufgefallen ist und der hat teilweise einen übelsten Stuss von
sich gegeben und das hat sich so angehört als weißer wovon er spricht, also eigentlich
der geborene Konsultant wenn man so will, das Problem ist nur wenn du das jemand erzählst
der sich mit der Sache zumindest schon mal am Rande beschäftigt hat, weil dann wirst
du direkt feststellen es ist Blödsinn, zumindest wir haben uns das eine Woche angeguckt, der
könnte wirklich richtig stonk sein der Typ, der könnte extrem stonk sein, so gleich fangen
wir an zu basteln mit dem ESP hier oben da blinkt er immer noch blau vor sich hin, aber
zumindest um die Sache abzuschließen wir haben uns das eine Woche angeguckt und am Freitag
also Ende der Woche habe ich gesagt okay wir machen das jetzt mal so, ich hab jetzt die
Woche viel erzählt, ich frag dich jetzt ein paar Sachen und du erklärst mir das einfach
und dann hab ich ja unter anderem auch gefragt wie ist das wenn Rechner A zu Rechner B will,
dann hatten wir das glaube ich auch von statischen Routingtabellen und sonst was und hat auch
ein bisschen was an die Tafel gemalt und irgendwann wo es ums Thema A-Prequest ging, hat er wusst
das nicht mehr, hat er es vergessen, ist ja im Prinzip auch nicht schlimm, da hab ich
halt zu ihm gemeint okay wir gehen mal von aus jetzt ist irgendwie Prüfung oder schriftliche
mündliche was auch immer, irgendwas musst du denen jetzt ja hinwerfen was Halbweg Sinn
ergibt und das hat ihn so fertig gemacht, dass ich ihn gefragt habe, dass ich so hartnäckig
gewesen bin, dass ich gesagt hab er muss da jetzt was drauf antworten, da meinte er dann
zu mir irgendwie so ha Max ist doch jetzt egal, da hab ich halt zu ihm gemeint so nee
das ist nicht egal, wir haben uns das jetzt eine Woche lang angeguckt, da kannste sich
jetzt nicht hinstellen und sagen das was wir eine Woche lang gemacht haben wäre jetzt
egal, dann können wir es uns ja auch gleich und der Typ der hat instan den halben Nervenzusammenbruch
gekriegt, ich wollte, ich also meinem Eindruck nach hab ich den nicht irgendwie übermäßig
da angegangen, ich hab einfach nur gesagt es ist jetzt nicht egal, weil ich mein was
ist das für eine Antwort, es hat sich jemand mit dir eine Woche hingesetzt und was gelernt
und du sagst ihm am Freitag wenn er dich was dazu fragt ist doch egal, ich sag nein ist
nicht egal, der war fertig, der hat angefangen zu flennen, der war komplett neben der Spur
und ich wusste gar nicht was ich machen soll, ich wusste ernsthaft, ich hab damit nicht
gerechnet, ich wusste nicht was ich machen soll, ich hab da natürlich nicht weiter gemacht,
ich hab gesagt ey ist okay, ist gut, ähm, äh beschäftig dich mal ein bisschen, geh
rauf beschäftig dich mal ein bisschen was anderes, so also im Prinzip, ja der hat übelst
angefangen zu heulen, der war fertig mit den Nerven alter, ich echt keine Ahnung, also
ich bin mir da keiner Schuld bewusst, dass ich den irgendwie übermäßig da hätte,
ich hab ihn einfach nur gefragt was zu einem Thema wozu er was wissen sollte ja, zumindest
der war komplett fertig und ich mein ich kanns in gewisser Weise nachvollziehen, es ist
schon belastend, wenn man quasi offensichtlich keine Ahnung hat und jemand anderes ist hartnäckig
und besteht darauf, dass man sich jetzt quasi outet, dass man keine Ahnung hat, das ist
doof, die einfachste Variante dagegen fortzubeugen ist zumindest ein bisschen Ahnung zu haben
oder insofern eine Ahnung zu haben, dass man was erzählen kann was damit was zu tun hat
oder aber man ist schon ne Weile dabei und hat sich irgendwelche Standardantworten zurechtgelegt
so nach dem Motto, das muss dann im Nachgang geklärt werden oder auch eines der besten
Sprüche die ich letztens von irgendeinem BWL Mensch gelernt habe, der hat, ich weiß
gar nicht was war, der hat am Anfang von seiner, von der ganzen Geschichte hat er erzählt
wir machen das und das, so und dann ist ihm am Ende aufgefallen er hat das nicht gemacht
und die Ausrede von hier vom Stonksmann war, ja dieses Thema verorten wir jetzt woanders
beste Antwort, dieses Thema verorten wir jetzt woanders, das ist so ein absolut Bullshit
Nichtsagesatz, also chat ich gifte jetzt gleich 5 Saps, so dann gifte ich keines Saps und
dann sag ich dann um mich rauszureden, also das Sap giften verorten wir jetzt woanders
das ergibt überhaupt keinen Sinn, gut aber wenn du schon diese Weile hast, da hast du
so ein paar Sprüche schon dran und was mich ja persönlich immer wundert, was so gut klappt,
was eigentlich glaube ich jeder schon durchschaut hat ist, was ist eure Standardantwort, wenn
euch irgend einer was fragt, wenn ihr nicht gerade euer Chef ist, wenn euch irgend einer
was fragt, wie siehts denn damit aus, was macht ihr denn da gerade oder wie siehts denn
damit aus, wie sieht da eure Standardantwort aus, also meine Standardantwort ist, also
ja klar es kommt drauf an was es ist, aber wenn es was normales ist, was man vielleicht
vergessen hat zu machen, also sprich in dem Moment wo der einen fragt erinnert man sich
wieder dran, oh fuck das wollte ich ja vor 2 Wochen schon machen und so und ich sag dann
immer, oh ja da sind wir dran, da sind wir dran, in Arbeit oder sowas, da sind wir gerade
dran, da sind wir gerade dran, das ist ich glaube gerade in der IT so ein Satz den hörst
du bei 90% der Themen kommt als Antwort, du fragst irgend was und wie siehts denn damit
aus, da sind wir dran, wie siehts denn damit aus, da sind wir gerade dabei, hier sind wir
auch dran, das eigentlich kauft das, es ist erstaunlich wie viele einem das abkaufen,
in Wirklichkeit bedeutet 90% da sind wir dran, also klar es kann entweder wirklich ein längerwieriges
Thema sein, aber meistens bedeutet das, scheiße ich hab's vergessen, ja wo bleiben die 5,
wie gesagt das verorten wir jetzt woanders, ok genug geschwätzt, ich bin jetzt schon
wieder eine halbe Stunde on, schönes Intro, aber jetzt können wir mal ein bisschen was
sinnvolles machen, was sollen dir die Leute denn sagen, keiner wird sagen mach ich jetzt
sofort, ganz ehrlich ich find's gut wenn die Leute sagen, oh hab ich vergessen, mach ich
später, da weißt du wenigstens ok, der labert kein Scheiß, da hat er nicht zwei Wochen
für gebraucht, der hat nicht dran gedacht, aber je nachdem wer dich das fragt ist klar
dass du das nicht sagen kannst, so hab ich irgendwas im Chat überlesen, die notwendigen
Unterlagen liegen wir im Moment nicht, das ist auch gut, das ist auch nicht schlecht,
diesen Skill hab ich bei vielen Consulten schon festgestellt, leider ist das Problem
dabei ist bei mir immer, wenn es ein Thema ist wo ich mich mit auskenn, dann merkst du
natürlich wenn einer Mist erzählt, und vielleicht kommt daher auch meine Annahme, dass die meisten
Consultants absolut keinen Plan haben, vielleicht wirkt das aber einfach nur so, ok ich glaub
ich hab nix im Chat übersehen, jetzt können wir so langsam aber sicher anfangen, hast
du mal einen Access Point, via einem Laptop Computer-Gauss mit dem neuen Wi-Fi 6 ist das
echt ein PIA, was ist denn ein PIA, ist PIA sowas wie, oder was ist PIA, was hast du
vor mit dem ESP32 zu machen, eh gucken wie man das Farbdisplay, pain in the ass, ah Chat,
ok also es ist das Gegenteil von, ehm also was wir heute vorhaben, bevor ich noch die
anderen Sachen im Chat erzähle, also was wir heute vorhaben ist folgendes, ich mach die
nachher übrigens mal in das 3D Drucker Case rein, weil ich find das Case ist richtig gut
geworden, also folgendes was wir heute mal machen, eh das Ding hat ein Farbdisplay, und
wir probieren erstmal ein bisschen das Farbdisplay, mal gucken wie man das steuern kann, ich hab
im Vorfeld schon mal geguckt, also ich bin jetzt nicht komplett ahnungslos, ihr wisst
ja, ich gebate euch manchmal ein bisschen, ich tu manchmal so im Stream, liegt Leute,
liegt, ehm ich tu ja manchmal im Stream so, als hätte ich keine Ahnung von dem Thema,
dabei hab ich mir das im Vorfeld schon angeguckt, und ja ich hab's mir im Vorfeld auch schon
ein bisschen anguckt, weil ich will's nicht komplett planos machen, aber nicht extrem
viel, ja also ich weiß beispielsweise welches Library wir verwenden und wie das grob funktioniert,
aber ehm so, genau, und was wir probieren ist folgendes zu machen, ehm ich hab nämlich
die Hoffnung, dass ich dieses Board, weil das ein Farbdisplay hat, für mehrere Projekte
verwenden kann, also so nach dem Motto fast schon Default, weil so ein Display ist für
jegliche Sachen eigentlich gut, ehm das bricht ja voll mit dem Motiv des Kanals, warum das
denn, das ist nicht das Konzept, dass ich planos bin, das Konzept ist, dass der Chat
und ich Big Brain sind, also hauptsächlich der Chat, weil wo, na, Sub-IQ, sag ich doch
immer, ehm zumindest, ich hab zwei, so zwei Default Boards, ich hab einmal den Tiny, Tiny
Pico, das ist so ein ganz kleines, ehm, ESP32 Board, das ist für Sachen wo man definitiv
kein Display braucht und einfach möglichst kleine haben will, wie gesagt bei mir in der
Klingel und so war es so ein ganz kleines Footstink, aber für alles, was man, wo man
das Gerät wirklich benutzt, finde ich das als Default Board mit dem Display eigentlich
ziemlich gut, man hat, ehm, mehrere Crown Anschlüsse, zweimal 3,3 Volt, einmal 5 Volt,
was schonmal sehr praktisch ist für viele Sensoren, am Ende ist das Spiel gecrashed
wegen Anti-Cheat, Moment, was war das nochmal, welches Spiel ist gecrashed wegen Anti-Cheat,
ach Modern Warfare, ja, was haben wir nochmal programmiert, ehm, genau, wir hatten was
programmiert, was die Sound-Lautstärke von Modern Warfare anpasst und da ist der Anti-Cheat
angesprungen, richtig, ehm, zum Beispiel, man kann da alles mögliche mitmachen, also
je nachdem was das Ding macht, von Temperaturanzeige bis, was weiß ich, Temperatur, Luftfeuchtigkeit,
welche Daten, die empfangen wurden, verfügbare, was weiß ich, Netzwerke, falls man irgendeinen
Scanner draus machen will, ehm, wie viele Blumen gegossen werden müssen, wenn man Bodenfeuchtigkeitssensoren
hat oder sowas, also eigentlich alles möglich, so ein Display ist immer praktisch, so, ehm,
und also was wir heute probieren, ich wollte erst mal gucken, dass wir über das Display
halbwegs angesprochen kriegen, dann ein bisschen, und das wird wieder Pains-Champ, weil das
ist C++, ehm, und ein bisschen gucken, dass man das, ehm, also C++ wird wieder ganz grausam,
dass das ein bisschen schön, ehm, also Multicore, Multithreaded ist, das Ding hat ja zwei CPUs,
ja, Tiny Pico Deck, der ist einfach nur klein, der ist einfach nur klein und, ne, der kann
schon ein bisschen mehr, also was an dem ganz gut ist, was an dem, was an dem ganz gut ist,
der kostet 20 Dollar oder so in dem Dreh, das ist wirklich, ist wirklich relativ teuer,
ehm, was an dem ganz gut ist, erstens, der ist klein, ehm, zweitens, was sonst wenige
Boards haben, der hat einen sehr geringen, ehm, Idle Stromverbrauch, also, ehm, Deep
Sleep Stromverbrauch, also der ist nicht nur, nicht nur klein, der ist auch super geeignet
für Anwendungen mit Batterie und Akku, hier steht ja, was sie alles für tolle Vorteile
haben, genau, zwar ein Dual-Core, das haben sie alle, ehm, WLAN, Bluetooth, das haben
sie auch alle, es hat eine RGB-LED für Status-Anzeige dabei, das ist eigentlich ganz cool, ehm,
es hat onboard eine Steuerung für Akkus und hat einen sehr niedrigen Deep Sleep, ehm,
Low Power Usage steht hier, ehm, optimiert für Deep Sleep, also sprich, der ist fix
und fertig, benutzbar für Batterie und ist auch, was den Stromverbrauch angeht, sehr
praktisch für Low, guck mal, 20 µA, ehm, unter 20 µA Deep Sleep, das ist wirklich,
wirklich gering, wenn man da einen 1200 mAh Akku nimmt und das Ding nur, keine Ahnung,
vier, fünfmal am Tag auflassen lässt, dann hält das zwei Jahre mit dem Akku, das ist,
das ist wirklich cool, das Teil, ja, aber für alles, was, ehm, eben am Kabel ist, USB
und, ehm, sonst wie, dann, ehm, guck ich, dass ich in Zukunft defaultmäßig das nehme,
weil, ehm, könntest du machen, ja, ja, ich glaub, die Baupläne für den Tiny Pico gibt's
sogar, kannst du, kannst du dir selbst PCP, ehm, vor's Schiener drucken lassen, ehm,
könnte man da theoretisch einen Barebone Linux drauf zum Laufen zu bekommen mit 4 MB Speicher,
also ich sag mal, theoretisch unmöglich ist nix, allerdings glaube ich nicht, dass das
für die Architektur so ohne weiteres möglich ist, aber ehrlich gesagt, also unmöglich
ist nix, ja, aber recht unwahrscheinlich, das Ding ist auch sehr, na, Windows 10 auf gar
keinen Fall, Leute, Windows 10 auf gar keinen Fall, das Ding ist sehr beschränkend, ich
mein, es hat 4 MB Flash und was, 60 KB RAM, STM32, ehm, ja, unter einem Microampere haben
die Dinger auch nur, wenn die das ordentlich gemacht haben, dass USB und alles abgeschaltet
wird, beim STM32 weiß ich nicht, wie es aussieht mit WLAN-Unterstützung, was beim STM32 auf
jeden Fall nicht so gut ist, ist der ganze Support, was Arduino-Treiber angeht, aber
vielleicht ist es mittlerweile auch besser und ich muss sagen, ich hab damit noch nix
gemacht, ich hab nen STM32 hier, allerdings einen, nämlich den hier, ehm, nämlich den
hier, den hatte ich mir mal auf Kickstarter gekauft, ehm, ja, wenn es kein WLAN hat,
dann ist es schon mal doof, ehm, ich hab mir nämlich den hier, eh, hallo, wo ist er denn,
Shop, kucken wir mal im Shop, kaufen wir, ja, genau, so einen hab ich mir hier nämlich
mal gekauft, das ist glaub ich ein, das ist ein STM32, aber das coole ist, ehm, den kann
man mit, die haben ne.NET-Implementierung für das Ding gebastelt, also sprich, man
kann mit, das ist der erste Microcontroller, den man mit.NET programmieren kann, das
ist, wohlgemerkt, für den Preis eher nen Witz, ja, das ist ein Entwickler, also da
ist auch alles möglich dabei, was man braucht, ehm, ich hab mir ehrlich gesagt auf Kickstarter
nur einmal bestellt, weil ich mal gucken wollte, ob, wie weit man kommt mit.NET und Microcontroller,
bin ich, da bin ich echt, bin ich wirklich mal gespannt, hab ich noch nicht ausprobiert,
aber das ist schon mal ne ganz andere Hausnummer, also der hat auch ordentlich RAM, 16 MB RAM
ist extrem viel, wie gesagt, ehm, der ESP32, der hat 60 KB oder so, 32 MB Flash ist auch
krass, ja, auch das andere Zeug, also das ist schon mal ne ganz andere Hausnummer hier,
ja, die haben ne.NET-Implementierung für Microcontroller gebastelt, und wer hier übrigens
genau hinguckt, wird feststellen, dass der nen ESP32 noch onboard hat, also sprich, der
hat nen STM32 und der hat nen ESP32, der ESP32 macht W-Lan, und ich könnt mir vorstellen,
man kann nen ESP32 auch noch zusätzlich programmieren, das heißt, man hat hier wirklich krasse Rechenleistung
am Start auf nen kleinen Controller, man hat hier nen Dual-Core vom ESP32, den Ultralow-Power-Core
vom ESP32 und hier nen STM32-F7, der wahrscheinlich performancemäßig das Ding nochmal in die
Tasche steckt, richtig viel RAM und richtig viel Flash, also das ist echt, das ist echt
heftig das Teil, allerdings 50 Euro lohnen sich jetzt nicht so wirklich für kleine Sachen,
ja, genau, so viel zum Tiny-Pico und dem ganzen Kram, so um die Sache jetzt mal fertig
zu machen, also, was wir heute machen ist folgendes, wir probieren bisschen mit dem Display rum
und dann versuchen wir Update über W-Lan, da hab ich schon ne fertige Updater-Klasse
für, ja, ihr habt richtig gehört, C++-Klasse, Pain's Champ, was willst du machen, das ganze
Arduino-Zeug ist halt so ne Mischung aus zum größten Teil C mit ein bisschen C++, und
dann machen wir nen Update und das Update zeigen wir auf dem Display an, ich hab den
Sinn dieser ESP32-Boards noch nie verstanden, zum Beispiel sowas hier, also ich zeig dir
mal eine Sache, die ich letztens gebastelt hab, wofür das praktisch ist, nämlich, zum
Beispiel sowas hier, das ist ne Steuerung für meine Klimaanlage, da hinten ist nen
Temperatur-Luftfeuchtigkeits-Sensor dran, hier ist der Infrarot-LED, da ist ein Display
dran, das ist übrigens nur ein monochromes Display bei dem hier, ein Display dran, Luftfeuchtigkeit-Temperatur,
und hier unten hab ich den Knopf, so programmiert den hier glaube ich, dass ich damit die Klimaanlage
ein ausschalten kann, das sind so Sachen, die kann man zum Beispiel mit nem ESP32 wunderbar
machen, weil ESP32 ne super Kombination ist, aus ziemlich viel Rechenleistung, je nach
Board, recht niedrigem Stromverbrauch, und W-Lan und Bluetooth, und das in Kombination
gibt's so sonst eigentlich nirgendswo, und eine wichtige Sache, die ich noch vergessen
hab, ziemlich gute Unterstützung, was Entwickler und Projekte angeht, also das ESP32, also
dieses ESP-IDF-Gedöns vom Hersteller, ist wohl relativ gut, ich muss sagen, damit mach
ich recht wenig, aber man verwendet viele Funktionen da draus, auch wenn's kein IDF-Projekt
ist, allerdings die Arduino-Unterschützung ist ziemlich gut, und dementsprechend auch
der ganze Library-Support, also du musst hier ja, beispielsweise diesen Luftfeuchtigkeits-Sensor,
den musst du gar nicht großartig jetzt hier irgendwelche Register auslesen, irgendwelche
Interrupts machen, sonst was, nimmst einfach ne fertige Library für das Ding und kannst
auslesen, das ist halt praktisch, ein Arduino bekommt doch dasselbe, nee, ein Arduino hat
kein WLAN, zum Beispiel, ja, der hat viel mehr digital, also die Arduino-Boards, es
hat schon seinen Grund, dass gerade die ESP62 für die extrem budget Sachen und die ESP32,
dass die ziemlich den Arduino den Rang abgelaufen haben in den letzten Jahren, die haben ja
auch nachgezogen, es gibt jetzt ja neue Arduino-Boards mit, glaub auch, Bluetooth sogar, also WLAN
auf jeden Fall, und ich glaub auch Bluetooth dabei, also die mussten halt auch mal ein
bisschen aufholen.
Wenn man was bauen will, was 30 Jahre hält, dann hast du ja auch ganz andere Voraussetzungen,
denke ich mal.
Also, ich würd mal sagen, die meisten Sachen hier halten doch schon verhältnismäßig
lang, die gehen nicht einfach mal so kaputt, aber 30 Jahre ist halt ne Hausnummer, 30 Jahre
ist echt ne Hausnummer, hast doch ganz andere Probleme.
Wichtig ist aber halt auch gut, dass man einen Ersatz bekommt, und hier kriegst du,
kriegst du, glaub ich, lange noch Ersatz, aber gut, das Problem hast du bei Arduino's
ja auch nicht.
So, und also sprich, das ist heute das Ziel, dass wir am Ende ein Update übers WLAN machen
können, und auf dem Display angezeigt wird, wie weit das Update ist.
So, auf geht's.
So, ihr seht das ganz oben rechts, das erste, was wir so machen ist, mir ist nix blöderes
eingefallen, das hab ich mir nur drüber geschrieben, dass ich nicht aus Versehen meine Secrets-Datei
aufmache, weil da steht, da steht, zum Glück, zum Glück steht's hier nicht drinnen.
Nein, es steht nicht drinnen, exellent, da steht meine SSID und mein WLAN-Passwort drinnen.
Also die darf ich jetzt nicht aufmachen.
So, also das erste, was wir machen ist, wir geben mal irgendwas auf dem Display auf, weil
oben rechts ist ja, das passiert ja nix, das blinkt blau vor sich hin.
So, nehmen wir uns mal irgendwie ein billiges Example.
Achso, übrigens, nochmal zur Erklärung, wie das Ganze jetzt, dass es überhaupt funktioniert.
Patrick, 14 Monate, gebated, krasser Shit, dankeschön, 14 Monate, das ist wirklich ja
extrem lang.
Massive IQ.
Am Ende kommt, Compiler-Fehler, WLAN-Passwort, ja, ich hab extra nen WLAN genommen, weil
ich nach dem Stream wieder wegschmeiße.
So, zumindest, wir gucken uns jetzt mal ein einfaches Example an, wie man irgendwas auf
den Bildschirm schreiben kann.
Wie gesagt, ich hab mir das schonmal angeguckt, das ist nicht so kompliziert.
Genau, und was ich zeigen wollte, meine Config für das Board ist folgendes, muss man nämlich
sagen, das Board ist offiziell, das ist glaube ich relativ neu, das ist noch nicht unterstützt,
man muss ein paar Sachen hier selbst hinzufügen, dass das Ganze funktioniert, aber das sind
hauptsächlich ein paar Defines für das Display, das hab ich auch auf GitHub gefunden hier.
Also erstens, das Ding hat einen ziemlich schnellen Speed für die serielle Schnittstelle,
das schafft quasi das Doppelte, was eigentlich maximal geht.
Will ich mich nicht beschweren, dann ist es wenigstens schnell hochgeladen.
So, also wir verwenden das ganz normale Arduino-Framework, Standard-Partition für den Flash-Speicher,
Standard-Partition für den Flash-Speicher beim ESP32, muss man auch mal sagen, sind
ungefähr 1MB, ungefähr über den Daumen gepeilt, ungefähr, das ist ein vollständiges
Board hier, guck, ungefähr 1,3MB Speicher auf dem Flash für die Software, für die
Firmware, 1,3MB für eine Kopie von der Firmware, wenn man ein Update macht und der Rest ist
Flash-Speicher, wo man Zeugs drauf speichern kann, von Bild, Bildchen bis Schriftarten
bis sonst was, das ist so die Standard-Partitionierung von dem ESP32 Flash-Speicher.
Das hat auch nur 4MB Flash, es gibt auch Sachen, die haben 16MB Flash.
So, und was ich hier gefunden habe für das Board auf GitHub ist ein paar Compiler-Flex,
die man noch angeben muss, das habe ich eingefügt, das Ding hat nämlich noch zwei Buttons,
das ist ein ziemlich cooles Gesamtpaket, man hat ein großes Farb-Display, man hat zwei
Buttons, die man verwenden kann und ein Reset-Button, also ist ein ganz gutes Gesamtpaket.
Also, die GPIOs für die Buttons, was das ist, weiß ich nicht, das ist der Treiber für
das Display, Größe, Höhe vom Display, welche GPIOs vom Display belegt sind und das hier
ist wichtig, Backlight, wenn man das Backlight, nämlich, wenn man das hier nicht setzt, dann
spackt das Display irgendwie rum.
Bei AliExpress steht 4MB, 16MB, vielleicht schickt mal eine Link, müssen wir mal gucken,
aber die haben eigentlich 4MB.
Ja, und das sind alles irgendwelche Displays, ach ja, und es unterstützt Anti-Aliaste-Fonds.
Okay, wir probieren das jetzt mal aus, wir machen normaler Test für das Display.
Es kann sein, dass die Playlist übel schlecht abgemischt ist, ich meine, hallo, viel zu
laut.
Ja, besser.
Das ist der Patrick, der kennt sich schon aus.
Also, wir müssen als erstes mal uns die Library holen für dieses Display, also, Libraries,
TFT, das da, Brauma, und Plattform AIO hat so eine merkwürdige Angewohnheit, das schlägt
irgendwie die Version nicht geordnet nach Release-Datum vor, sondern geordnet nach älteste,
also man möchte nicht die älteste installieren, man muss immer runterscrollen, ich möchte
die neueste Version installieren, was ich ja persönlich für ziemlich low-brain halte.
So, also, dann sagen wir jetzt Include, und dann hieß das Ding irgendwas mit TFT, LCD,
äh, äh, Moment, wie, Generic, haben die irgendwie mal ein gescheites Beispiel, irgendwas, so
ein Hallo-Welt-Beispiel oder sowas, ah, hier, das da, TFT-ESPE, das hat er wahrscheinlich
nicht gecheckt, dass ich das Included hab, und jetzt muss ich noch mal neu starten.
Oder?
Oder?
Hat er's erkannt?
Okay, ich muss noch mal neu starten, er hat nicht erkannt, dass ich's installiert hab,
und meine Klimaanlage muss ich anmachen.
So, äh, ich hab mal eine Frage zu Let's Encrypt, du hast ja bei dir zu Hause eine Domain, äh,
ja, hab ich, genau, korrekt, die ist öffentlich nicht erreichbar, aber wie validierst du,
dass dann mit Let's Encrypt, muss der Dienst dafür nicht weitergehen werden, durch Portfolding?
Ich mach das genau so, wie ich das von ein paar Streams in Traffic in meinem Stream eingerichtet
hab.
Also, das Ganze läuft über den DNS von Cloudflare, und, ähm, der ThirdBot macht DNS, äh, na,
wie heißt Challenge?
DNS-Challenge mit Let's Encrypt.
Der geht über die DNS-API von Cloudflare hin, hinterlegt das Secret, was, ähm, Let's Encrypt
abruft.
So, also, jetzt haben wir das hier eingebunden, jetzt müssen wir so ein Display-Cloud-Anding,
oder?
Wie ging das genau?
TFT, und jetzt schreiben wir erst mal irgendwas, jetzt schreiben wir irgendwas aufs Display,
in der Hoffnung, gibt's da, gibt's da so ein, hat das irgendwie so ein, haben die irgendwie
ein Hello World Beispiel, wo nicht 30, ach guck mal da, sogar für das Board hier, exzellent.
Ne, das brauchen wir alles nicht, Z-Rotation brauchen wir, Z-Rotation brauchen wir auf
1, das ist richtig, weil ich das Ding hier hochkant hab, also ihr seht's ja, ähm, also
sonst, sonst würde er, sonst würde er so rumschreiben, was doof ist, er soll ja so
rumschreiben.
Also Rotation 1 brauchen wir auf jeden Fall, als erstes muss man TFT in it, so, und jetzt
sagen wir TFT draw, wir schreiben jetzt mal irgendwas drauf und gucken, ob's funktioniert,
ähm, Qt chat ayayaya, und zwar auf 00, also sprich 00 ist, äh, die linke obere Ecke,
Qt chat ayayaya, und Schriftart, keine Ahnung, 4, das Ding hat standardmäßig, das wird übrigens
auch gleich nur lustig, ähm, das Ding hat standardmäßig 8 eingebaute Schriftarten
oder 7, 1 bis 7, aber man kann Custom Schriftarten nachladen, das werden wir auch gleich ausprobieren,
so, mal gucken, ob das jetzt funktioniert, wenn ich das uploade, also wenn's funktioniert
sollte da oben auf dem Display gleich Qt chat ayayaya stehen, aber ich hab bestimmt irgendwas
vergessen.
Ah, ich bin da auch doof, guck mal, ich hab das Display, ich hab's noch gesagt, man muss
das Display auf on schalten, so, Leute seht ihr was auf dem Display, ich seh da nix, Qt
chat ayayaya, doch, jetzt, ok, Moment, ähm, jetzt müssen wir mal was ausprobieren, jetzt
müssen wir mal was ausprobieren, ich glaube, die Verzögerung vom Stream ist ganz schön
hoch, glaub die Stream Verzögerung ist ziemlich hoch, ähm, wir machen jetzt mal hier, wir
machen mal einen Counter, Strong, so, Delay, keine Ahnung, Sekunde, äh, und dann machen
wir hier noch, so, also sprich, wir gucken jetzt mal, ob das, was da im Bild steht, übereinstimmt,
so, hier unten steht gleich ne Nummer, und da gucken wir, also, eins, zwei, drei, WTF,
ah, ich hab's nicht geklärt, Moment, ich muss doch klären das Display, das hab ich
vergessen, init klärt anscheinend nicht, zum klären musste man glaub ich mal nen Fill,
Fill Screen, Fill Screen mit TFT, Black, genau, so, und jetzt, jetzt sollte das ganze funktionieren,
eventuell kannst du noch das Bild einfügen, das, ja, das probieren wir, wir machen jetzt
Ayaya Emote drauf, das machen wir, Moment, das Ayaya Emote kommt drauf, da muss ja mal
gucken wie man das macht, ok, mal kurz schauen, ok, 21, ok, ungefähr ne Sekunde Verzögerung,
25, ja, ok, der Stream ist halbwegs aktuell, wir machen das Ayaya Emote auf das Display,
das ist aber gleich die komplizierte Sache, ne, wie das funktioniert, da muss ich nämlich
erstmal nachgucken, das ist gar nicht so easy da nen JPEG drauf zu kriegen, und zwar, ich
hab's mir zwar im Vorfeld schon angeguckt, aber da ist einfach mal so nen randomen JPEG
drauf zu kriegen glaub ich nicht so einfach, probieren wir mal aus, man kann hier TFT sagen,
push image, und dann braucht man nen speziell vorbereitetes Image, also sprich, man muss
das hier erstmal preprocessen, und da muss ich mal nachgucken, wie das, wie das funktioniert,
es gab nen Tool, es gab nen Tool für Images, es gab ne Webseite, wo war das denn, es gab
ne Webseite wo man Bilder umwandeln konnte in Images die das Ding verwenden kann, muss
ich mal kurz hier in meinem Beispiel gucken, wo finde, wo ich das hab, ansonsten muss ich
dem sein GitHub nochmal durchsuchen, ja, Image, so heißt das, Image Converter 565 online,
ich weiß, klingt wie ne Pornseite, aber das Ding heißt so, der da, genau, genau, weil
da kann jetzt, man kann jedes beliebige JPEG, PNG, JPEG, oder GIF, und Leute nicht JIF,
GIF, kann man umwandeln in nen Bild, was der Kram, was das Ding versteht, seit wann streamst
du schon, hast du es, wenn mich Twitch, 45 Minuten, ja, 59 Minuten, GIF, GIF, ok, also,
laden wir uns den Kram mal runter, also ich glaube von der Größe her vom Display Leute,
ich glaube ijajaja02 tut es auch, ijajaja, ok, browse, downloads, ijajaja, Mac File,
WimDefault, Code, ja, exzellent, so, das brauchen wir jetzt in unserem Programm, da,
Generated, ijajaja, PNG, und wir machen uns mal, wir machen uns mal im Images, im Images
File, kopieren das da rein, ijajaja, und save, Images, so, also wer schon immer mal ijajaja
als Hex Array sehen wollte, der kann sich jetzt freuen, also das einmal ijajaja in
Bytes, eine Sache müssen wir noch machen, wir müssen einmal Arduino inkluden, weil das
sonst Brockmem nicht auflösen kann, und ich glaube diesen Blödsinn können wir, oh, achso,
das ist noch aus dem Main, ijajaja, ok, probieren wir es mal aus, Push Image, Push Image 00,
00, äh, warte mal, Breite Höhe, was zum Höhe, was weiß ich, wie breit das ist, wie hoch
ist das, 64 mal 3, ernsthaft jetzt, kann das nicht 64 mal 64 sein, warum muss das 64 mal
63 sein, was ist das für ein beknacktes Format, ok, Push Image, also Breite Höhe, die Sache
ist jetzt die, ich weiß jetzt nicht, ob es Höhe mal Breite oder Breite mal Höhe ist,
probieren wir es mal aus, also 63, wir können natürlich richtig, wir können natürlich
richtig, richtig pro sein, dass wir quasi sowas, sowas irgendwie, keine Ahnung, un-signed,
short, das, ich glaube, man kann in C++, ähm, beliebig, beliebig lange Sachen schreiben,
bevor eine Variable kommt, ey, das, das hört nie auf, ähm, ijajaja, B ist äh, 64, und
äjajaja, Höhe ist 63, so, dann sieht das nämlich viel stylischer aus, ich mein, sowas
wie schönes C++ gibt es eh nicht, also insofern, müssen wir das eigentlich auch gar nicht
probieren, Images einbinden, äjajaja, Moment, äjajaja, weit, äjajaja, hoch, und jetzt
das eigentliche Bild, äjajaja, ich bin ja mal echt gespannt, ob das jetzt funktioniert,
ich hab bestimmt noch, irgendwas vergessen, so, ähm, Bild, ne, das, aber Push Image juckt
das, wenn ich die falsche Höhe eingebe, weil er dann wahrscheinlich wegen dem Index zugreift,
sich gibt, so, jetzt bin ich ja mal gespannt, ob das funktioniert, Leute, äh, die Farben
sehen irgendwie nicht richtig aus, ach, ich weiß, woran das liegt, ich weiß, woran das
liegt, ne, ist nicht zu hell, die Farben sehen, ich weiß, woran das liegt, ähm, das hab ich
in nem GitHub Issue gefunden von dem, manche Displays sind irgendwie falsch rum Byte Order
und hier vertauscht es Grün und Rot, äh, ja, Grün, Grün und Rot, jetzt, jetzt gehts
wahrscheinlich, ah, ja, ja, ok, ich muss mal kurz auf mein Handy tippen und dann besser
ranzoomen, weil so wirklich, äh, gut erkennt tut man, man erkennt es halbwegs, ja, man erkennt
es halbwegs, ich guck mal kurz, dass das, Moment mal, ich steh mit meinem Stuhl auf
dem, auf dem Erbel, warte mal, so, versuch mal, dass Helligkeit abgleichen bis, ja, ok,
ich steh jetzt mit meinem Stuhl auf dem, ja, ok, dann machs, machs, ach, ach, ach, ach,
ok, okay, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
follow my sketch on Twitter
ini
war
Jetzt erkennt man ein bisschen besser was, jetzt erkennt man, wir nehmen mal das größere
Bild, wir nehmen mal eins mal ein bisschen größer, das ist zu hell, wir machen das
Display auch mal ein bisschen, ein bisschen dunkler, als erstes nehmen wir mal ein
bisschen das größere Bild, als erstes nehmen wir mal das fette hier, aja ja
überschreiben wir damit, yes, replace, zack, aja ja, jetzt, jetzt, aja ja, in groß, nehmen wir den kram, appearance by images rein, achso, nee, moment, wir müssen jetzt
jetzt brauchen wir jetzt die neue Größe, was ist das, 128, was 128 mal 100, 125, ok, dann, meinetwegen soll
wir recht sein, so, gut, ok, probieren, probieren wir es nochmal, wie es jetzt ausschaut, jetzt muss auf jeden
Fall das Bild ein bisschen größer sein, ah, ok, jetzt erkennt, jetzt muss ich nur noch das Display ein
bisschen dunkler machen, weil das Licht da irgendwie nicht, weil der Weißabgleich
irgendwie ein bisschen sackt, aber jetzt, jetzt erkennt man schon ein bisschen
besser was, oder, außer dass es auf dem Kopf steht, aber ok, benutzt du eigentlich für
dein nass Samba oder irgendwas, ja, ja, ja, mach ich, so, wir machen, dass wir machen
das Display jetzt ein bisschen dunkler, da habe ich mir aber auch schon
rausgesucht, wie das geht, weil ich nicht ganz planlos bin, übrigens, ich probiere
nochmal eine Sache, ich versuche das jetzt nochmal neu mit dem iPhone zu sagen, vielleicht kann das
nochmal neue Weißabgleich oder so machen, naja, ich glaube auch, dass die, ich habe
jetzt so schlechtes, ich habe jetzt so schlechtes Licht, wenn ich helleres
Licht rum hätte, würde es wahrscheinlich besser funktionieren, das können wir mal ausbilden, ich mache jetzt
erstmal das Display kurz ein bisschen dunkler, das geht folgendermaßen, deswegen habe ich
hier das auch auf standardmäßig ausgesetzt, das Display, ich habe nämlich was gefunden, wie man die
Helligkeit vom Display steuern kann, und zwar geht das so, ich habe mir den Kram sogar Kommentare
dran geschrieben, also, so, das ist volle Pulle Helligkeit, Null ist aus, das heißt, wir machen jetzt
mal 100, das ist so halbe halbe hell, vielleicht sieht man da ein bisschen besser was, schauen wir mal, ob man
jetzt das eine Runde, aja ja, besser erkennt, ja, das sieht doch viel besser aus,
hättest du das Bild nicht über eine Base64-Kodierung umrechnen lassen können, sofern das Programm,
ich weiß nicht, ob man da irgendwie Base64, ob das irgendwie in Base64 braucht, also ich meine,
die Frage ist ja, in welchem Format möchte die Library das hier haben, keine Ahnung, was das für ein
Format ist, keine Ahnung, ehrlich gesagt, keine Ahnung, die Library braucht das Format, was dieses
Tool hier, dieses Tool, wo ist es hin, was dieses Tool ausspuckt, so, jetzt erkennt man es aber besser,
wir machen mal kurz noch ein bisschen dunkler, 50 oder so, das ist ein inoffizieller Standard
namens C-Image aka Bitmap, oh guck mal, jetzt erkennt man richtig gut was, aber es steht auf dem Kopf,
jetzt erkennt man doch richtig gut was, oder, kann man sich jetzt gar nicht mal beschweren hier,
ich guck mal, wie hell das jetzt ist, wahrscheinlich ist das total dunkel, ne, geht eigentlich, geht
eigentlich, ist nicht so übertrieben, also ich glaube, das Problem, wenn ich das Display zu hell
mache, ist folgendes, wenn ich das Display zu hell mache, dann ist die Umgebung zu dunkel,
dann kriegt das, da kriegt das die Kamera hin, so lassen wir das, so lassen wir das jetzt erstmal,
so und jetzt machen wir die Rotation noch mal auf 3, dann müsste es, dann müsste es sogar
richtig rum, Aja, ja, saa, so Achtung, Pause Champ, Pause Champ, ha, und richtig rum, achso,
Moment, habe ich das im Stream auf den Kopf gestellt, warum habe ich das denn im Stream
auf den Kopf gestellt, das ist doch total bescheuert, ich, da dreh ich das in OBS einfach mal rum,
in das hier Transform, Rotate, ha, Aja, ja, so ist das doch gut, so jetzt haben wir die
Display Library ein bisschen ausprobiert, allerdings muss ich natürlich sagen, wirklich
sinnvoll ist das jetzt net, dass wir da Aja ja drauf anzeigen lassen können, was für
IP-Cams nutzt du noch mal, ich will mir IP-Cams, ganz ehrlich, alles Müll, ich hab mir ja
letztens 4 Kameras gekauft zum ausprobieren und eine schlechter als die andere, ich hab
mir einmal die da gekauft, die kann nämlich, ich hatte einen 4x optischen Zoom, ich hab
mir die hier gekauft, ähm, dann irgendwie eine billige China für 30 Euro, die da, ne,
ja die da, äh, ich wollt gucken, welche billig Cam besser ist und die sind alle scheiße,
die hier, so, und, äh, äh, äh, achso und die hier, so, also von allen Kameras muss
man sagen, vom Handling ist das hier mit Abstand die beste, leider hat die kein WLAN und geht
halt nur über PoE, was eigentlich nicht verkehrt ist, allerdings hab ich gerade an der Stelle,
wo ich die Outdoor-Kamera hinstelle, hat gerade kein PoE-Kabel am Start, äh, ja Kingwall,
wenn du eine ordentliche findest mit Stromversorgung über 5V, 12V oder wie auch immer und WiFi,
dann nehm ich die sofort, aber irgendwie find ich da keine, so und jetzt passt mal auf,
also diese Kamera fand ich ziemlich gut, die hat ein gutes Webfrontend zum konfigurieren,
ähm, macht auch einen guten Eindruck, also ich war echt zufrieden mit der Kamera und
ich hatte die jetzt eine Woche draußen hängen und jetzt ist sie kaputt, der Flash-Speicher
ist kaputt, nach dem Reboot sind alle Settings weg, nach einer Woche Flash-Speicher im Arsch,
hat sich am, hat sich Sonntagmorgen oder Samstag, letzte, warte mal, nee, irgendwann, irgendwann
mit, irgendwann, Montagmorgen oder irgendwie so war das glaub ich, hatte sich reset und
hab ich nachgeguckt, okay, jedes Mal wenn ihr Reboot, der Flash-Speicher ist kaputt,
jedes Mal wenn ihr Reboot, vergesst ihr alle Settings, also voll für'n Arsch, ja hickwischen
finde ich keine, die Wi-Fi taugt, also ne ordentliche Wi-Fi-Kamera, ich brauch ja auch
nix mit Zoom, was, hickwischen DS, also eins muss ich sagen, hickwischen hat ja absolut
grausame Namen, ich mein DS12, blubblubblubblubblub, was auch immer, ja das ist so ne Domecam,
kann man die vertikal an der Wand mounten? Wahrscheinlich, ne? Ähm, hier, ich, JoKill,
ich mach's ganz einfach, ich schick's an Amazon zurück, ich schreib mir das mal auf
mit, mit, mit dieser hickwischen Cam, aber hauptsache WLAN, ja, so, also ich, ich erzähl
euch jetzt noch mal kurz was, also, die hier ist nach, die fand ich gut, ich hätt' mir
sogar noch mehr von gekauft, nach einer Woche im Arsch, so, die hab ich nicht weiter ausprobiert,
weil, ähm, die hat zwar optischen Zoom, aber die ist mir ein bisschen zu groß für den,
für den, für den Eingangs, also für die, für die Wand, äh, gegenüber von der Eingangstür,
also gegenüber vom Hoftor, jetzt hab ich die Eingangstür, ähm, die war mal ein bisschen
fett, die hier, also es kann durchaus sein, dass die hier funktioniert, die werd ich wahrscheinlich
an die Garage machen, da wo ich auch von dem Vierfachzoom bisschen was hab, ok, das Ding
sieht aus wie von 1995, aber ich mein, wenn sie funktioniert, ist ok, boah, ok, ich mein,
vielleicht, vielleicht hat Qualität einfach seinen Preis, ja, die anderen Cams, die ich
gekauft hab, waren halt alle richtig billig, die gibt's, die gibt's auch bestimmt günstiger,
oder, die gibt's, die gibt's auch bestimmt günstiger zu kaufen, hm, gut, aber ich mein,
für den Preis, den ich an Müll ausgegeben hab, zumindest, ich mach jetzt erstmal fertig,
also, die hier, die heb ich mir auf, die mach ich wahrscheinlich an die Garage, äh, die
mach ich wahrscheinlich an die Garage dran, da sie vom Vierfachzoom was haben, also zu
der kann ich nichts sagen, ist genauso gut wie die hier, plus die ist mal kaputt gegangen
nach einer Woche, was das Webinterface und so angeht, also an sich eigentlich ganz gut,
weil ich das hier wahrscheinlich ein bisschen für den Arsch, so, die China Cam ist tatsächlich
im wahrsten Sinne des Wortes, also die ist wirklich Müll, ähm, erstens schreiben sie
hier was, dass du die einrichten kannst über Webinterface und sonst was, und sobald du
dich verbindest, per Webinterface, auf die China Cam, ich mach das ja so, um die Kameras
zu testen, weil ich will die nicht ins WLAN packen, um die Kameras zu testen, ich hab,
mach ich mal den Raspberry Pi an, der selbst im WLAN ist, und, äh, ich hab einfach einen
DACP-Säufer laufen auf der Netzwerkschnittstelle, da ziehen sich die Kameras dann immer was,
die 128G RAM, ach, schwachsinn, wahrscheinlich unterstützt die SDs für 128G, äh, sehr
auxin, nur 12 Monate, Dankeschön, Subscription hier, Hyper, Hyper-Subscriber, zumindest angeblich
hat es ein Webinterface, wo du drauf kannst 403 verbinden, und ich bin nicht der Einzige,
und irgendwie ist das, was die hier schreiben, alles Bullshit, es gibt zwei Varianten, die
mit Webinterface, die man gut konfigurieren kann, und die Cloud-Variante, die, äh, nur
Cloud-Only ist, und das ist irgendwie die Cloud-Variante, was man nicht erkennen kann,
so, wahnsinniger Chebat, schicke ich auch zurück, alles, kommt alles weg, richtig Skammas,
so, nächste Cam, die hier, das ist so eine ganz billige China-Cam, die kostet 30 Euro
oder so, 40 oder sowas, die ist eigentlich ganz okay, das Problem dabei ist, Dahua, also
ganz ehrlich, das Webinterface kann ruhig ein Krampf sein, ich mein, das Webinterface
von denen hier, die brauchen sogar noch Flash für das Video, hallo, wer mischt denn diese
Musik immer ab, ähm, der braucht noch Flash für das Video im Browser, aber das ist mir
egal, ich greife es eh über den RTSP-Stream ab, also, ähm, und die Cam, die hat mir eine
auf Twitter empfohlen, finde ich eigentlich ganz gut, für 40 Euro, ähm, und die Sache
ist die, du brauchst dafür eigentlich nicht die China-Firmware, es gibt nämlich auf GitHub
eine Custom-Firmware dafür, ha, ich sehe schon den Chat, ich guck gleich mal nach der anderen,
also, so, und bis ich dann festgestellt habe, nachdem ich die Kamera bestellte, also, erstens,
ähm, man muss donaten, dass man den RTSP-Server bekommt, das ist okay, donate ich 5 Dollar,
hab ich kein Problem mit, die Sache ist nur die, zum Einrichten für die Kamera braucht
man die China-App und, ähm, nen Ye-Home-Account, weil die Custom-Firmware kann nicht auf die
WLAN-Funktion zugreifen, die WLAN-Funktion ist anscheinend irgendwie verschlüsselt, was
auch immer, Firmware vom Hersteller, wo die Custom-Firmware irgendwie keinen Zugriff
drauf hat, das heißt, man braucht zum Einrichten die Chinas, die China-App, ähm, die dann
erstmal schön deine WLAN-Information nach China überträgt wahrscheinlich, was ich gemacht
habe ist, ich hab mir einen extra Account eingerichtet, einen extra WLAN eingerichtet
bei mir, und, äh, das hab ich danach einfach wieder gelöscht und ne, und 10-Minute-Mail-Account
gemacht für China, alles okay, ging ja auch, und danach hab ich den Custom-ROM drauf gemacht,
die Custom-Firmware für die Kamera drauf gemacht, ähm, und dann ist mir aufgefallen,
man kann die WLAN-Settings nachträglich nicht ändern, also sprich, ich müsste das temporäre
WLAN jetzt für immer da lassen, weil sonst bootet die Cam nicht mehr, also auch übelster
Müll, so, und die hier ist eigentlich ziemlich gut, die ist total, ganz klein, ähm, und
geht wohl auch Outdoor, leider nur PoE, die hatte ich mir aber gekauft, weil ich die an
meinem 3D-Drucker, also weil ich die auf meinen 3D-Drucker, oder gegenüber von meinem 3D-Drucker
stellen will, weil die eine ziemlich gute Nightwish-Geschichte hat und ziemlich klein
ist, so, und dann ist das mit PoE auch kein Problem, also die halte ich mir auf das andere,
aber die wäre optimal, hätte die WLAN, man könnte die WLAN-fähig machen, äh, ich könnte
da zum Beispiel so ein Mini-Mini-Access-Point dran machen, und dann wäre die auch im WLAN,
so was hier, ähm, als Bridge, absoluter Schrott, ok, dann vielleicht doch nicht, aber die Teile
sind wirklich gut, für 22, 22 Euro gibt es so einen MikroTek Mini-Access-Point, und der
ist wirklich klein, der ist, weiß gar nicht, guckt euch mal hier, das liegt vorne auf der
Hand, so klein ist der, der ist quasi, also der ist wirklich mini, dieser Access-Point,
das ist Wahnsinn, was die bei MikroTek für kleinen Shit gebaut haben, da brauchen wir
ein PoE-Injector und, äh, für die Kamera, und da machen wir ein Access-Point dran, würde
funktionieren, ist ein bisschen viel gefuddelt für eine, für eine Kamera, ja, so, äh, was,
was hat eben noch einer empfohlen, die hier, oh, das ist aber ein riesen Ding, Alter, oder
nicht so groß, wie groß ist denn die, wichtig ist, dass sie ein Web-Interface hat und RTSP,
zum Stream-Abgreifen, na gut, das waren meine Ausflüge ins Kameraland, alles, alles Müll,
die hier fand ich ehrlich gesagt richtig gut, außer dass sie mir nach einer Woche kaputt
gegangen ist, also, also Crap, so, weiter, schon eine Idee für ein, äh, NVR, ja, mein
eigenes Zeug, also ich, ich brauch keine Special-NVR, was weiß ich, Archivierung und Geduldens,
ich benutze das eigentlich hauptsächlich zum Nachgucken, wenn's klingelt und sonst
was, und ich hab ja selbst was gebastelt, was meine Web-Cams alle per Web-RTC im Browser
anzeigt, hab ich euch ja hier, will ich jetzt nicht aufmachen, weil ich wahrscheinlich
wieder irgendwas leake, ähm, hol dir eine Bosch, ja, das ist wahrscheinlich so ein 20.000
Euro Ding, ne, ja, ähm, und das, was mir die Sachen auch anzeigen kann im Browser,
das hat ne ganz easy Rekordfunktion, ja, also ich hab, ich hab was eigenes gebastelt, was
ich schon seit Monaten vor hab, endlich weiter auszubauen und auf GitHub zu stellen, aber
ihr wisst, wie konsequent ich mit solchen Projekten bin, gut, machen wir mal, so viel
zum Thema Kamera, ja, ähm, ja, gucken wir uns das Ganze mal ein bisschen weiter an, dass
wir hier ein bisschen zu, zu Potter kommen, ähm, wie gesagt, wenn ihr noch was zur Kamera
hast, fragt mich, wenn ihr irgendwas ausbildungsmäßig, technisch, ihr könnt mich alles fragen im
Chat, ähm, ich find's immer gut, wenn im Chat ordentlich was los ist und ich muss sagen,
ich muss mal mein Chat mal zur Abwechslung, äh, zur Abwechslung mal wieder nicht flame,
sondern zur Abwechslung mal eine Runde den Chat loben, ähm, ich hab jetzt eine Woche
nicht gestreamt, erstens cool, dass so viele Leute instant wieder am Start sind und, ähm,
ich guck ja persönlich selbst auch relativ viel Twitch und alles, ich muss sagen, es
gibt Channel, die haben tausend Zuschauer und der Chat ist absolut tose Hose und ich
hab 200 Zuschauer und im Chat ist was los. Gut, aber das sind auch Gaming Streams mit
nicht so viel Chat Interaktion, ja, aber, aber der Chat ist wirklich Massive Poggers
mit da, easy, im Q-Chat ist immer was los, richtig. Hast du ein Informatikstudium, ich
hab nur eine Ausbildung vor 13 Jahren oder so, 13, 13, ist schon ein bisschen her. Also,
wir sind jetzt stehen geblieben, weil wir haben es geschafft AjaJa auf dem Display anzuzeigen,
es ist jetzt nicht so, dass uns das wahnsinnig viel bringt, aber was wir da schon mal gelernt
haben dabei ist, wie es funktioniert. Ein Problem, was ich mit dieser Display Library
hatte, ich versuche euch das mal zu zeigen und zwar, ähm, Moment, ich mal jetzt das
Bild hier, ich muss mal meinen String woanders hin malen, irgendwie auf, frag mich nicht,
äh, Moment, wie breit ist AjaJa und welche Höhe hat AjaJa? Höhe 125, ok, dann machen
wir mal, ich malen mal nämlich den Text nebendran, äh, äh, ne, Höhe ist 0, ist ok, Breite,
Breite ist AjaJa plus, plus 10. So, jetzt haben wir nämlich den Counter wieder oben
und jetzt passt mal auf, ich zeig euch mal was mit dem Counter. Der hat nämlich so ein
kleines Problem, ich hoffe man erkennt das auf der, auf der Vorschau mit dem Counter.
Achso, Moment, äh, ja, ich mach mal, ich mach mal das, das Image, das Image lassen wir
hier oben reinschreiben, dass ihr nur den Counter aktuellisiert. Ähm, wenn ich das
nämlich volle Pulle mit Geschwindigkeit laufen lasse, dann werdet ihr vielleicht sehen, dass,
das Display ein bisschen rumspackt. Fällt, na, man siehts nicht richtig. Fällt euch was
auf, ne, anscheinend, wahrscheinlich nicht, ne. Aber mir fällt was auf, wenn ich, wenn
ich drauf gucke. Ich glaub ihr sehts nicht richtig, damit ihr das richtig seht, muss
ich glaube ich die Schrift, die Schrift ein bisschen größer machen. Ich mach jetzt die
Schrift mal richtig fett, vielleicht seht ihrs dann auch. Zumindest, das Display flackert,
das flackert beim Refresh. Seht ihrs jetzt? Weiß ich auch nicht ob ihrs jetzt seht, aber
das flackert. Ein bisschen, ein bisschen, aber ich müsste eigentlich die Schrift, ich
müsste eigentlich die Schrift noch größer machen. Ähm, machen wir mal was anderes.
Äh, umso, umso größer und umso komplizierter die Schriftart ist. Ähm, Load Free, ne, Entfond,
hallo? Rischel Studio, what the fuck? Rischel Studio, was ist los? Naja, TFT. Einfach mal
IntelliSense abgekackt. Ich zeig's euch nochmal viel deutlicher. TFT, Fond, ich muss aber
erst noch, ähm, Z-Free-Fond. So, und, Mono. Wir machen mal einen großen Fond, äh, Free-Mono-24,
überhaupt so leht. Ne. Ja, und? So, und jetzt müssen wir einen anderen Fond haben und dann
sieht man's, dann sieht man's noch besser. Weiß ich ob der Comic Stunts kann, eher nicht.
Ja, jetzt, jetzt sieht man's gut. Jetzt sieht man's gut. So. Man kann dagegen was machen.
Ähm, also das Problem ist, übrigens, ich kann euch sagen, warum man's bei den eingebauten
Schriftarten nicht gesehen hat. Das Ding hat drei verschiedene Sachen, wie es rendern
kann. Das kann die eingebauten Schriftarten rendern, ähm, und, ich muss aber trotzdem
Ayaya einplanten, weil ohne Ayaya geht das, geht ja hier nix, ja. Das bräuchte FreeSync,
ja. Also, das kann die eingebauten Fondarten relativ schnell rendern, deswegen, also diese
Standardfonden, deswegen hat man's kaum gesehen, deswegen hat man's kaum gesehen mit den Standardfonden.
Wenn es FreeType oder sonstige Dinger, frag mich nicht, Fondarten rendert, dann spackt
es rum und wo es richtig rumspackt ist, wenn man Anti-Aliast-Fonds rendert. So, dann ist
das, dann ist das, dann ist das richtig, dann ist das richtig. So, es gibt was was man dagegen
machen kann, und zwar, man kann das Ganze als Sprite rendern und dann, wenn das Sprite
fertig ist, es erst auf den Bildschirm anzeigen lassen. Das ist insofern ganz praktisch, weil
es dann halt auch nur die Teile Refreshed, die Refreshed werden müssen und dann flackert's
nicht. Geht angeblich, hab ich hier gelesen, ja, äh, auch auf GitHub. Wir brauchen jetzt
bloß mal ein Beispiel für das Sprite. Kann man einem Display FreeSync machen, wenn das
von, nein, nein, nein, Schwachsinn. Ich hab nur FreeSync gerade gesagt, das ist Blödsinn.
Hat damit nichts zu tun. FreeSync ist ja im Prinzip eine Technik, wo du mit deiner Grafikkarte
dem Monitor Bescheid sagen kannst, sobald das Bild da ist und da Refreshed dann. Das
gibt's hier in der Art und Weise gar nicht. Jetzt muss, man muss auch fair, fair, fair
sein. Das ist jetzt ein relativ unrealistisches Szenario. Ihr seht, wie schnell ich hier auf
das Display draufschreibe. Aber auch wenn ich ein bisschen langsamer mache das Ganze,
weiß nicht, ob man es dann erkennt, es flackert beim Refresh und das ist unangenehm, finde
ich. Seht ihr es? Es flackert, es flackert auch ein bisschen, selbst wenn es so langsam
drauf ist. Es flackert immer, es flackert im Prinzip immer beim Refresh. So, und was
man dagegen machen kann ist, das auf den Sprite zu rennen. Da müssen wir bloß mal hier nachgucken,
dass ich ein Beispiel, dass ich irgendein Beispiel finde. Der andere Seite, ich kann
mal in meinem Spickzettel gucken, weil ich hab mir ein paar Sachen vorfeld kopiert.
Da kann man das mal ausprobieren. Sprite, achja, hier. Exzellent. Okay, das heißt wir
machen mal ein Sprite, falls man das hier so machen kann. Ah, gut, komm. Sag mal, diese
Musik, wer mischt die ab? Die ist mal übelst laut und mal übelst leise. Die können sich
da gar nicht entscheiden. Dürfen deine Azubis auch ein Spickzettel verwenden? Klar, ist
mir doch egal. Nee, die können sich echt nicht entscheiden mit der Musik, ob das laut
oder leise sein soll. Best of Chillmix. Merry Christmas Chillmix. Perfekt jetzt für im Sommer.
Exzellent. So, so, so, so, so wird hier gechillt. Alles klar. So, man muss sich den Sprite anlegen
und jetzt, anstatt dass man hier die Sachen direkt drauf schreibt auf das Display, schreibt
man die Sachen auf das Sprite und das Sprite schreibt man auf das Display, wenn es fertig
ist. Soweit, wie ich das jetzt kapiert hab. So. Also, bereiten wir das ganze mal vor.
Das heißt, wir machen jetzt hier Z-Font. Z-Font. Dahin. Und wir können auch mal das
Image drauf pushen, ist auch gut. Bildest du aus? Ich muss mich manchmal ein paar Azubis
kümmern, ja. Ach nee, was bildest du aus? Hauptsächlich Linux und Netzwerk-Geschichten,
die ich mit den Azubis mache. Das ist so eine eigene Buffering-Geschichte. Zumindest soll
die Library angeblich mit Sprites im Endeffekt viel schneller klarkommen, weil es auch besser
checken kann, wo sich was geändert hat. Zumindest soll es weniger flackern. Das müssen wir
erstmal ausprobieren. Ihr seht ja da oben, flackert das erst, fuck. Also. Push-Image,
ich muss jetzt mal kurz nachgucken, wo ich die Sache mit dem Sprite mache. Genau, jetzt
muss man, dass das Ayaya als Sprite überhaupt funktioniert, muss man dem sagen Farbtiefe
16 Bits, also 2 Bits Farbtiefe. Sonst sieht Ayaya ziemlich kacke aus. Create, Sprite,
TFT, genau, also wir wollen das so breit haben wie das ganze Display und so hoch haben
wie das ganze Display. Übrigens, die nächste Sache wird viel spannender, wir gucken, dass
wir das Multithreaded machen. MonkaS. So, jetzt haben wir hier der Sprite, da malen wir
jetzt unseren String drauf und wenn ich jetzt nicht ganz verkehrt liege, dann müsste das
eigentlich, ich gucke mal kurz nach, da müsste das eigentlich so funktionieren. Ach nee,
ha, eins habe ich noch vergessen. Swap, Swap Bites. Sonst haben wir nämlich Ayaya wieder
falsch rum. Übrigens, wollt ihr mal Ayaya falsch rum sehen? Wollt ihr mal Ayaya Inverted
Colors sehen? Nein, dann Cursed, Cursed Ayaya, da lasse ich das nämlich mal weg. So, ähm,
dann müssten wir sagen, übrigens das müssen wir nachher machen, dann müssen wir dem noch
sagen, ähm, einmalig Fill und zwar komplett, komplett schwarz machen in den Hintergrund.
Ah nee, Fill Sprite. Einmal komplett schwarz machen, das ganze. So, ähm, dann können wir
unser Build pushen. Ja, unser Counter soll hier in Ruhe rum, ups, in Ruhe rum countern,
das interessiert mich jetzt nicht. Ähm, Set. So, das ist die Stelle, wo er anfängt zu
schreiben, wenn man es nicht damit macht, deswegen das brauchen wir an der Stelle nicht. Wir
geben er explizit an, wo er das ganze hinschreiben soll, also, dass er quasi ans Ende vom Bild
auf, äh, oben am Bildschirm ran schreiben soll. Ich weiß, dass das gut funktioniert,
Multi-Swap mit ESP, das werden wir auch gleich ausprobieren. Aber das, äh, also, was mir
ja vorschwebt, ist folgendes. Also, was mir vorschwebt, ist folgendes. Also, das Ziel
heute ist ja, dass wir, äh, dass wir, dass wir, dass wir Firmware-Updates machen können
übers WLAN und den Progress auf dem Bildschirm sehen. Äh, was mir vorschwebt, ist, dass
der Update-Server, also der, der, aber da hab ich schon ne fertige Klasse für, dieser,
also sprich der Web-Server, wo ich das Update pushe, läuft mit nem eigenen Task und das
Build-Refreshen läuft auch mit nem eigenen Task. Also sprich so, dass wir möglichst
gut ne ESP32 ausnutzen und das alles schön flutscht und das eine nicht auf das andere
Ausgabe warten muss. Weil grade, wenn man hier in der Main-Loop was schreiben würde
aufs Display und es dauert irgendwie 100 Millisekunden bis es aufm Display ist, ist
voll für n Arsch. Ich will meine Main-Loop-Säule so schnell durchrattern wie geht und nicht
irgendwie auf Display-Ausgabe warten. Das würde ich gerne asynchron auf nem anderen,
anderen Core machen. Mal gucken, wie wir das gebacken kriegen. So, äh, Drawstring,
brauchen wir jetzt noch irgendwas? Achso, genau, ha, eins, eins hab ich vorher noch
vergessen. Ähm, wir müssen noch die Text-Color, Set Text-Color und dem kann man jetzt sagen,
wer möchte, dass der Text weiß ist und dass der Hintergrund schwarz ist. Ähm, da kann
man noch eine Sache machen, die relativ praktisch ist, wenn man seinen Text ausrichten will.
Man kann ihm sagen, an welcher Stelle quasi, wenn man irgendwelche ausricht, also im Angenommen
ich sag, der Text soll zentriert sein, hier kann ich ihm sagen, wo der Anker von dem ganzen
Text ist und das ist jetzt Top-Left, also linke obere Ecke, also sprich, der fängt
auch wirklich immer oben links in der Ecke an. Ähm, so, das war's. Und jetzt müsste
der eigentlich, achso, nee. Übrigens, was ich hier mache, ist falsch, nicht TFT, sondern
PUSH. Und jetzt sollte der, wenn das alles richtig funktioniert, ohne zu flackern, ähm,
die Sachen auf dem Bildschirm schreiben. Gucken, ob das funktioniert. MonkaS Smoke, ja. Ah,
Cursed! Okay, wir machen das ganze doch mal rein. Okay, übrigens, der, der Font funktioniert
nicht, ich probier mal nen Default-Font aus, ob der funktioniert. Oh, hups, Set Text, Moment,
das da übrigens. Ja, der Chat hat wieder aufgepasst, Big Brain Chat. Set Text, Color und ne Position
ist bescheuert. Ja, da hab ich vertippt. So ist richtig. Oh. Aha! Und das flimmert schon
relativ, schon ne ganze Ecke weniger, wobei das immer weniger flimmert, ähm, mit den
eingebauten Schriftdaten. Probieren wirs mal so. Ich glaube, das funktioniert mit diesen
Schriftdaten nicht. Ähm, ich hab schon was vorbereitet und zwar, kennt ihr diese Standard-
äh, Android-Schrift? Guck mal, es flimmert weniger, seht ihr das, Leute? Also, da kann
man jetzt nix sagen, man sieht fast alles. Roboto, genau, Roboto Mono. Hast du noch Kontakt
zum Friseur? Ja. Also seht ihr, Leute, mit dieser, mit dieser Technik ist das, ich könnte
mir vorstellen, der Schreibvorgang ist nen Ticken langsamer, als wenn man direkt auf
das Display schreibt, aber dafür flimmert das, flimmert das nicht so. Oder aber es ist
deutlich schneller, ähm, weil er nur das aktualisieren muss, was er sich aktualisiert
hat. Ne, Roboto, Roboto nehmen wir als, als Fontart hier. Roboto Mono Bolt nehmen wir
als Fontart. Ja. Das hier. Roboto Mono Bolt. Hab ich das hier mit installiert? Wenn nicht,
muss ich noch mal installieren. Ja. Yes. Max hat Doppelbuffbrick entdeckt. Ich hab das
Rad neuer erfunden, ja. Aber das ist cool. Guck mal, es funktioniert ohne, dass das irgendwie,
ähm, na Doppelbuffering im eigentlichen Sinne, na doch ist es, ist es, ist es im Endeffekt,
weil ich male es in einen Buffer, den ich nicht anzeige. Wann gibt's denn mal wieder
YouTube-Content? Ich hab drei Themen, die ich die ganze Zeit schon machen will, aber
irgendwie kann ich mich nicht dazu überwinden. Ich hoffe, ich krieg's vielleicht entweder
heute Abend oder morgen früh, nee, morgen früh muss ich Stream machen, irgendwann morgen
hin, da ich zumindest zum aktuellen PC-Hardware-Zeug, wo ich mich äußern wollte, also, ne, mein
Problem ist ja, ich möchte mir schon seit einem Jahr einen neuen Rechner kaufen und
ich kann mir nix kaufen, weil es kein sinnvolles Upgrade gibt. Da wollte ich mich mal drüber
auslassen. Ja, also im Prinzip ist es wirklich so eine Art Doppelbuffer, so wie der Flow690
sagt, weil ich schreibe es erst in einen Buffer, der nicht auf dem Bildschirm angezeigt
wird und hier switche ich dann quasi das Bild, also hier pushe ich das vorgerenderte Bild
quasi nur auf den Bildschirm. Wolltest du ja mal 3059X holen? Ja, wollte ich, notgedrungen,
weil es nichts anderes gibt, aber es lohnt sich nicht. Das Upgrade von einem 8700K ist
einfach zu gering, außer man profitiert von den zweieinhalb mal mehr Kernen. Aber mach
ich nicht. Was soll ich denn, guck mal, ich hab permanent eins bis zwei VMs laufen plus
irgendwelche Spiele, die auch ein bisschen Leistung ziehen teilweise, das juckt den Rechner
überhaupt gar nicht. Ich mein, es kann doch nicht sein, dass ich den Rechner vor drei
Jahren gekauft habe mit 8700K, wobei die 1080T, die hatte ich noch vom letzten Rechner und
die hab ich damals auch von den Media gekriegt, aber der hätte jetzt nicht Unsummen gekostet,
den Rechner, den ich damals gekauft hatte, selbst mit 1000 Euro für die Grafikkarte.
Dass der drei Jahre später immer noch eines der besten ist, das kann doch nicht sein,
es ist doch vollkommen verkehrte Welt. In der Zeit hast du dir ne Xbox, ne Xbox plus
ne Playstation, normal ne Playstation plus und ne Switch kaufen müssen, dass du konsolmäßig
aktuell bist und mit einem PC drei Jahre easy. Naja, so also wir haben es geschafft,
es läuft flüssiger. Sowohl Ayaya flimmert nicht, als auch unser Counter flimmert nicht.
Das ist natürlich eine äußerst nice Sache. Ayaya ist leider ein bisschen groß. Ayaya
ist ein bisschen groß. Kifke in elf Monate, dankeschön. Exzellenz Subscription. Dankeschön.
Ein bisschen groß, dass man den Counter nicht richtig sieht. Ich mein wir könnten, wir könnten
den Counter einfach, ähm, ups. Wir könnten den Counter einfach overflowing lassen. Mal
gucken ob das funktioniert oder ob das dann crasht. Ich hab noch nie, ups, äh Moment.
Ich hab noch nie absichtlich irgendwas overflowing lassen beim ESP32, aber wahrscheinlich wird
das einfach overflowen und es wird nix passieren. So jetzt sollte der eigentlich bis 256 gehen
und ne, wobei wie lang war das Short? Sehen wir gleich. Ne, wie lang war das Short? Ist
es 8 Bytes? Ne, äh, ach ach, ach was weiß ich. Nehm einfach. Jetzt vorbei. Jetzt geht's
nur bis 256. 16 Bit. Ja, so. So, mal gucken ob es overflowet. Ja, so ungefähr. Spack
ein bisschen rum bei, aber okay. Naja, das liegt jetzt aber an mir, das liegt jetzt aber
an mir, weil ich schreib hier immer nur eine Zahl. Also ich müsste eigentlich, äh, sowas
hier machen. Dann ist das Problem weg. Also ich muss einfach noch ein paar Leerzeichen
dahinten schreiben, dass der die Zahl, dass der die Zahl überschreibt. Das passt auf,
jetzt ist es gefixt. Jetzt ist es gefixt. Habt ihr gesehen? Wisst ihr was mich ja mal
interessieren würde? Wie lang das dauert. Was, was würdet ihr schätzen? Was, was würdet
ihr schätzen? Wie lang dauert das Malen und auf Bildschirm pushen? 20 Millisekunden, 30,
eine? Weniger als eine? Ich hab echt keine Vorstellung. Wie lang dauert das? Probieren
wir mal aus. Machen wir mal Mikros für die Sache, dass es vielleicht nicht, dass es
relativ schnell ist. Was ist denn bei Push-Image eine, äh, nee bei Push-Image, hier meinst
du, oder? Nee, ach Moment, du meinst, äh, da. Also wenn du eine kleinere Größe einstellst,
ist es abgeschnitten. Wenn du eine größere Größe, können wir ja mal machen hier. So,
dann ist es abgeschnitten. Wenn du was einstellst, was größer ist, dann crash da. Hast du dir
mal eine billige Capture geguckt? Okay, ich hab nix gesagt. Das ist, tipp. Anscheinend
muss man gucken, dass es in der richtigen Größe ist. Oder irgendwie rescalen vorher.
Frag mich nicht. Welche Capture-Card meinste, Herz93? Übrigens, irgendjemand wollte doch
vorher einen Link zu was posten, was ich mir angucken soll. Äh, vielleicht hab ich das
übersehen. Aber, ah ja, ich geh mal kurz durch den Chat durch. Ich hab ihm ein paar
Sachen übersehen. Hi, ich habe einen Standard-Wodafone-Router, würde aber gern mein Heimnetz unterteilen
in Sub-Netz und so weiter. Das geht wahrscheinlich mit dem Standard-Wodafone auch, oder? Sollte
ich den Router ersetzen und ein weiteres Gerät anschaffen, das es macht, um dein Netz
in Sub-Netz zu unterteilen. Ähm, ach so, hm. Nee, das geht wahrscheinlich mit dem
Wodafone-Router nicht. Weil der Router bräuchte mehrere IPs, jeweils in einem Netz eine,
dass das funktioniert. Sehr gute Frage, da wird ja wahrscheinlich nichts alles übrig
bleiben. Also, so wie ich's gemacht hab, ist folgendes. Ich hab meinen Wodafone-Unity-Media-Connectbox,
das ist ja Wodafone jetzt, und dahinter hab ich einen Mikro-Tick-Router, der das alles
für mich macht. Also, ich verwende beides. Weil du kannst es ja gar nicht wirklich ersetzen.
Du brauchst ja das ganze Wodafone-Zeug, wegen Kabelmodem und sowas. Und eine Fritzbox kann
das auch nicht. Fritzbox ist kein wirklich guter Router, Fritzbox ist ein gutes Multifunktionsgerät.
Dir wird nichts alles übrig bleiben. Dir beispielsweise einen Mikro-Tick Hex-POE oder
so zu kaufen, den da. Den empfehle ich immer gerne, weil der hat ordentlich Power für
den Preis und ist auch von den Features her top. Hinter die Unity-Media-Connectbox machen.
Ja. Ach ja, um euch zu zeigen, dass es crasht, wenn ich zu groß... Also, ich geb jetzt mal
hier die zu groß an, die Bilddimension, und jetzt sollte das ganze eigentlich crashen.
Nvidia, please, what the fuck? What is happening? Was war das überhaupt? Was hab ich da gerade
gedrückt? Alt-F3? Nee. Was hab ich da gerade gedrückt bei Nvidia? Kann mir das irgendjener
erklären? Ja. Und ich wollte euch immer zeigen, dass es crasht. Ups. Nicht. Es crasht nicht.
Es ist bloß verschoben. Ok, auch gut. Ja. Ok. Also, so viel dazu zum Router. Zum Router,
wie die Cisco-Leute das immer sagen. Chat durchscrollen. Was hat ein Rechner damals
gekostet? Wenn du die Grafikanne beißt, verdiene ich wahrscheinlich 3000€ in dem Dreh. Äh,
nee, das ist was anderes. Das ist was anderes. Das ist das mit dem E-Ink-Display, oder? Ach,
nee, den kenn ich nicht. Also, zu dem Board kann ich nichts sagen. Also, ich hab gerade
einen Link zu dem Board hier gepostet. Ich weiß, dass die auch E-Ink-Displays haben.
Was? USB-Capture die 23€ für eine Capture-Card? Ok. Soll denn das sein? Bestimmt, die haben
bestimmt das lizenziert, dass die Watch Dogs und so verwenden dürfen. Ganz bestimmt.
Aber anscheinend, anscheinend scheint es ja zu funktionieren. 23€, das kann man fast
schon einfach mal ausprobieren und gut ist. Das speichere ich mir mal. Das ist eine ganz
coole Sache, einfach mal ausprobieren. Hast du extra ein Netz zwischen dem Router vom ISP
und deinem Router? Ja. Du kannst den Custom-Router freischalten, richtig, aber du musst erst
mal einen Custom-Router finden für Vodafone, der Kabelmodem hat und alle Features, die
du haben willst und da gibt es eigentlich nichts. So, ja also dazu, ist das ein komplettes
Board oder ist das nur das Display? Nee, das ist ein komplettes Board. Aber irgendwie
kaum GPIOs, ach hier hinten sind die GPIOs drauf. Ist eigentlich auch ein ganz cooles
Teil. Ist aber ein anderes Display, oder? Ist auch ein anderer Display-Treiber, oder?
Oder nicht? Ich weiß nicht. Zumindest scheint es ein ganz normales ESP32 zu sein, was schon
mal ganz gut ist. Bloß dass es die GPIOs hinten hat und schaut es an auf der Seite. Wird
eben auch sein, scheint bestimmt, ist bestimmt auch nicht schlecht. Ok, also weiter im Text.
Wo sind wir denn stehen geblieben? Also, wir können jetzt Aja-ja malen, ohne dass das
ganze flimmert. Als nächstes, oder ich überlege mal gerade, was, ja, als nächstes, wir haben
zwei Sachen, was wir machen können, chat. Also, entweder probiere ich jetzt gleich das
ganze Multithreader zu machen, was ich eh probieren werde, oder wir gucken, wie ich
hier meinen Font rein bekomme. Das ist nämlich nicht so einfach, den Font da reinzukriegen
und sag mal, ist die Musik wieder schlecht? Ja, es wird viel zu laut. So ist angenehmer
von der Musik her. Also, ihr seht es ja hier, das ist hier zwar ein Font, der eingebaut
ist, aber ehrlich gesagt, Roboto Mono ist mein Lieblingsfont. Und da kann man ein bisschen
was lernen bei, wenn man eigene Fonts verwenden will mit dem Display, denn man muss sich
den Font generieren, den man haben will, also zum Beispiel hier ist Roboto Mono als Font,
da muss man sich generieren und dann muss man den Font irgendwie auf den ESP32 kriegen,
was Komfort AAA, kenn ich nicht, und da muss man den Font irgendwie auf den ESP32 kriegen
und da kann man was lernen bei, weil der ESP32, also man hat verschiedene Möglichkeiten da
was drauf zu bekommen. Die einfachste Variante ist das hier, Procman. Also, was der macht
ist, der speichert diese Daten im Flash, aber im Speicherbereich von der Firmware, also
im Speicherbereich von meinem Programm. Der ESP hat allerdings noch so ein Filesystem
drauf, wo ich mit der Standardpartitioniere ungefähr 2 MB, 1,5 MB, Dateien speichern
kann, wie ich lustig bin und das ist auch relativ easy zu benutzen, da muss man nur zusätzlich
Uploaden, also das macht man nicht alles hier drin, die muss man zusätzlich Uploaden und
man muss ihm auch sagen, wie er die ganzen Sachen lesen soll. Das können wir jetzt mal
machen, also wenn man Dateien auf den ESP hochladen will, ist es relativ einfach, zumindest
mit Plattform IO, da muss man einfach hier einen neuen Ordner anlegen, folder und den
muss man data, hallo, nicht da, da, what the fuck, da, ok, da, was ist das schon wieder,
was nutzt du als Cam, das ist mein iPhone gerade. So, und hier, wenn man hier in diesen
Data-Ordner was reinlegt, dann kann man das Uploaden auf den ESP32. So, und das probieren
wir jetzt mal aus, es gibt hier nämlich ein Beispiel bei denen, wie man Fonts lädt vom
Filesystem. Da muss ich mal hier in die Examples, smooth, ja sogar anti-aliased Fonts, das ist
richtig big brain, Font Demo, Font Demo 1, Font Demo, ja genau, was auch immer, und hier
macht er das ganze, also sprich, man muss den Font erstmal auf den ESP32 hochladen
auf den Flash-Speicher, Hack-Font, ich kann Hack-Font, Hack-Font ist gut, ja hab ich sogar
installiert, weil das ist mein Default, Default-Font-Hack-Regular, genau, so, gehen wir mal wieder hin, also
sprich, man muss die Sachen hochladen auf den ESP32 in Flash, in das Flash-Filesystem
und dann muss man sagen, das ganze nennt sich übrigens SPIFFS, ich hab keine Ahnung,
für was SPIFFS steht, ehrlich gesagt, Apreviation, SPIFFS, hab keine Ahnung, für was steht
SPIFFS, Serial Peripheral Interface Flash, ah, yes, alles klar, Chat, jetzt, wir sind,
muss man sagen, Educational Stream, hab ich das überhaupt drinne stehen heute, Lehrreich,
korrekt, jetzt, hier lernt man noch was, Serial Peripheral Interface Stream, Flash, we smart,
chat, kann ich mir bis morgen nicht merken, ist, eine Ohre rein, andere Ohre raus, guck
mal, bei Eats Delivery haben sie sogar was stehen, Eats Delivery, genau, Hack-Font,
so und man muss das hochladen auf den ESP32 und dann kann man hier checken, ob das im
Filesystem drinne ist und dann laden, das werden wir jetzt mal ausprobieren, wie kann
ich, ah, Moment, wie kann ich das ent, hab ich das irgendwie zusammengeklappt gerade,
nee, oder, nee, ach, nee, ich hab nur die Zeile kopiert, ich hab's nicht zusammengeklappt,
so, das heißt, dass mein Display, mein Custom-Font anzeigen kann, wir nehmen mal Hack, wir
nehmen den Hack-Font, Hack-Font ist das Beste hier, Hack-Font Bold, der ist exzellent, guckt
euch mal an, Hack-Font, top, den nehmen wir jetzt, weil ich find ihn schöner als den
hier, so, und was man da jetzt machen muss, ist, dass es übelst kompliziert, aber, das
hab ich im Vorfeld schon mal ausprobiert, man muss, um Fonts zu generieren, also diese
Library kann wohl drei verschiedene Fonts, einmal die eingebauten Fonts, dann irgendwelche
Free-Type, frag mich nicht, sonst was Fonts, und für die Big-Brain-Leute, die wir natürlich
alle, alle 200 Leute hier gerade sind, hoffe ich mal, chat, easy, gibt es noch die Möglichkeit,
Custom-Fonts hochzuladen, die Anti-Aliast werden, und das können wir uns natürlich
nicht nehmen lassen, noch mal einen schönen Anti-Aliast-Font auf unser Display zu packen.
Vorher schauen wir noch mal kurz, wie lange so ein Render-Vorgang dauert, ähm, guck
mal mal, ähm, Moment, jetzt, jetzt, jetzt, jetzt, jetzt kommen meine C-Kentnisse wieder,
äh, ach du Scheiße, also, ähm, Vorteil, was ist, ein, Moment, Printf-Formatierung für
einen, so, ähm, Unsigned-Long, was zum Teufel ist ein Unsigned-Long für einen Printf-Placeholder,
wieso bist du eigentlich in Just Chatting und nicht in Science and Technology, weil ich
es nicht umgestellt habe, äh, Unsigned-Long-Printf, weiß doch, weiß doch kein Mensch aus dem
Kopf, aha, %lu, was auch irgendwie nicht, nicht sonderlich konsistent ist, weil ich
meine, die Variable-Deklaration ist Unsigned-Long und hier ist Long, Long-Unsigned, es, es ist
auch, äh, Low-Brain, ja, so, gucken wir mal, wie lange das dauert, wenn der sowas hier
rendert, also quasi das, das, das neue Sprite auf das, auf das Bild raus, äh, Printen,
gucken wir mal, äh, 14 Millisekunden, 14 Millisekunden, das ist, das dauert ein bisschen, 14 Millisekunden
ist relativ ordentlich, ich meine, nicht, dass es bei der Anwendungssache stören würde,
ja, ähm, wo liest du die MS ab, hier, das sind, das sind Mikrosekunden, 14 da sind 14
Millisekunden, also umgerechnet Millisekunden sind ungefähr 14 Millisekunden, hier speichert
er sich Mikrosekunden beim Start und hier nimmt er die aktuelle Sache minus dem Start,
also sprich, das wie lange es, wie lange es gedauert hat, das ist so der, der, der Easy-Mode-
äh, Clock-Dings-Timer schlechthin bei Arduino, 14 Millisekunden, das ist in der Tat ziemlich
viel, aber für den Anwendungszweck vollkommen ausreichend, wo wir wieder mal am Thema sind,
deswegen muss man das Ganze auch Multithreaded machen, zumindest schwebt mir das vor, das
Multithreaded zu machen, weil es viel einfacher ist dann zu sagen, ok, ich schreib das jetzt
Async, also, äh, Async, Chatnet, nicht das wieder, na, also, Asynchron, ich sag einfach
nur schreib das raus, übergebe das dem anderen Thread und der andere Thread schreibt mir
das dann aufs Display, während ich hier weitermachen kann in der Main-Loop, das ist doch eigentlich
ganz nice, ja, 60 FPS ist ok, ja, es ist nicht wirklich im Vergleich zu normalen 60 Hz, aber
für so eine Operation auf so einem Controller ist 14 Millisekunden, also 14 Millisekunden
ist für solche Sachen, ist das eigentlich nicht wenig, ähm, wie gesagt, in 14 Millisekunden
kann ich wahrscheinlich prim zahlen, das fragt mich nicht bis wohin berechnen, ja, aktuell
sind wir ziemlich genau bei 60 FPS, ja, gut, also weiter im Text, ähm, wir wollten uns
hier Font, Font generieren, so, und um sich nen Font selbst zu generieren, das ist übelst,
wie hieß das, so, das ist total wir, also, so sehen unsere Fonts aktuell aus und so sollen
unsere Fonts aussehen, also wir wollen die Fonts schön Anti-Alias haben, dass das auch
was fürs Auge ist, dass das auch was hermacht, ähm, so, und die Sache ist jetzt die, damit
man den Kram, man braucht diese Fonts, also die Schriftarten, braucht man in diesem Format
VLW, ein Schriftartenformat, den die wahrscheinlich nur die Big Brains Leute unter uns je bisher
gehört haben, also ich hab's noch nie gehört, ich weiß, ich hab ihr schonmal von einem
Schriftartenformat VLW gehört, ich nicht, ähm, und das erzeugt man mit einem extra
Editor zum Fonts erzeugen, oh, auf Java-Basis ist das ganze auch noch, also sprich, wir
müssen uns allen Ernstes jetzt was auf Java-Basis installieren, nur, damit wir Fonts generieren
können, das ist ziemlich low, ja, oder, Processing, ich weiß nicht was das ist, ich hab keine
Ahnung was das ist, wir werden uns den Kram jetzt bloß für Linux 64bit runterladen, was
ist das überhaupt, was, was ist Processing, welcome Processing, Dan explains, wenn Dan
das explains, das ist alles gut, Processing Java für Ingenieure, so, also, VGAT, wir machen
mal einen eigenen Ordner, mkdir, äh, Dance Game, passende Ordner für die Java-Anwendung,
VGAT, so, weiß gar nicht ob ich überhaupt Java installiert hab, oder Java, wie die coolen
Sachen, Leute, Leute, Java, Java, ASMR Stream, so, ähm, also, entpacken wir das ganze mal,
dein Mic ist kacke für ASMR, ja das stimmt, das ist nicht teuer genug, das nutzt Coding,
was, das nutzt Coding Train immer für seine Game in X Minuten Programmiervideo, hat geknackst,
oh, es hat geknackst, hab ich übersteuert gerade, Java, ja das hat geknackst, weil ich
dran gegriffen hab, das ist, wenn ich hier an den Mikrofonarm greife, ich mein, ich
kann das natürlich auch die ganze Zeit so von uns, aber das machen wir nicht, weil das
ist ja gar nicht Sinn und Zweck der Übung heute, ja, manchmal komm ich mit bescheuerten
Ideen dabei, so, jetzt gehen wir mal hier rein, starten den Kram, und ich hoffe, dass ich
irgendeine Java Runtime da hab, gucken wir mal, ob's startet, oh, das ist gestartet,
ich hab legit kein Plassen Schimmer, was das hier ist, wirklich nicht, keine Ahnung, äh,
Sketch Excellent Speichern, ich will das auch gar nicht verwenden, was ich verwenden will
ist das hier, Create Font, und hier kann man nämlich Schriftarten im VLW Format erstellen,
was auch immer, also, wieso keine Facecam, weil ich ESP32-Cam oben rechts hab, übrigens
meine Frage, wie findet ihr das mit der Kamera, wie gefällt euch das, dann sieht man wenigstens
auch mal was, ne, ich find das viel spannender, wenn man auch mal sieht, was passiert, so,
Font, also, Hack, Hack Bold, 48, gut, wir machen mal 48, wir machen mal 48, und wir machen
24, ich glaub, die zwei Sachen sind, eins sind, sind, sind ganz gut, Schriftgröße,
also Hack 24 für kleine Sachen, und Hack 48 für große Sachen, excellent, so, und jetzt
machen wir den Shit wieder zu, ich will's nicht, ich will's gar nicht sehen, so, wie
war das, Sketch, Sketch Data, da liegt's, so, also, wir müssen den Kram jetzt kopieren,
die Fonts, hallo, Hack, what the fuck, warum hat das kein Auto für Vollständige, normalerweise
macht's das so immer, also, auch wenn ich klein geschrieben hab, obwohl's groß geschrieben
wird, so, und jetzt muss ich das kopieren nach Documents, Platform.io, Projects, Display,
und dort in den Data-Ordnern, so, und jetzt seht ihr, jetzt hab ich die Schriftarten hier
drinne in meinem Projekt, und nun muss ich die Dinger uploaden, äh, ich uploaden, ähm,
ich brauch ne Shell, nun muss ich, oh, ich brauch ne Platform.io Shell, wohlgemerkt,
ähm, und jetzt muss ich die Sachen uploaden zu meinem ESP32, also sprich, ähm, eine optionale
leichte Transparenz wäre gut, das ist aber ganz schön advanced, ich weiß nicht, ob's
das sowas kann, äh, übrigens, jemand hat vorhin gefragt, was wir heute machen, vielleicht
sollte ich das nochmal kurz erzählen, weiß gar nicht, wer das war, ich hab's, ich wollte
es eigentlich machen, hab's dann voll verdrängt, ähm, hier, Phirps2 hat gefragt, also, was
wir heute machen ist, ich hab mir nen TTGO, äh, T-Display gekauft, also sprich, ein ESP32
mit Farbdisplay, was ich machen will ist, Firmware-Update übers WLAN, und, ähm, Status vom Firmware-Update
anzeigen, auf dem Display. So, ähm, ich glaub, so ging das, also sprich, der uploadet jetzt
diese zwei, das, das braucht manchmal ein bisschen, das, äh, spackt, spackt öfters
mal ein bisschen rum, das, das ist, das ist nicht so ganz zuverlässig, dieser upload auf
den ESP32, vielleicht muss ich auch mal kurz einstöpseln, wieder aus- und wieder einstöpseln
und so, weiß man nicht so genau, das spackt manchmal ein bisschen rum, auf jeden Fall,
der, der uploadet jetzt, die, diese zwei Fonts in den Flash vom ESP32, in das Flash-File-System,
das Gute daran ist, nochmal so, warum man das macht, ist, man hat beim ESP32, man hat
ungefähr 1,3 Gigabyte, oder sagen wir, 1,25, nicht Gigabyte, was laber ich denn, Megabyte,
Gigabyte, ähm, also man hat ungefähr 1,25 Megabyte Platz, Alter, kannst du mal uploaden,
auf dem ESP32 für seine eigene Software, 1,25 Megabyte, das ist jetzt nicht ultra viel,
aber auch nicht extrem wenig, dann hat man noch eine zweite Partition, 1,25 MB, ähm,
für Updates, dass man quasi, während man, während das System läuft, man schon einen
Firmware-Update draufschreiben kann, was genauso groß ist, und, ähm, dann hat man
noch den restlichen Speicher von den 4 MB, hat man ungefähr nochmal, ungefähr nochmal
so 2,1,5 MB Speicher-Flash-File-System, und in das Flash-File-System laden wir das Ganze
hoch, denn unser Sketch, also das Firmware nennt sich Sketch bei Arduino, hat halt eine
gewisse Größenlimit, und da kriegen wir die Fonts gar nicht rein, das heißt, die Fonts
schieben wir auf das Flash-File-System, und dann laden wir das so hoch.
Nutzt du deine eigene WLAN-Upload-Lib, die du im Stream gebastelt hast?
Ja, aber die habe ich mittlerweile ein bisschen verbessert und erweitert, die ist mittlerweile
ziemlich gut, finde ich, die hat sogar Lifetime-Events, also sprich Update-Started, Update-Ended,
Update-Progress und sowas, das ist eigentlich ganz gut geworden, ich ziehe das Ganze mal
kurz raus und stecke es wieder rein, mal probieren, ob das funktioniert jetzt, weil irgendwie
der Upload, der Upload mag nicht. Ah, jetzt funktioniert's. Übrigens, hört man mich
eigentlich von der, hört man mich hier irgendwie über den iPhone Stream? Ne, oder? Ne, ne,
hat keinen Sound. Moin Nico, so gut, jetzt hat er das Ganze
hochgeladen auf den ESP32-IP-Lig, Monka-IP-Lig, ja. So, und nun können wir gucken, dass wir
zugreifen können anhand dieses Tutorials auf die neue Schrift, also das Ziel ist, dass
die Schriftart, wir machen gleich Ayaya mal ein bisschen kleiner vielleicht, warte mal,
wir hatten noch eine kleinere Ayaya-Variante, dass man das ein bisschen schöner sieht mit
der Schriftart. Also unsere Schrift sieht aktuell so aus und wir wollen sie so aussehen
lassen. So, wir haben die Schriftarten hochgeladen, jetzt müssen wir das machen, was der hier
auch im Tutorial geschrieben hat. TFT Begin, Set Total, hier, das da. Wisst ihr was, wir
machen, wir, ja, vorbei, wir können's, wir können's uns mal kopieren, wobei, ich mach
das wahrscheinlich anders. So, im Setup, im Setup müssen wir jetzt gucken, ob die Schriftarten
da sind. No way. Unser, unser Flash geht immer. Lul. So, Exist, das ist das, das ist das Wichtige.
So, also wir machen ein If und jetzt gucken wir, ob unser Font da ist, also in dem Beispiel
ist es NotoSansBolt15 und bei uns ist es halt HackBolt24 und HackBolt48. So, und wir wollen
übrigens einen Fehler schmeißen, also sprich, äh, keine Ahnung, Print, ja, FontsNotFound,
CakeW, ok, und dann ESP Restart. Hat zwar keinen Sinn zu restarten, aber was sollen
wir machen, wir können ja, wir können ja, wir können ja schlecht, schlecht weiter machen
ohne, ohne die Fonts, wenn man die Fonts verwenden wollen, ne. So, also, und übrigens das If
ist komplett falsch, IfNotExists oder NotExists, ne, Moment, äh, LowBrain, warte mal, ne, stimmt
das, was ich jetzt mache, ne, oder, doch, doch, jetzt richtig, ne, naja, ja, oder, ne,
und, und müsste das sein, oder bin ich jetzt einfach total, ne, ne, mit und, mit und wird
es ja nicht stimmen, ne, es, also, mal angenommen, der, der Font hier existiert nicht, dann ist
das hier true, genau, wenn irgendein Font nicht existiert, dann, äh, ja, ja, dann,
dann ist das genau, weil ansonsten, wenn das hier true ist, geht er gleich hier rein, äh,
wenn das hier falsch ist, macht er den nächsten, und wenn der true ist, geht er hier rein, ok,
das passt, weil mit und wird es nicht funktionieren, bei und, das würde nur funktionieren, wenn
beide Fonts nicht da wären, das ist, ja, ne, ne, das, das ist ja nicht das, ok, also
Fonts not found, ok, ähm, und dann, wie geht's weiter, Fonts missing, bla, bla, bla, und
jetzt Fonts load, load font, genau, ok, also, set font, dann machen wir das hier weg, load
font, ähm, load font, hack bold, achso, in welchem Format muss man das eigentlich hinschreiben,
äh, so, Moment, what the fuck, ah, ne, nur ohne Endung, also so, ok, hack bold 48, so,
und jetzt sollte der unseren Font verwenden, gucken wir mal, ob er das macht, macht er
das, ah, guck mal, hack font, excellent hack font, da ist er, ganz schön fetter Text,
ja, er hat den Font geladen, guck mal, und jetzt braucht er, mit dem custom font braucht
er schon 20 Millisekunden das ganze zu rendern, also, wir haben es nicht schneller gemacht
gerade, geht auch kursiv, klar, du kannst jeglichen Font nehmen, der du willst, ja, kannst
auch kursiv machen, aber kursiv, das ist ein Mono-Spell, übrigens, ganz wichtig, sollte
ich vielleicht an der Stelle auch nochmal erwähnen, für solche Sachen, wenn man, ähm,
wissen will, wo man auf dem Display ist, macht euch das Leben einfach mit Mono-Space-Fonts,
also es gibt ja zwei grundsätzlich unterschiedliche Arten von Fonts, du hast, what the fuck, du
hast Mono-Space-Fonts, sowas wie das hier, Mono-Space-Fonts bedeutet, jedes Zeichen,
übrigens auch das Leerzeichen, äh, ist exakt gleich breit, also sprich, das Simikolon ist
genauso breit wie das F, sieht vielleicht nicht so aus auf den ersten Blick, aber Mono-Space-Fonts,
jedes Zeichen ist exakt gleich breit, so, und dann hast du die normalen, was ist das,
Serif-Dings, Fonts, da sind die Buchstaben unterschiedlich breit, ja, wenn ich endlich
mal einen neuen PC zusammenbauen kann, kann ich das machen, aber es gibt ja nichts Neues,
was ich mit kaufen kann, also Ende des Jahres vielleicht, und dadurch, wenn man Mono-Space-Fonts
für sowas nimmt, ist es ganz nützlich, da kann man besser ausrechnen, wo man ist, zum
Beispiel, ich möchte ja später eine Fortschrittsanzeige auf dem Display machen, so, die, alter, die
Fortschrittsanzeige wird dann ungefähr so aussehen, keine Ahnung, so, irgendwie so
wird die Fortschrittsanzeige später aussehen, also sprich, da unten drunter und da unten
drunter schreiben wir dann irgendwie, keine Ahnung, 24% oder 24 von 100%, so, das ist
das Ziel, dass ich das auf den Bildschirm schreiben kann, am Ende, mit einem Bildchen
drüber, vielleicht machen wir wirklich ein kleines obendrüber und gucken, ob das Ganze
funktioniert. So, ja, und gerade sowas hier geht halt nur
gescheit mit Mono-Space-Fonts, oder, einfacher, deutlich einfacher mit Mono-Space-Fonts, weil
ich kann mich darauf verlassen, bei einem Mono-Space-Font, dass der Punkt exakt so breit
ist wie das da und exakt so breit wie das da, das heißt, ich probiere einmal aus, wie
viel Zeichen ich brauche, dass ich einen Fortschrittsbalken einmal quer über den Bildschirm bekomme und
dann ist gut und dann ist es immer so, egal was ich reinschreibe, tja, bei nicht Mono-Space-Fonts
wäre das halt, halt viel komplizierter. So, also, haben wir doch schon einiges geschafft,
wir haben hier unser Display, wir haben hier ein Bild, können wir malen und wir können
unseren Font malen, jetzt gucken wir mal, ob wir das mit dem kleineren Font auch machen
können, Small Font, schauen wir mal, ob das funktioniert, ja, kleinerer Font ist auch
da, sehr gut, sehr schön, exellent, Hacker Mans. So, wir machen uns jetzt, by the way,
nochmal, wir machen das hier mal rückgängig, ich hatte doch vorhin ein kleines Ayaya, oder?
Oh ne, ich hab das kleine Ayaya nicht gespeichert, Ayaya, hab ich das noch in der History? Hab
ich das noch in der History drin? Ha, ich sag's euch, beste, Clipboard-History, beste,
das ist Ayaya Small, wow, was auch, what the fuck, Format, was zum, was zum, was macht
der mit meiner History? What, warum ist das denn, warum sind da so viele Dinge in der
History drin? Na gut, ok, dann lad ich das nochmal runter, das ist im Old, die kleine
Ayaya Variante, die hier, Ayaya Small, Ayaya Small, Make File, zack, Open, jetzt aber,
so, das da weg, einmal Arduino Includes, so, jetzt haben wir das kleine Ayaya, was ja 64
mal 63 ist, was, das heißt Einformat, 64 mal 63, das kriegen wir jetzt nämlich ein
bisschen besser, oh, was hat er jetzt verschmerzt? Ah, ok, so, Upload, jetzt müsste es funktionieren,
so, das kriegen wir jetzt nämlich ein bisschen besser angeordnet, das Bild können wir nämlich
jetzt auch nehmen, beispielsweise beim Update-Vorgang hier in der Mitte anzuzeigen, ja, das ist
doch gut, dann zeigen wir das in der Mitte an, oh, das ist Big Brand, wie kriegen wir
das jetzt in die Mitte? Moment, wie kriegen wir das Bild in die Mitte? So, ok, dann machen
wir doch nochmal hier, Int, Ayaya, so, die Breite ist 64, Moment, Ayaya W ist 64, Alter,
ich kann hier mal schreiben, Ayaya W ist 64, Ayaya H ist 63, ähm, wie kriegen wir das
jetzt in die Mitte? Das müssen wir dann, das müssen wir uns irgendwie ausrechnen, also,
wir kriegen es in die Mitte, indem wir Ayaya durch 2, nee, Moment, Moment, Moment, also,
wie kriegen wir, wie kriegen wir das Bild in die Mitte? Wenn ich das, wenn ich die Breite
vom Display nehme durch 2, dann hängt es ein bisschen nach links, ne, gucken wir mal, dann
hängt es ein bisschen, oh, ah, Moment, Moment, äh, das müssen wir kurz mal ein bisschen
runter machen, keine Ahnung, 70, und übrigens, das ist auch falsch an der Stelle, wo ich
das mache, hier ist die Breite des Bildes, hier ist, wo ich anfangen will, X, da, so,
und wenn ich das jetzt hoch lade, dann sollte das halbwegs in der Mitte sein, aber bisschen
verschoben, das müssen wir anders machen, so, guckt, jetzt ist es ein bisschen verschoben,
aber es ist schon, es hat sich bewegt, es hat sich, es hat sich, es hat sich, es ist
ge-moved ein bisschen, ähm, so, also, mal kurz, kurz was aufs iPhone drauf stellen,
besser ist, hat sich nichts getan, oder, vom Fokus her, nee, so, also, jetzt haben wir
das in der Mitte, ähm, so, jetzt müssen wir noch sagen, also, die, okay, lassen wir
überlegen, die Breite, genau, Minusbild durch 2 muss es sein, haben wir ja Glück, dass
die Breite durch 2 teilbar ist, ups, oh, was ist Nvidia, was ist das, nee, Moment, das
ist nicht Nvidia, was ist das überhaupt, ist das diese, ist das diese Xbox Game Bar
oder sowas, okay, Shift, Control, P, was, was ist das unter Windows, Windows, Shift,
Control, P, Print, what the fuck, was ist das, ist es Nvidia, ist es was von VMWare, VMWare,
wo kommt das überhaupt her, das ist bestimmt irgendeine Game Bar Geschichte, irgendjemand
eine Ahnung, wo das hier herkommt, okay, wir können ausprobieren, wir können mal ausprobieren,
das, ah, okay, das ist VMWare, das ist eine VMWare Geschichte, weil, weil in Windows selbst
ist es nicht so, es, es sieht aus, es sieht aus wie, äh, das VMWare, und was ist das
für eine Funktion, ist es einfach nur, einfach nur so, P, nee, Pause, kannst deinen VM Schirm
drücken, aber es steht hier nicht drin, oder, hier, da, da steht es, was ist, Host Profiles,
what the fuck, Suspend, nee, ich hab keine Ahnung, was es ist, es geht mir auf den Saktor
Steuerung, P ist, so uploaden wir das Ganze mal und gucken, ob Ayaya jetzt in der Mitte
ist, was programmierst du heute, du siehst rechts oben, wo wir gerade dabei sind, ähm,
aktuelles Ziel ist, also was heute bei rauskommen soll ist, dass wir, ich hab mir einen ESP32
mit Farbdisplay gekauft, dass wir ein Update machen können, ein Firmware Update über
das WLAN, und dass man auf dem Display den Progress angezeigt bekommt, so, aktuell sind
wir noch dabei, mit meinen Bildern schön in der Mitte zentriert, lul, ähm, okay, äh,
by the way, warum ist der Text, der Text, ach so, den Text hab ich verschoben, ja gut,
jetzt ist es in der Mitte, und jetzt kann der Text auch wieder schön an Null sein, so
und jetzt, und so stelle ich mir den Updateprozess im Endeffekt auch vor, es gibt ein Bild in
der Mitte, halt ein Update, ein Update-Bild, jetzt vielleicht nicht Ayaya, oder meint ihr
Ayaya ist das perfekte Bild für ein System-Update, ich bin mir da nicht so sicher, so, und da
unten printen wir dann sowas hier hin, in der Richtung, so, probieren wir mal aus, so
was, sowas in der Richtung, printen wir dann dahin, keine Ahnung, Progress, könnte jetzt
ein bisschen breit sein, wir können bei der Gelegenheit gerade mal zählen, wie breit
wir das Ganze machen können, mit welcher Sprache, ähm, die Dinger kannst du nur gescheit mit
C und C++ programmieren, es ist zu 90% C mit ein bisschen C++, ey, ich find das sieht
richtig cool aus, als Update, als Update-Vorgang, Bild, das gefällt mir, das hat was, das ist
wie ein Sternchen, okay, hey, das ist nice, krieg ich da noch, kriegen wir noch zwei Punkte
rein, kriegen wir noch zwei Punkte rein, oder ist dann zu weit, aber perfekt, wenn das Update
fertig ist, Ayaya, kann man machen, ah, das ist eins zu viel, okay, also, die Idee ist
dahinter folgendes, das hier ist der Progress, und das andere ist, ähm, so, insgesamt, ich
kann keine Leerzeichen reinmachen, auf jeden Fall, wenn ich Leerzeichen reinmache, kommt
das Layout durcheinander, ich muss normale Zeichen reinmachen, well done, nee, Endscreen
ist Reboot, guck genau, jetzt würde das Update durchlaufen, dumm dumm dumm dumm, hier unten
kommt da noch die, hier unten kommt da noch die, äh, Anzeige, wobei das machen wir in
einem, hier unten kommt da noch die Anzeige dahunter, sowas wie, keine Ahnung, 24 von
100%, und das ist dann ein richtig nicer Update-Screen, nee, mit Escape-Character spackt der auch
rum, also man muss, selbst wenn man Mono-Space fahren, das ist doch nice, oder, stellt euch
mal vor, das bewegt sich, das wäre richtig krass, das wäre nochmal BigBrain-Update-Anzeige,
Fernwärts-Upload, so null, dumm dumm dumm dumm dumm, und wenn's voll ist, zack, Reboot,
Bildschirm aus, Bildschirm aus, wir machen Bildschirm aus und dann Reboot, das heißt
Leute, es wird Zeit zum BigBrain-Teil des Streams zu kommen, wir müssen ein Update machen,
vorher das Ding ins WLAN packen, so, ähm, das gefällt mir, das, das gefällt mir, Leute,
jetzt können wir, jetzt können wir euch überlegen, wollen wir das Bild behalten als Update-Bild
oder wollen wir da irgendwas, irgendwas Seriöses nehmen, ich meine, letztendlich kann das
hier, jeder machen wie er will, ich mag beispielsweise die JoyPixels Emojis, man könnte zum Beispiel,
ähm, das hier nehmen, dieses Refresh oder nee, äh, Reload, wie heißt das Emoji von
dem?
One Result, excellent, irgendwas mit Arrow, ah, da ist es doch, man könnte sowas hier
nehmen für Update, übrigens die Seite ist fucking lahm, ja, aber wir sollen Ayaya behalten,
okay, okay, wir behalten Ayaya, ja, man, die seriösere Variante wäre, wäre wahrscheinlich
das hier zum Uploaden, ja, seit wann, seit wann muss man sich da eigentlich registrieren?
Hm, so, gut, okay, kommen wir mal zum Big Brain Teil des Streams, ich kopiere jetzt
mal meine Updater-Klasse, die ist fix und fertig, dann machen wir nichts mehr hier, ähm, äh,
Moment, wie muss ich das File nennen, ah, Moment, ich muss mal kurz bei mir ins, ins,
ins Bitbucket, nicht ins Bitbucket, ins Git-Frontend und schauen, ob ich meinen Updater hab, Updater,
okay, so, Updater, zack, muss ich die Datei erstmal copy-pasted kriegen, ich kann kurz
erklären, wie der Updater funktioniert, ähm, so, zack, exellent, ähm, so, oh, ich muss,
ich muss den Webserver noch installieren, ja, dann geht's natürlich nicht, also, ähm,
mein Ziel ist ja die ganze Zeit schon gewesen, ich hab das schon mal in einem anderen Stream
gemacht, dass man, und nur mal zum verdeutlichen, das ist gar nicht so easy, äh, oh, ich hab's,
ich hab's verschoben, das war keine gute Idee, Max, ist das immer noch, ich, ich glaube,
es ist egal, ob ich verschiebe, weil ich hier den, den Content Capture, also, die Sache
ist die, wenn man ein Update machen möchte, gibt es von Haus aus schon verschiedene Varianten,
das Einfachste ist über USB, so, fertig, das nächste ist, was eingebaut ist, man kann dem
Ding sagen, sie sollen sich ein Update abholen, übrigens, ist das wieder ein bisschen zu
laut, die Musik, oder passt das jetzt, ne, die passt, oder, Musik passt, so, das nächste
ist, man kann das Update abholen lassen von einem Server, und das dritte ist, man kann
das Update auf das Gerät draufschieben, das muss man aber selbst machen, und es gibt nichts
fertiges dafür, was das Ganze über HTTPS macht, und ich persönlich bin ja ein großer
Fan von Updates über HTTPS, das hat nämlich zwei riesen Vorteile, erstens, die Firmware
wird verschlüsselt übertragen, zweitens, etwaige Passwörter, die man als Authentifizierung
davor setzt, so nach dem Motto, nur der Gerätehersteller darf eine neue Firmware einspielen, weil er
das Passwort hat, sind auch verschlüsselt, also, Update über HTTPS bietet sich wirklich
an, die Sache ist nur die, es gibt nichts fertiges dafür, und ich hab vor ner Weile
schonmal angefangen, so nen Updater zu programmieren, der übrigens hat nicht funktioniert, weil
ich noch ein paar Sachen inkluden muss, der, ja, das hab ich schon gemacht, nen Updater
programmiert, der das macht, also sprich, das ist nen HTTPS Server, der wartet drauf,
dass man, ähm, auf Port 8443, defaultmäßig, dass man ein Update startet, so, ich muss
jetzt noch ein paar Sachen hinzufügen, nämlich, als Webserver Library verwendet das Ding
diesen hier, ESP32 HTTPS Server, hieß doch so, hallo, den hieß doch so, doch, ja, und
den gabs auch als Plattformer, oh, das weiß ich genau, weil den hab ich als letztes installiert,
ja, da is er doch, so, immer das neueste nehmen, weil die mit den alten Versionen anfangen,
weiß nicht was, warum, warum man mit den alten Versionen anfängt, keine Ahnung, so, installieren
wir das Ganze, und dann muss ich noch ein paar Helper Sachen inkluden, die hab ich auch
in jedem Projekt drinne, kann ich gleich schonmal zeigen, die sind auch, die haben sich auch
so über die letzten, letzter Zeit ein bisschen, ja, ein bisschen verfeinert, so ein paar Sachen,
die man immer braucht, äh, ups, äh, was für ein Ding, das ist Manjaro Linux, Manjaro
Linux mit i3 WM, so, und jetzt, werden wir das Ganze mal kompilieren, und ich erklär
kurz wieder, wie der Updater funktioniert, ähm, indem ich ihn nämlich einfach mal anlege,
so, erstmal den ganzen Kram kompilieren, so, also, ähm, wie man das Ganze benutzt, ist
relativ einfach, man legt sich eine Variable an, ähm, also erstmal inkluden das Ganze
übrigens, äh, Updater, so, und dann gibt es ein Update, ein Update Server, den nennt
man dann, keine Ahnung, irgendwie so, und dem übergibt man, glaube ich, ne, dem übergibt
man kein Port, so, ähm, also wie gesagt, das ist ne Update, ja klar sind, die hab ich
mal gebastelt, und ich muss wahrscheinlich grad mal neu starten, weil der irgendwie
nicht mag, what the fuck, ah, oh ne, fuck, ich hab das, oh ne, jetzt ist er noch kaputt,
ich hab das letztens umgebaut, also, okay, fangen wir mal ganz von vorne an, also, wir
werden das Ding jetzt ins WLAN packen, und dann werd ich meinen Update Server verwenden,
wo man Updates zu dem System pushen kann, und äh, quasi neue Firmware übers WLAN drauf
packen, die Sache ist nur die, ich hab das letztens geupdatet, das war nämlich vorher
keine Klasse, also keine C++ Klasse, das war so ne lose zusammenhängende, äh, Public,
quasi Functions in diesem Namespace, ich hab da jetzt ne Klasse draus gebastelt, und
dass das funktioniert, braucht man wirklich die aller, aller neueste Version von diesem,
äh, HTTPS Server, ohne, ohne geht das Ganze nicht, so, und deswegen müssen wir den ganzen
Rahmen jetzt mal klonen, von dem seinem Git, sonst funktioniert das nicht, und um die Sache
noch komplett zu machen, es gibt ne Pull Request, da hab ich auch letztens was reingeschrieben,
ähm, es gibt ne Pull Request von dem Dude, den muss man auch noch merchanten, dass es
funktioniert, also, dass es doppelt, doppelt kommt, man braucht die allerneueste Version
von diesem Server, weil ich hab's erst vorgestern umgebaut, und man muss auch noch ein Pull
Request merchanten von ihm, dass das Ganze funktioniert, machen wir jetzt einfach mal
schnell, ich denk mal in 2, 3 Wochen hat er das hoffentlich gemercht und gut ist, so,
und jetzt sollte der Kram auch kompilieren, das ist wieder, warum das Ganze nicht kompiliert
ist, weil C++ kacke ist, ich, ich mach heute den ganzen Tag schon C++ und hab mich noch
nicht über C++ aufgeregt, aber es gibt so ein paar Sachen, eigentlich fast alles an
C++, was scheiße ist, unter anderem eine Sache, die mir absolut nicht einleuchtet, ähm, wo
C sharp teilweise besser ist im Interop mit C als C++, was ja irgendwie widersinnig ist
bei einer Sprache, die aus C entstanden ist, aber eine Sache zeig ich euch mal, die bei
C++, ich versteh, warum sie so ist, aber warum man da nichts als zur Hilfe eingebaut hat,
versteh ich nicht, also, ähm, vollkommen egal, was hier drum herum passiert, was man hier
macht ist, man registriert Methoden, die aufgerufen werden, wenn man in diesem Web-Server diese
URL aufruft, also geht jemand, geht jemand auf meinen ESP32, auf diese URL-Stats, Updates,
Restart, ähm, C sharp ist nicht aus C++ entstanden, so, ähm, geht man dahin, also sprich, geh
ich auf die IP von meinem ESP32 und das Stats, dann geht er in diese Methode rein und, ähm,
liefert diesen String hier zurück, so, und jetzt seht ihr mal, was richtig sackt an C++,
der Typ hat das so gemacht, dass man hier einen Callback übergibt, also sprich, hier
übergibt man ne Funktion, die aufgerufen wird, wenn halt diese URL aufgerufen wird,
also sprich, url wird aufgerufen im Web-Server, ich wird an diese Funktion übergeben zum
Handeln des ganzen, so, und in C++ ist es jetzt so, bzw. in C, eigentlich in C++, man kann,
also ich versuch euch das jetzt mal zu verdeutlichen, was das Problem ist, also, ich mach jetzt
hier mal ne Funktion, ne Funktion, die nen Callback braucht, also irgendwie was und ich,
äh, QtChat und der möchte als Callback ne Funktion haben, die einfach nur nichts macht,
einfach nur aufgerufen werden kann, also, was man, nur, ich versuch, ich versuch das
jetzt mal, ups, ne warte mal, oh fuck, ich krieg noch nicht mal die Syntax für Callbacks
hin, ähm, so, so, glaub so, also, was das jetzt macht ist, also man hat ne, man hat
hier ne Funktion, man hat hier ne Funktion, die, die, der kann, die kann ich halt aufrufen
und der Funktion übergebe ich, ne zeige auf ne andere Funktion, die diese wiederum aufrufen
kann, also im Prinzip genau das, was hier auch passiert, ich registriere hier nen Händler,
wenn slash stats aufgerufen wird auf meinem Webserver, dann wird das weitergereicht an
die Funktion, die ich vorher registriert hab, das nennt sich Callback, das ist, in C sharp
gibt sowas relativ günstig als Events, da muss man so ne Scheiße mit, mit Pointer rum
geschiebe gar nicht machen, das ist einfach eingebaut, aber alles noch okay, das ist halt,
das ist der C-Way, so jetzt würde man ja denken, C++ ist ja, quasi, einmal aus C entstanden
und sie, ähm, übrigens die Klasse sollte vielleicht nicht Main heißen, sondern ne,
Lul heißt die Klasse, ähm, aber zumindest sollte man erwarten, dass bei einer Sprache,
bei einer Sprache, die aus C hervorgegangen ist, äh, so das Interop, die, also sprich,
die Zusammenarbeit mit C ganz gut funktioniert und wenn ich jetzt sowas hier aufrufen möchte,
zum Beispiel, ich hab ne Klasse, die heißt Lul und die Klasse Lul hat ne Methode, die
heißt, äh, void, keine Ahnung, say, poggers, so und dann hab ich noch was, keine Ahnung,
say, ajajaja, ist ja auch vollkommen egal, wie das ganze heißt, so und hier möchte ich
jetzt, quasi, diese, diese C, diesen C-Style-Callback verwenden, allerdings will ich sagen, okay,
QChat, ähm, nimm mal als Callback, say, ajajaja und man würde eigentlich vermuten, dass das
ohne Probleme funktioniert, aber man sieht schon, es geht nicht, so, also ich möchte
als Callback eine Funktion von der Klasse registrieren, so und das geht nicht, das funktioniert
nicht, ähm, weil das sagt, also quasi, in der, in der objektorientierten Sprache, die
aus C entstanden ist, haben sie es nicht für notwendig, ähm, nein, Lambda mit This Capture
geht auch nicht, kann ich dir gleich auch beweisen, dass es nicht geht, also sprich
bei einer Sprache, die, also einer objektorientierten Sprache, die aus C hervorgegangen ist, ist
der Interop mit C-Callbacks so dermaßen schlecht, dass es eigentlich schon fast wieder lächerlich
ist, also was, es gibt keine Möglichkeit, das ganze hier zu machen, das geht nicht,
es ist nicht vorgesehen, als, als Funktion, eine, eine, eine Methode einer Klasse, als,
als klassischer Oldschool-C-Funktionszeiger zu verwenden, das geht nicht, das geht in
C++20 mit ganz viel Template-Hacks und dann aber auch nur komplett, komplett hirnverbrannt,
wie sie es gemacht haben, ähm, und mit nem, mit nem, mit nem Capture-Lambda geht das ganze
auch nicht, das habe ich nämlich auch am Anfang gedacht, ach easy, es f**k Capture-Lambda,
nein, funktioniert nicht, man könnte natürlich sowas hier machen, das wäre jetzt relativ
einfach, say ayaya, man sieht schon, der Auto vervollständigt gar nichts, aber das funktioniert
auch nicht, achso, übrigens, man muss das Capture noch, oh this, so, und das geht auch
nicht, weil, äh, ich mich verschrieben habe, ach Moment, so, nein, es geht auch nicht,
also erstens, erstens darf man das, darf man das nicht, nicht Capture, ja, selbst wenn
ich es nicht richtig schreibe geht es nicht, aber jetzt haben wir richtig, QChat war es
not declared in Discord, es, es, es klappt nicht, aber übrigens die Fehlermeldung ist
ein bisschen merkwürdig, äh, Moment, ich glaube, ich hab mich vertippt, normalerweise
müsste der mir sagen, er kann es nicht Capture'n, normalerweise müsste der, hab ich mich verschrieben?
Ja, genau, das ist, das ist der, das ist der eigentliche, es gibt keine Konvertierung
von einem Lambda, der Captured zu Vault-Pointer, also sprich, Lambda kann ich nicht verwenden
und das was Timo sagt geht auch nicht, das geht nur, wenn es Static ist und Static verlier
ich ja die, die Zuordnung zu meiner Instanz, also sprich, das funktioniert auch nicht,
wenn ich jetzt sagen würde, äh, also es geht nicht, glaube ich, es geht nicht, äh, wenn
ich jetzt sagen soll, dann sagt er mir, nein geht nicht, weil nicht Static, Moment, ach,
ich bin ja, ich weiß, ok, ich weiß was er, ich weiß was er für Schmerz hat, erstmal,
erstmal machen wir das richtig, erstmal mal das richtig, dass es überhaupt ne Chance hat
zu funktionieren, ich muss das vorher deklarieren, aber es funktioniert auch so nicht, jetzt
kriegen wir nämlich vielleicht auch ne richtige, ne richtige Fehlermeldung, genau, jetzt sagt
er mir nämlich, ok, äh, kann ich nicht, kann ich nicht konvertieren, weil ein Lambda-Ausdruck,
der Captured, nicht implizit nach Vault-Pointer konvertiert werden kann, was, Interop, C++C,
ok, also Lambda funktioniert schon mal nicht, man könnte jetzt sagen, ok, weißt du was,
scheiß auf Lambda, wir übergeben die Methode direkt, als Callback geht auch nicht, dann
sagt er nämlich, non-Static, so, äh, Timo, das glaube ich dir nicht, das geht nämlich
nicht, also da würde mich echt mal Code interessieren, so, du kannst sagen, lull, say, say, aja ja,
dann sagt er dir, geht nicht, weil nicht Static, das einzige was, die einzige Chance, die man
hat ist, das hier Static zu machen, so, übrigens das geht nicht, weil man Static wieder nicht
im Header deklarieren darf, was, was auch schon wieder, jetzt weiß ich, jetzt weiß ich nicht,
was er für, für Schmerzen hat, aber, man muss es Static machen, ja, die Fehlermeldungen
sind, sind auch ein bisschen, ein bisschen, was, du musst den Adressoperator davor setzen,
und dann, und dann, dann, mag er auch nicht, kann, kann, kann, kann, also Timo, mich würde
brennend interessieren, wie du das in deinem Projekt machst, weil, aus meiner Sicht, ist
das schlicht und ergreifend nicht möglich, außer mit C++ 20 und ganz abartigen Templatext.
Ja, wenn man Standard Function verwendet, dann geht das, das funktioniert, wenn ich hier
das C++-Konstrukt dafür verwende, dann funktioniert das, die Sache ist nur die, ähm, wir gehen
jetzt ja davon aus, dass diese Funktion aus einer ONC-Library kommt, die das eben nicht
anbietet, also sprich, was, wo ich keine, wo ich keine, keine, äh, Möglichkeit habe,
was zu ändern, wenn, wenn es mein eigener Code ist, ist es kein Problem, aber, weil
das halt, sagen wir mal, sowas wie FFmpeg oder sowas, wenn das keine Möglichkeit gibt,
die, die, äh, die Zeiger da irgendwie über ein Parameter rein zu gehen, hast du gelitten,
es ist wirklich, es ist wirklich lächerlich, ja, also es ist komplette Witz, also sprich,
ich kann bei einem klassischen Callback keine Methode verwenden, was mich schon wieder komplett
dran hindert, die meisten Sachen günstig in der Klasse zu rappen, dass es schöner zu
verdienen ist. So, die einzige Möglichkeit, die es gibt, ist, es, es gibt die meisten,
die meisten C-Libraries bieten die Möglichkeit, dass man hier noch einen Custom, einen Custom-Parameter
übergibt. So, sowas da. So, das funktioniert. Dann kann ich das nämlich Static machen,
und ähm, hier noch den Zeiger auf die Klasse hier mit, es ist so eklig, wer hat sich das
wieder ausgedacht, C-Interop von C++ müsste eigentlich das einfachste auf der Welt sein,
da hat sich bei, hat sich dem C++ Gremium jemand gedacht, ne, also, also C-Libraries
mit Callback, ne, die unterstützen wir nicht. Das brauchen wir nicht. Ich weiß, warum es
nicht so ohne weiteres geht, weil unter der Hauben und Funktionsaufruf in der Klasse nicht
so aussieht, sondern immer quasi die Klassenreferenz mit da fort, aber da hätten sie halt im Compiler
ein bisschen irgendwie im Standard sich mal was ausdenken müssen, dass das funktioniert.
Kann doch nicht sein, das ist, das ist komplett lächerlich, dass das nicht aus C++ raus funktioniert.
So, jetzt habe ich mal mit einer Runde C++ gerantet, es gibt noch sehr viel andere Sachen,
warum C++ sackt, ähm, zum Beispiel schlicht und klar in der Standard-Library viele Sachen
fehlen, von den Sachen, die, also, von den Sachen, die in der Standard-Library sind,
denen fehlen viele Funktionen, ähm, es gibt ganz viele Sachen, wo ich mich bei C++ drüber
aufregen kann, ähm, tja, naja, zum Beispiel, zum Beispiel schon, dass man, ähm, eine C++-String
nicht printf'en kann und sowas, oder, oder, keine, kein, kein Printf-Ersatz gibt, der
mit C++-Konstrucken klarkommt und sowas. Es gibt diese Standard-Out-Geschichte hier,
aber kein ordentliches Printf. C++-Alternative, wenn man wirklich eine Alternative zu C++
machen will und man mit reinem C nicht zurechtkommt, kann man sich Rust angucken, aber Rust ist
ultimativ Big Brain. Also Rust ist nochmal ganz anderer Ansatz. So, ähm, um jetzt mal
zu der eigentlichen Sache hier zurückzukommen, also, sprich, unser Update-Vorgang. Ich hab
jetzt meinen, ich räume jetzt mal ein bisschen auf hier, ähm, ich hab jetzt meinen, meinen
Code für den Update-Server hier reincopy-pasted. Äh, ich muss mal gucken, ob ich das nicht
auf GitHub demnächst updaten kann. Ich werde euch mal ganz kurz erzählen, wie das, wie
das funktioniert. Ähm, ach so, ja klar, also wenn du, jetzt bloß der Flo96 schreibt, wenn
du natürlich was anderes willst, was so quasi fast in die gleiche Kerbe schlägt wie C und
C++ und sowas, dann Rust. Ähm, C Sharp ist meine persönliche Programmiersprache. C Sharp
ist, finde ich, vom, von der Konsistenz her, also wie dass ich das, wie das, die Logik,
von der inneren Logik her, ähm, von der Standard Library, von den Funktionen, wie intuitiv
sich das bedienen lässt, die beste Sprache, die es gibt. Aus meiner Sicht. Also, was von
Microsoft, was ich wirklich loben muss, ja. Da hat, da hat er wirklich, da Heilsberg damals
ganze Arbeit geleistet und die, die jetzt dran arbeiten. Wirklich top. Ich muss, muss
ich auch wirklich was, Sachen von Microsoft loben, kommt, kommt auch noch vor. So, ich
werde jetzt mal ganz kurz zeigen, wie das funktioniert. Mit dem Update. Ich werde euch
auch dann Demonstrieren, dass es funktioniert. Als erstes müssen wir mal eine WLAN-Verbindung
aufbauen. So, und dazu kommentieren wir mal den, obei, wisst ihr was? Wir lassen das
einfach. Wir schieben das mal ein bisschen runter, dass es nicht stört. Ähm, so, jetzt
machen wir hier. Init WLAN. Achso, der macht das wieder. Nein, nein, okay. Hallo. Ah, der
löscht das. Okay. Ähm, also als erstes, include WIFI, auch mal so. So, wir stellen
jetzt eine WLAN-Verbindung her mit dem ESP32. Und über das WLAN können wir dann die Updates
pushen an das Ganze. Ähm, das funktioniert folgendermaßen. Das ist glücklicherweise
relativ einfach. Also, falls irgendjemand von euch auch mal vorhat, mit dem ESP32 oder
so, oder irgendwie mit so ein paar kleinen Controllern, äh, was zu machen, kann ich
euch, äh, nur ans Herz legen, kauft euch irgendein ESP32-Entwickler-Board. Gibt es
eine gescheite C-Sharp-Umgebung für Linus? Ja, Rider. Top. Rider ist leist, äh, also
.NET Core mit Whistle Studio Code ist auch gut. Aber, äh, Rider ist noch mal eine Nummer
besser. Fast besser als Whistle Studio, könnte man sagen. Rider ist leider nicht umsonst.
Aber Trial. Und eine Trial, die du endlich lang resetten kannst. Lul. Ähm, genau, also
wie gesagt, ich kann euch das nur empfehlen. Probiert's mal aus. So ein ESP, die Basics
mit dem ESP32 sind wirklich ziemlich, sind wirklich ziemlich easy. So, jetzt stellen
wir eine Verbindung zum WLAN her. Also, Wi-Fi. Set Hostname. Da denken wir uns über irgendein
Hostname aus, ähm, wie man das Ding nennen. Hier, das Ding heißt Display. Oder Studentenzern,
dann gibt's das umsonst, ja. Äh, Liko sagt, ich suche eine schlanke Fileserver-Software,
die ich als VM laufen lassen kann. Soll aber kein Sharing-Sache sein, also kein Next-Level.
Fileserver-Sache? Warum nicht Samba den Klassiker schlechthin, was Fileserver angeht? Samba
ist auch so ziemlich das einzige, was du verwenden kannst, weil du willst ja wahrscheinlich Windows-Clients
unterstützen. Ich mein, NFS wäre so die andere Variante, aber, ja. Samba, du willst Windows
unterstützen. Wer kein Windows unterstützt, wird nicht verwendet. Weil alle, weil die restliche
Welt Windows verwendet. FTP, wenn nicht Samba, dann nimm NFS. Oder FTP ist ja die Oldschool-Variante,
ja. Web-DAF, Web-DAF kannst du auch nehmen oder so. Aber Samba ist wahrscheinlich das
einfachste. So, also wir stellen erstmal ein Hostname ein. Das ist ganz nützlich, weil
es dann, wenn man einen Router hat, wo sich der ESP per DHCP was abholt, dann steht, wenn
man Glück hat, das klappt nicht immer, steht dann dieser Name im Router dabei. Also sprich,
dann heißt das Ding nicht Espressive, sondern das Ding heißt Display. Das heißt, man kann
es besser zuordnen im Router. Also es funktioniert nicht immer. Ähm, so. Das erste sage ich
immer mal Disconnect, das ist so ein Tick von mir, dass er alle Sachen, die irgendwie
an sind oder gespeichert, dass er erstmal wegschmeißt. Ist eigentlich bescheuert, wir
haben hier gebootet, also wird es nicht connected sein. Dann sagt man ihm, was man verwenden
will. Man möchte Wi-Fi Station Mode verwenden, das ist ganz normaler, äh, ganz normaler,
ähm, Mode. Nee, äh, Set, Set, nee, einfach nur Mode. Das ist quasi ganz normaler WLAN-Client.
Ähm, dann noch eine Sache, die ich nicht verkehrt finde, Set, Autoconnect, auf false, das bedeutet
meines Wissens nach, er speichert sich keine WLAN-Daten irgendwo im Flash. Und er macht
auch kein Autoconnect beim nächsten Reboot, sondern immer erst, wenn man es hier in dem,
im Programm macht. So. Allerdings, so widersprüchlich es klingt, Autoreconnect setzt sich auf true,
weil Autoreconnect bedeutet, wenn die Verbindung abbricht, im laufenden Betrieb, dann baut
er sie wieder auf. Ähm, so, und jetzt kommt das eigentliche, Wi-Fi, Beginn, und da schreibe
ich rein meine SSID und mein Passwort. Was ihr jetzt nicht sehen könnt, weil ich in
meiner Secrets-Datei drinne stehen hab. So, also sprich, hier kommt SSID, also WLAN-Name
und hier kommt Passwort rein. Und dann baut er jetzt eine Verbindung zu WLAN auf. Und eine
Sache copy-paste ich mir mal, die ich eigentlich ganz nützlich finde. Ähm, man sieht, oder
ich zeig euch, wie man es in Tutorials manchmal sieht, ist, Wi-Fi, äh, nee, die machen sogar
noch Connection-Status meistens. Also, wie gesagt, so mach ich es nicht. Ähm, weil
ist not connected. So, also so sieht man es in vielen Tutorials, aber ich find das nicht
so gut. Ähm, sagen die dann sowas wie Print, äh, keine Ahnung, Punkt. Also quasi Punkt,
Punkt, Punkt, wir warten bis wir connected sind. Ähm, und dann machen wir eben Delay,
und wenn das, dann loopen sie in den Tutorials so lang, bis WLAN da ist. Die Sache ist nur
die, man will eigentlich gar nicht loopen so lange, wie WLAN da ist. Man will vielleicht
sagen wir mal 10 Sekunden warten, und wenn das nicht geht, dann rebootet man mal. Und
dann hat man nämlich auch die Chance, äh, eine Logik zu implementieren, die zwei verschiedene
WLANs probiert. Also so nach dem Motto, man guckt, ob das WLAN hängt, 5 Sekunden, also
so nicht, also nicht so wie, also so machen sie es in den Tutorials, aber so find ich
es nicht gut. Ähm, wenn man es anders macht, 5 Sekunden wartet, ob das WLAN geht, wenn
es nicht geht, rebootet, und dann setzt man irgendeinen Flag im Flash, dass er ein zweites
WLAN probiert. So kann man nämlich ein Backup-WLAN eintragen, falls das eine mal nicht funktioniert.
Find ich viel praktischer. So, ich mach das immer so. Copy-paste mir das grad mal, ich
hab hier irgendwie ausgeteilt, mach das so. Ähm, das ist, find ich, die, die schönere
Variante. Und zwar, das hier ist eine eingebaute Funktion, der wartet, what the fuck, der wartet,
bis das IP-Bit gesetzt wird, für, fürs Netzwerk. Das ist eine eingebaute Funktion von, äh,
also unten drunter ist es, dass, dass, Free Air Toss ist es unten drunter, aber, äh,
das haben sie hier gerappt in ihrem Arduino Zeug. Der wartet jetzt, bis im Netzwerk das
Status-Bit für IP gesetzt wird, also sprich, bis, bis das Bit gesetzt wird für, ich hab
eine IP. Und das hier hinten ist ein Timeout. Also sprich, wir sparen uns schonmal die ganze
Schleife, das hier ist quasi so eine Art Schleife unter der Haube, wobei das, äh, intern
anders gehandelt wird als mit einer Schleife. Der wartet 5000 Millisekunden, also 5 Sekunden,
dass man eine IP bekommt. Wenn er keine IP bekommt, äh, dann macht er folgendes, dann
schreibt er, Wi-Fi failed, äh, SSID-Name übrigens, by the way, das machen wir jetzt
mal raus, weil ich, weil ich mein SSID nicht leaken will, äh, äh, Wi-Fi failed, machen
wir dann nur. So, dann warte ich 5 Sekunden und dann restarte ich. So hat man das, das
finde ich viel schöner. Und hier könnte man jetzt beispielsweise einen Flag, Flag setzen
und wenn das Flag gesetzt ist, wird er beim nächsten Reboot nicht dieses WLAN probieren,
sondern vielleicht SSID 2. Das heißt, man kann dann hin und her switchen und hat immer
einen Backup-WLAN. Okay, jetzt, und das war's schon, mehr muss man nicht machen, jetzt
ist man schon verbunden mit dem WLAN. Wir machen jetzt mal folgendes, ähm, wir geben
jetzt mal meine IP aus, die ich bekomme, probieren wir mal aus. Was wir, was wir, was wir machen
könnten ist, könnten es auf dem Display anzeigen, aber wir machen es erstmal nur unten, so.
Ich lade das jetzt mal hoch und jetzt sollte der mir gleich meine IP ausgeben auf der
Konsole, die ich bekommen habe, im WLAN. Also 192.168.1.... irgendwas. Oh, oh, oh, Max,
oh, stopp. Okay. Okay. Vielleicht soll ich nicht so viel spammen lassen. Ja. Piss dich
alle. So, also meine IP hier, gut. Die brauchen wir jetzt nämlich gleich für ein Uploaden
von der Firmware. So. So, und ihr seht schon, wie fett das Ganze jetzt geworden ist. Das
ist jetzt, dauert auch länger zum Hochladen. Das ist jetzt gleich mal doppelt so, doppelt
so fett, der Sketch, weil wir, ähm, WLAN aktiviert haben. Schon hart, ne? WLAN aktiviert
erstmal 50% vom Speicherplatz voll. Aber der W, der, der Wifi, der WLAN-Stack vom ESP32,
der braucht halt ordentlich Flash-Speicher. Also sprich, wenn ihr ohne WLAN auskommt,
ist besser, aber man kauft sich einen ESP32 eigentlich für WLAN. So, das ist die IP,
die ich bekomme, wenn ich mich connected hab. Und nun können wir uns mal meine Updater-Klasse
angucken. Was die, was die so macht. Als erstes, was man machen muss, ist, ähm, nachdem, nachdem
das WLAN gestartet ist, muss man sagen, Server, Begin. Das ist so Arduino-Konvention. So. Jetzt
kann man ein Port angeben, nenne 8443. Ich nehme meistens 8443, weil es durchaus sein
kann, dass man 443 mal für was anderes verwendet. Jetzt kann man noch auswählen, auf welchem
CPU-Core das Ganze laufen soll. Default 1, äh, Default Priorität 1 lass ich. So. Und
jetzt startet der einen Web-Server. Also sprich, wenn ich sonst nichts mache, außer das, kann
ich auf Port 8443, schau mal auf diese IP, connecten mit einem Browser. Das kann ich
euch jetzt auch zeigen, dass das funktioniert. Wenn ich es hochgeladen hab. Oder nicht crashed.
Manchmal crash da. Weil ich Sachen vergesse. So. Wir hoffen jetzt einfach mal, es ist gestartet.
Also hier, da, IP. Jetzt gehen wir mal in den Browser hin und sagen, hier ist gleich Stats.
Oh nee. Kann ich, kann ich, kann ich Stats, kann ich Stats ausführen oder leake ich dann
irgendwas? Moment. Stats. Stats. Ah nee, nee. Temperatur, Zeit, Uptime, Hostname. Ja, das
kann ich zeigen. Stats. Ah, Moment, ich, falscher Port. 8443, HTTPS, ähm, Stats. Äh, ja, der
ist jetzt nicht so schnell, ja. Ich mein, ähm, TLS auf so einem kleinen Furzding. Wollen
wir uns jetzt mal nicht beschweren? New Connection, New Connection. Ah, Stats. Also Temperatur
75 Grad, das ist nicht korrekt. Ich glaube nicht, dass das stimmt. Äh, ja, Uhrzeit hat
er nicht gesetzt, weil kein NTP gesetzt ist. Uptime sind 64.000 Millisekunden, also 64
Sekunden ist er ab. Hostname, Espressive, Hostname hat er nicht gecheckt. Okay. Also
ihr seht, der Web-Server auf dem ESP32. Nee, das ist nicht Fahrenheit, das ist eigentlich
Celsius, oder? Warte mal. Retemp. Fahrenheit. Naja, oder? Übrigens, das habe nicht ich
falsch geschrieben, ne? Temperature. Also das habe nicht ich falsch geschrieben, das hat
der Hersteller falsch geschrieben. Sonst geht es nicht. Temperaturesens. Ist das, ist
das, ist das Celsius? Äh, Celsius? Oh, das ist Fahrenheit. Nee, 24 Grad ist zu wenig,
das ist ja weniger als Umgebungstemperatur. Nee, das ist Fahrenheit. Das ist, äh, das
ist, das ist Celsius. Das ist Celsius. Das ist Celsius. Der Temperatursensor ist eh, ähm,
guck hier. Der Temperatursensor ist eh fail. Also viele ESP32 haben diesen Temperatursensor
gar nicht, ja. Ähm, ich glaube nicht, dass mein ESP gerade wirklich 77 Grad ist. Wobei,
also anscheinend liest der ja auch was, es schwankt, es schwankt ja, ja. Aber selbst
wenn, die Dinger halten einiges aus, aber 77 Grad ist schon ganz schön viel gerade.
Würde mich echt wundern, wenn das wirklich so viel wäre. Aber man sieht, es funktioniert.
Uhrzeit hat er nicht gesetzt. Uhrzeit setzen ist ein bisschen komplizierter. Kann euch
aber auch gerne mal zeigen, wie das funktioniert mit Uhrzeit setzen. Kann ich, da kann ich mal
wieder was copy-pasten aus was anderem hier. Ähm, wenn man, das ist aus der, aus dem Klimaanlagen-Sketch,
was ich hier kopiere. Also sprich, man kann Folgendes machen. Man kann sich, übrigens,
das ist NTP-Servers falsch, den NTP-Server brauche ich. Weil 60.1 ist ein anderes Netz.
So, das ist, das ist auch wieder Big-Brain-Logik. Also, was das macht, ist Folgendes. Fasse
ihn doch mal an, ne, komm ich grad nicht hin. Ähm, die Idee hier hinter ist Folgendes. Also
einmal nimmt man einen NTP-Server, woran sich die Uhrzeit abrufen soll. Und das hier
ist Next Level Shit. Was das hier bedeutet, ist, das ist eine zusätzliche Info für Zeitzonen-Info,
quasi in Kombination mit dem, was der NTP-Server liefert. Man kann, dieser String bedeutet,
da steckt alle Informationen drin, wann wie welche Zeitzonen umgeschaltet werden. Also,
es gibt die Zeitzone CET-1, CST-2 und dann gibt's hier irgendwie noch das Datum, wann
wie umgeschaltet wird. Irgendwie um 2 Uhr nachts hin und um 3 Uhr nachts zurück. Also
sprich, hier ist die Zeitzonen-Info drinnen, dass der automatisch sogar am richtigen Datum
zur richtigen Uhrzeit automatisch Sommer-Winterzeit umstellt. Schon mal nicht schlecht, ne? So,
und damit man das Ganze verwenden kann, muss man Folgendes machen. Man muss dem, man muss
noch NTP-Server und Zeitzonen-Infos setzen. Das kann man hier machen. Config-Time, NTP-Server
und ZNF, der sagt, dass es das nicht gibt, das ist aber GBATE, das gibt's. Das ist
irgendeine Build-In Function, die er irgendwie nicht findet. ZNF und dann die Time-Zone-Info,
was die 1 hier bedeutet, weiß ich gar nicht. Ja, zeigt ihr mir nicht an. Auf jeden Fall
da 1 hinten dran. So, und wenn man das jetzt, warum CET? Naja, weil ich nun mal in CET bin
und meine Uhrzeit halt in CET ist. Oder C-E-S-T ist es ja aktuell. So, was wir jetzt mal machen
können ist, dass man sieht, dass das funktioniert. Wir können uns mal die Uhrzeit anzeigen lassen.
So, also, Push, dahin, String. Ich hab dafür schon eine helper-Funktion mal gebastelt.
Time. Das holt sich die Uhrzeit ab, die gesetzt wird von NTP und macht daraus einen Arduino-String,
den ich dann ausgeben kann. Hallo Max, mega entrannt. Ich find's schön, dass euch gefällt.
So, und jetzt sollte auf dem Display eigentlich die Uhrzeit kommen, wenn alles funktioniert.
Schauen wir mal. Schauen wir mal. Warte mal, bis der Upload ver- Der Upload dauert das
ein bisschen länger, weil es ist der ganze WLAN-Stack drin. Und der ist halt groß. So,
jetzt Uhrzeit, please. Come on, bra. Kurz gucken, dass er nicht abgeschmiert ist. Haha.
Okay, habt ihr's gesehen? Habt ihr's gesehen, wie er's gesetzt hat? Am Anfang war da noch
erster, erster, 1970. Und dann hat NTP gegriffen, er hat Zeit bekommen. 2018. Ja, es sieht wirklich
ein bisschen aus wie 2018. Ja, wie man das Format ändert, da bin ich ehrlich gesagt
noch nicht dahinter gekommen. Also sprich, ich müsste was- Ach so, Moment, das Format
mach ich ja hier. Ja. Ich weiß nicht, ob es hier die Möglichkeit gibt, irgendwie noch
das Format zu ändern in EU-Zeit oder so. Ah, Datum, Stunde, Minute, Sekunde. Ich weiß
nicht, ob das EU-Datum kann. EU-Date? Kann das EU-Date? Ah, Setlokal, das, Moment, gibt
es? Okay, das, das müsste man mal ausprobieren. Aber ich glaube nicht, dass das, dass das
funktioniert. Setlokal, ESP32. Das wird nicht funktionieren. Ey, glaub ich nicht. Was soll
ich machen? Ja, ja, Monat, Monat, Tag, Tag. Ja, das könnte ich machen. Ich könnte es
von Hand so formatieren. Das, das, das, das, das funktioniert. Wobei ich mir nicht sicher
bin, ob das die richtigen Dinger sind dafür. Also ganz ehrlich, ich kann das mal kopieren,
aber ich bin mir wirklich nicht sicher, ob das die richtigen Escape-Sequenzen dafür
sind. Schauen wir mal. Schauen wir mal, ob das die richtigen Escape-Sequenzen sind.
Ne, M ist ja Minute. Stimmt, stimmt, kann ich sagen. Dann das, was der Imp geschrieben
hat vielleicht. So. Mal gucken, was da jetzt rauskommt, was der Helmer geschrieben hat.
Mal gucken, was der Imp rauskommt. Ah. Ne. Ganz ehrlich, ich komme auch mit US-Zeit zurecht.
So, schauen wir mal, was jetzt kommt. Woop, woop, woop, woop, woop, woop. Woop, woop, woop,
woop, woop. Hopp. Come on. Nein. Okay, Leute. Wisst ihr was? Wir machen das mal rückgängig
lassen, so wie es ist. Und wir leben erst mal mit dem Ami-Datum. Sehr schön. Also, Uhrzeit
setzen, so funktioniert alles schon mal. Wir laden es übrigens mal jetzt wieder hoch,
dass es dann auch in der Vorschau richtig ist. So, also das funktioniert. Also wir haben
WLAN-Verbindung. Wir haben WLAN-Verbindung und wir haben richtige Uhrzeit. Das ist doch
schon mal ganz gut. So. Und jetzt kommen wir zu der Geschichte mit dem Update-Server.
Also, dass ich mich darauf verbinden kann, habe ich euch ja schon gezeigt. Braucht manchmal
ein bisschen. Oder braucht ein bisschen, bis das gestartet ist. Hier, New-Verbindung. Ach
so. Ja, der hat jetzt das Problem, dass sich das Zertifikat geändert hat seit dem letzten
Neustart. Deswegen macht man sowas auch nicht mit dem Browser. Jetzt müsste ich erst mal
das wieder clearn. Sondern man macht das einfach mit Curl und gut ist. Das ist auch viel einfacher.
Vielleicht nicht L-K. So, Curl verbindet sich auf den ESP und ruft die Stats ab. Guckt,
zack. Irgendwann, drei Stunden später hat er es dann. Also man sieht die Verbindung,
die verschlüsselte Verbindung zum ESP 2.3. Also schnell ist was anderes, ja. Aber es
geht. Wir können sie übrigens jetzt noch schön formatieren lassen. JQ, das ist gültiges.
JQ habe ich nicht drauf. Warum habe ich kein JQ drauf? JQ ist der beste Yammel-Formatter
hier. Oh, ich muss noch wieder Update machen. Moment, ich habe nicht JQ installiert. Ich
habe was installiert? Ich habe das falsche installiert. Das wollte ich gar nicht installieren.
Jetzt habe ich das falsche installiert. Vier hätte ich installieren müssen. Nicht YQ,
sondern JQ. Hoffentlich geht das jetzt. So, jetzt können wir uns das mal schön formatiert
ausgeben lassen. Da kommen die Stats von meinem ESP 32 rein, über den Webserver. Also
ihr seht schon, die Verbindung ist alles andere als hyper schnell, ja. Aber es geht. Dafür
ist es okay. Update 1, 2, 3. Gut, also das funktioniert. Webserver läuft. Ich habe da
nur, also wie gesagt, ich habe hier nicht viele Features eingebaut. Man kann drei Sachen
machen. Ich zeige euch mal kurz, wie es funktioniert. Man kann drei Sachen machen. Man kann sich
ein paar Stats abrufen. Man kann es über den Webserver restarten. Also sprich, wenn
ich jetzt so mache, Restart, dann reboote der. Und man kann updaten. Fertig. So, ich
zeige kurz, wie es funktioniert, bevor wir es ausprobieren. Ist eigentlich relativ simpel,
aber, wobei, ich überlege gerade, warum machen wir es? Nee, wir machen es andersherum, weil
sonst ist es zu, zu, zu verwirrend. Wir programmieren jetzt erstmal den Server, der euch ein Update
hochladen kann. Und nachdem wir uns angeguckt haben und gesehen haben, dass es funktioniert,
zeige ich euch, wie es funktioniert. Weil ich wollte es auch mal auf GitHub wieder aktualisieren.
Weil ich am letzten Stream, wo ich das hier zusammengefuddelt habe, haben mich sogar ein
paar Leute gefragt, sie hätten das gern für ihr eigenes Zeuchen. Ist ja immer schön,
wenn man sich da austauschen kann, ja. Also. So, das hier ist alles wir untereinander
geschrieben, das machen wir gleich, das machen wir gleich schöner. Das hier oben ist schon
recht ordentlich. Also wir machen erstmal hier init, erstmal seriell output und den
screen initialisieren. Übrigens, das da, können wir schon wieder wegmachen, wir brauchen
eigentlich nur screen init, weil, das Rest haben wir auf dem sprite. So, den Rest haben
wir auf dem sprite. Ich glaube, das war's. Mehr muss man da auch am Anfang nicht machen.
Weil ich lasse es mal drin, nicht, dass es jetzt irgendwie kaputt geht. Wobei, mal ausprobieren
sollte eigentlich keinen Unterschied machen. So, dann verbinden wir uns ins W-Lan. So,
und hier starten wir den Server, über den ich Updates hochladen kann. Jetzt muss man
noch ein paar Sachen machen. Oder wir können noch ein paar Sachen machen. Müssten, müssen
wir eigentlich, mehr außer starten müssen wir nicht. Ich habe ein paar Features eingebaut,
das Ding hat einen Callback, wenn er fertig ist. Das Ding hat einen Callback, der aufgerufen
wird, wenn er progress update hat. Es hat einen Callback, der aufgerufen wird, wenn das Update
startet. Und es hat einen Callback, wenn das Update timeoutet. Weil, das ist eine Sache,
wo man immer drauf achten muss, wenn man so Sachen macht, wie Updates hochladen oder
irgendwie. Generell, wenn man auf so einem Mikrocontroller, so einem ESP32, der irgendwo
im W-Lan hängt, vielleicht im Keller oder so, wenn man dort irgendwie was startet, was
potentiell hängen bleiben kann. Und das kann das HTTP-Update, weil die Library da unten
drunter ist für den Webserver, die hat ein paar Bugs, dass der sich deadlockt. So, und
deswegen kann ich dann immer nur sagen, okay, man baut einfach einen Timer ein, also sprich,
man startet einfach einen Timer und der Timer wird regelmäßig resettet. Und wenn dieser
Timer nicht resettet wird, dann startet sich das Ding einfach neu. So, und jetzt zeige
ich euch mal, dass das funktioniert mit Updates hochladen. CheckSum, also CheckSum. Ich muss
mal kurz mal eine andere VM starten, weil da haben wir noch ein Beispiel, wie man den
Kram aufruft. Ich habe nämlich mittlerweile auch eingebaut, dass eine MD5 CheckSumme über
das Firmware-Update macht und guckt, dass es auch korrekt übertragen wurde und alles.
CheckSum, hier, perfekt. Das brauchen wir. Können wir gleich wieder beenden. Also, wenn
man jetzt ein Update hochladen will zu seinem ESP32, was wir ja leider noch nicht auf dem
Disp... Oh, ich habe die Rotation rausgenommen, das war keine gute Idee. Jetzt haben wir Aja
ja hochkant. Der Fachbegriff für diesen Timer ist Watchdog, korrekt. So, 96 ist hier wieder
im WeSmart-Modus. Wir haben übrigens die Rotation rausgenommen, das ist ziemlich doof. Z, Rotation
1, weil wir wollen Aja ja gar nicht hochkant haben, wir wollen Aja ja in Quer-Format haben.
Oh. So, während er das macht, füge ich das hier mal ein. Also, was dieser Curl-Befehl
macht, ist folgendes. Also, Curl ist quasi ein Programm, mit dem ich HTTP-Request schicken
kann. Das gleiche, was euer Browser macht, nur von der Kommando-Zeile aus. Also, was
der macht, ist, der ignoriert erstmal Zertifikatsfehler. Zertifikatsfehler muss ich ignorieren, weil
mein ESP32 hat kein gültiges SSL-Zertifikat. So, hier schreiben wir jetzt die IP rein,
was es war. Wisst ihr noch, was es war? 1, 2, 2, glaube ich, oder? 1, Punkt, ja. Rotation
war 3, war 3. Aja, guck mal, Aja ja auf dem Kopf. Rotation war 3, tatsächlich. So. Update,
dass ich den richtigen Ordner habe. Ja, so heißt das richtig. So. Also, was der Befehl
macht, ist folgendes. Oh, äh. Das kann man auch über den Browser machen, das muss man
nicht über Köln machen. Also, was der macht, ist folgendes. Der geht hier hin, oh ne, ich
dab, ich hab weggedrückt. Der nimmt sich die Firmware-Datei, die glücklicherweise Firmware.bin
heißt, so, Firmware.bin und lädt die auf den ESP32 hoch. Das macht er hiermit. So,
und er übergibt ihm hier einen Parameter, Checksum, und das ist die MD5-Summe von der
Firmware. Das bedeutet, der ESP32 bekommt die Firmware hoch, kann aber auch gleichzeitig
überprüfen, dass die korrekt übertragen wurde. So, und ich zeige euch jetzt mal, dass
es funktioniert. Oh, äh. Ah, ich hab zwei Punkte. So. Äh, beide war ich abgebrochen.
So, ich mach mal, verbau es, dass man mehr sieht. So. Verbindet sich zum ESP32. Checksum
hat funktioniert. Und Update startet. Also sprich, der lädt gerade die neue Firmware
zum ESP32 hoch und dann startet sich der ESP32 neu, wenn der hier fertig ist. Ihr werdet
es oben rechts sehen, wenn das Update auf 100% ist, dann startet er sich neu. Also sprich,
ich kann jetzt USB abmachen, das ist eigentlich ziemlich poggers, ich kann jetzt USB abmachen
und komplett übers WLAN updaten. Was ich nicht mache, weil übers USB updaten ist immer noch
ein Ticken schneller. Und zack. Und ihr seht es oben rechts, Reboot. Äh. Hat er sich jetzt
gerade Rebooted? Weil ihr habt jetzt gesehen, ob er sich Rebooted hat. Ich hab nicht zugeguckt.
Er hätte, er hätte sich eigentlich Rebooten müssen. Ja, er hat sich Rebooted. Er hat
sich Rebooted. Strom braucht er trotzdem über USB. Ja, aber nicht am Rechner. Ist ja gerade
der Witz. Den kannst du sonst wo hin hängen. Und nicht unbedingt. Wenn du einen Deep Sleepen
lässt, geht er auch an der Batterie. Das TT-Go-Board hier vielleicht nicht, aber andere gibt's
da ja. So. Also sprich, ich bekomme jetzt mit, ich kann jetzt ein Update hochladen über
WLAN. Das ist genau das, was ich haben will, weil mein Ziel für den heutigen Stream ist
ja, dass ich hier auf dem Display anzeige, das machen wir jetzt auch gleich, dass ich
hier auf dem Display anzeige, wie der aktuelle Progress ist für Update-Upload. Das bedeutet,
wir können jetzt ein Feature verwenden, was ich eingebaut habe in meinen Update-Server,
nämlich Set Start Callback, bauen wir jetzt, und Set Progress Callback. So, was bekomme
ich denn da für eine Sache? Übrigens, wisst ihr was mich an C++ bzw. in dem Fall Visual
Studio Code nervt? Die haben eigentlich ein ganz cooles Feature, nämlich das man sagen
kann, wenn man hier so lange Types hat hier, so standard, function, void, int, f, dass
man dann sagen kann, auto, also so auto, auto, so. Und dann, das ist so ein bisschen wie
var in C sharp, und dann macht er das, aber Visual Studio Code ist zu dumm. Der erkennt
den Typ von C nicht, und dementsprechend kann ich C nicht richtig verwenden. Small
Brain. Das ist doof. Deswegen muss ich den Mist hier selbst hinschreiben. Ach Quatsch,
was mache ich denn? Übrigens, totaler Blödsinn, ich habe mich verdammt, das ist ein Callback
ohne, bekommt er Argumente? Ah, er bekommt ein Int, Progress, na klar. Übrigens, ist
es richtig, was ich erzählt habe, in dem Fall aber falsch, weil ich beim falschen Callback
gewesen bin. So, also, was da jetzt passiert ist, ich gehe jetzt hier zu dem Programm,
also zu dieser Klasse, die für das Update zuständig ist, und sage, hey, wenn ein Update
hochgeladen wird, und es quasi, wenn das Progress gemacht hat, also 1%, 2%, 3%, 4%,
dann ruf mal diesen Code hier kontinuierlich auf bei jedem Progress Schritt, und dann kann
ich was machen. So, also SetProgressCallback, da werde ich jetzt einfach mein Progress auf
das Display schreiben. So, und das werde ich mal hier unten irgendwo, wobei eigentlich
ist egal, aber mach das mal hier unten. Deswegen, wo wir jetzt hier dabei sind, dass dieses
ganze Drawzeug, das muss noch in eine eigene Klasse rein, weil das ist echt, wir hier
blickt keiner durch. So, zumindest um zu zeigen, dass das prinzipiell funktioniert ist, ähm,
mach mal kurz die Loop hier mit Ayaya weg, und die müssen wir eigentlich stoppen. Normalerweise
mache ich so, dass wenn mein Update Vorgang anfängt, das machen wir jetzt auch, das ist
eh nicht verkehrt, wenn mein Update Vorgang anfängt, dann stoppe ich die Main Loop, weil,
äh, wozu brauche ich, ich will, dass der nichts macht, während er Update hochlädt. Das kennt
ihr wahrscheinlich auch von anderen Geräten, so nach dem Motto Update Vorgang im Progress,
bitte fassen Sie das Gerät nicht an. So, also wir malen jetzt erstmal auf dem, auf
dem Display ganz billig den aktuellen Update Progress. So, da steht dann eins, zwei, drei,
vier, fünf, sechs, sieben oder sonst was dahinter. Wir sind mal, wir sind mal so nett
und machen noch ein Prozentzeichen dahinter von 100, ähm, und gucken uns das, gucken
uns das Ganze an. Ja, und vorher, natürlich ganz wichtig, Moment, Push Image, Ayaya, nee,
hab ich schon, ist ja schon da. So, ähm, genau. So, und was wir jetzt noch machen
kann, was, was, was die Holzhammer Methode ist, wohl, wohlgemerkt, wir können sagen,
wenn das Update startet, wenn das Update startet, dann beenden wir unsere, unsere Loop. Wohlgemerkt,
wenn das Update startet, beende ich einfach hier meine Main Loop. Wohlgemerkt, wenn man
die einmal beendet hat, die kriegt man nicht wieder gestartet, so ohne weiteres. Also, das
sollte man bedenken, wenn man das Ganze macht. Also, das ist jetzt nicht unbedingt best,
best practice, wie man so schön sagt, was ich jetzt hier mache. Also, machen wir hier
irgendwann Print, ähm, Update in progress, Stop, Main, Main Loop, irgendwas. Also, ich
was sehe, was ertreibt, ähm, und jetzt sag ich Task, äh, warte mal, was, End, nee,
Task, Delete, Task, Delete, was, äh, ich brauch das Handle, ich brauch das Handle, äh, Main,
Loop, Task, Handle, gleich, äh, äh, Task, Handle, wie so, ne? Ne, Moment, ah, fuck,
wie, ah, wie kriege ich, oder einfach so? Einfach so? Äh, zumindest will ich meine
Main Loop beenden, wenn, wenn Update startet. Bin mir nicht sicher, ob ich das jetzt richtig
gemacht habe, ich glaub nicht. Oh, bin ich, nee, äh, Moment, wie ging das nochmal? Ach,
hier, ah, ich weiß es wieder, ähm, Current Handle war das, ja, genau, und jetzt geht's.
Also, und wenn ich, oh, fuck, was war? Ach so, ich muss das noch Captchern. Wisst ihr was?
Kann ich das überhaupt Captchern an der Stelle? Ja, das, guck mal, ob das funktioniert jetzt.
So, übrigens, wir haben fast unseren kompletten Sketch jetzt verwendet, weil WLAN so viel
Zeug braucht und HTTPS auch. So, jetzt uploaden wir den ganzen Shit, mal so, und was von der
Idee jetzt passieren sollte, sobald das Update startet, geht diese Loop hier aus. Äh, können
wir übrigens auch zeigen, dass diese Loop ausgeht. Gebe hier einfach mal einen Counter
aus. So, also sprich, wenn das Update startet, geht diese Loop aus, weil ich die hier kille,
und er hat komplette zwei CPUkerne frei für Updates, Handling und Bildschirminhalt malen.
So, also sprich, die Main Loop geht aus, das sehen wir auch gleich hier am Print. Übrigens,
der Print hat jetzt ganz schön viel Gleichachtung, da ist kein Delay oder sonst was drinne. Der
haut jetzt erstmal hier das Print raus ohne Ende. Und KS. Zumindest hört das gleich auf,
wenn ich ein Update starte. Und dann sollte der auf dem Display hier, dann sollte der
eigentlich anzeigen, wie weit er ist. Soweit so gut. Schauen wir mal, wenn der Update startet.
Ach guck, Update Stopping Main Loop. Aha. Exzellent. Und man sieht den Update Progress
auf dem Bildschirm. Wenn das nicht Poggers Easy Clap ist, Leute. So, gleich Firmware
Update durch. Und Reboot. Übrigens, dass der jetzt weiter die gleiche Sache anzeigt
ist, weil ich den Bildschirm nie cleare. Also sprich, ich muss hier ganz am Anfang mal
sagen, TFT, Fill, Screen. Einfach mal clearn das Ganze. Übrigens, ich hab ne noch bessere
Idee. Ich hab die richtige 5-Hat-Idee. Wir machen jetzt einfach OTA Server, Update Finished
Callback. Wenn das Update Finished ist, schalten wir einfach das Display aus. Das ist was
hier. Dann, na wieso, da steht 100 von 100, das ist doch dann. Ich mein, wir können da
noch hinschreiben, dann. Aber wir machen den Bildschirm aus. Das find ich viel geiler.
Wir machen den Bildschirm aus. Aber wir pasten das jetzt einfach mal. Machen den Bildschirm
aus. Set Finished Callback. Und jetzt sagen wir einfach Brightness 0. Das ist nämlich
Bildschirm ausschalten. Also sprich, nach dem Update bei 100% macht er den Bildschirm
aus. Wir könnten auch noch dann davor reinschreiben, aber ich fürchte, wir haben gerade bei diesem
Callback nicht mehr allzu viel Zeit. Ich mein, man könnte bei 100% dann drunter schreiben.
Ja, das ist, das geht. Das könnten wir machen. Oh, da blinkt er hier. Übrigens, wollt ihr
das Ding mal im 3D gedruckten Case sehen? Das Case ist richtig gut geworden. Also das
sieht fast wie gekauft aus, das Case. So, okay, wir starten mal, hups, wir starten mal
den Update Vorgang. Jetzt zeige ich euch mal kurz, wie der Update da funktioniert. Update
Vorgang. Ah ja, ja. So. Warten wir mal, bis er wieder durchgelaufen ist, bis 100%. Und
dann sollte er jetzt den Bildschirm ausschalten und rebooten. Und dann müssen wir natürlich
auch unsere Progress Bar malen. Das ist ja das Allerwichtigste. Progress Bar muss sein.
Und Bildschirm aus. Und Bildschirm aus. Häh? Habt ihr das gesehen? Und jetzt ist Bildschirm
wieder an, aber kein Inhalt. Irgendwie Bildschirm ausgeschaltet. So, und übrigens, das hier
ist ziemlicher Müll. So müsste das dastehen. So. Nice. Gut. Und jetzt kommt die Progress
Bar. Jetzt kommt die, hat irgendjemand eine Ahnung? Ah, hier. Ich hab's noch. History
ist das beste Clipboard History. So, und jetzt müssen wir die Progress Bar malen. Also.
Okay. Wie machen wir das jetzt am besten? So eine Progress Bar. Also. Wir haben hier
wie viele Stellen? Eins, zwei, drei, vier, fünf, sechs, sieben, acht, neun, zehn, elf,
13, 14, 15 Stellen. Okay. Also. Sagen wir mal so was wie hier. Total. Total Steps sind
15. Jetzt könnt ihr mich bei Low-Prain-Aktionen erleben, weil ich war sowas immer komplett
verkacke. Okay. Also. Also. Wir haben total, also. Also. 15 Schritte wollen wir anzeigen
beim Update. Warum 15 Schritte? Weil auf das Display maximal 15 Zeichen passen. Oder plus
die Klammern. So. Also. 15 Schritte wollen wir haben. Das heißt, ich muss jetzt ausrechnen,
in welchem Intervall, in welchem Intervall ich hochzählen muss. Also quasi 100 Prozent
durch 15. Leute, wenn ihr seht, dass ich Low-Prain-Shit mache, schreibt es in den Chat. Also. Sprich
alle 6,6 alle 6,6 Schritte muss ich hochzählen. Also machen wir irgendwie sowas hier. Also
es muss auf jeden Fall ein Float sein, weil ich teile hier 100 durch 15. Also sagen wir
irgendwie Steps. Nee. Steps, nicht Increments. Steps. Counter oder so. Oder Steps. Ach komm,
Scheiß drauf. So. Also 100 durch Total Steps. So. Da müsste jetzt sowas rauskommen wie
6,6. Von der Idee her. Stepsize. Stepsize. Stepsize. Komm ich. Ja. Mir gefällt mir alles
irgendwie nicht. Muss ich mir was anderes überlegen noch. So. Das heißt, da kommt
jetzt sowas wie 6,6 raus. Das heißt, ich weiß, dass ich meinen Counter alle 6,6 Schritte
hochzählen muss. Ich meine, wenn ich jetzt richtig Low-Prain wäre, aber das machen wir
nicht. Aber die Noob-Variante wäre ja das da. Progress. Kleiner. 7, so nach dem Motto.
Nee, kleiner. Kleiner. Ich meine, das widerstrebt mir schon, aber das müsste ja funktionieren.
Und dann so. Und dann Else-if-Progress-kleiner-das-plus-eins. Aber nee, nee, das machen wir nicht. Round-Progress
durch 100 mal 15. Dürfte das mit Modulo nicht? Wahrscheinlich. Wahrscheinlich gibt's das zwar.
Das ist so eine typische Sache, wo es 20.000 verschiedene Varianten gibt. Also, Round ist
auf jeden Fall schon mal gut. Was? Progress durch 100 mal 15. Moment, das ist im Prinzip
das. Das ist doch das Gleiche, wie wenn ich sag, Progress durch Increments, oder? Kann
ich nicht so? Round finde ich schon mal gut. Also, sprich, was rechne ich denn jetzt hier
aus? Wenn ich Progress durch, also wenn ich den Fortschritt, sagen wir 70%, teile durch
6,6. Oder durch 6,6. Also, 70 durch 6,6. Dann bekomme ich 10 raus. Das bedeutet, 10 Schritte
sind fertig. Also, Steps-done. Oh, das kann man bestimmt viel einfacher machen. Progress
durch Steps. Dann weiß ich, wie viele Schritte fertig sind. Und das sollte ich jetzt vielleicht
wirklich noch mal runden, weil da irgendwas scheppes rauskommt. Ich kann ja nur ganze
Steps malen oder nicht. Und auch aufrunden muss ich, weil ich muss jetzt ja noch die
ausrechnen, die fehlen. Okay, dann sagen wir jetzt das nächste. Steps to go. Also sprich,
die Schritte vom Update, die noch ausstehen. Das ist dann Total Steps. Also, 15 minus
Steps done. Okay, ja. Es klingt logisch, muss ich sagen. Also, was gibt den Arduino
schon eine fertige Funktion, um die 100 auf 15 Schritte zu werben? Oh, exellent. Da müsste
es dem ja mal ein Beispiel zu schicken, wie ich das genau mache. Da bin ich gerade zu
low-brain-führend, mir das auszudenken. Aber ich schreib's mir mal auf. So, jetzt
probieren wir mal aus, ob's funktioniert. So, und da. Okay, jetzt hab ich die Steps.
So, und jetzt kann ich was richtig Geil, was richtig Nicees benutzen. Ich hab mir nämlich
mal sowas gebaut. Vor, bei meinen Helper-Classes hab ich immer sowas hier gebaut. Multiply
string. Das ist quasi das, was man mit Ruby auch machen kann. Wenn du rundest, hast du
bei 96 Prozent schon 15 Schritte. Das macht nix. Das macht nix. Dann seh ich auf jeden
Fall den vollen Balken, bevor es sich neu startet. Wenn ich nicht runde, dann fehlt
mir doch manchmal was, oder? Was soll das Teil machen? Also aktuell soll's einfach
nur den Update-Vorgang anzeigen auf dem Display. Also ich hab mir sowas gebastelt, das macht
das gleiche wie bei Ruby. Wenn man bei Ruby zum Beispiel hier diesen String mal eins
rechnet, bleibt er eins, mal zwei, mal drei, mal vier. Also der verdoppelt die Dinge einfach
je nachdem, wie viel ich's anzeige. Und das Gute ist, mal null, kommt dann auch nix, kommt
dann auch nix. Der Edelknecht hier mit Big Brain, Quick Muffs, 15x Progress. Ich nehm
das alles zur Kenntnis, ich probier das alles mal aus. Ich test jetzt aber erstmal, ob
mein Zeug tut. Weil ich blick zumindest bei meiner eigenen nicht vorhandenen Logik noch
am besten durch. Also, jetzt müssen wir uns was zusammenbauen. Also bauen wir uns hier
mal was zusammen. Temp, immer bester Variablenamen, Leute. Wenn ihr nicht wisst, wie ihr was
nennen solltet, nennt's Temp. Also plus, plus, am Ende kommt da ne Progress Bar raus. Okay,
plus. Jetzt machen wir zuerst die Sachen, die dann sind. Ich mach das mal mit nem Gleichheitszeichen
in der Progress Bar, dass da sowas rauskommt. Aber ich mein, man könnte auch was anderes
nehmen. Ich weiß nicht, ob das Emojis kann. Ich glaub nicht, dass das Emojis kann. Also
auch, Farb Emojis schon gar nicht, aber ich weiß nicht, ob es vielleicht schwarz-weiß
kann oder so. Okay, und das machen wir Steps dann. Genau, also sprich, der nimmt jetzt
das Gleichheitszeichen und vervielfältigt das so oft, wie Schritte erledigt sind in
der Progress Bar. So, und als nächstes machen wir dann Alper, Multiply String, Punkt, und
dann Steps to go. Und das brechen wir jetzt noch mal die Zeile um, dass es ein bisschen
hübscher ist. Ich mein C++ ist eh schon nicht mehr zu retten, aber zumindest ein bisschen
lesbar kann man es machen. So, und jetzt so. Okay, von der Idee her müsste der mir jetzt
ne Progress Bar malen. Chet, meint ihr, das funktioniert? Nee, Moment. Oder? Doch, müsste,
müsste funktionieren. Nö, in eine andere Zeile schreiben. Also was wir jetzt noch machen,
ne die Prozentzeile machen wir, genau, genau, stimmt, du hast recht. Also tmp, plus, Moment,
Newline, tmp plus Newline, plus Progress. So, okay, ob das jetzt funktioniert? Bin ja
mal gespannt, ob das jetzt klappt. Wahrscheinlich crash da jetzt, weil ich irgendwas vergessen
hab von irgendwo, irgendwo im Memory rumschreiben, wo ich reinschreiben soll. Ob das
jetzt, okay, okay, okay. Der Moment der Wahrheit naht, Leute. Okay. Macht er was? Fast, fast
richtig, fast, Leute, fast. Das funktioniert erstaunlich gut. Der kommt sich hier ein bisschen
in die Quere, ja. Aber das funktioniert, Leute, das funktioniert erstaunlich gut. Okay, warum
hat der hier so, der startet sich neu, wenn das Update fertig ist. Naja, so ganz funktioniert
er nicht. Der malt hier irgendwie zu weit, zu weit drüber und ich bin mir ehrlich gesagt
nicht sicher, warum der da so weit drüber malt. Sollte ich vielleicht mal, wisst ihr
was? Wir machen davor mal eine Sache. Oder vielleicht, oder vielleicht ein paar Leerzeichen
dahinter, dass das da auch alles löscht auf jeden Fall. Muss wahrscheinlich klären.
Drawstring klärt, glaube ich, genauso lang, wie die Zeile ist. Also vielleicht hilft das
schon mit ein paar Leerzeichen hinten dran. Kannst du die Prozentanzeige noch sentern?
Oh, das wird aber ein bisschen komplizierter jetzt. Center Prozent. Können wir mal gleich
gucken, ja. Okay, mal gucken, mal gucken, ob der jetzt zumindest das Ganze überschreiben
richtig macht. Auf, fang an, Update machen. Let's go. Okay, nee, nee, nee, wir müssen,
wir müssen klären, wir müssen auf jeden Fall klären vorher. Das wird so nix, nee,
nee, nee, das wird so nix. Ah, ja, ja. Nein, das wird x. Extra Drawstring für zweite Zeile.
Das stimmt, das kann sein, dass der rumspackt, weil da eine Newlight drin ist. Also probier
mal aus. Also, dann machen wir nur hier String, Progress. So, nächste Zeile, nächste Zeile,
Progress plus von 100%. So, jetzt müssen wir nur gucken. Moment, wir rechnen jetzt
70 plus, ähm, man konnte irgendwie die Fondgröße, Größe, Fond, Fondheit, genau, sondern irgendwie
plus fünf. Also sprich, wir sollten jetzt eine Zeile unten drunter sein plus so hoch
wie die letzte Zeile. Also, wir fangen dort an, wo die letzte Zeile war, plus die Höhe
der letzte Zeile plus fünf. Also, das heißt, wir sind jetzt eine Zeile unten drunter.
So, soweit, soweit von der Theorie her. Aber komisch, dass es bei der Progress Buff funktioniert.
Ja, ich glaube, du hast recht, der kommt, der kommt, der kommt nicht mit klar, dass das,
ähm, dass da eine Newlight drin ist. Ich, ich glaube, der, der behandelt beim Clearen
keine Escape Charakter. Also, der bleibt immer auf der aktuellen Zeile. Und jetzt funktioniert
es vielleicht. Jetzt, jetzt kann ich mir vorstellen, jetzt funktioniert es. Und, geht's jetzt?
Okay. Alles klar. Oh. Du hast recht, ich geb Mist aus. Nochmal hochladen. Ja, ich hab
Mist ausgegeben. Okay, dann. Aber jetzt, jetzt geb ich kein Mist mehr aus. Wie lang sind
wir eigentlich schon? Oh. Alter, vier Stunden fast. Was ist denn hier los? So, okay, Leute.
Pass, holt eure Pass Champs raus, ob's funktioniert. Stream soll ich auch noch spiel ab und zu mal,
ja? Ha! Es funktioniert. Es funktioniert. Das ist ja mass, massiv.
Pogu. Hab ich, hab ich, hab ich überhaupt irgendeinen ordentlichen Pog, Pog Champ, der
pockt, pock like this? Sprain, ja. Nice. Cool. Update 100%, Bildschirm aus, Reboot. Richtig
gut. Richtig nice. Also, was ich jetzt noch nicht gemacht hab, ist, mich hier irgendwie
um, um Multithreaded kümmern oder so. Also, das einzige, was hier Multithreaded ist, ist
das hier, der Updater. Der Updater ist Multithreaded. Ach ja, ich hab euch ja gesagt, soll ich mal
kurz erklären, wie, wie das, wie das funktioniert mit dem Update. Also, was, was der da macht.
Das ist, ist nicht sonderlich, ist nicht sonderlich kompliziert. Also, der macht, also erstmal
hier, WLAN muss an sein, dass man über WLAN updaten kann. Das, ja, darauf die Idee kommt
jeder. So. Also, ich zeig euch einfach mal ganz kurz, was der beim Update macht. Wenn
man diese, wenn man diesen Update-Server startet, macht er erstmal, generiert ein SSL-Zertifikat.
Name, CACW, Organization, LUL in Deutschland. Gültig bis 2030. Was eh vollkommen irrelevant
ist, weil kein Browser dieser Welt diesem Zertifikat jemals vertrauen wird und man
muss eh sagen, ignore. So, dann konfiguriere ich ihn für fünf parallele Connections auf
dem Port, der übergeben wird. Also, in dem Fall, Port, eh, Port 8443 ist es bei mir,
mit dem Zertifikat. Also, sprich, ich generiere ein Zertifikat und sag, starte den HTTPS-Server
mit dem Zertifikat auf diesem Port für maximal fünf parallele Connections. Fünf parallele
Connections ist schon ordentlich für den ESP32. Braucht, braucht ein bisschen RAM der Kram.
So. Und jetzt, das ist eine Multi-Threading-Funktion aus der Standard-Library hier vom ESP32.
Um genau zu sein, ist das aus Free Air TOS nennt sich das Ganze hier. Also, die, das
offizielle ESP32-SDK-Firmware, wie auch immer, Entwicklungsgedöns basiert auf Free Air TOS,
deswegen hat man auch noch die Funktionen daraus. TOS, Monka TOS, genau. Losex90 sagt,
ich würde einem Zertifikat vertrauen von CACW für die Organisation LUL ausgestellt
wurden. Ja, klar, ich auch. Sofort. Am besten wäre natürlich noch, wenn das Organisation
LULW wäre, weil dann, weil dann könnte man das nämlich so rum machen und dann wüsste
die ganze Welt wieder, dass CACW kleiner LULW ist. Oder besser gesagt, LULW größer
CACW. Und da stimmt ihr mir sicherlich alle zu. So. Genau, der startet jetzt den Web-Server
auf Port 8443. Und jetzt startet er den neuen Task. Und man muss wissen, auf dem ESP32,
wie das läuft mit dem Taskhandling. Das ist gar nicht so, wobei eigentlich ist es viel
einfacher als unter Windows. Solange ein Task läuft, läuft er. Solange er nicht sleept.
Also sprich, wenn ein Task hängt, ist schlecht. Also man sollte einen Task nie unendlich lang
in einer Weilschleife hängen lassen. Man sollte immer Prozessorzeit abgeben, zum Beispiel
hiermit. Task. Delay. 100 Millisekunden oder sowas. CACW gleich CACW. Nee, eigentlich
ist CACW gleich gleich CACW. Und in JavaScript ist CACW gleich gleich gleich CACW, weil JavaScript
ist, die haben sie nicht mehr alle. Also nur C++ ist noch schlimmer als JavaScript. Zumindest
ganz vereinfacht hat er startet hier einen neuen Thread. Und er führt diese Funktion
aus. So. Diese Funktion macht folgendes. Startet den Server. Registriert für slash stats slash
update slash restart diese Händler. Und dann hat es eine unendlich lange endlos Weilschleife,
in der nichts anderes gemacht wird, wie zu gucken. Gibt es neue HTTP-Request, die abgearbeitet
werden müssen. Und danach sleept es für 100 Millisekunden. Das ist wichtig, weil der Task
Scheduler vom ESP32, der ist jetzt nicht sonderlich clever. Also sprich, wenn ich jetzt hier keine
Prozesszeit abgib, hat das Ding unendlich lang hängt das in diesem Task drinne. Obwohl
das nicht ganz richtig ist, wenn es Tasks mit gleicher Priorität gibt, dann kann der
ESP32 Task Scheduler dazwischen hin und her schalten, auch wenn einer in Endlosschleife
hängt. Aber die viel bessere Variante ist, niemals Endlosschleifen machen in Tasks ohne
Delay. Und auch ganz wichtig, der Task im ESP32, er darf nie enden. Also sprich, wenn
ich jetzt hier einen Break rein mache, crasht es. An diesem Break crasht der ganze ESP32,
weil Tasks dürfen nie enden. Das ist so Policy. Tasks dürfen nur irgendwann mal gelöscht
werden, aber Tasks dürfen nie von sich aus enden. Kann man den Task auch zu einer gewissen
Uhrzeit triggern? Ja, kann man, kann man machen. Also die einfachste Variante ist Delay Until,
man kann es ihm sagen, bis wann er schlafen soll, da muss er die Zeit ausrechnen. Du kannst
aber einfach einen Timer nehmen, der in einem gewissen Intervall tickt. Gibt es zig Varianten,
gibt es zig Varianten, wie man das machen kann. Ja, aber das geht auch zu einer gewissen,
also zu einer gewissen Uhrzeit direkt nicht. Du musst, du musst die Uhrzeit umrechnen in
interne Ticks, aber dann kannst du sagen, ok, also du hast ja NTP, hast du die Uhrzeit
abgerufen, dann rechnest du aus, ok, ich will in 5 Stunden das weiter ausführen und
dann rechnest du das um, was bedeuten 5 Stunden von jetzt in Ticks und dann sagst du V-Task-Delay-Until
und wartest bis die, so lang bis die Zeit halt da ist. Ja, die schönere Variante zu
warten, wenn man, wenn man auch spezielle Ereignisse wartet, zum Beispiel, wenn man
darauf wartet, dass der User einen Knopf drückt oder so. Vielleicht ist jetzt nicht das beste
Beispiel für Multiswitching, aber wenn man, wenn man mit einem Task warten möchte, bis
der User einen Knopf drückt, dann ist es besser, man macht da irgendeinen Blocker rein,
also man sagt nicht V-Task-Delay, sondern man macht das so, dass man irgendeinen Blocker
nimmt, gibt es ja auch verschiedene Sachen, die eingebaut sind, der quasi unendlich langes
Delay macht oder ein konfigurierbares Delay macht, außer es wird ein Flag gesetzt und
sobald ein Flag gesetzt wird, ist er sofort wieder wach. Das ist dann, das ist die schönere
Variante. Der Internet-Timer ist gut genug für, du hast beim ESP32, du hast verschiedenste
Timer-Varianten, also die einfachste zu benutzende Variante ist die hier. Das ist ein C++-Wrapper,
den die gebastelt haben, um die ESP32-Timer-Funktionalität. Du hast zig Timer-Funktionen, du hast einmal
einen Hardware-Timer, der ist extrem genau, aber ein bisschen komplizierter zu verwenden,
du hast diesen Free-Air-Toss-Timer, der nach jeder Main-Loop einmal läuft, du hast die
Abstraktion von diesem Ticker und du hast noch, ich glaube du hast noch einen ESP32-Software-Timer,
also du hast total viele Timer, also Timer gibt es da wirklich so viele Timer, dass
du eher Schwierigkeiten hast, den richtigen Timer zu finden. So, genau und wie gesagt
der Task bleibt jetzt für immer in dieser Endlosschleife hängen und wartet 100 Millisekunden
macht weiter, immer 100 Millisekunden, unendlich lange, bis zum Reboot. So und die eigentliche
Sache, was das Update macht, das zeige ich euch jetzt, gehen wir mal da hoch, das ist
die Funktion, die das Update macht. Also sprich, wenn es ein Request gibt, wenn es ein Request
gibt, auf Slash-Update, eine Post-Request auf Slash-Update, dann ruft er, äh Moment, wo
habe ich es, hier, dann ruft er Handle-Update auf. Handle-Update bekommt den HTTP-Request-Parameter
und Gedöns übergeben und ein Response-Objekt, wo ich an den kleinen Sachen zurückschreiben
kann. Also ihr seht sie hier beim Update, diese Notifications, bei wie viel Prozent
das Update-Stack gerade ist, schreibe ich in den Response-Stream rein. So, aber viel
interessanter ist eigentlich, was der intern macht, um das Ganze updaten zu können, on
the fly. Wohlgemerkt, das geht bei einem ESP32 nur, wenn man die Update-Partition oder die
Update-Reservierung im Flash nicht ausgeschaltet hat, weil der Flash ist wie gesagt normalerweise
eingeteilt ungefähr 1,3 MB für die Firmware, dann nochmal 1,3 MB für die Firmware, für
Update, also sprich, dass ich updaten kann im laufenden Betrieb und dann umschalten kann
und restliche Flash-Speicher für Dateien hier. Und wenn man das ausschaltet, man kann
dem ESP32 auch sagen, hey, mach eine riesen Partition für meine Firmware, äh, dann kann
ich kein OTA-Update machen. Also ich brauch immer die zweite Partition und den reservierten
Speicherplatz für die zweite Firmware, dass ich OTA machen kann. Also OTA ist Over the
Air-Update, weil der updatet nie quasi den Rom, äh, nicht Rom, den Flash, von dem ich
gerade laufe, sondern der updatet immer in die zweite Partition rein und wenn ich fertig
geupdatet habe, dann rebootet der und startet die zweite Partition und das nächste Mal macht
er das Update in die erste Partition, rebootet und startet die erste Partition und so hin
und her. Das heißt, man hat immer ein laufiges System, falls das Update, wenn man das nämlich
nicht machen würde, man kann das bestimmt überschreiben und das Update bricht ab bei
30%, dann hast du deine eigene Firmware überschrieben und kannst nicht wieder starten, um nochmal
ein Update zu machen. Das wäre PaintsChamp, ziemlich, ja. Genau, ähm, also, der holt sich
erstmal die Parameter, den Parameter CheckSum hier raus. CheckSum, CheckSum ist das hier,
was ich übergebe. Also ich berechne auf dem Client einmal eine MD5-Summe und auf dem Server
einmal eine MD5-Summe und wenn die übereinstimmen, weiß ich, die Firmware wurde ordnungsgemäß
übertragen. Äh, hier startet er noch den, den, ähm, Update, den TimeOut Timer. Das
ist das Ding, was guckt, okay, ist das Update hängen geblieben. Was machen wir gerade?
Wir machen, ich kann dir das zeigen, wir programmieren gerade, ähm, dieses Board, dass man übers
WLAN ein Firmware-Update machen kann. Ich starte das mal kurz. Äh, hat sich die IP
geändert? Moment, ich sehe meine IP nicht, the fuck. Äh, vielleicht sollte ich mal diesen
ganzen Schmodder hier unten nochmal kurz raus machen. Hat sich meine IP geändert? Ich glaube,
meine IP hat sich geändert. Na toll. Ähm, ich zeig's dir jetzt gleich, indem ich noch
mal geflasht hab. Genau, und, äh, also sprich, dass wir Firmware-Update übers WLAN machen
können und auf dem Display ne Anzeige haben, wie weit das WLAN-Update ist. So, das funktioniert
jetzt auch schon halbwegs noch nicht so hundertprozentig und ich erklär grad, wie das mit dem Update
an sich funktioniert. Ich zeig's dir einfach mal, wie's aussieht, dass du's mal gesehen
hast. So, starten please. IP, nee, IP sind wir auch die gleiche. Dann weiß ich nicht,
dann, dann weiß ich ehrlich gesagt nicht, was da grad für Schmerzen hatte, warum das
nicht mehr gelaufen ist, was auch immer. Ups. So, Update starten. Und zack, wenn Update startet,
wirst du gleich den Progress sehen auf dem Display. Ah. Kannste zugucken, wie das Firmware-Update
übers WLAN auf das Gerät geschrieben wird. Ich mein, das Display hat natürlich im laufenden
Betrieb dann andere Aufgaben, zum Beispiel, was ich, Temperatur, Luftfeuchtigkeit, Klimaanlagen,
was auch immer anzeigen. Aber ich finde, das ist eine nette Sache, dass man auch sieht,
wie weit das Update ist auf dem Display. Ja, wenn das Update durch ist, schaltet ihr den
Bildschirm aus, rebootet und fährt mit der neuen Firmware hoch. Genau, wir waren jetzt
gerade beim Update. Also, wo sind wir stehen geblieben? Genau, der startet hier einen Timer
an der Stelle und zwar der Timer, der guckt, dass das Update nicht hängt. Also sprich,
das ist ein Timer, den hab ich auf 50 Sekunden gestellt, viel zu hoch, der soll auf 5 Sekunden
sein. 50 Sekunden, Alter, 50 Sekunden Timer, was ist denn das für ein Spaß? Also sprich,
der Timer, der tickt alle 5 Sekunden und dann guckt der und ne, der setzt Timeout auf
True. Und wenn Timeout beim nächsten Timer-Durchgang immer noch gesetzt ist, startet er neu. Und
ihr werdet sehen, hier irgendwo zwischendrin, resettet der Timeout immer. Hier, der setzt
immer Timeout bei jedem Progress Schritt auf False. Also sprich, der Timer wird resettet,
wenn der Timer nicht resettet wird, rebootet er das Ding. Das ist wichtig, bleibt nämlich
ein Update wirklich mal hängen, wäre das Gerät nicht mehr erreichbar für ein weiteres
Update. Das wäre ja ziemlich beknackt. Genau, ich mach mal kurz ein Bild drauf. Wo haben
wir denn unser Push-Image? Ah ja, ja. Also das Bild muss da schon drauf, sonst sieht
es da ja so langweilig aus in der Ecke oben, wenn das einfach nur ein dunkles Display ist.
Statt, ah ja ja lieber, Wub-Old. Ja Wub-Old können wir auch noch rein machen. Das mit
den Bildern ist überraschend einfach gewesen, muss ich sagen. Gut, während er uploadet,
gucken wir uns nochmal kurz das Update an, wie es weitergeht. Weil jetzt kommt das eigene
Firmware-Update. Also Timer setzt ja, er sagt alle laufenden Updates ausmachen, alle Errors,
die es gegeben hat, wegmachen, die es nicht gegeben haben kann, weil er startet sich ja
neu, wenn ein Update fehlgeschlagen ist, aber sicher ist sicher. Ah ja ja, da sind wir wieder.
So, dann überprüft er die Check-Summe. Dann überprüft er die Check-Summe, ob quasi,
also er setzt, nein, er nimmt sich die Check-Summe, die wir hier eben übergeben, MDFD MD5 Check-Summe,
die man auf dem Client geprüft hat und setzt die hier bei dem Updater-Objekt, dass er
das überprüfen kann, wenn die Firmware fertig hochgeladen ist, ob die Check-Summe übereinstimmen.
Weil, wenn wir das nicht machen, kann es sein, dass beim Übertragen des Updates ein Fehler
drin ist und wir das nicht mitbekommen. Wenn wir eine Check-Summe drüber machen, kriegen
wir das mit und dann updaten wir einfach nicht. So, jetzt guckt ihr, ob genug Platz im Flash
ist, also sprich Content-Length vom Update ist dafür noch Platz im Flash, wenn nicht
Restart. Ihr werdet übrigens sehen, egal bei was der Updater fehlt schlägt, der restartet
immer. Weil die einzig sind, das einzig sinnvolle Handling und Recovery von sowas ist bei so
einem Restart. Sobald ich auch meine Main-Loop beendet hab vorher, ich kann das nicht mehr
recovern, einfach Restart. Ähm, ist das peinlich, das ist C++. Leider, leider, muss ich sagen,
ist das C++. Leider kommt man da nicht wirklich drumherum. Ich weiß, es gibt diese ganze
Micro-Python-Geschichte, aber da hast du andere Probleme mit. Und was hat's mit HPP-Aufsicht?
Äh, das ist gleich wie Punkt H. Plus die C++-Variante. Es ist ganz normale Header, wie H. Wobei
ich ehrlich gesagt nicht weiß, ob das nicht intern doch ein Unterschied ist. So, äh,
dann setzt er das Ganze in Progress ist und hier liest er quasi einfach nur jedes Mal,
ne Moment. Hier liest er quasi die Bites, die man uploadet aus dem Curl, liest er ein.
Und dann schreibt er die ganze Sache hier, ähm, dann update er den Progress, je nachdem
wie weiter ist. Und hier schreibt er das Update auf den Flash. Hier schreibt er das Update
in Flash. Wenn es einen Fehler gibt, Restart. Wie immer. Wenn er hier irgendwie mit der
Pfeil-Länge-Probleme hat, Restart. Und wenn er hier unten durch ist, sagt er Response
Code 200. Ähm, wenn es einen Fehler gibt, Restart. Ansonsten sagt er hier Finished. Äh,
er ruft den Callback auf. Der sagt hier Update fertig. Er gibt nochmal die MD5-Sommer aus
und stoppt den Server, wartet 100 Millisekunden, Restart. Fertig. Kennt sich einer im Chat
mit UDP und FH4? Also UDP sagt mir was, aber was ist FH4? Autos. Forza Horizon 4. Äh,
ok. Dann meinst du wahrscheinlich mit UDP auch nicht das Protokoll, sondern irgendwie
irgendein Autogame, oder? Weil sonst erschließt sich wieder der Zusammenhang nicht so ganz.
So. Tja. So, was wollten wir noch machen, Chat? Wir wollten das zentrieren noch, kann
das sein? Wir wollten das Update noch zentrieren, ne? Man kann da Autostats auslesen. Ups. Wir
wollten das noch zentrieren. Oh, das können wir noch machen. Ähm, die Schrift zentrieren.
Ok. Wie zentrieren wir die Schrift? Das probieren wir jetzt mal hier drinnen aus, wie man Schrift
zentriert, weil das schneller geht, als hier jedes Mal aufs Update zu warten. Äh. Ok,
Draw. String. Probieren wir das mal aus. 0 auf 0, 0. Äh, Font. Ja, Font, den wir haben.
Push. 0, 0. So, wie kriege ich 0 jetzt in die Mitte? Eigentlich doch genauso. Genauso
wie vorhin, oder? Also sprich, äh, TFT. Äh, hallo, TFT. Breite. Durch 2. Und jetzt müsst
... Ah, Moment. Nee, jetzt ist nicht in der Mitte. Jetzt... Doch, ich weiß, was ich
machen muss. Aber gucken wir mal. Gucken wir mal. Jetzt sollte der... Jetzt sollte das
zumindest schon so ein bisschen in der Mitte sein. So. Ansatzweise in der Mitte, aber nicht
wirklich hundertprozentig in der Mitte. Auflad hoch. Reboot. So, Zeig her. Oh. Es ist... Es
ist fast in der Mitte. Es ist nicht wirklich in der Mitte, aber... Es geht in die richtige
Richtung. Können wir uns darauf einigen, ja? Es... Jetzt ist hier... Aja, ja, Kopf ist
... Bisschen... Fehlt eine Ecke. So wie bei Max-FPS-Keks. Da fehlt auch eine Ecke. Okay,
das hat nicht so ganz funktioniert. Also, wir machen das auf jeden Fall jetzt erstmal
auf Höhe 70. Und wahrscheinlich müssen wir jetzt sagen, ähm, dass der... Die Ausrichtung
des Textes soll der machen Top Center. Gucken, ob das jetzt funktioniert, was ich hier getrieben
habe. Top Center. Äh, Tbilius Text Width kriege ich nicht so ohne weiteres raus. Das würde
funktionieren, aber Text Width kriege ich nicht so ohne weiteres raus. Ah. Doch, ich
müsste den Text erstmal irgendwo hinschreiben, dass ich die weiter rauskriege. Ich glaube,
das geht auch so, wenn ich das zentriere. Schauen wir mal. Ha! Genau in der Mitte. Und
jetzt müssen wir das mal richtig machen. Aja, ja. Aja, ja, ja, ja. Upload. Weil dafür
ist diese Sache, da kann man quasi so, ähm, so Ankerpunkte mit einstellen. Wo die Sachen
sich hier dran ausrichten, wenn ich hier Angaben, wo das hinschreiben soll, rein mache. Fancy,
richtig fancy. So. Und jetzt gucken wir mal. Jetzt haben wir das einzig, das einzig wahre
Kombination. Also besser, besser geht's jetzt immer. Aja, ja. Aja, ja. Oh, ich hab Hunger,
Leute. Übelst Hunger. Ich glaube, ich glaube, mal was essen. So. Ähm, jetzt sind wir ja
immer noch zu einer Sache nicht gekommen. Und jetzt mal über OTA flaschen, ob die neue
Firmware auch geladen wird. Können wir machen. Wir machen aus dem Aja, ja mal Aja, ja. So
und die neue Firmware flaschen wir jetzt hier drüber. Äh. Moment, ich muss das, ich muss
das erst noch mal kompilieren. Wie ging das noch mal? So. Genau. Also das da, das ist
hier Firmware Upload und davor muss ich den ganzen Kram noch einmal kompilieren. So, also
von der Idee hier sollte der jetzt nach dem Firmware Upload nach dem Firmware Update nicht
mehr Aja, ja ja ja anzeigen, sondern nur noch Aja, ja. Schauen wir mal. So, kompiliert
neue Firmware. Linking Firmware. Ja. 90% Flash voll. Null. Das Wifi und das HTTPS Zeug
hier so fett. Ok, Update läuft. Go. Ich glaube ich weiß woran das liegt. Ich glaube ich
weiß woran das liegt. Der sollte aber, das hier kommt sich in die Quere, wobei ich ehrlich
gesagt nicht so genau verstehe warum. Ich glaube das kommt sich aus vollen Gründen
in die Quere. Der schreibt aufs Display. Der schreibt aufs Display. Wie wechselst du so
schnell zwischen Linux und Windows? Ich habe Linux in der VM und ich schalte einfach mit
Control-Windows-Tasten zwischen den Windows-Desktops um. Und innerhalb von Linux mit Windows hast
du 1, 2, 3. Ich glaube ich weiß was passiert. Die Main Loop läuft und das Update startet,
der beendet die Main Loop aber der hängt noch irgendwie hier drinnen. Und dadurch
dass er das so schnell macht ist die Chance dass er in irgendeinem komischen State kommt
relativ hoch. So, also eigentlich müsste man das jetzt locken, aber wir locken das jetzt
nicht. Sondern wir machen einfach mal ein Delay. Ich gebe zu das ist nicht die schönste
Variante, aber ich will einfach nur gucken ob das mit dem Update funktioniert, dann kann
man sich um den Rest kümmern. Ja übrigens, das ist der nächste Grund hier, warum ich
das Multithreaded machen will. Was mir ja vorschlebt ist so eine Display-Klasse, die ein Renderthread
hat und dass ich sicher sein kann, dass der Zugriff auf das Display immer vom gleichen
Thread passiert. Weil dann kann so ein Scheiß gar nicht passieren. Ok, Firmware Update.
So, mal gucken ob das jetzt funktioniert mit hochladen. Ich hoffe es crasht nicht. Fängt
an. Ok, das funktioniert. Das Delay ist nicht schön, aber Display Factory Class. Wir sind
nicht in Java. Gibt es morgen ein Aufwachs-Stream? Wahrscheinlich, ja. So, und jetzt macht der
Firmware Update. Und nochmal ganz kurz, ich habe jetzt Aja jajaja zu Aja jaja geändert.
Also sprich, wenn das Firmware Update geklappt hat, rebootet er jetzt und dann steht nur
noch Aja jaja da, anstatt Aja jajaja. Hat funktioniert. Also Firmware Update tut. Magic,
genau. Ja perfekt, wunderbar. Also, ich habe mal eine Frage an euch. Ich würde ja gerne
auch ein bisschen Multithreading mit Display machen. Habt ihr noch Brain Kapazitäten frei?
Wir können kurz Pause machen und ich ess was nebenbei. Habt ihr noch, soll man weitermachen?
Oder wollen wir morgen Mittag oder so weitermachen? Max, herzlichen Glückwunsch, du kannst jetzt
eine Firmware laden, hast aber keinen Speicherplatz mehr, um was zu machen. Doch habe ich, ich
habe noch, Moment. Ich habe noch, um genau zu sein. What? Verarschen. Ich habe noch um
genau zu sein. 100? What the fuck? Ich habe noch genau 140 Kilobyte. SDBA 42, neun Monate,
angeschön. Excellent Subscription, huge. Moment. Angeschön. Ich habe noch genau 140 Kilobyte
frei von 1,3 MB. Also sprich, also runden wir mal auf. 1 MB geht drauf für WLAN und HTTPS
TLS. Easy as fuck. Hey, immerhin kann ich jetzt ein secures Update über HTTPS machen,
das WLAN. Dafür habe ich nur noch 140 Kilobyte für mein Sketch für sinnvolle Sachen frei.
Aber man kann es, also man kann der Sache ein bisschen entgegenwirken. Ich könnte zum
Beispiel, ups, also was ich machen kann ist, wenn mir der Speicher nicht reicht, also wenn
mir 100, irgendwie 1,3 MB zu wenig sind, ich kann die Partitionierung ändern von dem, vom
ESP32. Ja, Speicher erweitern, auch wenn Kappa dahinter steht, das geht tatsächlich. Es
sind 4 MB, aber ich kann die Einteilung ändern. Guck mal mal, also ich brauche ja nur, ich
brauche ja nur ungefähr 300 Kilobyte für meine Fonts. Das heißt, jetzt, das habe ich
noch nie gemacht. Das habe ich noch nie gemacht. Ich weiß nur, es gibt hier so CSV-Files, wo
drin steht, wie groß die Firmware ist. Äh ne, ich habe schon einen Compiler. Guck mal,
Optimize for size habe ich schon eingestellt. Mehr geht nicht. Das ist schon Maximum. Was
ich übrigens überraschend finde ist, dass der Upload-Speed, das doppelte geht, von dem,
was eigentlich gehen sollte. Ähm, also sprich, es gibt hier verschiedene Partitionen, Partitionierungsmöglichkeiten
für den Flash. So, und die Fault ist folgendes. Die Fault ist Firmware, das was ihr hier seht,
die Größe, das die ich auch habe, Firmware so groß und für Updates so groß. Dann noch
ein paar Bytes für NFS und OTA, ich weiß nicht, was das genau ist, irgendwelche Metadatengeschichten
und das hier ist das Flash-Filesystem. Also sprich, hier ist er 1,3 MB und hier ist er
5 MB. Was wir machen können ist, wir können das SPIFFs kleiner machen, können das SPIFFs
kleiner machen und, oh das hat, boah fuck, wie geht denn das? Hab ich noch nie ausprobiert.
Das probieren wir jetzt mal aus. Wir können das SPIFFs kleiner machen, ähm, also sprich
das Flash-Filesystem, weil wir brauchen ja plus 300 Kilo Bytes und die Partitionsgröße
für die App, das probieren wir mal aus. Da bin ich jetzt gespannt darauf, wie das funktioniert.
So, wahrscheinlich, okay wir laden uns erstmal die Datei runter. Die legen wir mal hier ins
Hauptverzeichnis, weil ich nicht weiß, wo das anders hin muss. Dann benennen wir die
um, nicht in default, sondern in, keine Ahnung, max.csv. Und geben jetzt mal hier, Build Partitions,
oh fuck, Build Partitions, das ist jetzt ja Default, da sollte sich ja nichts ändern,
aber wir sehen, ob es geht, max.csv an. Da sehe ich schon mal, ob ich in die richtige
Datei gelegt habe. Wie viele Threads kann man gleichzeitig laufen lassen? Ich glaube
sogar, dass das, also okay, ich war unbeschränkt, unbeschränkt wird es nicht sein, aber relativ
viele, max.task, nee, max.task, ja ich weiß es nicht, wahrscheinlich 32 oder sowas, genug,
also parallel laufen kannst du nur zwei, das Ding hat nur zwei Kerne, aber in der Schedule
wird wahrscheinlich einige abkönnen. Ich gehe davon aus, du kannst mehr Threads aufmachen,
als du sinnvoll verwenden kannst, weil der Aufwand so groß wird, bei 30 Milliarden Threads,
Standard Arduino kann nur einer, ja, das funktioniert hier auch nur, weil das ein Free
Athos ist, zwei CPU Kerne hat, mit einem Arduino oben drauf. Okay, die Frage ist jetzt, schlägt
das fehl, wenn ich hier was angebe, was es nicht gibt, Build, not found, okay, okay,
also max.csv, Search, Search Marketplace für csv, Excel Viewer, oh guys, geh mal weg, das
letzte was ich in meinem Visual Studio Code brauche ist, Rainbow csv, was ist denn das,
oh, boah, das ist geil, das brauche ich, exellent, exellent, das brauche ich, beste, ha, guckt
euch mal an, sieht das nicht wunderbar aus jetzt, Highlighter des csv, geiler geht es
ja nicht mehr, so, jetzt müssen wir ein bisschen Big Brain rechnen, jetzt müssen wir ein bisschen
rechnen, also, wenn wir das jetzt größer machen, oh Leute, quick, quick muffs, also
wir machen das jetzt größer, nur mal um 1, sagen wir, wir machen das um 1 größer,
dann muss ich das hier auch 1 hochzählen, so, dann machen wir das hier größer, und
dann muss ich das hier auch um 1 hochzählen, und das hier muss ich um 2 kleiner machen,
oh, fuck, und das hier muss ich um 2 kleiner machen, weil kein Speicherplatz mehr da ist,
oder, oder, funktioniert das jetzt, bin ich ja mal gespannt, ob ich mehr Platz hab, Synthwave
84 Code Highlight, was ist das denn, Moment, jetzt bin ich mal gespannt, was der reportet,
ja, es ist größer, es ist egal, ob das Hex ist, eine 1 ist überall eine 1, also wenn
ich das hier an eine 1 ändere, kann ich es auch da ändern, natürlich, es ist größer
geworden, äh, oh, Moment, nee, nee, Offset muss um 1 hoch, das Offset geht um 1 hoch
und das Offset, das ist immer 1 nach dem anderen, also sprich, das Offset ist 1 hochgegangen
plus das, nee, Moment, Lowbrain, Moment, Moment, ich bin, ich muss nochmal rückgängig
machen, ich bin verwirrt, ja, nee, doch, nee, Moment, Moment, Moment, das da plus das,
ja, tatsächlich, tatsächlich, äh, was sind die riesigen, wenn das PIFs kleiner macht,
eigentlich, eigentlich kein, theoretisch ist das, das, das Realeveling dann nicht so gut,
aber es ist ja immer ehrlich gesagt nicht so, dass man, äh, Megabyteweise Zeug auf
Flash schreibt von so einem Ding am Tag, eigentlich keine, ja, so, also, okay, okay, wir machen,
wir machen, wir machen das, wir machen das jetzt mal größer, ich bin ja gerade, okay,
also, sprich, chat, ihr müsst jetzt mal mitgucken, wie viel größer kann man das machen, das
sind Bites, okay, wir müssen jetzt erstmal, Moment, Moment, Hex to Dezimal und Werter,
perfekt, Hex und Word, Moment, kann das das auch so machen, das da Bites, 2 Kilo Bites,
so, ähm, kann, kann das eigentlich auch Hex, kann das, kann das eigentlich auch Hex, Google,
kann das eigentlich auch so was reinhauen, ne, ah, das wäre zu, zu low, also, 1500 Kilo
Byte, ich brauch aber nur 300, ich brauch aber nur 300 Kilo Byte, oder sagen wir mal,
sagen wir mal so, äh, wir machen, wir machen einfach mal die Hälfte, oder, wir machen
einfach mal die Hälfte, das reicht, also sprich, wir machen anstatt 17, machen wir,
aber bei 17 gibt es eben mit der Hälfte, das ist ein bisschen, bisschen doof, äh, da
waren wir halt, 13 5000 oder so, äh, welche Arduino würdest du als ersten Microcontroller
Anfänger empfehlen, muss er ein Original sein, oder können er breit, ja, kein, ich würde
mir heute gar kein Arduino mehr kaufen, ganz ehrlich, hol dir so einen, gehst in Amazon,
holst den Dreierpack, falls du mal einen kaputt machst, so, Dreierpack 20 Euro, bei Aliexpress
bestellen ist natürlich noch deutlich günstiger, ich finde, die Dinger sind nach wie vor zum
Einstieg wirklich gut, wobei ich jetzt mal echt sagen muss, das Ding hier, was ich hier
grad habe, also was du hier grad siehst, ist auch gar nicht übel, da kostet halt
eine 14 Euro, aber du hast ein Display dabei, und ein Display ist eine coole Sache, wenn
man Sachen übt, dass man sich direkt auf dem Gerät was anzeigen lassen kann, also wirklich
übel finde ich den auch nicht, es sollte einen ESP2866 reißen, ja, aber ich finde
einen ESP32 einfach angenehmer, kannst du auch mit einem ESP2866 anfangen, dann holst
du dir einen NodeMCU oder so, ist ein bisschen günstiger, aber ganz ehrlich, den ESP32 gut
ist, ich finde, ich finde die ESP32, finde ich, finde ich eine Ecke angenehmer, ja,
also der mit Display finde ich auch nicht verkehrt zum Einsteigen, aber die mit Abstand
einfachste Variante, wenn du einfach ein bisschen rumprobieren willst, ist der hier,
da kannst du eigentlich nichts verkehrt machen, und wenn du das Dreierpack nimmst, selbst
wenn du mal bei einem den USB Anschluss abbrichst und den anderen irgendwie grillst, weil du
aus Versehen zu viel Spann hast, hast du immer noch einen, aber die sind recht robust, also
den finde ich gut, und mit dem Display kannst du natürlich sowas hier machen, das ja auch
nicht zu unterschätzen ist, ja, so, ok, wir waren dabei unsere Petitions Tabelle zu berechnen,
also, wie mache ich das jetzt, chat, give energy, also, size, wenn ich die size hier
jetzt, ich vergrößere die Dinger mal, das muss doch hinhauen, wenn ich die um 6 größer
mache, also, wenn ich die um 12 größer mache, dann bin ich hier bei 5, oder 5, ja, ok, das
machen wir nicht, das andere war besser, das andere war besser, also, das reicht nicht,
fuck, ich kann nicht einfach, ich kann nicht einfach die 20 machen, den 20 machen, das
funktioniert nicht, das ist zu wenig, ne, Excel habe ich nicht, ok, dann machen wir
beide 5 hoch, 5 müsste, warte mal, 4 hoch, 4 kann ich so machen, 8, 8, dann habe ich
noch 9, ne, Moment, ich habe ja auch Mist gemacht, Moment, Moment, wenn ich 6 hier hoch
mache, 12, dann habe ich, ich habe eine 0 zu wenig gemacht, ne doch, Excel 95, ne, also,
wenn ich das hier, warte mal, wenn ich das hier einmal, einmal 6 abzieht, sind so, und
beim nächsten Mal 6 sind das dann, warte mal, 11, 5, so, ne, 50.000 sind es danach
noch so, und 50.000, da sieht das nämlich schon ein bisschen anders aus, dann sind das
nämlich am Ende, das reicht, das reicht, das reicht genau für die Fonds, das reicht genau
für die Fonds, kommt mal, wenn ich mich nicht verrechnet habe, das kann nicht immer sein,
das reicht genau für die Fonds, exzellent, so machen wir das, ok, also, dann sind das
hier, 20, ja, Poggers, aber richtig, ok, ok, oh fuck, ok, 20, also ich mache das hier
um 6 rauf, 20, ich mache das hier um 6 rauf, das heißt, das sind 21, ich mache das hier
um 6 rauf, das sind 20, das heißt, das hier müsste 41 sein, stimmt das? Ach stimmt, das
ist Hex, ach ne, das ist auch noch Hex, was soll denn der Scheiß, warum ist das Hex, oh
ne, das ist ja Lowprey, oh fuck, das funktioniert nicht, das ist ja auch Hex, stimmt, natürlich
ist das Hex, ich habe keinen Bock, den Scheiß jetzt in Hex zu rechnen, was ist das für ein
Hex, RIP, RIP Hex, oh, was genau wird das, also was wir heute gemacht haben ist, dass
du übers WLAN, dass du übers WLAN dein Firmwareupdate machen kannst, sieht dann so aus, also du kannst
übers WLAN ein Firmwareupdate auf das Ding packen und du kriegst angezeigt, kann das sein,
dass der irgendwie seine IP vergisst oder so, zumindest du kannst Firmwareupdates machen,
kann das sein, dass das DHCP irgendwie Timeout wird oder sowas, weil das ist definitiv nicht
normal, ah, ich weiß woran das liegt, ich weiß, das habe ich ja ganz vergessen, ja,
man muss hier regelmäßig checken, dass WIFI noch oben ist und wenn WIFI nicht mehr oben
ist, muss man WIFI wieder starten, was aber wurscht ist, ich zeige es dir trotzdem, ich
mache jetzt einfach mal ein Reset, dass WIFI wieder funktioniert, hast du dem Gerät eine
Startschalte IP geben, nee, ich weiß aber woran das liegt, die Dinger verlieren ab und
zu WLAN Verbindungen, man muss immer sowas hier machen, aber das macht man auch in einem
eigenen Task normalerweise, sowas in der Richtung muss man eigentlich immer machen, sowas musst
du irgendwie immer permanent laufen haben, falls er mal Verbindungen verliert, ich weiß,
dass ich Auto-reconnect habe, aber das klappt manchmal nicht und das macht man am besten
auch in einem eigenen Task, so und jetzt kann ich es dir zeigen mit dem Firmwareupdate, zack,
und irgendwann geht es los, Firmwareupdate über das WLAN, aha, ah, wtf, nochmal Firmwareupdate
über das WLAN, ah jetzt klappt es, ok, dass du siehst, wie weit das Firmwareupdate ist,
das haben wir heute gemacht und gerade, genau, wenn das Firmwareupdate durch das Reboot das
ist, das hier ist übrigens nicht gut gemacht, also das hier muss auf jeden Fall immer im
gleichen Set passieren, das kann nicht sein, dass es hier so Race-Conditions gibt zwischen
hier Drawter was, da Drawter was und da stoppt er mitten in der Draw-Aktion, das ist doof,
genau, du siehst, wie weit das Firmwareupdate ist und wenn das Firmwareupdate fertig ist,
dann macht er den Bildschirm aus, Rebootet und startet neu, mit der neuen Firmware und
was ich jetzt gerade probiere ist und ich bin da gerade zu low-brain für das zu berechnen,
weil das ist Hex, ehm, ich will die Partitionsgröße ändern, dass ich mehr Platz habe, ok, chat,
also das heißt Hex, Windows-Taschenrechner, Kalk, zack, Windows-Taschenrechner, wie stellt
man den Kram um, dass es Hex ist, Programmer, ok, das da, wow, das habe ich aber nicht
kopiert, ah doch, habe ich kopiert, so, ehm, in Hex, nein, Hex, ok, Hex, also, ist das jetzt
alles in Hex, passt das jetzt, also, machen wir es mal so, ehm, ich will mal, sagen wir
mal, 300 Kilo Bytes oder so, 300 Kilo Bytes, also sagen wir mal, 300 Kilo Bytes, also gut,
das heißt, ich kann jetzt hier, Moment, Minus, warte mal, immer in Google, klar, also, das
heißt, ich rechne jetzt hier mal Minus, warte mal, was hatten wir jetzt, Minus 300.000, 300.000,
nee, what the fuck, achso, das ist ja die aktuelle, Moment, achso, das ist, Moment, das ist ja
nicht in Hex, was mache ich denn hier, ah fuck, das muss ich, das ist ja nicht in Hex,
das ist, das ist Dezimal, kann das Google auch, nee, ah, was, what the fuck, eigentlich nur
plus 60.000, ja, glaube ich dir, glaube ich dir, ich muss mir das sagen, ich mache das
zu sehr in sowas, Dezimal 6, okay, what, also muss ich jetzt für 300 Kilo Bytes, plus,
das rechnen, also, da komm ich, das krieg ich da, dreh ich ja, dreh ich ja ab im Kopf,
bis ich den Scheiß berechnen hab für alles, eigentlich doch nur plus 60.000 und dann hast
du deine, achso, ja, aber das ist ja, das ist ja, das ist ja wir, wobei, wisst ihr was
ich jetzt nicht kapier, das weiß ich nicht kapier, warum ist der Offset bei 29, 15.000
Hex, plus 14.000 Hex sind doch nicht 29, oder, das ist doch irgendwas, hä, ist das echt
so, probieren wir mal aus, hallo, plus, achso, warum ist das in Hex so, ist das überhaupt
Hex, was man hier eingeben, Alter, Winner aus Taschenrechner, please, macht der das
jetzt eigentlich richtig, ist das jetzt überhaupt Hex, was ich hier eingebe, und warum löscht
er den Kram hier nicht, okay, der Winner aus Taschenrechner, Calculator, was ist denn,
was, ja, ja, gut, Hex, Hex Calculator, excellent, okay, das da, plus das da, Calculate, was,
was ist, kennt jemand gescheit, warum ist das 28, jetzt blicke ich nicht mehr durch,
jetzt blicke ich nicht mehr durch, warum das so ist, keine Ahnung, das ist mir jetzt zu,
also kann man den Scheiß doch einfach zusammenrechnen, hab ich das gar nicht falsch gemacht eben,
quick muffs, okay, okay, also, also, warte mal, ich mach jetzt, ich mach jetzt mal wirklich
ganz lowbrane, ja, also, drei dazu, drei dazu, äh, Moment, acht, äh, Moment, was mach
ich denn da für ein Scheiß, sieben, acht, sieben, und das hier jetzt, und das sind jetzt
also, dann 34, oder, ne, 35, 35, 30, so, und, ja, das, nicht nur für dich, nicht nur für
dich, Spanisch, das ist für mich auch Spanisch, okay, wir rechnen jetzt einfach mal, 18 Hex,
okay, Moment, Hex, wo ist unser Hex Calculator, wo ist unser Hex Calculator in, wo ist er,
so, 2F, ah, exzellent, also, 18 plus 17, ha, jetzt, jetzt, jetzt kommen wir der Sache näher,
jetzt kommen wir der Sache näher, oh, Mist, 2F, so, äh, okay, und, und, und, Moment, rückwärts,
Moment, rückwärts, also, ich hab jetzt das hier ja von 14, also, ich hab jeweils drei
dazu gerechnet, also, ähm, Minus, jetzt, kann ich jetzt einfach, ah ja, 14.000, genau, aha,
okay, das stimmt noch alles, okay, stimmt das jetzt, was ich da getrieben hab, jetzt
bin ich ja mal gespannt, okay, wir haben, wir haben eine ganze Ecke mehr, wir haben eine
ganze Ecke mehr Platz, so, ähm, what, so, und das sind in Kilobyte, ja, es ist eigentlich
viel zu viel, es ist eigentlich viel zu viel, okay, äh, aber wir haben jetzt, wir haben
jetzt mehr Platz, jetzt, was ich mich jetzt frage ist, stimmt das jetzt, was ich gemacht
hab, ist das, ist das jetzt richtig, upload, also, mal gucken, ob ich jetzt uploaden kann,
ach, nee, Moment, vorher muss ich, muss man, muss man das einmal pushen, wie updated man
die Position, hab ihr mal ein Excel in Rechner gebastelt in Excel, ja, stimmt, okay, okay,
okay, so, und jetzt, jetzt uploaden wir noch mal die, äh, Fonts, naja, das packt wieder
rum, ich muss noch kurz rausziehen wieder, naja, so, Fonts updaten, sagt der auch irgendwie,
was, wie groß, wie groß ist, Autotacting, Flashing, Compress, sagt der irgendwas, wie
groß das Spiffs ist, das ist seltene Papagei, man sieht den hier, ja, so, und das soll jetzt
funktioniert haben, anscheinend, anscheinend, okay, Moment, das, das hat jetzt echt funktioniert,
also, war, war das so einfach, also, einfach, ist das so, ist das so simpel, die ESP32-Partition,
anscheinend, Partition Tables, Outspeed Erase Flash, naja, brauchen wir nicht, ja, ja, okay,
also, ich glaube, das war's jetzt, ich glaube, das war's jetzt, oder, also, das hat jetzt,
das hat jetzt funktioniert, okay, Upload, tatsächlich, funktioniert, krasser Shit, wir
haben gerade die Partition, Partitionierung vom Flash geändert, was, hab ich doch nie
gemacht, ähm, was wird das, allgemein erst mal ein Display ansprechen, naja, also, was
wir heute gemacht haben ist, wie du grad siehst, dass wir eine Firmware, dass wir ein Firmware
Update übers WLAN machen können und auf dem Display angezeigt bekommen, wie weit das Update
ist, ja, und wenn das geht, kann man damit alles möglich machen, also, ich werd wahrscheinlich
dieses Gerät hier für meine Klimaanlage verwenden, ich hab ja hier schon mal was gebastelt, nämlich
das hier mit einem anderen, allerdings, mit einem Farbdisplay find ich das viel besser,
bei einem Farbdisplay find ich das viel besser, da werd ich nämlich beispielsweise hier für
Temperatur, Klima-, äh, Temperatur, Luftfeuchtigkeit und sonst was, nehm ich dann irgendwie nen
Emoji für ein-, für keine Ahnung, für Cold, eins, irgendwie sowas da, oder Snowflake
oder sonst was, und für Hot, und dann zeig ich die passenden Sachen an, je nachdem, was
auf meiner Klimaanlage passiert, aber aktuell ging es einfach darum, dass man Update machen
kann übers WLAN, und du siehst, Update übers WLAN, Funst, zack, inklusive Progress auf
dem Bildschirm, Leute, wir sind 5 Stunden da jetzt schon dabei, wisst ihr was, die Multi-
flooding-Geschichte, gefunden hab ich dich über dein Nextcloud-Video, du meinst, wo
ich Nextcloud ein bisschen geflammt habe, ja ich kenn das, ich kenn das mit der Emoji-Funktion,
aber ich guck mir lieber die Bilder auf GetEmoji, auf JoyPixels an, weil ich die Windows Emojis
maximal hässlich finde, ähm, also ich glaube den Rest, also die Multi-Flooding-Geschichte
machen wir morgen, ich probier jetzt noch eine Sache aus, da kann ja der Flo96 mal mit
BigBrain machen, ähm, ist, also wenn ich da jetzt noch mal 300 hinzufüge, ist eigentlich
kein Problem, ne, also sprich, wenn ich jetzt sowas hier mache, plus, dann ist, aha, aha,
jetzt, jetzt, oh fuck, jetzt wird's komplizierter, oh jetzt, jetzt kommt BigBrain-Time, das,
das heißt, das heißt, ok, ok, das heißt, anstatt 20, äh, wäre die Size hier jetzt
das da, seh ich das richtig, und dann wäre das hier 1B, ne, was, dann ist zu wenig Platz
für Spiffs, echt, das müsste doch eigentlich reichen, das reicht noch, das reicht noch,
ok, das, das müsste jetzt hier stimmen, so, dann machen wir das da wieder, so, hier steh
ich jetzt ein bisschen auf dem Schlauch, also im Prinzip rechne ich doch jetzt hier einfach
1B plus 1A und dann krieg ich raus 10, wat, äh, kann das sein, Moment, warum hab ich
weniger Stellen, ach, Minus, ich muss plus rechnen, ich kann, noob, Minus gerechnen,
so, hä, so müsste es jetzt passen, ach so, äh, Moment, hier muss ich ja noch abziehen,
äh, Moment, was, was, was, was, hier stell ich jetzt hier ab, von dem machen wir jetzt
Minus, äh, noch mal, 30.000, eh, ok, big brain, big brain, noob, so langsam hab ich's
raus, mal gucken, wie viel Platz ich jetzt hab, guck mal, guck mal, bam, 68, jetzt hab
ich richtig Platz, so, und das hier in Dezimal, Bites zu Kilobyte sind 917 Kilobyte, wunderbar,
oh, oh, ich hab mich verrechnet Leute, ich glaub ich hab mich irgendwo verrechnet, wo
hab ich mich verrechnet, Monkess, ich hab mich verrechnet, F, F, wo hab ich mich denn
verrechnet, du bist mit dem Gesamtspeicher drüber, ja, aber das kann doch nicht sein,
ich hab doch eigentlich nix geändert, vom Gesamt, von der Gesamtmenge her, ok, ok,
das war das ganze nochmal rückgängig, ok, Upload, Upload ist gut, ist gut, ESP, beruhig
dich, beruhig dich, alles klar, Partitionsgröße wieder in Ordnung, alles gut, ah, alles gut,
kein Panik, exellent, so, ah, ich weiß was ich verkehrt gemacht hab, ich weiß was ich
verkehrt gemacht hab, also, sprich, das da plus 30.000 war das hier, ich glaub ich weiß
was ich verkehrt gemacht hab, ich muss nämlich rechnen, das da plus 10.000, das ist doch
richtig, hab ich doch richtig gemacht, hab ich doch richtig gemacht, hab ich doch richtig
gemacht, hab ich doch richtig gemacht, hä, hab ich doch richtig gemacht und jetzt rechnen,
das hab ich doch, hä, was hab ich denn jetzt verkehrt gemacht, ah, das hab ich verkehrt
gemacht, ich hab einmal zu wenig abgezogen, so, und jetzt, und jetzt, hä, hä, gehts jetzt,
guck mal ich weiß wie viel Platz ich jetzt hab hier, guck euch das mal an hier, so viel
Platz für Zeugs und ich kann OTA machen, aha, es funktioniert, achso, Fonts not found,
ja, ok, das ist, das ist klar, dass Fonts not found sind, weil ich muss hier die Fonts
wieder Uploaden, Fonts Uploaden, jaja, ist gut, komm, come on bro, ok, das ist ja was,
bevor die Font, bevor das hier wieder rumspackt, einmal rausziehen und reinziehen und dann
geht der Upload immer, so, jetzt sind nämlich auch die Fonts da, so, macht der jetzt was,
jaja, und jetzt, zack, Firmware Upload, jaja, clap, das ist doch, das ist doch mal eine
gute Partitionierung, hm, ungefähr ein MB, ungefähr ein MB Platz für Spiffs, was eigentlich
top ist, ein MB für Dateien, reicht dicke und, oh fuck, ich bin schon wieder mit dem
Stuhl über mein Kopfhörer, Alter, geh, so, jetzt hab ich richtig viel Platz, das ist,
das ist ultra nice, Querzi, zwei Monate, dankeschön, excellent subscription, dankeschön, nice,
hatabl dance er ι keÇerL colony hüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüıüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüü
nur 70 prozent
flash belegt für meinen sketch jetzt habe ich quasi in diesen 70 prozent wlan drinnen
hatte der ps update drinnen
704 kilobyte für fonds
echt bin ich nicht auf 900 noch was gekommen das da
das da kann kann google sowas
beides 2 kilobytes
nee ist einfach nur eine header datei leider haben die es immer noch nicht geschafft
kann google nicht nicht wirklich sowas tun dennst
was nicht du hast recht ich habe mich verrechnet es sind vorhin habe ich mit a gerechnet du hast
recht sind 720 kilobyte für hast recht nee das ist das ist gleiche wie die header datei das dumme
ist halt auch an c plus plus dass sie immer noch so fest hängen an ihrem header feil gedöns das
ist eines der punkte die ich mit mit am kreppigsten finde von c plus plus so ein ordentliches
metadata wie soll man das nennen exports wie nennt man das richtig modul module also sprich
sowas was sie schon seit fünf versionen machen wollen so ein ordentliches modul system das ist
mal langsam wird mal echt zeit jetzt haben sie es angedacht für 20 also für c plus plus 20
meter aber es wird mal echt sein also header feil rumgefuddelt ist wirklich absolut abfuck
wenn man sich das gerade bei anderen sprachen anguckt das öffnet auch das öffnet endlich
mal die möglichkeit dass man einen ordentlichen package manager oder oder dependency abhängigkeits
auflös paket manager für c plus plus macht das gibt es jetzt zwar schon aber ohne module wird
das nicht so richtig funktionieren mit modulen dann ich also ich persönlich denke dass c plus
plus module eines der wichtigsten sachen ist die sie schon hätten zehn jahren vor zehn jahren
machen sollen als quasi ruby mit gems und allem aufgekommen ist mehr als diesen inkonsistenten
anderen krepp den sie da teil was eingeführt haben es gibt in c plus plus so viel doppelt
und dreifache dinger da muss ich nur mal gucken muss ich nur mal angucken wie viele varianten es
gibt sachen zu swappen standard swap atomic ich meine ich weiß klar alles hat ein bisschen
andere varianten aber das ist doch so macht man doch keine api standard swap exchange pointer
swap atomic exchange dann atomic things mit replace shared pointers swap alle möglichen
sachen doppelt und dreifach komplett quer durch die standard library durch weiß nicht was sie
sich dabei wirklich gedacht haben so macht man so macht man keine keine library die man gerne
verwendet als entwickler also ganz ehrlich wenn ich wenn ich eine funktion anbieten möchte die
werte swappt dann mache ich sowas wie standard swap meinetwegen und da gibt es halt einen
führenden atomic parameter ja vielleicht unterstützt das manche werte nicht dann mache ich das halt mit
einem lock im hintergrund für die plattform so dass es zumindest deterministisch funktioniert
und schreibt irgendwie doku rein ja auf plattform xy ist das nicht atomic in hardware irgendwas so
dass man das ordentlich verwenden kann aber also die c plus plus standard das ist so so quer bet
jeder hat mal irgendwo sein häufchen hingemacht allein schon allein schon das hier guckt mal also
in c plus plus kannst du sachen initialisieren zum beispiel so zum beispiel so habe ich hier
habe ich hier irgendwie ein beispiel für ja zum beispiel ist es erlaubt also so die sachen zu
initialisieren finde ich ok du sagst dass es dieser typ von funktions pointer im endeffekt mit diesem
namen der ist hier null an der stelle aber so ist auch erlaubt und jetzt ist die frage jetzt weißt
du es nie ist das hier jetzt null oder ist das irgendein interner standard constructor der
aufgerufen wird weil c plus plus ja quasi das da und das da manchmal mehr oder weniger gleich
macht also es ist es ist so inkonsistent irgendwie dann hast du sachen die du die du initialisieren
kannst hier ganz normal im aufruf dann mit geschweiften klammern dingern ja es hat alles
irgendwie seine daseinsberechtigung das ist schon klar ganz ganz einfach nur weil sie bock drauf
hatten haben sie das nicht gemacht aber eine konsistente und und nachvollziehbare api sieht
einfach anders aus als das was die da in der c++ standard library gestrickt haben und jedes mal
wenn ich mir irgendwelche vorträge von irgendwelchen c++ konferenzen anguckt denke
ich mir alter hättet ihr es nicht einfach einfach machen können so dass man sich nicht zwei stunden
vortrag anhören muss dass man weiß dass man manche paraneter nicht verwenden darf obwohl
sie da sind oder hättet ihr es nicht so machen können dass ich nicht sachen übergeben kann die
es kaputt machen oder so und es gibt es gibt so viele sachen an c++ die ich also für mich
ist c++ mit die die ekligste sprache die es einfach gibt und wie gesagt ich könnte mich da
monate und jahre drüber auslassen ja also plus plus ja dann gibt die leute damit mit holy sea
und und c++ ganz abgespeckt anfangen aber ist es wirklich ist es wirklich eklig so und ich
zeige euch was was auch was auch witzig ist ich habe letztens gesucht wie man also wie man
am besten einen c++ string formatieren kann mit printf ich finde es ja auch ein bisschen
affig dass kein printf implementierung mitkommt bei c++ die für c++ typen gültig ist
und die erweiterbar ist für custom typen in c sharp ist das zum beispiel wunderbar in c
sharp hast du eine feste string die du bei jeder klasse standardmäßig mit dabei haben
musst du kannst es überschreiben musst du aber nicht und du kannst das einfach verwenden in
string interpolation also quasi so wie man formatiert das strings in c sharp macht und
das funktioniert mit jedem typ mit jedem eingebauten typ mit jedem custom typ entweder kommt der
klassenname raus oder ich habe to string überschrieben und das kommt also hätte man relativ gut machen
können aber hatten sie keinen bock drauf weil auch immer wie auch immer man weiß es nicht und
ich habe jetzt mal gesucht die beste variante passbar auf stack overflow jetzt die beste
variante format also printf printf für standard string ich habe die ich habe die abgewandelte
variante gesucht wie bekomme ich einen standard string printf formatiert in den buffer rein aber
ob ich den jetzt in buffer rein bekommen oder ausgeben ist erstmal egal guckt euch mal die
akzeptierte antwort an also also i have to format standard string with printf and send it into
file stream eigentlich eine super einfache anforderung ja auch so eine sache wo ich das
habe ich in c++ total oft ich denke mir ach easy kein ding und dann gucke ich nach fuck geht in
c++ nicht so und jetzt und jetzt passt auf passt passt passt auf die antwort die antwort erst mal
you can do this directly ja klar ich weiß dass man das nicht direkt machen kann aber warum nicht
warum ist keine printf implementierung für standard string dabei also dass das c dass das c printf
kein kein c++ string versteht verstehe ich aber warum gibt es kein standard printf was den c++
string versteht übrigens rat in a box wo wir gerade beim thema sind ich habe auch so ein bisschen
klein wie zum beispiel das hier weil es mir auf den sack geht aber wohlgemerkt mit custom
klassen funktioniert ja auch nicht mit also mit mit custom klassen mit custom klassen funktioniert
das hier auch nicht das funktioniert nur mit basic mit basic types man kann sich da was was
ich richtig gut finde ist da gibt es doch diese dings wie ist das getappt die finde ich gut hier
fmt fmt ist gut die haben die haben python style formatting für c++ leider kann man nicht mal
string als prozent s übergeben ja genau solche sachen so und jetzt und jetzt können wir kurz
kaputtlachen also simple frage und allein schon dass die antwort dass es nicht möglich ist erst
schon mal damit you can't do this directly und jetzt passt mal auf die antwort auf was der typ
vorschlägt wie man das machen kann nee das ist klar dass das was ich auch mache das geht
aber nicht verpasst pass mal auf was ist das euer ernst ist das c++ ist das euer ernst
das da und der typ ist auch kein das ist already pretty easy die alle noch von gut geistern
verlassen oder was also ganz ehrlich ganz ehrlich die c++ leute ich glaube wenn du das
lang genug verwendest die schmilzt einfach so der kopfwerk dass du das echt geil findest so was hier
man kann das man kann das irgendwie noch verstehen ja aber für so was simples wie
einen standard string in einen buffer schreiben erstens warum muss man da überhaupt mit templates
anfangen und und zweitens warum muss man da überhaupt was selbst für machen das ist genau
so wie dass die dass der c++ standard so ich ich rente jetzt mal ein bisschen so dass der
c++ standard string das der kein to lower case hat gibt es nicht ich mein ich mein der arduino
string hat das wenn wir gerade dabei sind welche ist deine lieblingsprogrammiersprache c sharp
gefolgt von ruby eigentlich ruby und c sharp beides auf gleicher gleicher gleicher höhe
allerdings ist ruby leider in letzten jahren sehr vom ja vom mainstream irgendwie ein bisschen
absteigenden ast ja und ruby kamen jetzt leider nicht mehr so viel verwenden also ruby und c
sharp in meiner absolut lieblichen sprachen so blöd es klingt ich bin mittlerweile sogar also
ich lese ich lese da ja auch immer ganz gerne über java script ich muss ehrlich sagen so
schlecht finde ich ja war es ist weit davon entfernt mein lieblingssprach so schlecht finde
ich javascript mittlerweile gar nicht mehr heißen ist auch ok da mache ich nicht so viel drin aber
mein absolut lieblings lieblingssprache ist die schaap ja was ich auch nicht mag aber ok
finde ist go auch so ein paar eigenheiten die als features verkauft werden zum beispiel dass
es keine das generics überflüssig werden dass es keine richtigen maps gibt was fällt mir
sonst noch aus dem kopf ein das gibt es gibt es ein paar merkwünsche dass das zum beispiel
auch da dass sie der meinung sind ok eine filterfunktion ist doof macht lieber eine
schleife so was da bin ich jetzt auch nicht also go ist ok aber ich finde auch hatten
paar fragwürdige entscheidungen genau das ist auch so was wo ich bin auf z plus plus frage
warum warum hat der warum hat standard string ich meine diese kombination an wörtern ja also
standard und string spricht das soll quasi die default standard string implementierung für diese
sprache sein warum hat die kein to lower oder to upper es kann mir doch keiner erzählen dass
das zu blutet wäre man hat es aber abgesehen wenn ich nicht verwende dann dann brauchst auch
keinen platz das ist lächerlich was das was die string was die default string anbietet von
z plus plus das ist nix und gerade das string klasse klasse braucht ordentlich funktionalität
dass man nicht auf die idee kommt wie in z plus plus jeder eine eigene string klasse zu basteln
jemand im chat ich glaube red in a box war es vorhin hat auch irgendwie eine eigene string
geschichte weil die standard string klasse kacke ist du kannst es nicht gescheit slice du kannst
das nicht gescheit to upper to lower du kannst du kannst das nicht gescheit filtern du kannst nix
index office glaube ich kann es nicht mal index off sehe ich das richtig feind ok feind kannst ja
aber so ein index oft wird zum beispiel auch was da können sie sich wirklich von dass die
scharp string klasse was abschneiden die kann das einfach ja das ist das nächste flow 96 warum
sowas überhaupt notwendig ist warum erwartet man von seinen programmierern dass die für so
was einfaches wie string to lower ernsthaft sowas schreiben und und dann und dann noch
diese iterator shit das ist das nächste was mich nerven würde die ganze iterator geschichte
in t plus plus ist auch wahnsinnig undurchsichtig da gibt es auch drei verschiedene varianten wieder
ernsthaft warum muss warum erwarte ich von meinen programmieren sowas zu schreiben anstatt einfach
eine to lower to upper methode anzubieten in meinen in meiner standard leib ich meine es ist die
standard library da kann es aber to lower für ein string jetzt nicht zu viel sein und solche
dinger hier allein schon allein schon dass so dass sowas überhaupt notwendig ist ja ein iterator
ordentlich implementiert sollte das unter der haube machen können wenn so was also wenn es sowas wie
for each gibt wenn es mit wenn es ein konstrukt wie for each gibt dann erwarte ich dass das ohne
beginn und end funktioniert da kann ich beim normalen vor bleiben lustigerweise gibt es ja
ein schleifen konstrukt was das kann vor range kann das wenn ich das wenn das hier ein vector
ist das geht es ist ja nicht so als wäre das total nicht möglich ja mit concept soll das besser
werden ja habe ich auch ich habe letztens in talktube gesehen was was dann auch zukommt wobei
ich mich als ernsthaft frage es gibt so viele sachen die die ich mittlerweile als als standard
an sehe wo die wo die dann teilweise bei c++ schon seit zehn jahren rum machen und dann ankommen mit
ja c++ 20 21 22 c++ 35 hat das dann geil c++ hat dann mit c++ 28 mal irgendwas was keine ahnung
ruby seit 30 jahren hat also das was auch geiles ist die geschichte wie sie wie sie das wie sie
das mit multi multithreading und so gemacht haben es gibt es gibt standard standard thread ok es gibt
aber auch standard es und es gibt auf hack ich habe vergessen jetzt habe ich vergessen was die
eigentliche sache was ich erzählen wollte dass dass das auch wieder total inkonsistent ist ja
zumindest es scheint also in c sharp sieht das ganze so aus task dot run dann habe ich eine
ordentliche lambda syntax dahinter und siehe da es funktioniert das alles was ich machen muss so
und mit standard s-sync muss ich dann irgendwie so dinger machen standard s-sync dann erstmal
diese komische lambda syntax ok aber da kann ich jetzt noch drüber streiten das da standard
lounge bin ich mir nicht sicher was was ich davon nehmen muss also das da und dann arguments so
also weiß ich was so das jetzt irgendwie besser ist ich mein klar man kann auch man kann auch
einfach task thread erstellen aber es ist halt hakelig dass das worauf ich raus will
versuch mal die thread id ich dachte ich dachte get id geht gibt es extra dafür
gab es da nicht gab es da nicht in get id extra macht dazu wenig mit
ja ich weiß aber kann sie schaft dann c oder c++ code für einen hab halt ja und nein c code
gar kein problem c++ code nur und das wie so ziemlich jede andere sprache außer nicht mal
c++ selbst c++ kommt ja mit c++ teilweise nicht klar c++ code nicht liegt aber einfach daran
c++ ist zu wir dass das zu implementieren dass das andere sprache direkt callen kann geht nicht
aber was du machen kannst und das ist eigentlich auch so wie man das normalerweise macht wenn
du eine c++ wenn du eine sache in c++ hast die du verwenden willst dann exportierst du das
als c funktion und dann kannst du es von jeder klasse ausrufen also zum zum beispiel die
das war reines c das war jetzt ein blödes blödes beispiel gewesen aber du kannst du kannst
c++ und exportierst ein paar reine statische c funktionen raus das geht dann kannst du es von
jeder anderen klasse auch verwenden ja also zeugs gut aber wir haben heute richtig richtig was
geschafft muss man sagen wir sind fünfeinhalb stunden ganz schön lang sieht nicht so aus außer
das eierjahr auf dem display steht schön dass übrigens so viele leute am start sind ich glaube
mal dass mit dem controller oben rechts in der ecke ist gut angekommen das werde ich auch beibehalten
wenn wir wieder irgendwelche programmiergeschichten oder microcontroller geschichten machen das ist
gut wenn man wenn man da was sieht ja überleg gerade auch noch eine sache also morgen machen wir auf
jeden fall weiter mit dem multithreaded async malen auf den bildschirm weil so ist das doof
das klappt nur weil hier ein delay drin ist und wenn das im ungünstigsten fall aufhört dann
kackts ab das ist nicht gut deswegen das malen auf das display muss immer vom gleichen thread
funktionen kommen sonst geht das kaputt du kannst nicht an die pit kommen die wird in einem wrapper
versteckt in städten ach so id ist nicht die pit gut es wäre auch zu einfach na gut die pit
kann es nicht sein weil die pitt ja pro programm gleich ist thread id ja aber was gibt denn get
id was gibt denn get id aus wenn ich die wenn ich die hast du schon mal ein led display angesteuert
ja das ist ein led display aber ich glaube du meinst ein richtig echtes na so ein richtiges
echtes großes nee habe ich noch nicht ich weiß prinzipiell wie es über vga funktioniert dann
ist es egal was man anspricht ob lcd oder oder was auch immer röhren monitor also ich weiß
prinzipiell wie es über vga funktioniert also ich könnte jetzt nicht runter programmieren ja ganz
klar vga ist da noch am einfachsten weil vga so schön manuell teilweise analog ist hdmi dvi
kein plastenschimmer allerdings ist es ja auch was was die grafikkarte für mich macht es sei denn
ich möchte das mit inso einem controller hier machen also vga es gibt ja leute die haben schon
vga für den esp 32 programmiert das funktioniert ich glaube hdmi und dvi wird nicht so ohne weiteres
klappen über den esp 32 oder irgendwer müsste das im hdmi ziemlich sicher nicht da brauchst du
wahrscheinlich einige sachen die der esp 32 nicht hat dvi vielleicht dvi mit vga fallback auf
jeden fall aber ansonsten in einem normalen rechner ist das ansteuern von einem led display
oder von lcd oder von einem bildschirm ja überhaupt nicht das problem macht die grafikkarte für dich
du musst einfach nur der grafikkarte sagen was sie was sie ausgeben soll und dann ist es auf dem
display so ach okay ja das red in a box ist es typisch typisch c++ einfach wirre sachen wo man
sich denkt warum warum mut warum mutet ihr das euren programmieren eigentlich zu warum macht
es denn nicht so dass es intuitiv und irgendwie in sich schlüssig verwendbar ist das ist eigentlich
das größte problem was ein c++ hat du stehst da manchmal vor einer wand und denkst dir warum
macht ihr es denn so kompliziert und so inkonsistent und so an fünf stellen es gibt
auch display die über spi laufen ja das hier zum beispiel also wenn es danach geht dann habe
ich schon mal selbst angesprochen aber auch nur über eine library also es ist ein spi tft display
ich habe mir was in meinem c++ sagt textdokument aufgeschrieben wo ich jetzt nicht checke ach
genau jetzt weiß ich worauf ich raus wollte die fehlermeldung cac w das habe ich mir meinem
c++ document aufgeschrieben hat jemand eine ahnung warum das nicht funktioniert by the way
hat jemand eine ahnung warum das nicht funktioniert die fehlermeldung
kann mir das jemand schlüssig erklären warum das nicht funktioniert
ja right in the box das habe ich mir dann auch zusammen gereimt das habe ich mir dann auch
zusammen gereimt allerdings warum kann ich null pointer es sein aber warum kann ich null pointer
es sein warum kann ich null pointer es sein das ist ja die einzige frage warum geht das warum
warum kann ich null pointer es sein aber ich kann nicht checken ob es ungleich null pointer ist
c++ also die fehlermeldung die eigentlich ist sagt diesen operator gibt es nicht also sprich
die haben die haben die haben den assign die haben den assign operator overloaded und haben
wahrscheinlich irgendwas eingebaut dass der assign operator mit null pointer funktioniert
was beinhaltet dass du ja wenn ich das wüsste keine ich weiß es ist wahrscheinlich ist ich kann
es nicht die bank hier drin keine ahnung wie man jetzt zumindest nicht mit breakpoints
das sind so dinge da auf die stoß sich laufen in c++ und ich denke what the fuck es ist all
unlogisch es fuck wieder warum ja auch noch so eine auch noch so eine sache wo ich mich
gerade schon beim c++ so aufregeln hier also man kann ja wenn man den vector hat kann man ja sowas
machen vector erase und dann standard remove vector beginnt vector end dann das was man
removing will also so wert und dann bis zum ende solche konstrukte was ist denn mit euch los warum
gibt es nicht einfach ein vector vector quatsch hier vector remove all und dann gebe ich hier
irgendwann über gebe ich hier irgendwas was ich what the fuck da hast du auch eine template
funktion kann ich verstehen weil sowas braucht man öfters ich verstehe nicht warum gibt's warum
warum warum warum ist jeder scheiß doppelt dreifach übelst komplizierter standard library aber so
simple sachen so einfache dinge die du laufen brauchst nicht erschließt ich mir nicht man kann
bei c sharp beispielsweise sagen die übertreiben es teilweise ein bisschen also was du damit link
alles machen filtern kannst auf listen und erase ist teilweise nicht mehr normal teilweise auch
beißt sich beißt sich selbst so quasi in schwanz weil es ultra langsam ist weil es fünf mal durch
die liste durchgeht dass die übertreiben ist vielleicht manchmal ein bisschen aber in 10 plus
plus ist ist da die einfach machen wir einfach gar nicht aber keine bock drauf so lassen wir
bleiben ist overrated jebaited ja die standard benahmung ist auch nicht geil weiter übrigens
dieses ist wifi connected das sollte ich mal drin lassen weil wenn wifi nicht connecten ist dann
muss er reconnecten ich muss mal kurz auf meinem github gucken wie man das richtig macht eins in
den chat nein kappa 123 in den chat wenn schon habe ich es hier das letzte mal gemacht so aus
ja genau einfach reifer ist connected reconnect also ich reconnecte mich einfach komplett
hardcoded auch gut kann man auch machen nun gut ok chat wir machen morgen weiter 10 uhr ungefähr
930 bis 1030 aufwacht stream ich werde jetzt erst mal aufgehen und was futtern und dann sehen
wir uns morgen ich gucke mal ob ich irgendwann hosten kann von kleineren denen ich folg ob es irgendwas gibt
haben alle schon so viel zuschauen von den ganz kleinen das die online sind den ich folge von
die gucke ich eigentlich kaum noch eine also eigentlich schnitt dabei
gut alles klar leute wir sehen uns morgen morgen geht es weiter und
chat ich habe euch gerade ausgeblendet also wir sehen uns dann morgen ich hoffe euch
hat es gefallen ich glaube dass mit der kamera oben ist gut angekommen schön dass so viele
dabei waren obwohl es ein controller programmier stream war das ist ja normalerweise nicht so dass
da so viele zugucken aber ich glaube das bild oben hat viel dazu beigetragen dass das ist
interessant interessanter ist zum zugucken auch ein wirklich lang und fünfe halb stunden was für
ein c++ compiler benutzt du den einzigen den man von esp 32 verwenden kann den offiziellen
für die extensor den cpus gibt nur ein das ist das ist irgendwie gcc das unter der haube ist es irgendwie gcc und
dann sehen wir uns morgen früh beim aufwachstream und morgen mittag nach dem aufwachstream irgendwann
ein bisschen später machen wir wahrscheinlich hieran weiter und programmieren das multithreaded mit
dem display das ist alles nur von einem stadt aus funktioniert also ist nicht fertig ne ist
nicht fertig was was fehlt ist noch erst dass wir das ja ordentlich waren und dass das rick also das
hier kommt eine eigene klasse für für display und ich will dass das malen auf dem display immer
vom gleichen thread aus funktionieren immer vom gleichen task aus funktioniert dass wir nicht so
ein mist haben wie der main loop greift drauf zu und hier greift was drauf zu das ist müll ich will
dass man das adden kann in irgend so eine trocke oder irgendwas keine ahnung und dass dann immer
ein task im hintergrund hergeht und sagt gibt es neue jobs die ich aufs display malen soll ja
wohl aufs display malen dann hast du nämlich keine probleme wieso hast du kein jepp enable weil jepp
ein dummes emote ist jepp ist nicht feifett und wir haben nur feifett emote alles klar leute wir
sehen uns bis morgen macht gut zu
