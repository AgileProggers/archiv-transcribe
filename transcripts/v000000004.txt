Das war's für heute.
Vielen Dank für's Zuschauen.
Das war's für heute.
Das war's für heute.
Hallo Leute, habt ihr mal eine gute Idee für einen E-Mode?
Das schwitzt
Das ist blöd hier, das gefällt mir nicht
Bist du erkältet? Nee, zum Glück nicht, ich war erst vor zwei Wochen erkältet, das reicht
Wir brauchen einen E-Mode, wo was schwitzt
Schwitzer E-Mode, das haben bestimmt noch irgendwelche Call of Duty Channels, das haben
noch garantiert Schwitzer E-Modes, du hörst dich irgendwie nach Saal an, ja das kann sein
Das E-Mode brauchen wir, Hot Grill
Ein Weep-Schwitzer E-Mode, okay, da freut sich ja Sebaro wahrscheinlich
E-Modes sind geedit
Also wir haben jetzt Schwitzer E-Modes, haben wir einmal Hot Grill, äh, sorry, falsches
E-Mode
Wir haben einmal das da und wir haben Hot Grill, das reicht als Schwitz E-Mode
Übrigens wisst ihr, was ich mir heute für ein T-Shirt bestellt habe, das da
Irgendwie war es mir danach, das habe ich gesehen, haben wir gerade das Muster haben
Das kann man bei Amazon nicht einfach mal das Bild groß machen
Irgendwie ist mein Overlay kaputt, gut mal, auch jetzt gehts
Mal gespannt, ob das auch so gut aussieht, wie es hier auf dem Bild aufgedruckt ist
Oder ob das irgendwie so ein billig, billig China Druck ist
Keine Bewertung
Weiß gar nicht, ob man überhaupt MonkaS E-Modes irgendwie drucken darf
Leiser machen
Es ist warm und ich bin auch nicht sonderlich wach
Ich bin gerade heimgekommen und dadurch, dass es da so warm war, bin ich irgendwie voll
im Arsch
Ich habe mir gedacht, ich muss jetzt trotzdem Streben anschmeißen
Ich habe bloß das genommen
Ich habe das genommen
Gucken, Donnerstag kommt, weil MonkaS T-Shirt
Max Büssel stellt sonn heute, wie verstehst du das, was versteht er Donner?
Ich glaube jetzt hat Twitch gecheckt, dass das Stream on ist, jetzt kommen die Leute auch
Hallo Flo96
Das ist ein MonkaS T-Shirt
Ich habe das heute Mittag gesehen bei Amazon
Die Seite Sübel ist kaputt, ich kann das Bildschirm wieder nicht anklicken
Und da habe ich mir gedacht, ich muss das bestellen
Die haben noch mehr, aber die anderen sind doof, das ist langweilig
Das ist so nach 15 irgendwie
Vor allem die Farben sehen beide kacke aus
Und dann haben sie sonst noch irgendetwas anderes gehabt
Ja, aber das ist auch blöd
Ja, dann lieber sowas hier
Dann lieber sowas hier
Weil ich das eigentlich am lustigsten fand, das da
Dann mal gucken, ob die Emotes gehen
Gucken, ob die Emotes gehen
Hot Grill
Bei mir gehen die nicht
Gehen die bei euch
Ja
Ich dachte, ich dachte, BellaTwitchTV kann jetzt auch
Kann jetzt auch FFZ Emotes anzeigen
Und dann muss man das erst einschalten
Weißt du es jemand, man muss bei BellaTwitchTV erst einschalten, dass das FFZ Emotes kann
Refresh mal meinen Chat, vielleicht muss die Extension einfach neu laden
BellaTwitchTV Settings
Kann das sein, dass
Ah, die sind off
Jetzt sollte es funktionieren
Ja ich glaube, das braucht einfach ein bisschen
Bis die Emotes gehen
Nee, die Emotes gehen nicht
Aber die anderen Emotes sollten gehen
Wo sieht man überhaupt, was man noch für Emotes hier hat
Wir haben irgendwie so den Pepo White Sonstwas Emote
Weiß ich nicht, wie man das schreibt
Warum hab ich überhaupt noch BellaTwitchTV installiert auf dem Vorschaurechner und nicht
auch FFZ
Ja, das geht bei mir, genau
Die gehen bei mir auch
Und die gehen auch im Display vom Chat
Dann dauert es einfach ein bisschen, bis das ganze aktiviert ist, würde ich sagen
Ja Leute, also was ich mir gedacht habe, was wir uns unbedingt mal angucken müssen, ist
das hier
Das ist das Bild von 2019, da hab ich den Webcast geguckt, wo das so einen Microsoft-Dude vorgestellt hat
Und was das ist, könnte echt so next level für Webseiten, beziehungsweise, nein nicht
für Webseiten, für Browser-Anwendungen werden
Weil bisher ist es ja so, wenn man sich hier zum Beispiel mal das
Das Board hier von mir anguckt für Bilder, Overlay und sowas
Das ist JavaScript im Frontend, HTML, CSS und.NET im Backend
Das ist ja nicht BigBrain, das ist Standard
Easy sozusagen
Allerdings, mit Blazer hat sich Microsoft gedacht, wir können ja mal was ganz anderes
machen
Wir könnten ja mal.NET, die.NET Runtime portieren, dass sie im Browser läuft
Und das haben sie gemacht, die haben sich Mono geschnappt
In Zukunft wird das.NET Core werden
Also die haben sich quasi eine x-beliebige.NET Runtime geschnappt
Gucken wir jetzt mal das Architekturbild an
Gibt es das, nicht schon ASP.NET, ASP.NET ist Play, boah ich kann ja mal schreiben
mehr, ASP.NET ist eine Backend-Geschichte
Und Microsoft hat sich jetzt gedacht, wir gucken uns auch gleich mal die Beispielanwendung
an
Microsoft hat sich jetzt gedacht, sie portieren einfach.NET komplett in den Browsern in
.NET Runtime
Man hat nicht etwa jetzt C-Sharp zu JavaScript oder irgendetwas komisches
Sondern, sondern, ich glaube
Ja hier sieht man es, hier sieht man es ganz gut
Hier sieht man es ganz gut, also im Browser läuft ein vollständiges Mono
Also man hat eine vollständige Runtime und die Runtime ist quasi auf Basis von WebAssembly
Das ist so ein Low-Level-Gedöns im Browser
Sieht ein bisschen aus wie JavaScript, aber auch dann wiederum eher nicht wie JavaScript
So und das haben die quasi umgebaut, so dass jetzt die komplette.NET Runtime im Browser
läuft
Das heißt, es ist jetzt nicht etwa so, wenn man ein C-Sharp-Programm bastelt, dass es
dann irgendwie transpiled, sonst war es wieder zu JavaScript
Nein, das läuft wirklich direkt im Browser
Und das wollte ich mal ausprobieren
Und man kann wohl mittlerweile schon ziemlich gut komplette Webseiten damit machen
So, aber dass man das Ganze verwenden kann, habe ich nämlich schon im Vorfeld geguckt
brauchen wir get started, wenn man das verwenden kann
brauchen wir erstmal.NET Core 3.0, das Brifview 6 SDK
Wir brauchen Visual Studio Brifview und danach müssen wir die Placer Extensions installieren
Ich würde sagen, als erstes laden wir mal.NET Core 3.0 Brifview 6 runter
Install please
Hallo
Download
Na ja, dann klicken wir halt hier
Gut, ha, null, jetzt fängt es an, so, jetzt laden wir uns die.NET Core 3.0 Brifview runter
Ich weiß gar nicht, wann.NET Core 3 erscheinen soll, es dauert auf jeden Fall nicht mehr
allzu lang
September oder so
Wann soll denn das rausgehen, Roadmap
Genau September, haben sie gesagt, soll das Ganze rauskommen
Da ist es nicht mehr so lange hin, da kann man sich schon die Brifview Version mal installieren
Also Flow 96, so wie ich das verstanden habe, ist das immer das gleiche.NET Core was im
Browser läuft, die haben halt ein Mono genommen und ein Mono auf WebAssembly umgewurstet
Das heißt, es läuft auch immer das gleiche, das heißt, wenn es kacke läuft im einen Browser
sollte es auch kacke laufen im anderen Browser
Die einzige Sache ist, du hast natürlich immer noch HTML und CSS, die unterschiedlich sein
können
Ok, installieren wir mal das.NET SDK, das.NET Core 3 SDK
Oh nee, jetzt geht euer Bild gleich wieder weg, weil OBS rumspackt, wenn ich den Admin
Dialog kriege
Ja ja, und ist euer Bild schon weg
Kommt euer Bild nicht wieder, kommt euer Bild wieder
Wie ich das hasse
Ah, direkt, da ist es wieder
Hallo, Baladi, so und jetzt müssen wir Visual Studio Test Version runterladen, ja
Was ist nochmal der Unterschied zwischen.NET und.NET Core,.NET Core ist neuer
.NET, das normale.NET Framework, also.NET ist alles,.NET heißt die Plattform an sich
Du hast das.NET Framework, du hast Mono und du hast.NET Core, das sind alle 3 und vielleicht
noch irgendwelchen anderen
Ja, den Unity-Krempel noch natürlich, weil es steht so negativ an, ist wahrscheinlich
eines der größten Sachen ever in dieser Richtung
Das sind unterschiedliche Implementierungen, wobei hatte, hatte Mono nicht, hatte, hat
Unity nicht Mono, wie war das?
Oder haben die das mittlerweile durch was anderes, was, was verwendet Mono eigentlich?
Oder haben die den eigenen.NET Framework drunter, keine Ahnung ehrlich gesagt
Ok, install, auch wieder Admin-Dialog, come on brah
Oh, wir haben es überlebt oder?
Ich glaube wir haben es überlebt
Ah, POG
Genau und.NET Framework ist das alte, was es im Endeffekt nur für Windows gab von Microsoft,
was aber in Windows gebundelt ist
Mono ist quasi der.NET Framework Nachbau für alle anderen Betriebssysteme, inklusiv
für Windows läuft das auch und.NET Core ist die offizielle neue.NET Plattform von
Microsoft für alle Betriebssysteme, für nahezu alle, für alle relevanten, sagen wir mal
Ok, das brauchen wir als Workload und dann lassen wir es mal installieren
So und jetzt muss ich, ich bin mal gespannt wie gut Blazor läuft, ich gehe mal davon
aus, dass es Performance-mäßig noch ein bisschen hinten dran sein wird zu JavaScript
Vermute ich jetzt einfach mal, dass es noch nicht so ganz optimiert ist, aber letztendlich
das macht für so eine normale Web-Anwendung, wie hier zum Beispiel so ein, wie hier das
habe ich hier nicht auf, wie hier so mein Meme-Image-Board macht es ja keinen Unterschied ob das jetzt
im Hintergrund ein paar Nanosekunden schneller ist oder langsamer
Na vollkommen egal
So und während das installiert kann ich was zu sagen, also so wie ich das verstanden habe
in dem Talk von dem, von der Bild, das war auch der Ober-ASP.NET Typ der den Talk gehalten
hat, das heißt der müsste eigentlich auch wissen wovon er spricht, gibt es zwei Systeme,
es gibt einmal Blazor für Web-Assembly, das läuft komplett im Browser und die Webseite
macht man nach wie vor mit CSS und HTML, allerdings anstatt JavaScript nimmt man eben direkt.NET
Wenn man irgendwelche Sachen braucht um beispielsweise JavaScript-Libraries zu verwenden oder irgendwelche
Events die Blazor noch nicht direkt unterstützt, dann muss man das über so eine JavaScript-Bridge
machen, aber das muss wohl mittlerweile relativ gut sein, dass man das recht selten braucht
So und dann gibt es auch die andere Variante, es gibt auch Server-Side-Rendered-Blazor,
habe ich in dem Talk gesehen, das funktioniert dann folgendermaßen, dass quasi, wo es auch
ein schönes Bild von gibt, genau, das ist Server-Side-Blazor, da läuft das im Prinzip
alles auf dem Server und es gibt so eine Websocket-Verbindung zwischen Browser und Server, wo dann quasi
der Frontend-State ausgetauscht wird und das ist wohl schon deutlich weiter als die Web-Assembly-Geschichte,
weil das soll released werden mit.NET Core 3, das ist eigentlich ganz cool, zum Beispiel
gerade für so Sachen wie hier mein Image-Board, das läuft nämlich lokal, das heißt, da hast
ich hier kaum Laufzeiten dazwischen und ich bin froh für jedes bisschen JavaScript, was
ich weniger JavaScripten muss, deswegen gucken wir uns mal an, wie gut das funktioniert,
da, ist installiert, maybe later, Dark-Theme, create new project, wat, Trial, ja Trial,
willst du mich verarschen, ich hab das gerade neu installiert, wie kann ich da für meine
Trial-Period schon expired haben, alter Microsoft, Sign in, okay Leute, ich muss euch gerade
mal ausmachen, Sebaro, Sebaro, muss ich da mit einem Account anmelden, den Lizenz-Key
glaube ich bringt es nicht, aber ich hab ja einen, passt ja, ich kann mich hier anmelden,
ich kann mich hier anmelden und zwar, ich mach euch mal kurz weg, dass ihr mir nicht
zugucken könnt, wie ich mein Passwort falsch eintippe, Sign in, ja, hat funktioniert,
Pock, huge Pock, so, close, und wieder Bildschirm an, yeah, funktioniert, oben im IDE wird der
Realname angezeigt, ja, warte mal ab, mein Realname ist Wobblors, da werdet ihr jetzt
wahrscheinlich nicht drauf gekommen, oder, Big Brain, würde ihr schon sagen, das ist
so, jetzt machen wir ein neues Projekt, also noch Blazor, dann machen wir neue Blazor-Anwendungen,
Blazor-Server-App, ach ne, wir müssen die Blazor, ah, wir müssen, da stand doch was
von Extensions, oder, stand doch was von Extensions, die man installieren muss, die Blazor-Extensions
müssen wir für den kleinen Modus installieren, okay, jaja, geht zu, geht weg, ist die Schalte,
Extensions, online, Extensions, Marketplace, Blazor, das ist ein Name, der könnte von
mir sein, also so, als hätte mich Microsoft gefragt, Max, sag mal, wie können wir unser
neues Frontend-Framework nennen, klingst müde, ja, ich bin auch ein bisschen müde,
so, Blazor, Blatz, wobei ich jetzt eher Blatzor genannt, Blatzorz hätte ich es genannt, Blazorz,
das ist kein Update, Flow690, das ist die Preview-Version von Visual Studio, das ist
neue Installation, du kannst ja mittlerweile ohne Probleme mehrere Visual Studios gleichzeitig
installiert haben, wir haben jetzt, was haben wir jetzt installiert, Visual Studio 17, 2019,
2019 Preview und Code, die Codera, so, ja, Restart, alles gut, ach nee, nicht schon wieder,
aber, euer Bildschirm ist weg, jetzt ist er wieder da, ja, VS Code finde ich auch echt
nice, Blatzorz, ja, so würde ich es nennen, genau, so, das Plugin dauert ja länger zu installieren
als Visual Studio selbst, da wird er los, Microsoft, Anzeige ist raus, so, Preview starten, aber
nicht Anzeige ist raus, uninstall ist raus, ok, und nu, machen wir das gleiche nochmal,
create new project, Blazorz, next, create, und nu, und nu hängts, ok, ah ja, also, jetzt
haben wir zur Auswahl, Blazorz, wir haben zweimal Blazorz zur Auswahl, einmal Blazorz,
Server App, also, das hier wird wahrscheinlich Servergerender des Blazorz sein, wir gucken
uns aber mal die kleinen Variante an, da vermute ich mal, dass es eins von den zwei ist, nehmen
wir das untere, es ist ja alles noch Preview, ja, ich weiß übrigens, dass ich Song of Storms
mit Regensounds jetzt ne Stunde in Schleife laufen lasse, so, Startup, das sieht ziemlich
leicht aus, add component, app, program, Blazorz, host, nicht viel da, hier sind meine Pages,
ok, wir starten mal, wir starten mal das Beispiel, das Beispielprojekt, das kenn ich nämlich
schon aus dem Webcast, nice, funktioniert, so, und wenn ich das jetzt richtig gesehen
hab in dem Webcast, dann downloadet der jetzt, als man das hier überhaupt sieht, ja, der
downloadet jetzt komplettes Mono, also komplettes Mono ist übertrieben, der downloadet jetzt
net runtime, nämlich hier mono.js und mono.wasm, und das ist halt 1,68 MB, das ist relativ
groß im Vergleich zu JavaScript Libraries, allerdings ist es jetzt auch nicht super huge,
zumal es lokal ist und lokal ist es halt schnell, und wenn man es jetzt nochmal neu lädt, wird
er wahrscheinlich genau, also ist der Kram ja auch gecached, er ist auch direkt da, so
und das ist die Blazor Beispielanwendung, die sie dabei haben, und alles was man hier
jetzt sieht, ist HTML, CSS und.net bzw. C Sharp Code, kein JavaScript, also hier das Abrufen
von irgendwelchen Wetter, von irgendwelchen Wetterdaten ist.net, ein Counter zum klicken
und hochzählen ist nicht JavaScript, ist.net, guck mal wie schnell das ganze ist, ok, so
schnell wie mein Plastatur eben kann, ja genau, das ist alles jetzt WebAssembly, wenn ich
das so richtig verstanden habe, was der Typ im Webcast erzählt hat, und gut, die Beispielanwendung
sieht man jetzt nicht allzu viel, aber ich würde sagen, wir können uns die Beispielanwendung
mal grob angucken, dass man halbwegs checkt, was da passiert, ich mach mal aus, aber könnte
man den JavaScript nutzen, wenn man wollte, ja, ja, kann man, du kannst von C Sharp JavaScript
aufrufen und aus JavaScript C Sharp aufrufen, also du kannst ganz normal JavaScript Event
Bindings verwenden im HTML und rufst dann aus den JavaScript Calls C Sharp auf, das müsste
funktionieren, aber wie gesagt noch nicht ausprobiert, jaja kannst du Tommy, also so
wie ich das verstanden habe, der hat das in dem Web, ich zeig dir mal, was ich mir für
den Webcast angeguckt habe, der zeigt das am Ende auch, ja, Bild 2019, Blazor, ich glaub,
das hab ich geguckt, genau, das ist der Ober, der Ober.net Dude ist das, und der zeigt hier
am Ende irgendwo auch ein Beispiel, hier machen sie ihre Pizza Seite, genau, die Map ist eine
JavaScript Library, das bindet er irgendwo ein, du musst den Webcast mal angucken, irgendwo
ist ein Beispiel, ich bin mir nicht ganz sicher, ob es dieser Webcast ist, aber irgendwo bindet
er eine JavaScript Library ein und verwendet das dann direkt in seinem.net Code, musst
du mal gucken, achja und was man hier schön sieht, die haben auch eine Browser Extension,
dass man direkt Blazor Code im Chrome debatten kann, kannst du mal das Video verlinken, das
ist das erste, ich kann es dir verlinken, das ist das erste, was du findest, wenn du
nach Bild 2019 Blazor suchst, das Verlinken hat nicht funktioniert, jetzt, genau, so, jetzt
probieren wir das Ganze mal aus, also wenn ich das richtig sehe, hier ist so ein bisschen
so Minimales ASP.NET Startup-Gedöns, das muss uns nicht großartig interessieren, ich
glaube das hier dürfte noch das Interessanteste sein, ok oder auch nicht, Imports, hier ist
auch nicht so interessant, Shared und Pages, ah, Pages ist interessant, Pages ist das,
wo man standardmäßig, was ist der Unterschied zwischen Shared und Pages, ah ok, Pages ist
quasi die Route hier, das ist Index, das heißt das ist gemapped auf Slash, deswegen kommt
man hier auf Index raus, gucken, hier sieht man auch, welcome to new app, das ist die
Index-Page, so und das da unten ist der Survey Prompt, das ist so wie es aussieht eine eigene
Blazor Komponente, Kingfinger mein Meme-Tool gibt es überhaupt nicht online, doch es gibt
eine uralte Version auf GitHub, da ist aber auch eine Mini-Readme dabei, wie das funktioniert,
das lädst du einfach runter und startest das, aber das ist eigentlich gar nicht mal zum
benutzen gedacht, außerdem ist die Version so alt, die kann keinen Text-to-Speech, die
kann nix, so, du kannst nicht starten, Moment, wo ist denn mein GitHub hier, GitHub, wie
heißt mein GitHub überhaupt, ach da, du gehst ja auf Release und lädst dir das runter,
ah, Memeboard-Exe, gleich mal schön Exe runterladen, ja, Memeboard-Exe und da ist auch eine Readme
dabei, wie es funktioniert, du lädst Memeboard-Exe runter und erstellst ein Folder Memes und
dann machst du deine, postest dir deine Bilder rein, allerdings, wie gesagt, das ist uralt,
das ist nicht mal entfernt, ähnlich zu dem hier, was ich mittlerweile habe, wie Q, ne,
wir sind nicht Q, wir sind Q-Chat, ja, wollte ich sie, aber habe ich aber noch nicht gemacht,
so, also, so wie ich das jetzt hier sehe, besteht die Index-Page, warum ich das aktuelle
Memeboard nicht hochlade, weil das total unfertiger Crap ist, wo vor allem auch wahrscheinlich
irgendwelche Credentials von mir noch irgendwo drinnen stehen für irgendwelche APIs und
das kann ich so nicht einfach blind hochladen, oh, ein Sub, Twitch Prime, EuJim ist am Start,
sehr nice, Dankeschön, Pog, so und wenn ich das jetzt richtig sehe, ist quasi eine Page,
das hat er, glaube ich, auch erzählt, das hat er, glaube ich, auch in den Webcasts erzählt,
oh, noch mehr, der Extreme Nerd, Dankeschön, sehr schön, nice, übrigens, bei der Gelegenheit
kann ich vielleicht nochmal erwähnen, dass wenn ihr ein Amazon Prime-Account habt, also
wenn ihr Amazon Prime habt, dann könnt ihr das kostenlos mit Twitch verbinden und ihr
bekommt dafür monatliche Lootboxes, das ist oben diese Krone auf Twitch und ihr könnt
einen Streamer eurer Wahl einmal im Monat kostenlos mit einem Tier-1-Sub, mit einer Tier-1-Subscription
unterstützen, die normalerweise 5 Euro kosten würde und mit Amazon Prime ist das Ganze
umsonst, allerdings bekommt der Streamer trotzdem die gesamte Kohle, also das was er immer bekommt,
ohne dass es euch was kostet, und der sharpsx12 hat das genau richtig gemacht, nämlich mit
Twitch Prime, der Sellout ist am Start, Dankeschön, sharpsx12, wir muss sagen, im Vergleich zum
ersten Tag kann ich den Sellout mittlerweile schon ganz gut, oder, achso, ich hab übrigens
extra nen Sound gemacht dafür, der Hydrogen-Yoyo ist auch statt Twitch Prime, nice, sehr schön,
so viel Twitch Prime. Übrigens, ich hab mir schon überlegt was wir für Sub-Batches machen,
aber ich hab noch nix, noch nix Gescheites gefunden irgendwie, aber es gibt demnächst
welche. Gehen eigentlich die neuen Emotes jetzt? Hotgrill? Geht Hotgrill? Hotgrill? Nein, immer
noch nicht. FeelsBadman. Hotgrill und Sebaru, wir haben für dich ein extra Emote, extra
Weep-Schwitz-Emote. Ihr sehts? Ok, bei mir seh ichs nicht. Joker Gaming, Twitch Prime,
sehr schön, sehr nice. Oder besser gesagt. So, machen wir mal weiter. Also wenn ich das
richtig sehe, in Pages, und ich glaub das hat der ASP, der Ober-ASP.net Vortragsmensch
auch gesagt, in Pages sind quasi die Routen für die unterschiedlichen Seiten. Das heißt
hier hat man Route FetchData, hier hat man die Route Counter, und hier hat man halt die
Route Index, also halt Slash. Also sprich, Pages ist quasi alles was ne Route hat, ist
ne Page, wenn ich das richtig verstanden hab. Und Pages setzen sich zusammen aus HTML und
C-Sharp-Code, und wenn man das Ganze ein bisschen modularer machen will, schreibt man halt nicht
sein ganzes HTML, CSS und C-Sharp in eine Page-Datei, sondern macht unterschiedliche
Komponenten, so wie es hier dieser Survey Prompt ist. Gucken wir mal rein. Das ist auch
ein, das ist keine Page, wahrscheinlich weil das Ding keine Route hat. Genau, und man sieht,
das Ganze besteht aus HTML und C-Sharp-Code. Der C-Sharp-Code ist jetzt hier relativ kurz
und knackig, ja, das ist einfach ein Property mit dem Namen Title. Das bringt es nicht allzu
viel, aber zum Beispiel können wir uns mal das Navigationsmenü angucken. Das ist HTML
mit ein bisschen, mit schon ein bisschen Logik da hinten dran, ein bisschen C-Sharp-Logik.
Oh, neuer Sub. Is auch am Start, Twitch Prime Sub. Ein sehr nicer Sub. Gibt's eigentlich
auch Samarin, wie sie immer sagen. Jaja, gibt's noch, war auf der Bild auch wieder
am Start. So, Main-Layout ist einfach nur HTML mit einem Navigationsmenü unten drunter.
Okay, also ich glaube, ich hab das halbwegs gecheckt, wie das Ganze prinzipiell aufgebaut
ist. Das ist im Prinzip ein bisschen, ein bisschen wie eine Vue.js-Component. Da hast
du auch in einem Pfeil, wenn das, wenn das nicht alles in einem Pfeil machst, da hast
du auch in einem Pfeil HTML, JavaScript-Code, in dem Fall ist es halt.NET C-Sharp-Code,
und CSS, wie halt diese Komponente aussehen sollen. Und für mich sieht das so aus, als
wäre das hier relativ ähnlich. Wir basteln jetzt hier mal ein bisschen dran rum. Wir werden
jetzt mal, wenn wir hier auf den Button klicken. Wo ist denn der Button zum Klicken? Counter
wahrscheinlich. Counter. Also aktuell ist es relativ simpel gemacht. Ah, nice. Guck,
man kann direkt, man kann direkt an das OnClick-Event, kann man direkt an die Sharp-Funktion binden.
So, und da können wir jetzt mal reinschreiben. Hier, Console, Write, Omega-Lole. So, dann
rebuilden wir das Ganze. Drücke F5. Und machen mal die Inspection-Tools auf. Und jetzt würde
ich erwarten, dass da unten noch Omega-Lole drinne steht. Damn. Funktioniert. Gut, das
war jetzt ziemlich noobster, also das war jetzt nichts kompliziertes oder so. Aber ich muss
mich da erstmal rantasten. Das heißt, wenn ich das so richtig sehe, man kann Events direkt
an C Sharp-Funktionen binden. Woid, Danny, ja so verstehe ich das auch. Mit C Sharp die
Logik, HTML und CSS zum Anzeigen. Genauso verstehe ich das. Also im Prinzip, anstatt
JavaScript kannst du jetzt.NET verwenden. Es hat ein bisschen was von, wie gesagt, von
Vue.js Komponente. So. Und was man hier auch schon schön dran sieht, ist, man kann das
auch binden hier oben. Also man kann jetzt nicht nur Funktionen aufrufen, man kann auch
quasi Variablen hier oben quasi binden, also binden, mir fällt jetzt kein ordentliches
deutsches Wort für ein, dass der quasi an der Stelle immer den aktuellen Variablen-Inhalt
anzeigt. Die Frage, die sich mir jetzt stellt, ist natürlich, kann man das Two-Way-Binden?
Typ Text, Name, Hallo, Template, Template, please, ok, gebated, Template, gebated, Name,
Template, gebated mich. Kann man jetzt sagen, you add current count und wenn ich dann was
reinschreibe, erscheint es da oben auch. Ich bin mal gespannt. Das funktioniert. Pog, Alter.
Oh ne, ah, funktioniert nicht. Das funktioniert bestimmt irgendwie, ich weiß bloß nicht,
wie ich es richtig mache. Macht es mit Sicherheit bloß nicht richtig. Ok, da müssen wir danach
suchen. Input, blazer, binding. Data binding, learn blazer. Input. Ach bind muss man nehmen.
Ok. Aha. Ne, gebated. Das bestimmt überhaupt nicht mal aktuell die Doku, die ich da gefunden
habe. Ach number, ich sollte es vielleicht mal mit number machen, wenn es ein int ist.
Wollte ich das machen wir mal mit number. Aber wahrscheinlich geht das mit bind nicht
mehr. Wahrscheinlich ist es einfach zu alt, was ich da für eine Doku mache. Ne, ne, ne,
das funktioniert nicht. Wir probieren das jetzt mal anders aus. Wir machen jetzt hier
oben den Text, wir machen den Schmodder hier mal weg, wir sagen jetzt hier string, Text,
gleich Blob, machen wir das hier weg und sagen hier oben mal Text und da add Text und mal
gucken was passiert. Achso, type Text. Die Bild. Ich löse kein Event aus, das ist richtig.
Tja da sieht man mal, ich habe damit noch nichts gemacht. Also muss ich mal fragen. Blazer,
two way binding. Mal gucken wie das funktioniert. Two way binding, learn blazer. Ui was das.
Das sieht anders aus. Ich bin mir nicht so sicher, ob man das überhaupt braucht, dieses
learn blazer, weil Microsoft ja selbst schreibt, is now available here. Binding. Bestimmt eine
Property meiner, das könnte schon sein. Aber übrigens, ja ich weiß wie wir uns das abgucken
können. Die haben nämlich irgendwo hier haben die, ich glaube unter Community, ne da hatten
die so eine, habe ich gesehen so eine Liste, wo man sich die Sachen abgucken kann, für
die Noobs, die keine Ahnung haben. Sample projects, Block, Asteroid, Asteroid. Blazer.
Binding. Sample blazer app demonstrating various binding scenarios. Ja das brauchen wir. Ja
muss ich sagen, gv oz 13 kuschrent, das ist so ein ewig langer Name. Gibt es auch noch
kürzer. Nickname gv oz 13, ok. Also 13. Ich finde das auch sehr merkwürdig, dass der
erstmal hier, wenn du hier anguckst, auf Network gehst, dass der erstmal seine massig.NET DLLs
runterlädt. OnModify, wahrscheinlich aber. ValueBindingClassObject. Was ist denn das
schon komischer? Pages. ValueBinding. Wo macht der hier jetzt was? Die Beispiele sind viel
zu lang. BindValue macht man da jetzt? Ach. Wobei Input, Input macht er hier das da. Warum
escaped er das denn so hässlich, das ergibt überhaupt keinen Sinn. Musste doch überhaupt
nicht escapen. ParentValue. Ist genauso wie ich das mache. Was ist denn Inject, das da
oben meinste? Nee. Keine Ahnung. Das, ich will jetzt mal raus, ich will jetzt wissen,
wie das funktioniert. Ja, SilentPain, das ist ja kein Jahr, aber OnChange, ja OnChange
kann ich machen, aber das ist ja nicht das Sinn von, also wenn ich das schon eingebautes
Two-Way-Binding hab, dann muss ich das nicht von Hand machen. Ich mein klar, man könnte
sowas hier machen, wahrscheinlich ja. AddOnClick, nee. Change. OnChange. Ah, und da könnte
man jetzt sowas sagen wie BlobChanged, eine Ahnung, sowas hier. Und dann könnte man das
dann da ausgeben und hier setzen, aber ich glaube nicht, dass das Sinn und Zweck der
Sache ist, wie man das machen sollte. Ob nicht, dass das so funktioniert. Also doch, funktionieren
wird's, aber ich glaube nicht, dass das Sinn und Zweck der Sache ist. Guck mal, Changed,
genau. Ja, da müsste ich jetzt das hier quasi setzen, aber das glaube ich nicht, dass das
schön ist. Ja, BindValue hab ich auch gesehen. Aha, was ist das? Bind? Muss er vielleicht
sowas machen wie BindText? Sowas vielleicht? Wow, okay. LU? LU? Nee. Haha, so funktioniert
das, schau mal net. Einfach nur Bind? Bind? Guck mal, das macht er nämlich schon automatisch.
Binds provided expression to the value attribute and a change event delegate to the onChange
event. Okay. Ah, funktioniert. Was haben wir jetzt? Ich müsste einfach rausklicken.
Oh Mann. Kann ich nicht, kann ich nicht das so machen, dass das direkt, dass das direkt
updated. Also mit JavaScript wäre das jetzt kein Ding, aber wie mach ich das hier? Ja,
gut, das ist doch schon mal ganz schick. So, ähm, was machen sie denn sonst noch hier
Schönes? Blockiert eigentlich die UI, wenn du eine wild Schuh laufen lässt? Ich würd
mal eher sagen nein, macht sie nicht, weil das im Hintergrund läuft, in dem extra thread,
aber das können wir, das probieren wir jetzt mal aus. Das probieren wir jetzt mal aus,
das ist eine gute, gut, ich mach das mal kurz rückgängig. Ein Krempel, den ich hier getrieben
hab, mach ich euch die Beispielsache rein. Ähm, was ich auch noch in der Präsentation
glaube gesehen hab, jede dieser Seiten hat ein paar Funktionen, die man überschreiben
kann. Zum Beispiel onInit, das ist quasi wie so ein, bisschen wie so ein Constructor für
eine Seite. Das wird einmalig ausgeführt, wenn das zum ersten Mal geladen wird. Probieren
wir das mal aus. While true, und da gehen wir jetzt mal irgendwie den Mist aus, blub.
So, jetzt machen wir den Task Manager auf und schauen mal, wie man Firefox am eskalieren
ist klar. Äh, ja. Okay, wenn ich das onInit mach, ist blöd, dann lädt das logischerweise
gar nicht. Das machen wir onClick. Das machen wir onClick. Und dann gucken wir mal, ob's
hängt. Wahrscheinlich hängt's dann, hä? Ups. So, jetzt ist mein Firefox noch voll
entspannt, aber kein Problem. Jetzt, äh, es hängt. Es hängt. Easy. Es hängt. Close.
Kann man nix machen. Also, man kann auch sein UI locken damit. Also, hier drinnen müsste
man, denke ich, auf jeden Fall multithreaden können. Das ist ne gute Frage. Könnte man
damit zum ersten Mal ordentlich multithreaden im Browser? Ich mein, man kann jetzt auch
schon mit irgendwelchen Background Workern und Gedöns ein bisschen multithreaden im Browser,
aber das müssen wir doch, das probieren wir doch mal aus jetzt. Wir sagen jetzt einfach
Task. Run. Und dann machen wir unsere Endlosschleife einfach mal im Task. Mal gucken, was passiert.
Mal gucken, was er macht. Ups. Äh, kann man das jetzt irgendwie ordentlich formatieren
lassen? Format, ja. Gameplay vom neuen Overwatch-Charakter in drei Minuten. Wollt ihr, dass wir das gucken?
Man könnte, wir können's gucken, aber ich hab schon lange kein Overwatch mehr gespielt.
Ach, bei Seagull, ok. Ich glaub bei Seagull ist der bessere für. Ach nee. Moment. Geht
man das jetzt überhaupt? Ich mein, das ist noch richtig. Meine Tastatur, doppelte Tastaturanschläge
immer noch, ne? Wobei, wartet mal. Musste man das starten oder nicht? Man, das wisst
ihr doch bestimmt noch aus dem Kopf. Eine Task mit dem Run muss man nicht starten, ne?
Starten sie sich selbst. Lässt ja nicht umsonst runnen. Doch, ich hab Overwatch installiert.
Aber ich hab mir dann überlegt, ich spiel's doch nicht. Weil ich hab nen Overwatch-Stream
dann gemacht und das erste, was ich gesehen hab, war 2CP. Hab ich glaub ich auch ausgemacht.
Ok, jetzt gucken wir mal, ob der im Background startet. Der startet was im Background, allerdings
scheinen das keine Multithread-Geschichten zu sein. Ich mein, der zählt hier ganz ordentlich
hoch. Aber der Browser ist dicht. Ich weiß, es gibt nen ranked queue. Der Browser ist
dicht hier. Also da ist nix mit Multithreading. Async Await-Geschichten dürften wahrscheinlich
funktionieren. Der ist gut beschäftigt mit Hochzählen grade. Stop it! Oh, hat tatsächlich
funktioniert. Gut, also Multithreaded wird hier wahrscheinlich nicht großartig. Was
im Doesn't Support Multithreading? Ja, mit nem Timer, das prüfen wir mal ausprobieren,
aber mit nem Timer sollte das funktionieren. Ok, also Multithreaded im Browser ist nicht.
Also das können wir schon mal vergessen. Multithreaded im Browser ist nicht. Nice!
Ich versteh die Anzeige im Chat grad nicht. Sebaro hat dem Evoli ein Stufe-1-Abo geschenkt.
Achso, Sebaro hat zwei Abos auf dem Graf. Ok, was könnte man denn damit jetzt schönes
machen? Wisst ihr was wir machen? Wir machen ne To-Do-Listen-App. Jeder macht zum Üben
von Web-Anwendungen To-Do-Listen-Apps. Wir machen jetzt ne To-Do-Listen-App. Das kann
jeder. Dann lernen wir vielleicht was, wie's funktioniert. Ok, dann wir schmeißen mal
alles weg. Wir schmeißen mal alles weg, was wir hier nicht brauchen. Also, Index. Piss
dich, Index. Den Rest lassen wir mal. Also wir machen das komische Menü weg, das braucht
keiner. Menü. Wo kommt das Menü überhaupt her? Aus Layout. Also machen wir das Menü weg.
Dann ist das weg. Blazer kommt auch weg. Zack. Moment. Ist das Menü noch da? Ist das Menü
gerade gelöscht? Oh, ich hab's kaputt gemacht, Leute. Äh. Was ist das Problem? Was hab ich
jetzt verkehrt gemacht? Oh. Was genau hab ich jetzt verkehrt gemacht? Ach so, ich bin
entkackt und hab aus Index alles rausgeschmissen. Natürlich ist es weg. Ich hab ja aus Index
alles gelöscht. So. Wenn ich das jetzt mach, dann steht das auch wieder da. Ja. Huge Brain.
Man löscht alles und dann ist auch alles weg. Wer hätte das gedacht? Äh, Tom, ich hab
keine Ahnung, was das an der Stelle macht. Ok, wir machen das mit To-Do-Listen-App. To-Do-Listen-App
ist immer so das Standard-Übungs-Ding überhaupt. Ja. Die E-Modes gehen irgendwie immer noch
nicht. Also. Poggers To-Do-Listen-App. So. Äh. Da fängt's schon an. Wie machen wir
das jetzt mit Plays-Am-Best? Also wir brauchen einen Input vom Typ Text, wo wir die Items
reinschreiben. So. Value standardmäßig ist leer. Ja, find sie lustig. Ich sag jetzt,
das ist Huge Brain. So. Value. So. Dann machen wir hier unten eine, was muss man machen?
Functions-Block? Ich hab einen Code-Block und einen Functions-Block gesehen bisher. Wo auch
immer da der genau der Unterschied ist. Fast 100 Viewer. Pog. Wobei, das geht auch noch.
Wir hatten das letzte Mal. Letzte Mal hatten wir doch irgendwie schon 160 oder so. Gut,
dann haben wir auch ein bisschen allgemein verträglichere Sachen gemacht. Anstatt hier
einen Blazer. Du kannst eventuell manuell Flags in Chrom anmachen. Erstmal nicht. Doch
über 200 hatten wir auch schon mal kurzzeitig. Am lustigsten finde ich ja, dass die Streams,
die am meisten geguckt werden, sind Sonntag morgens die Aufwach-Streams, wo ich irgendwelche
random YouTube-Videos gucke. Also warum sollte ich überhaupt noch, warum sollte ich überhaupt
noch ordentlichen Content machen? Ich kann einfach Reactions machen. Jeden Tag einfach
Reactions. Easy. Easy Subs. Easy Live. Easy Content. Hallo Clocks HD. Okay. Also wir machen
jetzt ein To-Do-Item. Das ist einfach ein Text. Wir machen hier. Warum geht das nicht?
Achso, weil es keine Funktion ist. Was ist denn der Unterschied zwischen Functions und
Codes? Okay, ganz viel. Ganz viel Blabla. Gibt es eigentlich noch Comments oder sind
das jetzt schon Reactions? Ich würde sagen, dass das kann man, hat ein bisschen Grauzone
dazwischen. Allerdings Reactions sind halt komplett fremder Content, wo man dazu ein
bisschen eskaliert. Und Commentaries wäre für mich immer noch sowas, wo sich inhaltlich
mit der Sache auseinandersetzt. Also wenn man dann sagt, hier, keine Ahnung, der hat jetzt
hier, hat er jetzt irgendwas gebaut in Fortnite, damit er besser versteckt ist. Das wäre jetzt
Commentary-Style und Reaction wäre, oh mein Gott, was er baut. Alter, ich raste aus. Digga.
Das wäre, das wäre ungefähr Reaction-Style. Ich hab das doch ganz gut getroffen, oder?
Cube0, danke für den Zapf. Genau, Evoli. Digga, ich küsse deine Augen. Ja, das gibt's
ja noch. Ich bin weggekocht. Was zum Teufel ist Masala? Ich kenne Chicken-Masala, Chicken-Tikka-Masala,
das ist so ein, beim Inneren ein Hähnchen, was komplett, was so rot ist. Ein rotes, scharfes
Hähnchen ist das. Heißt Danke auf Arabisch? Heißt das dann ernsthaft? Hähnchen-Danke?
Hähnchen? Nee, oder? Chicken-Masala muss was anderes sein. Glaub ich nicht. Weil das
ja auch Indisch. Das ist ja, das ist ja ein bisschen Upsides nun, ja. Gut, wie auch immer.
Bremssprachen, Kenntnisse, FTW. Oder muss los? Okay, also, wir machen jetzt unsere super
krasse To-Do-Listen-App, ja? Huge. Also, die App, die die Welt gebraucht hat, eine weitere
To-Do-Listen-App. Okay. Wie macht man da jetzt Variablen? Wie geht das? So? Keine Ahnung,
mal mal Liste, Liste, String, To-Do's. So, was ist da das? 103 Viewer. Ihr seht es,
ich hab kaum angefangen in den Bullshit zu labern. Bam, Viewer, Instant. Eigentlich,
ich sag's euch Leute, Reaction-Videos machen und Dummzeug labern. Beste. Alter, Sebaru
jetzt übertreibt man nicht. Alter, jetzt schockt er mich aber, ey. Der Sebaru wieder
am Start mit einem Sub für den Eichelriss. Ist auch immer noch bester Name. Für HG Gamers
und Gorilla 9876, für Dechey und für Febel 2. Nice Sebaru. Pog. Huge Pog. Massive. Sagt
gar nicht mehr auf. Ich hoffe, ich hab jetzt nichts übersehen vor lauter Sound. Muss
mal in meine Alertbox gucken. Übrigens Leute, was meint ihr, wie viele ich schon hab? Schätzt
mal, ich sag's euch heute mal, ausnahmsweise. Es ist mehr als ich selbst gedacht habe. Ja,
richtig. Febel 2 hat's erraten. Febel 2 hat's erraten. 75. Das ist huge. Ich mein. 75.
Das ist ja sogar schon bisschen Money. Wobei, wie gesagt, ich hab's von Anfang an gesagt,
ich hab mich, ich wollt mich ja sogar da sogar verdrücken, Submodus zu machen. Also wegen
der Kohle ist es nicht. Aber ich hab natürlich auch nichts dagegen, wenn jemand Subbt. Mehr
pro Monat als in einem halben Jahr mit YouTube. Das ist korrekt. Das ist korrekt. Allerdings
hauptsächlich aus dem Grund, weil ich ja auch YouTube irgendwie nix mache. Könnt ihr
eigentlich, ne? Könnt ihr eigentlich. Aber wenn ich dann auf YouTube gehe, denk ich mir
dann, wenn ich die Plattform sehe, ich hab leider kein passendes Emote dafür jetzt.
Ja, Febel, das ist nice. Also ich kenn den Standard Share nicht, aber ich denk mal 50-50.
Tommy, ich seh die auch. Die Emotes. Zum Beispiel white people happy seh ich auch. Ne, ich kann
keine Streamzusammenschnitte auf YouTube machen. Das funktioniert nicht. Das trifft überhaupt
nicht so die richtigen Leute. So, also, wir machen jetzt unsere super krasse To-Do-Listen-App
weiter. So, jetzt haben wir ne Stringliste für unsere To-Do's. Twitch Prime, der Skatenix
ist am Start. Noch mehr Pok und Naizu und Ayaya und Party Parrot und white people und
alles halt. Und natürlich. So. Ähm. Erklär mal, was genau du jetzt machst. Ist das eine
Mischung aus Javascript und C-Sharp? Wieso ist die Feilendung Razor? Razor ist die Templatesprache
von Microsoft. RTML Templatesprache. Und, ähm. Blazer ist quasi ne neues Frontend Framework
von Microsoft. Das läuft komplett im Browser auf WebAssembly-Basis. Das heißt, du brauchst
so gut wie kaum noch Javascript für deine Logik. Du kannst deine Logik in einer echten
.NET Runtime im Browser laufen lassen. PC lustig, der Stream heute ist doch gar nicht
so sinnlos. Ich mein, wir machen immerhin sinnvolle Sachen. Wir hatten schon viel sinnlosere
Streams, oder? Wo ist der Vorteil gegenüber Javascript? Naja, es ist ne schöne Sprache.
Aber. Javascript nicht. Also wenn du Frontend-Developer bist und gut Javascript kannst, ist denk
ich mal aktuell kein Vorteil. Außer mal, dass es halt neuer Ansatz ist. Und ich denke,
das ist ein Ansatz, wenn das Microsoft supportet und Microsoft ist in letzter Zeit ganz gut
dabei auch, ähm, ihre Sachen richtig zu machen. Das glaub ich ein neuer Ansatz, der, der wirklich
Erfolg haben könnte. So, also. Wir machen jetzt unsere tolle To-Do-Listen. Ne, muss
jetzt, muss jetzt weiter gemacht werden. Also. Übrigens, ach, wo ich grad dabei bin. Das
muss ich euch jetzt zeigen. Wusstet ihr, dass es jetzt in, dass es jetzt seit heute ist
der neue C++20 Standard fertig? Und, ähm. Wisst ihr, was es da jetzt neu es gibt? C++20.
Da gibt es jetzt den Spaceship-Operator. Das ist kein Witz. Die gibaten uns auch nicht
oder so. Das heißt so. Allerdings, ähm. Seriöser genannt ist es hier irgendwie default
Compa... Compa... Compa... Compa... Compa... Compa... Comparisons? Comparisons? Wie auch
immer. Und der Spaceship-Operator. Der funktioniert so. Den es in anderen Spanchen schon ewig
gibt. Ehrlich gesagt. Ich kenne keine Sprache, die ein Spaceship-Operator hat. Der Spaceship-Operator
sieht so aus. Ich kenne keine andere Sprache, die ein Spaceship-Operator hat. Aha, Truelmo.
Okay. Ja, vielleicht probiere ich es dann auf dem PTR mal aus. So. Und, ähm. Was der
Spaceship-Operator macht, habe ich versucht, aus diesem Blogpost, den jemand im Discord
geschrieben, äh gepostet hat, zu verstehen. Und ich muss ehrlich sagen, C++ ist mittlerweile
so komplex und hässlich, dass ich wirklich Schwierigkeiten habe, wenn ich sowas hier
sehe, auch nur im Ansatz zu checken, was es macht. Ich glaube, das ist irgendeine Art
von Generics in C++, also Templates, ähm. Wo sie irgendwie versuchen einzuschränken,
was für Typen man in Generics verwenden kann. Allerdings, ehrlich gesagt, habe ich keine
Ahnung, ob das stimmt. Weil das sieht schon so unglaublich abgedreht aus, dass ich mich
frage, ob es irgendjemand gibt, der das versteht. Ich meine, C++ Templates an sich, ich muss
sagen, ich habe in der Tiefe Templates nie gecheckt, aber ich bin ja auch normalerweise
kein großer C++ Hexer, außer ab und zu mal ein bisschen Arduino, Mikrocontroller Zeug
und ein bisschen cute ab und zu. Aber für mich sind C++ Templates, so für den C++ Noob,
stelle ich mir unter Templates sowas wie Generics vor. Ja, weil C++ selbst keine Generics
hat, so quasi eingebaut, wie das zum Beispiel, ich wollte gerade sagen Java, aber ich weiß
nicht, ob es Java mittlerweile hat, wie das zum Beispiel Rust hat oder C-Sharp hat, gibt
es halt sowas wie Templates. Das war so der, der, der way quasi, the way Generics in C++
zu machen. So, aber was das hier jetzt macht, ich habe keine Ahnung. Ich meine, es überschreibt
irgendeinen Operator, okay, verstehe ich noch, so und das heißt, man kann mit diesem Operator
kann man comparen, man comparet quasi einen Pair, einen Pair mit sich selbst wahrscheinlich,
was dieses Konst hier hinten macht und dann dieser komische Pfeil, wissen wahrscheinlich
nur absolute Hardcore C++ Leute. Ich kenne das mit dem Pfeil aus Rust, aber ich habe
keine Ahnung, wie das, wie das, was das in C++ macht. Was das hier dann macht, ist für
mich komplett, komplette Magic. Na, an der Stelle ist der Pfeil kein Pointer, der Pfeil
ist auch nie in this Pointer, der Pfeil ist ein Point, also nein, der Pfeil ist ein Object,
das da ist eine, wie nennt man das, die Reference vom Pointer, oder? Ne, nicht die Reference,
du greifst auf das, auf die Object Reference zu und rufst da drauf halt irgendwas auf,
die Reference ist Sternchen. Ähm, an der Stelle habe ich keine Ahnung, was das tut.
Und was das macht, also ganz ehrlich, ich prokramiere jetzt seit, ich gebe zuletzt nicht
das beste Argument, ja, ich prokramiere seit 2002 ungefähr regelmäßig. Davon auch die
ein oder andere Sache in C, allerdings letzter Zeit nicht mehr, und auch ein bisschen in
Qt C++. Allerdings muss ich ehrlich sagen, ich, ich habe mir im Höhe gegeben und ich
habe mir auch die ein oder anderen modernen C++ Webcasts angeguckt, und da sind schon
viele sinnvolle Sachen drinne. Aber mittlerweile ist C++ so ein abgedrehtes Sammelsurium aus
20.000 Sachen das gleiche zu machen, dass es fast schon den Award für hässlichste Sprache
ever gewinnt, ja. Mittlerweile ist C++ fast hässlicher als Pearl. Und die haben es jetzt
wirklich geschafft. Ich meine, ich würde mal sagen, ich bin jetzt so mit 17 Jahre Pro-Cramming-Erfahrung
jetzt nicht der übelste Kacknoob. Ich meine, ich gebe zu, ich bin kein C++ Pro oder so.
Aber ich verstehe manche Sachen in dem Ankündigungstext für einen neuen C++ Standard schon nicht mehr,
was die mir überhaupt sagen wollen. Und das ist schon irgendwie bitter so. Und wenn ich
sowas lese, hört es komplett auf. Keine Ahnung. Hey, Silent Pain, da war ich doch mit die Reference
gar nicht so schlecht mit dem Pfeil. Ja, so ein paar Sachen sind ja noch hängen geblieben.
Die haben auch ein paar coole Sachen in C++ neu eingebaut. Ja, das da zum Beispiel. Das
ist eine Sache, wenn ich keine Exceptions verwenden will. Oder wenn ich einen Return-Code brauche,
allerdings es den Fall gibt, dass ich eben auch null returnen könnte. Im Fall der Fälle,
wie auch immer meine Logik das gerade hergibt, da kann ich einfach ein Optional returnen.
Lambdas sind auch eine sinnvolle Geschichte. Da sage ich auch gar nichts dagegen. Ich finde
die C++ so ein Tag so ein bisschen unglücklich, aber das ist okay. Aber da sind echt manchmal
jetzt Sachen mittlerweile drin, wo ich ehrlich gesagt nicht mehr mitkomme. Du kannst jetzt,
hat irgendeiner geschrieben, hat sich sogar eben einer im Chat geschrieben, du hast jetzt
mittlerweile 17 verschiedene Varianten, wie du einen Vektor initialisieren kannst. Und
manche Sachen davon sind neu, allerdings schon wieder deprecated. Und manche Sachen gehen
noch und sind nicht deprecated, sollen man aber nicht verwenden. Das ist übelst wir.
Das ist einfach übelst wir. Ich glaube, dass man, ich glaube es gibt ganz wenige Leute
auf der Welt, die wirklich von sich behaupten können, sie haben C++ kapiert. Also das ist
schon echt hardcore abgedreht. Und was ich auch ein bisschen unglücklich finde, C++
mäßig, die haben so den Hang dazu, Sachen doppelt, doppeldeutig zu verwenden. So nach
dem Motto, ach, wir bräuchten für Lambdas noch ein Zeichen, wo wir sagen können, ja,
wie wir beispielsweise, wie wir umgebende Variablen captchern. Oder, was weiß ich,
wir brauchen noch irgendwas, wo wir in Parametern aufrufen, was spezielles angeben können.
Ja, anstatt dass man da für irgendein Zeichen nimmt, was nicht schon 30.000-fach gebraucht
ist, nimmt man natürlich mal wieder ein und. Weil ein und in C++ auch nicht schon so häufig
verwendet ist für irgendwas. Also ich weiß nicht, was sie da immer reitet irgendwo.
Also die meistverwendete Sprache dürfte wahrscheinlich JavaScript sein. Und ansonsten, dank Business,
Enterprise, Anwendung und Geschiss, ist es wahrscheinlich danach Java. So, und ungefähr
gleich auch würde ich sagen C++. Weil Java spielt beispielsweise im ganzen Entertainment
und Spielebereiche nicht so eine große Rolle. Ähm, da ist es eher C++. Und mittlerweile
tatsächlich, dank Unity, auch C Sharp. Ich würde sagen, das kommt ein bisschen auf den
Bereich an, wo man guckt. Wenn man sagt, was ist weltweit die meistverwendete Sprache,
und wenn ich mal meistverwendete Sprache so definieren würde, was quasi die Leute tagtäglich,
also Software, was die Leute tagtäglich am meisten benutzen, dann dürfte das überhaupt
keine Frage sein JavaScript. Überhaupt keine Frage. Und dann dahinter, wahrscheinlich
direkt C und C++. Weil, wenn man ja von Benutzen spricht, dann zählen natürlich auch Server-Anwendungen
dazu. Und wenn man mal im Business-Bereich guckt, dann ist es eindeutig Java. Ja, Hydrogen,
Jojo, ich glaube, das ist ein bisschen, wie man die Frage stellt. Wenn man sagt, wo,
in welcher Programmiersprache gibt es irgendwie den meisten indizierten Code oder so, ja,
dann kann ich mir schon vorstellen, dass das tatsächlich Java ist. Aber ich glaube nicht,
dass der Standard-Anwender tagtäglich viel Java verwendet. Du verwendest Java im Backend
wahrscheinlich, wenn du auf Twitter gehst. Twitter ist übrigens Java. Du verwendest
Java, wenn du bei deiner Bank auf die Seite gehst oder sowas. Allerdings ist das nichts
im Vergleich zu den unglaublichen Mengen JavaScript-Code, die so ein normaler Benutzer am Tag ausführt.
Wenn wir jetzt einfach mal von Software gehen, also von Programmen ausgehen, die die Leute
benutzen. Und ich würde sagen, dadurch, dass, dass, wenn man es von der Seite betrachtet,
was die Leute denn verwenden, würde ich sagen, ist C und C++ auch noch weiter vorne, weil
das meiste Java, das meiste Backend-Zeug, wenn ich da mal an sowas wie an Apache denke
zum Beispiel, das ist ein C oder ein C++. Hauptsächlich C. Bei der Bank ist natürlich
auch noch Kobol am Start, ja, richtig. Okay, dann ist es mittlerweile Scala. Kann auch
sein. Kann mich nur noch dran erinnern, dass Twitter vor ein paar Jahren einen Artikel geschrieben
hat, wie sie ihr Ruby-on-Rails-Zeug umgebaut haben auf Twitter, äh, auf, mann Gott, wenn
ich nicht müde bin, erzähl ich übrigens im Schluss, wie sie das umgebaut haben auf
Java. Ja, das ist ein interessantes Ranking. Das bringt witzigerweise Microsoft in jeder
Konferenz bringen, die dieses Ranking, aber in Kombination hiermit. Das finde ich immer
ganz cool. Microsoft bringt dieses Ranking quasi in jeder Präsentation, um nämlich
zu zeigen, dass C Sharp voll beliebt ist und dass C Sharp auch eine Technologie ist, mit
der die Leute gerne arbeiten. Das verwendet Microsoft immer. Man sieht es an den anderen
Stellen auch. Das ist jetzt halt so eine Sache, äh, ups. Das ermittelt sich ja auch bestimmt
ein bisschen. Oje, Gender, das muss man ganz schnell überspringen, sonst sind die Feministen
am Start, ey. Alter, wie komm ich denn jetzt wieder zur Sprachenübersicht? Wo ist denn
die Sprache? What the fuck? Eben bin ich noch direkt rausgekommen. Ah ja, ok, da ist es
wieder. Alles gut, alles gut, ähm. Ok, keine Ahnung, bin ich nicht so drüber informiert,
was Twitter mit Java macht, aber kann ich mir gut vorstellen, dass das jetzt Scala ist.
Was so geil an Rust ist, Rust ist die erste Sprache, die ich gesehen habe. Ich weiß nicht,
ob es da nicht mittlerweile nachahm Versuche gibt. In C++ gibt's die, das weiß ich. C++
gibt's auch die Versuche, diese Copy Move Borrow Geschichte aus Rust nachzubauen, nur
dass in C++ natürlich mal wieder keiner checkt, wann, wie, wo man das genau richtig verwendet.
Das Schöne an Rust ist, dass du in Rust, sofern der Rust Compiler keinen Bug hat und
einen Fehler nicht erkennt, den du machst, dass du keinen unsafe Code programmieren kannst
in Rust, es sei denn, du verwendest unsafe, was aber ganz verpönt ist in Rust. Ja, also
wenn du irgendwelche Raw Pointer Magic machen willst, dann musst du das in unsafe machen
in Rust. Und das ist ganz, ganz verschrien, ja. Rust hat prinzipiell drei verschiedene
Konzepte. Ich erzähle euch das jetzt übrigens gerade aus dem Kopf von vor ein, zwei Jahren,
wo ich mir Rust angeguckt habe. Das wird aber immer noch so sein, allerdings kann es durchaus
sein, dass es da mehr mittlerweile gibt. Rust hat drei grundsätzliche Konzepte oder
drei grundlegende Sachen, wo die das sicherstellen, dass du keinen unsafe Code produzieren kannst.
Die verfolgen nämlich die Lebzeit deiner Variablen im Endeffekt. So, und wenn du eine
Variable hast, dann musst du die erst mal deklarieren als read-only oder als mutable,
das ist das erste, was du in Rust machen musst. So, und wenn du eine mutable Variable hast,
dann fängts an, weil ab dann wirds lustig. Immutable Sachen sind relativ wurscht, da
kannst du nicht das Problem haben, dass du auf einmal noch reinschreibst, wenn es schon
weg ist oder sowas. So, und wie Rust versucht das Ganze jetzt sicherzustellen ist, wir können
mal gucken, ich geb nämlich ein schönes Rust Buch, das da. So, wie Rust das versucht sicherzustellen
ist nämlich mit Ownership, nennen sie das Ganze. Das heißt, wenn du einer Funktion
was übergibst, da kannst du dich immer entscheiden, leist du das der Funktion, das bedeutet,
die Funktion besitzt quasi für diesen Zeitraum diese Variable. Das heißt, du kannst dann
in der Zwischenzeit auch nicht auf die Variable zugreifen in Code, der irgendwo anders parallel
oder so läuft, oder du kannst eine Reference übergeben der Funktion. Das heißt, Rust
kann immer tracken, wer gerade zuständig ist für das Lifecycle-Management oder halt von
der Lebensdauer deines Speichers. So, und wenn du es jetzt nicht gerade schaffst, ein
Bug im Rust-Compiler zu finden, dann ist dein Rust-Code komplett safe, was irgendwelche
Overflows oder Memory-Geschichten anbelangt. Und das, obwohl es keine Runtime-Checks hat,
wie beispielsweise die Sharp, ob du jetzt über einen gewissen, ob du jetzt halt irgendwelche
Pointer noch da hast und verwendest, die eigentlich schon aufgeräumt sind. Ja, deswegen ist Rust
ziemlich schnell und trotzdem safe. Und das ist was, was C halt per default nicht gewährleisten
kann. Dafür allerdings ist Rust-Code zu programmieren auch eine ganze Ecke nervtötender als C.
Null Pointer-Exceptions kannst du in Rust nicht kriegen. Weil in Rust ist es so, also
Pointer an sich gibt es gar nicht, also doch gibt es, Pointer gibt es schon, allerdings
keine Pointer wie es in C++ ist, dass du dann quasi eine Reference kriegst und die dereferenzierst
du irgendwo in der Hoffnung, dass da noch was drin steht. Und ob da was drin steht oder
nicht, weißt du gar nicht genau. So ist das in Rust nicht. Rust weiß jederzeit, ob das
Objekt noch da ist oder nicht. Und Rust hat dann so Geschichten wie beispielsweise diese
Optional-Types, die wir jetzt in C++ gesehen haben, dass die dann eben halt quasi eine Option
zurückgeben. Und du musst diese Option quasi erstmal checken, ob da is-none oder is-sum
drin ist. Und dann kannst du die unwrappen und dann kannst du dir den Wert rausholen.
Also, Rust-Programmieren ist relativ nervtötend, wenn man es nicht so gewöhnt ist im Vergleich
zu C. Dafür ist das Ding halt memory-technisch sicher. Ich hoffe, man konnte mir jetzt halbwegs
folgen, was ich erzählt habe. Womit hast du Coden gelernt? Buch, online, Tutorial oder
Ausbildung? Also, ich bevorzuge ja Programmieren einfach aus dem Grund, weil zum Programmieren
eben noch mehr gehört als Zeugs in Editor eintippen. Allerdings ist damit ja oftmals
das Gleiche gemeint. Ich habe damals mir ein Python-Buch gekauft vor Uhrzeiten und fand
es nicht so tolle. Und irgendwann bin ich auf die Idee gekommen, ich will ein paar billige
Windows-Anwendungen machen. Zum Beispiel wollte ich damals eine Log-Auswertung programmieren
für den MMO, was ich gespielt habe. Und da bin ich dann irgendwann drauf gekommen, ok,
ich bin unter Windows, was gibt es denn da? Und da hat Microsoft gerade.NET rausgebracht.
Und da habe ich mir gedacht, oh, das ist aber nice, habe mir das kostenlose Visual Studio
Express, hieß das damals so, runtergeladen, habe mir das Galileo Open Book, das ist ein
kostenloses C-Sharp-Book, geschnappt. Und dann war ich angefangen zu lernen. Und ich
muss sagen, C-Sharp war die erste Sprache, die ich so richtig gelernt habe. Und das ist
neben Ruby auch die Sprache, die mir und vor allem das Framework darunter, obwohl ich ja
an sich überhaupt kein Windows-Fan bin. Deswegen bin ich auch jetzt froh, dass es so etwas
wie.NET Core gibt. Jetzt über all die Jahre bin ich immer noch der Ansicht, dass C-Sharp
mit die schönste Programmiersprache ist, die es auf dem Markt so gibt und die mir auch
am besten gefällt. Obwohl ich damit angefangen habe. Gehnt das so vom Screenshot Tool? Nein,
hat jemand gefragt, mit was ich angefangen habe? So, allerdings, um jetzt mal von Programmier-
Fragen drumherum mal wieder auf das eigentliche zurückzukommen, was wir heute machen wollen.
Wir wollen ja noch unsere super High-End, noch nie dagewesene To-Do-Listen-App programmieren.
Ich komme ja schon ein bisschen billig, es kommt mir schon ein bisschen Noobstyle und
billig vor, dass ich jetzt eine To-Do-Listen-App mache. Aber gut, irgendetwas musste machen,
um den Kram kennenzulernen. Bleibt ja nichts anderes da übrig. Mal gucken, ob ich hier
noch irgendwelche Fragen übersehen habe. Nee, sieht nicht so aus. Ja, das ist tatsächlich
so was wie das Hello World für Web-Anwendungen. Ach nee, nee, nee, Kiyokun. Ich wollte damals,
mit Log-Auswertung, ich wollte damals irgendwas für Dark Age of Camelot basteln. Irgendein
Log-Auswertungstool. Ja, ich weiß wieder was. Die waren damals auf dem Trip, dass man,
ähm, bisschen laut die Musik, oder? Die waren damals auf dem Trip, dass man den Client nicht
schließen darf. Hat sich der Hersteller gedacht, das ist eine gute Idee, dass man den Client
nicht schließen darf. Deswegen wollte ich so machen, dass ich im Chat, dass ich das Chat-Log
anmache, das habe ich mir damals überlegt, dass ich das Chat-Log anmache und dann in
den Chat in-Game was schreibe, was mein Programm im Hintergrund ausführt. Also so leichte Ansätze
von Hexord. War das damals. Und damit, deswegen habe ich damit angefangen. Äh, The Legion,
dankeschön für den Twitch Prime-Sub. So, das wollen wir mal schauen, äh, ich laber wieder
ewig rum. Okay, also, super High-End-To-Do-Listen-App. Lass mal hier, Refreshen. Wie sieht das Ding
jetzt aus? Und noch ein weiterer Twitch Prime-Sub, Read. Ich gehe mal davon aus, dass es Read
heißt und nicht Re-Five-Eat. Poggers, Easy-S. So sieht's aus. Ja, dankeschön für die ganzen
Subs und auch für die Follows, müssen wir an der Stelle auch nochmal erwähnen. Follows
gab's ja auch. Und zwar haben wir hier Follows am Start von Elton und Fen-Fenergo? Stimmt
das? Hallo Zugucker. Das ist irgendwie zu leise. Ja Herr Kracht, so wage ich das. Das
ist Copypasta, die könnt von mir sein. Darauf kann ich nur antworten, das hier. Ich hab
jetzt mal was random aus meinem Copypasta. Moment Leute, wir müssen jetzt mal was machen.
Wir müssen jetzt ein bisschen Copypastas spammen. Wenn wir schon am Copypastas spammen sind,
da müssen wir jetzt, ja.
Wie kriegen wir das jetzt hin? Also mit Javascript würde ich jetzt einfach sagen, hier onChange
oder onEnterpress oder irgendwie sowas. Funktionen aufrufen lassen und dann addToDoList. Fertig.
Aber wie mach ich denn das mit Blazer? Bind? BindToDo? Äh. Wie könnte man das machen?
On? Key? On? OnClick? OnChange? Ich hab ehrlich gesagt keine Ahnung, wie man das
jetzt den Blazer binden soll. Gescheit. OnKeyDownEnter. OnChange. OnChange. Ok. OnChange. Ähm. Dann
sagen wir jetzt void addListItem oder sowas. AddToDo. Ups, kann ich mal. Text. Kann ich
halt nicht mal schreiben. Ähm. ToDo addText. Ok. So und jetzt ist nur die Frage, wie krieg
ich denn den Text von hier da rein oder krieg ich den vielleicht bei onChange gleich mitgeliefert?
Sollen wir mal ausprobieren. Machen wir mal hier. OnChange. Und dann geben wir mal Text
aus, ob das überhaupt funktioniert. C Sharp für Web Definition. Das ist sowas von Nische,
dass es noch nicht mal released ist. Das ist Brifio Version Nummer 6. Aber ich hab da so
das Gefühl, dass das ähm richtig einschlagen wird, wenn das mal draußen ist. Erst mal Server
Site, Blazer, aber sobald Klein-Site, WebAssembly, Blazer mal draußen. Ich glaube das wird richtig
groß einschlagen. Ok. Default. Wobei wir schreiben da nix rein. Äh. Saito geht mir
genauso. Ich hab auch den Talk gesehen auf der Bild. Deswegen wollt ichs jetzt mal ausprobieren.
Ok. Geht das jetzt? Jetzt zumindest kriegen. Hab ich irgendwas falsch gemacht? Wie jetzt
geht das? Äh. Was hab ich denn jetzt falsch gemacht? Ist das daran, dass ich dann Parameter
übergeben hab? Was hab ich denn jetzt falsch gemacht? Ah. Der mag keinen. Aber das haben
die doch vorhin auch so gemacht. Ah, die mögen den Text da hinten dran nicht, hä? Wie mach
ich denn das jetzt? Wie krieg ich denn den Text? Weil normalerweise so die Raw JavaScript
Geschichte hätte das Ding hier ne ID. Ich würd mir das Objekt nehmen und den Text rausholen.
In View würd ich da irgendeinen Property oder sowas dran binden und drauf zugreifen.
Ah, wie mach ich das hier? Ich mein das mit der Ausgabe sollte schonmal funktionieren.
Ja. Also wenn ich Enter drücke da drin. Funktioniert das schonmal? Guck, wir googeln
da jetzt einfach mal. Blazer, To-Do-List-App. Ich muss echt gucken für To-Do-List-App. So.
Ok, zeig ich dir. Ja, das haben wir uns gespart, To-Do-Item. Kann man mit einer ID drauf zugreifen?
Ich hab keine Ahnung, wie. JavaScript Interop vielleicht, aber das kann ja nicht selber
ein zweckter Sache sein. Ok, das haben wir uns, soweit sind wir auch schon. Ja, soweit,
soweit, ähnlich. Die machen's ein bisschen advanceder, die haben da eigene Klasse dafür
und die rufen die To-Do-Items ab. Ok. Ähm, lass mal, lass mal alles. Wo hat der hier
seine Input und edit den Kram? Adding a new To-Do-Item, hier. Input, bind, new item. Ach,
so machen die das. Das ist wahrscheinlich. Ach, so machen die das. Ok, ähm, you To-Do.
String, new To-Do. Und jetzt geben wir dann hier, geben wir, geben wir das aus. Mal gucken,
ob das jetzt funktioniert. Nö. Ach, stimmt. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok.
Ach, stimmt. Klar, die Funktion wird nicht aufgerufen. Stimmt ja. Ähm, onChange. Wobei,
nee, nicht, nicht onChange, sondern wir machen das anders. Wir geben, ich gebe das einfach
mal hier oben auf. Nee, oben aus. Ah, das sollte erst mal reichen zum ausprobieren.
Jaja, das wird im Keypress probieren wir dann aus. Aber das edit auch nicht. Das gleiche
Problem haben wir doch eben schon mal, oder? Das gleiche Problem haben wir doch eben schon
mal. Warum hat das jetzt dann nicht funktioniert? Das gleiche Problem haben wir doch eben hier
vorhin schon mal. Ich mach mal hier den Ando, den Ando Train. Oh nee, ist es nicht mehr drinnen.
Fuck. Dann mach ich den Rideo Train jetzt. Du musst den Wert doch einmal zupassen. Ja,
gut, aktuell steht halt nix drinnen. Nee, ich hab's noch in der Zwischenablage. Also
für sowas macht man eigentlich den Git init am Anfang und gut ist. Na, wenn ich jetzt
hier irgendwas zuweise, dann steht das da zwar drinnen, aber ich hätte jetzt eigentlich
erwartet, dass sich das hier irgendwie bindet, wenn ich das jetzt klicke. Oh man, wie haben
ich es denn eben gemacht? Das gleiche haben wir doch eben schon mal. Wir haben doch eben
genau das gleiche schon mal. War es jetzt endlich doch Value gewesen oder war es doch
bind? Ach nee, wir mussten noch Type setzen oder Type Text. Kann das sein? Ja, es war einmal
aus dem Feld klicken, aber irgendwie bin ich da gerade zu doof für. Hä? Was hab ich,
was mache ich denn falsch? Wir hatten es doch vorhin schon mal. Da haben wir es doch auch
so gemacht. Okay, mal gucken, ob man auskommentieren darf. Also im Zweifelsfall, wenn man keine
Ahnung mehr hat, dann macht man das immer so minimal, so minimal wie möglich. Beende
noch mal den Kram und starte es neu. Nä, was hab ich denn verkehrt gemacht? Was hab
ich vorhin anders gemacht? War das nicht Addbind? Kann auch sein. Kann auch sein. Aber ich glaube
nicht. Ha! Aha! Okay, das ist doch ganz einfach. Ich weiß ehrlich gesagt gar nicht, was der
Unterschied ist. Ach so, bind gibt es einfach nicht. Addbind ist so eine Razor-Geschichte.
Ja gut, es ist klar, dass ein Add da vor muss. Okay, gut, dann können wir den Kram wieder
einkommentieren. Übrigens KU in Visual Studio. In dem Fall noch mal neu formatieren, weil
das übelst hässlich aussieht. Ähm, aber der Sündags-Highlighting ist ja auch eigentlich
gerade das Schönste. Irgendjemand hat geschrieben, wir könnten Add Range machen. Ja, könnten
wir, könnten wir machen. Wir könnten auch theoretisch das direkt hier dahinter schreiben,
unser ganzen, unser ganzes Zeug. Ah, das reicht erst mal dafür. Okay. New to do, guck
mal, ob es noch funktioniert. Yes. Einmal ohne Debugging starten. Ha, okay, funktioniert
noch. So, und jetzt können wir sagen, on, key, press, down, enter. Oder gibt es da was
Schöneres in Java Scripts? Also bei Forms gibt es Submit. Ich weiß nicht, ob es sowas,
äh, Submit. Geht es da auch? Add. Kann man das Submit machen? Wahrscheinlich nicht,
wahrscheinlich muss man key down, enter oder so. Ne, ne, geht nicht. Oder? Ne, ne, nichts
Submit. Also on, key. Wie kann man zwischen Java Script, input, enter, press. Okay, man
muss das mit key press machen. Man muss das, man muss das mit key press machen. Gibt es
nicht bei input, sowas wie Submit? Ach ne, ja klar, du kannst den input type auf Submit
stellen, wenn es in der Form ist. Na gut, da muss man es wahrscheinlich doch mit key press
machen. On, key, press, down. Mal add to do rufen wir auf. Äh, UI, key, press, event
args, hab ich grad irgendwo gesehen. So, da gucken wir jetzt, if, wir geben das, wir
geben das erstmal aus. Geben wir erstmal args aus und geben, lassen wir uns ausgeben,
was für ein code, was für ein key das ganze ist. Oder sowas wie enter oder 63 oder irgendwie
sowas drinstehen. War das 63, was war enter nochmal? 60, irgendwie sowas. Enter, ja. Ja.
Enter steht da nahe drin. Ah, so können wir jetzt gucken, dass da kein key enum hinten
dran ist, ist schon ein bisschen, nicht so, nicht so C sharp style, oder? Warum ist da
kein key enum hinten dran? Key, gleich enter. So, und dann wird geadded. Dann sollte unser
to do eigentlich funktionieren. Ich guck gleich in chat. Warum genau geht das jetzt nicht?
Ach so, weil ich text drinstehen hab und ich der übelste Kacknoob bin und new to do adden
muss. Omega load. Ha! Powergas! Funktioniert! So, und jetzt muss ich danach noch sagen, nachdem
ichs geadded hab, new to do gleich da nix. Und dann sollte das wieder auf leer stehen,
so. Gucken. Was mit bein dreicht. Ah! Leute! Blob! Bäh! Höh! Was ist nur das Problem?
Moment, was hab ich falsch gemacht? Äh. Hä? Moment. Ich mein, wenn das jetzt irgendwie
C wäre oder so, würde ich sagen, okay, das und das ist das gleiche, allerdings ist das
bei Strings in C sharp anders. Das ist quasi sowas, also es gibt Strings in C sharp nicht
wirklich doppelt oder so. Es gibt einen riesen Stringbuffer, wo alle Strings, die das Programm
verwende, drin sind. Das heißt, das hier ist quasi, wie wenn ich ein Copy mache. Also
warum das nicht funktioniert, verstehe ich nicht, wenn ich das hier auskommentiere.
Enter, enter, enter. Also, prinzipiell funktioniert das, was ich mache. Warum geht das nicht?
Ich könnte jetzt hier ein Delay rein machen, aber warum funktioniert das nicht? Hat irgendjemand
eine glorreiche Idee, warum das nicht funktioniert? Kann das sein, dass ich da irgendwie ein bisschen
was im Kreis triggert oder so? Äh, ja, das ist im Prinzip ähnlich wie bei Java mit call
by reference und value, allerdings Strings in C sharp special. Keine Ahnung, warum das
nicht funktioniert. Hä? Spacke das rum, weil ich das da oben irgendwie anzeigen lasse
oder so. Ich würde jetzt eigentlich nicht sagen, dass das ein Problem ist. Warum muss
ich da zweimal enter drücken? Steigt da gerade irgendjemand durch? Ah, ja, ja. ASMR
Rain. Also ich wette mit euch, das ist, weil wenn ich hier in dem Event-Händler quasi
das da ändere, dann spackt das irgendwie rum und triggert sich doppelt oder das Binding
wird quasi ausgeführt, bevor ich es geschrieben habe. Irgendwas merkwürdiges, ja. Aber so
wirklich checken, warum das so ist, äh, tue ich nicht. Ja, machen wir doch. Genauso,
genauso machen wir das doch auch. Ich habe eine Idee. Ich glaube zwar nicht, dass es
daran liegt. Aber wir können mal ausprobieren. Mach mal sowas hier. Aha. Der resetet erst
beim zweiten Mal enter drücken? Moment, ich hätte da doch mal eine Debug-Ausgabe drin
lassen sollen. Ich hätte da doch mal eine Debug-Ausgabe drin lassen sollen. Ah, enter.
Man muss doppelt, man muss doppelt enter drücken, dass er das hinzufügt. Aber nur
wenn man das hier setzen. Das stimmt, irgendwas mit dem, irgendwie, wie macht denn der Typ
das hier? Add to do, wer ruft dann das auf? On click. Ja, on click kann jeder. Also,
ich bin da grad irgendwie ein bisschen überfragt, ehrlich gesagt, wo das Problem ist. Wollen
wir mal on key abnehmen? Key abnehmen. Ist ein angenehmer Sound, äh. Ha! Wahrscheinlich
liegt das daran, weil ich die enter-Taste nicht lange genug gedrückt habe oder irgendwie
sowas. Oder die enter-Taste, da hat er doppelt gedrückt oder sowas. Okay. Also so richtig,
so richtig checken tue ich's nicht. Aber ist in Ordnung. Musste es nicht checken. Das
ist ja richtig high quality rain sounds hier. Ja, funktioniert. Proc. Unsere super dolle
to do Liste ist fertig. Ich dachte es regnet bei mir, soll ich was anderes machen? Oh,
was anderes. Shockwave, ultimate summer chill step mix. Woop woop woop. Woop woop woop. Okay,
ich hab's nicht so genau verstanden, aber unsere to do Listen App funktioniert. Sieht
zwar hässlich wie die Nacht aus, aber wir haben was gelernt. Und zwar so ein bisschen,
bisschen blazer. Oh, wir wissen jetzt wie wir, ähm. Variablen binden, wie heißt denn
sowas dann in der Stelle richtig? Property ist es nicht. Klassenvariable ist es auch
nicht. Wie ist denn das? Wie ist die globale, globale Komponentenvariable oder irgendwie
sowas. Bootstrap ist sogar schon drinnen. Bootstrap ist schon eingebunden. Merkt sich
die to do Liste. Nach dem Neustarten. Nee. Guck hier. Zack. Bam. Reload ist wieder weg.
Das ging. Man könnte, man könnte das lokal, man könnte das lokal in, in seine. Gibt ja
so eine 2MB Datenbank im Browser. Local, local storage. Keine Ahnung, ob das mit blazer
überhaupt geht. Blazer, local storage. How can I access browser, local storage in blazer?
Blazer storage. Guck, da gibt es schon was Fertiges. Da könnte man, da könnte man sich
den Kram speichern lokal im Browser. Und nächste Woche kommt ein React, nee auf React
hab ich keinen Bock. Ich überleg mir ernsthaft, also je nachdem wie umfangreich das ist, ich
überleg mir ernsthaft, ob ich mein, was hat er gesagt, ob wir das im Stream dann machen.
Nämlich mein Memboard versuchen auf Blazer, also wenn dort ne 3 dann raus ist, mein Memboard
auf Blazer um zu programmieren. Kann es sich in der Textdatei speichern, das läuft im
Browser, im Browser ist mit Textdatei Speicher nichts. Mein Memetool in Blazer sollte relativ
einfach sein. Ich mein, das besteht dann nach wie vor noch aus dem Serverteil und im kleinen
Teil. Aber es sollte sich in Grenzen halten denke ich. So wie können wir jetzt noch gucken,
wie kann man auf local storage zugreifen? Gibt es da schon was? Working with local storage
in Blazer. Man muss ne Library für verwenden, das ist ja nicht so, ist ja kein Problem.
Add blazored local storage und wie funktioniert das dann? Set item, get item. Warum das Memboard
nicht komplett als WPF Anwendung? Weil das dann nicht ordentlich über mehrere Rechner,
also nicht so easy über mehrere Rechner verteilen nutzen kannst. So gehst du einfach mit nem
Browser vor nem Tablet auf die Webseite, kann ja auch ne Tablet sein und kannst dir deine
Bildchen anklicken und wird dann eingeblendet. Und da ist mit WPF nicht viel zu holen.
Da ist nicht viel zu holen. Übrigens hab ich euch schon erzählt, dass wenn ihr einen Amazon
Prime Account habt, dass ihr den kostenlos mit Twitch verbinden könnt und ihr bekommt
im Monat kostenloses Twitch Prime Loot und ihr könnt in Streamer eurer Wahl mit einem
5 Dollar Sub, der euch allerdings nicht kostet, allerdings den Streamer komplett supportet
wie ein normaler Sub, unterstützen. Und das ganze kostenlos, wenn ihr euren Twitch Account
mit einem Amazon Prime Account verknüpft. Muss an der Stelle natürlich nochmal erwähnt
werden. Und außerdem wenn ihr subscribt, spam ich für euch 20x Subscriber und Naiso. Ob
das jetzt natürlich so der Anreiz ist, bin ich mir nicht so sicher. Richtig sellout.
Und da Sebaro postet euch im Discord irgendwelche komischen Reap Bildchen. Turbo Nautilus, genau
so funktioniert das aktuell auch. Das hier. Das ist SignalR mit ASP.ONET im Backend.
Genau so funktioniert das aktuell. Und das ist wirklich sau schnell. Man siehts hier,
ich hab beispielsweise Steuerung L, hab ich Hotkey gebindet auf LUL. Man siehts, wenn
ich das gedrückt halte, wie schnell das quasi vom Frontend zum Backend kommuniziert ein
und ausblendet. Du siehst quasi jedes Intervall von der Taste. Und für was wird dann die Kohle
verwendet, die eingenommen wird für Projekte. Die Kohle, die behalte ich ganz einfach.
Dann hab ich wenigstens was von. Wie funktioniert die Anzeige? Das ist eine WPF Anwendung, eine
transparente WPF Anwendung mit einem Image Element drin. Was ein bisschen kompliziert
war, war das Durchklicken, weil du siehst ja hier, wenn du auf der Seite bist und das
Bild drüber hast, du kannst durch das Bild durchklicken und markieren. Und wenn du gerade
am Markieren bist, kannst du auch das Bild einem ausblenden, ohne dass der sich den Fokus
crappt, wie du hier siehst. Ich kann im Hintergrund ohne Probleme weiter markieren, weiter Seite
scrollen und machen. Das war ein bisschen komplizierter, das Frontend, also das Overlay so hinzukriegen.
Aber es funktioniert. Die WPF Anwendung werden wir dann aber auch behalten. Ich überleg
mir nur, ob wir das Webfrontend nicht vielleicht mit Blazer machen, nachdem wir da ein bisschen
mehr gecheckt haben, wie es funktioniert. Geht eigentlich mittlerweile Hot Grill als
Web-Mode. Nö, immer noch nicht bei mir. Pimuroni habe ich schon relativ viel bestellt,
die Sachen taugen. Doch ist da, ne bei mir geht es nicht, bei mir geht es noch nicht.
Vielleicht, aber das liegt bei mir wahrscheinlich auch daran, dass ich BetterTwitchTV verwende
im Browser und das wahrscheinlich einmal nachts irgendwie sich sünkt mit FFZ. F5,
wollen wir mal ausprobieren, ob F5 was bringt? Ich glaube es ja nicht. Ich glaube das muss
ich erstmal neu sünken. Nö, ach doch, Pog, jetzt funktioniert es. Das heißt, wenn ich
den Chat, den Q-Chat, wo ist der Q-Chat? Hier unten, Q-Chat. Wenn ich den dann mal ausblende
und wieder einblende, reloadet er sich vielleicht auch. Oder auch nicht. Wahrscheinlich reloadet
er sich nicht. Er reloadet sich wahrscheinlich erst wenn ich, ne hier geht es nicht, erst
wenn ich OBS neu starte. Was ist das eigentlich für eine komische Musikmischung? Die ist
mal übelst leise und macht normal laut. Und das, wenn man eine Vorstellung hat, also
das Memeport ist schon ein bisschen eine komplexere Anwendung hier, ne. Also da ist schon ein
bisschen mehr hinten dran. Ah, das ist für die Shortcuts, das ist für die, die, die,
die Build-Overlay-Anwendung, dann hier für die globalen Shortcuts. Dann haben wir hier
unsere Web-Anwendungen, dann haben wir hier noch FFmpeg-Krams für irgendwelche Builds,
für GIFs, ne, für GIFs haben wir noch FFmpeg drin. Also das ist schon ein bisschen komplexer
das Ding. Aber ich könnte mir vorstellen, dass wir das mit Blazer im Frontend ganz gut
machen können. Warum nicht? Mit OBS einblenden ist ganz einfach, weil ich es nicht selber
sehe, wenn man es mit OBS einblendet. Mit OBS einblenden ist kein Problem, kann man
machen, aber dann sehe ich es selber nicht. Ich will ja gerade den Plutzin selber sehen,
wenn ich einblende. Massive Five-Hat. Ups. Falsch geklickt. Ich habe ja einen zweiten
Monitor, wo ich eine Vorschau drauf habe, aber wenn ich gerade irgendwie am spielen bin
oder irgendwas am machen, dann will ich einfach selber sehen, dass ich einen Overlay habe,
dann denke ich auch gleich dran, das wieder wegzuklicken. Ihr kennt mich, wenn ich irgendwo
was einblende, dann lasse ich das eine halbe Stunde stehen. Jaja, Silent Pain, das geht.
Das einzige, wo es nicht geht, ist bei exklusiven Fullscreen-Anwendungen, dann funktioniert es
nicht. Also wenn du jetzt irgendein älteres Game hast, das muss ja schon ein richtig altes
Game sein, sowas wie Half-Life 1 oder so, wenn du da einen exklusiven Fullscreen hast,
dann bugt es rum, dann funktioniert es nicht. Aber mir fällt kein Game der letzten zehn
Jahre ein, was kein Borderless-Window kann. Ja, wenn du CSGO streamen würdest, dann würdest
du halt auf Borderless-Window schalten. Oder aber du machst halt die Sache, dass du es
nur in OBS einblendest. Ja, das sind zwei Sachen, die funktionieren nicht zusammen.
Nachdem das ja im Prinzip darauf angewiesen ist, dass ein Window-Manager läuft oder halt
ein Composite-Manager und du Fullscreen-Exklusiv-Anwendung hast, das beißt sich, das kann ja nicht funktionieren.
Hallo Voodoo Cloud. So, wollten wir noch was gucken? Können wir noch was machen? Hier
haben wir eine Placer-Storage. Da habe ich jetzt eigentlich keinen Bock drauf, das zu
machen. Weil ich meine, man kann Local-Storage-To-Do-Listen speichern und da müsste ich jetzt gucken,
wie diese komische Library hier funktioniert. Da müsste ich mal reacten. Reacten? Okay.
Zu was soll ich reacten? Gab es heute irgendwas Interessantes? Also unsere Placer-To-Do-App
funktioniert. Na, haben wir schon mal geschafft. Sehr nice. Voodoo Cloud, Twitch Prime, ultra
nice. Kommen wir mal extra an den Sound jetzt dafür. Twitch Prime, Dankeschön. Max react
zu Max. Ne, das ist mir zu doof. Neuer Premierminister UK juckt mich auch nicht. Ja, da müssen wir
uns schon mal ordentlich suchen. Wisst ihr, was absolut Meta wäre? Wir suchen uns ein
Reaction-Video, wo jemand reactet, zu dem wir dann reacten können.
Ich finde schon, das ist next-level.
Ne, wir brauchen auch schon ein gescheites Video zu. Übrigens, wann sind denn die, wann
ist denn Gamescom eigentlich? August, ne? Ach, guck mal da, die fangen jetzt ja schon
am Dienstag an und sind Samstag schon fertig. Das finde ich ist eine gute Idee. Ja, genau
sowas meine ich, aber Clocks HD auf Unge will ich nicht reacten. Es sollte schon irgendwas
sein, was mich halbwegs interessiert. So, und wann, gibts da irgendwelche Presse, Presse-Konferenz-Übersichten
schon? Die Bild, Computer-Bild, easy. Gucken wir mal Computer-Bild. Moment, 2009, debated.
Bildschirmarbeiter, das ist ja geil. Das ist geil, das muss ich euch zeigen, was er im Chat
gepostet hat. Das ist ja huge. Der ist am Limit, der ist am Limit. Der, der, der, der,
der, der kriegt die Animation schon gar nicht, na doch, fast. Huge, huge Raspberry-Projekt.
Warum kriegt der Raspberry das nicht hin abzuspielen? Das sollte doch eigentlich easy sein so ein
10 Bilder GIF abzuspielen?
Doch, genau.
Allerdings ist das Viech aus der Doku ist der hier.
Und das ist die
RGB-Variante davon.
Was ist deiner Meinung nach der schnellste Weg, Webentwicklung zu lernen?
Also, wohlgemerkt, ich bin kein beruflicher Webentwickler, aber der schnellste Weg generell
Programmieren zu lernen ist, ein Projekt im Kopf zu haben, das man umsetzen will und dann
damit zu lernen, weil dann hast du auch bei kleinen Schritten schon Erfolgserlebnisse und machst weiter.
Also wenn du was, wenn du quasi schon was im Kopf hast, was du gerne machen willst,
da würde ich sagen, einfach anfangen und sich dann dazu halt
Tutorials angucken und
am besten, muss ich sagen, ich finde es immer noch ganz gut, sich ein passendes Buch zu kaufen, weil ich finde es ist immer noch angenehmer,
wenn man das einfach mal so ein bisschen in Ruhe
aufnehmen will und sich in Ruhe das angucken will, wenn man sich irgendwie in den JavaScript oder in die Sharp-Buch oder sowas holt und einfach,
dass man sich einfach mal so was hat, kann sich das in Ruhe angucken, was der Typ schreibt dazu und dann auch ein bisschen mehr die Theorie dahinter
checkt. Zum Nachschlagen sind Bücher nichts, da guckt man einfach auf Google,
aber ein ordentlich strukturiertes Buch von vorne bis hinten, Einführung in eine Sprache, würde ich immer noch empfehlen.
Mr. Steini, Twitch bleibt es ab, Dankeschön.
Kraken, Poggers, pock.
Voralen paar Tabs zu ihr.
Tab zu zu.
Kann eigentlich, jetzt müssen wir gerade mal was ausprobieren.
probieren kann kann die eigentlich kann die eigentlich sagen 360 no-scope
naja nicht so richtig würde ich sagen aber no-scope hat man verstanden
no-scope no-scope schreibe das mal auf 360 no-scope
das finde ich gut das finde ich gut das finde ich gut das ist da ist
das gefällt mir das lehrzeichen macht nix das gefällt mir no-scope sind hier nur
ITler es ist auf jeden fall ein hoher anteil ist das rast was du vorhin
gegoogelt hast eigentlich gut zum lernen als ich mir rast angeguckt da war das
auch nicht fertig aber das ist das offizielle rastbuch also ich würde auf
jeden fall mal damit anfangen
ja bildschirmarbeiter kann sein dass der da schmerzen mit hat ja du könntest
ja einen desktop entweihe du könntest ja eine grafische grafische
oberfläche installieren und auf der grafischen oberfläche man den terminal
aufmachen und gucken ob dort die ausgabe smoother läuft
ja tempelritter hat dir das geholfen also ich finde das trifft eigentlich auf
jede programmier sprache zu
die Overwatch machen wir heute nicht
müssen wir meinen chat log rein gucken ob ich irgendwas übersehen habe an
fragen
wie wäre es mit einer subscriberrolle auf dem discord so was hat der patrick
oder dass er baro schon gebastelt
da man ks haben wir ja schon
wo ich das sage könnte man auch machen ja
da würde ich dann eher sagen woodface alter woodface
kennen wir das noch das habe ich doch mal in einem video losgelassen wo dann
alle verwirrt waren so von was spricht da
huge donation
50 cent 50 bits dankeschön kio kunn
was macht obs eigentlich besser als fraps
das ist ein chibate oder
das ist ein chibate das glaube ich denn das ist ernst gemeint
ja du musst tempelritter du musst du musst wissen was dir
wenn du schon was ausprobiert hast und du sagst
youtube videos sind nicht so das ich finde auch zum einstieg zum komplett
neu lernen von einer sprache sind youtube videos auch nicht unbedingt das
beste
das ist eher gut wenn man wenn man aktuell bleiben will
so komplett zum einstieg der neuen sprache klar kannst du kannst du so eine
kannst du so einen kurs auf auf irgendwie so einer tutorial plattform
machen
ich würde dir allerdings ganz ehrlich
ich würde dir den buch in deiner muttersprache empfehlen
eins mit guten bewertungen und was auch gute gute reviews hat
ähm
um dich mit den hintergründen der jeweilige sprache auseinanderzusetzen
und mir das in ruhe zu gemüte führen
ich finde zum beispiel
ich mein
es gibt wahrscheinlich wenige technische texte auf englisch die ich
nicht verstehen würde
mittlerweile kennst du einfach alle möglichen wörter
aber wenn so lange es nicht shakespeare ist oder sowas aber das ist ja auch kein
technischer text in dem sinn
ähm
aber trotzdem ich finde in der muttersprache kann man immer noch
entspannter und einfacher die dinger so nebenbei lesen
aber das ist
mit sehr geschmackssache
die viele modus hast du ich glaube man hat standardmäßig zwei oder so
ich glaube wir haben nächstes mal auf
ja übrigens sollte haben seit neuestem auch ein discord
eine ausrufe zeichen discord machen
da gibt es auch hilfe
aber den hilfe channel für programmierfragen
und sind ja auch recht viele hier im stream die sich auskennen
das heißt da kriegt man auch
ganz gut antwort wenn man was wissen will
ich gar so abgedreht ist
ähm haben wir auch relativ viele advancede leute
die da sind
wir haben den allgemeinen channel zum rumspermen ein bisschen
für den sebaro haben wir ein weep channel wo er seine
seiner vorliebe nachgehen kann
und Sachen posten
ähm
ja könnt ihr mal reingucken in unseren discord
oder in meinen discord ich sag hier mal unseren discord weil
im prinzip ich da drauf alleine bin ist ja auch sinnlos
wie gesagt ausrufe zeichen discord gibt es dann ein invite link
aber so wie ich das hier gerade im chat sehe
meist Leute kommen ja vom discord auch schon bekannt vor
na wir haben jetzt zum beispiel auf dem discord kann ich dir mal kurz zeigen weil
mehr oder weniger
fertig
wenn es dann mal irgendwann startet
so hier haben wir
ankündigung für neue sachen
da steht zum beispiel drinnen wenn ich ein neues youtube video hochlade
oder wenn ich den twitch den twitch team
schmeiße
übliche laber channels die man halt so braucht
themenvorschläge für streams
das finde ich ganz cool wenn ihr eine idee habt schreibt das rein
ich werde es dann früher oder später
wenn es sich komplett nicht in stream passt machen
ähm wir haben was zum thema programmieren hilfe zum programmieren
oder zur heim automatisierung und
falls ihr wollt
dass ich euer
steamprofil
kommentiere
könntest du auch einschreiben
dann mache ich das
wusste
bis vor ein paar wochen gar nicht dass es überhaupt ein ding ist
er rieb spam kann ich nicht aufmachen rieb spam ist not safe vor
twitch
hast du twitch und discord verknüpft
ja wir haben ganz viele verschiedenen emotes
also emotes die man für alle nur erdenklichen varianten braucht
ja aber ansonsten
das kann ich meinen wir sind eigentlich fertig
kifke und dankeschön twitch prime nice
das ist so
das hört sich so dumm an
funka smoke
noscope
ach so ach ich müsste es verknüpfen ok
ja siebauer das kann ich machen
jack daniels schreibt
ähm das erinnert mich alles ein wenig an meine alte schule
die informatik lehrerin und ich hatte eine informatik lehrerin
das ist ja
poc
hat den kurs gefragt was wir am besten machen sollen niemand wollte
programmieren sondern lieber theorie machen
da eben keiner programmieren konnte wir waren halt nur drei leute drei leute
die eine klausur schreiben mussten darunter halt ich
blöde dass die informatik klausuren halt immer ein programmierteil
haben mussten und ich dann die ahnung davon
ja gut das liegt daran dass der unterricht wahrscheinlich gesagt hat
einfach nur
hallo wo bloß und chat weiß jemand wie man daten von einem kaputten android
gerät retten kann
von mobile kram habe ich überhaupt keine ahnung
ich würde versuchen das ding per usb anzuschließen und abzuziehen aber das
funktioniert wahrscheinlich
sonst wird sie nicht fragen
das wäre zu
usb
presse ich habe keine ahnung was das sein soll
programmierunterricht wirst du official basic
das sind xp schreibt er fängt am ersten august seine fach informatiker
systemintegration ausbildung an das schon mal sehr nice
was kann ich von der berufsschule im unterricht zu erwarten ganz ehrlich wenn
du schon ein bisschen was kannst du kannst von der berufsschule nichts
erwarten
gar nichts das einzig sinnvolle an der berufsschule ist dass man sich auf
prüfungen vorbereiten kann
indem man einfach ein paar prüfungen macht
ansonsten ist berufsschule komplett
sinnloser
das wurde heute eigentlich gemacht
wir haben uns ein bisschen bläser angeguckt und haben eine super
high end
to do app programmiert in bläser
so eine schöne to do app hat noch keiner hingekriegt
läuft noch nicht mal mehr
java
immer schlimmer
das ist schön zu hören so ein xp
ja da muss ich dem cheat recht geben berufsschule ist zum entspannen da
die brauchen unbedingt einen monka java oder javas emote
ich habe heute morgen mal gesucht
es gibt leider nicht so wirklich
gute emotes
ich habe zwei gefunden ich habe zwei gefunden die waren aber auch nicht so
wirklich gut
ich habe einmal
das hier
und das da das das wird irgendwie noch zu java passen ja
vor allem das da
aber ich finde wenn das wenn das halt klein ist
die normalen emotes sind halt so in der größe
dann erkennst du nicht dass es eine kaffeetasse ist
die s-spielen
woher weißt du das denn mit dem ds spielen
bei deni habe ich das mal erzählt im stream
wachsweil kommt der q-stream
ich mal gucken
vielleicht vielleicht das nächste mal schon
ja das ist ja auch schon
ja der bildschirmarbeiter sagt es zum beispiel immer das richtig was gebracht
mit der berufsschule
ist wahrscheinlich auch extrem davon abhängig in welcher berufsschule man
landet
das ist ja auch schon so
das ist ja auch schon so
das ist ja auch schon so
das ist ja auch schon so
das ist ja auch schon so
das war alles
super
je
je
ja
Ich habe so einen Monk hs gefunden mit einem vulkan auf dem kopf
Was ist eigentlich so schlimm an java nix nix
Das ist einfach nur ein bisschen java gepläst eigentlich ist es überhaupt nicht schlimm ist an java
Man kann auch ohne problem java programmieren da kommen auch gute anwendung raus
Koffe grill koffe girl. Nee java ist
Ach das hier mal zu das ist das hat das hatte sebaro gleich wieder gespottet hier
Hat er gleich hat er gleich erkannt das koffe grill hat er sofort hat er das erkannt
Bei java ist es das konterst das das das das
Kaffee babe oder kaffee babe steht glaube ich in jeder in jeder java datei obendrinne
Ja in jedem java file steht in hex kaffee babe obendrinne
Java eigentlich ordentliche generics mittlerweile
Was wird hier getrieben ehrlich gesagt eigentlich oft gehen
Wir haben uns heute wir haben uns vorhin blazer angekickt angeguckt net im browser
Gucken wir mal ob es was gibt zum hosten. C++ oh gott da könnte man es mal wenigstens richtig lernen
Qt ihr werdet Qt programmiert
Flutter app
Disco overflow twitch was
Oh das sieht schon das sieht advanced aus was er da treibt
Ich weiß nicht genau was er da treibt
Aber es ist wpr von mvwm das ist schon mal klassisch die 3d drucker streams sind
wieder am start
Ich empfinde mich begeistert dass es so viele 3d drucker streams gibt
Host the live overflow sagt mir gar nichts
Was macht der
Das ist ja 2m breadboard oder was macht der da
Also das sind die kleinen zusammen geklipst aber das ist huge
Kenn ich noch gar nicht
Da müssen wir mal followen achso ich bin gar nicht eingeloggt
Ja gut dann werde ich den mal hosten leute
Machts gut wir sehen uns im nächsten stream
Bis dann see you
