WEBVTT

00:00.000 --> 00:04.440
Corona-Ausbruch instant

00:04.440 --> 00:13.040
Ja, ich wusste, ich wusste gerade weg, ich kann euch gleich erzählen was war

00:13.040 --> 00:15.040
Nichts Schlimmes

00:15.040 --> 00:19.160
Oh, was hab ich da noch auf, ah von gestern

00:19.160 --> 00:30.360
Exquisite

00:30.360 --> 00:35.120
So ich weiß nicht ob noch irgendjemand da ist, ich mein, ich bin ja relativ plötzlich,

00:35.120 --> 00:39.120
ich wusste relativ plötzlich oft vor eineinhalb Stunden oder so

00:39.120 --> 00:50.120
Twitch sagt 46 Leute waren dauerhaft und sind instant wieder da, okay

00:50.120 --> 00:52.120
Oh eineinhalb Stunden ist ein bisschen zu übertrieben oder

00:52.120 --> 00:56.120
Na doch 2 Stunden, eineinhalb Stunden, 2 Stunden war ich weg ja

00:56.120 --> 01:00.120
Ich bin 16.30 oft ja, 1.45 war ich oft

01:00.120 --> 01:06.120
Ich muss weg

01:06.120 --> 01:09.120
Kann man Update machen während hier das Stream wieder anläuft

01:09.120 --> 01:12.120
Wir machen einfach, wir machen exakt an der Stelle weiter

01:12.120 --> 01:15.120
Oh was das, der Specter Meltdown Checker

01:15.120 --> 01:18.120
Was das, muss ich gucken was das ist

01:18.120 --> 01:21.120
Was ist der Specter Meltdown Checker

01:21.120 --> 01:24.120
Was das, Checker

01:24.120 --> 01:28.120
Specter Meltdown Checker, wow, wow

01:28.120 --> 01:41.120
Spotmonka

01:41.120 --> 01:43.120
Guckt doch mal hier, der Specter Meltdown Checker sagt

01:43.120 --> 01:46.120
Ich bin verwundbar, aber ich bin ja zum Glück in der VM

01:46.120 --> 01:52.120
Weil das auch nicht alles ausschließt

01:52.120 --> 01:55.120
Guckt euch das mal an hier

01:55.120 --> 01:58.120
Der Specter Meltdown Checker

01:58.120 --> 02:01.120
Was das alles gibt

02:01.120 --> 02:04.120
Mit Root, mit Root soll ich das starten

02:04.120 --> 02:07.120
Okay mal gucken was da der Specter Meltdown Checker sagt

02:07.120 --> 02:12.120
Ha, ich bin safe, außer gegen das hier

02:12.120 --> 02:15.120
Okay, who cares

02:15.120 --> 02:18.120
Hat mich nur gewundert, hat mich nur gewundert was das ist

02:18.120 --> 02:21.120
Ja Leute ich musste kurz weg, ich musste vorhin kurz weg

02:21.120 --> 02:25.120
Es ist ein Exquisite Update, Huge Update

02:25.120 --> 02:28.120
Leute mal ernsthaft, ich hab sie nicht mehr alle oder

02:28.120 --> 02:31.120
Ich laber so ein dummes Zeug vor mich hin manchmal

02:31.120 --> 02:34.120
Und wisst ihr wo das noch schlimmer war

02:34.120 --> 02:37.120
Als ich mit dem Friseur immer, als wir zusammen Xbox gespielt haben

02:37.120 --> 02:41.120
Ohne Stream, ohne alles, wir haben einen Scheiß geschwätzt die ganze Zeit

02:41.120 --> 02:44.120
Das ist echt nicht normal gewesen

02:44.120 --> 02:50.120
Da ist das was ich hier vor mich hin laber, nix dagegen

02:50.120 --> 02:53.120
Keckweight, Keckhyperweight

03:02.120 --> 03:05.120
Also jetzt wo da wieder ein paar Leute da sind

03:05.120 --> 03:08.120
Wobei ich warte nochmal bis das Stream richtig angelaufen ist

03:08.120 --> 03:11.120
Kann ich euch erzählen warum ich eben wegpuste

03:11.120 --> 03:14.120
Ganz einfach

03:14.120 --> 03:17.120
Moment, erstmal den Controller anschließen, lull

03:17.120 --> 03:20.120
Ja sieht echt so aus

03:20.120 --> 03:23.120
Also warum ich vor eineinhalb Stunden einfach off gegangen bin

03:23.120 --> 03:26.120
Ich hab vergessen, dass ich verabredet war

03:26.120 --> 03:29.120
Ah, geht das Kabel nochmal rein heute

03:40.120 --> 03:43.120
Reset

03:43.120 --> 03:46.120
Connecting Wifi

03:46.120 --> 03:49.120
Alles klar, passt

03:49.120 --> 03:52.120
Gut, also jetzt

03:52.120 --> 03:55.120
Genau, also wo stehe ich, wo bin ich stehen geblieben

03:55.120 --> 03:58.120
Also warum ich weg war, ich war mit meinem Nachbar verabredet, wir wollten Reifen tauschen

03:58.120 --> 04:01.120
Also Reifenwechsel, das geht zu zweit halt viel easier

04:01.120 --> 04:04.120
Das hab ich komplett vergessen

04:04.120 --> 04:07.120
PP-Steer, doch hatten wir

04:07.120 --> 04:10.120
Hatten wir

04:10.120 --> 04:13.120
Haben die das entfernt was ich hatte

04:13.120 --> 04:16.120
Doch, Monka, Monkas-Steer haben wir

04:20.120 --> 04:23.120
Ich wusste noch, dass ich das hinzugefügt hab

04:23.120 --> 04:26.120
Ja

04:35.120 --> 04:38.120
Wieso geht da für Autocomplete nicht, doch bei mir hat's funktioniert

04:38.120 --> 04:41.120
Sonst ich hab einfach Doppelpunkt Steer eingegeben, da hat er's gefunden

04:41.120 --> 04:44.120
Weil

04:44.120 --> 04:47.120
Ansonsten hätte ich das doch jetzt auch nicht entdeckt

04:47.120 --> 04:50.120
Auch vielleicht sind die Emotes minimal zu groß

04:50.120 --> 04:53.120
Ihr wurdet ok-champed

04:57.120 --> 05:00.120
Echt nicht?

05:00.120 --> 05:03.120
Guck mal, sogar hier

05:03.120 --> 05:06.120
Sogar hier Autocompleted, ohne dass ich eingeloggt bin

05:06.120 --> 05:09.120
Und kleingeschrieben auch

05:09.120 --> 05:12.120
Das ist FFZ

05:12.120 --> 05:15.120
Ist das FZ

05:15.120 --> 05:18.120
Ja, vielleicht liegt's da dran

05:18.120 --> 05:21.120
Also ich bin ja hin und hergerissen

05:21.120 --> 05:24.120
Also FFZ ist ja eigentlich

05:24.120 --> 05:27.120
Find ich der schönere Plugin, aber ich find die

05:27.120 --> 05:30.120
Die Policy da teilweise doof, dass sie Emotes löschen

05:30.120 --> 05:33.120
Wobei bei der Twitch-TV hat auch Emotes gelöscht

05:33.120 --> 05:36.120
Scheiß drauf, ja

05:36.120 --> 05:39.120
Who cares? Toss

05:39.120 --> 05:42.120
Was Toss ist, fliegt halt raus, so ist das halt auf Twitch

05:45.120 --> 05:48.120
Ja Leute, also, wo sind wir stehen geblieben?

05:48.120 --> 05:51.120
Ich versuch das jetzt nochmal ganz kurz zu

05:51.120 --> 05:54.120
Zu erklären, wo wir stehen geblieben sind

05:54.120 --> 05:57.120
Wir bauen immer noch, also weil der Patrick gerade gesagt hat, es dauert schon 10 Streams

05:57.120 --> 06:00.120
Ich hab ja eigentlich außer in einem Stream noch gar nichts gemacht

06:00.120 --> 06:03.120
Vorher bin ich einfach easy instant off gegangen, weil ich Reifen wechseln musste

06:03.120 --> 06:06.120
Also, ich hab so ein paar Sensoren

06:06.120 --> 06:09.120
Und davon hab ich einem Kühlschrank liegen

06:09.120 --> 06:12.120
Und den will ich auslesen, dass ich erkenne, ob meine Kühlschrank hier offen ist

06:12.120 --> 06:15.120
Oder ob die Temperatur steigt, ja genau, so viel

06:15.120 --> 06:18.120
Das ist der Hintergrund dazu

06:18.120 --> 06:21.120
Dazu hab ich hier so ein Board

06:27.120 --> 06:30.120
Reifenwechselchamp, ja

06:30.120 --> 06:33.120
Dann hab ich hier so ein Board und darauf läuft das Ganze

06:33.120 --> 06:36.120
Wir haben das selbst programmiert und der Trick dabei ist

06:36.120 --> 06:39.120
Ich lese das rein passiv aus, also ich frag den Sensor nicht ab

06:39.120 --> 06:42.120
Sondern der Sensor schickt alle 30 Sekunden Daten und ich frag das

06:42.120 --> 06:45.120
Also ich lese das einfach aus, was der schickt, d.h. das beeinflusst null die Batterie

06:45.120 --> 06:48.120
Und ich frag alle 5 Stunden

06:48.120 --> 06:51.120
Alle 5 Stunden

06:51.120 --> 06:54.120
Frag ich die Batterie ab

06:54.120 --> 06:57.120
Wer sich schon immer mal gefragt hat

06:57.120 --> 07:00.120
Wie viel 5 Stunden in Microseconds sind

07:00.120 --> 07:03.120
Der weiß es jetzt

07:03.120 --> 07:06.120
Das sind 18, ok warte, warte, warte, Sekunde, Sekunde

07:06.120 --> 07:09.120
Kann es hier bloß so was eigentlich?

07:09.120 --> 07:12.120
Kann das das?

07:12.120 --> 07:15.120
Nee, kann es nicht, oder? Vielleicht mit Komma?

07:15.120 --> 07:32.120
Das wäre ja auch zu schön, wenn die sowas könnten

07:32.120 --> 07:35.120
Also das sind was? 18 Milliarden?

07:35.120 --> 07:38.120
18 Milliarden Microsekunden

07:38.120 --> 07:41.120
Wenn dann mit Komma

07:41.120 --> 07:50.120
Nee, nee, nee, 1000er Trendzeichen ist ein Punkt

07:50.120 --> 07:54.120
Wobei das ist ja Kokona

07:54.120 --> 07:58.120
Also in C Sharp gibt es das?

07:58.120 --> 08:03.120
Separator?

08:03.120 --> 08:10.120
Ach ist das Kokona oben das Ding?

08:10.120 --> 08:14.120
Also man kann nämlich in

08:14.120 --> 08:18.120
Man kann nämlich in Dortnet mittlerweile die Sachen so schreiben

08:18.120 --> 08:21.120
Aber ich glaube nicht, dass man das so schreiben muss

08:21.120 --> 08:27.120
Was ist das überhaupt? Patrick, was für ein komisches? Ach das ist ein Single Quote, ne?

08:27.120 --> 08:30.120
Ja, aber das wird nicht funktionieren

08:30.120 --> 08:35.120
Wenn das funktioniert, dann kecke ich eine Runde

08:35.120 --> 08:38.120
Wait a minute

08:38.120 --> 08:41.120
Wait a minute

08:49.120 --> 08:51.120
Ernsthaft?

08:51.120 --> 08:54.120
Fuck, das geht

08:54.120 --> 08:59.120
Ok Leute, ich hab zum ersten Mal in meinem Leben, ihr werdet es nicht glauben

08:59.120 --> 09:06.120
Ich hab was gefunden an C++, was ich nicht total kacke finde

09:06.120 --> 09:12.120
Die haben sich ja mal was dabei gedacht

09:12.120 --> 09:18.120
Ich wusste das auch nicht

09:18.120 --> 09:25.120
Mal gucken wie das Feature heißt

09:25.120 --> 09:29.120
Tatsächlich seit 2014 geht das schon

09:29.120 --> 09:32.120
Das ist ja mal

09:32.120 --> 09:39.120
Die erste, ok ne das stimmt nicht, es ist die zweite Sache, die ich an C++ ganz gut finde

09:39.120 --> 09:43.120
Das erste, was ich an C++ ganz gut finde, dass man

09:43.120 --> 09:46.120
Compile Time String Längen checken kann

09:46.120 --> 09:53.120
Also wenn ich beispielsweise eine Methode hab, wo ich sag hey, mein

09:53.120 --> 09:57.120
Mein Name darf nur maximal 15 Zeichen lang sein

09:57.120 --> 10:01.120
Dann kann ich das quasi zur Compile Zeit checken lassen, das ist auch ganz nice

10:01.120 --> 10:06.120
Aber ansonsten habe ich immer nichts gefunden, was ich geil finde an C++

10:06.120 --> 10:11.120
Gibt es wahrscheinlich auch einfach nix

10:11.120 --> 10:14.120
Ja

10:14.120 --> 10:17.120
By the way, ich hab mir überlegt, Leute, muss ich euch mal fragen

10:17.120 --> 10:21.120
Ich hab mir überlegt ein Video zu machen morgen über

10:21.120 --> 10:26.120
Was es sich lohnt, was man auf seinem, was man selbst, was ich daheim betreiben kann

10:26.120 --> 10:31.120
So an Software, was man selbst hosten kann und was ich da für sinnvoll halte

10:31.120 --> 10:36.120
Ich brauche ein bisschen reißerischen Titel, so der perfekte Heimserver oder irgendwie sowas

10:36.120 --> 10:38.120
Muss ich mir noch was überlegen

10:38.120 --> 10:41.120
Die Sache ist bloß die, ich hab keine Ahnung

10:41.120 --> 10:43.120
Ob die meisten Leute damit was anfangen können

10:43.120 --> 10:45.120
Weil bei den meisten Leuten ist nach

10:45.120 --> 10:49.120
Wir installieren einen Raspberry Pi mit einer Nextcloud ist fertig

10:49.120 --> 10:58.120
Mehr kriegen die nicht gebacken

10:58.120 --> 10:59.120
Ja

10:59.120 --> 11:02.120
Also die, die meisten Leute machen den Nass auf den Raspberry Pi oder sowas

11:02.120 --> 11:07.120
Wobei ein Raspberry Pi fürs Nass so eines der schlechtesten Geräte überhaupt ist

11:07.120 --> 11:11.120
Und

11:11.120 --> 11:14.120
Ohne Nextcloud und Nextcloud sackt halt, es ist halt

11:14.120 --> 11:17.120
Es ist halt nix dabei, was mir gefällt, ne

11:17.120 --> 11:19.120
Also doch, nix dabei

11:19.120 --> 11:22.120
So bei dem, was ich hab, was die Leute wahrscheinlich gefällt

11:22.120 --> 11:31.120
Ich finde, man kann schon durchaus die eine oder andere sinnvollen Sachen machen

11:31.120 --> 11:36.120
Also ich bin tatsächlich froh, dass ich mittlerweile gültige Zertifikate bei mir lokal habe

11:36.120 --> 11:43.120
Weil klar, das wird wahrscheinlich meistens kein Jucken, aber ich find gültige Zertifikate lokal bei mir echt nice

11:43.120 --> 11:49.120
Mein PXE Boot lokal ist auch ultra poggers

11:49.120 --> 11:55.120
Also da freu ich mich jedes mal, wenn ich PXE ne VM starten kann

11:55.120 --> 11:57.120
Meine, ähm

11:57.120 --> 12:01.120
Hardware Teile Verwaltung, wo ich weiß in welcher Schublade was liegt, find ich auch praktisch

12:01.120 --> 12:08.120
Zehn Gründe, warum jeder mindestens ein vollbestücktes 42er Airwreck zuhause haben sollte

12:08.120 --> 12:11.120
PXE lokal wird, wie, wie

12:11.120 --> 12:14.120
Du musst PXE lokal machen, wie willst du es denn sonst machen

12:14.120 --> 12:17.120
PXE as a service, sowas gibt's glaub ich noch nicht

12:17.120 --> 12:21.120
Wobei, wobei, Max, man weiß ja nie

12:21.120 --> 12:25.120
Wisst zwar nicht, wie das gehen soll, aber

12:25.120 --> 12:29.120
Achso daheim, das ist total einfach daheim

12:29.120 --> 12:33.120
Du nimmst einfach net boot, x, y, z

12:33.120 --> 12:38.120
Du nimmst, du nimmst den Container

12:38.120 --> 12:41.120
Und startest den und es war's

12:41.120 --> 12:46.120
Du kannst jetzt irgendeine x beliebigen Rechner booten oder VM booten

12:46.120 --> 12:49.120
Und du kannst installieren, was du willst und live CD booten, was du willst

12:49.120 --> 12:53.120
Das ist echt praktisch und im Prinzip kein Admin Aufwand wirklich

12:53.120 --> 12:55.120
Ja, ich bin wieder am Start, ich bin wieder am Start

12:55.120 --> 12:59.120
Ich musste Reifen wechseln gehen, ich muss Monka, Moment

12:59.120 --> 13:12.120
Monkastier muss ich machen

13:12.120 --> 13:17.120
Ja, kannst du, habe ich aber net gemacht, weil so ziemlich alles dabei ist, was ich brauche

13:17.120 --> 13:21.120
Was du machen kannst ist, du kannst in so einem Minimal Environment booten

13:21.120 --> 13:24.120
Und von dort an weiter booten, wenn du irgendwie ein ISO Link hast

13:24.120 --> 13:33.120
Ich finde es praktisch, zumal es kaum Aufwand ist

13:33.120 --> 13:37.120
Ich finde es enorm praktisch, dass ich auch alle möglichen Live CDs und so am Start habe

13:37.120 --> 13:39.120
Einfach eine VM starten und gut ist

13:39.120 --> 13:42.120
Ich finde es ganz praktisch

13:42.120 --> 13:44.120
Gut, ich meine so, sag mal so

13:44.120 --> 13:47.120
Home Assistant Installer oder so ist nicht dabei

13:47.120 --> 13:51.120
Also ein paar Sachen wären schon nice zum Testen, aber wie oft installierst du das

13:51.120 --> 13:54.120
Ah, das habe ich vermiert

13:54.120 --> 13:59.120
Test System und Live System und gut ist

13:59.120 --> 14:04.120
Was ein Lüfter verliert, Öl?

14:04.120 --> 14:20.120
Ich wusste gar nicht, dass die Öl verlieren können

14:20.120 --> 14:22.120
Na, mit Netboot geht das

14:22.120 --> 14:26.120
Netboot ist ja das coole dran, dass die, die haben quasi so ein mini PXE Environment

14:26.120 --> 14:29.120
Und wenn du da drüber startest, kannst du alles mögliche auswählen

14:29.120 --> 14:32.120
Unter anderem in, in, du kannst in irgendeinen Crub booten

14:32.120 --> 14:34.120
Und von dort irgendwie weitere ISOs booten übers Netzwerk

14:34.120 --> 14:37.120
Und so ganz grad abgedrehtes Zeug benutze ich im Prinzip eigentlich nie

14:37.120 --> 14:42.120
Aber ich weiß, dass es geht

14:42.120 --> 14:45.120
Hey Max, ich hätte Lust in Richtung DevOps zu gehen

14:45.120 --> 14:47.120
Hast du vielleicht Tipps, was ich alles drauf haben sollte?

14:47.120 --> 14:48.120
Ich mache aktuell Ausbildungen zu Physi

14:48.120 --> 14:51.120
In welchem Bereich machst du aktuell eine Ausbildung?

14:51.120 --> 14:53.120
Also sprich, was machst du denn so?

14:53.120 --> 14:57.120
Ja, wenn du jetzt beispielsweise den ganzen Tag Druckerpatronen taust

14:57.120 --> 15:01.120
Ist es schwierig, sich mit irgendwelchen Clouds zu beschäftigen?

15:01.120 --> 15:03.120
So in welchem Bereich bist du denn gerade?

15:03.120 --> 15:05.120
Mein Physi, ich würde mal ehrlich sagen

15:05.120 --> 15:08.120
Fachinformatiker, Systemintegration ist, ist, ist

15:08.120 --> 15:12.120
Ich weiß nicht, ob es einen Beruf gibt, der vielfältiger ist von dem, wo man am Endeffekt landen kann

15:12.120 --> 15:16.120
Und das, was man im Endeffekt machen könnte, ja

15:16.120 --> 15:20.120
Also, wie unterschiedlich das ist, je nachdem, wo man landet

15:20.120 --> 15:24.120
Skalierung in drei Monaten, huge subscription, massive big brain sub

15:31.120 --> 15:34.120
Ich meine, es gibt so ein paar Basics, Sachen, die sich immer lohnen zu lernen

15:34.120 --> 15:48.120
Das würde mich erstmal interessieren, was du so gerade machst

15:48.120 --> 16:08.120
Na ja, dann schieß mal los, dann sag ich dir auch was zu

16:08.120 --> 16:10.120
Wie viele PCs besitzt du?

16:10.120 --> 16:14.120
Du meinst welche, die ich aktiv benutze?

16:14.120 --> 16:18.120
Die ich theoretischen Einzelteilen hier noch habe

16:18.120 --> 16:20.120
Ich finde Finish nice

16:20.120 --> 16:27.120
Das ist halt was, wo du privat nicht wirklich Anwendungszweck für hast, für Terraform

16:27.120 --> 16:29.120
Ja, da ist er wieder, richtig

16:29.120 --> 16:41.120
Ja, ich musste, ich musste hier, ich musste folgendes machen

16:41.120 --> 16:48.120
Heute ist Tanzverbot, ich weiß

16:48.120 --> 16:53.120
Ich bin in einem Verlag tätig und mach da User Support

16:53.120 --> 16:55.120
MonkaS

16:55.120 --> 16:57.120
Okay, vielleicht gefällts dir, gefällts dir?

16:57.120 --> 16:58.120
Gefällt dir User Support?

16:58.120 --> 17:00.120
Nur so

17:00.120 --> 17:01.120
Jetzt Interesse halber

17:01.120 --> 17:04.120
Ich finde User Support ist der größte Scheiß überhaupt

17:04.120 --> 17:10.120
Das ist, ich glaube, das ist Mario Sunshine Musik

17:10.120 --> 17:13.120
Okay, ich mach da User Support aber auch Serververwaltung

17:13.120 --> 17:15.120
Leider kein Docker Kubernetes und auch Cloud

17:15.120 --> 17:18.120
Also, okay, also wenn du sagst, du hast beispielsweise auf der Arbeit

17:18.120 --> 17:20.120
Da bist gar nicht in dem Bereich

17:20.120 --> 17:25.120
Und du suchst auch was, wo du später vielleicht was von hast, wenn du den Arbeitgeber wechselst oder so

17:25.120 --> 17:30.120
Also, eine Sache, die prinzipiell immer gut ankommt, ist Automatisierung aller Art

17:30.120 --> 17:36.120
Sei es sowas wie Ansible oder Puppet

17:36.120 --> 17:38.120
Puppet ist ein bisschen oldschooligere Variante

17:38.120 --> 17:43.120
Server-Automatisierung oder generell, wie nennt sich das so cool heutzutage?

17:43.120 --> 17:45.120
Lifecycle-Management

17:45.120 --> 17:51.120
Ja, aber ich bleib mal bei System- oder Server-Automatisierung

17:51.120 --> 17:52.120
Das ist auf jeden Fall sinnvoll

17:52.120 --> 17:58.120
Das ist sowohl sinnvoll, wenn du Cloud-Geschichten machst als auch wenn man viel Lokal hat

17:58.120 --> 18:00.120
Wobei man ja auch mittlerweile nicht mal Lokal sagt

18:00.120 --> 18:04.120
Also Leute, die richtig coolen Cloud-Natives

18:04.120 --> 18:07.120
Die sagen nicht mehr Lokal, die sagen On-Premise

18:07.120 --> 18:13.120
Weil Cloud ist ja mittlerweile schon Standard bei denen im Kopf

18:13.120 --> 18:17.120
Und deswegen, alles was nicht Cloud ist, muss man explizit als On-Premise erzählen

18:17.120 --> 18:19.120
Und wer dann noch cooler ist

18:19.120 --> 18:25.120
Wer noch nen Tick cooler ist als die oberkrassen Cloud-Native Leute

18:25.120 --> 18:28.120
Die sagen nicht On-Premises oder On-Premise

18:28.120 --> 18:30.120
Die sagen On-Prem

18:30.120 --> 18:34.120
Weil On-Prem so klingt, als hat man das schon 30 Millionen mal gesagt

18:34.120 --> 18:39.120
Und indem man das abkürzt, ist man eigentlich noch ne Ecke cooler

18:42.120 --> 18:46.120
Lokal ist für mich Lokal bei einem am Standort

18:46.120 --> 18:48.120
Jetzt nicht bei sich auf dem Host oder sonst wo

18:48.120 --> 18:51.120
Lokal-Räumlich-Lokal

18:51.120 --> 18:53.120
Sagt man nicht mehr

18:53.120 --> 18:57.120
Früher hat man das umgeschrieben mit Lokal im eigenen Rechenzentrum

18:57.120 --> 18:59.120
Offline, wie auch immer

18:59.120 --> 19:05.120
Wenn du was Richtung Ansible Server Automatisierung kannst

19:05.120 --> 19:11.120
Dann ist das prinzipiell für alles nützlich

19:11.120 --> 19:13.120
Wie gesagt, Puppet gibt es auch

19:13.120 --> 19:15.120
Bei uns auf der Arbeit ist viel Puppet

19:15.120 --> 19:17.120
Aber ich persönlich finde Ansible viel schöner

19:19.120 --> 19:21.120
Also habe ich auch im Stream mal ein bisschen gelernt

19:21.120 --> 19:23.120
So, und die Sache ist die

19:23.120 --> 19:25.120
Da hast du überall was von

19:25.120 --> 19:31.120
Und das ist eindeutig ne Sache, was in Richtung

19:31.120 --> 19:33.120
So in diesen DevOps-Bereich fällt

19:33.120 --> 19:37.120
Das ist nicht mehr so die Hardcore-Hackerman

19:37.120 --> 19:40.120
Ich sitze vorm Terminal und tippe den ganzen nach kryptische Dinge ein

19:40.120 --> 19:43.120
Sondern du machst Sachen reproduzierbar, automatisierbar

19:43.120 --> 19:46.120
Das ist eindeutig was in diesen DevOps-Bereich reinfällt

19:46.120 --> 19:50.120
Dann solltest du dir Build-Tools angucken

19:50.120 --> 19:54.120
Wir machen mal so ne Textdatei

19:54.120 --> 19:58.120
Weil das wird öfters mal gefragt

20:02.120 --> 20:07.120
Also das erste was man sich angucken kann ist

20:07.120 --> 20:09.120
Automatisierung

20:09.120 --> 20:11.120
Zum Beispiel so was wie Ansible oder Puppet

20:11.120 --> 20:13.120
Oder Chef gibt es da noch

20:13.120 --> 20:15.120
Oder so was

20:15.120 --> 20:20.120
Naja, Terraform passt nicht so wirklich

20:20.120 --> 20:24.120
Terraform ist eher ein Infrastruktur-Provisioning-System

20:24.120 --> 20:26.120
So was in der Richtung

20:26.120 --> 20:28.120
Also das ist auf jeden Fall eine sinnvolle Geschichte

20:28.120 --> 20:30.120
Build-Tools ist das nächste

20:30.120 --> 20:32.120
Weil schon einmal was von Jenkins geschrieben hat

20:32.120 --> 20:35.120
Build-Tools ist das nächste, was man sich mal angucken sollte

20:35.120 --> 20:37.120
Wenn man sich für diesen Bereich interessiert

20:37.120 --> 20:41.120
Also Jenkins ist die Oldschool-Variante

20:41.120 --> 20:46.120
So was wie GitHub Actions ist zurzeit auch relativ angesagt

20:46.120 --> 20:48.120
Oder Azure

20:48.120 --> 20:50.120
Wobei das will ich nicht empfehlen

20:50.120 --> 20:52.120
Ich finde das suckt

20:52.120 --> 20:56.120
Diese Azure DevOps-Geschichte gefällt mir persönlich überhaupt nicht

20:56.120 --> 20:59.120
Ich finde GitHub Actions ist eine nice Geschichte

20:59.120 --> 21:03.120
Genau Circle, Drone hast du da noch

21:03.120 --> 21:06.120
Circle, sonst was

21:06.120 --> 21:08.120
Ich mag es nicht

21:08.120 --> 21:09.120
Ich weiß nicht

21:09.120 --> 21:11.120
Ich mag es nicht

21:11.120 --> 21:13.120
Man kann das verwenden, aber schön finde ich es nicht

21:13.120 --> 21:15.120
Genau

21:15.120 --> 21:18.120
Das nächste ist Versionsverwaltung

21:18.120 --> 21:21.120
Da gibt es eigentlich nur Shit zurzeit

21:21.120 --> 21:26.120
Also mehr gibt es da nicht

21:26.120 --> 21:31.120
Im Prinzip sollte man sich dann dazu noch angucken

21:31.120 --> 21:37.120
Man sollte klarkommen dann mit Frontends

21:37.120 --> 21:44.120
So was, GitHub, GitLab, Bitbucket

21:44.120 --> 21:48.120
Was man lokal verwendet

21:48.120 --> 21:50.120
So was in der Richtung sollte man sich angucken

21:50.120 --> 21:52.120
Nein, SVN schreibe ich da nicht mehr

21:52.120 --> 21:55.120
Nein, CVS

21:55.120 --> 21:57.120
Nein, CVS

21:57.120 --> 22:00.120
CVS

22:00.120 --> 22:02.120
CVS sind die Tabellen

22:02.120 --> 22:04.120
CVS

22:04.120 --> 22:06.120
Nein, hör mal plus auf

22:06.120 --> 22:09.120
Shit ist das einzige was man sich angucken muss

22:09.120 --> 22:13.120
Shit im Jahr 2021

22:13.120 --> 22:16.120
Rest kannst du vergessen

22:16.120 --> 22:19.120
Inklusive was man sich auch noch angucken

22:19.120 --> 22:24.120
Deployment und development workflows

22:24.120 --> 22:28.120
Also sowas wie Branches

22:28.120 --> 22:32.120
Feature requests

22:32.120 --> 22:36.120
Roadmap DevOps

22:36.120 --> 22:38.120
Echt, das ist eine leiste Map

22:38.120 --> 22:40.120
Da sage ich jetzt mal was zu

22:40.120 --> 22:43.120
Da reakte ich jetzt mal drauf

22:43.120 --> 22:46.120
Huge React Content

22:46.120 --> 22:48.120
Now we have YouTube Channel

22:48.120 --> 22:50.120
Excellent

22:50.120 --> 22:52.120
Roadmap

22:52.120 --> 22:54.120
Also was sagt denn die Roadmap?

22:54.120 --> 22:56.120
Zeigt mal her

22:56.120 --> 22:58.120
DevOps

22:58.120 --> 23:01.120
Feature requests hatte ich schon drin

23:01.120 --> 23:03.120
Okay, es kommt aufs gleiche raus

23:03.120 --> 23:04.120
Also was haben wir denn hier?

23:04.120 --> 23:05.120
Learn a programming language

23:05.120 --> 23:07.120
Das ist tatsächlich kein schlechter Ratschlag

23:07.120 --> 23:09.120
Wobei man ehrlich sagen muss

23:09.120 --> 23:13.120
Man kann, wenn man da richtig hardcore Hacker-Man-Admin ist

23:13.120 --> 23:15.120
Man kann durchaus was in diese Richtung machen

23:15.120 --> 23:18.120
Ohne jetzt der super gute Programmierer zu sein

23:18.120 --> 23:19.120
Aber mal ganz im Ernst

23:19.120 --> 23:22.120
Man kommt heutzutage eigentlich nicht mehr drum herum

23:22.120 --> 23:24.120
Es gibt ganz viele Admins, die da immer noch

23:24.120 --> 23:27.120
Vor allem so die richtigen oldschool Admins

23:27.120 --> 23:30.120
Die so mit Programmieren überhaupt nichts anfangen können

23:30.120 --> 23:34.120
Wo ein Bash-Script aus 10 Zeilen das höchste der Gefühle ist

23:34.120 --> 23:36.120
Ich habe euch auch die Story von der Arbeit erzählt

23:36.120 --> 23:39.120
Wo einer von mir

23:39.120 --> 23:40.120
Wo einer gesagt hat

23:40.120 --> 23:43.120
Ich weiß gar nicht wie detailliert ich euch das erzählt habe

23:43.120 --> 23:44.120
Wo einer gesagt hat

23:44.120 --> 23:48.120
Ich soll in einem Key-Value-Store so einen Jason

23:48.120 --> 23:49.120
Nein, kein Jason

23:49.120 --> 23:53.120
Ich soll einen Setting in so einem Key-Value-Store anpassen

23:53.120 --> 23:55.120
Habe ich euch das erzählt?

23:55.120 --> 23:56.120
Und wo der dann meinte

23:56.120 --> 23:58.120
Ich soll zwei Werte reinschreiben

23:58.120 --> 24:00.120
Also der hat einen Ticketpaus aufgemacht

24:00.120 --> 24:01.120
Und meinte

24:01.120 --> 24:03.120
Er braucht jetzt unter einem Key

24:03.120 --> 24:05.120
Braucht er zwei Werte

24:05.120 --> 24:06.120
Und da habe ich ihn gefragt

24:06.120 --> 24:07.120
Ja, okay

24:07.120 --> 24:08.120
Wie will er das haben?

24:08.120 --> 24:10.120
Wie will er das machen mit zwei Werten?

24:10.120 --> 24:12.120
Ich könnte ihm einen Jason-Array reinschreiben

24:12.120 --> 24:14.120
Ich mache ihm einen Jason-Array rein

24:14.120 --> 24:16.120
Und Wert 1, Wert 2

24:16.120 --> 24:17.120
Und dann meinte er

24:17.120 --> 24:18.120
Nein, das geht nicht

24:18.120 --> 24:20.120
Er möchte zwei Werte haben

24:20.120 --> 24:21.120
Aber das ist ein Key-Value-Store

24:21.120 --> 24:23.120
Das heißt nicht sonst Key-Value

24:23.120 --> 24:24.120
Das ist 1 zu 1

24:24.120 --> 24:25.120
Da gibt es keine zwei Werte

24:25.120 --> 24:27.120
Es gibt einfach nur einen Key und ein Value

24:27.120 --> 24:29.120
Und wenn er mehrere Sachen drinstehen haben will

24:29.120 --> 24:31.120
Dann braucht er irgendwas

24:31.120 --> 24:33.120
Was er, irgendeinen Text in er passt

24:33.120 --> 24:35.120
Und am Ende bekommt er zwei Values raus

24:35.120 --> 24:36.120
Es geht nicht anders

24:36.120 --> 24:37.120
Und er hat darauf bestanden

24:37.120 --> 24:38.120
Nein, nein, nein

24:38.120 --> 24:39.120
Ich möchte dieses Kommando ausführen

24:39.120 --> 24:41.120
Und ich will zwei Werte rausbekommen

24:45.120 --> 24:47.120
Ja, also du hast schon

24:47.120 --> 24:49.120
Da nicht so die Profis teilweise am Start

24:49.120 --> 24:51.120
Und das sind halt Leute

24:51.120 --> 24:53.120
Die angeblich Entwickler sind bei uns

24:53.120 --> 24:56.120
Und schon von Entwicklersachen keine Ahnung haben

24:56.120 --> 24:58.120
Also das ist ja eigentlich

24:58.120 --> 25:00.120
Der Ernstfall

25:00.120 --> 25:02.120
Also das sollte nicht so sein

25:02.120 --> 25:04.120
Zumindest man kann

25:04.120 --> 25:06.120
Sicherlich die ein oder anderen Sachen machen

25:08.120 --> 25:10.120
Aber

25:10.120 --> 25:12.120
Es lohnt sich auf jeden Fall

25:12.120 --> 25:14.120
Eine Programmiersprache zu lernen

25:16.120 --> 25:18.120
Es ist fast egal welche

25:18.120 --> 25:20.120
Es würde sich halt anbieten

25:20.120 --> 25:22.120
Irgendwas, was zur Zeit angesagt ist

25:22.120 --> 25:24.120
Also zum Beispiel

25:24.120 --> 25:26.120
Die Option hier

25:26.120 --> 25:28.120
Die Option hier

25:28.120 --> 25:30.120
Kann ich ja mal was zu sagen

25:30.120 --> 25:32.120
Ich persönlich bin der Meinung

25:32.120 --> 25:34.120
Das hat er hier übrigens gar nicht drinstehen

25:34.120 --> 25:36.120
Ich persönlich bin der Meinung

25:36.120 --> 25:38.120
Die beste Einstiegsprogrammiersprache

25:38.120 --> 25:40.120
Ist

25:40.120 --> 25:42.120
JavaScript

25:42.120 --> 25:44.120
Aber nicht mit Node.js

25:44.120 --> 25:46.120
Sondern mit ganz klassisch CSS, HTML

25:46.120 --> 25:48.120
Wenn man nicht genau weiß

25:48.120 --> 25:50.120
Was man machen möchte, wohlgemerkt

25:50.120 --> 25:52.120
Wenn man schon weiß, was man machen will

25:52.120 --> 25:54.120
So was wie Python raussuchen

25:54.120 --> 25:56.120
C++

26:08.120 --> 26:10.120
Also da bin ich nicht mit einverstanden

26:10.120 --> 26:12.120
Mit den Vorschlägen

26:12.120 --> 26:14.120
Von dieser Seite

26:14.120 --> 26:16.120
Da bin ich nicht zu

26:16.120 --> 26:18.120
Da bin ich nicht mit einverstanden

26:18.120 --> 26:20.120
Also ich würde sagen, wenn man keine Ahnung hat, was man machen will

26:20.120 --> 26:22.120
Dann

26:22.120 --> 26:24.120
Nimmt man sich

26:24.120 --> 26:26.120
JavaScript, nimmt man sich einen Browser

26:26.120 --> 26:28.120
JavaScript, CSS, HTML

26:28.120 --> 26:30.120
Denn am Frontend kommt man nicht vorbei

26:30.120 --> 26:32.120
So viel hat er hier schon mal gar nicht drinstehen

26:32.120 --> 26:34.120
Das heißt, ich muss meine

26:34.120 --> 26:36.120
Frontend

26:36.120 --> 26:38.120
Zeugs bisschen anschauen

26:38.120 --> 26:40.120
CSS, HTML, JS

26:40.120 --> 26:42.120
Ich gebe ihm recht

26:42.120 --> 26:44.120
Dass man Programmier

26:44.120 --> 26:46.120
Sprache lernen

26:46.120 --> 26:48.120
Da gebe ich ihm recht

26:48.120 --> 26:50.120
Aber wie gesagt, das würde ich nehmen

26:50.120 --> 26:52.120
Ich würde sagen

26:52.120 --> 26:54.120
CSS, HTML, JavaScript

26:54.120 --> 26:56.120
Wenn man keine Ahnung hat, was man genau machen will

26:56.120 --> 26:58.120
Einfach weil ich der Meinung bin

26:58.120 --> 27:00.120
Es ist am motivierendsten

27:00.120 --> 27:02.120
Man sieht

27:02.120 --> 27:04.120
Was passiert

27:04.120 --> 27:06.120
Und das sieht man mit JavaScript, CSS, HTML am besten

27:06.120 --> 27:08.120
Und

27:08.120 --> 27:10.120
Man bleibt dann dementsprechend auch dran

27:10.120 --> 27:12.120
Weil ich glaube, es kennt jeder

27:12.120 --> 27:14.120
Der angefangen hat eine Programmiersprache zu lernen

27:14.120 --> 27:16.120
Und

27:16.120 --> 27:18.120
Dann sich denkt

27:18.120 --> 27:20.120
Okay, was mache ich denn damit jetzt

27:20.120 --> 27:22.120
Und mit CSS, JavaScript, HTML

27:22.120 --> 27:24.120
Hast du erstmal relativ endlose Möglichkeiten

27:24.120 --> 27:26.120
Was zu machen, weil jeder denkt

27:26.120 --> 27:28.120
In Webseiten heutzutage

27:28.120 --> 27:30.120
Bei den anderen Sachen wird es dann

27:30.120 --> 27:32.120
Schwierig, wenn du keinen konkreten Anwendungsfall schon mal hast

27:32.120 --> 27:34.120
Und deswegen finde ich

27:34.120 --> 27:36.120
Das motiviert

27:36.120 --> 27:38.120
Einfach am meisten dran zu bleiben

27:38.120 --> 27:40.120
Und dazu kommt

27:40.120 --> 27:42.120
Man kommt an Frontend Sachen heutzutage nicht vorbei

27:42.120 --> 27:44.120
Man kleine Webinterfaces

27:44.120 --> 27:46.120
Bauen musst du heute wirklich an jede Ecke

27:46.120 --> 27:48.120
Und auch Frontend Sachen

27:48.120 --> 27:50.120
Verstehen musst du, da kommst du eigentlich nicht dran vorbei

27:50.120 --> 27:52.120
So, das nächste ist

27:52.120 --> 27:54.120
Was man auf jeden Fall wissen muss

27:54.120 --> 27:56.120
Das mache ich nochmal davor

27:58.120 --> 28:00.120
Linux lernen und

28:02.120 --> 28:04.120
Kommandozeile

28:04.120 --> 28:10.120
Das ist wichtig

28:14.120 --> 28:16.120
SSH

28:16.120 --> 28:18.120
Ja

28:18.120 --> 28:20.120
So zu Sachen

28:20.120 --> 28:22.120
DevOps

28:22.120 --> 28:24.120
Da könnte ich

28:24.120 --> 28:26.120
Ohne Scheiß, da könnte ich doch ein Video drüber machen

28:26.120 --> 28:28.120
Oder

28:28.120 --> 28:30.120
How to DevOps

28:30.120 --> 28:32.120
Ich weiß nicht, ob es jemand großartig interessiert

28:32.120 --> 28:34.120
Aber das ist eigentlich eine gute Idee

28:34.120 --> 28:36.120
Oder

28:36.120 --> 28:38.120
So

28:38.120 --> 28:40.120
Telnet

28:40.120 --> 28:42.120
Ja

28:42.120 --> 28:44.120
Wusstet ihr, dass Windows standardmäßig kein Telnet kann

28:46.120 --> 28:48.120
Achso, ja stimmt, ich hab's nachher erzählt

28:48.120 --> 28:50.120
Windows kann standardmäßig kein Telnet

28:50.120 --> 28:52.120
Man muss

28:52.120 --> 28:54.120
Man muss sagen

28:54.120 --> 28:56.120
Man muss sagen

28:56.120 --> 28:58.120
Turn Windows Features on und off

28:58.120 --> 29:02.120
Telnet klein, Häkchen und okay

29:08.120 --> 29:10.120
Ich hab keine Ahnung, ob nicht

29:10.120 --> 29:12.120
PowerShell was dabei hat

29:12.120 --> 29:14.120
Machen wir mal mit der Geschichte weiter

29:14.120 --> 29:16.120
Gibt's andere Roadmaps

29:16.120 --> 29:18.120
One and Backend DevOps

29:18.120 --> 29:20.120
Also

29:20.120 --> 29:22.120
Okay, ich muss noch was zum Thema

29:22.120 --> 29:24.120
Programmiersprachen sagen

29:24.120 --> 29:26.120
Ich bin kein

29:26.120 --> 29:28.120
Ich bin kein großartiger Frontend Pro

29:30.120 --> 29:32.120
Ich kann, ich muss halt sagen

29:34.120 --> 29:36.120
Ich kann alles halbwegs

29:36.120 --> 29:38.120
Also alles jetzt jetzt

29:38.120 --> 29:40.120
Übertrieben sein, ich kann relativ

29:40.120 --> 29:42.120
Breitflächig Dinge, ja

29:42.120 --> 29:44.120
Von Linux zu ein bisschen Low Level

29:44.120 --> 29:46.120
Programmieren, zu Frontend Sachen

29:46.120 --> 29:48.120
Alle möglichen, bisschen Elektronik

29:48.120 --> 29:50.120
Für alle möglichen Sachen

29:50.120 --> 29:52.120
Und was ich halt mache ist

29:52.120 --> 29:54.120
Warum ich mich mit manchen Themen auch relativ gut

29:54.120 --> 29:56.120
auskenne

29:56.120 --> 29:58.120
Ist, wenn ich ein Problem hab

29:58.120 --> 30:00.120
Was mich persönlich interessiert

30:00.120 --> 30:02.120
Dann mach ich da auch ein halbes Jahr dran rum

30:02.120 --> 30:04.120
Bis das Scheiß funktioniert und ich es kapiert hab

30:04.120 --> 30:06.120
Deswegen kenn ich mich mittlerweile auch ganz gut

30:06.120 --> 30:08.120
Mit WebRTC und sowas zum Beispiel aus

30:08.120 --> 30:10.120
Weil ich diese

30:10.120 --> 30:12.120
Weil ich Kamera Streaming Software programmieren wollte

30:16.120 --> 30:18.120
T-shaped DevOps, genau

30:18.120 --> 30:20.120
Aber ich muss jetzt noch was zum Thema

30:20.120 --> 30:22.120
Programmiersprachen sagen

30:22.120 --> 30:24.120
Am Einstieg, hab ich ja schon gesagt

30:24.120 --> 30:26.120
So, und von den Programmiersprachen

30:26.120 --> 30:28.120
Die hier sonst noch drinnen stehen muss ich sagen

30:28.120 --> 30:30.120
JavaScript, klar haben wir schon abgehackt, Node.js

30:30.120 --> 30:32.120
Ruby ist persönlich

30:32.120 --> 30:34.120
Neben C-Sharp meine

30:34.120 --> 30:36.120
Mit Abstand Lieblingsprogrammiersprache

30:36.120 --> 30:38.120
C-Sharp und Ruby, gefallen mir persönlich am besten

30:38.120 --> 30:40.120
Allerdings das Problem an Ruby ist

30:40.120 --> 30:42.120
Ich glaub Ruby benutzt

30:42.120 --> 30:44.120
Keiner mehr

30:44.120 --> 30:46.120
Ruby Projekte auf GitHub sind

30:46.120 --> 30:48.120
Zum größten Teil dead, Ausnahmen bestätigen

30:48.120 --> 30:50.120
Die Regel

30:50.120 --> 30:52.120
Ja

30:52.120 --> 30:54.120
Was die Natra zum Beispiel macht

30:54.120 --> 30:56.120
Letztes Commit

30:56.120 --> 30:58.120
Ok, vor 19 Tagen größere Projekte sind noch aktiv

30:58.120 --> 31:00.120
Aber, also viele Ruby Projekte

31:00.120 --> 31:02.120
Sind dead

31:02.120 --> 31:04.120
Siehst du auch an GitHub

31:04.120 --> 31:06.120
Und es gibt wenig neue Ruby Projekte

31:06.120 --> 31:08.120
Ruby ist eine super Sprache, es kam letztens auch erst Version 3

31:08.120 --> 31:10.120
Raus, Flixcoder, 5 Monate, Dankeschön für den Sub

31:10.120 --> 31:12.120
Hups, komplett falsche Emotes

31:12.120 --> 31:14.120
Lul

31:16.120 --> 31:18.120
Monka, Corona, Dankeschön für den Sub

31:18.120 --> 31:20.120
Aber Ruby ist ziemlich dead

31:20.120 --> 31:22.120
Es kam letztens Version 3 raus

31:22.120 --> 31:24.120
Die angeblich deutlich schneller ist

31:24.120 --> 31:26.120
Benchmarks bestätigen das

31:26.120 --> 31:28.120
Ruby 3 ist wohl auch eine ganze Ecke schneller

31:28.120 --> 31:30.120
Aber natürlich bei weitem hier nicht in diesen Region

31:30.120 --> 31:32.120
Und das Problem ist

31:32.120 --> 31:34.120
Was man mit Ruby hat

31:34.120 --> 31:36.120
So cool Ruby ist, außer dir

31:36.120 --> 31:38.120
Wenn du dann Ruby kannst, kann keiner Ruby

31:38.120 --> 31:40.120
Und macht keiner was in Ruby

31:40.120 --> 31:42.120
Was halt ziemlich sackt, früher war Ruby so eine

31:42.120 --> 31:44.120
So die richtig krasse

31:44.120 --> 31:46.120
Rockstar Developer Language

31:46.120 --> 31:48.120
Wo alle, die sich geil fanden, Ruby gebastelt haben

31:48.120 --> 31:50.120
Wir können uns Ruby 3 mal angucken

31:50.120 --> 31:52.120
Ja

31:52.120 --> 31:54.120
Ja Patrick, das kopiere ich mal

31:54.120 --> 31:56.120
Eins zu eins da so rein

31:56.120 --> 31:58.120
Ich würde

31:58.120 --> 32:00.120
Noch ein paar Sachen vielleicht

32:00.120 --> 32:02.120
Bisschen

32:02.120 --> 32:04.120
Bisschen seht, hast schon ein bisschen AWK

32:04.120 --> 32:06.120
Vielleicht noch

32:10.120 --> 32:12.120
Ja, Zeugs

32:12.120 --> 32:14.120
We get

32:14.120 --> 32:16.120
Die üblichen Sachen

32:16.120 --> 32:18.120
Die üblichen Sachen

32:18.120 --> 32:20.120
Und deswegen könnt ihr Ruby eigentlich

32:20.120 --> 32:22.120
Vergessen 2021

32:22.120 --> 32:24.120
To go komme ich gleich, Flixcoder

32:24.120 --> 32:26.120
Also deswegen

32:26.120 --> 32:28.120
Ruby ist eine coole Sprache

32:28.120 --> 32:30.120
Aber Ruby ist eigentlich dead und

32:30.120 --> 32:32.120
Ja

32:32.120 --> 32:34.120
Tot, irgendwie heutzutage

32:34.120 --> 32:36.120
Die nächste beste Option ist Pyzen

32:36.120 --> 32:38.120
Ganz ohne Scheiß

32:38.120 --> 32:40.120
Wenn ihr

32:40.120 --> 32:42.120
Wenn

32:42.120 --> 32:44.120
Wenn euch das nicht so liegt

32:44.120 --> 32:46.120
Mit JavaScript, HTML, CSS, Frontend

32:46.120 --> 32:48.120
Mäßig, dann fangt mit Pyzen an

32:48.120 --> 32:50.120
Das ist

32:50.120 --> 32:52.120
Würde ich mal sagen, vom Hype her

32:52.120 --> 32:54.120
Und von den

32:54.120 --> 32:56.120
Zukunftsträchtigen Technologien und sowas

32:56.120 --> 32:58.120
Ist das die Sprache Nummer eins zur Zeit

32:58.120 --> 33:00.120
Guckt euch, guckt euch auf GitHub um

33:00.120 --> 33:02.120
Die ganzen

33:02.120 --> 33:04.120
90% der ganzen Machine Learning

33:04.120 --> 33:06.120
Sachen, doch ich war oft

33:06.120 --> 33:08.120
Ich musste Reifen wechseln

33:08.120 --> 33:10.120
Wieder da, das hat auch nicht so ewig gedauert

33:12.120 --> 33:14.120
Genau, Twitter

33:14.120 --> 33:16.120
Twitter war Ruby on Rails, Twitch weiß ich nicht

33:16.120 --> 33:18.120
Twitter war Ruby on Rails, aber Twitter

33:18.120 --> 33:20.120
Ist schon ganz lange auf Java

33:20.120 --> 33:22.120
Ich weiß nicht, was die geritten hat

33:22.120 --> 33:24.120
Ich glaube, ist das nicht sogar Clojure

33:24.120 --> 33:26.120
Oder so mittlerweile?

33:26.120 --> 33:28.120
Ne nicht Clojure, wie heißt das andere?

33:28.120 --> 33:30.120
Scala? Ach was weiß ich

33:30.120 --> 33:32.120
Vielleicht haben sie auch schon wieder alles geändert

33:34.120 --> 33:36.120
Genau und

33:36.120 --> 33:38.120
ShitHub

33:38.120 --> 33:40.120
War auch mal Ruby, glaube ich

33:40.120 --> 33:42.120
Immer noch, ja?

33:42.120 --> 33:44.120
Ich glaube, GitHub ist immer noch Ruby

33:46.120 --> 33:48.120
Der Grund, warum man in Unis Java lernen

33:48.120 --> 33:50.120
Ist, weil es so viele Leute gibt, die Java können

33:56.120 --> 33:58.120
Ja, also ich würde sagen

33:58.120 --> 34:00.120
Das können wir uns auch gleich angucken

34:00.120 --> 34:02.120
Also ich würde sagen, dass Pyzen aktuell

34:02.120 --> 34:04.120
Die angesagteste Programmiersprache ist

34:04.120 --> 34:06.120
Neben JavaScript

34:06.120 --> 34:08.120
So die richtig prestigeträchtigen

34:08.120 --> 34:10.120
Zukunftsrechtlichen Sachen sind teilweise

34:10.120 --> 34:12.120
Oftmals in Pyzen, also das ist auf jeden Fall

34:12.120 --> 34:14.120
Nicht verkehrt

34:14.120 --> 34:16.120
Das zu lernen, das ist eine super erste Programmiersprache

34:16.120 --> 34:18.120
Ich persönlich mag ein bisschen mehr

34:18.120 --> 34:20.120
Die ganze JavaScript, CSS Geschichte

34:20.120 --> 34:22.120
Weil ich es motivierender finde zum Anstiegen

34:22.120 --> 34:24.120
Beides kann man nicht verkehrt machen

34:24.120 --> 34:26.120
Und ganz ehrlich, man sollte

34:26.120 --> 34:28.120
Wenn man das eine Weile macht

34:28.120 --> 34:30.120
Man sollte beides schon mal benutzt haben

34:30.120 --> 34:32.120
Ich muss sagen

34:32.120 --> 34:34.120
Ich mache nicht oft was in Pyzen, aber jedes Mal

34:34.120 --> 34:36.120
Wenn ich es mache, muss ich sagen, finde ich das unglaublich angenehm

34:36.120 --> 34:38.120
Ich habe zum Beispiel einen

34:38.120 --> 34:40.120
Converter programmiert auf der Arbeit von

34:40.120 --> 34:42.120
Moment, jetzt haltet euch

34:42.120 --> 34:44.120
Jetzt haltet euch fest

34:44.120 --> 34:46.120
Von Windows DHCP Settings

34:46.120 --> 34:48.120
Zu Linux DHCP Settings

34:52.120 --> 34:54.120
Das war ein bisschen eklig, aber

34:54.120 --> 34:56.120
Ja, Mock als Tier, genau

34:56.120 --> 34:58.120
Aber es hat gut funktioniert

34:58.120 --> 35:00.120
Und ich muss sagen, ich war echt begeistert davon

35:00.120 --> 35:02.120
Weil wieder

35:02.120 --> 35:04.120
Wie viel super Sachen eingebaut sind

35:04.120 --> 35:06.120
Du hast in Pyzen standardmäßig

35:06.120 --> 35:08.120
Einen Standardlib eingebaut

35:08.120 --> 35:10.120
Einen CSV-Parser

35:10.120 --> 35:12.120
Für Tabellen

35:12.120 --> 35:14.120
Du hast standardmäßig einen IP-Calculator

35:14.120 --> 35:16.120
Weil der Windows

35:16.120 --> 35:18.120
Wusstet ihr, dass der Windows DHCP Server

35:18.120 --> 35:20.120
Verbackt ist

35:20.120 --> 35:22.120
Der Windows DHCP Server erlaubt es

35:22.120 --> 35:24.120
Dass du als Start-IP

35:24.120 --> 35:26.120
Das Netz nimmst, anstatt

35:26.120 --> 35:28.120
Die erste IP im Netz

35:28.120 --> 35:30.120
Also der ICS zumindest erlaubt das nicht

35:30.120 --> 35:32.120
Das heißt, ich musste

35:32.120 --> 35:34.120
Jedes Mal

35:34.120 --> 35:36.120
Wenn ich diese Config gepasst habe

35:36.120 --> 35:38.120
Musste ich jedes Mal zu dem Netz

35:38.120 --> 35:40.120
Eins dazurechnen, weil die halt

35:40.120 --> 35:42.120
Ein Windows Feature

35:42.120 --> 35:44.120
Nennen wir es mal

35:44.120 --> 35:46.120
Ausgenutzt haben, die Typen, die den

35:46.120 --> 35:48.120
Windows DHCP betreuen bei uns

35:48.120 --> 35:50.120
Und da war ich echt froh, dass es einen IP-Calculator

35:50.120 --> 35:52.120
Gibt in Pyzen, in der Standardlib

35:52.120 --> 35:54.120
Dem habe ich das Subnetz gegeben

35:54.120 --> 35:56.120
Das Netz, abgesagt IP plus eins

35:56.120 --> 35:58.120
Und hat das ausgerechnet, also war echt eine super

35:58.120 --> 36:00.120
Geschichte. Jedes Mal, wenn ich damit was mache

36:00.120 --> 36:02.120
Finde ich es eigentlich gut

36:02.120 --> 36:04.120
So, auch eine super Sprache

36:04.120 --> 36:06.120
Zum Einstieg. Früher habe ich gesagt, Ruby

36:06.120 --> 36:08.120
Ich habe sogar mal ein Video gemacht zu Ruby

36:08.120 --> 36:10.120
Mit, warum das eine gute Programmiersprache ist

36:10.120 --> 36:12.120
Ich finde es mittlerweile, es ist eine geile

36:12.120 --> 36:14.120
Programmiersprache, aber es ist einfach dead

36:16.120 --> 36:18.120
Also, sehr gut zum Einstieg, auch gut zum

36:18.120 --> 36:20.120
Einstieg, aber im Browser nicht unbedingt als NodeShare

36:20.120 --> 36:22.120
Man soll es sich aber mit Node auf jeden Fall mal auseinandersetzen

36:22.120 --> 36:24.120
Kommen wir mal zu der Seite

36:24.120 --> 36:26.120
Damit bin ich nicht wirklich einverstanden

36:26.120 --> 36:28.120
Muss ich sagen

36:28.120 --> 36:30.120
Damit bin ich nicht wirklich einverstanden

36:30.120 --> 36:32.120
Ähm, also

36:32.120 --> 36:34.120
Mit C++ fangen wir mal

36:34.120 --> 36:36.120
Gar nicht an

36:36.120 --> 36:38.120
C++ ist einfach Schrott

36:38.120 --> 36:40.120
Und definitiv nicht das, was sich

36:40.120 --> 36:42.120
Jemand zum Einstieg geben sollte, es sei denn

36:42.120 --> 36:44.120
Du möchtest ihn abschrecken vor

36:44.120 --> 36:46.120
Live, dass er nie wieder was mit zu tun haben will

36:46.120 --> 36:48.120
Man könnte fast denken, Stadia ist in

36:48.120 --> 36:50.120
C++ programmiert oder so

36:50.120 --> 36:52.120
Also, C++ auf gar keinen Fall

36:52.120 --> 36:54.120
Zum Einstieg, gerade auch nicht für die

36:54.120 --> 36:56.120
DevOps-Geschichte, da ist es da

36:56.120 --> 36:58.120
Wenig interessant die Sprache

36:58.120 --> 37:00.120
Eigentlich für

37:00.120 --> 37:02.120
C genauso wesig, wobei

37:02.120 --> 37:04.120
C eine schöne Sprache ist, C++ nicht

37:04.120 --> 37:06.120
Aber gerade im DevOps-Programm

37:06.120 --> 37:08.120
Ist C jetzt auch nicht so das

37:08.120 --> 37:10.120
So das Ding, was du oft siehst

37:10.120 --> 37:12.120
Da ist Python auf jeden Fall

37:12.120 --> 37:14.120
Die bessere Variante

37:14.120 --> 37:16.120
Rust ist auch eine coole Sprache

37:16.120 --> 37:18.120
Aber Rust ist

37:18.120 --> 37:20.120
In diesem Bereich jetzt auch nicht so wahnsinnig

37:20.120 --> 37:22.120
relevant

37:22.120 --> 37:24.120
Was ich machen würde, ist auf jeden Fall

37:24.120 --> 37:26.120
Go

37:26.120 --> 37:28.120
Ja, Rust

37:28.120 --> 37:30.120
Ist only, only, only for

37:30.120 --> 37:32.120
Elevenhead, Leute

37:32.120 --> 37:34.120
Ja, das stimmt, also

37:34.120 --> 37:36.120
Rust ist wirklich

37:36.120 --> 37:38.120
Die Syntax ist

37:38.120 --> 37:40.120
Zweckt mir, ich finde die Syntax jetzt auch nicht so

37:40.120 --> 37:42.120
Wahnsinnig klar

37:42.120 --> 37:44.120
Vor allem, wenn du dann irgendwie

37:44.120 --> 37:46.120
Lifetime spezifizieren musst, von wie was

37:46.120 --> 37:48.120
Voneinander abhängt, also dass es, also

37:48.120 --> 37:50.120
Es ist wirklich expanding

37:50.120 --> 37:52.120
Gehirn, dass du das kannst

37:52.120 --> 37:54.120
Und in diesem Bereich jetzt auch gar nicht

37:54.120 --> 37:56.120
So wahnsinnig relevant

37:56.120 --> 37:58.120
Eigentlich

37:58.120 --> 38:00.120
Moment, wir unterbrechen mal kurz das

38:00.120 --> 38:02.120
Aktuelle Programm, um diese Frage hier zu beantworten

38:02.120 --> 38:04.120
Moin, hab hier noch zwei

38:04.120 --> 38:06.120
ESP

38:06.120 --> 38:08.120
32 rumliegen, mit einem will ich

38:08.120 --> 38:10.120
LED-Leist per WLAN ansteuern, dir mal

38:10.120 --> 38:12.120
Eine Idee, was man mit dem zweiten am Sinn voll zu anstellen kann

38:12.120 --> 38:14.120
Ja, noch mehr LEDs

38:14.120 --> 38:18.120
Also, komm, RGB kann man nicht genug haben

38:20.120 --> 38:22.120
LEDs, einfach noch mehr LEDs

38:22.120 --> 38:24.120
Wenn dir das erste

38:24.120 --> 38:26.120
Gefällt, dann mach einfach noch einen zweiten

38:26.120 --> 38:28.120
LED-Strip, easy

38:28.120 --> 38:30.120
Okay

38:30.120 --> 38:32.120
Also, die unteren Dinger bin ich kein Fan

38:32.120 --> 38:34.120
Gerade weil es um diese DevOps-Geschichten geht

38:34.120 --> 38:36.120
Die zwei coole Sprachen, C++

38:36.120 --> 38:38.120
Schrott, aber die zwei coole

38:38.120 --> 38:40.120
Sprachen, wir müssen übrigens gleich

38:40.120 --> 38:44.120
C++ machen, wo wir gerade dabei sind

38:44.120 --> 38:46.120
Paints-Champ

38:46.120 --> 38:48.120
So, Go

38:48.120 --> 38:50.120
Auf jeden Fall, Go ist eines der

38:50.120 --> 38:52.120
Wichtigsten Sprachen überhaupt im DevOps

38:52.120 --> 38:54.120
Und vor allem im Cloud-Unfeld

38:54.120 --> 38:56.120
90%

38:56.120 --> 38:58.120
70% der Tools

38:58.120 --> 39:00.120
Sei es das Kubernetes-Grammstab Terraform

39:00.120 --> 39:02.120
Auch und überall, wo du hinguckst und wo du

39:02.120 --> 39:04.120
Hinspuckst, triffst du auf Go

39:04.120 --> 39:06.120
Programme und Libraries

39:06.120 --> 39:08.120
Wenn es nicht in Go ist, dann ist es

39:08.120 --> 39:10.120
In Python oder in Node

39:10.120 --> 39:12.120
Im Prinzip gibt es diese drei Programmiersprachen dort

39:12.120 --> 39:14.120
Es ist entweder in Go

39:14.120 --> 39:16.120
Zum größten Teil ist es in Python

39:16.120 --> 39:18.120
Oder es ist vielleicht in Node

39:18.120 --> 39:20.120
So, damit habt ihr 99% der Sachen

39:20.120 --> 39:22.120
Die man in diesem Bereich so benutzt abgedeckt

39:22.120 --> 39:24.120
Node, Python, Go, vor allem Go

39:24.120 --> 39:26.120
Dazu muss ich sagen

39:26.120 --> 39:28.120
Go ist an sich

39:28.120 --> 39:30.120
Keine Sprache

39:30.120 --> 39:32.120
Die ich jetzt zu sehr flamen kann

39:32.120 --> 39:34.120
Go ist schon in Ordnung

39:34.120 --> 39:36.120
Ich habe die Kamera-Geschichte

39:36.120 --> 39:38.120
Ich habe diesen

39:38.120 --> 39:40.120
Kamera-Web-ATC-Streaming-Sache in Go gemacht

39:40.120 --> 39:42.120
Ich muss sagen

39:42.120 --> 39:44.120
Vielleicht liegt es daran, dass ich nicht so die wahnsinnige

39:44.120 --> 39:46.120
So die wirklich

39:46.120 --> 39:48.120
Jahrzehnte Erfahrung

39:48.120 --> 39:50.120
In Go jetzt habe, aber

39:50.120 --> 39:52.120
Es gibt ein paar Sachen

39:52.120 --> 39:54.120
Die mich an Go stören

39:54.120 --> 39:56.120
Das ist zum Beispiel

39:56.120 --> 39:58.120
Dass die Standard-Library irgendwie

39:58.120 --> 40:00.120
Bisschen wenig

40:00.120 --> 40:08.120
Drinnen hat

40:08.120 --> 40:10.120
Also

40:10.120 --> 40:12.120
Zum Beispiel

40:12.120 --> 40:14.120
Zum Beispiel

40:14.120 --> 40:16.120
Du hast

40:16.120 --> 40:18.120
Du hast in Go

40:18.120 --> 40:20.120
Hast du keine Möglichkeit

40:20.120 --> 40:22.120
Ja, Channels und das ganze Zeug

40:22.120 --> 40:24.120
Was Go so

40:24.120 --> 40:26.120
Eingeführt ist schon eine coole Sache

40:26.120 --> 40:28.120
Aber die Standard-Library ist ein bisschen

40:28.120 --> 40:30.120
Cluster heißt das glaube ich

40:30.120 --> 40:32.120
Also da fehlt ein bisschen was

40:32.120 --> 40:34.120
Termin noch geschafft, ja wir haben Reifen gewechselt

40:34.120 --> 40:36.120
Also zum Beispiel in der Standard-Library

40:36.120 --> 40:38.120
Du hast in Go

40:38.120 --> 40:40.120
3 Varianten

40:40.120 --> 40:42.120
Wie du Variablen zuweisen kannst

40:42.120 --> 40:44.120
Manchmal ist nicht so ganz klar

40:44.120 --> 40:46.120
Was Reference, was nicht

40:46.120 --> 40:48.120
Wo automatisch referenziert wird

40:48.120 --> 40:50.120
Wo du explizit sagen musst Reference

40:50.120 --> 40:52.120
Dann ist das

40:52.120 --> 40:54.120
Konzept mit Maps und

40:54.120 --> 40:56.120
Listen

40:56.120 --> 40:58.120
Ja

40:58.120 --> 41:00.120
Dass du

41:00.120 --> 41:02.120
Dass du beispielsweise

41:02.120 --> 41:04.120
Nicht filtern kannst

41:04.120 --> 41:06.120
Auf Listen und sowas

41:06.120 --> 41:08.120
Das ist ein bisschen roh

41:08.120 --> 41:10.120
Ja in Go

41:10.120 --> 41:12.120
Die Sprache an sich ist cool muss ich sagen

41:12.120 --> 41:14.120
Die ist auch relativ easy zu lesen

41:14.120 --> 41:16.120
Sieht erstmal ein bisschen gewöhnungsbedürftig aus

41:16.120 --> 41:18.120
Weil das ziemlich viele Sonderzeichen, komische Konstrukte hat

41:18.120 --> 41:20.120
Aber weiterhin nicht so schlimm wie C++

41:20.120 --> 41:22.120
Aber wenn man sich mal dran gewöhnt hat geht das eigentlich

41:22.120 --> 41:24.120
Wobei halt

41:24.120 --> 41:26.120
Go hat wie gesagt

41:26.120 --> 41:28.120
Also das größte was mich an Go

41:28.120 --> 41:30.120
Das die Standard-Library so wenig Sachen

41:30.120 --> 41:32.120
Dabei hat

41:32.120 --> 41:34.120
Dass die Go

41:34.120 --> 41:36.120
Maintainer der Meinung sind

41:36.120 --> 41:38.120
Manche Sachen

41:38.120 --> 41:40.120
Die einfach nur praktisch sind

41:40.120 --> 41:42.120
Wären nicht sinnvoll zum Beispiel du kannst

41:42.120 --> 41:44.120
In Go kannst du nicht sagen

41:44.120 --> 41:48.120
So was hier zum Beispiel

41:48.120 --> 41:50.120
Filter

41:50.120 --> 41:52.120
X keine Ahnung

41:52.120 --> 41:54.120
Wenn X größer 2 sowas

41:54.120 --> 41:56.120
Sowas kannst du in Go nicht sagen

41:56.120 --> 41:58.120
In Go musst du eine Schleife machen

41:58.120 --> 42:00.120
Die Go Leute sagen halt

42:00.120 --> 42:02.120
Ja weil Schleife viel einfacher zu lesen ist

42:04.120 --> 42:06.120
Ja wenn du nur C machst

42:06.120 --> 42:08.120
Dann ist ja kein Ding ist ja klar

42:08.120 --> 42:10.120
In C musst du erst halb GitHub installieren

42:10.120 --> 42:12.120
Oder alles selbst basteln

42:12.120 --> 42:14.120
Ne also

42:14.120 --> 42:16.120
Es fehlt mir ein bisschen was

42:16.120 --> 42:18.120
Dann ist manche Sachen

42:18.120 --> 42:20.120
Find ich in Go auch nicht so richtig gut durchdacht

42:20.120 --> 42:22.120
Wie gesagt

42:22.120 --> 42:24.120
Es gibt drei verschiedene Varianten

42:24.120 --> 42:26.120
Variablen zuzuweisen

42:26.120 --> 42:28.120
Die haben dieses Konzept mit Error Codes

42:28.120 --> 42:30.120
Die ich an sich eigentlich ganz gut finde

42:30.120 --> 42:32.120
Also Go hat ja keine Exeptions

42:32.120 --> 42:34.120
Aber Go hat Panic

42:34.120 --> 42:36.120
Was ja im Endeffekt doch

42:36.120 --> 42:38.120
Exeptions sind

42:38.120 --> 42:40.120
Also die machen eigentlich

42:40.120 --> 42:42.120
Alles zum größten Teil

42:42.120 --> 42:44.120
In Go über Error Codes

42:44.120 --> 42:46.120
Aber manchmal hast du dann doch

42:46.120 --> 42:50.120
Panic und Recover und solche Sachen

42:50.120 --> 42:52.120
Es ist ein bisschen undurchdacht

42:52.120 --> 42:54.120
Und was mir halt echt fehlt

42:54.120 --> 42:56.120
Ist Generics

42:56.120 --> 42:58.120
Generics ist eines der geilsten Dinger überhaupt

42:58.120 --> 43:00.120
Und das gibt es halt in Go nicht

43:00.120 --> 43:02.120
Der Cobalt Jebait Train

43:02.120 --> 43:04.120
Ist schon wieder am Start im Chat

43:08.120 --> 43:10.120
Ja Generics kommen angeblich schon

43:10.120 --> 43:12.120
Seit zwei Jahren bald glaube

43:12.120 --> 43:14.120
Aber ich hoffe die kriegen es bald hin

43:14.120 --> 43:16.120
Die Generics kommen immer bald in Go

43:16.120 --> 43:18.120
Aber ich hoffe sie kriegen es hin

43:18.120 --> 43:20.120
Das gibt Go auf jeden Fall einen richtig großen Boost

43:20.120 --> 43:22.120
Weil

43:22.120 --> 43:24.120
Sobald die Generics haben

43:24.120 --> 43:26.120
Kann man auch

43:26.120 --> 43:28.120
Ich will nicht sagen sowas wie Link bauen

43:28.120 --> 43:30.120
Aber sowas ähnliches

43:30.120 --> 43:32.120
Also sprich man kann Listen bauen

43:32.120 --> 43:34.120
Die für alle Datentypen gehen

43:34.120 --> 43:36.120
Mit Filter und Any

43:36.120 --> 43:38.120
Und All und Loops

43:38.120 --> 43:40.120
Und Wear und sonst was

43:40.120 --> 43:42.120
Alles was die Sache ein bisschen einfacher macht

43:42.120 --> 43:44.120
Also dann ist Go gut

43:44.120 --> 43:46.120
Vom Konzept her mag ich das

43:46.120 --> 43:48.120
So was ich jetzt hier auf jeden Fall noch rein nehmen würde

43:48.120 --> 43:50.120
Auch wenn ich kein Fan davon bin

43:50.120 --> 43:52.120
Was auf jeden Fall aber im Business Umfeld

43:52.120 --> 43:54.120
Nicht nur eine Option ist

43:54.120 --> 43:56.120
Sondern in vielen Umfeld fast schon muss

43:56.120 --> 43:58.120
Ist Java

43:58.120 --> 44:00.120
Also ich würde hier eindeutig Rust durch Java ersetzen

44:00.120 --> 44:02.120
Ihr wisst dass ich

44:02.120 --> 44:04.120
Kein Fan bin

44:04.120 --> 44:06.120
Was Java angeht

44:06.120 --> 44:08.120
Aber gerade im Business Umfeld

44:08.120 --> 44:10.120
Ist Java eines der Dinger schlechthin

44:10.120 --> 44:12.120
Und

44:12.120 --> 44:14.120
Mein persönlicher Fall ist ich würde

44:14.120 --> 44:16.120
Anstatt C++ ich würde C Sharp rein nehmen

44:16.120 --> 44:18.120
Das hat ja mit C++ gar nichts zu tun

44:18.120 --> 44:20.120
Die haben sich einfach nur am Namen orientiert

44:20.120 --> 44:22.120
Weil sie gedacht haben

44:22.120 --> 44:24.120
Das kommt den Leuten bekannter vor

44:24.120 --> 44:26.120
Aber C Sharp ist neben Ruby meine absolute Lieblingsprogrammiersprache

44:26.120 --> 44:28.120
Ruby leider

44:28.120 --> 44:30.120
Dead, aber seit Microsoft

44:30.120 --> 44:32.120
.NET open sourced hat

44:32.120 --> 44:34.120
Hat das Ding Fahrt aufgenommen

44:34.120 --> 44:36.120
Und geht ab wie sonst was

44:36.120 --> 44:38.120
Also C Sharp zu lernen

44:38.120 --> 44:40.120
Ist auf jeden Fall nicht verkehrt

44:40.120 --> 44:42.120
Und C Sharp ist finde ich

44:42.120 --> 44:44.120
Von allen Programmiersprachen

44:44.120 --> 44:46.120
Die hier stehen und die es so gibt

44:46.120 --> 44:48.120
Die universellste Programmiersprache die es gibt

44:48.120 --> 44:50.120
Du kannst in C Sharp

44:50.120 --> 44:52.120
Desktop Programme machen

44:52.120 --> 44:54.120
Server Programme

44:54.120 --> 44:56.120
Web

44:56.120 --> 44:58.120
Geschichten

44:58.120 --> 45:00.120
Mittlerweile läuft es sogar über WebAssembly im Browser

45:00.120 --> 45:02.120
Du kannst zum größten Teil

45:02.120 --> 45:04.120
Lowlevel Sachen machen

45:04.120 --> 45:06.120
Wenn auch nicht komplett

45:06.120 --> 45:08.120
Bootloader in C Sharp programmieren

45:08.120 --> 45:10.120
Aber das ist dann fast eigentlich das einzige

45:10.120 --> 45:12.120
Du kannst mit Unity Spieleentwicklung machen

45:12.120 --> 45:14.120
Du kannst im Prinzip

45:14.120 --> 45:16.120
Du kannst mittlerweile sogar relativ gut

45:16.120 --> 45:18.120
Selfcontent Programme machen

45:18.120 --> 45:20.120
Die sind zwar ein bisschen größer als hier so

45:20.120 --> 45:22.120
So ein Go, Rust oder C Programm

45:22.120 --> 45:24.120
Aber letztendlich ist es

45:24.120 --> 45:26.120
Wurscht wenn man nicht gerade von Microcontrollern

45:26.120 --> 45:28.120
Redet im Prinzip ist es wurscht

45:28.120 --> 45:30.120
Ob dein Programm 10 MB

45:30.120 --> 45:32.120
3 MB

45:32.120 --> 45:34.120
Oder 60 MB ist

45:34.120 --> 45:36.120
Das juckt nicht

45:36.120 --> 45:38.120
So also C Sharp ist auf jeden Fall

45:38.120 --> 45:40.120
Super Geschichte und du kannst wenn du C Sharp gut kannst

45:40.120 --> 45:42.120
Du kannst alles machen

45:42.120 --> 45:44.120
Es gibt eigentlich kein wirkliches

45:44.120 --> 45:46.120
Gebiet wo C Sharp

45:46.120 --> 45:48.120
Komplett versagt

45:48.120 --> 45:50.120
Man muss sagen es gibt einen Bereich

45:50.120 --> 45:52.120
Da ist es vielleicht nicht so

45:52.120 --> 45:54.120
Der absolute Wahnsinn

45:54.120 --> 45:56.120
Oder zwei Bereiche

45:56.120 --> 45:58.120
Das ist Cross-Plattform

45:58.120 --> 46:00.120
GUI Entwicklung Desktop

46:00.120 --> 46:02.120
Fokussiert GUI Entwicklung und

46:02.120 --> 46:04.120
Form-Mobile-Entwicklung

46:04.120 --> 46:06.120
Wobei man sagen muss das geht alles

46:06.120 --> 46:08.120
Ich weiß das es dazu auch Lösungen gibt

46:08.120 --> 46:10.120
Aber

46:10.120 --> 46:12.120
Da würde ich jetzt vielleicht

46:12.120 --> 46:14.120
Nicht unbedingt

46:14.120 --> 46:16.120
Bevorzugen also wenn ich jetzt

46:16.120 --> 46:18.120
Wenn einer zu mir kommt und sagt Max ich brauche eine

46:18.120 --> 46:20.120
Mobile App die überall

46:20.120 --> 46:22.120
Darauf läuft also Android und IOS

46:22.120 --> 46:24.120
Ist ja im Prinzip

46:24.120 --> 46:26.120
Es geht doch ich weiß Tomy

46:26.120 --> 46:28.120
Es ist nicht so mein Fall

46:28.120 --> 46:30.120
Ich muss auch sagen ich habe noch nicht viel mit gemacht

46:30.120 --> 46:34.280
zu mir kommt und sagt ich brauche eine mobile app für ios und android dann würde ich entweder

46:34.840 --> 46:41.120
ja na moment, warte mal, dann kommen wir zu flatter kommen wir gleich dann das erste was ich machen würde ist ich würde ohne scheiß ich

46:41.120 --> 46:43.120
würde eine javascript anwendung machen

46:44.520 --> 46:50.680
Typescript lernen ist auch sinnvoll danach ich würde eine javascript anwendung ich würde eine ionic anwendung machen wahrscheinlich

46:52.840 --> 47:00.000
Weil das hat den vorteil du kannst eine webseite machen du kannst eine pwa machen und du kannst eine mobile app machen alles mehr

47:00.000 --> 47:03.040
Oder weniger in einem schritt das ist einfach unschlagbar

47:04.680 --> 47:07.400
Das nächste mal das nächste was ich machen würde ist

47:08.640 --> 47:10.320
flatter

47:10.320 --> 47:11.920
pwa

47:11.920 --> 47:13.760
progressive web app

47:13.760 --> 47:15.760
also quasi

47:15.880 --> 47:17.880
das hier

47:22.480 --> 47:26.600
Dass man apps quasi dass man webseiten als eigene app installieren kann

47:26.600 --> 47:31.080
Geht mittlerweile auf dem desktop auch, aber mobile ist das eher so eine sache

47:31.880 --> 47:34.360
Wird auch immer besser das support mobile dafür

47:36.200 --> 47:43.800
Also ich ich würde auch nicht direkt direkt ionic nehmen ich habe nur gesagt ionic weil die haben ein unterprojekt von ionic wo du super

47:44.200 --> 47:50.920
Beispielsweise in der vue js app wo du die super verpacken kannst in der native app ohne dass du was ändern musst großartig plus du hast die

47:50.920 --> 47:54.680
Möglichkeit zusätzlich noch ein paar native sachen einzubinden wie gps und sowas

47:54.680 --> 47:58.200
dass ich weiß dass das zu ionic gehört mit ionic selbst habe ich auch nichts gemacht

47:59.000 --> 48:04.360
und das nächste ist wenn einer zu mir sagt max ich brauche eine app die

48:05.160 --> 48:07.160
mobile und desktop läuft

48:07.800 --> 48:09.800
Dann mache ich entweder die gleiche route

48:10.520 --> 48:16.360
Oder ich versuche es mal mit flatter weil flatter ist für mobile entwicklung auf jeden fall absolut top tier

48:17.960 --> 48:22.760
Und in zukunft wird das auf dem desktop auch immer besser

48:22.760 --> 48:28.360
Werden mit flatter 2 haben sie angekündigt sie wollen auch vollgas geben auf dem desktop also ich denke mal

48:28.680 --> 48:32.120
das flatter auf jeden fall wenn man noch mal zwei jahre warten

48:32.680 --> 48:37.720
Eine wirklich super lösung ist für desktop apps und für mobile apps ist es jetzt ja auch schon

48:41.320 --> 48:43.320
Bei firefox geht es aber nur um desktop

48:44.120 --> 48:47.080
Ist da flatter ist da und da ist quasi

48:47.720 --> 48:50.720
Ich ich sag mal übertrieben den javascript die auf dem desktop

48:50.720 --> 48:57.120
Ich sag mal übertrieben den javascript dialekt ist es nicht ich weiß dass es kein javascript dialekt ist aber dat und javascript

48:57.680 --> 48:59.680
dat ist so eine mischung aus

48:59.840 --> 49:06.480
C sharp und javascript type script javascript c sharp so eine mischung mit mit ein bisschen swift dabei vielleicht noch

49:07.920 --> 49:13.400
Maui muss man mal gucken was da rauskommt maui ist ja im prinzip sammarin mit bisschen zeug dabei

49:14.200 --> 49:15.120
und

49:15.120 --> 49:22.000
Gui gui ist eine sache das kriegt microsoft nicht richtig geschissen da ist dazu langsam abgefahren die kriegen es ja die kriegen es ja

49:22.000 --> 49:30.440
Noch nicht mal gebacken bei microsoft für windows ein gescheites ui library framework zur verfügung zu stellen die sind schon ewig dran an ihrem an ihrer

49:32.480 --> 49:39.960
Wie ist das win win ui win ui 3 was im leben nicht rauskommt

49:39.960 --> 49:45.600
oder was irgendwie laufen nicht rauskommt und keine unpackaged apps und unterstützter

49:45.920 --> 49:49.760
Microsoft hat ja selbst realisiert dass uwp kompletter reinfall gewesen ist

49:50.880 --> 49:58.120
objektiv c ist ja im apple umfeld noch ein bisschen angesagt vielleicht gut genug gelabert so viel jetzt zum thema programmiersprache

49:58.120 --> 50:00.120
das andere gehen wir auch noch mal schnell durch

50:00.600 --> 50:06.840
Also hier gebe ich hier stimme ich nicht so ganz zu gerade gerade in diesem part hier stimme ich nicht so ganz zu und bei ruby auch nicht

50:06.840 --> 50:08.360
Da wird was anderes war

50:08.360 --> 50:10.360
ähm

50:10.360 --> 50:19.240
Vielleicht soll ich bei programmiersprachen mir noch was in des des des des ding jazz python go c-shop java

50:22.360 --> 50:24.360
So

50:24.360 --> 50:26.360
Das ist tatsächlich wahr

50:27.480 --> 50:30.840
Das wichtigste ist dass man eine programmiersprache lernt nicht so sehr welche

50:31.800 --> 50:36.160
Es gibt ein paar konzeptionelle unterschiede aber erstmal ist wichtig dass man programmieren lernt

50:36.160 --> 50:38.640
Aber erstmal ist wichtig dass man programmieren lernt

50:39.440 --> 50:46.080
Gut so start-up management ja gut deswegen das würde ich alles unter wir lernen ein bisschen linux und linux auf surfern

50:47.280 --> 50:50.160
Ne das mache ich es auch so nicht als video da überlege ich mir was dazu

50:52.080 --> 50:55.920
Das würde ich eher so wir lernen bisschen linux abhaken ja so

50:56.560 --> 51:02.040
understand different os konzepts process management thread and concurrency das würde ich tatsächlich beim

51:02.880 --> 51:04.880
programmieren auch mit reinhauen sockets

51:04.880 --> 51:06.760
so euer

51:06.760 --> 51:13.760
Networks konzepts ja kann man kann man so unterschreiben ja grade grade ein bisschen networking basics sind tatsächlich nicht verkehrt

51:14.320 --> 51:16.320
Ja man sollte wissen

51:17.280 --> 51:22.880
Was weiß ich was passiert wenn du von rechner rechner b pingst was passiert der lowlevel

51:22.880 --> 51:27.960
mäßig dass sie überhaupt da ankommt man sollte man sollte wissen was weiß ich IP?

51:28.480 --> 51:29.900
und

51:29.900 --> 51:31.960
Warum es überhaupt so viele subnet maß gibt

51:31.960 --> 51:58.960
Ich weiß, das sollte man eigentlich in der Ausbildung lernen, aber ich habe heute morgen auch gerätselt, wie brechen man das noch mal genau und vor allem, wenn es um Netzwerkkonzepte geht, durchaus auch ein bisschen advancedere Sachen, dass man sich mal ein bisschen mit VPN beschäftigt oder wie rute ich Sachen am besten über irgendeinen Tunnel, über einen gesicherten Tunnel nach Azure oder sowas. Da gibt es, da gibt es viel. Man muss es aber nicht übertreiben, man wird kein Netzwerkexperte.

52:01.960 --> 52:02.960
Ja.

52:04.960 --> 52:16.960
Okay, also das ist auf jeden Fall sinnvoll. I.O. Management, Virtualization, Memory Storage, also vergesst alles, ihr müsst euch nur Virtualisierung angucken und da steht hier gar nicht dabei.

52:16.960 --> 52:36.960
Ach du Scheiße, was kommt denn da noch? What the fuck? Ihr müsst euch zwei Sachen angucken. Ihr müsst euch, der Rest könnt ihr vergessen. Ihr müsst euch zwei Sachen angucken. Ihr müsst euch Virtualisierung angucken und ihr müsst euch auf jeden Fall Containertechnologie angucken.

52:36.960 --> 53:04.960
Also irgendwie von, what the fuck, wartet mal. Okay, also ihr müsst euch auf jeden Fall Virtualisierung und Containertechnologie angucken. Dazu gehört erstmal easy Einstieg, Docker Geschichten. Das hat den Vorteil, da kann man auch einfach lokal rumbasteln.

53:04.960 --> 53:24.960
Ja, Docker, Docker Compose File. Ja. Wenn man, wenn man abenteuerlustig ist, kann man irgendwie, wie heißt das, wie schreibt man das? Minikube, Pi, Kompagnetes Cluster oder irgendwie sowas machen, lokal oder mit irgendwie Cloud, VMs oder sowas.

53:24.960 --> 53:40.960
Ein bisschen, bisschen Container Orchestrierung und so kann man sich auch angucken. Aber ich finde es reicht erstmal, weil das lernt man dann im Umgang. Ich finde es reicht erstmal, wenn man sich prinzipiell darüber klar wird, was ein Container ist.

53:40.960 --> 53:55.960
Weil ich sag ja, du benutzt Docker Stack. Okay, das glaub ich hab ich noch nie verwendet. Was ist denn jetzt Docker? Aha, Swarm ist doch, Swarm ist doch dead.

53:55.960 --> 54:17.960
Exzellent. Was war los? Ich hab Reifen getauscht mit meinem Nachbar. Das hab ich vergessen. Ja, das wusste ich. Kameramann, aber wichtig ist, dass am ersten Mal klar ist, was der Unterschied zwischen der VM und einem Container ist.

54:17.960 --> 54:36.960
Oder allgemein, man sollte wissen, was ein Container ist. Und ich finde ja immer noch, dass Container ein dummes Wort ist. Weil Container, also wenn die Leute erklären wollen, was ein Container ist, in der Regel kommt immer so eine Erklärung in diese Richtung.

54:36.960 --> 54:49.960
Container ist wie eine VM, aber keine VM. Und dann denken sich die Leute, hä, ja wie jetzt? Ist es jetzt eine VM oder ist es keine VM? Und man müsste eigentlich anders anfangen. Man müsste eigentlich komplett anders anfangen.

54:49.960 --> 55:05.960
Und ich finde, dass das Wort Container auch nicht so ganz passend ist, weil das hört sich schon so ein bisschen nach VM an. So eigene, eigene Rechner. Im Prinzip ist ein Container eine Sandbox.

55:05.960 --> 55:26.960
Es gibt keinen wirklich großen Unterschied zwischen, ich starte ein Programm. Also hier, tolles Programm. Ich führ tolles Programm direkt aus. Oder ich würde Docker, ich sag jetzt einfach mal run, was auch immer tolles Programm machen. Um es jetzt mal vereinfacht zu sagen.

55:26.960 --> 55:42.960
Da ist kein großer Unterschied dazwischen. Also das ist erst mal fundamental das gleiche. Das sind zwei Prozesse, die auf deinem Linux laufen. Komplett entgegengesetzt zu dem, was eine VM ist.

55:42.960 --> 55:58.960
Eine VM ist ein Virtualisierungsprozess, der auf deinem Linux läuft, der dann einen kompletten Rechner simuliert und alles was in der VM drinne ist, denkt es läuft auf einem eigenen System. Das hat keine Ahnung von dem Hausbetriebssystem.

55:58.960 --> 56:14.960
Das ist bei Containern komplett anders. Container sind immer ganz normale Prozesse auf deinem Linux System, so wie normal gestartete Programme auch. Der Unterschied zwischen einem Container und einem normal gestarten Programm ist, dass noch ein bisschen Sandbox Mechanik drum herum ist.

56:14.960 --> 56:28.960
Zwar namentlich zwei Sachen, Namespaces und Cgroups. Namespaces ist eine Technik, womit man dem Programm, was man in einem Container in der Sandbox startet, ein paar Dinge vorgaukeln kann, die nicht stimmen.

56:28.960 --> 56:45.960
Was weiß ich, Netzwerk, Hostname, Uhrzeit, solche Dinge, die halt anders sein können im Container wie auf dem Host und Cgroups ist die eigentliche Sandbox, die dafür sorgt, dass der Container manche Dinge nicht darf.

56:45.960 --> 57:00.960
Also zum Beispiel, wenn ihr in einem Container seid und ihr habt keine Rechte für USB-Geräte, dann seht ihr vielleicht das USB-Gerät, aber könnt nicht drauf zugreifen. Das ist eine Sandbox, aber es ist im Prinzip immer noch das exakt gleiche Programm, was auf eurem Linux läuft.

57:00.960 --> 57:15.960
Also da ist eigentlich nichts drum herum wie eine VM. Deswegen ist die Erklärung, Container ist wie eine VM, nur ohne VM ist kacke. Deswegen finde ich das Wort auch blöd. Eigentlich sollte man Sandbox sagen.

57:15.960 --> 57:31.960
Sandbox ist, ich glaube unter der Sandbox können sich die meisten Leute was vorstellen und am Container erstmal nicht. Also man sollte eigentlich Sandbox sagen. Und dementsprechend sieht man auch sofort schon den Unterschied. Halber Ted Talk, genau.

57:31.960 --> 57:45.960
Man sieht, deswegen sieht man auch schon sofort den Unterschied zwischen was ich quasi in der Sandbox starte. Im Prinzip mache ich nicht Docker Run, im Prinzip mache ich Sandbox Run, wenn man es mal genau nimmt.

57:45.960 --> 58:00.960
Man sieht ja auch schonmal, man sieht ja auch schonmal den grundsätzlichen, also der Unterschied ist. Jetzt habe ich vergessen, was ich sagen wollte. Ah fuck, ich hatte so richtig schnell einen Flow, jetzt hat mich der Chat abgelenkt hier. Der Chat ist wieder schuld.

58:00.960 --> 58:15.960
Wofür ist die Sandbox gut? Wie gesagt, einmal um dem Programm was darin läuft Sachen vor zu gaukeln, die nicht der Realität entsprechen. Zum Beispiel, dass sie ein anderes Netzwerk haben, eine andere Uhrzeit, eine andere Hausnahme oder sowas.

58:15.960 --> 58:42.960
Und dann noch in Form von der Sandbox, dass man auf manche Sachen nicht zugreifen darf. Aber der grundsätzliche Unterschied zwischen einem Container und einem VM ist, also sieht man daran jetzt ja auch schonmal gut, eine VM ist ein komplett simuliertes System und ein Container ist eigentlich nur ein weiteres gestartetes Programm mit ein bisschen Sandbox drum herum.

58:42.960 --> 59:02.960
Dementsprechend braucht ein Container nichts an Zusatzressourcen. Ich sage jetzt einfach mal nichts, weil es im Endeffekt auch so gut wie nichts ist. Du brauchst ein paar Zusatzchecks, du hast einen minimalsten Overhead, weil es im Prinzip nichts anderes ist wie ein weiteres gestartetes Programm auf deinem Hausbetriebssystem.

59:02.960 --> 59:15.960
Das hat aber auch einen Nachteil, wenn du nämlich mehrere Programme laufen lassen willst, die unterschiedliche Anforderungen haben oder unterschiedliche Sachen brauchen, dann geht das nicht.

59:15.960 --> 59:37.960
Also grundsätzlich unterschiedliche Sachen brauchen. Also zum Beispiel, wenn du ein Kernel Modul brauchst für ein Programm und das andere braucht ein anderes Kernel Modul oder du brauchst eventuell vielleicht Sachen, die konflikten oder was auch immer, sobald der Host Kernel nicht mehr passt, dann kannst du das vergessen mit Containern, dann musst du eine VM machen.

59:37.960 --> 59:51.960
So und übrigens, wenn es um Overhead zwischen Container und VM geht, es wird oftmals gesagt, CPU ist das Problem, ist das Klausur relevant. Klar, ich bin ungefähr in 45 Minuten fertig, da schreibe ich Arbeit drüber.

59:52.960 --> 01:00:01.960
Und ich kontrolliere das. Ihr müsst dann alle im Discord auf einen Voice Chat mit Kamera an und ich gucke, dass auch keiner bei euch durchs Bild läuft und euch irgendwas verrät.

01:00:01.960 --> 01:00:11.960
Und vorher müssen wir natürlich Corona-Tests machen. Wir wissen ja, in der Schule ist aktuell Corona-Tests angesagt.

01:00:12.960 --> 01:00:22.960
So und eine Sache, ich muss mal langsam zum Ende kommen, und eine Sache, die immer angeführt wird, was meiner Meinung nach aber auch nicht stimmt,

01:00:22.960 --> 01:00:35.960
die, das Problem bei VMs oder was heißt das Problem, dass das Problem bei VMs ist nicht, dass eine VM langsamer läuft. Das ist überhaupt nicht das Problem.

01:00:36.960 --> 01:00:45.960
Also wenn du einen Benchmark machst, wir reden hier von einem CPU Benchmark, nicht Grafikkarten oder sonst was. CPU, also das was man gut in der VM verwenden kann.

01:00:45.960 --> 01:00:55.960
Wenn du einen CPU Benchmark machst in einer VM und du machst einen CPU Benchmark in einem Container und du machst einen CPU Benchmark auf einem Host, du siehst keinen Unterschied.

01:00:56.960 --> 01:01:09.960
Du hast zwar theoretisch einen Unterschied, klar, und der Unterschied ist theoretisch, dass die VMs theoretisch am langsamsten sein müssten, danach der Container und dann der Host, aber praktisch ist eigentlich kein Unterschied zwischen den drei.

01:01:09.960 --> 01:01:25.960
Also der Overhead von VMs ist nicht CPU-mäßig das Problem. CPU ist in VM absolut top. Das Problem bei VMs ist, dass du Speicher brauchst.

01:01:25.960 --> 01:01:42.960
Du brauchst in der VM, du brauchst Storage auf der Platte, du musst ein komplett eigenes Betriebssystem laden und du brauchst RAM. Also der eigentliche Overhead bei VMs ist nicht so sehr CPU, sondern hauptsächlich RAM und Storage.

01:01:42.960 --> 01:01:54.960
Ja stimmt, nested ist dann wieder was anderes, aber von nested reden wir ja hier an der Stelle nicht. Ja, und das ist RAM und Storage. Note.

01:01:54.960 --> 01:02:13.960
Chat. Pepo G. Ja, so sieht es aus. Okay, ich glaube, soll ich weit? Chat, ihr dürft es jetzt entscheiden. Soll ich mich weiter zu dem Thema auslassen oder soll ich endlich anfangen zu programmieren? Bei der Gelegenheit gucke ich gerade nochmal kurz in Chat.

01:02:13.960 --> 01:02:31.960
Danke für dein Item, es ist schön, wenn es funktioniert hat. Habe ich nicht gesagt, ich kann dazu nichts sagen? Weiter. Okay, nice. Alles klar. Also, das machen wir weiter.

01:02:31.960 --> 01:02:53.960
Okay, also, wo sind wir denn stehen geblieben? Genau, so viel zum Thema Container und VM. Also, man kann sich im Prinzip merken, VM braucht mehr RAM und mehr Storage.

01:02:53.960 --> 01:03:03.960
CPU macht eigentlich keinen großen Unterschied und Container ist nicht irgendwie wie eine VM und dann doch keine VM, sondern Container ist eine Sandbox.

01:03:03.960 --> 01:03:22.960
Und diese Containergeschichte ist übrigens auch nicht neu, muss man dazu sagen. Und wo wir gerade beim Thema Container sind, Docker hat mit Linux Containern so erstmal gar nichts zu tun. Docker ist ein reines Frontend dafür.

01:03:22.960 --> 01:03:32.960
Also, es gibt, wie gesagt, wenn ich sage, ihr startet was im Container, ist es im Prinzip eigentlich sowas wie Sandbox Run. Es ist nicht Docker Run, es ist quasi, wir starten was in der Sandbox.

01:03:33.960 --> 01:03:42.960
Das, was Docker macht oder sagen wir mal, ein Programm in der Sandbox starten unter Linux, kann man relativ easy auch selbst programmieren. Das sind ein paar Zeilen über die Linux API.

01:03:42.960 --> 01:03:51.960
Ich hab da sogar mal ein Video zugesehen, das sind keine Ahnung, 15 Zeilen C oder C++ oder irgendwas, was Linux kernel API aufrufen kann.

01:03:52.960 --> 01:03:57.960
Es gibt Docker für Windows, das ist aber eine VM. Das ist Hyper-V unten drunter.

01:03:57.960 --> 01:04:08.960
Kannst du mal kurz erklären, warum C++ gegenüber C-Sharp die bessere Sprache ist? Ja, kurz, null, jebaited. 1. April war gestern.

01:04:09.960 --> 01:04:18.960
Genau, und Docker hat damit erstmal gar nicht so viel zu tun. Warum Docker und Container miteinander in Verbindung gebracht wird, ist ganz einfach.

01:04:18.960 --> 01:04:31.960
Mit Docker ging der Container-Hype los, weil Docker im Prinzip nichts anderes ist, als ein gutes Frontend zum Bedienen von Linux-Containern.

01:04:32.960 --> 01:04:36.960
Also ein gutes Frontend für die Container-Funktionalität im Kernel.

01:04:37.960 --> 01:04:44.960
Und die Container-Funktionalität im Kernel, das ist das, was früher so unter LXC gelaufen ist, das ist zum größten Teil Namespaces und Cgroups.

01:04:44.960 --> 01:04:53.960
Das ist das, was im Kernel drin ist, und das ist das, was alle Container-Frontends verwenden.

01:04:54.960 --> 01:05:06.960
Es ist egal, ob Potman, Kubernetes, Docker, flatcar, Rancher, was auch immer, vollkommen egal.

01:05:07.960 --> 01:05:11.960
Das sind alles Frontends für die Funktionalität, die im Linux Kernel ist.

01:05:11.960 --> 01:05:17.960
Nämlich Namespaces und Cgroups und ich glaube das Schrägstrich LXC, was auch immer.

01:05:18.960 --> 01:05:29.960
Und Docker hat das Ganze quasi nur befeuert, weil es das erste richtig gute und halb generierende Frontend war.

01:05:30.960 --> 01:05:35.960
Deswegen denken so viele Leute, dass Linux-Container gleich Docker ist. Nein, Linux-Container hat mit Docker gar nichts zu tun.

01:05:35.960 --> 01:05:42.960
Es ging lange vor Docker schon, es gab auch Vorgänger davon und es gibt in anderen Betriebssystemen, in BSD gibt es Jails zum Beispiel.

01:05:43.960 --> 01:05:49.960
Früher gab es OpenVZ und solche Geschichten, also Container oder Sandboxes ist nichts Neues.

01:05:50.960 --> 01:06:00.960
Aber diese Namespaces und Cgroup-Funktionalität im Linux Kernel plus Docker als Frontend hat halt dafür gesorgt, dass es einen relativ großen Hype gab um das Ganze.

01:06:00.960 --> 01:06:06.960
Und deswegen bringen so viele Leute Docker und Container quasi, werfen das in einen Topf.

01:06:09.960 --> 01:06:13.960
Sorry, dass ich nochmal nachhage, warum lässt man überhaupt Programme im Container laufen zum Testen?

01:06:14.960 --> 01:06:20.960
Ja, das ist tatsächlich eines der ursprünglichen Ideen von Docker gewesen, dass man Sachen reproduzierbar besser testen kann.

01:06:21.960 --> 01:06:24.960
Also, du musst dir überlegen, was brauchst du alles, damit dein Programm läuft?

01:06:25.960 --> 01:06:27.960
Und das packst du alles quasi in dieses Container-Image mit rein.

01:06:27.960 --> 01:06:40.960
Mal angenommen, du hast irgendwie, du hast ein Programm gebastelt, das braucht Library A, B, C, das braucht vielleicht ein Betriebssystem C, Library D, du hast noch irgendwelche,

01:06:41.960 --> 01:06:47.960
eventuell irgendwelche, frag mich nicht, du machst ein Exec auf Kommandozeilen, Tools im Hintergrund, die müssen installiert sein vorher, was auch immer.

01:06:48.960 --> 01:06:51.960
Also sprich, dein Programm hat gewisse Dependencies, dass es ordentlich funktioniert.

01:06:52.960 --> 01:06:55.960
Das ist eigentlich nur ein Stream, ich muss kurz Reifen wechseln dazwischen.

01:06:55.960 --> 01:07:00.960
Also sprich, du hast ein paar Dependencies, dass es funktioniert.

01:07:01.960 --> 01:07:10.960
So, und eine der ursprünglichen Ideen dieser ganzen Container- und Docker-Geschichte war, dass man Programme reproduzierbar unter gleichen Bedingungen testen kann.

01:07:11.960 --> 01:07:17.960
Also sprich, wenn es funktioniert hat bei dir und du hast aber die 20 Abhängigkeiten installiert, die dein Programm braucht,

01:07:17.960 --> 01:07:24.960
dann hast du ein Docker-File gemacht, hast dort quasi reingeschrieben, ok, was muss ich alles installieren, dass das Programm läuft und hast es einem geschickt.

01:07:25.960 --> 01:07:32.960
Das Docker-File ist, oder generell, das ist im Prinzip ähnlich zu, du hast eine VM mit einem Install-Script.

01:07:33.960 --> 01:07:39.960
Ja, du würdest eine VM aufsetzen und dann lässt ein Install-Script laufen, die das System in den Zustand bringt, wie du es brauchst.

01:07:40.960 --> 01:07:45.960
Nur das ist halt eine ganze Weile Dauer, du musst den Kram erstmal installieren, dann musst du erstmal das Install-Script laufen lassen, was auch immer.

01:07:45.960 --> 01:07:53.960
Docker-File, Docker-Image dauert halt 20 Sekunden, dann ist das Ding runtergeladen und gestartet.

01:07:54.960 --> 01:07:58.960
Wenn du das Image schon gezogen hast, dauert es quasi so wie direkt gestartet.

01:07:59.960 --> 01:08:04.960
Ja, also der hauptsächliche Grund ursprünglich war tatsächlich mal, nachvollziehbar Programme testen zu können.

01:08:04.960 --> 01:08:21.960
So, und dadurch hast du natürlich auch den Vorteil, dass du Sachen konfigurieren kannst und jemand anderem gibst, der das dann bei sich auch ausprobieren kann, unter so weit wie es irgendwie geht, ähnlichen Bedingungen wie bei dir.

01:08:22.960 --> 01:08:31.960
Na klar, der hat noch eine andere CPU drin oder irgendwas, was in die Suppe spucken kann, aber im Prinzip, nein, nein, der andere.

01:08:31.960 --> 01:08:38.960
Aber im Prinzip kannst du die Sachen reproduzieren, mal wieder aufbauen lassen und daraus ist ein ganzes Ökosystem entstanden.

01:08:39.960 --> 01:08:51.960
Die Extremform ist sowas wie Kubernetes, wo du dann quasi so einen Orchestrator hast, wo du dem sagst, ich möchte 5 davon, 5 davon, jetzt möchte ich nicht nur 5, jetzt möchte ich auf einmal 50.

01:08:52.960 --> 01:08:58.960
Ich möchte sichergestellt haben, dass nicht mehr als 5 auf der gleichen Hardware laufen, blablabla und das managt das für dich.

01:08:58.960 --> 01:09:06.960
Das geht aber auch nur dadurch, weil das reproduzierbar funktioniert und du nicht erstmal in den VM starten musst oder sowas in der Richtung.

01:09:07.960 --> 01:09:23.960
Im bisschen kleineren Stil ist das auch ganz praktisch, du kannst zum Beispiel sowas wie Docker Compose verwenden, das ist ein YAML-File, da schreibst du zum Beispiel rein, ich brauche eine MySQL-Datenbank, einen Web-Server und meine Anwendung.

01:09:23.960 --> 01:09:43.960
Und ich möchte, dass die Dinger in dieser und dieser Reihenfolge gestartet werden, die Fault-Password für MySQL xy, dann trägst du das ein und das kannst du dann so einfach auf jedem Rechner mit einem Kommando ausführen und dann startet dir quasi dein Test-Environment oder dein Live-Environment, was auch immer, auf jedem x-beliebigen Rechner, wo halt architekturmäßig das läuft.

01:09:44.960 --> 01:09:46.960
Das geht einfach schneller.

01:09:46.960 --> 01:09:52.960
Es ist jetzt nicht so, dass man das vorher hätte nicht irgendwie auch machen können, es war aber halt aufwendiger.

01:09:53.960 --> 01:09:58.960
Und du weißt wie das ist, umso aufwendiger die Sachen sind, umso weniger macht man es.

01:09:59.960 --> 01:10:07.960
Man muss übrigens auch nicht alles verkontenerisieren, das ist auch so eine Geschichte, wo finde ich zur Zeit ein bisschen übertrieben wird.

01:10:08.960 --> 01:10:11.960
Ich warte noch drauf, bis die Leute ihr LS im Container ausführen.

01:10:11.960 --> 01:10:16.960
LS as a Service gibt es dann irgendwann mal.

01:10:17.960 --> 01:10:20.960
So nach dem Motto, Nini LS, nee das geht nicht, erstmal Dogger-Container starten.

01:10:21.960 --> 01:10:23.960
Da warte ich noch drauf.

01:10:24.960 --> 01:10:32.960
Ich hatte auch letztens auf der Arbeit einen, der war unbedingt der Meinung, dass er, kann sogar Wüschel-Studio-Code gewesen sein.

01:10:32.960 --> 01:10:41.960
So nach dem Motto, er macht nur noch Container, Container-Only-Workflow hat er erzählt.

01:10:42.960 --> 01:10:44.960
Alles klar, alles gut.

01:10:45.960 --> 01:10:47.960
Wo ist der Unterschied zu Snap?

01:10:48.960 --> 01:10:52.960
Beides sind Frontends für Container, das muss man sich erstmal merken.

01:10:53.960 --> 01:10:55.960
Das Handling ist unterschiedlich.

01:10:55.960 --> 01:11:02.960
Und Snap versucht halt ein bisschen Package Manager zu sein.

01:11:03.960 --> 01:11:08.960
Also Dogger installierst du halt fertige Images und lässt die Sachen drauf laufen und gut ist.

01:11:09.960 --> 01:11:15.960
Self-Contained und dein Hausbetriebssystem hat eigentlich gar nichts mit zu tun, weil es ein eigenes Image ist.

01:11:16.960 --> 01:11:19.960
Du kannst da auch nicht so ohne Weiteres drauf zugreifen und sonst wie.

01:11:19.960 --> 01:11:30.960
Und Snap versucht halt so zu tun, als wäre das Programm in dem Container eigentlich ein Programm, was du hier jetzt easy auf deinem Host ausführen kannst.

01:11:31.960 --> 01:11:35.960
Also ich bin ehrlich gesagt kein allzu großer Snap-Fan.

01:11:35.960 --> 01:11:55.960
Und was ich bei Ubuntu nicht mag ist, dass sie so Sachen wie Chrome unter der Haube als Snap installieren und so tun, als wäre es aus dem Package Manager ein fertiges Programm.

01:11:55.960 --> 01:12:04.960
Alter, jetzt habe ich aber lange gelabert und wir sind nicht mal fertig. Ich mache das jetzt mal im Schnelldurchgang.

01:12:05.960 --> 01:12:08.960
Wie installiert man Treiber auf Linux, die als C-Source-File geliefert werden?

01:12:09.960 --> 01:12:13.960
Beziehungsweise habe ich falsch gemacht, dass man beim Kompilieren der File meckert, dass init-h nicht kennt.

01:12:14.960 --> 01:12:19.960
Du hast wahrscheinlich die Dependencies nicht installiert dafür.

01:12:19.960 --> 01:12:34.960
Also wenn du irgendwas inkludierst, was jetzt nicht dort liegt, wo du dein Make oder was auch immer ausführst, dann erwartet er wahrscheinlich, dass irgendeine Library installiert ist.

01:12:35.960 --> 01:12:37.960
Dann musst du in deinen Package Manager gehen und das passende Paket installieren.

01:12:38.960 --> 01:12:46.960
Zum Beispiel wenn man FFmpeg braucht, dann musst du erstmal, also wenn du FFmpeg Libraries brauchst, musst du erstmal FFmpeg installieren, dass du den Gramm kompilieren kannst.

01:12:46.960 --> 01:12:51.960
Ach ja, nicht Ubuntu, sondern Ubuntu natürlich meine ich, Ubuntu.

01:12:56.960 --> 01:13:01.960
Ach so Moment, Treiber. Ich dachte es ging um ein fertiges Programm.

01:13:02.960 --> 01:13:09.960
Also wenn du Treiber installieren kannst, dann brauchst du in der Regel, da hat er recht, wer hat es denn jetzt hier geschrieben, keine Ahnung, vor einer Stunde oder so.

01:13:10.960 --> 01:13:14.960
Dann brauchst du wahrscheinlich die Linux-Header von deinem aktuellen Kernel.

01:13:14.960 --> 01:13:16.960
Von deinem aktuellen Kernel, ja.

01:13:17.960 --> 01:13:25.960
Musst du mit deinem Package Manager installieren, meistens sowas wie Uptinstall, Linux, Linux-Headers oder Linux-Firmware oder was auch immer.

01:13:26.960 --> 01:13:29.960
Musst du gucken, also das ist ein bisschen unterschiedlich von Distro zu Distro.

01:13:30.960 --> 01:13:34.960
Aber ja, wenn es ein Treiber ist, musst du auf jeden Fall die Kernel-Header installieren.

01:13:36.960 --> 01:13:38.960
Richtig, so sieht es aus.

01:13:39.960 --> 01:13:42.960
Genau, so bla bla bla, das haben wir abgehakt, haben wir abgehakt.

01:13:42.960 --> 01:13:44.960
Learn about Managing Servers, klar.

01:13:45.960 --> 01:13:50.960
Wie gesagt, habe ich ja gesagt, Linux lernen, Operating System, Linux, Unix, Windows.

01:13:51.960 --> 01:13:53.960
Unix, ganz knicke.

01:13:54.960 --> 01:14:00.960
Also generell auch das ist so cool, dass sein mag, dass du da ein bisschen Auswahl hast.

01:14:01.960 --> 01:14:09.960
Du wirst ehrlich gesagt zu 95% mit Linux-Systemen zu tun haben in dem Bereich und vielleicht zu 5% mit irgendwelchen übrig gebliebenen Windows.

01:14:09.960 --> 01:14:12.960
Oder im Zweifelsfall auch irgendwelchen Entwickler-Workstations, was auch immer.

01:14:13.960 --> 01:14:18.960
Aber es ist 95% Linux, also kann man machen, ist aber nicht wirklich wichtig.

01:14:19.960 --> 01:14:23.960
Genauso wie Windows, also Linux, Linux all the way, wenn es um diese Sache geht.

01:14:24.960 --> 01:14:30.960
Egal wo, in der Cloud, lokal, sorry nicht lokal, on-prem natürlich, Linux.

01:14:30.960 --> 01:14:39.960
So, Suse auf gar keinen Fall, Suse ist der Sack meiner Meinung nach, mag ich null.

01:14:40.960 --> 01:14:42.960
Fedora mag ich auch null.

01:14:43.960 --> 01:14:52.960
CentOS gibt es nicht mehr in dieser Form, das ist ja quasi dead in der bisherigen Form.

01:14:53.960 --> 01:14:55.960
Es gibt eigentlich bloß drei Dinger.

01:14:56.960 --> 01:14:58.960
Es gibt Red Hat, das ist im Prinzip das gleiche wie früher CentOS.

01:14:58.960 --> 01:15:00.960
Red Hat, Ubuntu, Debian.

01:15:01.960 --> 01:15:05.960
Ich persönlich bin ja Ubuntu-Fan, das wisst ihr auf der Arbeit, haben wir hauptsächlich Red Hat.

01:15:06.960 --> 01:15:07.960
Debian ist aber auch kein Ding.

01:15:08.960 --> 01:15:11.960
Debian, Ubuntu ist jetzt nicht der Wahnsinnsunterschied.

01:15:12.960 --> 01:15:21.960
Ubuntu macht komische Sachen, wie beispielsweise YAML-Konfiguration für Netzwerk.

01:15:21.960 --> 01:15:28.960
Netzwerk, weiß immer noch nicht, was die geritten hat bei Ubuntu dafür, dass man YAML-Konfig macht für Netzwerk.

01:15:29.960 --> 01:15:34.960
Das ist unter Debian schöner, dafür hat Ubuntu einen ein bisschen lockereren Umgang mit Packages.

01:15:35.960 --> 01:15:38.960
Ja, da kannst du auch die ein oder anderen Unfree Sachen installieren, ein bisschen modernere Sachen.

01:15:39.960 --> 01:15:40.960
Debian ist ja im Prinzip halt schon immer alt, wenn es rauskommt.

01:15:41.960 --> 01:15:44.960
Red Hat ist alt mit der Zeit, bringt aber meiner Release es raus.

01:15:44.960 --> 01:15:50.960
Ich muss sagen, alles in allem, gesamtpaketmäßig gefällt mir persönlich Ubuntu am besten.

01:15:55.960 --> 01:16:01.960
Aber wenn du Ubuntu kannst, kannst du auch Debian und wenn du Debian kannst, kannst du eigentlich auch Ubuntu.

01:16:02.960 --> 01:16:03.960
So.

01:16:04.960 --> 01:16:07.960
White Crab, was? Das darf man nicht mehr so nennen.

01:16:08.960 --> 01:16:09.960
Das ist verboten.

01:16:09.960 --> 01:16:15.960
Da ist, da ist die, ist gleich hier die, die Police am Start, Monkathos.

01:16:16.960 --> 01:16:17.960
Whitelist!

01:16:18.960 --> 01:16:20.960
Ich glaube es geht los. Triggert, alter, triggert.

01:16:22.960 --> 01:16:24.960
Wo habe ich denn mein Monkathos?

01:16:25.960 --> 01:16:26.960
Ah.

01:16:29.960 --> 01:16:30.960
So, gehen wir mal schnell hier rüber.

01:16:31.960 --> 01:16:34.960
Learn to live in Terminal. Ja, aber man muss es nicht übertreiben.

01:16:34.960 --> 01:16:39.960
Das ist auch ein Tipp, den ich euch geben würde in der Richtung, übertreibt sich.

01:16:40.960 --> 01:16:46.960
Es gibt ganz viele, gerade auf YouTube, ich nenne es mal Gurus, die dir erzählen, so wie sie das machen, ist The Way.

01:16:47.960 --> 01:16:52.960
Der einzige Way, den es gibt, ist, so wie es euch, für euch am angenehmsten ist.

01:16:53.960 --> 01:16:57.960
Also ich persönlich nutze auch gern das Terminal und mache da viel drüber.

01:16:57.960 --> 01:17:09.960
Gerade wenn es was ist, was man vielleicht auch mal automatisch laufen lassen will, aber ich würde nicht im Traum drauf, auf die Idee kommen, quasi alles nur noch in Wim zu machen oder in Emacs.

01:17:10.960 --> 01:17:18.960
Und ganz Hardcore-Varianten, dann verwenden ja sogar einen Textbrowser oder einen Browser mit Wimkeys oder sonst was.

01:17:19.960 --> 01:17:24.960
Oder sagen, Leute, steckt die Maus ab, ihr dürft die Maus nicht mehr benutzen, dass ihr gut im Terminal werdet.

01:17:24.960 --> 01:17:26.960
Das ist meiner Meinung nach alles Schwachsinn.

01:17:27.960 --> 01:17:32.960
Man sollte im Terminal gut klarkommen, man sollte sich so die Standard-Shortcuts angucken, man sollte wissen, wie man in Wim bedient.

01:17:33.960 --> 01:17:35.960
Ich persönlich komme mit Wim viel besser klar als mit Nano.

01:17:36.960 --> 01:17:41.960
Nano ist, finde ich, immer nervig, wenn da einer Nano aufmacht, aber es ist alles letztendlich Geschmackssache.

01:17:42.960 --> 01:17:51.960
Aber es macht meiner Meinung nach keinen Sinn, Wim in irgendwie eine JavaScript oder C-Sharp-IDE oder sowas umzubauen.

01:17:51.960 --> 01:17:53.960
Da nehme ich passende Tools für.

01:17:54.960 --> 01:18:02.960
Also die Stärken von Wim liegen meiner Meinung nach in einem schnellen, geschwinden, Kommandozeilen-Texteditor.

01:18:03.960 --> 01:18:07.960
Und nicht so sehr im Aufbau mit 30 Milliarden Plugins.

01:18:11.960 --> 01:18:14.960
Man kann auch VS Code mit Wim-Extension benutzen, wobei ich das nicht mag.

01:18:14.960 --> 01:18:25.960
So, und das nächste ist, wenn ihr jemand habt, der euch dann erzählt, ja, immer die Finger auf der Home-Row und nicht die Maus benutzen, es ist 2021.

01:18:26.960 --> 01:18:32.960
Man benutzt 60% der Zeit, auch wenn man am Programmieren ist, einen Browser, um Dinger nachzugucken.

01:18:33.960 --> 01:18:37.960
Und einen Browser zu bedienen ohne Maus geht schlicht und ergreifend nicht richtig.

01:18:38.960 --> 01:18:41.960
Also es macht überhaupt keinen Sinn, absichtlich auf die Maus zu verzichten.

01:18:41.960 --> 01:18:54.960
Ihr steigert eure Effizienz am Rechner definitiv mehr dadurch, wenn ihr ordentliches Aiming habt hier auf eurem Browser, als wenn ihr ein paar Millisekunden in Wim schneller seid.

01:18:55.960 --> 01:19:04.960
Zumal man ja auch sagen muss, dass man 90% der Zeit, wenn man Sachen programmiert, nicht Hacker-Man tippt, sondern überlegt.

01:19:04.960 --> 01:19:17.960
Weil die Vorstellung, dass man komplizierte Sachen in dieser Geschwindigkeit programmiert, haben vielleicht irgendwelche Fernsehsendungen oder so, aber die Realität ist es halt nicht.

01:19:18.960 --> 01:19:25.960
In Wirklichkeit, wisst ihr wie die Realität aussieht? Die Realität ist eigentlich, okay, lass mal das kurz ausprobieren.

01:19:25.960 --> 01:19:35.960
Okay, ausführen, gucken, ob das Ganze funktioniert. Ah, okay, scheint zu funktionieren. Machen wir mal hier.

01:19:36.960 --> 01:19:47.960
Ah, Mist, wie ist der Aufruf? Nochmal C++, AP, Blah, Pointer, dumm. Aha, ist der Goverflow, okay, okay, Copy-Paste.

01:19:47.960 --> 01:19:57.960
Ja, mal gucken, ob das damit geht. Schreiben wir das mal ein bisschen um. Okay, und jetzt. So, so läuft das ja normalerweise, realistisch betrachtet, ja.

01:20:00.960 --> 01:20:06.960
Und das hat damit nichts zu tun. Und dementsprechend, wenn ihr schnell seid, einen guten Browser bedienen könnt, ist das auch wichtig.

01:20:06.960 --> 01:20:16.960
Also nicht zu sehr übertreiben mit Terminal-Hackermann, ja. Stack-Overflow-Triffen-Development, genau.

01:20:17.960 --> 01:20:26.960
So, T-marks-Lernen ist auf jeden Fall sinnvoll, sinnvoller als Screen zu lernen. Was machst du gerade? Ich Reakte.

01:20:27.960 --> 01:20:33.960
Ich lasse mich zu dieser Roadmap aus, weil mich jemand gefragt hat. Also das ist auf jeden Fall sinnvoll. Also T-marks-Lernen ist auf jeden Fall sinnvoll.

01:20:33.960 --> 01:20:41.960
Also ich muss sagen, das war eines der sinnvollsten Investitionen überhaupt, dass ich T-marks lernen konnte, dass ich T-marks gelernt habe.

01:20:42.960 --> 01:20:47.960
Das hilft ungemein. Natürlich, man kann auch einfach mehrere Terminals aufmachen, wenn man sowas machen will.

01:20:48.960 --> 01:20:54.960
Aber, gerade wenn man per SSH auf einem Server ist, ist T-marks praktisch und T-marks schützt euch halt davor, die Session zu verlieren.

01:20:54.960 --> 01:21:03.960
Also sprich, wenn ihr detached werdet vom Server und ihr habt was laufen im Hintergrund und die Verbindung zum Server crasht bei euch.

01:21:05.960 --> 01:21:12.960
Und, ne, also Verbindung zum Server ist jetzt gecrashed und ihr lockt euch neu ein, dann könnt ihr euch einfach neu attachen aufs T-marks und es ist immer noch da.

01:21:14.960 --> 01:21:15.960
Excellent.

01:21:15.960 --> 01:21:22.960
Bäm, Terminal geschlossen und zack, das ganze ist immer noch da.

01:21:23.960 --> 01:21:35.960
So, also das ist auf jeden Fall eine äußerst coole Geschichte. Also T-marks lernen lohnt sich definitiv. Das ist wirklich richtig huge und ist gar nicht so schwierig.

01:21:35.960 --> 01:21:45.960
So, Bash Scripting auf jeden Fall, Vim, Nano, PowerShell, Emacs, bisschen Vim Navigation reicht ehrlich gesagt. Rest kannst du knicken, PowerShell ist eh Paints Champ.

01:21:46.960 --> 01:21:55.960
Text Manipulation Tools, gebe ich ihm voll und ganz recht. Shell Scripting, trotz hier Python Geschichten und so, kommste eigentlich immer noch nicht drum herum.

01:21:55.960 --> 01:22:05.960
Process Monitoring, gebe ich ihm auch recht. Ja, Networking, so zu gucken wie man mal Pakete mitschneidet und so, das ist auf jeden Fall auch.

01:22:06.960 --> 01:22:11.960
So, das OSI Modell, ja da hab ich jetzt noch drauf gewartet.

01:22:13.960 --> 01:22:20.960
Network Security, klar, HTTP, HTTPS, na FTP, FTP könnt ihr streichen. FTP ist...

01:22:22.960 --> 01:22:23.960
Tja.

01:22:23.960 --> 01:22:28.960
Juckt eigentlich keinen mehr. Ich war vor 10 Jahren vielleicht zuletzt über FTP Server eingeloggt.

01:22:31.960 --> 01:22:41.960
SSL, TLS auf jeden Fall, SSH, ja also die wichtigsten Sachen davon im Bereich Administration oder beziehungsweise auch hier im Linux Bereich ist SSH und SSH Port Weiterleitung.

01:22:41.960 --> 01:22:54.960
Äh, ja, passt, gut, Web Server, ja, ja, ja, ist okay. EES meinetwegen, Nginx, würde ich tatsächlich genauso sagen, meine Pers...

01:22:55.960 --> 01:23:02.960
Tomcat ist kein klassischer Web Server eigentlich. Ich würde sagen Nginx und Cutty, Cutty zum Einstieg ist eine super Sache, weil easy zu konfigurieren.

01:23:02.960 --> 01:23:10.960
Äh, ich geb mein Zen-Fehler zu ab. Danach programmieren wir weiter.

01:23:12.960 --> 01:23:17.960
Learn Infrastructure as Code, auf jeden Fall, das ist das erste was ich gesagt hab, was dazu gehört.

01:23:18.960 --> 01:23:21.960
Äh, Docker LXD hatten wir auch schon, ja, bla, sonst wie.

01:23:22.960 --> 01:23:27.960
Ich würde erstmal die Basics lernen, bevor ich hier an Container Orchestration gehe.

01:23:27.960 --> 01:23:31.960
Infrastructure Provision in Terraform, das würde ich mir auch erst angucken in Zusammenhang mit dem hier.

01:23:32.960 --> 01:23:37.960
Vorher würde ich mir die wirklich mal die einfachen Sachen angucken hier zum Einstieg und sich ein bisschen rantasten hier, ja.

01:23:38.960 --> 01:23:41.960
Ich würde mir Ansible raussuchen und ich würde mir Docker raussuchen.

01:23:42.960 --> 01:23:44.960
Und da ein bisschen rumbasteln, Docker Compose, sonst wie was.

01:23:45.960 --> 01:23:51.960
Ähm, nicht agil genug, ja, Agile alles.

01:23:51.960 --> 01:23:57.960
Cloud Providers, wie gesagt, ich hab mein Kram alles bei Hetzner.

01:23:58.960 --> 01:24:04.960
AWS, ja, da müsst ihr wissen was wichtig ist, ich persönlich hier bin ja in der Azure-Richtung am Start, aber da müsst ihr wissen was wichtig ist.

01:24:05.960 --> 01:24:10.960
Deployment und Continuous Integration Tools, hab ich ja schon erzählt vorhin.

01:24:11.960 --> 01:24:15.960
Infrastructure Monitoring, ganz ehrlich, da geb ich ihm voll und ganz recht.

01:24:15.960 --> 01:24:20.960
Prometheus, Grafana, beste Kombi.

01:24:21.960 --> 01:24:27.960
Es ist vielleicht nicht für alles so gut geeignet, wie so die klassischen Sachen beim Zappix, aber Prometheus, Grafana ist easy.

01:24:28.960 --> 01:24:33.960
Und es gibt ein richtig großes Ökosystem, wo man fast alles mittlerweile mitmachen kann.

01:24:34.960 --> 01:24:37.960
Da kann ich nicht viel zu sagen.

01:24:37.960 --> 01:24:42.960
Ah, gut, fertig, reacted.

01:24:43.960 --> 01:24:46.960
Ja, und das ist nochmal so zur Untermauung, das ist im Prinzip das, was ich vorhin auch gesagt hab.

01:24:47.960 --> 01:24:52.960
Python ist mit so die angesagteste und beliebteste Programmiersprache, gerade wenn es um AI-Sachen geht.

01:24:53.960 --> 01:24:59.960
JavaScript, weil es Web ist, ist halt vorne. Danach Java, Go und C-Sharp ist auch mittlerweile noch relativ weit vorne.

01:24:59.960 --> 01:25:07.960
Wir können ja mal 2000 gucken, ob man das ganze Jahr zusammenfassen kann, keine Ahnung.

01:25:08.960 --> 01:25:10.960
Vielleicht nicht.

01:25:11.960 --> 01:25:15.960
Ja, weil C-Sharp ist die letzten Jahre ganz schön gestiegen.

01:25:16.960 --> 01:25:19.960
Ja, guck, oder auch nicht.

01:25:20.960 --> 01:25:23.960
Hier wurde es open sourced, hier wurde es open sourced und hier ist...

01:25:24.960 --> 01:25:27.960
Okay, ich hätte eigentlich schon gedacht, dass es deutlich mehr gestiegen ist.

01:25:27.960 --> 01:25:29.960
Na, ist es ja auch.

01:25:30.960 --> 01:25:38.960
Von Windows Only Days hier vorne, zu jetzt quasi da, na gut.

01:25:43.960 --> 01:25:47.960
Ruby ist im Zuwachs? Nee, das kann ich mir nicht vorstellen. Wo ist Ruby?

01:25:48.960 --> 01:25:54.960
Leute, Leute, Chat, wie spricht man Ruby richtig aus? Ihr wisst's, oder? Der Chat weiß es.

01:25:54.960 --> 01:26:00.960
Guck mal Ruby, wie es runtergeht. Chat, wie spricht man Ruby richtig aus?

01:26:01.960 --> 01:26:06.960
Was Java da vorne macht, klar. Java ist im Enterprise Umfeld der Shit.

01:26:07.960 --> 01:26:11.960
Und wisst ihr, woran das noch liegt, dass Java so weit vorne ist?

01:26:12.960 --> 01:26:14.960
Wer weiß es?

01:26:15.960 --> 01:26:17.960
Chat ist clever.

01:26:17.960 --> 01:26:26.960
An den Chinesen, genau. Android vielleicht auch zum Teil, aber gerade die Chinesen sind komplette Java-Fans.

01:26:27.960 --> 01:26:32.960
Ich weiß auch nicht, was mit den Chinesen los ist, aber wir wissen ja, die Chinesen haben es mit Menschenrechten eh nicht so.

01:26:33.960 --> 01:26:35.960
Da liegt Java halt nahe.

01:26:35.960 --> 01:26:47.960
Ja, die Chinesen stehen unglaublich auf Java.

01:26:48.960 --> 01:26:49.960
Hier Leute, ich muss mal kurz Licht anschalten.

01:26:49.960 --> 01:27:05.960
Wobei, wenn ich sage, ich muss kurz Licht anschalten, dann heißt es, ich muss den Browser, den Home Assistant aufmachen und kurz auf den Knopf drücken, dass es Licht angeht. So, Licht ist an.

01:27:06.960 --> 01:27:12.960
Die Chinesen haben auf GitHub auch immer mehr C++. Ja, ich sag ja, die haben es mit Menschenrechten nicht so.

01:27:12.960 --> 01:27:18.960
Ok Leute, ich bin jetzt schon wieder da, hab eineinhalb Stunden geschwätzt und wisst ihr, wie viel Zeilen wir schon programmiert haben?

01:27:19.960 --> 01:27:20.960
Nichts.

01:27:21.960 --> 01:27:22.960
Exzellent.

01:27:23.960 --> 01:27:24.960
Ok, kommen wir mal zur Sache.

01:27:31.960 --> 01:27:33.960
Hatte JavaScript fünf Jahre lang auf meinem PC nicht installiert?

01:27:33.960 --> 01:27:42.960
Doch, du hattest garantiert JavaScript auf deinem PC installiert, aber 1000%ig hattest du JavaScript auf deinem PC drauf.

01:27:45.960 --> 01:27:47.960
Oder hast du nicht im Internet gesurft?

01:27:52.960 --> 01:27:54.960
Jeder Browser bringt JavaScript mit.

01:27:54.960 --> 01:27:57.960
Das ist aber echt eine gute Idee.

01:27:58.960 --> 01:28:05.960
Wie würdest du das alles lernen? Hast du Tipps mit den Sachen anfangen, die einem Spaß machen, einen interessieren und alles andere ignorieren?

01:28:07.960 --> 01:28:19.960
Kurse mögen auch schon sinnvoll sein, aber ich guck mir gerne, ich guck mir gerne, ähm, Talks und, und, äh, was soll ich sagen?

01:28:19.960 --> 01:28:26.960
Talks von Konferenzen und den offiziellen Content von den jeweiligen Herstellern an.

01:28:27.960 --> 01:28:32.960
Ich guck mir beispielsweise gerne den Microsoft Content an, wenn es um.NET geht. Das ist immer ganz gut gemacht.

01:28:33.960 --> 01:28:35.960
Man muss aber halt schon meistens ein bisschen Vorkenntnisse haben.

01:28:40.960 --> 01:28:42.960
Oh, mir kraut's davor.

01:28:44.960 --> 01:28:45.960
Das ist dann nicht gut.

01:28:45.960 --> 01:28:50.960
Oh, mir kraut's davor. Das ist dann nicht Kobold, sondern Kobold.

01:28:52.960 --> 01:28:55.960
Oder wenn sie Schnee ist, die schneen mal eine Schobold raus.

01:28:56.960 --> 01:29:05.960
Kennst du Lean? Das ist irgendeine Agilitätsgeschichte, ne? Für die coolen, die Agile Leute sind auch Lean.

01:29:05.960 --> 01:29:09.960
Lean ist doch auch irgendeine, so eine, so eine Agile Prozessgeschichte.

01:29:17.960 --> 01:29:24.960
So, ok, ähm, jetzt machen wir weiter.

01:29:25.960 --> 01:29:27.960
Also, wo sind wir stehen geblieben?

01:29:27.960 --> 01:29:37.960
Also, wir können den Sensor auslesen, also den da, immer noch, das geht immer noch um den Sensor. Wir haben ja in den letzten Streams nichts gemacht, außer, dass ich sinnlos rumgelabert hab.

01:29:44.960 --> 01:29:46.960
Die Chinesen haben den eigenen Engine X.

01:29:48.960 --> 01:29:49.960
Ihr wundert mich nicht.

01:29:49.960 --> 01:29:54.960
Die Chinesen haben schon alles geforkt, was man forken kann.

01:29:55.960 --> 01:30:05.960
So, also wir machen jetzt an der Stelle weiter. Was wir vorhin im Stream hingebracht haben ist, dass wir die, ja du hast nichts verpasst, Enrixl, ich hab gerade geschwätzt eineinhalb Stunden und jetzt fangen wir wieder an.

01:30:05.960 --> 01:30:18.960
Also, wir haben kein Monka-Fork mehr, haben wir das nur, haben wir das nur im, ah das haben wir nur im Discord, oder? Lul.

01:30:18.960 --> 01:30:34.960
So, also was wir jetzt geschafft haben, ist von diesem Sensor, wir können abfragen, ähm, Temperatur, Licht und, ähm, also Helligkeit, Helligkeit in Lux, Temperatur in Celsius, also nicht in Fahrenheit oder in irgendwelchen anderen Krokona-Krokodilen.

01:30:35.960 --> 01:30:37.960
Also, also das ist jetzt schon ziemlich, ziemlich gut.

01:30:37.960 --> 01:30:39.440
licht

01:30:39.440 --> 01:30:40.760
und

01:30:40.760 --> 01:30:43.720
also helligkeit helligkeit in lux

01:30:44.320 --> 01:30:47.520
Temperatur in Celsius also nicht in Fahrenheit oder irgendwelchen anderen

01:30:48.240 --> 01:30:50.240
Kokona Kokona Einheiten

01:30:50.720 --> 01:30:51.920
und

01:30:51.920 --> 01:30:56.880
Wir können Batterie wir können Batterie ab abfragen so und der witz ist wir

01:30:57.440 --> 01:31:03.120
Fragen von diesem sensor nichts ab außer der Batterie der sensor broadcasted alle 30 Sekunden

01:31:03.120 --> 01:31:11.240
Sekunden licht aktuell aktuell licht und aktuell Temperatur das greifen wir einfach nur ab dass wir nicht unnötig Batterie kosten

01:31:11.880 --> 01:31:13.880
also nicht unnötig Batterie

01:31:14.040 --> 01:31:19.760
Drainen und alle fünf stunden alle fünf stunden updaten wir den sensor

01:31:23.880 --> 01:31:31.620
Ja alle fünf stunden updaten mit dem sensor also wer schon immer mal wissen wollte was fünf stunden in in mikrosekunden sind

01:31:31.620 --> 01:31:35.300
Der weiß es jetzt 18 Milliarden mikrosekunden ist sind fünf stunden

01:31:37.140 --> 01:31:39.780
Peppo g leute wird nachher auch abgefragt

01:31:41.220 --> 01:31:43.220
Das ist das ist die frage für nubs

01:31:44.260 --> 01:31:48.140
Ihr kennt es ja lehrer machen das immer so sie machen immer so ein paar easy easy questions rein

01:31:48.740 --> 01:31:52.580
Dass sie nubs auch ein paar punkte bekommen das ist später die frage die ich dann auch mache

01:31:53.380 --> 01:31:55.380
was nicht pep o g

01:31:55.380 --> 01:32:04.340
Peppo g natürlich pep o g das ist die frage die ich nachher auch dann stellen werde hier was sind fünf stunden in mikrosekunden

01:32:07.460 --> 01:32:09.460
So

01:32:09.460 --> 01:32:16.740
Das funktioniert alles deswegen minimiere ich das ich wollte jetzt den ganzen krempel an mein home assistant per mqtt schicken also sprich

01:32:16.980 --> 01:32:18.980
Das ist mein test home assistant

01:32:19.700 --> 01:32:22.740
Wo wir letztens mal auch den stromverbrauch versucht haben

01:32:22.740 --> 01:32:29.300
rein zu pumpen das ist mein test home assistant wir gucken jetzt dass wir das ganze per mqtt an den home assistant geschickt bekommen

01:32:31.220 --> 01:32:33.220
Per mqtt

01:32:35.860 --> 01:32:37.860
Die die twitch viewer

01:32:38.500 --> 01:32:46.260
Spacken auch ganz schön rum gerade oder wenn ich mir das hier angucke eben war es 130 jetzt in 234 ohne host

01:32:47.220 --> 01:32:49.220
twitch please

01:32:49.460 --> 01:32:51.460
Was ist da los?

01:32:51.460 --> 01:32:55.380
Was ist da los wieder? Ich glaube es war die ganze zeit schon so was in dem dreh

01:32:56.580 --> 01:32:58.580
Nun das twitch wieder das nicht gecheckt hat

01:33:06.820 --> 01:33:14.180
Weil vorher war es auch schon 200 und auf einmal ist es instant gejobbed auf 130 jetzt wieder hoch und weiß nicht viewbots

01:33:16.580 --> 01:33:20.340
So da sind wir vorher stehen geblieben wir sind stehen geblieben bein wir connect

01:33:20.340 --> 01:33:24.820
Per wi-fi und wir wollen den kram selbst machen wir connecten uns per wi-fi

01:33:25.540 --> 01:33:26.740
zum

01:33:26.740 --> 01:33:33.860
Wlan haben wir schon gemacht guck wenn ich den controller mal resetter mit dem knopf dann sieht man connecting wi-fi bla bla bla bla

01:33:34.820 --> 01:33:36.260
ip

01:33:36.260 --> 01:33:38.660
1221 68 60 15 114

01:33:40.660 --> 01:33:42.660
Ah gut

01:33:43.460 --> 01:33:45.460
Nicht zu sagen

01:33:45.460 --> 01:33:47.460
exzellent

01:33:47.460 --> 01:33:49.460
Warum gibt es eigentlich?

01:33:49.460 --> 01:33:51.460
eigentlich nicht

01:33:51.460 --> 01:33:53.460
äh

01:33:53.460 --> 01:33:58.500
Printeln das wäre dann warum gibt es nicht sowas das wäre dann

01:33:59.460 --> 01:34:02.340
Newline text und noch mal newline hinten dran printen

01:34:05.700 --> 01:34:10.660
Sowas sollte mal erfunden werden ich bin bestimmt nicht der einzige der sowas schon mal sich überlegt hat

01:34:10.660 --> 01:34:13.940
Okay, ich bin ich der einzig das ich das schon überlegt hat

01:34:14.820 --> 01:34:20.260
Aber nicht wie leute guckt mal vier ergebnisse auf google sonst nix

01:34:21.940 --> 01:34:23.940
Gleich guitar projekt erstellen

01:34:23.940 --> 01:34:39.940
Ergebnisse auf google sonst nix gleich guitar projekt erstellen printeln

01:34:42.660 --> 01:34:44.740
Okay also weiter im text

01:34:44.740 --> 01:34:49.460
Ich wollte das ganze per mqtt an mein home assistant schicken

01:34:50.980 --> 01:35:00.180
Also wir verbinden uns per wlan passt wir geben die ip aus passt auch so das heißt jetzt wird's big brain nämlich

01:35:01.700 --> 01:35:08.660
Wenn man per home assistant per mqtt was schicken will dann ist das format ein bisschen

01:35:08.660 --> 01:35:13.380
Paintschamp ich zeige euch das mal

01:35:17.620 --> 01:35:20.580
Es gibt nämlich zwei verschiedene varianten wie man das machen kann

01:35:22.420 --> 01:35:26.180
Also wie gesagt home assistant ist hier die heim automatisierungslösung die ich verwende

01:35:26.980 --> 01:35:34.260
Und man kann dort über mqtt geräte anlegen lassen und das versuche ich jetzt mal also ich weiß wie es geht also ich kann das copy pasten

01:35:34.260 --> 01:35:41.540
Also sprich wir lesen jetzt hier die sensoren aus übertragen die da ein home assistant dass ich dass ich dort was mit anfangen kann

01:35:42.020 --> 01:35:49.620
Ja, dass ich dort im dashboard machen kann oder was auch immer also die werte übertragen wir die heim automatisierung so es die haben so einen die haben so einen

01:35:51.220 --> 01:35:53.780
So ein eigenes protokoll wie man geräte anlegt

01:35:55.060 --> 01:35:59.860
Das sieht ungefähr so aus ja man muss erst mal sagen was für ein gerät man anlegt

01:35:59.860 --> 01:36:03.620
Dann darf dann kann man ihm sagen wie das heißen soll

01:36:04.420 --> 01:36:09.060
Und dann muss man ihm sagen was das für ein gerät ist in dem fall ist es in motion detection

01:36:09.460 --> 01:36:16.180
Es gibt auch noch einen energie monitor oder was auch immer man kann noch einen namen vergeben und man kann ihm sagen wo er in zukunft den

01:36:16.180 --> 01:36:18.660
Aktuellen status zu dem gerät findet das ist

01:36:19.220 --> 01:36:25.460
Allerdings nicht die ganze wahrheit es gibt noch die neuere variant die hier gar nicht drinne steht

01:36:25.460 --> 01:36:33.860
In dieser doku man kann nicht nur einzelne sensoren anlegen über über mqtt also das wäre zum beispiel ein einzelner sensor

01:36:34.820 --> 01:36:41.220
Zum beispiel hier diesen sensor haben wir haben das letzte mal von hand angelegt über mqtt hier sensor watt schämen first floor energy

01:36:41.460 --> 01:36:44.020
Das war wo ich mein stromzähler ausleser getestet habe

01:36:44.580 --> 01:36:50.740
Das ist das ist die halbe wahrheit es gibt eine neuere variant die ist viel besser die ist aber ein bisschen komplizierter in

01:36:50.740 --> 01:36:55.060
Ist auch jason was man hinschicken muss aber ist ein bisschen komplizierter und zwar

01:36:55.860 --> 01:36:59.140
Man kann ein komplettes gerät erstellen lassen

01:36:59.860 --> 01:37:07.140
Über über mqtt im home assistant das steht als komplettes gerät da drinne mit unterschiedlichen sensoren das heißt ich weiß auch

01:37:07.380 --> 01:37:13.780
Zu welchem gerät dieser sensor gehört und das ist richtig big brain und das ist das wie es alle aktuellen integrationen machen

01:37:14.100 --> 01:37:17.380
Und wie ich das auch machen will ich weiß auch wie es bei mqtt ist

01:37:17.380 --> 01:37:24.420
Und wie ich das auch machen will ich weiß auch wie es prinzipiell funktioniert weil ich habe das schon mal gemacht das muss ich jetzt nebenbei abgucken

01:37:25.380 --> 01:37:27.380
so

01:37:29.220 --> 01:37:34.260
Was soll das programm erzielen das erzielt schon folgendes ich habe einen sensor für

01:37:35.620 --> 01:37:37.620
bodenfeuchtigkeit temperatur und lichteinstrahlung

01:37:38.580 --> 01:37:43.340
Und da lese ich aktuell die werte draus aus wobei ich die werte nicht auslese

01:37:43.340 --> 01:37:51.260
Sondern der sensor broadcast die werte alle 30 sekunden und ich schneide die über bluetooth low energy low energy bluetooth mit

01:37:52.180 --> 01:37:59.940
Das einzige was ich alle fünf stunden querier von jedem gerät ist die ist der batterie der batterie stand ja du siehst auch hier das gerät

01:38:00.340 --> 01:38:01.620
broadcasted

01:38:01.620 --> 01:38:03.620
munter vor sich hin

01:38:04.900 --> 01:38:06.900
Der scan hängt schon wieder

01:38:06.900 --> 01:38:13.940
scan startet warum wie wie kann das sein dass der scan startet und der scan nicht aufhört das ist doch ein bug oder

01:38:14.260 --> 01:38:18.180
Oder wollte mich rollen ich habe kein bock dass das ding dass das ding crasht

01:38:20.340 --> 01:38:25.220
Guck mal der scan hängt schon wieder dabei dabei soll der einfacher der soll nach fünf sekunden ausgehen

01:38:25.220 --> 01:38:29.220
Nach fünf sekunden ausgehen

01:38:34.180 --> 01:38:37.380
Was mal so vielleicht geht es dann besser

01:38:40.180 --> 01:38:44.380
Was soll dadurch ermöglicht so habe ich ja ganz vergessen das ding kommt in kühlschrank

01:38:45.180 --> 01:38:50.980
Anhand dem licht sensor erkenne ich ob ich die tür aufgelassen habe zumindest so weit dass es licht noch angeht

01:38:50.980 --> 01:38:58.540
Und anhand der temperatur erkenne ich ob der kühlschrank irgendwelche probleme hat mein kühlschrank hat ein paar probleme da macht manchmal komische geräusche

01:38:58.940 --> 01:39:04.860
Den muss man manchmal rebooten dass er richtig funktioniert das heißt ich habe meine bedenken er gibt der nix den geist auf und ich kriege es nicht

01:39:04.860 --> 01:39:06.020
richtig mit

01:39:06.020 --> 01:39:09.220
An anderer denkbarer fall wäre auch keine ahnung man hat

01:39:10.020 --> 01:39:16.540
Stromprobleme oder irgendwie sonst wie was verstopft ist kaputt was auch immer man bekommt mit wenn der kühlschrank weil das ist halt

01:39:16.540 --> 01:39:20.700
Low energy und wireless und

01:39:22.140 --> 01:39:24.900
Da bekomme ich das quasi mit wenn man kühlschrank probleme hat und

01:39:26.300 --> 01:39:29.460
Natürlich man lernt wie es geht das natürlich auch eine wichtige geschichte

01:39:29.460 --> 01:39:42.460
So

01:39:47.780 --> 01:39:49.780
Dann würde ich sagen nehmen wir mal los also

01:39:50.660 --> 01:39:58.340
Das eigentlich auslesen funktioniert was der macht ist folgendes der scan nach geräten die sich melden wenn sich ein gerät also

01:39:58.340 --> 01:40:05.660
Der scan nach einem nach einem sensor nach einer art dieser sensoren und wenn er einen sensor gesehen hat

01:40:05.820 --> 01:40:10.720
Dann legt er eine neue neue sensor objekt an und speichert das hier in der map drinne

01:40:11.900 --> 01:40:16.980
Und update ist dann sobald hier neue neue werte neue werte reinkommen

01:40:17.140 --> 01:40:23.300
Und dann fragt er alle fünf stunden einmal den batteriestatus aktiv ab jetzt habe ich aber alles minimiert weil wir das nicht brauchen

01:40:23.300 --> 01:40:28.300
so und jetzt

01:40:30.820 --> 01:40:34.100
Aber mal verbindung zum mqtt server

01:40:37.220 --> 01:40:41.980
Das ist ein minimaler mqtt rapper den ich selbst gebaut habe weil das so

01:40:43.460 --> 01:40:44.780
Ja

01:40:44.780 --> 01:40:53.500
It's it's mqtt weil das so pains champig ist das eingebaute mqtt zu verwenden von dem

01:40:54.260 --> 01:41:00.660
Espressif framework ja aber das ist wirklich nicht großartig kompliziert hier gibt es zwei metoden publish eine message

01:41:04.260 --> 01:41:09.100
Macht das nicht probleme weil du mehrere hast ja das deswegen mache ich es auch so wie ich es mache guck mal

01:41:09.100 --> 01:41:15.620
Der scannt der scannt nach geräten so der findet ein gerät was er dann macht ist

01:41:18.220 --> 01:41:20.220
Was er dann macht moment

01:41:20.620 --> 01:41:27.460
Sobald ein gerät gefunden hat nicht immer noch am basteln schon wieder ich muss zwischendurch weg reifen wechsel ich habe jetzt erst wieder

01:41:27.460 --> 01:41:31.420
angefangen vor zehn minuten ich bin zwar schon länger ordn aber davor habe ich sinnlos rumgeschwätzt

01:41:31.740 --> 01:41:38.140
So und sobald ein gerät gefunden hat speichert das in dieser in dieser map drin das heißt wenn ein zweites gerät findet speichert das da auch

01:41:38.140 --> 01:41:43.180
Drinne das geht mit beliebig vielen geräten bis der ram von dem gerät alle bis der ram vom controller alles

01:41:44.740 --> 01:41:50.540
So und jetzt wollen wir das ganze mal per mqtt an homosystem zu schicken zur wlan verbindung funktioniert schon mal

01:41:52.500 --> 01:41:58.140
Das heißt wir legen jetzt mal ein mqtt server objekt an machen wir das hinten mal weg

01:42:00.020 --> 01:42:02.020
Also

01:42:02.340 --> 01:42:04.340
Helper it's

01:42:04.340 --> 01:42:06.340
Hallo

01:42:08.860 --> 01:42:14.020
Ich sollte das mal in namespace stecken das habe ich nämlich normalerweise

01:42:15.500 --> 01:42:21.020
Namespace namespace ist ein richtig richtiger pains champ in c++ sag es euch

01:42:25.940 --> 01:42:27.940
Helper

01:42:27.940 --> 01:42:33.540
It's mqtt so und wir brauchen den server

01:42:35.580 --> 01:42:41.980
User und ein password also server ist mqtt doppelt punkt doppelt slash

01:42:42.820 --> 01:42:44.820
192 168

01:42:44.820 --> 01:42:50.180
So ich bin jetzt gar nicht sicher ob ich da port mit angehen musste oder nicht wie habe ich das noch mal gebastelt

01:42:50.420 --> 01:42:55.780
Brauche ich ein port ne default port nimmt da standardmäßig ok alles klar brauche ich kein port und ich brauche nicht mehr

01:42:56.100 --> 01:42:58.580
MQTT davor zu schreiben weil er das automatisch macht

01:43:01.420 --> 01:43:03.420
So

01:43:03.420 --> 01:43:05.420
So

01:43:05.420 --> 01:43:07.420
So

01:43:07.420 --> 01:43:09.420
So

01:43:09.420 --> 01:43:11.420
So

01:43:11.420 --> 01:43:15.420
So

01:43:16.420 --> 01:43:20.780
Dann brauche ich ein password. Ich glaube ich atme 1 2 3 4 5 6 so wie ich mich kennen

01:43:22.340 --> 01:43:25.220
So wie ich mich kenn habe ich dann nix sinnvolles für vergeben

01:43:26.980 --> 01:43:30.360
Atmen 1 2 3 4 5 6 ja wer hätte denn was anderes erwarten können

01:43:32.320 --> 01:43:33.820
War klar

01:43:33.820 --> 01:43:36.640
Moin dm drill 40

01:43:36.640 --> 01:43:48.760
exzellent so jetzt sollte er sich dahin verconnecten und jetzt müsste ich sachen schicken können

01:43:48.760 --> 01:43:58.600
probieren wir das mal aus probieren wir das mal aus sub wir machen da wir lauschen mal an allem

01:43:58.600 --> 01:44:03.840
der wattchamp mehr ist da nicht drinnen außer das was wir das letzte mal schon geschickt haben so

01:44:03.840 --> 01:44:08.200
wir publishen jetzt einfach testweise meine message und gucken ob das funktioniert

01:44:08.200 --> 01:44:21.920
machen wir einfach hier mqtt publish topic keckw message 12345 oder so

01:44:21.920 --> 01:44:30.880
so und das sollte jetzt eigentlich hier gleich rauskommen ach fuck ne das funktioniert ja nicht

01:44:30.880 --> 01:44:39.040
ich habe den exis point umgestöpselt ich habe den exis point in in das in das wlan wlan gesteckt

01:44:39.040 --> 01:44:49.240
und davon habe ich jetzt ja keinen zukunft mehr auf die kiste chat seid ihr schon drinnen ja

01:44:49.240 --> 01:45:01.120
okay äußerst interessant dass der keine fehlermeldung schmeißt wenn er nicht

01:45:01.120 --> 01:45:14.720
connecten kann ah doch hier guck mal mqtt timeout ok alles gut funktioniert nicht

01:45:14.720 --> 01:45:22.480
ich muss mal kurz eine feierball freischaltung machen auf dem zweiten bildschirm auf die kiste

01:45:22.480 --> 01:45:45.040
was habe ich gesagt 1 2 1 6 8 2 punkt 100 300 ja hier ok kurz kurz freischaltung machen zack

01:45:45.040 --> 01:46:12.600
mqtt destination 2 1 3 9

01:46:16.040 --> 01:46:18.120
so

01:46:18.120 --> 01:46:29.480
protokoll tcp destination port 1883 was ist die fault mqtt 1883 oder

01:46:32.480 --> 01:46:34.200
ja ok

01:46:34.200 --> 01:46:42.680
ok destination address absender wlan hier xy

01:46:42.680 --> 01:46:54.720
2 1 3 9 ok es sollte jetzt funktionieren

01:46:54.720 --> 01:46:59.240
guck mal feierball freischaltung gemacht schon funktioniert

01:46:59.240 --> 01:47:13.240
gut also ich kann sachen publishen gut jetzt muss ich noch einbauen dass der was

01:47:13.240 --> 01:47:17.320
heißt nur noch nur noch einbauen dass der home assistant kompatible

01:47:17.320 --> 01:47:23.000
sensordaten published ok das funktioniert also wie man das macht kann ich euch zeigen

01:47:23.000 --> 01:47:33.480
das copy paste ich mir aber mal oder ich gucke mir das zumindest ab wie das funktioniert also

01:47:33.480 --> 01:47:39.680
wir brauchen zwei metoden die zwei zwei funktionen jetzt an der chat wir wissen ja wir schreiben

01:47:39.680 --> 01:47:54.640
nach einer arbeit darüber was ist der unterschied zwischen einer methode und einer funktion oh das

01:47:54.640 --> 01:48:05.840
dauert schon zu lang das gibt abzüge ich sage es euch ist das gleiche fast es ist nicht wirklich

01:48:05.840 --> 01:48:12.800
viel unterschied im prinzip ist es das gleiche mit einem einzigen unterschied ja ja richtig

01:48:12.800 --> 01:48:20.440
captain peng kennt sich aus exzellent exzellent nee was auch immer falsches emote aber ja das

01:48:20.440 --> 01:48:31.800
ist richtig also metoden sind funktionen innerhalb von der klasse oder funktionen die bestandteil

01:48:31.800 --> 01:48:37.000
von einer klasse sind sind metoden warum auch immer man das so genannt hat keine ahnung

01:48:37.000 --> 01:48:43.560
es haben sich mal irgendwelche big brain leute ausgedacht das ist aber so ist es nicht innerhalb

01:48:43.560 --> 01:48:52.960
von objekten korrekt korrekt jetzt wird es aber jetzt wird aber ganz ganz genau ja also

01:48:52.960 --> 01:49:05.920
wir brauchen zwei sachen und zwar wir brauchen einmal was mqtt publish announce und wir brauchen

01:49:05.920 --> 01:49:16.360
sowas in der richtung wie mqtt publish value so weil man muss man muss dass man home assistant

01:49:16.360 --> 01:49:22.800
compatible sensor daten veröffentlichen kann sodass das dann hier drinne steht muss man

01:49:22.800 --> 01:49:29.160
das in zwei schritten machen man muss einmal das gerät anlegen von dem das gesendet wird

01:49:29.160 --> 01:49:33.200
dass es als erkannt wird diese sensor daten kommen alle vom gleichen gerät drin für

01:49:33.200 --> 01:49:39.520
neun stange für den sub und dann muss man regelmäßig neue werte publishen so nachdem

01:49:39.520 --> 01:49:43.880
wir da jetzt jason sachen machen müssen werde ich mal eine library hinzufügen nämlich es

01:49:43.880 --> 01:50:02.560
gibt eine das will einfach nicht mehr es hat gedacht kein bock nur mal sicherstellen dass

01:50:02.560 --> 01:50:30.680
es auch weg ist hat es kann man visual studio geupdatet gut nice sehr gut excellent hast

01:50:30.680 --> 01:50:35.040
du eigentlich auch kontakt mit fedor all of cookies wir hatten nie großartig kontakt so

01:50:35.040 --> 01:50:41.760
mal ganz vereinzelt aber nie habe ich in letzter zeit habe ich nicht wirklich mit ihm gesprochen

01:50:41.760 --> 01:50:54.760
also schon ewig her so sind wir stehen geblieben wir wollen sensor daten publishen genau weil

01:50:54.760 --> 01:50:58.720
dann hatten wir den vorteil dass das hier als einzelnes gerät auftaucht das heißt

01:50:58.720 --> 01:51:08.720
ich habe da ein gerät hier drin stehen nämlich den cool champ in dem fall warum haben wir

01:51:08.720 --> 01:51:14.780
den eigentlich cool champ genannt weil es für kühlschrank ist der cool champ so ich

01:51:14.780 --> 01:51:24.600
brauche eine library für jason kram weil jason zu schreiben mit c++ string manipulation

01:51:24.600 --> 01:51:37.160
es sagt deswegen nehmen wir einfach das hier hinzufügen in den cool champ gut und jetzt

01:51:37.160 --> 01:51:42.000
können wir nämlich anfangen also wir müssen jetzt erstmal ankündigen wenn es einen neuen

01:51:42.000 --> 01:51:47.680
sensor gibt zu welchem gerät das ganze gehört da muss ich mir jetzt ein paar sachen copy

01:51:47.680 --> 01:51:54.880
pasten und zwar wir brauchen einmal den name von dem für das gerät beziehungsweise nicht

01:51:54.880 --> 01:52:00.840
für das gerät wir brauchen einen namen für den sensor das projekt hieß doch anfangs

01:52:00.840 --> 01:52:05.360
noch flora champ ja kann sein aber der chat hat gesagt ich soll uns unbedingt cool champ

01:52:05.360 --> 01:52:16.360
ich habe das halt auch mal gemacht ja ich weiß ich weiß es ist meistens keine gute

01:52:16.360 --> 01:52:24.480
idee auf den chat zu hören aber in dem fall fand ich cool champ lustiger so also wir brauchen

01:52:24.480 --> 01:52:30.440
dann ein name für den sensor wenn man den ankündigen wir brauchen eine device class

01:52:30.440 --> 01:52:39.440
das ist in home assistant so das habe ich glaube ich vorher schon gezeigt dass es das

01:52:39.440 --> 01:52:44.840
home assistant weiß wie er das ganze darstellen soll da gibt es dann so sachen wie batteriestatus

01:52:44.840 --> 01:52:50.360
energie luftfeuchtigkeit licht signalstärke und so ich muss ihm also sagen was das ist

01:52:50.360 --> 01:52:57.080
und ich muss ihm sagen welche einheit das ganze hat so und jetzt machen wir ein bisschen

01:52:57.080 --> 01:53:04.800
jason magic das copy paste das copy paste ich mir jetzt hier an der stelle einfach mal also

01:53:04.800 --> 01:53:11.000
man braucht einen state topic das ist das was home assistant sagt unter welchem mqtt

01:53:11.000 --> 01:53:19.440
fahrt er dann den neuen status für den jeweiligen sensor findet wie willst du den sensor anbinden

01:53:19.440 --> 01:53:28.880
easy das alles schon fertig ich schmeiß dieses ding im kühlschrank ja ich krieg ich brauche

01:53:28.880 --> 01:53:36.040
kein wlan signal das ist low energy bluetooth allerdings ist das beides 2,4 gigahertz aber

01:53:36.040 --> 01:53:45.120
wir haben es ausprobiert es geht ohne problem aus dem kühlschrank raus funktioniert aber

01:53:45.120 --> 01:53:49.200
schon ausprobiert was ist die reichweite von dem teil naja ich bin so ungefähr würde

01:53:49.200 --> 01:53:58.120
ich mal sagen fünf meter vielleicht weg oder so viel weiter wird es nicht gehen funktioniert

01:53:58.120 --> 01:54:04.000
in home assistant dann die mqtt autodiscovery genau deswegen das programmieren wir gerade

01:54:04.000 --> 01:54:09.520
dass die autodiscovery funktioniert inklusive neustart überleben und dass alles vom dass

01:54:09.520 --> 01:54:14.480
man sieht dass alles vom gleichen gerät kommt also man muss erstmal man braucht eine name

01:54:14.480 --> 01:54:21.600
für den sensor ja also sowas wie sowas wie cool champ dann mech oder so von dem jeweiligen

01:54:21.600 --> 01:54:30.480
gerät ok also man braucht eine name für den für den jeweiligen sensor dann braucht man

01:54:30.480 --> 01:54:39.720
als nächstes ein identifier und identifier müssen wir ein bisschen mehr muss man bisschen

01:54:39.720 --> 01:54:46.080
big brainiger machen jetzt fragt ihr euch natürlich was ist der unterschied zwischen

01:54:46.080 --> 01:54:52.680
dem state topic und dem identifier der unterschied ist dass der identifier einheitlich gleich

01:54:52.680 --> 01:54:58.680
sein muss für alle sensoren von der gleichen hardware nur dann werden die zusammengefasst

01:54:58.680 --> 01:55:05.720
zu hier in der config quasi eine hardware hat 20 sensoren das heißt der identifier

01:55:05.720 --> 01:55:11.160
muss für alle muss für alle sensoren die ich hier anlege gleich sein also sprich der

01:55:11.160 --> 01:55:15.400
identifier ist quasi das was die hardware identifiziert wo die sensoren dran hängen

01:55:15.400 --> 01:55:19.880
jetzt mal sinnbildlich die hängen nicht wirklich da dran aber die hardware die sensoren meldet

01:55:19.880 --> 01:55:25.040
so nennen wir es mal identifier so und dann brauchen wir also jetzt müssen wir uns überlegen

01:55:25.040 --> 01:55:30.080
wie setzen wir das zusammen dass das das das unic ist ja also das sprich dass alle geräte

01:55:30.080 --> 01:55:34.920
die die sich die sich melden also sprich wenn ich mal ein weiteres projekt habe der watt

01:55:34.920 --> 01:55:38.440
champ zum beispiel ist auch drin dass sie einheitliche namen haben und ich habe mich

01:55:38.440 --> 01:55:41.960
jetzt für folgendes entschieden ich mache erst mal ein projektname rein in dem fall

01:55:41.960 --> 01:55:54.440
ist es der cool champ cool champ underscore bei ja so dann schreibe ich rein das mache ich

01:55:54.440 --> 01:55:59.040
übrigens das habe ich beim watt champ auch so gemacht dass ich es erkenne esp 32 habe

01:55:59.040 --> 01:56:02.840
ich schreibe noch die plattform rein underscore beide weil ich könnte den underscore ohne

01:56:02.840 --> 01:56:11.200
problem auch hier hin machen underscore bin das nächste mal für einen mikrowellensensor

01:56:11.200 --> 01:56:18.280
sowas gibt es es gibt ultraschall sensor mikrowellensensor keine ahnung ob sowas gibt aber ultraschall

01:56:18.280 --> 01:56:25.440
sensoren gibt es ist für reichweitenmessung ganz gut so dann jetzt jetzt kommt ein bisschen

01:56:25.440 --> 01:56:42.200
jetzt kommt ein bisschen magic und zwar wir nehmen esp mech so also die bezeichnung für

01:56:42.200 --> 01:56:51.840
unsere hardware ist immer projektname hardware name und die netzwerk mech vom controller

01:56:51.840 --> 01:56:57.440
das bedeutet diese kombination ist ziemlich garantiert weltweit unic und ich muss mir

01:56:57.440 --> 01:57:00.800
keine gedanken machen bei weiteren projekten dass ich da irgendwie mal doppelte sachen

01:57:00.800 --> 01:57:10.560
bekomme so dann brauchen wir als nächstes jeder sensor braucht eine eigene id warum

01:57:10.560 --> 01:57:16.640
das neben einem eigenen topic noch mal eine eigene id braucht weiß ich nicht aber home

01:57:16.640 --> 01:57:27.560
assistant sagt dass man das braucht kann man das hier nehmen also dies unic sensor id

01:57:27.560 --> 01:57:38.440
ist quasi der name vom sensor plus der identifier von der hardware genau so als nächstes braucht

01:57:38.440 --> 01:57:46.080
man ein availability topic das ist das was home assistant sagt ob das gerät offline

01:57:46.080 --> 01:57:50.360
oder online ist ohne funktioniert es btw nicht ich finde es ein bisschen schade dass

01:57:50.360 --> 01:57:56.520
sie das schlecht dokumentiert haben man kommt man findet da irgendwie nicht so viel so danach

01:57:56.520 --> 01:58:08.480
braucht man ein config topic das ist auch magic das ist jetzt nicht für den sensor

01:58:08.480 --> 01:58:16.640
state sondern das ist zum einmaligen anlegen von diesem sensor weil so und jetzt kommt

01:58:16.640 --> 01:58:22.360
jason gedöns ich copy paste mir das jetzt einfach mal und dann erkläre ich was es macht

01:58:22.360 --> 01:58:26.120
weil ich habe das schon mal gemacht ich kriege das jetzt nicht noch mal hier zusammen gereimt

01:58:26.120 --> 01:58:32.160
und ich das kopiere also wir brauchen ein jason dokument das ist das wird eine funktion stink

01:58:32.160 --> 01:58:36.880
normale funktion man könnte das auch schön kapseln in irgendeiner klasse wir legen den

01:58:36.880 --> 01:58:41.040
jason dokument an was ich übrigens noch mal tun muss dass es funktioniert

01:58:41.040 --> 01:58:53.600
und wie nur jason perfekt jetzt sollte das eigentlich erkennen hoffe ich mal oder auch

01:58:53.600 --> 01:59:02.440
nicht hat er erkannt exzellent so jason dokument da legen wir den neuen key an availability

01:59:02.440 --> 01:59:05.800
ich werde es übrigens gleich mal unten drunter dann printen dass man sieht wie das wie das

01:59:05.800 --> 01:59:11.240
jason aussieht was ich da hinschicke key availability und da drinne legen wir neues objekt an also

01:59:11.240 --> 01:59:18.080
sprich das ist dann quasi sowas hier neues objekt und da drinne steht dann availability

01:59:18.080 --> 01:59:22.480
und das ist wiederum ein eigenes jason array weil das halt so aussehen muss wie es aussieht

01:59:22.480 --> 01:59:30.520
und da legen wir objekt an und das brauchen ein topic und dann verweisen wir auf dieses

01:59:30.520 --> 01:59:40.200
topic den anderen kram kopiere ich jetzt auch einfach mal

01:59:40.200 --> 01:59:45.520
das nächste ist was die hardware identifiziert das muss überall gleich sein also da kann

01:59:45.520 --> 01:59:52.400
ich mir ausdenken aber der identifier muss überall gleich sein

01:59:52.400 --> 01:59:58.200
dann lege ich den sensor somit an habe ich das nicht unit genannt überhaupt geht das

01:59:58.200 --> 02:00:19.480
nicht unit ist undefined ach ich hab keck wait unit alter ich kann ja mal schreiben string

02:00:19.480 --> 02:00:27.560
wind so da muss man auch die plattform setzen über das das ganze gemeldet wird ok so und

02:00:27.560 --> 02:00:34.760
als letztes muss man diese zwei sachen publishen habe ich oben mqtt angelegt jawoll als am ende

02:00:34.760 --> 02:00:43.520
muss man die muss man zwei sachen publishen habe ich doch am ende muss man zwei sachen

02:00:43.520 --> 02:00:56.800
publishen geht das nicht ah low brain ich kann kein jason dokument direkt publishen ok

02:00:56.800 --> 02:01:03.160
das ergibt sinn also am ende muss man publishen dieses komplette ding dieses komplette jason

02:01:03.160 --> 02:01:08.020
und man muss das availability topic auf online setzen dass es funktioniert wir überschreiben

02:01:08.020 --> 02:01:14.360
das an der stelle noch mal schnell und ich kann das ich guck das ich guck das jetzt auch

02:01:14.360 --> 02:01:26.960
einfach mal schnell ab ich das wie ich das gemacht habe publish aha so habe ich das

02:01:26.960 --> 02:01:45.000
gemacht kann ich auch jason documents direkt publishen ok wunderbar so und jetzt sollte

02:01:45.000 --> 02:01:48.720
der sensor in home assistant angelegt werden jetzt können wir gleich mal ausprobieren

02:01:48.720 --> 02:01:54.320
ob das ganze funktioniert wir legen den sensor jetzt nur an und bei jedem neuen bei jedem

02:01:54.320 --> 02:02:03.480
neuen wert den das sensor bekommt das muss ich dann pushen hier drinnen das ist dann

02:02:03.480 --> 02:02:11.840
aber einfacher das sieht dann im endeffekt einfach nur noch so aus das denke ich mir

02:02:11.840 --> 02:02:15.920
nicht aus das habe ich schon mal gemacht weil dieses format ist echt nicht ohne dahinter

02:02:15.920 --> 02:02:25.480
zu kommen wenn es spannend und satisfying ist ja das ist ja nice so also jetzt können

02:02:25.480 --> 02:02:33.760
wir den sensor anlegen ich würde sagen sobald dann den sensor discovered muss ich mal kurz

02:02:33.760 --> 02:02:40.360
gucken wie machen das jetzt am besten so also sobald dann den sensor sensors irgendwie

02:02:40.360 --> 02:02:50.040
add oder sowas genau also sobald denn den sensor das erste mal erkennt publishen wir

02:02:50.040 --> 02:02:56.960
das also sagen wir mqtt announce so was brauchen wir name da bin ich mir nur jetzt sicher was

02:02:56.960 --> 02:03:07.920
wir machen ja lithium source ist pence champ ich weiß ja so wir machen also sensor wir

02:03:07.920 --> 02:03:22.000
brauchen drei sensoren wir brauchen temperature unit ist ja grad Celsius wir brauchen battery

02:03:22.000 --> 02:03:30.160
unit ist prozent und wir brauchen das kann ich nicht schreiben da muss ich nachgucken

02:03:30.160 --> 02:03:34.880
illuminance das haben wir gestern gelernt wie man es ausspricht ich kann es immer noch

02:03:34.880 --> 02:03:41.600
nicht aussprechen das ist ein lux und jetzt muss ich den namen generieren und die einzig

02:03:41.600 --> 02:03:47.440
sinnvolle variante der name für den sensor zu generieren ist die meck die meck adresse

02:03:47.440 --> 02:03:57.400
zu nehmen von dem jeweiligen flora sensor weil ansonsten hast du nichts was unique ist

02:03:57.400 --> 02:04:10.560
wir können es aber testweise mal so machen temp 2 bad 3 elu oder so dass wir einfach

02:04:10.560 --> 02:04:15.760
mal gucken ob er das denn anlegt so jetzt attachen wir uns an den mqtt broker und gucken

02:04:15.760 --> 02:04:23.840
mal ob das anlegen prinzipiell funktioniert oder obs monka smoke macht also von der idee

02:04:23.840 --> 02:04:44.640
auf fack was da ist es doch das ist zu weit unten pence champiges c++ das muss irgendwie

02:04:44.640 --> 02:05:03.880
hier oben hin oder was ja mein wegen machst du jetzt was hat jetzt für schmerzen also

02:05:03.880 --> 02:05:08.360
schauen ob das funktioniert wenn alles funktioniert sollte ich jetzt ich bin mir relativ sicher

02:05:08.360 --> 02:05:15.520
dass funktioniert weil ich habe es schon gemacht mit dem also da wo ich her copy pastet habe

02:05:15.520 --> 02:05:21.200
wenn alles funktioniert sollte ich jetzt ein gerät bekommen wo dann alles drinne steht

02:05:21.200 --> 02:05:28.040
für die sensoren erst mal muss das gen aber erfolgreich sein dass er eine mqtt nachricht

02:05:28.040 --> 02:05:49.680
schickt

02:05:49.680 --> 02:06:01.760
warum ist es gecrasht

02:06:01.760 --> 02:06:23.240
was ist das problem kann das sein eigentlich nicht warum crash das

02:06:23.240 --> 02:06:37.840
warum crash das und und und arduino jason äh warum genau crash das ok wir machen das

02:06:37.840 --> 02:06:42.560
mal anders ich mach das mal nicht hier in diesem bluetooth ding drinne wir machen das

02:06:42.560 --> 02:06:55.720
immer hier im setup

02:06:55.720 --> 02:06:59.320
da ist nämlich noch kein bluetooth am start nicht dass ich das jetzt in die quere kommt

02:06:59.320 --> 02:07:05.000
wenn ich das der wähler an was schicken will während das bluetooth zeug hier dinger macht

02:07:05.000 --> 02:07:12.280
da muss man ein bisschen aufpassen aber schauen wir mal also jetzt jetzt kann ihm ja kein bluetooth

02:07:12.280 --> 02:07:17.280
in die quere kommen wenn es jetzt wieder crash dann habe ich auf jeden fall mich irgendwie

02:07:17.280 --> 02:07:27.720
verkoppi pace und hab irgendeinen bug drin so connecting wifi und jetzt connecting please

02:07:27.720 --> 02:07:37.480
ah guck jetzt hat er veröffentlicht der cool champ guck ein device ein device gefunden

02:07:37.480 --> 02:07:43.200
der cool champ mit drei sensoren und ich weiß nicht wer im chat gefragt hat aber ja das

02:07:43.200 --> 02:07:51.120
siehste so erkennst du homos ist dann richtig er erkennt es ist ein gerät mit drei sensoren

02:07:51.120 --> 02:07:58.560
wenn man das so veröffentlicht das ist nice oder also im prinzip so so muss das so muss

02:07:58.560 --> 02:08:06.520
das machen so jetzt habe ich natürlich ein problem warum warum hat es warum äh kack

02:08:06.520 --> 02:08:15.600
das mit beim scannen ab ich hab ne idee woran das liegt wir machen das so äh wir werden

02:08:15.600 --> 02:08:18.400
das wir werden das folgendermaßen machen wir machen wir machen einfach ein paar sleeps

02:08:18.400 --> 02:08:30.960
rein andere chance haben wir gar nicht wir machen wir machen ein paar sleeps rein wobei

02:08:30.960 --> 02:08:35.160
vielleicht kann man das gar nicht vielleicht kann ich gar kein wlan schicken hier im hier

02:08:35.160 --> 02:08:49.440
im im bluetooth zeug ok ich sollte auf jeden fall mal zwei sachen machen noch wobei ich

02:08:49.440 --> 02:08:55.560
greife dann ja nicht parallel drauf zu ne ich greife nicht parallel drauf zu es ist

02:08:55.560 --> 02:09:00.600
eigentlich muss ich das überhaupt nicht locken macht es ja ich macht es ja nacheinander ich

02:09:00.600 --> 02:09:08.360
mache den scan und dann mache ich und dann mache ich die schleife also ok wir machen

02:09:08.360 --> 02:09:17.480
leute wir machen hier oben noch mal ein delay hin hier oben noch mal ein delay hin so einfach

02:09:17.480 --> 02:09:38.920
mal ein bisschen ja gut was anderes fällt mir jetzt nicht ein der scan sollte ich das

02:09:38.920 --> 02:09:46.160
vielleicht umdrehen sollte ich das vielleicht umdrehen zuerst scannen und dann das hier

02:09:46.160 --> 02:09:56.960
machen mit dem update von dem sensor und dann warten ok gucken wir mal das ist natürlich

02:09:56.960 --> 02:10:03.200
doof oder oder ich darf das kann das in diesem bluetooth callback gar nicht machen was ziemlich

02:10:03.200 --> 02:10:09.640
doof ist weil ich muss es ja dynamisch für jedes gerät machen aber kein ding ich kann

02:10:09.640 --> 02:10:24.680
das auch in der schleife machen das ist gar kein ding so geht das jetzt come on bra so

02:10:24.680 --> 02:10:37.360
scan scan scan ah kommt mal jetzt hat das gefunden battery ah jetzt gehts jetzt funs ok warum

02:10:37.360 --> 02:10:42.880
genau geht das jetzt und vorher ging es nicht was war was war jetzt das kaputte da dran

02:10:42.880 --> 02:10:51.360
das habe ich nicht so ganz kapiert aber anscheinend gehts jetzt ok nice umgefuddelt ip leak

02:10:51.360 --> 02:11:06.680
umg seid ihr schon drin chat wer ist schon da ip leak jetzt wirds gefährlicher jetzt

02:11:06.680 --> 02:11:11.360
wirds hart jetzt wirds jetzt wirds ganz kritisch hier gleich gleich muss ich hier lockdown

02:11:11.360 --> 02:11:23.360
machen alles abschalten ok aber das funktioniert gut so und jetzt muss ich noch die sensorwerte

02:11:23.360 --> 02:11:30.760
übertragen das heißt jedes mal wenn ich ein ach im moment ich muss auch dafür sorgen

02:11:30.760 --> 02:11:38.600
dass die ok wir machen das einfach nur mal testweise jetzt mit einem sensor normalerweise

02:11:38.600 --> 02:11:45.160
müsste ich jetzt sowas machen nur mal so weil ich habe jetzt nur ein sensor in reichweite

02:11:45.160 --> 02:11:49.360
von diesen dingern also sprich nur ein sensor hier von in reichweite wenn ich mehrere hätte

02:11:49.360 --> 02:11:53.540
würde das natürlich nicht funktionieren ich kann nicht jeden sensor ein temp nennen die

02:11:53.540 --> 02:12:01.720
müssen unic sein also sprich ich müsste dann sowas machen wie mqtt oder sagen wir mal

02:12:01.720 --> 02:12:12.200
irgendwie name mqtt name und dann müsste ich dann quasi sowas machen wie sensor get

02:12:12.200 --> 02:12:21.960
address ane hier brauchst grad habe ich doch hier oben address also sprich ich brauche

02:12:21.960 --> 02:12:32.120
die meck ich brauche die meck davon oder wie auch immer string oder wie ist das hier to

02:12:32.120 --> 02:12:37.320
string also ich müsste guck hier da stehts ja ich müsste die meck nehmen convert address

02:12:37.320 --> 02:12:49.840
string representation addresses in the format ok also sprich ich müsste also ich brauche

02:12:49.840 --> 02:12:54.280
die meck adresse und die meck adresse muss in den namen rein dass es unic ist wisst ihr

02:12:54.280 --> 02:12:59.360
was ich mein also weil der zweite sensor funktioniert ja nicht ich kann ja nicht beide sensoren

02:12:59.360 --> 02:13:03.320
hinzufügen mit dem gleichen namen das klappt ja nicht also ich müsste ich müsste sowas

02:13:03.320 --> 02:13:14.240
machen wie to string und am besten noch nicht einfach nur to string sondern mqtt name replace

02:13:14.240 --> 02:13:23.240
weil doppelpunkte mag er nicht doppelpunkte replace zu underscore oder sowas warum geht

02:13:23.240 --> 02:13:32.080
das nicht was ist das wieder für c++ shit warum macht string replace nicht einfach das

02:13:32.080 --> 02:13:38.080
was man erwartet nämlich ein zeichen durch ein anderes ersetzen replace characters with

02:13:38.080 --> 02:14:03.920
value from another string what ok dann c++ string replace was was was ist das wieder

02:14:03.920 --> 02:14:15.360
für den kack warum muss man da irgendeine länge angeben ich will den einen charakter

02:14:15.360 --> 02:14:19.680
den anderen charakter ersetzen ist das zu kompliziert oder was ok wisst ihr was wir

02:14:19.680 --> 02:14:30.080
machen wir verwenden einfach kein c++ string wir wandeln einfach in aduino string um weil

02:14:30.080 --> 02:14:37.720
der aduino string da macht genau das jetzt ist es jetzt ist es ein aduino string der

02:14:37.720 --> 02:14:42.880
aduino string macht das ein charakter durch den anderen charakter excellent wunderbar

02:14:42.880 --> 02:14:58.440
so und jetzt können wir den kram nämlich auch folgendermaßen nennen genau jetzt kann

02:14:58.440 --> 02:15:06.800
man das nämlich auch so nennen nicht ein stemp sondern ach du leute gleich huge mac adressen

02:15:06.800 --> 02:15:16.560
leak massive mac adressen leak von meinem sensor by the way das sind custom funktionen von

02:15:16.560 --> 02:15:24.880
mir die ich mit mit hier fmt lip gemacht habe weil weil der standards standards string formatting

02:15:24.880 --> 02:15:38.000
in c++ ist mir auch zu pains champ ich so also das heißt wir nennen das ding jetzt temp underscore

02:15:38.000 --> 02:15:57.440
ok moment chat include linux in it das klingt wie irgendwas was du lokal bräuchtest oder

02:15:57.440 --> 02:16:08.600
nee das ist irgendwas aus dem aus dem aus dem linux kernel dann hast du nicht das dann

02:16:08.600 --> 02:16:20.520
hast du nicht alles installiert was du brauchst no such filer directory vielleicht ist ein

02:16:20.520 --> 02:16:32.720
make file auch einfach schlecht oder flashbang aller genau das musst du machen das musst

02:16:32.720 --> 02:16:46.000
du machen hast du das gemacht hast du das gemacht ok dann ist ein make file wahrscheinlich

02:16:46.000 --> 02:16:50.920
nicht passend dafür dann weiß ich nicht also das müsste dann mit müsste da eigentlich

02:16:50.920 --> 02:17:07.720
mit funktionieren so temp mqtt so und jetzt sollten die sensoren auch richtig heißen

02:17:07.720 --> 02:17:11.760
by the way ich lösche mal hier meinen sensor dass ich gleich sehe dass alles passt weil

02:17:11.760 --> 02:17:18.080
so sollen die dinger gar nicht mal heißen delete delete den cool champ temp das ist

02:17:18.080 --> 02:17:28.880
battery und das untere ist ilu nennen wir das einfach ilu gerade wenn wir schon alles

02:17:28.880 --> 02:17:56.240
abkürzen ist es auch einfach bett bett underscore kann man es noch speichern ok das ist eine

02:17:56.240 --> 02:18:02.040
gute idee gebe ich dir recht but so ist perfekt alle vier buchstaben lang triggert ja wäre

02:18:02.040 --> 02:18:07.320
ich auch triggert hast du recht ok jetzt wird das ding announced und so das passt alles

02:18:07.320 --> 02:18:13.720
name ist die mech adresse das heißt es ist auf jeden fall auch unic so und nun müssen

02:18:13.720 --> 02:18:20.800
wir werte veröffentlichen also sprich wir sagen jetzt an der stelle mqtt publish value

02:18:20.800 --> 02:18:36.320
name name ach so das muss ich jetzt jedes jahr jedes mal machen ok das ist nicht so

02:18:36.320 --> 02:18:47.720
nice aber gut was willst du machen also das hier ist die temperatur temperatur ist neuer

02:18:47.720 --> 02:18:54.080
wert ist value so jetzt bin ich mal gespannt ob das funktioniert so und dann haben wir

02:18:54.080 --> 02:19:03.640
hier unten noch neuer value für ilu so und wenn ich das jetzt hoch lade dann sollte der

02:19:03.640 --> 02:19:11.600
ein gerät anlegen die sensoren anlegen und neue werte pushen by the way die batterie

02:19:11.600 --> 02:19:21.040
brauche ich noch die batterie brauche ich noch batterie update ist hier unten dankeschön

02:19:21.040 --> 02:19:26.880
für den zapf wenn haben wir den ice freak 16 monate hyper subscription massives ab

02:19:26.880 --> 02:19:36.280
dankeschön so dann veröffentlichen wir das hier zwar sensor mqtt name value heißt ja

02:19:36.280 --> 02:19:39.520
hier natürlich immer wieder nicht value weil ich den kram nicht einheitlich benennet battery

02:19:39.520 --> 02:19:45.000
level alles klar upload so wenn wir jetzt richtig gemacht haben sollte alles funktionieren

02:19:45.000 --> 02:19:50.960
oh oh moment wir haben eine sache vergessen aber abbrechen ich sollte sicherstellen dass

02:19:50.960 --> 02:19:59.800
das announcing von diesem sensor nur passiert wenn der sensor neu erkannt wird würde ich

02:19:59.800 --> 02:20:06.880
sagen weil ansonsten veröffentlichen hat es jedes mal und es sagt ziemlich das soll

02:20:06.880 --> 02:20:16.360
es nur machen wenn der sensor neu erkannt wird also gucken wir mal sensor kann ich

02:20:16.360 --> 02:20:23.800
irgendwie checken has key oder so wie check ich ob in der ob ob was nen key in in in in

02:20:23.800 --> 02:20:34.960
der hashtag map drinne ist die komp much size die gibt es da kein has key oder sowas ok

02:20:34.960 --> 02:20:47.200
google standard map has key auto check if standard map contains key count

02:20:47.200 --> 02:21:05.240
die sprache macht mich fertig was bad wird noch mit richtig gute sprache aber ernsthaft

02:21:05.240 --> 02:21:12.640
was eine scheiße alter das kreis das cremium ist echt das können nur verrückte sein ups

02:21:12.640 --> 02:21:23.760
also was soll ich sagen sensors count count address so also sprich dann muss ich jetzt

02:21:23.760 --> 02:21:33.000
ein if mache wahrscheinlich if count address größer null ne gleich gleich null dann weiß

02:21:33.000 --> 02:21:37.520
ich es ist leer ob es wo habe ich den kram hier ich habe es gelöscht ich kann knob wo

02:21:37.520 --> 02:21:51.120
ist es da war es ich habe es gesehen da eben war es da hier das brauche ich so so jetzt

02:21:51.120 --> 02:22:02.360
wird es nur einmalig einmalig published man könnte man könnte das eigentlich auch das

02:22:02.360 --> 02:22:11.680
annuncen könnte man eigentlich auch hier in dieser schleife machen nämlich beim ersten

02:22:11.680 --> 02:22:17.680
batterie abfragen dann wird es alle fünf stunden republished es gibt keine null pointer

02:22:17.680 --> 02:22:22.720
exception weil ich keine exceptions aktiviert habe das heißt der esp crashed einfach wenn

02:22:22.720 --> 02:22:35.560
es exception gibt wisst ihr eine sache was die wirklich in c++ 13 erfinden sollten oder

02:22:35.560 --> 02:22:42.320
endlich mal machen sollten in c++ 13 die sollten endlich mal dafür sorgen dass dieser ganze

02:22:42.320 --> 02:22:48.560
header scheiß wegkommt die sollen sich mal ordentliches modul ordentliches export gedünst

02:22:48.560 --> 02:22:57.240
überlegen dann kann man nämlich auch ordentliche package manager für c++ machen und pains

02:22:57.240 --> 02:23:07.560
gem nicht so extrem rum das muss weg das ist das ist einfach so antik das muss weg du bist

02:23:07.560 --> 02:23:11.640
auf die sprache gekommen als erste sprache z zu lernen moment moment moment moment

02:23:11.640 --> 02:23:30.000
c ist super c++ ist kacke was was kommt also ich habe ich habe einen compiler mit c++ 20

02:23:30.000 --> 02:23:39.320
support und ich schreibe soweit es geht auch schon alles in line ne c++ hat eigentlich

02:23:39.320 --> 02:23:46.280
außer ein paar sündtags sachen mit ja gott sei dank aber das hat es in c++ 20 nicht reingeschafft

02:23:46.280 --> 02:23:51.000
ne das kommt erst mal 23 jetzt es hat es in 20 nicht einmal geschafft da habe ich mich

02:23:51.000 --> 02:23:56.240
nämlich echt drauf gefreut da kommt nämlich dieser ganze header header crap weg das könnte

02:23:56.240 --> 02:24:05.800
c++ vielleicht noch ein bisschen besser machen c++ und c sind in großen teilen vielleicht

02:24:05.800 --> 02:24:14.320
kompatibel zueinander also gerade mal c zu c++ aber es gibt sachen die sind gültiges c

02:24:14.320 --> 02:24:20.200
aber kein gültiges c++ umgedreht gibt es ganz viele sachen ja 99 prozent gültiges

02:24:20.200 --> 02:24:25.720
c++ ist kein gültiges c zum beispiel struct initialisierung ist gültig in c und nicht

02:24:25.720 --> 02:24:40.640
in c++ also diese punkt diese punkt das hat es echt noch in 20 geschafft das haben die

02:24:40.640 --> 02:24:46.960
doch nicht mehr hingekriegt das haben die doch nicht da habe ich letztens irgendwas

02:24:46.960 --> 02:25:04.440
drüber gesehen haben das echt haben das echt noch geschafft

02:25:04.440 --> 02:25:10.520
ja sowas sowas wäre halt echt praktisch wobei wahrscheinlich kann mein compiler das wieder

02:25:10.520 --> 02:25:23.280
nicht ach die haben das nicht implementiert ok es geht sie sehen modules was haben die

02:25:23.280 --> 02:25:31.920
denn da drinne zeigt mal her support was ist deine meinung zu rust rust ist extrem nice

02:25:31.920 --> 02:25:52.320
aber zu big brain ok das müsste dass sie immer noch hätte

02:25:52.320 --> 02:26:07.680
ok das sind die basic headers ok ok das muss ich mir tatsächlich mal angucken ob das schon

02:26:07.680 --> 02:26:10.480
ob ich das schon verwenden kann wir können doch einfach mal ausprobieren ob ich das schon

02:26:10.480 --> 02:26:18.440
verwenden kann export module braucht man ein eigenes c-file für das muss ich jetzt mal

02:26:18.440 --> 02:26:33.640
kurz testen das jetzt schon geht aus cacq cc module ja meinetwegen und was soll ich

02:26:33.640 --> 02:26:39.800
in main moment was muss ich in main dafür importen import hello warum hello achso weil

02:26:39.800 --> 02:26:44.240
es export module hello ist das muss bestimmt hello cc heißen sonst funktioniert es wahrscheinlich

02:26:44.240 --> 02:26:53.800
nicht ha ha lull ok mein compiler stellt ganz glaube nicht

02:26:53.800 --> 02:27:22.960
nope wäre ja auch zu schön gewesen wie aktiviere ich das denn minus f bild flex kann ich das

02:27:22.960 --> 02:27:47.040
einfach hier reinschreiben was ist rename rename export keyboard export not implemented

02:27:47.040 --> 02:27:58.880
ok ja das habe ich schon das habe ich schon das habe ich schon muss ich vielleicht hier

02:27:58.880 --> 02:28:18.280
noch minus f oder so machen ok er backt unrecognized commands er macht da ein ok ich glaube mal

02:28:18.280 --> 02:28:22.400
ich glaube mein compiler kann es schlicht und ergreifend noch nicht auch drauf geschissen

02:28:22.400 --> 02:28:29.360
jetzt weg hello elite bm das dauert wahrscheinlich noch 20 jahre bis man das realistisch gesehen

02:28:29.360 --> 02:28:37.240
benutzen kann hey guck mal meine sensoren sind da leute habt das gesehen meine sensoren

02:28:37.240 --> 02:28:43.080
sind am start fast zumindest ich muss doch mal kurz abbrechen das sieht irgendwie procken

02:28:43.080 --> 02:28:57.640
aus so bitte jetzt stehen geblieben es ernaut er announced das einmalig ok temp und die

02:28:57.640 --> 02:29:02.640
temperatur ja das müsste eigentlich genauso funktionieren wie ich mir das vorgestellt

02:29:02.640 --> 02:29:10.960
hab wir sollten vielleicht noch eine debug ausgabe machen hier drinnen und zwar bei

02:29:10.960 --> 02:29:19.920
jedem schleifendurchlauf geben wir aus was der was da für aktuelle werte drin stehen

02:29:19.920 --> 02:29:43.000
an ansonsten finden was nicht value dort but aber temp und und und illu ob das ist besser

02:29:43.000 --> 02:30:02.920
so von piler support mal her während es gerade kompiliert schauen wir mal c++ 2 b module

02:30:02.920 --> 02:30:12.160
modules acht ja ich habe den gcc acht also sie lang gcc muss gucken fuck

02:30:12.160 --> 02:30:18.280
ok ja kein wunder deswegen kann es das nicht ich habe den gcc achter zwar angeblich irgendwie

02:30:18.280 --> 02:30:42.880
zweit das ist das ist auch so hinterher gewusst äh meine güte denn so bat ist schon da ok

02:30:42.880 --> 02:30:52.200
der sensor also wahrscheinlich weil er ihn schon erkannt hat ich muss mal ich muss übrigens

02:30:52.200 --> 02:31:04.600
ich glaube das ist tatsächlich null das ist tatsächlich null weil ich muss mal licht

02:31:04.600 --> 02:31:17.440
anmachen also über dem sensor die lampe lampe ist an jetzt sollte das jetzt sollte illumination

02:31:17.440 --> 02:31:27.800
gleich ein bisschen hochgehen das ist nicht so das schnellste der sensor und dauert vielleicht

02:31:27.800 --> 02:31:32.840
auch ein bisschen mit dem abfragen warum warum er kennt jetzt eigentlich keine temperatur

02:31:32.840 --> 02:31:37.280
mehr gerade da hat auch die ganze zeit vorher temperatur erkannt warum er kennt er jetzt

02:31:37.280 --> 02:31:49.320
keine temperatur mehr hier das frage ich mich auch aber er kennt

02:31:49.320 --> 02:32:05.000
da grad gar nichts mehr ich rieche irgendwie einen back der erkennt

02:32:05.000 --> 02:32:22.360
nichts mehr aber batterie ist angeblich wieder 100 prozent ok vorher war es 99 alles in ordnung

02:32:22.360 --> 02:32:30.200
das kalt das ding liegt neben mir unter der lampe aber die batterie funktioniert also

02:32:30.200 --> 02:32:35.480
die batterie abfrage funktioniert weil die batterie ist standardmäßig null die batterie

02:32:35.480 --> 02:32:42.040
standardmäßig batterie abfrage funktioniert wisst ihr was sein kann haben wir jemals getestet

02:32:42.040 --> 02:32:53.520
ob nach einer batterie abfrage er den rest auch noch erkennt ok ich ich disable mal kurz

02:32:53.520 --> 02:33:03.320
das ganze mqtt zeug das muss ich jetzt mal kurz überprüfen das kann ich lassen kommt

02:33:03.320 --> 02:33:19.200
weg an einer stelle habe ich noch hier soll das ganze mqtt zeug ist weg so und das wlan

02:33:19.200 --> 02:33:29.280
wlan mache ich auch weg so jetzt habe ich ein problem mal gucken ob er das jetzt erkennt

02:33:29.280 --> 02:33:35.920
wisst ihr was nämlich sein kann dass das dass ich mit dem scan das gerät in irgendein

02:33:35.920 --> 02:33:47.400
komischen modus versetze dass es danach nicht mehr broadcasted

02:33:47.400 --> 02:33:57.280
oder dass es komisch komische dinger broadcasted besser gesagt ja ip 00 ist klar setzt du

02:33:57.280 --> 02:34:05.040
jemals die temperatur und felder ja mache ich ok batterie 99 prozent jetzt ist wieder

02:34:05.040 --> 02:34:15.040
99 prozent jetzt ist 100 prozent ok das warum fragt er warum fragt also der fragt die batterie

02:34:15.040 --> 02:34:23.000
nicht so viel ab by the way warum ist es überhaupt jetzt 100

02:34:23.000 --> 02:34:44.600
ich setze das nur an einer stelle ich setzt batterie setzt sich nur an einer stelle und

02:34:44.600 --> 02:34:57.800
diese sache sollte er eigentlich nur einmal alle fünf stunden abfragen ich bin verwirrt

02:34:57.800 --> 02:35:02.840
die batterie darf sich gar nicht bewegen die batterie darf einmal in fünf stunden abgefragt

02:35:02.840 --> 02:35:28.000
für einen moment moment habe ich ihn jetzt drin ist meine logik hier falsch fünf stunden

02:35:28.000 --> 02:35:38.200
ja batterie 99 genau

02:35:38.200 --> 02:35:39.840
danach darf die sich nicht mehr ändern

02:35:39.840 --> 02:35:58.280
ich setze glaube ich den last check nie kann das sein

02:35:58.280 --> 02:36:17.400
ich setze den last check doch dachte schon ich dachte schon das wäre es aber ich dachte

02:36:17.400 --> 02:36:19.680
schon das wäre es das wäre relativ easy gewesen

02:36:19.680 --> 02:36:32.200
ich muss mal die 30 milliarden debugdinger weg machen sonst sehe ich ja gar nichts mehr

02:36:32.200 --> 02:36:50.600
du machst minus last check falsch nee eigentlich stimmt

02:36:50.600 --> 02:37:03.440
wir machen jetzt einfach jemanden ausgabe jetzt einfach hier serial print line skip

02:37:03.440 --> 02:37:15.640
moment moment jetzt setzt sich das hier irgendwie drin oh man oh bin ich doof lull warum steht

02:37:15.640 --> 02:37:28.360
denn hier sowas drinnen monka weh alter wo kommt der scheiß her warum habe ich den 100

02:37:28.360 --> 02:37:45.520
fuck aber mal ernsthaft warum fragt er denn das batterie warum fragt er denn

02:37:45.520 --> 02:37:52.400
das warum fragt warum findet er denn die anderen die anderen sensor dinger kratten

02:37:52.400 --> 02:38:00.840
nicht mehr wir geben noch mal typ wir geben noch mal typ und und länge mit aus bei länge

02:38:00.840 --> 02:38:12.280
sollte ja eigentlich zwei sein und drei und oft seit sonst was skip skip skip alles gut

02:38:12.280 --> 02:38:26.240
ergibt sinn batterie level noch mal ein ich glaube ich glaube ich weiß was ist wenn man

02:38:26.240 --> 02:38:30.640
die batterie abfragt setzt das bestimmt das gerät in irgendeinen doofen zustand den man

02:38:30.640 --> 02:38:35.800
wieder zurücksetzen muss die machen doch hier sowas moment so was habe ich jedoch gesehen

02:38:35.800 --> 02:38:43.560
hier guckt mal das ist das was ich vorher ignoriert habe force force flora service data

02:38:43.560 --> 02:39:00.160
mode force flora service data mode was macht das was was für was was was für was ist

02:39:00.160 --> 02:39:22.320
das was was was tut es ok länge 3 länge 1 typ 63 das stimmt überhaupt was das ergibt

02:39:22.320 --> 02:39:36.440
keinen sinn typ 63 typ 63 ist komplett verkehrt was hier haben wir uns den typ 63 gab es doch

02:39:36.440 --> 02:39:45.320
gar nicht was ist typ 63 63 gibt es überhaupt nicht ok wir haben wir haben das gerät irgendwie

02:39:45.320 --> 02:39:52.240
kaputt gemacht wir haben wir haben das gerät irgendwie zerstört also nicht nicht wirklich

02:39:52.240 --> 02:40:00.200
zerstört sondern ich wette mit euch wenn ich die batterie abfrage rausmache moment

02:40:00.200 --> 02:40:06.440
habe ich das überhaupt als hex drinne ob es auch wirklich 63 ja ich habe es als hex

02:40:06.440 --> 02:40:32.600
so ich mache jetzt die batterie abfrage auswetten dann geht es wieder auf vorhin halb 63 halb

02:40:32.600 --> 02:40:57.360
63 hä das sollte der nicht machen irgendwie ich weiß nicht ob wir den sensor geschrottet

02:40:57.360 --> 02:41:09.920
haben oder so mit irgendwas aber der sendet äußerst äußerst komische dinge woran könnte

02:41:09.920 --> 02:41:25.600
das denn liegen ausschalten wieder einschalten den flora reboot ja das machen wir jetzt ich

02:41:25.600 --> 02:41:34.480
warte aber bis der sensor wieder läuft ich warte kurz ich warte bis der sensor wieder

02:41:34.480 --> 02:42:03.240
läuft bis der bis type 63 flora 63 le getappt

02:42:03.240 --> 02:42:29.120
das ist typ 63 nicht abkacken wieder was ist denn hier los mit dem 0 x 63

02:42:29.120 --> 02:42:41.200
Okay, dazu gibt es gar nichts.

02:42:41.200 --> 02:42:51.760
Okay, also guck mal, der Sensor schickt nur so ganz merkwürdige Dinger.

02:42:51.760 --> 02:43:00.880
63 und ich starte den jetzt gleich mal neu, den Sensor.

02:43:00.880 --> 02:43:18.160
Habe ich sonst vielleicht irgendwas falsch gemacht?

02:43:18.160 --> 02:43:25.360
Data Index plus zwei, Data Index plus drei, das habe ich auch so gemacht.

02:43:25.360 --> 02:43:33.120
Gut, also irgendwas stimmt mit dem Sensor und ich habe den Sensor irgendwie kaputt gemacht.

02:43:33.120 --> 02:43:42.880
Ich muss gerade mal aufmachen und, Alter, wenn ich das scheiß mal aufkriegen würde.

02:43:42.880 --> 02:44:03.760
Keck wait, hallo, wow, okay, die Abdeckung ist sonst wohin geflogen gerade.

02:44:03.760 --> 02:44:28.240
Okay, ich reboote mal, ist wieder an, FD, what, alter Sensor, was sendest du da?

02:44:28.240 --> 02:44:42.960
Sensor gerippt, das glaube ich nicht, ich kann doch nicht durch pure Abfragen den Sensor

02:44:42.960 --> 02:44:43.960
kaputt gemacht haben.

02:44:43.960 --> 02:44:50.000
Ich habe bestimmt irgendwas dummes hier gemacht.

02:44:50.000 --> 02:45:14.640
Mal alles rausschmeißen, was man hier braucht.

02:45:14.640 --> 02:45:20.320
Was habe ich hier kaputt gemacht, ich weiß nicht genau was, das war zu Pain's Champ,

02:45:20.320 --> 02:45:24.280
ich würde den Sensor, ja, ich verstehe, dass das Paint, aber der kaputt kann der nicht

02:45:24.280 --> 02:45:28.160
sein, das ergibt doch keinen Sinn, sollte der kaputt sein.

02:45:28.160 --> 02:45:50.600
Okay, was wir, wir clear Results ist das vielleicht ein Problem, aus welchen Gründen auch immer,

02:45:50.600 --> 02:46:02.280
das habe ich glaube ich geändert vorhin, ich mache Wifi raus, brauchen wir nicht, hätte

02:46:02.280 --> 02:46:08.680
ich mal einen Shit Commit gemacht vorhin, ne, Leute, Shit, Shit Committed, dann hätte

02:46:08.680 --> 02:46:26.880
ich jetzt einfach mal Rollbacken können und vergleichen, Lul, ein Shit Commit, oh geht

02:46:26.880 --> 02:46:32.720
das nicht, was ist da kaputt, meint ihr wirklich, der Sensor ist kaputt, aber von was, von was

02:46:32.720 --> 02:46:44.480
soll denn der Sensor kaputt gehen, ich kann auch noch Batteriewerte und so abfragen, Type

02:46:44.480 --> 02:46:52.720
8, okay, okay, ich glaube der geht wieder, Type 8 gibt's, Type 8 ist Bodenfeuchtigkeit

02:46:52.720 --> 02:47:02.320
oder sowas, das geht, okay, ich glaube der Sensor geht wieder, welcher Sensor, der da,

02:47:02.320 --> 02:47:13.760
äh, der Flora Sensor, okay, es geht wieder Leute, es geht wieder, was war's denn jetzt,

02:47:13.760 --> 02:47:28.720
was genau war's denn jetzt, Include vom Wifi, ey, das ist wieder typische C++ Hatter Wahnsinn,

02:47:28.720 --> 02:47:37.560
wenn das der Fall ist, das redefined irgendwelche Sachen davon, was soll denn Programm, äh,

02:47:37.560 --> 02:47:51.480
Sensor kaputt machen, eventuell, weil der will nicht mehr, ey, jetzt ist wieder alles

02:47:51.480 --> 02:48:07.720
okay, hä, what the fuck, okay, weißt was, wir machen jetzt einfach mal eine Runde Undo,

02:48:07.720 --> 02:48:33.240
Ando, Ando, Ando, oh nein, nein, nein, nein, nicht so viel Andun, okay, perfekt, los, perfekt,

02:48:33.240 --> 02:48:48.960
so jetzt ist alles wieder drin, ich glaube doch, dass das Batteriel Level kaputt macht,

02:48:48.960 --> 02:48:53.120
ist jetzt auch das Wifi wieder drin, ach nee, Moment, Wifi ist noch aus, na okay, schadet

02:48:53.120 --> 02:49:12.200
ja nix, Wifi ist noch aus, okay, denke 2, Typ 0, jetzt ist es wieder kaputt, nee, das

02:49:12.200 --> 02:49:25.440
ist jetzt wieder kaputt, Type 63 ist wieder angesagt, puh, okay, aber das schöne ist,

02:49:25.440 --> 02:49:31.120
ich kann jetzt einfach mal, okay, also wir wissen so, so hat es funktioniert, ne, das

02:49:31.120 --> 02:49:36.280
ist aus mit, mit auskommentiertem Wifi und allem, so hat es funktioniert, wenn es jetzt

02:49:36.280 --> 02:49:41.600
nicht funktioniert, dann wissen wir, dass es an der Abfrage von der Batterie liegt,

02:49:41.600 --> 02:49:45.720
die den Sensor in einen komischen Zustand bringt, was erstmal ein paar Minuten dauert,

02:49:45.720 --> 02:50:06.440
bis es wieder weg geht, und was jetzt, geht es jetzt, auf, mach hinne, Type 8, nee, jetzt

02:50:06.440 --> 02:50:14.960
funktioniert es, okay, wo ist, hä, was, was macht es kaputt Leute, ich bin echt extrem

02:50:14.960 --> 02:50:34.480
verwirrt gerade, was macht es kaputt, na die IP wird es nicht sein, Wifi einkommentieren

02:50:34.480 --> 02:50:50.040
wird es auch nicht sein, das da vielleicht, hä, oder doch das Clear Result, du weißt

02:50:50.040 --> 02:50:54.400
warum ist es denn plus plus, ja das ist sicherlich auch ein Teilproblem, aber das ist gerade

02:50:54.400 --> 02:51:05.960
irgendwas Hardware-mäßiges, okay, was meinte, geht es jetzt, lag es an dem Clear Result,

02:51:05.960 --> 02:51:15.640
nee, alles in Ordnung noch, noch ist alles gut, noch ist alles gut, funktioniert, ja

02:51:15.640 --> 02:51:27.960
Lichtsensor, wunderbar, wunderbar, okay, was kommt als nächstes, der MQTT-Sensor, und

02:51:27.960 --> 02:51:48.440
das da, okay, machen wir das da rein, woran könnte das liegen, das verstehe ich net, also

02:51:48.440 --> 02:51:56.880
wenn es jetzt wieder kaputt ist, ist jetzt auch die Batterie wieder drin, Batterie, nee,

02:51:56.880 --> 02:52:04.320
die Batterie ist nicht drinne, jetzt ist kaputt Leute, es ist kaputt, okay, wo, woran liegt

02:52:04.320 --> 02:52:34.280
es jetzt, das macht es kaputt, was, warum, nur mal um das zu verifizieren, ich mache

02:52:34.280 --> 02:52:47.320
das wieder raus und jetzt gehts, was ist denn daran, irgendeine Art und Weise, was hat denn

02:52:47.320 --> 02:52:53.640
da irgendwie was mit Bluetooth zu tun davon, Debugger gibt es da nicht, da brauchst du

02:52:53.640 --> 02:53:15.800
ein Hardware-Teil für zum Debuggen, jetzt gehts wieder, okay, Zeile 107, das da, ja

02:53:15.800 --> 02:53:28.440
gut, das können wir nicht ausprobieren, da muss ich das hier auskommentieren zu, Bluetooth

02:53:28.440 --> 02:53:34.000
und Wi-Fi gleichzeitig, äh gerade nicht, nein, ansonsten schon und das funktioniert

02:53:34.000 --> 02:53:55.680
auch, so, nee es ist noch ganz, okay es ist noch ganz, also liegt es hier dran, liegt es

02:53:55.680 --> 02:54:02.440
hier dran, wir nähern uns, wir nähern uns der Sache auf jeden Fall, ich mein es kann

02:54:02.440 --> 02:54:08.480
hier nur noch an einem dieser Zeilen hier liegen und das hier kann es nicht sein, weil

02:54:08.480 --> 02:54:10.800
das haben wir die ganze Zeit auskommentiert gehabt, das kann ja im Prinzip nur noch da

02:54:10.800 --> 02:54:31.520
dran oder da dran liegen und jetzt, jetzt ist es kaputt, die Zeile macht es kaputt, die

02:54:31.520 --> 02:54:55.360
Zeile macht es kaputt, aber warum, warum, das ist doch vollkommen legitim, okay liebe

02:54:55.360 --> 02:55:19.800
C++-Kenner, ähm, irgendjemand eine chlorische Idee, geh noch mal nach unten hier, Moment,

02:55:19.800 --> 02:55:26.680
was hat es jetzt kaputt gemacht, das da oder das da unten, wartet mal, wartet mal, was

02:55:26.680 --> 02:55:46.880
hab ich aus, äh, das Address ist die aktuelle Bluetooth Adresse, okay jetzt bin ich verwirrt,

02:55:46.880 --> 02:55:55.440
wartet mal, hat es das jetzt kaputt gejagt oder das andere, ah ne, ne, ne, ne, Moment,

02:55:55.440 --> 02:56:11.440
das stimmt nicht, das macht es gar nicht kaputt, das hier macht es kaputt, ich lass noch mal

02:56:11.440 --> 02:56:15.680
kurz laufen, ja, ja, ne, ne, das passt jetzt, das macht es kaputt, das replays, wahrscheinlich

02:56:15.680 --> 02:56:29.000
ist es das replays, ich weiß woran das liegt, ich glaube ich weiß woran das liegt, das

02:56:29.000 --> 02:56:47.480
ist aber mega painschempig, kann das sein, jetzt ist es kaputt, ja, kann das sein, dass

02:56:47.480 --> 02:57:01.800
das hier keinen neuen String erstellt, sondern, dass das auf der darunter liegenden, äh,

02:57:01.800 --> 02:57:05.800
das macht ein Android, das macht einen Arduino String draus, das ist wahrscheinlich nicht

02:57:05.800 --> 02:57:11.200
das Problem, aber wir können ausprobieren ob das das Problem ist, achso ne, das ist

02:57:11.200 --> 02:57:18.920
eine Arduino Funktion, könnte das sein, dass ToString keinen String erstellt, sondern als

02:57:18.920 --> 02:57:27.080
Basis das darunter liegende, das darunter liegende, ähm, die darunter liegenden Bytes

02:57:27.080 --> 02:57:43.640
nimmt und ich hier drinnen quasi auf den darunter liegenden Bytes rumwurste, ToString erstellt

02:57:43.640 --> 02:57:50.560
ein neues Objekt, das weißt du ja nicht, das ist eine Implementierung von denen, return

02:57:50.560 --> 02:58:03.240
String Sternchen This, sicher, sicher, ich wäre mir da nicht so sicher ob es das macht

02:58:03.240 --> 02:58:20.480
ehrlich gesagt, jaja, ok an dem Replay liegt es nicht, an dem Replay liegt es nicht, wie

02:58:20.480 --> 02:58:31.800
an dem Replay liegt das, Moment, wie kann das, wie kann das denn irgendwas kaputt machen,

02:58:31.800 --> 02:58:37.320
also was das macht ist folgendes, äh, es ist Big Brain Template Geschiss, das macht

02:58:37.320 --> 02:58:42.040
eigentlich, das macht eigentlich gar nichts außer, äh, die ganzen Argumente aneinander

02:58:42.040 --> 02:58:50.560
hängen, also es macht, es macht, ist das ein Bug, ne, das macht gar nichts damit, warte

02:58:50.560 --> 02:58:57.920
mal, wait a minute, warum ist das jetzt immer noch kaputt, warum, warum kann das überhaupt

02:58:57.920 --> 02:59:04.200
kaputt gehen wenn das ToString macht, ach Moment, deprecated ist das, ich verwende

02:59:04.200 --> 02:59:24.240
irgendwas deprecated, das, häh, ok, es ist immer noch kaputt, es liegt nicht an meinem,

02:59:24.240 --> 02:59:38.200
warum, warum, wie kann es das hier denn mein Bluetooth kaputt machen, wie kann diese Zeile

02:59:38.200 --> 02:59:52.320
mein Bluetooth kaputt, häh, das ist, ok, das ist ein Bug, das ist auf jeden Fall ein Bug,

02:59:52.320 --> 02:59:56.440
das schreibt in irgendwo, ich wette mit euch, das schreibt irgendwo im Speicher rum wo es

02:59:56.440 --> 03:00:01.040
nicht rumschreiben soll, so, wir machen jetzt mal testweise was anderes, ich mach das mal

03:00:01.040 --> 03:00:09.560
ganz weg und mach da einfach sowas hier rein, das sollte jetzt ja nix mal machen, schönes

03:00:09.560 --> 03:00:36.720
Beispiel für wie man sich mit C++ übrigens in Fuß schießen kann hier wieder, und, Hallo,

03:00:36.720 --> 03:00:42.880
hab null, ok, jetzt funktioniert's wieder, funktioniert wieder, ok, das liegt definitiv

03:00:42.880 --> 03:00:54.160
hier dran, attr toString, MQTTname verwende ich sonst nirgendswo mehr, gut, hier im Sensor,

03:00:54.160 --> 03:01:00.760
das ist erstmal egal, das liegt nur hier dran, das wird er wahrscheinlich wegoptimieren

03:01:00.760 --> 03:01:05.360
und deswegen wird es jetzt doch funktionieren, ja, das probier ich gleich aus, aber ich verstehe

03:01:05.360 --> 03:01:35.000
nicht was, das ist irgendein Bug, das ist irgendein Bug, ist es doch, es ist kaputt,

03:01:35.000 --> 03:02:04.360
der pure Aufruf von attr.toString macht mein Bluetooth kaputt, ok, ok, ok, ok, ok, ok,

03:02:04.360 --> 03:02:18.680
ok, ja hier, da ist er, da passiert nicht so viel, die Frage ist nur, was this in dem

03:02:18.680 --> 03:02:35.040
Fall überhaupt ist, wie, wie, wie kann der das zu nem String konvertieren überhaupt,

03:02:35.040 --> 03:02:42.760
wie geht denn das, die müssen, die müssen, das Ding muss in irgendeiner Art und Weise

03:02:42.760 --> 03:02:57.360
konvertierbar sein, daraus, wie auch immer die das gemacht haben, ah, hier, Operator,

03:02:57.360 --> 03:03:09.360
ah, fuck it, die Operator, Cast Overloading oder sowas ist das jetzt auch noch, hier,

03:03:09.360 --> 03:03:16.240
hier, hier, hier, hier, das macht es kaputt Leute, ich sag es euch, das macht es kaputt,

03:03:16.240 --> 03:03:29.480
das verkackts irgendwie, hier machen die irgendwas kaputt, die machen da irgendwas kaputt hier,

03:03:29.480 --> 03:03:41.200
irgendwas, irgendwas ist hier repp, irgendwas ist hier verbugged dran, da wird kein Speicher

03:03:41.200 --> 03:03:46.400
geändert, doch, die schreiben in Buffer und wenn das hier irgendwie zu lang ist oder so,

03:03:46.400 --> 03:03:50.920
das macht es irgendwie kaputt, wir probieren mal folgendes aus, anstatt zu String, gehen

03:03:50.920 --> 03:04:02.760
wir mal, was weiß ich, Get Native, Get Native, Get Native ist nen, Array, ok, da passiert

03:04:02.760 --> 03:04:10.480
jetzt wahrscheinlich nichts, Address ist die Bluetooth, die Bluetooth Mac Adresse quasi

03:04:10.480 --> 03:04:22.040
von dem Gerät, so, da passiert jetzt nichts, wenn da jetzt auch was passiert, dann blick

03:04:22.040 --> 03:04:31.880
ich schnell mal durch, und das sieht schon mal besser aus, na, es funktioniert, ok,

03:04:31.880 --> 03:04:40.880
Get to String macht es einfach kaputt, so, dann probieren wir mal aus, was passiert,

03:04:40.880 --> 03:04:45.320
wenn man, Standard String, Stronk, Stronk, Big, Big, Standard Stronk, Stronks müssten

03:04:45.320 --> 03:05:08.120
auch geben, so, und das soll jetzt funktionieren oder was, so, jetzt bin ich mal gespannt,

03:05:08.120 --> 03:05:17.120
mal gucken, ob es das jetzt auch kaputt macht, was ein Scheiß, Alter, mit was man sich hier

03:05:17.120 --> 03:05:28.280
wieder befassen muss, ich dachte, da sind wir 15 Jahre drüber, drüber raus, jetzt,

03:05:28.280 --> 03:05:38.600
das ist kaputt, ok, Leute, das liegt, das liegt daran, das liegt hieran, das liegt an

03:05:38.600 --> 03:05:43.640
diesem, an diesem String Constructor Ding oder so, die machen da irgendwelches, da

03:05:43.640 --> 03:05:51.160
ist irgendein Bug drinne, das Overfloat, Underfloat, über, über, seitwärts, Diagonalfloat, irgendwas,

03:05:51.160 --> 03:06:03.040
keine Ahnung, ja, so, da ist irgendwas kaputt drinne, das heißt, wir müssen das jetzt selbst

03:06:03.040 --> 03:06:13.840
machen, Get, Native, oder was haben die noch für Methoden, Get Type, oh, Big Brain, was

03:06:13.840 --> 03:06:28.080
ist das, wow, ach so, das ist das Overloaded Operator, aber man kann das auch, man kann

03:06:28.080 --> 03:06:44.800
das auch zu einem, man kann das auch zu einem Int64 machen, also kann ich jetzt so was hier

03:06:44.800 --> 03:07:04.400
machen, Uint64, kann ich das cast on, ok, das funktioniert, Auskernfuchs, könnte man

03:07:04.400 --> 03:07:10.960
bestimmt machen, aber ich würde jetzt mal von denen erwarten, dass die, dass das funktioniert,

03:07:10.960 --> 03:07:16.320
ja, ich könnte das bestimmt in irgendeiner Art und Weise kopieren, ja, aber so geht es

03:07:16.320 --> 03:07:22.880
ja auch, wenn es jetzt nicht kaputt geht, dann benutze ich halt das Int und anscheinend

03:07:22.880 --> 03:07:38.320
geht es jetzt komplett kaputt, dass es gar nicht mehr weiter scannt, ok, ich resette

03:07:38.320 --> 03:07:44.880
nochmal, ach ne, doch, es geht weiter, ich habe nichts gesagt, ok, das geht, das geht,

03:07:44.880 --> 03:07:51.600
alles klar, das geht, wunderbar, so, was, was, was, was, was habe ich denn da als drinstehen,

03:07:51.600 --> 03:08:03.560
was habe ich denn da als drinstehen, MQTT, nee, Uint64, da habe ich die MAC Adresse

03:08:03.560 --> 03:08:20.000
als, als, 6 bytes konvertiert zu einem Uint6, ja, das geht auch, das ist auch Unic, kann

03:08:20.000 --> 03:08:25.160
man das nicht, das ist doch ein Objekt, ok, das, das passt, damit kann ich leben, da nehme

03:08:25.160 --> 03:08:30.360
ich halt nicht die MAC Adresse, die man gut lesen kann, sondern eben die MAC Adresse als

03:08:30.360 --> 03:08:36.160
bytes, ist auch in Ordnung, kann ich auch mit leben, wunderbar, passt, exquisite, excellent,

03:08:36.160 --> 03:08:46.400
hoch 10, ja, jetzt funktioniert es, excellentst ist das, excellent, excellent reicht immer,

03:08:46.400 --> 03:08:55.960
es ist excellentst, gibt es das Wort überhaupt, kann man excellent überhaupt noch steigern,

03:08:55.960 --> 03:09:01.160
es ist in Wirklichkeit, wenn ihr mal in der Schule gefragt werdet, es ist nicht gut, besser,

03:09:01.160 --> 03:09:10.360
am besten, es ist gut, besser, excellent, excellentst, so, also, weiter, Slayda Teddy

03:09:10.360 --> 03:09:13.560
10 Monate, danke für den Sub, ok, das heißt, wir wissen jetzt wo was liegt, wir können

03:09:13.560 --> 03:09:16.360
den ganzen Scheiß wieder rückgängig machen, ich kann alles wieder einkommentieren, was

03:09:16.360 --> 03:09:23.160
ich auskommentiert habe, und mich freuen, dass es funktioniert, sehr gut, excellent,

03:09:23.160 --> 03:09:32.160
warte, was mache ich da, so weit muss ich nicht zurück, so, ist das WiFi, ist das WiFi,

03:09:32.160 --> 03:09:44.960
noch WiFi drinnen, WiFi begin, excellent, ok, alles klar, das heißt, wir machen kein

03:09:44.960 --> 03:09:55.360
Tool String, wir machen ein, wir konvertieren das Ding zu einem Uint, Uint64 und dann zu

03:09:55.360 --> 03:10:09.480
einem String, beste, wobei, nee, war aber nicht, hier, ups, wir nehmen einfach das

03:10:09.480 --> 03:10:21.200
Int und das hier machen wir einfach auch zu einem Uint64, Uint64, ok, wunderbar, jetzt

03:10:21.200 --> 03:10:26.200
sollte wieder alles funktionieren, gehen wir mal in Home Assistant und löschen den Sensor,

03:10:26.200 --> 03:10:41.920
da ist er, der exzellente Sensor, zack, next, go back, hallo, ok, zip, upload, ja, kann

03:10:41.920 --> 03:10:52.360
man, adjektiv exzellent, ok, oh, oh, oh, oh, das ist gut, das muss ich bemerken, exzellent,

03:10:52.360 --> 03:11:00.600
exzellenter, am exzellentesten, das ist nicht exzellent, sondern es ist am exzellentesten,

03:11:00.600 --> 03:11:14.040
ok, das muss ich gucken, wie das ausgefroren wird hier, ah, yes, hier lernt man wieder

03:11:14.040 --> 03:11:38.400
was, hier lernt man wieder was, aha, ah, yes, jetzt, warum ist feminine exzellent eher,

03:11:38.400 --> 03:11:45.080
wie kann das sein, exzellenter, exzellenter, ja, halt nicht klar, Leute, nein, nein, das

03:11:45.080 --> 03:11:53.560
ist wieder kaputt, oder, ne, ne, ne, ne, er hat die Temperatur auf jeden Fall ausgelesen

03:11:53.560 --> 03:12:07.160
jetzt schon mal, aber jetzt ist die Temperatur wieder weg, ah, Moment, ich hatte hier noch

03:12:07.160 --> 03:12:25.680
den Bug drinnen mit den 100, so, ich mach mal kurz hier dieses ganze D-Bug Zeug raus,

03:12:25.680 --> 03:12:36.240
ich glaub, das geht jetzt, ich glaub, ich hab noch einen anderen Bug, Moment, abbrechen,

03:12:36.240 --> 03:12:44.320
das kommt auch wieder rein, also, wenn das jetzt nicht funktioniert, dann ragequit ich

03:12:44.320 --> 03:12:56.520
gleich, es scheint mir ein exzellenter, exquisiter Stream ist das heute, oh, kann das das hier

03:12:56.520 --> 03:13:20.720
auch diese Seite, exquisite, exquisite, exquisites, was, exquisites, was ist das für ein Wort,

03:13:20.720 --> 03:13:43.280
was ist ein exquisites, exquisites, die Mehrzahl, davon gibt's doch keine Mehrzahl, oder, die

03:13:43.280 --> 03:14:09.520
Exquisite, der, hä, das ergibt keinen Sinn, ok, das klingt mir falsch, ok, alles gut,

03:14:09.520 --> 03:14:17.880
es funktioniert, es funktioniert, wunderbar, was sagt, was sagt der Home Assistant, der

03:14:17.880 --> 03:14:24.840
Cool Champ ist am Start, Batterie, jawoll, bam, nur Batterie geht grad nicht, aber guck

03:14:24.840 --> 03:14:32.840
mal, er überträgt, alles gut, wunderbar, Poggers, Poggers, was ich noch nicht so ganz

03:14:32.840 --> 03:14:44.040
verstehe ist, ah, ich setz den Sensorwert hier unten, Sensor, Temp, gleich Value, wisst

03:14:44.040 --> 03:14:51.680
ihr mal, alles, alles muss man selbst machen, nie hilft mir einer, Chat, und das, ah, Moment,

03:14:51.680 --> 03:14:58.760
das ist Temp und das ist, so, und jetzt können wir das hier ausgeben und dann passt das alles,

03:14:58.760 --> 03:15:13.160
das ist für die Batterie, ok, und jetzt sollte eigentlich alles funktionieren, ja, die Update

03:15:13.160 --> 03:15:40.680
in der Realtime, ist das nicht Poggers, so, auf, zeig's uns, mach, mach, mach, mach, mach,

03:15:40.680 --> 03:15:54.480
zeig's uns, mach, Type 0, Type 0 ist schlecht, 99 Batterie, Länge, Temp, genau, Beleuchtung

03:15:54.480 --> 03:16:04.720
haben wir, 135, perfekt, jetzt warten wir nur bis Temperatur abgefragt wird, Temperatur,

03:16:04.720 --> 03:16:10.800
das dauert ein bisschen, bis sich das zufälligerweise scannt, während es gerade verschickt, das

03:16:10.800 --> 03:16:14.800
kann ein bisschen dauern, ja, das kann, das kann schon mal, im Zweifelsfall, zwei, drei

03:16:14.800 --> 03:16:22.080
Minuten dauern, aber, das muss ich ja gerade überschneiden mit, dass er scannt und das,

03:16:22.080 --> 03:16:33.600
ah, Batterie, Temp, 23, Leute, funktioniert, funktioniert, guckt da, Bäm, Batterie Level,

03:16:33.600 --> 03:16:42.640
99, Beleuchtung, mal kurzzeitig, wir können es ja testen, ob die Beleuchtung funktioniert,

03:16:42.640 --> 03:16:52.720
ich mach jetzt die, ok, ok, Massive, Massive Crafts, Leute, ja, Big Brain Crafts, ich mach

03:16:52.720 --> 03:16:56.720
jetzt die Beleuchtung von der Elgato auf, das sollte jetzt gleich auf Null gehen, also

03:16:56.720 --> 03:17:02.880
gleich, demnächst sollte das auf Null gehen, so, Elgato Beleuchtung ist aus, jetzt warten

03:17:02.880 --> 03:17:07.720
wir mal, wie lang es dauert, mal gucken, ob das auch Realtime updatet, updatet, sollte

03:17:07.720 --> 03:17:15.880
es jetzt runter auf Null gehen, dann machen wir die Elgato Lampe an, oh, es ist sogar

03:17:15.880 --> 03:17:38.320
hochgegangen, Kek Wait, Wait, Kek Wait, ok, das war eine Verzögerung, irgendwie,

03:17:38.320 --> 03:17:59.720
jetzt ist es Null, ok, ob ich, aber die Verzögerung ist für den Kühlschrank-Sensor nur durchaus

03:17:59.720 --> 03:18:04.200
in Ordnung, ja, ok, und jetzt mach ich die Elgato Lampe mal auf volle, volle, volle

03:18:04.200 --> 03:18:24.600
Pulle, der Bastel-Champ ist volle Pulle, auf, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:18:24.600 --> 03:18:42.700
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:18:42.700 --> 03:18:47.800
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:18:47.800 --> 03:18:53.000
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

03:18:53.000 --> 03:18:55.000
hochkant

03:18:55.160 --> 03:18:58.660
Unter unter den direkt unter unter den elgato stellts

03:19:02.760 --> 03:19:04.760
Dann fällt es direkt rein

03:19:04.760 --> 03:19:12.760
Oh

03:19:15.880 --> 03:19:17.880
Okay

03:19:25.800 --> 03:19:30.660
Morgengemüse erstens weil ich gucken wollte wie man plutos sachen abfragt und zweitens weil

03:19:30.660 --> 03:19:38.620
Das nicht passiv lauscht sondern aktiv das gerät abfragt und das kostet so viel batterie

03:19:39.300 --> 03:19:42.580
Und die projekte die passiv abfragen fragen nicht die batterie ab

03:19:43.260 --> 03:19:47.300
Ich habe es jetzt so gemacht ich lausche passiv was das gerät für sensorwerte schickt

03:19:47.300 --> 03:19:58.900
Und alle fünf stunden frage ich einmal die batterie ab das so das beste aus beiden welten finde ich okay funktioniert leute

03:20:02.100 --> 03:20:04.100
Nice

03:20:06.660 --> 03:20:11.580
Batterie 99 prozent 1008 als schlugs 23,1 grad perfekt

03:20:11.580 --> 03:20:15.300
Ja das ist cool

03:20:18.780 --> 03:20:21.780
So ein bisschen pains champiger code aber es funktioniert

03:20:25.380 --> 03:20:28.220
Gamepad dankeschön für den primes ab

03:20:29.780 --> 03:20:34.940
Und jetzt ab in den cool champ leute soll ich mal soll ich mal in kühlschrank legen und wir wollen mal zugucken

03:20:34.940 --> 03:20:42.820
Soll ich mal ich kann rüber gehen in kühlschrank in der hoffnung ich habe den controller so liegen dass es noch vom kühlschrank funktioniert

03:20:42.820 --> 03:20:48.100
Weil die sache ist die jetzt ist es so der kühlschrank ist wirklich auf der anderen seite vom stockwerk

03:20:48.700 --> 03:20:50.700
Manchmal funktioniert vielleicht manchmal nicht

03:20:51.260 --> 03:20:58.380
Ich werde natürlich den controller dann in flur machen weil ich will ja auch noch das müssen wir auch noch irgendwann an der nächsten striefe meine waage

03:20:58.380 --> 03:21:04.540
Meine waage verschickt ja auch über bluetooth die werte die sollen ja auch noch rein

03:21:04.540 --> 03:21:34.300
Pippo fett champ ich bringe sie kühlschrank

03:22:04.540 --> 03:22:11.100
Ups ich habe mich schon gemutet ich kann ich starte mal neu ihr habt es gar nicht gehört wie ich unter tisch gekrabbelt bin

03:22:11.580 --> 03:22:13.580
Ich starte mal neu ich habe es noch nicht im kühlschrank

03:22:15.100 --> 03:22:17.100
Ich will jetzt erstmal gucken dass er alles erkennt

03:22:18.140 --> 03:22:21.180
Ok batterie 99 wollte nämlich gucken dass das gerät auch auf jeden fall alles

03:22:23.180 --> 03:22:26.700
Temperatur hat er erkannt alles klar ok ich werde jetzt den kühlschrank bringen

03:22:26.700 --> 03:22:32.660
Zack

03:22:56.700 --> 03:23:14.300
ist das gerade noch hochgegangen wo ich schon wieder da war 24,8 null

03:23:14.300 --> 03:23:26.220
ja wahrscheinlich weil ich es in der hand hatte ok illumination 0 ist es ja im kühlschrank

03:23:26.220 --> 03:23:34.980
und es ist dunkel datenlöschen nö nö wir gucken da jetzt zu wie es kälter wird

03:23:34.980 --> 03:23:43.220
aktuell haben wir noch 3 und noch 24,8 wie viel platz ist auf dem ganzen flash noch für lips

03:23:43.220 --> 03:23:54.540
gucken wir mal 25 prozent also nenne mal so viel aber das reicht also für einen web interface mit

03:23:54.540 --> 03:24:05.980
ota sollte das noch reichen so wir müssen jetzt abwarten ob das ding sich meldet aus

03:24:05.980 --> 03:24:23.940
im kühlschrank das problem ist nämlich so wirklich weiß ich nicht ob es funktioniert

03:24:23.940 --> 03:24:39.900
22,5 geht runter es droppt plus usb ip ne ne das ding geht ja komplett über den wlan ich

03:24:39.900 --> 03:24:44.620
kann es auch so alles abfragen ich werde das werde das in flur hängen wenn es so weit ist

03:24:44.620 --> 03:24:54.380
aber es funktioniert 22,5 leute beobachtet das mal ich gehe mal kurz pinkeln

03:26:14.620 --> 03:26:42.460
und

03:26:42.460 --> 03:26:52.620
funktioniert der kühlschrank champ hat schon nichts getan sonst oder oder hat sich was getan

03:26:52.620 --> 03:27:22.380
22,5 naja also es könnte jetzt ein problem sein also es könnte ein problem sein dass es jetzt

03:27:22.380 --> 03:27:27.540
nicht das signal kommt durch es hat eben schon 22,5 gemeldet da war es ja schon im kühlschrank

03:27:27.540 --> 03:27:35.340
das problem ist dass nicht mehr jedes signal durchkommt es kommt wir haben es jetzt letzte

03:27:35.340 --> 03:27:40.820
mal getestet es kommt normalerweise sind sie in fünf sechs signale die kommen alle durch wenn

03:27:40.820 --> 03:27:45.740
das ding im kühlschrank liegt kommt nur noch ein signal oder zwei signale durch von irgendwie

03:27:45.740 --> 03:27:58.340
56 und er muss genau zur gleichen zeit zufällig scannen während das ding das schickt also es

03:27:58.340 --> 03:28:03.660
ist auf jeden fall sinnvoller das ding in flur zu hängen anstatt hier am rechner hängen zu

03:28:03.660 --> 03:28:11.900
lassen ich mein ich kann den ich kann den scan intervall ne dauer scan kann ich nicht weil ich

03:28:11.900 --> 03:28:28.620
wlan an hab wenn ich dauer scanne kackt das wlan ab oh guck mal 15,7 ist runtergegangen

03:28:28.620 --> 03:28:40.220
habt ihr gesehen 15,7 also es funktioniert alles hat halt ein bisschen verzögert aber

03:28:40.220 --> 03:28:46.540
damit kann ich leben zumal wenn das im flur hängt dann ist es auch besser vom empfang

03:28:46.540 --> 03:28:55.060
her was für ein wappen der fest das ist haumassistent wie kalt wird es noch ja 10 grad oder so wo das

03:28:55.060 --> 03:29:02.900
liegt beides in den kühlschrank ne da komme ich im wlan nicht richtig raus dann das ding

03:29:02.900 --> 03:29:09.380
kommt in flur das ding kommt in flur oder vielleicht neben den kühlschrank aber nicht

03:29:09.380 --> 03:29:15.780
in den kühlschrank und das soll dann auch die waage auf am bad empfangen übrigens ich

03:29:15.780 --> 03:29:20.660
habe mir das interessiert ich habe als waage me scale ich bin mir nicht ganz sicher welche

03:29:20.660 --> 03:29:26.580
me scale ich muss mal kurz bei amazon gucken die haben wir auch mal im stream schon ausprobiert

03:29:26.580 --> 03:29:37.260
by the way ich muss mal kurz gucken welche version weil das entscheidend ist was ich machen muss

03:29:37.260 --> 03:29:54.380
dafür scale me body composition scale ok scale 2 habe ich ne scale 2 scale 2 blue truth esp 32

03:29:54.380 --> 03:30:11.620
guck da bäm da kann man sich abgucken wie das funktioniert mit der waage ab

03:30:11.620 --> 03:30:25.140
wo man sind immer so viel bei den was haben wir jetzt 15,1 hatte mir eben schon 15,1 sensor

03:30:25.140 --> 03:30:38.060
und so und es ist runtergegangen ist runtergegangen von 15,7 auf 15,1 nein ich will das nicht ich will

03:30:38.060 --> 03:30:54.500
mein gewicht nicht in die china china cloud hochladen leute password leak so also wie

03:30:54.500 --> 03:30:59.940
machen wir machen der typ das hier wie kann man die waage auslesen soll das ganze mqt tt

03:30:59.940 --> 03:31:10.300
im mqtt zeug ich kann nicht den code benutzen weil ich will es auf dem gleichen gerät laufen

03:31:10.300 --> 03:31:24.780
lassen da will ich ja ich will ja meins haben und die waage drin so was machen die dann hier

03:31:24.780 --> 03:31:40.380
zeig mal hier was zum geier irgendwelche string to to to int oder sowas halbe halbe die esp 32

03:31:40.380 --> 03:31:48.460
sind eigentlich kein arduino aber die haben 13,5 die haben arduino die haben so ein arduino

03:31:48.460 --> 03:31:55.300
compatible compatibility layer obendrauf das heißt man kann auch arduino, guck mal es geht

03:31:55.300 --> 03:32:00.500
wirklich weiter runter man kann arduino zeug verwenden oftmals ist es allerdings sinniger

03:32:00.500 --> 03:32:11.740
die schon eingebauten sachen zu verwenden zum beispiel für mehrere threats und tasks und sowas

03:32:11.740 --> 03:32:25.380
so also wie machen wir machten der typ das jetzt oth ist mir auch otha ist mir auch egal callback

03:32:25.380 --> 03:32:35.180
das ist auch nix hat auch nix mit der waage zu tun reconnect

03:32:35.180 --> 03:32:42.820
ja das haben wir gesehen das geht zusammen

03:32:42.820 --> 03:33:07.500
hier ok also wie zum geier lesen die sachen aus der waage aus

03:33:07.500 --> 03:33:21.060
gern oft bla bla bla habt ihr jetzt irgendwas ach hier found devices

03:33:21.060 --> 03:33:49.820
ask and results ok ok

03:33:49.820 --> 03:33:57.980
ok das gucke ich mir heute definitiv nicht an das gucke ich mir in einem der nächsten

03:33:57.980 --> 03:34:04.460
sachen an also have service data und dann wieder irgendwie magic magic sachen auslesen wo was wo

03:34:04.460 --> 03:34:12.060
was drinne steht ok bei the way mir fällt gerade ok 12,3 schon es geht runter mir ist gerade

03:34:12.060 --> 03:34:18.220
aufgefallen dass es für die waage gar nicht so gut funktioniert weil ich bin wieder dran ich

03:34:18.220 --> 03:34:23.820
war ich war zwei stunden weg zwischendurch habe reifen gewechselt also direkt die idf nutzen

03:34:23.820 --> 03:34:29.060
nee ich mache es trotzdem am liebsten mit platform i o und dem arduino aufsatz einfach weil es

03:34:29.060 --> 03:34:35.380
ein paar libraries gibt die nice sind und du kannst ja wenn du wenn du wenn du arduino verwendest du

03:34:35.380 --> 03:34:39.500
kannst ja auch die sachen die unten drunter sind verwenden einzige was du nicht machen kannst den

03:34:39.500 --> 03:34:47.980
die projekt settings im idf ändern aber die standard arduino settings sind ganz ok manchmal

03:34:47.980 --> 03:34:53.260
ist es doof weil du weil du bestimmte sachen nicht enablen kannst aber in der zu 99 prozent

03:34:53.260 --> 03:35:01.380
ist ok wir haben auch schon mal idf projekt hier gemacht irgendwann im stream aber meistens

03:35:01.380 --> 03:35:10.420
mache ich wirklich die arduino geschichte mir ist aufgefallen mit der waage funktioniert es gar

03:35:10.420 --> 03:35:17.620
nicht so gut weil die waage schickt einmal nachdem es fertig ist schickt das die die werte so und das

03:35:17.620 --> 03:35:28.140
problem ist jetzt dass so selten wie ich gerne kriege ich das garantiert nicht mit dass die

03:35:28.140 --> 03:35:35.580
waage am start ist dass die bagging gibt es nicht die bagging kannst du printline machen oder du

03:35:35.580 --> 03:35:39.980
brauchst ein hardware die bagger aber dafür ist das wenn du ein hardware die bagge hast es ist

03:35:39.980 --> 03:35:45.900
hier ein plattform ganz gut integriert deswegen kann ich dir nur empfehlen den plattform

03:35:45.900 --> 03:35:59.620
ein ok damit ist es relativ easy wer hat besseren sleep arduino nano oder die 1 mini die sind beide

03:35:59.620 --> 03:36:11.980
nicht sonderlich gut ok den nano bin ich mir gar nicht so sicher da bin ich mir gar nicht sicher

03:36:11.980 --> 03:36:22.140
was es braucht 0,3 milliampere ist definitiv nicht perfekt für batterien das sind 300 microampere

03:36:22.140 --> 03:36:31.860
das ist total viel das ist das ist ganz relativ schnell eher ok also 10 microampere ist in

03:36:31.860 --> 03:36:37.860
ordnung mit 10 microampere kann man leben der demo mini an dem musst du ordentlich rumlöten

03:36:37.860 --> 03:36:46.700
dass du den irgendwie auch nur halbwegs strom sparen bekommst jeezy pro 36 v2 dankeschön für

03:36:46.700 --> 03:36:56.540
den zapp excellent subscription welcher chip ist der beste für deep sleep also wenn du

03:36:56.540 --> 03:37:07.620
wirklich deep sleep projekte machen willst ja das trickboard wobei ich ganz ehrlich da

03:37:07.620 --> 03:37:12.180
kein großartiger fan von bin das ist ziemlich teuer du musst es importieren es ist nur

03:37:12.180 --> 03:37:17.500
ein esp 2866 wobei ich glaube die gibt es mittlerweile auch von esp 23 variante aber

03:37:17.500 --> 03:37:22.540
das schaltet alles ab also du kannst auch keinen speicher mehr benutzen ja das ist halt

03:37:22.540 --> 03:37:33.620
wirklich für ultra low power und auch nur wenn du nach time aufwachen willst das ding

03:37:33.620 --> 03:37:50.060
hier ist gut für deep sleep das ding hier ist gut für deep sleep das ist extra dafür

03:37:50.060 --> 03:37:54.300
gemacht und du hast direkt einen batterie connector wo du irgendwelche akkus dran machen

03:37:54.300 --> 03:38:02.860
kannst wenn du da 1200 oder 2000 milliampere stunden akku dran machst und klein sodass

03:38:02.860 --> 03:38:09.620
das quasi hier drunter passt dann kannst du das ding durchaus 23 jahre sleepen lassen

03:38:09.620 --> 03:38:18.900
wenn du nur selten aufwachst natürlich ja und je nachdem wie sich der akku entlädt

03:38:18.900 --> 03:38:27.700
aber das frisst so gut wie nichts das sind das sind im deep sleep 10 10 10 microampere

03:38:27.700 --> 03:38:31.740
und mal kurzzeitig ein bisschen mehr wenn es aufwacht aber wenn du nur drei viermal

03:38:31.740 --> 03:38:37.540
am tag aufwachst um was zu übertragen das hält wirklich verdammt lang gibt es auch

03:38:37.540 --> 03:38:54.980
so ein battery life hier genau aber da gab es einen besseren da gab es einen besseren

03:38:54.980 --> 03:39:13.500
der da der da der hier oh ne der war ganz gut der ist weg rib ne so do it yourself alexa

03:39:13.500 --> 03:39:21.180
gibt es nicht wirklich so viel gutes es gibt das hier das aber was mich daran nervt ist

03:39:21.180 --> 03:39:38.020
dass die dass man das handy nicht verwenden kann

03:39:38.020 --> 03:39:51.620
ist das falsche projekt es gibt eine flatte ab wirklich echt die muss ich mal ausprobieren

03:39:51.620 --> 03:40:00.820
aber bestimmt nicht für ios ach es moved ab wo gibt es eine ab wir würden ja sogar

03:40:00.820 --> 03:40:20.180
eine pva oder so reichen ab wo gibt es eine ab flatter hast du mal link also das stört

03:40:20.180 --> 03:40:28.620
mich halt dass mein handy nicht dafür verwenden kann so wie warm 10,7 grad im kühlschrank

03:40:28.620 --> 03:40:41.780
leute des sieh gut aus was ist das gibt es für ios ok das schon mal ganz praktisch

03:40:41.780 --> 03:41:05.340
ok aber ohne scheiß dem würde ich das sogar bezahlen die gebühren für den store

03:41:05.340 --> 03:41:24.780
gut ich brauche schon eine app im store sonst ist er doof ok das ist schon mal ganz gut

03:41:24.780 --> 03:41:29.300
aber das kann auch text to speech oder also ich muss da nicht tippen da kann schon text

03:41:29.300 --> 03:41:40.300
to speech warum machen die nicht eigentlich einfach eine pva warum machen die nicht eine

03:41:40.300 --> 03:41:56.300
pva spricht kann man kann man in einer pva nicht text to speech machen warum ist das

03:41:56.300 --> 03:42:16.940
hier eigentlich nicht verlinkt pva ok auf die idee ist noch keiner gekommen doch ja

03:42:16.940 --> 03:42:31.900
so lange es da keine smartphone apps für gibt ist das so ein bisschen pains champig

03:42:31.900 --> 03:42:36.460
aber das könnte man auch mit einer pva machen das wäre doch viel sinnvoller dann muss es

03:42:36.460 --> 03:42:54.580
auch nicht ins store da muss es auch nicht ins store bringen naja gut wie gesagt also

03:42:54.580 --> 03:43:08.420
ohne ohne smartphone apps finde ich halt ein bisschen doof ok vielleicht hat es einen

03:43:08.420 --> 03:43:13.100
grund warum das nicht geht mit pva so wir sind bei 10,4 grad leute das funktioniert

03:43:13.100 --> 03:43:21.660
alles nee ich will da keine eigene app verbauen pains champ aber vielleicht funktioniert das

03:43:21.660 --> 03:43:30.340
ja es spricht sagen wir man kann doch unter ios in der pva auf das mikrofon zugreifen

03:43:30.340 --> 03:43:54.900
oder

03:43:54.900 --> 03:43:59.540
ios macht man wieder einen strich durch die rechung dass die kram nicht richtig funktioniert

03:43:59.540 --> 03:44:08.020
was ist der unterschied zwischen pva und elektron naja pva ist im prinzip nur die webseite

03:44:08.020 --> 03:44:13.380
die dann quasi als verknüpfung auf dem homescreen ist eine elektron app müsst ihr über den

03:44:13.380 --> 03:44:31.860
store verteilen obwohl es auch nur ein browser ist ja das ist mal wieder pains champ dass

03:44:31.860 --> 03:44:46.580
das und der apple wohl nicht richtig funktioniert aber das vielleicht geht das doch und das

03:44:46.580 --> 03:44:57.780
ist einfach nur alt ist der gopher flow einträge super du wirst schon mal ausprobieren aber

03:44:57.780 --> 03:45:03.460
ich will keine eigene app machen das ist mir zu pains champ also was heißt app ich müsste

03:45:03.460 --> 03:45:12.140
ja eine webseite einfach nur machen wenn es easy ist komm mal 10,4 nice wenn es easy ist

03:45:12.140 --> 03:45:28.180
könnte man sich das überlegen was es ist composed of independent software ok man kann

03:45:28.180 --> 03:45:37.340
keine app machen man kann keine app machen weil mqtt ist nicht websockets und nicht sonst

03:45:37.340 --> 03:45:48.780
ist ein eigenes protokoll das geht über webseiten nicht da haben wir schon keine pva vielleicht

03:45:48.780 --> 03:46:03.420
haben die aber auch die möglichkeit ist über den webservice zu machen a websocket api ok

03:46:03.420 --> 03:46:19.020
dann ist wiederum ok dann geht das ja das wüsste ich mal ausprobieren ein bisschen

03:46:19.020 --> 03:46:34.180
rumbasteln aber wichtig für mich ist dass es mobile apps gibt ich will mein handy in

03:46:34.180 --> 03:46:47.220
der hand haben und zweifeln von voice kommando machen können so aber ich würde sagen 10

03:46:47.220 --> 03:46:55.820
grad im kühlschrank ich würde sagen dass ich hier ist wirklich erfolgreich ihr seht

03:46:55.820 --> 03:47:20.260
der sensor tut sensorik champ man könnte jetzt noch man könnte jetzt noch massive craft

03:47:20.260 --> 03:47:31.820
champ machen sensor ist aber wie heißt mein sensor sack der ist mein sensor cool champ

03:47:31.820 --> 03:47:53.380
warum ist er da nicht drin weil es nicht cool champ heißt sondern sollte der sensor nicht

03:47:53.380 --> 03:48:18.100
cool champ heißen ane mecha adresse hinten dran also temp den sensor brauchen wir huge

03:48:18.100 --> 03:48:41.860
huge crafts kwh wait a minute keck weight was ist mit dem graph los

03:48:41.860 --> 03:48:49.340
der craft gibt überhaupt keinen sinn

03:48:49.340 --> 03:48:56.100
komm mal so sieht der craft aus warum geht der craft da hoch

03:48:56.100 --> 03:49:04.820
findet ihr dass das hier und das hier irgendwie ähnlich aussehen

03:49:04.820 --> 03:49:17.780
ok aber warum

03:49:17.780 --> 03:49:38.060
das ergibt keinen sinn ah ok das sieht besser aus das sieht besser aus das sieht besser

03:49:38.060 --> 03:49:50.620
aus alles klar ja der cool champ ja ok was auch immer der problem war ich brauche noch

03:49:50.620 --> 03:50:04.940
ein bisschen mehr daten ok alles klar das funktioniert gut excellent craft jetzt habe

03:50:04.940 --> 03:50:12.900
ich meine temperatur vom kühlschrank das ist nicht nice ja wie lange hält die batterie

03:50:12.900 --> 03:50:19.460
circa das weiß ich noch nicht aber sobald ich das in betrieb nehme werde ich das in

03:50:19.460 --> 03:50:26.580
meinen batterie champ einbauen der batterie champ nicht nicht der heizungs champ sondern

03:50:26.580 --> 03:50:35.580
in den managed dashboard batterie wo ich die ganzen sensor batterie oder zumindest die

03:50:35.580 --> 03:50:40.980
meisten und die wichtigsten sensor batterien drinne habe dann sehe ich wann es der sache

03:50:40.980 --> 03:50:49.900
zur neige geht und ich sehe dass der tür sensor unten an der eingangstür ein bisschen leer

03:50:49.900 --> 03:50:54.780
ist darf ich fragen wieso du ein sensor in meinem kühlschrank hast also der erste sache

03:50:54.780 --> 03:50:59.900
ist natürlich weil ich sensoren übrig habe und weil es geht das ist schon mal das wichtigste

03:50:59.900 --> 03:51:05.700
an der sache und das nächste ist weil ich mitbekommen will wenn mein kühlschrank rum

03:51:05.700 --> 03:51:11.500
spackt da ist nämlich ein bisschen weiß ich nicht kaputt ja doch oder zumindest nicht

03:51:11.500 --> 03:51:15.860
darauf kaputt der muss man manchmal rebooten weil er komische geräusche macht ich habe

03:51:15.860 --> 03:51:19.740
ein bisschen bedenken dass der mal den geist aufgibt nicht kriegt das erste tach später

03:51:19.740 --> 03:51:26.660
und ein halben tach später mit und hier siehst du das natürlich wunderbar jetzt du hast

03:51:26.660 --> 03:51:37.300
jetzt hier direkt drinnen temperatur vom kühlschrank temperatur vom kühlschrank doch hier mit

03:51:37.300 --> 03:51:43.660
verlauf hier war es draußen habe hier ein bisschen kühlschrank gelegt und du siehst

03:51:43.660 --> 03:51:49.060
den batteriestand vom sensor und ob ich die tür aufgelassen habe weil normalerweise ist

03:51:49.060 --> 03:51:55.540
es im kühlschrank dunkel das heißt wir haben hier null helligkeit und wenn ich den kühlschrank

03:51:55.540 --> 03:52:04.420
aufmache oder den oder das licht drinnen angeht dann kriege ich hier was und da kann

03:52:04.420 --> 03:52:13.380
ich sagen ey wenn das licht länger an ist als zwei minuten dann mach was für was verwendest

03:52:13.380 --> 03:52:22.340
du wie es kaut im home assistant kann man editieren kann man konfig editieren ich habe

03:52:22.340 --> 03:52:31.540
aber das ist nur meine testinstanz ne setzt du auch notifications habe ich grad nicht

03:52:31.540 --> 03:52:39.060
ne bin ich am überlegen aber ich gucke da so oft rein ich krieg das schon mit so 10,1

03:52:39.060 --> 03:52:45.940
ist viel kälter wird es nicht mehr der kühlschrank ist glaub eingestellt auf unten 5 oben 10

03:52:45.940 --> 03:53:05.420
oder es liegt in der mitte oder umgedreht passt eigentlich gut äh welches board oh ich glaub

03:53:05.420 --> 03:53:22.620
meine katze will will rein als board habe ich grad als basis für diese geschichte habe

03:53:22.620 --> 03:53:39.580
ich

03:53:39.580 --> 03:53:49.540
sind. Aber der ist ernsthaft nicht schlecht. Der ist relativ klein, nicht mini, also nicht

03:53:49.540 --> 03:53:54.500
ultra klein, auch wenn er mini heißt, aber ist okay und ist preisleistungsmäßig echt

03:53:54.500 --> 03:54:03.020
in Ordnung. Nur für Deep Sleep und Batterie-Projekte ist das nix. Weibliche Chico, ja, es ist ein

03:54:03.020 --> 03:54:10.740
bisschen merkwürdig, ich hab mir das nicht ausgesucht. Ähm, meine Katze. Also die da.

03:54:10.740 --> 03:54:29.460
Wo ist der? Hier. Die da. Das Bild, äh. Oho, stinkig, das Hemd, so geil. Heißt Chico,

03:54:29.460 --> 03:54:43.060
aber ist ne Katze. Was saugt denn den Strom auf dem Board? Hä, was meinste? Der CPU,

03:54:43.060 --> 03:54:50.180
WLAN, Bluetooth. Aber insgesamt braucht es nicht viel, also zu Spitzenlastzeiten, keine

03:54:50.180 --> 03:54:59.420
Ahnung, 150, 200mAh vielleicht. Also du musst dich schon ganz schön anstrengen, wenn du

03:54:59.420 --> 03:55:05.860
mal so ein Messgerät anschließt, du musst dich schon ganz schön anstrengen, dass du

03:55:05.860 --> 03:55:12.740
auf nen Watt kommst mit nem ESP32. Also da musst du schon, da musst du schon einiges

03:55:12.740 --> 03:55:17.100
machen. Da musst du wahrscheinlich beide CPU Kerne voll auslasten plus WLAN und Bluetooth

03:55:17.100 --> 03:55:31.420
machen, dass du das schaffst. Äh, droh USB, einfach USB. Was übrigens auch der Grund

03:55:31.420 --> 03:55:35.260
ist, warum diese Boards für Deep Sleep nicht so gut sind, weil die meisten, auch wenn

03:55:35.260 --> 03:55:42.180
sie von der Batterie gepowert werden, den USB Spannungswandler und den 5V Spannungswandler

03:55:42.180 --> 03:55:58.380
noch versorgen und das macht halt keinen, verbraucht halt unnütz Strom, ja. Der D1

03:55:58.380 --> 03:56:04.380
Mini, also bei dem ESP32 D1 Mini weiß ich nicht, aber bei dem alten war es so wie gesagt

03:56:04.380 --> 03:56:07.580
die Spannungswandler für Sachen, die du eigentlich gar nicht brauchst, war noch standardmäßig

03:56:07.580 --> 03:56:13.940
versorgt, USB war standardmäßig mit versorgt, es waren 1-2 LEDs an. Also du kannst an dem

03:56:13.940 --> 03:56:18.980
Board rumlöten und du kriegst es bestimmt auch zu nem relativ guten Deep Sleep, aber

03:56:18.980 --> 03:56:22.060
du hast keinen Batterie-Connector und es ist nicht für Deep Sleep gedacht. Das heißt

03:56:22.060 --> 03:56:27.100
du kannst dir für 6,50 einfach nen Board kaufen, was gut gedacht ist für Deep Sleep und einen

03:56:27.100 --> 03:56:34.220
Batterie-Connector hat. Ja das Problem ist, wenn du den Kram durchschneidest, du willst

03:56:34.220 --> 03:56:39.860
das Board ja später per USB noch anschließen können, um es zu flashen. Also das ganze rumlöten

03:56:39.860 --> 03:56:47.780
und so. Ich würd einfach nen Board nehmen, was für Deep Sleep gedacht ist. Ja, wie gesagt

03:56:47.780 --> 03:56:56.500
das ist ne Katze. Obwohl sie Chico heißt. Aber das hab ich mir nicht ausgedacht, das

03:56:56.500 --> 03:57:05.180
haben sich die ehemaligen Besitzer ausgedacht. Die ist ja auch schon 12 oder so jetzt. Die

03:57:05.180 --> 03:57:12.740
haben sich halt gedacht, Chico ist ein guter Mädchennamen. Ok 10,1, exellent. Leute wisst

03:57:12.740 --> 03:57:16.020
ihr was, ich lass das Ding heute mal über Nacht im Kühlschrank und morgen guck ich

03:57:16.020 --> 03:57:24.580
mal was das sagt. Man kann dort nen Jumper machen oder Lötstelle. Das kann man alles

03:57:24.580 --> 03:57:30.220
machen. Aber warum kauft man sich nicht einfach für 6,50 ein Board, was für Deep Sleep und

03:57:30.220 --> 03:57:38.740
Batterie-Projekte gedacht ist. Problem Solved. Ok ich mach das mal ab. Leute ich geh jetzt

03:57:38.740 --> 03:57:44.460
ins Bett. Ich bin müde. Heute ganz schön lang gestreamt. Ist da Frazier oder irgendjemand

03:57:44.460 --> 03:57:53.180
am Start, den man hosten kann? Nope. Kein Frazier am Start. Wie der Frazier war heute

03:57:53.180 --> 03:58:15.260
nicht da, was hier lohnt am Feiertag? Zempervideos haben wir das letzte Mal schon gehostet. Sind

03:58:15.260 --> 03:58:19.300
2,50 Unterschiede. Wenn das für dich relevant ist, musst du halt selbst dran rumlöten und

03:58:19.300 --> 03:58:24.500
dich mit rum ärgern. Also Leute wir sehen uns. Machts gut bis denn. CU ich hoffe euch

03:58:24.500 --> 03:58:30.180
hat es gefallen. Waren ja viele mit am Start bis jetzt zum Schluss und heute mal echt ein

03:58:30.180 --> 03:58:50.580
bisschen was funktioniert hat und alles gut ist. Also machts gut. Bis denn. CU.

