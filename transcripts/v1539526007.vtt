WEBVTT

00:30.000 --> 00:55.800
der

00:55.800 --> 01:15.760
ich glaube das ist das einzige ppe-mode was wir nicht haben

01:15.760 --> 01:20.480
nein, haben wir nicht, aber poggers haben wir

01:20.480 --> 01:29.080
ja leute heute bisschen go weiter lernen als beispielanwendung nehmen wir das gleiche was

01:29.080 --> 01:33.360
ich das letzte mal gebaut habe in dotnet wo ich in rust versagt habe das umzubauen

01:33.360 --> 01:37.160
ich muss euch aber gleich wobei ich warte ich warte erst mal ich warte erst mal kurz bis

01:37.160 --> 01:48.920
das stream richtig angelaufen ist jetzt schon betke hast du nur darauf gewartet dass hier

01:48.920 --> 01:53.320
den streamer macht dass du bett das zu schlafen gehen kannst oder wie ist das

01:53.320 --> 01:59.760
ich muss mal kurz meine e-mails gucken jetzt würde ich gerade den 2 rechner anhab mail

01:59.760 --> 02:11.640
rade shadow legends ich fasse es nicht die geben auch nie auf oder rade shadow legends

02:11.640 --> 02:20.000
hi max ich erhielt leider keine reaktion von dir auf die anfrage zu rade shadow legends

02:20.000 --> 02:32.520
nein das ist aber auch in ordnung steht dahinter ok da bin ich aber froh da bin ich bin ich

02:32.520 --> 02:45.240
beruhigt dass das ok ist ja also leute jetzt wo ihr ein paar leute da sind ich muss euch

02:45.240 --> 02:50.320
sagen ich weiß nicht wie das heute klappt wie lange das wie lange das klappt mit dem

02:50.320 --> 02:55.320
stream vielleicht kein problem vielleicht geht es auch nicht so lang das liegt daran

02:55.320 --> 02:59.440
ich habe immer noch ein bisschen kopfweh und heute morgen musste ich eine wurzelbehandlung

02:59.440 --> 03:03.000
über mich ergehen lassen weil ich habe euch ja schon vor ein paar wochen gesagt ich habe

03:03.000 --> 03:07.160
irgendwie zahnweh und wir haben das nicht anders hinbekommen alles mögliche probiert

03:07.160 --> 03:17.480
ja aber auch wenn es nicht so ausgesehen hat aber anscheinend ging es nicht anders ja

03:17.480 --> 03:21.680
und ja durch die behandlung und das auf dem kopf liegen dort habe ich jetzt natürlich

03:21.680 --> 03:28.320
noch mehr kopfweh und es hält schon auch den ganzen tag kann ich das ist doch ein twitchy

03:28.320 --> 03:40.840
mod warum ist denn das weg wurde das entfernt ja habe ich hinzugefügt ach stimmt das wurde

03:40.840 --> 03:45.860
entfernt weil der typ weil der typ den nicht die rechte an seinem gesicht geben wollte

03:45.860 --> 03:51.560
oder so ja ja ok ich erinnere mich dunkel da war was ja das ist ja das ist schon zehn

03:51.560 --> 03:57.320
jahre her oder so ist schon ewig her ja ich muss sagen so schlimm an sich war es gar nicht

03:57.320 --> 04:04.240
aber betäubung hält halt ewig es war heute morgen schon um acht also ist es schon her

04:04.240 --> 04:08.880
betäubung ist mittlerweile auch weg es tut ein bisschen weh drumherum an der stelle wo

04:08.880 --> 04:13.920
wurzelbehandlung war ist natürlich nichts weil die wurzel ist ja weg ohne nerven merkste

04:13.920 --> 04:18.240
nichts ein bisschen weh aber ich habe hauptsächlich kopfweh und ich merke es auch noch ein bisschen

04:18.240 --> 04:21.880
ich muss jetzt mal abwarten die nächsten tage ich habe hier noch ich habe hier noch pillen

04:21.880 --> 04:32.600
am start aber ich nehme ihr kennt mich ich nehme ungern schmerzmittel poggies lode game

04:32.600 --> 04:48.640
danke für den sub falls ich nicht schon gesagt habe ja ist es auch aber ich werde da nicht

04:48.640 --> 04:54.480
geweckt ich werde nie von weckern wach ich bin immer schon wach wie viele tabs na ja

04:54.480 --> 04:58.720
also man erkennt doch noch was was ist ich habe alternativ hier noch ein paar was machen

04:58.720 --> 05:07.240
eigentlich die battlefield spieler zahlen wo wir gerade so dabei sind es hat gepiekt

05:07.240 --> 05:16.760
moment hat es gepiekt es hat 24h peak yo yo yo yo massive und new world new world ist

05:16.760 --> 05:24.400
weiter am abkacken ok nice gg easy alter die haben so das habe ich noch nie gesehen so

05:24.400 --> 05:30.240
ein heftiger festschiss die new world das habe ich also also in diesem ausmaß habe

05:30.240 --> 05:36.720
ich das glaube ich noch nie gesehen so ich war mal kurz meine links vm auf weil ich fürchte

05:36.720 --> 05:41.160
wir müssen mal kurz updates machen ich habe das nämlich vorhin auf meinen anderen vm gesehen

05:41.160 --> 05:47.920
rast rast muss weg leute heute ich habe off screen noch ein bisschen rast mir angeguckt

05:47.920 --> 05:59.520
alter das ist so wir was heißt wir so umständlich und anstrengend ich weiß nicht ob sich das

05:59.520 --> 06:07.440
lohnt für so alltägliche aufgaben allein schon ein erstes webrequest zu machen ist

06:07.440 --> 06:14.120
da wieder eine wissenschaft für sich vielleicht mache ich das jedenfalls anders aber heute

06:14.120 --> 06:19.160
machen wir mal ein bisschen go wieder aber das muss weg der rast der rast champ kommt

06:19.160 --> 06:24.280
weg und bei der gelegenheit machen wir gerade mal ein update weil ich glaube ich glaube

06:24.280 --> 06:30.800
ich muss muss ab ja es ist der bam wusste ich doch schon reality mod gespielt ja ich

06:30.800 --> 06:35.880
habe gesagt ich habe ich habe drei leute die ganze runde über runde über gekillt weil

06:35.880 --> 06:41.240
ich den rest nicht gesehen habe das ist aber auch was was man im team bzw mit kommt mit

06:41.240 --> 06:48.480
coms bzw noch besser mit bekannten spielen muss oder mit online mit festen teammates

06:48.480 --> 06:52.760
spielen muss dann geht das auf der anderen seite ich habe vorhin mal kurz reingeguckt

06:52.760 --> 06:58.720
da waren gerade mal zwei server noch spielbar von irgendwie 30 bei release also ich weiß

06:58.720 --> 07:01.920
nicht wie lange das überlebt ob sich das überhaupt lohnt sich da einzuarbeiten keine

07:01.920 --> 07:10.720
ahnung naja heute nicht so ehrlich gesagt heute morgen wurzelbehandlung und kopfweh

07:10.720 --> 07:13.960
noch deswegen weiß ich nicht wie lange der stream heute geht vielleicht geht es ja auch

07:13.960 --> 07:17.880
ohne probleme ich hatte schon öfters wenn ich angefangen habe zu stream war das kopfweh

07:17.880 --> 07:26.360
weg zumindest wichtig ordentlich trinken dabei ich habe jetzt hier noch ein liter wasser

07:26.360 --> 07:34.080
stehen zwischendurch mal auffüllen ja hoffe ich auch hoffe ich auch übrigens wenn ich

07:34.080 --> 07:41.040
mal ein paar geträgerte linux fans sehen wollt guckt euch einfach die comments unter meinem

07:41.040 --> 07:48.840
letzten video an also nicht alle die meisten sind ja vollkommen rational und und schreiben

07:48.840 --> 07:53.440
sinnvolle sinnvolle comments ja viele stimmen mir da auch zu aber du hast da auch so ein

07:53.440 --> 07:58.900
paar du hast auch so ein paar ganz spezielle leute ja so hier zum beispiel der erste was

07:58.900 --> 08:04.240
ich hier sehe und guckt mal guck dann auch nicht an also der ist erst mal der ist erstmal

08:04.240 --> 08:11.400
hyper trigger der typ das ist doch bullshit so leute wie du die so ein bullshit erzählen

08:11.400 --> 08:15.480
sind mit der grund dass sich linux auf dem desktop nicht durchsetzt also leute merke

08:15.480 --> 08:23.240
es ist mal wieder so derjenige der die probleme anspricht ist das problem nicht der auslöser

08:23.240 --> 08:26.240
Ja? Logisch. Obvius.

08:28.640 --> 08:30.560
Was ist mit Rust? Heute nicht.

08:30.560 --> 08:33.320
Ich hab eh schon Kopfschmerz, das halt ich nicht aus mit Rust.

08:33.320 --> 08:36.520
Ich hab offstream, ich hab's grad gesagt, da warste wahrscheinlich noch nicht da,

08:36.520 --> 08:41.080
ich hab offstream ein bisschen Rust rumgebastelt und das ist mega umständlich.

08:41.080 --> 08:41.960
Ich weiß nicht,

08:41.960 --> 08:45.400
ob sich das lohnt für so alltägliche Tools und Software.

08:45.400 --> 08:48.560
In seinem Bereich, wofür Rust gedacht, ich mein, das wurde nicht umsonst von

08:48.560 --> 08:51.440
Marzilla entwickelt, um unter anderem auch ihren Browser

08:51.440 --> 08:54.120
memory safe und sicherer zu machen.

08:56.720 --> 08:59.760
Da kann ich das verstehen und vielleicht für

08:59.760 --> 09:02.960
sicherheitskritisch oder Sachen, die halt besonders stable laufen müssen

09:02.960 --> 09:05.840
und performancebar, okay, kann ich alles verstehen.

09:05.840 --> 09:11.720
Aber für die 0815 Tools bin ich mir nicht sicher,

09:11.720 --> 09:15.920
ob es eine gute Idee ist, Rust zu verwenden.

09:15.920 --> 09:18.200
Ja, ich hab daheim in Zabbix.

09:18.200 --> 09:21.480
Also wir hatten lange Zeit auf der, also Monitoring Systeme hab ich folgende

09:21.480 --> 09:24.560
Erfahrung. Nagios, kenn ich mich tatsächlich relativ gut aus,

09:24.560 --> 09:26.640
hab ich mich jahrelang drum gekümmert,

09:26.640 --> 09:27.920
schon lange her.

09:27.920 --> 09:30.160
Zabbix hatten wir auf der Arbeit jahrelang

09:30.160 --> 09:32.520
und ich hab aktuell noch einen bei mir daheim.

09:32.520 --> 09:35.120
Da kenn ich mich auch ganz gut aus mittlerweile.

09:35.120 --> 09:39.520
Und ansonsten ist die große Frage, was du machen willst.

09:39.520 --> 09:42.920
Willst du einfach nur einfache Checks machen, du gucken, ob irgendwie eine

09:42.920 --> 09:46.880
Webseite antwortet oder ein Host oben ist und

09:46.880 --> 09:49.520
du kannst ja mal ein bisschen dein Anwendungsszenario schreiben, was du

09:49.520 --> 09:50.480
damit machen willst.

09:50.480 --> 09:53.560
So einfach nur gucken, ob ein Host oben ist, ob

09:53.560 --> 09:55.680
ein Port auf ist oder

09:55.680 --> 09:58.600
ob auf der Webseite das Richtige drauf steht.

09:58.600 --> 10:01.920
Und wenn du keine History brauchst

10:01.920 --> 10:07.080
oder keine Custom Checks und größere Sachen, ja,

10:07.080 --> 10:12.120
dann gibt es richtig gute Self-hosted Alternativen, die einfach sind.

10:12.120 --> 10:13.360
Ansonsten

10:13.360 --> 10:18.160
das große Fast ist natürlich dann

10:18.160 --> 10:22.800
Prometheus.

10:22.800 --> 10:27.200
So als direkte Alternative, auch wenn der Schwerpunkt bei Zabbix und Prometheus

10:27.200 --> 10:30.000
jeweils ein bisschen anders liegt.

10:30.000 --> 10:32.920
Ja, hab ich auch schon gehört. Hab ich mich aber noch nie großartig mit

10:32.920 --> 10:36.720
beschäftigt. Ich weiß nur, das war mal Nagios.

10:36.720 --> 10:39.400
Mittlerweile glaubt nimmer.

10:39.400 --> 10:43.520
Ja, hat mich jetzt nicht so geschockt.

10:43.520 --> 10:50.520
Dann würde ich wahrscheinlich Zabbix vorziehen.

10:52.920 --> 10:54.760
Ja, die Sache ist halt, also

10:54.760 --> 10:57.160
die Frage ist, was du monitoren willst.

10:57.160 --> 10:59.600
Moin Michael, 50 Billiarden lang nicht gesehen.

10:59.600 --> 11:00.920
Die Frage ist halt,

11:00.920 --> 11:02.520
was du monitoren willst.

11:02.520 --> 11:06.640
Willst du eher so klassisches Blackbox Monitoring machen?

11:06.640 --> 11:08.360
Von außen halt gucken,

11:08.360 --> 11:10.120
pinkt der Host,

11:10.120 --> 11:12.360
ist SSH Port offen

11:12.360 --> 11:15.160
und sowas.

11:15.160 --> 11:18.200
Dafür ist

11:18.200 --> 11:22.000
Zabbix ganz nice.

11:22.000 --> 11:25.640
Willst du Metriken sammeln? Also interessiert dich zum Beispiel auch

11:25.640 --> 11:28.400
sowas wie

11:28.400 --> 11:31.640
bei einer Anwendung, wie oft läuft der Garbage Collector

11:31.640 --> 11:36.680
oder

11:36.680 --> 11:38.880
Zertifikatablauf,

11:38.880 --> 11:41.960
Daten und so, wobei das geht mit Zabbix auch.

11:41.960 --> 11:45.880
Also interessieren dich eher Metrix, dann eindeutig Prometheus, Grafana.

11:45.880 --> 11:48.800
Interessieren dich eher so klassische Blackbox Checks,

11:48.800 --> 11:51.200
wie man früher gemonitort hat, dann Zabbix.

11:51.200 --> 11:53.720
Man kann natürlich auch beides verbinden, aber dann wird schon ein bisschen

11:53.720 --> 11:56.200
Overkill für kleine Installationen.

11:56.200 --> 12:00.480
Und wenn du einfach nur ganz simple Sachen machen willst,

12:00.480 --> 12:06.520
dann ist das auch nicht schlecht.

12:06.520 --> 12:09.680
Das ist aber wirklich nur für kleine Installationen daheim.

12:09.680 --> 12:13.240
Also ich denke mal mehr als 100 Checks

12:13.240 --> 12:17.080
verkraftet es bestimmt, aber

12:17.080 --> 12:20.720
ja, also für daheim ist das, wenn man nix großartig Spezielles braucht und auch

12:20.720 --> 12:21.920
keine History braucht,

12:21.920 --> 12:23.600
ist das mit das Beste.

12:23.600 --> 12:27.080
Ansonsten hängt es davon ab, was man monitorn will.

12:27.080 --> 12:29.200
Nein, ich habe kein MacBook.

12:29.200 --> 12:32.360
Ich arbeite mit Linux und mit Windows gleichermaßen.

12:32.360 --> 12:33.520
Das wird ihr jetzt auch gleich sehen.

12:33.520 --> 12:38.600
Ja, aber der Blackbox Exporter ist von Prometheus, der ist vorhanden, ja, sag mal so.

12:38.600 --> 12:42.120
Man merkt, dass das nicht dafür gemacht ist.

12:42.120 --> 12:45.440
Allein schon das ganze Umlabeln

12:45.440 --> 12:47.120
ist jetzt nicht schön, das geht.

12:47.120 --> 12:51.320
Aber wenn man nur Blackbox Checks macht, dann ist sowas Klassisches wie Zabbix oder

12:51.320 --> 12:55.280
meinetwegen Nagios, vielleicht auch Checkmk oder LibreNMS, wenn es viele

12:55.280 --> 13:01.360
SNMP Netzwerkgeräte sind, sicherlich besser.

13:01.360 --> 13:03.160
Brauchst du keine mobile Workstation?

13:03.160 --> 13:07.120
Nö, brauche ich nicht.

13:07.120 --> 13:10.320
Ach so, ich habe ein Notebook von der Arbeit, es ist aber ein Windows Notebook.

13:10.320 --> 13:12.600
Also ich habe ein Linux Notebook auf der...

13:12.600 --> 13:15.680
Was zum Teufel ist, ist, ist, ist zählt?

13:15.680 --> 13:16.960
Was habe ich denn da installiert?

13:16.960 --> 13:20.040
Was ist das überhaupt?

13:20.040 --> 13:25.480
Low Latency Audio Communication Codec.

13:25.480 --> 13:29.120
Ich habe keine Ahnung, warum ich das installiert habe, aber

13:29.120 --> 13:32.280
ich leuchte mal wieder, weiß nicht, was das ist.

13:32.280 --> 13:35.000
Yes.

13:35.000 --> 13:40.080
Update, jetzt.

13:40.080 --> 13:44.880
Ja, also ich habe, ich habe von der Arbeit ein Windows Notebook hier liegen, das verwende ich aber so gut wie nie.

13:44.880 --> 13:47.320
Und auf der Arbeit habe ich schon ein Linux Notebook.

13:47.320 --> 13:51.920
Das werde ich ja wahrscheinlich demnächst ersetzen durch das Windows Ding von hier und dann lasse ich das auf der Arbeit stehen.

13:51.920 --> 13:56.520
Also ich brauche keine mobile Workstation, nö, brauche ich nicht.

13:56.520 --> 14:02.360
Ich habe mein Handy dabei für mobil unterwegs im Zug, reicht das allemal.

14:02.360 --> 14:06.120
Und ansonsten

14:06.120 --> 14:09.600
Schreibtisch an der Arbeit, Monitor,

14:09.600 --> 14:16.560
richtige Tastatur, Maus, Unterheim, Desktop, PC.

14:16.560 --> 14:18.640
Das kann man so kurz gar nicht sagen.

14:18.640 --> 14:22.360
Im Prinzip sind die Tools sich relativ ähnlich.

14:22.360 --> 14:26.120
Nagios ist in C, Zappix ist in PAP.

14:26.120 --> 14:28.720
Im Prinzip sind die Tools sich relativ ähnlich.

14:28.720 --> 14:31.080
Das sind beides klassische

14:31.080 --> 14:33.200
Monitoring Tools,

14:33.200 --> 14:35.320
die hauptsächlich

14:35.320 --> 14:37.640
ihre Stärken haben, indem du von Außen

14:37.640 --> 14:41.640
Kisten überprüfst. Ja, Zappix und Nagios haben beide Agents, damit kannst du auch

14:41.640 --> 14:45.840
Festplattenauslastung und CPU-Auslastung monitoren.

14:45.840 --> 14:47.200
Aber

14:47.200 --> 14:50.080
so groß ist der Unterschied gar nicht.

14:50.080 --> 14:52.880
Konfiguration ist ein bisschen anders.

14:52.880 --> 14:59.880
Nagios ist das deutlich ältere, wobei Zappix auch schon relativ alt ist.

15:01.680 --> 15:08.680
Ich glaube das ist ehrlich gesagt ein bisschen Geschmackssache.

15:10.240 --> 15:13.040
Kommst du mit deinem privaten PC daheim auf die Arbeit?

15:13.040 --> 15:17.400
Über Umwege. Ja, über Umwege klappt das ganze.

15:17.400 --> 15:21.320
Guck mal, ob es Updates gibt. Ich muss den Gramm hier gerade mal alles zumachen und mal die

15:21.320 --> 15:23.560
VM neu starten gerade.

15:23.560 --> 15:27.720
Mal kurz gucken, ob es, ich sag gleich was dazu, mal gucken, ob es neue Versionen gibt.

15:27.720 --> 15:31.880
GoLands, irgendwas hier.

15:31.880 --> 15:34.320
High Charm, jawoll, Updates, mal alles.

15:34.320 --> 15:36.840
Und dann wird Rebooted.

15:36.840 --> 15:40.400
Wie lernt man am besten mit großen Datenmengen umzugehen? Aller DataFrame.

15:40.400 --> 15:43.000
Was sind denn DataFrames?

15:43.000 --> 15:50.000
Was verstehst du unter DataFrames?

15:52.880 --> 15:55.560
Keine Ahnung.

15:55.560 --> 15:58.240
Ich habe jetzt eine grobe Idee, was du meinst.

15:58.240 --> 16:01.200
ListenArrays und so weiter.

16:01.200 --> 16:04.600
Was ist daran jetzt?

16:04.600 --> 16:07.320
Stonks, soll ich mal gucken, was meine Stonks machen?

16:07.320 --> 16:13.360
Letzten paar Wochen sind die Stonks tatsächlich wieder hoch.

16:13.360 --> 16:14.920
Guck mal kurz.

16:14.920 --> 16:19.800
Machen wir mal eine Stonks.

16:19.800 --> 16:26.120
419 Euro sind die hochgegangen die Woche, kann ich mir nicht, aber heute sind sie wieder runtergegangen.

16:26.120 --> 16:27.800
Alter, heute sind sie

16:27.800 --> 16:31.920
minus 265 Euro runtergegangen.

16:31.920 --> 16:39.880
Nicht ganz billig.

16:39.880 --> 16:42.880
Ahnungslose Sachen, ich habe nur NFTs.

16:42.880 --> 16:46.200
Nicht NFTs, eher ETFs.

16:46.200 --> 16:52.560
Nicht NFTs.

16:52.560 --> 16:55.200
Leute, das ging ja richtig hoch.

16:55.200 --> 16:56.560
In letzter Zeit.

16:56.560 --> 16:57.920
Letzten Monat

16:57.920 --> 17:04.560
plus 1161.

17:04.560 --> 17:11.560
Da will ich mich mal nicht beschweren jetzt.

17:17.680 --> 17:21.880
Das ist doch gar nicht mal so übel.

17:21.880 --> 17:28.360
Stonks.

17:28.360 --> 17:30.920
Nee, nee, nee, nee.

17:30.920 --> 17:33.040
Mein Portfolio gibt es nicht zu zeigen. Ich habe

17:33.040 --> 17:34.920
einen ETF,

17:34.920 --> 17:37.680
einen World ETF, sonst nichts.

17:37.680 --> 17:44.640
Wie viel genau, sage ich nicht, aber es ist nur ein World ETF, sonst nichts.

17:44.640 --> 17:47.400
Achso, ja, das hier wollte ich noch beantworten.

17:47.400 --> 17:51.240
Also ja, ich komme mit meinem PC von daheim auf die Arbeit über Umwege.

17:51.240 --> 17:53.080
So einfach geht das nicht.

17:53.080 --> 17:58.080
Also Umwege sind Tunnels und Zwei-Faktor-Authentifizierung.

17:58.080 --> 18:00.000
Also im Prinzip, sagen wir mal so,

18:00.000 --> 18:02.160
es ist nicht wirklich in VPN, aber

18:02.160 --> 18:06.360
sowas ähnliches wie VPN.

18:06.360 --> 18:09.880
Ja, und wie man gelernt, mit großen Datenmengen umzugehen, ich meine,

18:09.880 --> 18:15.080
wo ist das Problem mit Listen und Arrays?

18:15.080 --> 18:18.760
Ich habe nichts in Bitcoin verloren, ich habe keine Bitcoins.

18:18.760 --> 18:22.040
Was macht denn eigentlich so der, wo wir gerade dabei sind, Bitcoin?

18:22.040 --> 18:25.200
Ach so, der Bitcoin-Kuss.

18:25.200 --> 18:28.040
Das ist ja auch

18:28.040 --> 18:33.520
schon richtig abgekackt.

18:33.520 --> 18:36.920
Ja, also ich verstehe das Problem nicht so genau, ich meine,

18:36.920 --> 18:42.160
Arrays ist mit zwei Elementen oder drei Millionen Elementen jetzt nicht so der

18:42.160 --> 18:46.280
große Unterschied. Das sind halt Arrays und Listen auch nicht.

18:46.280 --> 18:49.200
Das wird auch nicht mal großartig langsamer dadurch, weil du per Index

18:49.200 --> 18:50.440
drauf zugreifst.

18:50.440 --> 18:51.680
Also die Zugriffszeit

18:51.680 --> 18:54.600
auf dem Index mit einem Array mit fünf und

18:54.600 --> 18:58.520
mit einer Million Elemente ist jetzt nicht so großartig unterschiedlich.

18:58.520 --> 19:07.520
Ja, streng genommen schon, weil CPU cache, aber davon reden wir jetzt mal nicht.

19:07.520 --> 19:17.080
Also, was ist denn da, hast du ein konkretes Problem, wo es nicht funktioniert?

19:17.080 --> 19:23.240
Was ist dein Favorite File Transfer Tool?

19:23.240 --> 19:24.320
SCP?

19:24.320 --> 19:27.000
R-Sync?

19:27.000 --> 19:28.960
R-Sync?

19:28.960 --> 19:31.800
Braucht man irgendwas anderes?

19:31.800 --> 19:35.600
Nicht WinSCP, alter.

19:35.600 --> 19:40.960
Wie redet ihr von WinSCP?

19:40.960 --> 19:43.320
R-Sync?

19:43.320 --> 19:52.800
R-Sync und SCP? Braucht man noch irgendwas anderes?

19:52.800 --> 19:56.920
X-Copy, als nächster kommt irgendwie einer mit einem komischen PowerShell-One-Liner

19:56.920 --> 19:59.040
oder sowas.

19:59.040 --> 20:03.160
Meinst du sowas oder meinst du sowas wie

20:03.160 --> 20:04.480
File Sync,

20:04.480 --> 20:08.640
Next Cloud Sync-Sync oder C-File oder was meinst du?

20:08.640 --> 20:17.800
Weil, wie gesagt, mein File Transfer Tool R-Sync und SCP.

20:17.800 --> 20:21.680
Das riecht ein bisschen nach Python, wenn ich mir das so angucke.

20:21.680 --> 20:22.680
Liege ich da richtig?

20:22.680 --> 20:31.000
Nee, das brauchst du nie.

20:31.000 --> 20:39.720
Also, der Unterschied, ich kann dir das, also ich bin nicht der große Python-Checker, aber

20:39.720 --> 20:41.680
ich gehe mal davon aus, dass das dort genauso ist.

20:41.680 --> 20:51.800
Also, auf eine Liste und auf einen Array greifst du immer und ausschließlich mit einem Index

20:51.800 --> 20:52.800
zu.

20:52.800 --> 20:56.440
Liste, Key, ergibt keinen Sinn.

20:56.440 --> 21:03.520
Was es gibt, ist, in Python gibt es ein Dictionary, in Java gibt es eine HashMap, in C-Sharp gibt

21:03.520 --> 21:10.080
es auch ein Dictionary, in Ruby gibt es, also ein Key-Value-Store, nennen wir es mal.

21:10.080 --> 21:15.920
Auf einen Key-Value-Store greifst du mit einem Key, den du definiert hast, zu.

21:15.920 --> 21:22.320
Also Arrays und Listen immer per Index und auf Dictionaries oder HashMaps oder wie auch

21:22.320 --> 21:28.840
immer man das nennen mag, greifst du mit einem Key deiner Wahl zu, meistens Strings.

21:28.840 --> 21:34.400
Also, das hier ist keine Liste, das hier ist eigentlich ein Dictionary und die Syntax in

21:34.400 --> 21:42.240
dieser Form ist, ein Dictionary mit einem Value, der eine Liste ist.

21:42.240 --> 21:50.440
Gibt es Sprachen ohne Dictionary, Key-Value-Store, ja gut, wenn du eine Sprache ohne alles suchst,

21:50.440 --> 21:58.480
nimm C, weil C hat nichts in der Standard-Library, noch nicht mal dynamische Listen, das musst

21:58.480 --> 21:59.480
du alle selbst machen.

21:59.480 --> 22:08.520
Äh, und die Syntax hier, äh, kann ich mir nicht vorstellen, dass es die überhaupt gibt.

22:08.520 --> 22:19.680
Ich meine, das wäre ja quasi, okay vielleicht ist das ja ein Python-Ding oder so, aber das

22:19.680 --> 22:23.680
wäre ja quasi, okay vielleicht ist das die Python-Syntax für Nested-Listen, weiß ich

22:23.680 --> 22:24.840
nicht, würde mich aber wundern.

22:24.840 --> 22:39.200
Du erzeugst einen Array mit Null, mit der Zahl Null, als einziges Element und das gibst

22:39.200 --> 22:42.640
du dann als Index in die Liste, das kann ich mir nicht vorstellen, dass es das gibt.

22:42.640 --> 22:53.080
Die gibt es in R, okay ja, meinetwegen, da würde ich mich nicht, da wundert mich nichts.

22:53.080 --> 22:59.320
Mehrdimensionale Arrays, also ich kann mehrdimensionale Arrays nur mit zweimal Index, dann musst du

22:59.320 --> 23:00.320
sowas machen.

23:00.320 --> 23:11.640
Aber vielleicht ist das eben ein Python-Ding, also ein Array mit Key ergibt eigentlich keinen

23:11.640 --> 23:17.880
Sinn, das erste muss eigentlich ein Diktionary sein.

23:17.880 --> 23:21.520
Ansonsten, letztendlich ist es aber auch egal, ich gehe davon aus, dass man das in Python

23:21.520 --> 23:23.680
wahrscheinlich sogar überschreiben kann.

23:23.680 --> 23:30.280
Kannst du ein Diktionary machen, das Array einträgert, ja kannst du machen, klar, das

23:30.280 --> 23:35.400
ist, das sieht dann so aus, wenn du drauf zugreifst, dann machst du ein Diktionary mit String als

23:35.400 --> 23:42.400
Key, der Value ist dann halt eine Liste und das ist dann quasi aus der Liste das Item

23:42.400 --> 23:49.760
mit dem Key Spalt, also das ist irgendwie eine Geschichte mit Diktionary und geschachteten

23:49.760 --> 23:50.760
Arrays.

23:50.760 --> 23:55.720
Da hilft aber auch, ist egal, ich kann jetzt viel erzählen, wenn der Tag lang ist, da hilft

23:55.720 --> 24:02.680
ehrlich gesagt nur sich die offiziellen Beispiele anzugucken, weil das baut dir die Library,

24:02.680 --> 24:07.760
die du verwendest für dich zusammen und da muss man sich an die offiziellen Beispiele

24:07.760 --> 24:08.760
halten.

24:08.760 --> 24:12.200
In Python hast du halt auch ein bisschen den Nachteil, wenn du nicht irgendwelche Type

24:12.200 --> 24:18.400
Annotations oder so benutzt bzw. die Library, das hat, weißt du nicht so genau, wo was

24:18.400 --> 24:19.400
steht.

24:19.400 --> 24:23.560
Das ist halt tatsächlich der Nachteil von so super dynamischen Sprachen.

24:23.560 --> 24:32.960
Da siehst du in deinem Editor nicht so einfach, was was ist.

24:32.960 --> 24:47.720
In.NET ist das relativ easy, ich zeig dir das mal ganz schnell, bevor wir mit GO anfangen,

24:47.720 --> 25:01.280
ich zeig dir das mal ganz schnell, hausgeliegt, ja Leute, liegt, mein Haus, Keckel, mach mal

25:01.280 --> 25:11.000
schon mal GoLand auf, so ich zeig dir das mal ganz kurz in.NET, was ich meine, alter,

25:11.000 --> 25:18.600
ich mag das ja immer, wenn Programme laggy aufgehen, so, also guck mal, ignorier mal den

25:18.600 --> 25:23.600
ganzen Crap, der hier steht, ich mach mal kurz hier unten ein bisschen Platz, alter, warum

25:23.600 --> 25:33.120
recht, what the fuck, warum hab ich grad 93% CPU Last, ah gut, Java IDEs starten, ok,

25:33.120 --> 25:40.600
das muss ich verstehen, klar, muss erstmal komplette CPU Auslastung, so, jetzt sind wir

25:40.600 --> 25:45.320
wieder bei 0%, alles klar, jetzt sind wir auch nicht mehr laggy, also guck mal, in.NET

25:45.320 --> 25:48.800
ist das natürlich schöner, da kannst du sowas hier machen, ich mach jetzt mal das, was du

25:48.800 --> 25:55.520
da als Beispiel gepostet hast, ja, also var, nennen wir das mal irgendwie Items oder so,

25:55.520 --> 26:00.840
da sagst du dann new, Dictionary und jetzt kannst du angeben, was du als Key verwenden

26:00.840 --> 26:09.080
willst, in dem Fall String und dein Value wäre dann eine Liste, oder ein Array, aus,

26:09.080 --> 26:25.360
äh, tja, kannst du dir aussuchen, aus, weiß ich, Objects, egal, so, und darauf wirds jetzt

26:25.360 --> 26:43.840
folgendermaßen zugreifen, wo ist das Problem, ach, Kekkel, alter, ok, äh, ich hab doppelt

26:43.840 --> 26:49.360
zugewies, das kann nicht funktionieren, hast du die Lizenzen gekauft, ja, ich hab, ähm,

26:49.360 --> 26:57.360
Text all Desktop Pack, so, und darauf würdest du jetzt so zugreifen, guck, ja, bla bla blub,

26:57.360 --> 27:03.040
Index, das ist genau das, was du geschrieben hast, und warum, weil, und in.NET siehst

27:03.040 --> 27:08.880
du es halt schönerweise, weil hier kann dir nämlich deine Idee sagen, das möchte hier

27:08.880 --> 27:15.480
einen String Key haben, und hier möchte das einen Int Index haben, das ist halt der Vorteil

27:15.480 --> 27:19.480
von typisierten Sprachen, das ist halt, wenn du Python super dynamisch machst, nicht so

27:19.480 --> 27:28.160
schön ersichtlich, aber im Prinzip ist das wohl so ein ähnliches Objekt, was du vor

27:28.160 --> 27:37.480
dir hast, wenn du da mit Key und dann mit Index drauf zugreifen musst, so, ähm, übrigens,

27:37.480 --> 27:44.920
wir brauchen Rider, doch, wir müssen den, müssen wir Kekkel aufmachen, ich bin mir

27:44.920 --> 27:54.400
nicht, meine Benamung ist immer, nee, das ist nicht Kekkel, oder, cute chat, das sollte

27:54.400 --> 28:01.600
ich besser nicht aufmachen, weil da irgendwelche Secrets drinstehen, vermute ich mal, den Postchamp

28:01.600 --> 28:07.560
muss ich aufmachen, ach doch, das hatte ich schon offen, ich hab's bloß, ich, ich hab

28:07.560 --> 28:17.360
bloß, nee, nee, richtig, wirste mal, so, das brauchen wir aber heute nicht, wie mein ich

28:17.360 --> 28:21.600
denn, hier offen, main.go, ach, das ist noch die Meal API, das brauchen wir nicht, brauchen

28:21.600 --> 28:34.640
wir ein neues, brauchen wir ein neues Projekt, neues Projekt, go, Postchamp, go, brauch

28:34.640 --> 28:41.680
ja auch den richtigen Namen, this window, auf geht's, ja, also, wie gesagt, ich bin

28:41.680 --> 28:45.840
heute nicht super scharf aufs Progress machen, wenn ihr irgendwas erklärt haben wollt, Sporgi,

28:45.840 --> 28:59.800
danke für den Zap, dann, schieß los, ja, alles klar, so, eine ganz furchtbar wichtige

28:59.800 --> 29:06.640
Sache müssen wir noch machen, bevor wir jetzt anfangen, main.go, top package main muss

29:06.640 --> 29:16.160
man dann machen, und dann hier, die übliche Geschichte, fmt, print, omega keck, so, Terminal

29:16.160 --> 29:25.480
auf, T-marks auf, äh, wir müssen nach go land, projects, Postchamp, go, go run. omega

29:25.480 --> 29:36.200
keck, fmt, so, ganz wichtig, themes, sonst dreh ich, dreh ich am Rad, warum nutzt du

29:36.200 --> 29:43.400
nicht das IDE Terminal, weil ich das IDE Terminal nicht mag, ich weiß ich, ich find das IDE

29:43.400 --> 29:50.040
Terminal laggy, und das crept teilweise den Fokus nicht, wenn man reinklickt und sowas,

29:50.040 --> 29:58.120
ich, ich, ich switch, achso, ich switch lieber mit meinen window manager bindings um und benutze

29:58.120 --> 30:03.280
das normale Terminal, da ist auch mein Farbschema drinne, und, weiß ich, irgendwie find ich

30:03.280 --> 30:10.720
das schöner, mit welchem Framework würdest du heute eine Web Anwendung machen, naja,

30:10.720 --> 30:16.940
ihr kennt mich, ich würd eindeutig ASP.NET Core nehmen, Noji Bait, also ihr kennt mich

30:16.940 --> 30:23.040
wirklich in dem Fall, meine Abstandslieblingssprache ist C-Sharp, und mein, gerade Stande, ganz

30:23.040 --> 30:28.400
im Ernst, ich hab jetzt in letzter Zeit ja relativ, wir haben auch im Stream relativ

30:28.400 --> 30:37.960
viel rumgeguckt, Rust, Go, Python, Javascript, und, und Hand aufs Herz, ja, mir muss noch

30:37.960 --> 30:45.760
einer eine zweite Sprache zeigen, die an die Kombination, die C-Sharp bietet und dort

30:45.760 --> 30:51.960
net rankommt, es ist schnell, es hat eine wahnsinnig gute Standard Library, es hat für

30:51.960 --> 30:56.880
fast alles was man so braucht, halbwegs gut maintainte Pakete, da ist Javascript und Go

30:56.880 --> 31:06.400
sicherlich besser, aber die wichtigsten Sachen gibt's für dort net auch, du kannst mittlerweile

31:06.400 --> 31:13.200
relativ gut Self-Contained Binaries bauen, die Entwickler Tools sind allererste Sahne,

31:13.200 --> 31:18.400
da kannst du dich überhaupt nicht beschweren, besser als alle anderen Sprachen die ich kenne,

31:18.400 --> 31:35.040
also, so die Kombination, die muss mir noch einer zeigen, ja, also, ich, ich würde die

31:35.040 --> 31:44.880
Web-Anwendung mit ASP.NET Core machen, weil im Ernst, spätestens jetzt seit es, guckt

31:44.880 --> 31:49.040
euch mal das Beispiel an, ich will jetzt kein extra Projekt machen, ja, spätestens seit

31:49.040 --> 31:57.920
es Minimal-APs gibt in dort net, ist es halt super easy, guckt euch das hier mal an, ja,

31:57.920 --> 32:02.840
das ist eine C-Sharp beziehungsweise dort net Web-Anwendung in der einfachsten Form,

32:02.840 --> 32:08.920
guckt euch mal eine Python Flask Anwendung an oder eine Ruby Sinatra Anwendung oder was

32:08.920 --> 32:19.840
auch immer, das ist auch nicht großartig oder eine Express Anwendung, nicht nicht Go, Express

32:19.840 --> 32:24.400
GS, guckt euch mal, Moment Leute, wisst ihr was mir gerade auffällt, warum hab ich eigentlich

32:24.400 --> 32:34.720
die Dark-Reader und Dark-Theme, warum hab ich eigentlich so bescheuerte Settings für

32:34.720 --> 32:43.520
meinen Browser, man, so, viel besser, guckt euch mal Hello World in Express an, guckt

32:43.520 --> 32:51.600
euch das an, ja, guckt euch das an und guckt euch das an, also so ein großer Unterschied,

32:51.600 --> 33:01.240
ist das jetzt net, also man sieht schon klar, was ja auch die Inspiration war oder guckt

33:01.240 --> 33:10.080
man sich mal Ruby Beispiele an zum Beispiel, das ist schon ein bisschen älter, die Webseite

33:10.080 --> 33:23.080
kommt mit, ja, da sieht das so aus, das ist schon alles relativ ähnlich, warum soll ich

33:23.080 --> 33:27.960
die Cognito-Modus browsen, so und das sind Minimal-APIs, so wie sieht eine Python zum

33:27.960 --> 33:32.440
Beispiel, eine Python Flask Anwendung aus, die sieht wahrscheinlich auch nicht viel anders

33:32.440 --> 33:40.960
aus Quickstart, ja, guckt, jetzt mal ernsthaft, das ist alles ziemlich ähnlich, so, das heißt

33:40.960 --> 33:46.560
viele verbinden im Kopf ja noch mit.NET, Windows Only und riesen Boilerplate und sowas

33:46.560 --> 33:50.960
und das ist schon lange nicht mehr so, ich verwende die letzten Jahre über.NET und

33:50.960 --> 34:02.600
C-Sharp exklusiv unter Linux, ja, wir können uns auch noch ein Go-Example angucken, ja,

34:02.600 --> 34:11.160
genau, ist alles relativ ähnlich, NewBasic.org, was ist das denn, ist alles, bis die Sündagsheilerding

34:11.160 --> 34:18.640
hätten sie noch machen sollen, also ist alles relativ ähnlich und in C-Sharp, ja, vielleicht

34:18.640 --> 34:22.600
hast du in manchen Fällen ein bisschen mehr Boilerplate als in Python und sonst was, dafür

34:22.600 --> 34:26.640
bist du halt irgendwie hundertmal schneller als Python, jetzt nicht übertrieben, ist wirklich

34:26.640 --> 34:31.560
so und deswegen sag ich mir muss noch einer mal die bessere Sprache oder das bessere Framework

34:31.560 --> 34:37.720
zeigen als die Sharp.NET in Kombi, wenn es um die Kombination geht aus Performance, guter

34:37.720 --> 34:41.640
Standard Library und alle möglichen, also das Gesamtpaket ist für mich das beste was

34:41.640 --> 34:50.000
es aktuell gibt, ja ich bin.NET Fanboy was das angeht, aber ich meine auch, dass das

34:50.000 --> 34:57.720
objektiv so ist, ja, also wie gesagt, ich würd's damit machen und gerade wenn du was

34:57.720 --> 35:04.480
kleines im Backend brauchst, nimm die neuen Minimal APIs, scheiß auf Controller und MVC

35:04.480 --> 35:11.680
und so ein Crap, nimm Minimal APIs, bau dir drei Restendpunkte und fertig, oder aber nimm

35:11.680 --> 35:23.640
CraftQL, wenn du was sehr Daten, was sehr Daten intensiv ist, ach, Microsoft hier bist

35:23.640 --> 35:30.960
du bei Google abhängig, Google ist, bei Go bist du von Google abhängig, letztendlich

35:30.960 --> 35:37.240
bist du überall von irgend wem abhängig, Google kann auch, ich mein Google hat der

35:37.240 --> 35:45.160
History von wir stellen das ein, guckt euch mal den Google Friedhof an, nicht Friedhof,

35:45.160 --> 35:58.680
Graveyard, guckt euch den Google Graveyard an, also das können die auch morgen einstellen,

35:58.680 --> 36:07.000
und guckt euch,.NET ist open source genauso wie Go, also wenn jetzt einer sagt ja, dann

36:07.000 --> 36:13.080
kann die Community weitermachen, ist bei.NET auch so, ja das eine ist sehr von, das eine

36:13.080 --> 36:17.080
ist sehr abhängig von Google, das andere ist sehr abhängig von Microsoft, aber auch

36:17.080 --> 36:23.960
bei Sprachen wie, was weiß ich hier, JavaScript und so, ich wette mit euch, die sind auch

36:23.960 --> 36:27.880
abhängig von ein paar großen Hersteller, die die Hauptcontributor sind, beziehungsweise

36:27.880 --> 36:53.480
die Hauptdreiber dahinter, ja, Frage beantwortet, ASP.NET Core, beste, ja, ich bin mir nicht

36:53.480 --> 37:02.400
sicher, ob ich mir Rust für Web Anwendungen geben würde, hast du mal ein Video zu ASP.NET

37:02.400 --> 37:08.640
Core gemacht, nö, warum, ich mache ja auf YouTube nicht so die Hardcore Technik Videos,

37:08.640 --> 37:12.800
was würdest du für Data Science erwähnen, Data Science ist erstmal ein leeres Wort,

37:12.800 --> 37:19.760
das ist genauso wie Machine Learning, die Frage ist, was, was ist es, und dann würde

37:19.760 --> 37:23.720
ich ganz klar danach gehen, wo es die besseren Libraries gibt, beziehungsweise die Libraries

37:23.720 --> 37:29.720
und Funktionen, ja, Kombinationen aus Sprache und Libraries für das, was ich machen will,

37:29.720 --> 37:37.600
gut sind, und in Richtung Machine Learning hast du vielleicht gerade so mit TensorFlow

37:37.600 --> 37:44.560
und sowas so ein bisschen die Platzhirsche, was Python angeht, Quatsch mit Soße, danke

37:44.560 --> 37:52.600
für den Prime-Nap, Prime-Nap, Prime-Sub, ich habe Prime-Nap gesagt, weil ich unten

37:52.600 --> 37:58.960
drunter wahrscheinlich Noob gelesen habe, der Prime-Nap, bin ein Noob, in welche Kategorie

37:58.960 --> 38:05.800
gehört denn React, React ist Frontend Framework, eigentlich somit das größte und bekannteste

38:05.800 --> 38:20.120
Frontend Framework, damit machst du Webseiten auf gut Deutsch, äh, ich fände das nicht

38:20.120 --> 38:29.840
so cool, und mit was würdest du eine Desktop App programmieren, Cross-Platform, Mobile

38:29.840 --> 38:40.960
fällt dir raus, ja, nein, Windows Only, Tja, Cross-Platform, wahrscheinlich Qt, zwungenermaßen,

38:40.960 --> 38:44.920
auf Electron habe ich überhaupt keinen Bock, auch wenn es wahrscheinlich das Logischste

38:44.920 --> 38:52.440
wäre, vielleicht würde ich mir auch mal irgendwelche Go-Frameworks angucken, ob die was taugen,

38:52.440 --> 39:05.000
da bin ich, da bin ich unschlüssig zur Zeit, Flutter Desktop ist noch Crap, wollen wir

39:05.000 --> 39:15.000
nachher angucken, können wir nachher angucken, aber Leute, das muss ich hier aufmachen, sonst

39:15.000 --> 39:17.920
sehe ich den Tab nicht, aber das gucken wir nicht jetzt, jetzt basteln wir erst noch ein

39:17.920 --> 39:23.960
bisschen, 40 Minuten geschwätzt ist gut, jetzt können wir anfangen, warum verwendest du

39:23.960 --> 39:28.680
überhaupt so nett, habe ich glaube ich jetzt schon beantwortet, oder, ich frage mich eher,

39:28.680 --> 39:33.280
warum es Leute gibt, die das nicht verwenden, außer prinzipielle Microsoft Abneigung kann

39:33.280 --> 39:46.160
ich da, die ich ja auch habe, kann ich mir da eigentlich nichts vorstellen, ok, im Embedded-Bereich

39:46.160 --> 39:51.400
muss ich sagen, ist tatsächlich die einzige Sache, wo ich kein.NET verwende und wahrscheinlich

39:51.400 --> 39:55.360
auch nicht verwenden würde, kommt aber halt drauf an, es gibt beispielsweise Sachen wie

39:55.360 --> 40:00.200
das Nano-Framework für ein ESP, aber da weiß ich nicht, wenn ihr natürlich eine gute Plattform

40:00.200 --> 40:25.200
habt, wo das unterstützt wird, ist was anderes, ja, Stream, klar, wir haben total viele ASP.NET

40:25.200 --> 40:30.240
Anwendungen schon gemacht und Streamen, Tiny Go, ja Tiny Go, bin ich sehr gespannt drauf,

40:30.240 --> 40:48.120
was die noch machen, weiß jetzt nicht, worauf sich das bezieht, ok, dann fangen wir mal

40:48.120 --> 41:12.000
an, also switchen wir mal rüber, machen wir den Krempel hier zu, also GoLand auf OmegaCac,

41:12.000 --> 41:19.000
meine License wurde renewed, die haben mir gestern sogar 250, oder vor ein paar Tagen,

41:19.000 --> 41:28.480
250 Euro abgebucht, Kackel, alter, wartet mal kurz, weiß nicht, ob da irgendwelche E-Mail-Adressen

41:28.480 --> 41:37.880
Leaks und so jetzt kommen, renew license, ach leck mich, ich mach das jetzt nicht, mach

41:37.880 --> 41:43.880
ich das nächste Mal, ich mach das das nächste Mal, ich hab mich doch sogar eingeloggt in

41:43.880 --> 41:57.880
die, sieht man nicht ob man hier eingeloggt, ach ich bin nicht eingeloggt, ich hab mich

41:57.880 --> 42:05.880
nur in Rider eingeloggt oder was, ich hab mich nur in Rider eingeloggt, ich hab mich

42:05.880 --> 42:14.600
nicht in der Toolbox eingeloggt, deswegen schnappt das sich meine License nicht, naja

42:14.600 --> 42:19.200
gut, das ist natürlich bescheuert gewesen von mir, Typical Flux, dankeschön für den

42:19.200 --> 42:25.360
Sub, ja das ist natürlich blöd, also muss ich bis zum nächsten Stream mich nochmal

42:25.360 --> 42:32.920
einloggen, ja, Name Leak, Rider UiPack, ich brauch ein ordentliches Theme, sonst dreh

42:32.920 --> 42:56.040
ich, sonst dreh ich am Rad, ja, sehr gut, Font, Hack, Hack, 20, sollt ihr schön was

42:56.040 --> 43:09.000
erkennen können jetzt, jepp, jepp, jepp, ich weiß nicht warum es mir jetzt danach war,

43:09.000 --> 43:12.320
ich wollte es eigentlich komplett aussprechen aber ich weiß nicht ob man das auf Twitch

43:12.320 --> 43:24.280
noch darf, ich wollte eigentlich sagen jepp, aber das darf ich nicht, sonst ist Camp Ban,

43:24.280 --> 43:45.120
so, Hahn, genau, jepp, jepp, Hahn wollte ich sagen, so ist es, weiß nicht was mir lieber

43:45.120 --> 43:56.920
ist, das oder das oder das, es ist auch egal, wen juckt die Farbe, ok, auf gehts, Go Stels,

43:56.920 --> 44:11.240
also, dann fangen wir mal an, ähm, das letzte Mal, ups, Open Recent, Pepofetta, also das

44:11.240 --> 44:15.360
letzte Mal hatten wir hier, das brauche ich nachher vielleicht noch, ich schiebe das mal

44:15.360 --> 44:19.240
auf einen weiteren Desktop, das letzte Mal haben wir hier eine Essence API nachgebaut,

44:19.240 --> 44:23.680
heute baue ich mein Kommando Zeilen Tool nach, was ich hier in.NET programmiert habe, aber

44:23.680 --> 44:27.560
weniger um das Kommando Zeilen Tool nachzubauen, eher um zu gucken wie man Command Line Parsing

44:27.560 --> 44:33.880
ordentlich macht, also wir machen heute, oder wir versuchen es heute mal, Command Line, Command,

44:33.880 --> 44:43.360
Command Line, Parser, müssen wir uns angucken, Jason, D, Serializer, das haben wir ja schon

44:43.360 --> 44:49.880
gemacht, dann müssen wir uns angucken, Date Time in Python, da bin ich mal gespannt ob

44:49.880 --> 44:58.880
das weniger Abfuck als in Go ist, Web Requests, brauche ich noch mal kurz erklären was das

44:58.880 --> 45:04.240
Kommando Zeilen Tool, was wir nachbauen eigentlich macht, für alle die es nicht kennen aus den

45:04.240 --> 45:10.800
letzten Streams, ich werde es euch nicht groß zeigen, ich werde es nur kurz sagen, und zwar,

45:10.800 --> 45:17.520
hier unten kann man vergessen, das ist alles Jason Gedulds, also, das ist ein Kommando Zeilen

45:17.520 --> 45:23.320
Tool, wenn man das ausführt, hast du verschiedene Optionen, List, Clear, Duration, Start, Reason,

45:23.320 --> 45:29.400
oder kann man da mit Minus Minus und so Argumente in der Shell übergeben, was das macht ist,

45:29.400 --> 45:37.160
das schickt an den Prometheus Alert Manager, trägt das eine Silence ein im Monitoring,

45:37.160 --> 45:43.680
für das aktuelle System, mit dem aktuellen User, für die aktuelle Zeit, für 15 Minuten,

45:43.680 --> 45:47.600
das habe ich für die Arbeit gebaut, das habe ich dort auch schon angekündigt, dass das

45:47.600 --> 45:51.640
bald kommt, fanden die Leute wirklich gut, gerade unser Support, der immer Monitoring

45:51.640 --> 46:01.960
Meldungen bekommt, wenn irgendjemand vergessen hat, das System in Maintenance zu nehmen,

46:01.960 --> 46:06.880
und da kannst du nämlich einfach auf den Server gehen und sagen, Set Down Time, und

46:06.880 --> 46:13.840
dann nimmt er das System für 15 Minuten raus, und das ist ein super kleines Beispielprogramm,

46:13.840 --> 46:19.360
um so Sachen wie Command Line Parsing und sowas in Goma auszuprobieren, wirst du Cobra

46:19.360 --> 46:25.040
für CLI Arcs, ich habe keine Ahnung, ich weiß nicht, was es da gibt, ihr könnt mir

46:25.040 --> 46:35.560
mal ein paar, warum nehmen wir nicht einfach Standard Library Parser, also wenn ihr Ahnung

46:35.560 --> 46:49.280
von habt, dann könnt ihr mir mal einen Chat schreiben, gute, also erstens, gute Command

46:49.280 --> 47:19.240
Line Tools, und was mich noch mehr interessieren würde, sind CLI Tools, die ordentlich vor

47:19.240 --> 47:28.480
formatieren können, in der Command Line, also wo ich zum Beispiel eine Tabelle machen kann,

47:28.480 --> 47:38.000
also für.NET gibt es sowas wie Specter Console, da kann man zum Beispiel sagen, Table Add

47:38.000 --> 47:42.480
Column und Table Render, und dann kann man so eine Tabelle auf der Command Line erzeugen,

47:42.480 --> 47:55.560
relativ einfach, sowas nur in Go gibt es garantiert, ich will kein Terminal User Interface,

47:55.560 --> 48:06.520
ich will meinen Output formatieren, ich will nicht, dass man da drin was auswählen kann,

48:06.520 --> 48:29.520
als Charm, das da, meinst du das, Alter, Cute Frameworks, da sind wir richtig, Leute,

48:29.520 --> 48:50.680
Cute Frameworks, jawoll, ach ne, Moment, das ist für interaktiven Kram, ne, das will

48:50.680 --> 49:05.680
ich nicht, Network Sync Command Line App, Bubble Tea Terminal User Interface, ne, das will

49:05.680 --> 49:12.680
ich nicht, Lip Gloss, your Terminal Style and Layout Toolkit, das könnte ich vielleicht

49:12.680 --> 49:31.240
wollen, Charm, Markdown Renderer, was zum, ich will einfach nur eine Tabelle mal, Table

49:31.240 --> 49:37.680
Writer, zeig mal her, also im Prinzip suche ich sowas wie, ne, das frage ich mich auch,

49:37.680 --> 49:52.280
was es ist, ja, sowas hier, also für Python gibt es das hier, Rich, Tabelle mit Markdown

49:52.280 --> 49:59.560
malen, ja, das war ein bisschen umständlich jetzt, da ist dann, kannst du halt auch sowas

49:59.560 --> 50:06.000
machen, sowas für Go, weiß ich nicht, ob es das gibt, also ich suche ne Library, wo

50:06.000 --> 50:11.720
ich beispielsweise Konsolen Ausgabe easy farbig machen kann und Tabellen malen kann und vielleicht

50:11.720 --> 50:16.840
auch mal ne Progress Bar malen kann und sowas für Go, vielleicht, vielleicht kann man das

50:16.840 --> 50:30.000
ja hiermit machen, das sieht aber äußerst, äußerst cute aus, alles, ich will halt nix

50:30.000 --> 50:40.840
Interaktives, das brauch ich net, New Style Background Padding Top Padding Width, das

50:40.840 --> 50:46.800
sind zwei getrennte Use Cases, jaja, ich suche ja auch nicht das gleiche, unbedingt das gleiche

50:46.800 --> 50:52.680
für, ich mein Specter Console hat einen Command Line Paser dabei, den verwende ich aber auch

50:52.680 --> 51:02.280
nicht, also für.NET verwende ich für Command Line Apps das hier, als Argument Parsing und

51:02.280 --> 51:12.240
Help Generator und sowas und Specter Console für farbige Ausgaben, ne ich will was einfaches,

51:12.240 --> 51:16.920
ok, also ich würde sagen, nachdem wir uns das letzte Mal so sehr mit Command Line Parsing

51:16.920 --> 51:21.880
aufgehalten haben, heben wir uns das für nachher oder irgendwann anders auf, sondern gucken

51:21.880 --> 51:27.160
wir uns erstmal was mit Web Request und Daytime Handling an, also was ich machen will ist,

51:27.160 --> 51:30.880
ne Moment, wir brauchen noch mehr Sachen, wir gucken es mal kurz hier der Reihe nach

51:30.880 --> 51:35.680
durch, also Daytime Handling brauchen wir, die Regex Geschichte lasse ich mal außen

51:35.680 --> 51:46.000
vor, so, genau, Username muss ich schon einmal rauskriegen, Username muss ich rauskriegen,

51:46.000 --> 51:52.760
die kriegt man denn in Go, das ist das erst, was wir uns angucken können, Golang Current

51:52.760 --> 52:04.040
User, yep, Golang Environment Variables, was ist das für ein Operator, oh ich hoffe ich

52:04.040 --> 52:13.040
kann das richtig aussprechen, das ist der Null Coalescing Assignment Operator, jetzt

52:13.040 --> 52:16.920
weißt du wahrscheinlich Bescheid, oder, jetzt denkst du dir, ach Mensch, hättest du das

52:16.920 --> 52:23.360
mal gleich gesagt, jetzt weiß ich sofort was das macht, also, was das macht, Obvious,

52:23.360 --> 52:31.000
Completely Obviously, also was das macht ist folgendes, das guckt ob Start Null ist, wenn

52:31.000 --> 52:40.480
Start Null ist, dann weist es ihm ein Default Value zu, oder ein Value zu, also im Prinzip

52:40.480 --> 52:51.800
ist das die Kurzform von if Start gleich gleich Null, nein, gleich gleich Null, dann Start

52:51.800 --> 53:04.920
gleich Date Time Now, ach guck mal, da kannst du ja sogar umwandeln hier, guck, also das

53:04.920 --> 53:10.400
ist exakt die Kurzschreibweise dafür, das ist übrigens auch was was ich an C Sharp mag

53:10.400 --> 53:17.440
und wie Microsoft damit vorgeht, die bauen, man könnte jetzt ja sagen, hey, also das ist

53:17.440 --> 53:21.600
eindeutig der Go, der Go Weg, ja in Go würden die nie sowas einbauen, die in Go sagen,

53:21.600 --> 53:26.800
ihr macht doch völlig den if, das mag ich an.NET, dass die sowas einbauen, das ist

53:26.800 --> 53:38.200
jetzt kein riesen krasses Feature, aber es ist praktisch, I find das cool, so, also wie

53:38.200 --> 53:48.880
kriegt man, wie kriegt man Environment Variablen raus bei Go, OS, OS get enf und dann testen

53:48.880 --> 54:01.560
wir mal, ob das funktioniert, ja dann printe ich meinetwegen foo, get ent sudo user, so

54:01.560 --> 54:08.880
run sollte nicht funktionieren, ja und jetzt mal mit sudo ausgeführt, aha funktioniert,

54:08.880 --> 54:25.200
easy, ok, das ist einfach, das ist, da wäre ich, das hätte ich, ja, das kann man mit

54:25.200 --> 54:32.680
leben, also outsour, ja wie kriegt man den current, den current user, user username,

54:32.680 --> 54:45.040
user current, error, bloated, alter, bloated, komplett bloated Error Handling, gibt es irgendwo

54:45.040 --> 54:52.160
ein Fehlerfall, dass man den User rauskriegen kann, wann genau gibt es den Fehler, dass

54:52.160 --> 55:11.280
er den User nicht rauskriegen kann, run, oh warte, ja genau, alter, so, name, wat, wer

55:11.280 --> 55:22.400
doch da, ah username, verstehe, wenn es keinen home user gibt und root gelöscht wurde, ja

55:22.400 --> 55:30.600
da haben wir glaube ich andere Probleme, übrigens, exceptions sind teilweise echt was feines,

55:30.600 --> 55:35.120
das ist ja im Prinzip auch nichts anderes, wie wir werfen exceptions, die dann hochgebabbelt

55:35.120 --> 55:43.560
ist und keiner fängt, ja, also es wäre finde ich durchaus, also in dotnet wäre das tatsächlich

55:43.560 --> 55:47.200
einfacher gewesen, das Ding hier würde eine exception schmeißen und ich würde die nicht

55:47.200 --> 55:55.720
fangen und mein Programm würde abkacken, und gut ist, ja, aber aktuell, das, lassen

55:55.720 --> 56:03.920
wir mal bloated Error Handling, außen vor, ok, das muss ich user nennen, weil ansonsten

56:03.920 --> 56:11.600
klappt das nicht, also wir haben die Auswahl, so, mein Autor für diese Maintenance ist

56:11.600 --> 56:27.280
entweder der sudo user os get nf sudo user oder mein aktueller User, so und jetzt sind

56:27.280 --> 56:38.280
wir schon wieder bei der go Geschichte, wie macht man sowas da, mit einem if wahrscheinlich

56:38.280 --> 56:50.600
gehe ich mal von aus, oder kann man, geht oder oder, nee, mismatch, type, ach so, das

56:50.600 --> 57:09.200
ist username, immer noch mismatch, is not defined on string, nope, also das gibt anscheinend

57:09.200 --> 57:20.320
nur die Möglichkeit, ein if zu machen, also muss ich quasi, sudo user, na gut, ich mein,

57:20.320 --> 57:27.160
man muss sagen, ich verstehe schon teilweise so, glaub ich langsam so, was die sich dabei

57:27.160 --> 57:35.080
denken, dass man es in go eben, ich nenn's mal etwas umständlicher macht, die go Philosophie

57:35.080 --> 57:41.880
scheint mir eher zu sein, man soll halt die Sachen gefälligst explizit hinschreiben,

57:41.880 --> 57:55.320
ganz ausführlich, was man so macht, also if sudo user, tja, kein leerer string wahrscheinlich,

57:55.320 --> 58:06.280
denke ich mal, vermute ich mal, also machen wir sowas hier, gleich, User, wobei brauchen

58:06.280 --> 58:10.520
wir doch gar nicht, machen einfach sowas, falls das erlaubt ist, nein, das ist natürlich

58:10.520 --> 58:18.840
nicht erlaubt, keckel, nee, Moment, ich hab User doppelt benannt, das verwirrt den, das

58:18.840 --> 58:26.400
darf ich auch nicht machen, ah, das geht nicht oder was, also da jetzt username funsnet oder,

58:26.400 --> 58:36.960
nee, das heißt, ich muss das irgendeiner Variable zuweisen, ok, system user, das schwierigste

58:36.960 --> 58:47.840
ist doch immer eh, wie benennt man diesen Campbell, ach nee, da kommt ja dann noch Error

58:47.840 --> 58:58.320
raus, ja ok, system user, username, so und dann environment und der Autor ist sudo user,

58:58.320 --> 59:03.920
wenn sudo user nicht null ist, so, das ist jetzt äußerst explizit hingeschrieben, fällt

59:03.920 --> 59:09.840
irgendjemand was auf, wie man das eleganter oder kürzer und knackiger in Go machen kann,

59:09.840 --> 59:18.840
ja, also mir persönlich wäre ja sowas hier, lieber, aber das gibt es in Go nicht, ich

59:18.840 --> 59:24.480
glaube, das ist so der Go, the way in Go, ich glaube, großartig schöner kann man das

59:24.480 --> 59:41.160
gar nicht machen oder, wie sieht denn in Go ein ternary operator aus, ok, gibt es nicht,

59:41.160 --> 59:53.080
kackel, hätte ich mir denken können, if sudo, Moment, was, chat, ich hab das jetzt copy

59:53.080 --> 01:00:03.800
pasted, aber, weiß nicht so genau, was das, ach so, das kann man in einer Zeile machen,

01:00:03.800 --> 01:00:21.800
naja, ach so, ok, das ist natürlich schon mal nicht schlecht, wenn das geht und jetzt,

01:00:21.800 --> 01:00:45.680
ne, ja super, ja, Go, ich weiß, und wie würde man das jetzt machen, was, Komma, naja, schön,

01:00:45.680 --> 01:01:00.600
ich weiß nicht, ob das ehrlich gesagt so viel schöner ist, in.net könnte man auch sowas

01:01:00.600 --> 01:01:16.440
machen und dann würde ich sagen, ist, zum Beispiel, und dann würde das das auch checken,

01:01:16.440 --> 01:01:21.520
man kann sudo user nicht weiter verwenden, ja, das ist klar, das will ich aber auch nicht,

01:01:21.520 --> 01:01:28.440
ich lass es jetzt einfach mal so, wenn der chat sagt, das ist der Go way, ja, wir sind

01:01:28.440 --> 01:01:34.760
aber nicht in Rust, in Rust hätt ich dann andere Probleme, ok, also das funzt schon mal,

01:01:34.760 --> 01:01:42.240
der Autor ist Max und wenn ich jetzt sudo ausführe, müsste der root sein, ach ne, schwachsinn,

01:01:42.240 --> 01:01:48.080
lul, da muss immer Max sein, der User, weil das erliest der sudo, der User ist Max sowohl

01:01:48.080 --> 01:01:56.000
bei mir als auch mit root ausgeführt, richtig, Rust one on one quickscope, auf gehts, ok,

01:01:56.000 --> 01:02:06.120
also das hätten wir schon mal, haben wir schon mal mehr geschafft als in Rust, ok, weiter

01:02:06.120 --> 01:02:18.480
im Text, oh dns lokaler hostname, da bin ich mal gespannt, da bin ich mal gespannt, ok,

01:02:18.480 --> 01:02:25.440
ich gucke nicht nach, ich versuch mal, ob ich go verstanden hab, os, host, ne, Leute,

01:02:25.440 --> 01:02:45.520
oops, falsches Ding, easy, go durchgespielt, go, ach ne, hostname, alter was hat der denn

01:02:45.520 --> 01:02:58.840
wieder verschmerzen, ah, bestimmt wieder error, bloated error handling, ok, hostname, mal gucken,

01:02:58.840 --> 01:03:02.480
was der jetzt ausgibt, ob das überhaupt eine richtige hostname, hat das irgendwelche Parameter?

01:03:02.480 --> 01:03:19.320
ok, hostname, gibt es irgendwie was in, gibt es, ich bräuchte irgendein makro, print,

01:03:19.320 --> 01:03:24.520
weil in go muss man ja alles printen, dass er nicht abgefuckt ist, dass irgendeine Variable

01:03:24.520 --> 01:03:33.080
unbenutzt ist für 2 Sekunden, warum eigentlich Doppelpunkt gleich, das ist, dass er die Variable

01:03:33.080 --> 01:03:39.480
anlegt und gleich den Wert reinschreibt, es ist ein bisschen bescheuert, weil du könntest

01:03:39.480 --> 01:03:44.360
auch wahr davor schreiben und dann gleich machen, ja, das würde auch funktionieren,

01:03:44.360 --> 01:03:51.680
warum exakt go der Meinung ist, man braucht für das exakt gleiche 2 unterschiedliche

01:03:51.680 --> 01:03:59.400
Syntax, ich verstehe es nicht, ich persönlich finde die Variante hier deutlich schöner,

01:03:59.400 --> 01:04:11.840
aber go Fans finden die hier besser, so, hostname, hostname ist poggers, da bin ich mir mal gar

01:04:11.840 --> 01:04:16.560
nicht so sicher, ob das hostname poggers ist, ich will nämlich den hostname, ich will den

01:04:16.560 --> 01:04:25.320
fqdn haben, geht das da drüber auch, fqdn oder so, ne wahrscheinlich nicht, ok, go lang

01:04:25.320 --> 01:04:55.080
system fqdn, extra package, nope, ah, geil, geht wieder nicht, not pog, ok, ok, ok, ok,

01:04:55.080 --> 01:05:06.880
naja, ich lasse es erstmal so, weil es könnte sein, dass auf unsere Linux Kisten tatsächlich

01:05:06.880 --> 01:05:12.680
der fqdn und der hostname exakt das gleiche ist, also dass der komplette fqdn als hostname

01:05:12.680 --> 01:05:24.080
gesetzt ist, gehe ich sogar von aus ehrlich gesagt, so, da lassen wir das erstmal so,

01:05:24.080 --> 01:05:30.200
hostname haben wir rausgekriegt, ok, was wir aber machen müssen ist tatsächlich, wir müssen

01:05:30.200 --> 01:05:46.560
an der Stelle echt mal Error Handling machen, if error, ähm, äh by the way, warum haben

01:05:46.560 --> 01:05:53.160
die denn Error nicht gemacht, wie irgendein bool währt, dass der gleich einfach so funktioniert,

01:05:53.160 --> 01:06:06.280
hat bestimmt auch seinen Sinn, äh, if error null, tja, fmt panic, ne wie geht das, panic,

01:06:06.280 --> 01:06:18.480
panic fmt, kann man panics irgendwie ratieren, und visionell und nicht null, ja das musst

01:06:18.480 --> 01:06:31.080
du den Typ der go erfunden hat fragen, fmt error, aha, alles klar, und was passiert

01:06:31.080 --> 01:06:37.840
dann, ich will jetzt eigentlich, eigentlich will ich nur diesen Error durchreichen, wie

01:06:37.840 --> 01:06:53.840
geht das, ich will eigentlich nur diesen Error durchreichen, fertig, also, ich will quasi

01:06:53.840 --> 01:07:07.560
das machen, panic, ach ne fmt, error, f und dann einfach error, ok, no pass, Moment, das

01:07:07.560 --> 01:07:26.560
hat ein result, was hat das für ein result, panic, panic, error, ahja ok, so, ähm, run,

01:07:26.560 --> 01:07:30.080
ich bin mir nicht sicher, ob wir das irgendwie sinnvoll testen können, ob das, ob das panic

01:07:30.080 --> 01:07:49.400
funktioniert, weil ich weiß nicht, wie ich das zum failen bringen kann, ne, ich, true

01:07:49.400 --> 01:07:53.120
davor bringt ja nichts, da steht ja, da steht ja, selbst wenn ich true rein treffe, da steht

01:07:53.120 --> 01:08:03.880
ja im Error nichts drin, panic null, ja geil, ähm, mich hätte mal interessiert, wie der

01:08:03.880 --> 01:08:09.880
Error aussieht, zumindest, das sollten wir tatsächlich abfangen, im dotnet Programm

01:08:09.880 --> 01:08:13.240
würde das an der Stelle übrigens abgefangen werden, da wirft ne exception, ich fang die

01:08:13.240 --> 01:08:24.440
nicht und es ist Schluss aus, ok, also, passt, hostname, haben wir, schon mehr geschafft,

01:08:24.440 --> 01:08:31.440
schon mehr geschafft als in go, so und jetzt müssen wir ne silence setzen, alles klar,

01:08:31.440 --> 01:08:41.120
das, so, jetzt mal gucken, wie wir das nächste hinbekommen in go, da bin ich ja mal gespannt,

01:08:41.120 --> 01:09:00.600
also, warum, warum, oh ne, shortcut, hab noch meinen comment, comment noch nicht, comment,

01:09:00.600 --> 01:09:07.920
add keyboard shortcut, control k, control c, remove, wie sieht das mit line up aus, hab

01:09:07.920 --> 01:09:16.680
ich das schon, ab, ne hab ich auch nicht, meine güde, wichtigsten shortcuts sind nicht

01:09:16.680 --> 01:09:28.680
gesetzt, down, jawoll, remove, fuck, so, also, wir müssen webrequest machen, fangen wir

01:09:28.680 --> 01:09:35.080
mal mit dem webrequest an, wie mach ich nen webrequest in ordentlichen, http, get, ne

01:09:35.080 --> 01:09:40.720
http, post, das ist wahrscheinlich, http, post, sowas wie, gibt es eigentlich sowas

01:09:40.720 --> 01:09:53.160
wie await in go, bestimmt, das heißt plus anders, da macht man bestimmt in den channel

01:09:53.160 --> 01:10:09.600
oder so, ja, ok, also, so, also wir posten an diese url und zwar posten wir, hallo autocomplete

01:10:09.600 --> 01:10:23.480
please, what the fuck, warum gehts autocomplete an der stelle, url, content-typ, application,

01:10:23.480 --> 01:10:47.800
ach guck mal, der macht autocomplete, das ist ziemlich pork, bodyio reader, what, also,

01:10:47.800 --> 01:11:00.560
sowas würde nicht gehen oder was, ok, da muss ich mich mal inspirieren lassen, von

01:11:00.560 --> 01:11:18.080
irgendeinem Beispiel, post, buff, wo ist der buff, ich hab keinen stream, post, zeig ich

01:11:18.080 --> 01:11:32.280
her, post, url, gibt kein Beispiel, ok, zeig ich her, z-zone, post-request, post-request,

01:11:32.280 --> 01:11:42.480
ja ja, zeig mir wie ein post geht, da, data, data gleich values, ach das funst oder was,

01:11:42.480 --> 01:11:54.400
einfach, ein einfacher string funktioniert nicht, ok, also, wait a minute, hat das ding

01:11:54.400 --> 01:12:10.280
vielleicht ne fertige api, rometoys, alert-manager, api-go, ach es gibt ne fertige client-api,

01:12:10.280 --> 01:12:32.040
rometoys-go, ihr dann, ne, das ist die api, das will ich nicht, ich will den client haben,

01:12:32.040 --> 01:12:43.480
gibt es client oder sowas, tatsächlich, rometoys-client, ihr dann, das ist, da nutze ich doch das, da

01:12:43.480 --> 01:12:52.120
muss ich, wollen wir trotzdem mal gucken wie man das selbst zusammenbauen könnte, wollen

01:12:52.120 --> 01:12:55.600
wir trotzdem mal gucken wie man den request selbst zusammenbauen könnte anstatt, ja das

01:12:55.600 --> 01:12:59.480
gucken wir jetzt trotzdem mal, es muss, muss man ja, es wäre ja sinnig, ne, das zu lernen

01:12:59.480 --> 01:13:06.160
wie das funktioniert, also, wir ignorieren mal prinzipiell wieder alle errors, ach so,

01:13:06.160 --> 01:13:15.840
ja, ist ok, so, error-handling-ploated, so, also temp, so wir müssen jetzt, wir müssen

01:13:15.840 --> 01:13:20.840
jetzt diesen, also das passt schon, post-json haben wir, receive-json ist mir jetzt erstmal

01:13:20.840 --> 01:13:24.600
ziemlich wurscht, so wir müssen jetzt ein silence-objekt anlegen, das heißt wir brauchen

01:13:24.600 --> 01:13:38.480
einen extra Typ, das lassen wir uns autogenerieren und zwar, alert-manager-swagger, so das ist

01:13:38.480 --> 01:13:43.240
die api-beschreibung für das was wir machen müssen und wir müssen post-silences machen,

01:13:43.240 --> 01:13:56.120
so, und was ich gelernt habe ist, dass rider, wenn man copy-pasted, daraus ein go-objekt

01:13:56.120 --> 01:14:04.960
machen kann, guck mal, ist das nicht nice, silence, muss man gar nichts mal von hand

01:14:04.960 --> 01:14:13.080
machen, einfach json copy-pasten und der generiert dir, der generiert dir da draus ein go-objekt,

01:14:13.080 --> 01:14:20.480
das ist sehr praktisch, wahrscheinlich total verbose und man könnte es viel einfacher

01:14:20.480 --> 01:14:35.320
machen, aber passt ja, matchers-struct, ach ne, passt, ok, so, das heißt ich brauche

01:14:35.320 --> 01:14:48.440
jetzt hier silence, silence, i kill you, ich bräuchte jetzt hier silence, ne wie geht das,

01:14:48.440 --> 01:14:58.320
fill all fields, all die brauche ich nicht, matchers, ok, was brauche ich dann, matchers

01:14:58.320 --> 01:15:05.160
brauche ich, common brauche ich, created by brauche ich, start-time, end-time, ok, alles

01:15:05.160 --> 01:15:15.400
klar, also, start-time, wir machen mal kurz easy-mode, wir machen mal kurz easy-mode,

01:15:15.400 --> 01:15:22.400
weil, ach er kennt sogar, dass es ein time-objekt ist, ja wir machen mal time-now für ende

01:15:22.400 --> 01:15:27.880
und start, einfach nur um zu gucken ob es funktioniert, also unsere maintenance soll

01:15:27.880 --> 01:15:33.080
jetzt anfangen, was ich bastle, äh folgendes, mach mal ausrufezeichen heute, ich weiß nicht

01:15:33.080 --> 01:15:37.680
ob das richtig drinne steht, ich habe ein tool gebaut in dotnet vor einer weile für

01:15:37.680 --> 01:15:45.520
die arbeit, das kommt auf jeden unserer systeme drauf, also über 3000 stück, genau, ähm

01:15:45.520 --> 01:15:52.560
und dann kannst du vom system aus selbst für das jeweilige system von jetzt für 15 minuten

01:15:52.560 --> 01:15:56.760
lang eine monitoring-maintenance setzen, dass wenn du wartungsarbeiten angekündigt

01:15:56.760 --> 01:16:02.920
hast, hast aber vergessen für dieses system eine monitor downtime einzutragen und du willst

01:16:02.920 --> 01:16:07.400
nicht, dass das monitoring verrückt spielt, weil du server-rebootest, kannst du auf dem

01:16:07.400 --> 01:16:12.120
system dann set downtime ausführen, dann setzt dir eine für das system mit deinem name drin

01:16:12.120 --> 01:16:18.200
von jetzt für 15 minuten, das ist ein relativ übersichtliches dotnet-programm hier, also

01:16:18.200 --> 01:16:23.200
relevant sind ja eigentlich nur die hier, also 100, 180 zeichen, zeilen ist jetzt nicht

01:16:23.200 --> 01:16:27.920
die welt ja, und das habe ich mir gedacht, das können wir mal in go nachbauen und bisschen

01:16:27.920 --> 01:16:33.600
lernen wie man sowas in go machen würde, so also matchers, das sollte er zumindest schon

01:16:33.600 --> 01:16:39.320
mal schicken können, ne kann er nicht schicken, äh das heißt ich muss jetzt wahrscheinlich

01:16:39.320 --> 01:16:53.920
sagen jason marschall, ne das geht anart, das muss ich in 2 schritten machen, silence jason,

01:16:53.920 --> 01:16:58.920
war nicht sowas, wir ignorieren mal wieder alle errors, weil error handling bloated,

01:16:58.920 --> 01:17:10.920
jetzt, jetzt bin ich überfragt, was der von mir will, darf man fragen, welche monitor

01:17:10.920 --> 01:17:20.200
löse ich, äh prometoys, früher zappix, ganz früher nagios, dann lange zeit zappix und

01:17:20.200 --> 01:17:31.600
jetzt seit 2 jahren ungefähr, ja 2 jahren, exklusiv nur noch prometoys, vorti, das ist

01:17:31.600 --> 01:17:38.080
eine sehr gute idee, wir machen einfach mal ein bisschen länger, die add, time minute

01:17:38.080 --> 01:17:48.000
mal 15, also 15 minuten können wir die eintragen, äh created by, das haben wir doch hier, created

01:17:48.000 --> 01:17:58.200
by autor, comment haben wir noch nicht, hostname matcher müssen wir noch machen, ähm ok silence

01:17:58.200 --> 01:18:15.960
das mag er nicht, brauchst einen buffer, das ist aber ganz schön umständlich, ah das ist

01:18:15.960 --> 01:18:33.360
informdata, bytes new buffer jason data, ok, bytes new buffer, ja ok wenn man das weiß

01:18:33.360 --> 01:19:02.080
ist doch ganz in ordnung, geht in ordnung, wooploss approved, ja mit datetime ausrechnen

01:19:02.080 --> 01:19:06.240
bin ich mal gespannt, wie gut das klappt gleich, da so weit sind wir ja noch nicht, weil die

01:19:06.240 --> 01:19:11.440
zeit stimmt ja noch überhaupt nicht, die zeit muss nämlich in utc umgerechnet werden, das

01:19:11.440 --> 01:19:14.720
muss ich mir drüber schreiben, dass ich nicht vergesse, weil der alert manager läuft komplett

01:19:14.720 --> 01:19:23.360
in utc, so also das würde wahrscheinlich jetzt funktionieren denke ich mal, response, error

01:19:23.360 --> 01:19:38.960
wird ignored, wer braucht sowas, fmt, prindlen, response, ah ne, so, run, response ist null,

01:19:38.960 --> 01:19:43.000
das heißt es hat schon mal nicht funktioniert, ist aber auch klar, weil ich hab hier kein

01:19:43.000 --> 01:19:56.120
matcher gesetzt, da alert manager läuft nicht, na dann noch mal ausführen, doch funktioniert

01:19:56.120 --> 01:20:07.800
oder auch nicht, an anscheinend nicht funktioniert, da müssen wir jetzt tatsächlich schon wieder

01:20:07.800 --> 01:20:24.680
error handling machen, so viel error handling, so viel error handling, so unprocessable and

01:20:24.680 --> 01:20:34.200
what the, das nervt mich an go, dass man das nicht mal kurz auskommentieren kann, ohne

01:20:34.200 --> 01:20:44.280
dass sie dann sonst rumklicken, alter, das ist abfuck, ach ne, das kommt vom unten, der

01:20:44.280 --> 01:20:52.280
hat gar keinen, moment das, der hat gar keinen error oder, der hat gar keinen error, das

01:20:52.280 --> 01:20:59.400
hat funktioniert, der response code ist einfach code, status code, response code ist einfach

01:20:59.400 --> 01:21:06.080
422, das heißt, da kam nichts sinnvolles zurück, ist ja auch klar, mein request ist

01:21:06.080 --> 01:21:14.160
ja auch fail, stba42, danke schön für den sub, captain peng, danke für den sub, hab

01:21:14.160 --> 01:21:27.560
ich gar nicht gesehen, huge subscription hier, es war gar kein prime subscriber, jebaited,

01:21:27.560 --> 01:21:56.440
so, kannst du naisu raushauen, ja klar kann ich das machen, nachdem du prime gesubbt hast,

01:21:56.440 --> 01:22:20.360
easy money easy life, ne ich kanns auch so machen, ja, so also weiter, status code, warum

01:22:20.360 --> 01:22:26.120
ist ein status code von 422 kein error, na ist eigentlich ok, es war ja auch kein error,

01:22:26.120 --> 01:22:41.120
der request hat ja funktioniert, aber obendrüber die ebene war halt ein fehler, der cloud musst

01:22:41.120 --> 01:22:46.120
du auch nicht jeden error behandeln, ich mein gerade, ich mein gerade wenn du ne exception

01:22:46.120 --> 01:22:50.440
bekommst ja und du willst an der stelle wirklich nicht weitermachen, dann machst du halt kein

01:22:50.440 --> 01:22:58.640
try drum und es kackt ab, du kannst halt in ganz vielen fällen gar nicht sinnvoll weitermachen,

01:22:58.640 --> 01:23:03.240
also kannst in vielen fällen den error nicht handeln, ich mein guck mal, wenn ich den hostname

01:23:03.240 --> 01:23:09.520
eintragen will und er kann den hostname nicht auslesen, da bleibt mir nichts anderes übrig

01:23:09.520 --> 01:23:14.200
als sowas zu machen und das erspare ich mir bei exceptions in der regel, weil ich einfach

01:23:14.200 --> 01:23:26.080
sag ja dann kackt halt ab an der stelle, es ist wahrscheinlich einfach ein bisschen geschmackssache

01:23:26.080 --> 01:23:33.360
aber ich also weiß nicht ich bin nur mit dem error handling noch nicht so, noch nicht so

01:23:33.360 --> 01:23:41.880
hundertprozentig warm ja, status code an den kleinen zurück zu liefern, was für ein status

01:23:41.880 --> 01:23:52.280
code, ich mein ich könnte ne sinnvolle konsolenausgabe ausgeben aber ich hoffe mal, dass der error

01:23:52.280 --> 01:24:00.520
sagt irgendwas sinnvolles aus, so also jetzt können wir den kram hier abschicken, so das

01:24:00.520 --> 01:24:09.040
heißt die matcher sind nicht gesetzt, wie setze ich denn jetzt hier sinnvolle matcher,

01:24:09.040 --> 01:24:18.720
so ich bin mir nicht ganz sicher, was die ganze syntax hier macht, wir haben nen array

01:24:18.720 --> 01:24:28.280
von structs, ok das verstehe ich, aber ist das ein anonymer struct, weil der struct hat

01:24:28.280 --> 01:24:42.400
kein name, das heißt der typ hat kein name, ne der hat wirklich kein name oder moment

01:24:42.400 --> 01:24:54.560
moment ne matchers ist ein anonymes struct array oder irgendwie sowas, und wofür genau

01:24:54.560 --> 01:25:05.200
muss da geschweifte klammern am ende noch mal hin, das würde ich ja verstehen aber wozu

01:25:05.200 --> 01:25:15.600
sind die geschweiften klammern da, was passiert wenn ich da was reinschreibe, keine ahnung,

01:25:15.600 --> 01:25:22.480
also ohne die geschweiften klammern funktioniert es zumindest schon mal nicht, was da kommt

01:25:22.480 --> 01:25:30.720
der inhalt hin, ich denke hier schreibe ich jetzt den inhalt rein, ne mache ich anscheinend

01:25:30.720 --> 01:25:53.920
nicht oder, warte mal, wie schreibe ich denn da jetzt was rein, ich hab kein plan, wie

01:25:53.920 --> 01:26:09.520
füll ich, wie füll ich das denn jetzt, was der struct, das hatte ich gerade, jetzt will

01:26:09.520 --> 01:26:17.280
er nix, ich kriege auch kein auto complete, das ist schon mal verdächtig, dass es nicht

01:26:17.280 --> 01:26:47.080
funktioniert, ok, goleng anonymes struct json, use anonymes

01:26:47.080 --> 01:27:16.880
struct, so, auf, zeig her, hier, da, new car, also, also, ok, ok leute, das heißt ich

01:27:16.880 --> 01:27:30.280
mache jetzt, ich mache jetzt einen neuen typ, typ, matcher struct und der enthält das da,

01:27:30.280 --> 01:27:38.160
sehe ich das soweit richtig, und dann ist das nicht dieser crap, sondern ein array von

01:27:38.160 --> 01:27:44.720
matchern, ok, es gibt keinen syntaxfehler, scheint schon mal zu passen was ich da gemacht

01:27:44.720 --> 01:28:01.560
hab, und jetzt, nein nicht nil, slice match, was will der dude von mir, ah, ok, das ist

01:28:01.560 --> 01:28:08.400
quasi so list syntax, also könnte ich quasi auch noch mehrere rein machen, ahja, ja ohne

01:28:08.400 --> 01:28:15.160
auto complete wäre ich jetzt aufgeschmissen gewesen, so, also, hostname, ok mal gucken,

01:28:15.160 --> 01:28:22.280
was muss ich da rein füllen, hostname, nee, name, name, hostname, value, die variable

01:28:22.280 --> 01:28:35.840
innerhalb von hostname, itsregionsfault ist equals true, ok, true, 0w, easy, so und jetzt

01:28:35.840 --> 01:28:40.200
sollte ich eine maintenance bekommen, wenn ich das richtig gemacht hab, go run, 200,

01:28:40.200 --> 01:28:48.960
200 ist immer gut, 200 und haben wir eine maintenance, active, jawoll, hat funktioniert,

01:28:48.960 --> 01:28:57.480
poggies, hostname gleich poggers, alles klar, ok, schon mal deutlich einfacher gewesen

01:28:57.480 --> 01:29:17.960
als in rust, warum ist denn das hier ausgekraut, oh, was hat er jetzt gemacht, hä, unsinnig,

01:29:17.960 --> 01:29:28.320
die machen wir nix, assync mit channels, alles synchron ist ok, ich kann utc machen, ah,

01:29:28.320 --> 01:29:35.840
das ist gut zu wissen, aber so einfach ist es mit datetime natürlich nicht, so einfach

01:29:35.840 --> 01:29:42.960
ist es nicht, wir müssen nämlich das hier machen mit datetime, also sprich, entweder

01:29:42.960 --> 01:29:51.600
hat der user über die kommandozeile was gesetzt an datetime oder, wobei ich will jetzt keinen,

01:29:51.600 --> 01:29:58.800
ich hab jetzt keinen bock auf kommandozeilen, auf kommandozeilen, parsing, also das ergibt

01:29:58.800 --> 01:30:06.120
ja so mal Sinn, er setzt die maintenance und alles ist gut, kann ich das geprinte hier

01:30:06.120 --> 01:30:20.560
auch wegmachen, äh ja, status code null, was hat er für schmerzen, wo ist das problem,

01:30:20.560 --> 01:30:26.360
dann nicht, bloated error handling, alles weg, so, aber um datetime müssen wir uns jetzt

01:30:26.360 --> 01:30:32.200
tatsächlich doch kümmern, weil eine logik brauchen wir nämlich noch für datetime, also

01:30:32.200 --> 01:30:38.000
machen wir mal sowas hier, also start time, gehen wir mal von aus, wir hätten das aus

01:30:38.000 --> 01:30:48.360
der kommandozeile bekommen, irgendwie in den optionen, start time now, ok, wir simulieren

01:30:48.360 --> 01:30:54.480
das mal, ja, also das hier ist irgendwie keine ahnung, start time arc, so, das ist das was,

01:30:54.480 --> 01:30:58.880
das ist das was bei der kommandozeile reinkommt, so, über kommandozeile hat einer eingegeben,

01:30:58.880 --> 01:31:06.400
er will um 0.30 und 0 sekunden, also er möchte um 0.30 seine wartungsarbeiten beginnen, so

01:31:06.400 --> 01:31:12.960
jetzt brauche ich ja folgende logik, erstens muss ich den utc umrechnen und zweitens brauche

01:31:12.960 --> 01:31:20.680
ich folgende logik, wenn 0.30, also es ist nur mal ums zu erklären warum, also wenn einer

01:31:20.680 --> 01:31:27.440
um 23.45 sich einloggt, weil er wartungsarbeiten macht, kann es durchaus sein, dass der 0.30

01:31:27.440 --> 01:31:32.680
angibt, der meint dann aber nicht 0.30 am aktuellen tag, sondern 0.30 am nächsten tag,

01:31:32.680 --> 01:31:39.320
also muss ich gucken, ist 0.30 in der vergangenheit, wenn 0.30 in der vergangenheit ist, dann meint

01:31:39.320 --> 01:31:44.600
er nächsten tag, am ende kommt ja nochmal statusausgabe, wo drin steht, was sache ist,

01:31:44.600 --> 01:31:47.920
er kann es ja am zweiten verlöschen, wenn das nicht so ist, aber in 99 prozent der fälle

01:31:47.920 --> 01:31:59.800
ist das so, dann kann man das nicht nämlich sparen, irgendwelche datum sachen und so anzugeben,

01:31:59.800 --> 01:32:02.800
habe ich mir gedacht, das ist sinnvoller, also gehen wir mal von aus, das hier kommt

01:32:02.800 --> 01:32:11.680
über kommando zeile rein, wie kriege ich das jetzt gescheit gepasst in ein, in start,

01:32:11.680 --> 01:32:25.400
in start time, also start time args, also time pass, pass in location, was macht das denn,

01:32:25.400 --> 01:32:34.920
das hört sich so nach zeitzone an, wenn ich ehrlich bin, pass in location, macht, pass

01:32:34.920 --> 01:32:49.760
in location ist like pass, no shit, but differs in two important ways, also pass, nimmt utc,

01:32:49.760 --> 01:33:00.240
wenn es keine timezonen informationen hat und pass in location braucht eine timezone,

01:33:00.240 --> 01:33:08.320
ok, wie kriege ich eine location, weil ich will immer location europe berlin haben, location

01:33:08.320 --> 01:33:32.720
ne, ne, location, load location, string, tja, ok das müsste, das müsste europe berlin sein

01:33:32.720 --> 01:33:51.800
vermute ich mal, goleng, timezone, berlin, wahrscheinlich, stand da, echt, wirklich,

01:33:51.800 --> 01:34:02.720
habe ich nicht gesehen, hier, oder, oder hier, example, ach guck mal da, null, im example

01:34:02.720 --> 01:34:08.640
ist es drinnen, keck, keck weh, ich bin mir nicht sicher, ob man das in go machen darf,

01:34:08.640 --> 01:34:13.080
aber ich glaube, ich brauche die, die time informationen noch an mehreren stellen, deswegen

01:34:13.080 --> 01:34:22.280
mache ich da eine globale variabler draus, ob das, beziehungsweise, darf man so machen,

01:34:22.280 --> 01:34:35.240
ne, muss ich da war da vorschreiben jetzt, ok, location, das werde ich gar nicht noch

01:34:35.240 --> 01:34:44.560
woanders brauchen, ok, pass in location, also ok, zeitparsen, wie kann man sich in go eigentlich

01:34:44.560 --> 01:34:53.240
in der idee hier, highlighten lassen, arguments, das müsste doch, das normalerweise ist das

01:34:53.240 --> 01:35:06.120
shift, shift, control, space, arguments, arg, param, parameter, control p ist es, control

01:35:06.120 --> 01:35:17.880
p, ah, control p, ok, dann, ja, ich verwende in rider die visual studio shortcuts, deswegen

01:35:17.880 --> 01:35:46.560
weiß ich das nicht, param, eben hatte ich doch, ok, nice, alles klar, ok, layout string,

01:35:46.560 --> 01:35:55.760
das ist dann wahrscheinlich irgendwie, ja, wahrscheinlich die üblichen geschichten,

01:35:55.760 --> 01:36:09.200
ne, wait a minute, ach ne, so muss man das machen, hier, was, hä, wa, weh, warum schreibt

01:36:09.200 --> 01:36:17.480
der da ne Jahreszahl hin, der soll, der soll, ja, ja, ja, schreiben, four digit, hä, kaputt,

01:36:17.480 --> 01:36:31.880
ok, ich will ja das ja gar nicht, ich mein, ich will, ich will haben, stund, hä, warum

01:36:31.880 --> 01:36:44.080
stehen da zahlen, minute, what the, die idee macht faxen, wahrscheinlich, ja, was zum

01:36:44.080 --> 01:36:56.360
toll, 15 uhr 4 und 5 sekunden, ach das sind beispiel, beispieldaten, beispieldaten geben

01:36:56.360 --> 01:37:01.240
doch überhaupt keinen sinn an der stelle, da müsste sowas stehen wie sowas zum beispiel

01:37:01.240 --> 01:37:15.280
oder minute, minute, oder ne, klein ist das minute, minute, hä, musste die doku schauen,

01:37:15.280 --> 01:37:23.520
vielleicht ist das absicht, aber das ist die weird champigste, also die weird champigste

01:37:23.520 --> 01:37:33.720
variante zum, zum, zum parsen, die ich lange zeit gesehen hab jetzt, ok, warte mal, ähm,

01:37:33.720 --> 01:37:38.200
ich guck gleich mal in die, so hier kommt jetzt wahrscheinlich der string hin und jetzt

01:37:38.200 --> 01:37:45.080
kommt hier die location hin, ok, das passt, oder auch nicht, warum, ach so, weil wir der

01:37:45.080 --> 01:37:58.200
error handling, error handling, keckel, ok, go lang, pass time, jawoll, erklär mal, date,

01:37:58.200 --> 01:38:28.120
layout, hä, der schreibt das auch so weird champ hin, aber, hä, das versteh ich nicht,

01:38:28.120 --> 01:38:40.400
sind das magic strings, die quasi als platzhalter fungieren, also sprich, muss ich hier 05 hinschreiben,

01:38:40.400 --> 01:38:46.200
dass er erkennt, ich mein, sekunden, und wenn ich hier jetzt 04 hinschreiben würde, dann

01:38:46.200 --> 01:38:51.440
würde er denken, es sind minuten, sind das irgendwelche magic, magic zahlen oder so,

01:38:51.440 --> 01:38:58.320
das ist keine big brain format angabe, das ist ne ziemlich bescheuerte format angabe,

01:38:58.320 --> 01:39:13.760
jetzt mal ganz im ernst, ok, würde das überhaupt funktionieren, pkg time constants, wenn du

01:39:13.760 --> 01:39:24.520
keine auto completion hast, bist du lost hier, moin patrick, die meinen das ernst, das sind

01:39:24.520 --> 01:39:41.600
keine beispiele, what the fuck, wir sind weiter als in rust, die meinen das ernst, man macht

01:39:41.600 --> 01:39:50.480
den go keine place halter für datum, für ja, minute, sekunde, sondern man trägt beispielzahlen

01:39:50.480 --> 01:40:01.280
ein, ok, das ist hardcore weird champ, das ist richtig weird champ, das checkt doch,

01:40:01.280 --> 01:40:20.520
das checkt keiner, der mal was anderes verwendet hat, ok, es ist der erste 000030, ok, das

01:40:20.520 --> 01:40:29.040
ist vor allem bei workstation hier, guck, vor allem bei workstation, ich weiß nicht,

01:40:29.040 --> 01:40:34.480
also das sagt mir jetzt nicht sonderlich zu, muss ich ehrlich sagen, naja gut, machen wir

01:40:34.480 --> 01:40:40.920
mal weiter, also, irgendeiner hat 0030 angegeben, jetzt hab ich das gepasst und jetzt weiß

01:40:40.920 --> 01:40:47.820
ich, das ist der erste 000030, das bringt mir ja nix, das heißt ich brauch jetzt sowas

01:40:47.820 --> 01:41:00.640
wie start time, date oder so, kann man das setzen, date kann man nicht setzen, kann man

01:41:00.640 --> 01:41:13.800
überhaupt irgendwas setzen, nee, muss ich da jetzt ein neues, muss ich da, moment, muss

01:41:13.800 --> 01:41:18.800
ich da jetzt irgendwie, ok, ich schreib jetzt einfach mal was hin und dann müssen wir gucken,

01:41:18.800 --> 01:41:34.120
ob das Sinn macht, also now gibt's ja, so, start time, gleich, time, gibt's hier sowas

01:41:34.120 --> 01:42:03.880
wie new, date gibt's, date, ok, now, year, das muss aber bestimmt irgendwie schöner

01:42:03.880 --> 01:42:13.800
gehen, now, month, ich will ja im Prinzip die Zeit plus das Datum von heute, aber ok,

01:42:13.800 --> 01:42:26.800
now, day, und jetzt will ich start time, hour, ok, das ist ja mal hardcore umständlich,

01:42:26.800 --> 01:42:30.280
das geht bestimmt einfacher Leute, wenn ihr irgendwie Ahnung habt, wie das einfacher

01:42:30.280 --> 01:42:38.600
geht, sag Bescheid, also, ich weiß grad nicht wirklich, so, nanoseconds, 0, location, location,

01:42:38.600 --> 01:42:58.240
das ist ja wirklich, woops, location, location, add, ob add funktioniert, also, start time,

01:42:58.240 --> 01:43:18.160
add, add date gibt es, also da quasi das gleiche, was will er haben, ja, Monat, Tage, was, Moment,

01:43:18.160 --> 01:43:23.480
der will den Monat als Int, aber Monat von dem gleichen Objekt ist ein eigener Typ und

01:43:23.480 --> 01:43:29.160
kein Int, was ist das für ein undurchdachter Schwachsinn, vor allem warum geht add date

01:43:29.160 --> 01:43:37.320
nicht, aber, aber, time, date, ist dann wieder ein Int und kein Monat, what the fuck, was

01:43:37.320 --> 01:43:45.400
ist denn, wer hat sich diese API ausgedacht, das ist ja mal richtig gehirnamputiert, alter,

01:43:45.400 --> 01:43:50.440
wer hat's, das ist ja mal richtig, also das ist wirklich maximal hängen geblieben, und

01:43:50.440 --> 01:43:55.160
was mach ich jetzt, caste ich das jetzt einfach mal hart zu einem Int oder was, achso, Moment,

01:43:55.160 --> 01:44:00.720
nee, wir sind ja in Go, Sekunde, äh, caste das mal zum Int oder gucken wir mal was rauskommt,

01:44:00.720 --> 01:44:11.720
ok, anscheinend, anscheinend funktioniert das, ok, start time, ah, Moment, ich hab nie

01:44:11.720 --> 01:44:16.400
die, die Topless G baitet uns, da kommt nämlich schon ein Timeobjekt raus, das muss ich erst

01:44:16.400 --> 01:44:27.480
mal was, immutable, das muss ich ja mal neu zuweisen, äh, was meinst du, wer kostet

01:44:27.480 --> 01:44:38.440
Geld, ach, vor allem bei Workstation, ja vor allem bei Workstation kostet Geld, so, run,

01:44:38.440 --> 01:44:52.080
23, was, wait a minute, wir haben nicht den 23, wir haben den 22, und wir haben auch nicht

01:44:52.080 --> 01:45:04.640
den 8, ach, das ist schon, weil es auf 0101 steht, oh, abfuck, was das denn man, ok,

01:45:04.640 --> 01:45:12.320
also dann doch so, nee, das ist, das ist, das, also ich mein, die, die, die.net time

01:45:12.320 --> 01:45:17.920
API ist, äh, time Geschichte, ähm, ist schon nicht schön, aber das ist auch nicht toll

01:45:17.920 --> 01:45:22.280
hier, so, also jetzt hab ich die start time, das können wir jetzt mal ausprobieren, das

01:45:22.280 --> 01:45:30.280
müsste so ja funktionieren, so, da krieg ich nämlich Datum heute, heute 0.30, so, heute

01:45:30.280 --> 01:45:40.800
0.30 ist natürlich schon um, deswegen muss ich jetzt gucken, if start time, nein, if

01:45:40.800 --> 01:45:49.680
start time kleiner now, nee, das geht auch nicht, invalid operator, ok, es gibt kein

01:45:49.680 --> 01:46:03.560
größer kleiner Vergleich zwischen time, das ist auch dumm, ok, go lang compare time, how

01:46:03.560 --> 01:46:12.040
to compare time, siehste, krass, erste, ähm, today add before, ok, das ist in Ordnung,

01:46:12.040 --> 01:46:20.040
mein größer kleiner überschreiben wäre irgendwie cool gewesen, aber ok, wenn das before now

01:46:20.040 --> 01:46:28.640
ist, dann printe ich erstmal keckel, alles klar, das ist before now, ist ja logisch,

01:46:28.640 --> 01:46:39.640
es ist ja 0.30 mit heutigem Datum, ist ja schon ein bisschen her, das heißt, wenn das

01:46:39.640 --> 01:46:48.040
vor dem aktuellen Datum ist, dann will ich es setzen auf, ok, Leute, das muss einfacher

01:46:48.040 --> 01:47:03.120
gehen, dann will ich es setzen auf, nee, Moment, add, add, ich will nen Tag adden, wie, wie

01:47:03.120 --> 01:47:29.760
adde ich einen Tag, achso, ich hab ne Idee, einfach so, hä, Null, ok, ich hab ne Idee,

01:47:29.760 --> 01:47:59.320
einfach so, hä, Null, Null eins, es müsste auch gehen, so, ok, start time und jetzt klappt

01:47:59.320 --> 01:48:06.120
das oder was, nein, ja, funktioniert, guckt mal, die Zeit ist vor, vor der aktuellen Zeit,

01:48:06.120 --> 01:48:12.560
dann macht er sie für morgen und die Zeit ist nach der aktuellen Zeit, dann bleibt es

01:48:12.560 --> 01:48:19.680
auf heute, genau, genauso will ich das haben, das ist gut, alles klar, das ist aber mega

01:48:19.680 --> 01:48:32.160
hardcore umständlich, zwar im Ernst, das ist wirklich umständlich an der Stelle, irgendjemand

01:48:32.160 --> 01:48:39.600
fife hat eine Idee, wie das einfacher geht, wenn in der Zwischenzeit eine Zeitumstellung

01:48:39.600 --> 01:48:44.000
ist, dann passiert nichts, weil sich das alles auf meine Now Variable bezieht, die ich einmal

01:48:44.000 --> 01:49:06.400
gesetzt hab, aber es ist schon, also, hm, fällt da irgendjemand was Schlaues ein dazu,

01:49:06.400 --> 01:49:14.360
das muss man irgendwie schöner hinbekommen, ich mein, kann man Dates mal irgendwas, nein,

01:49:14.360 --> 01:49:20.560
das geht auch nicht, aber das sieht bisschen pipiger aus, viele Zeilen können es ja nicht

01:49:20.560 --> 01:49:28.320
sein oder, oder macht Pastebin oder so, ja Pastebin, da steht jetzt Rickrolling drin

01:49:28.320 --> 01:49:56.360
oder so, ok, Vorschlag vom Chat, auf gehts, ok, soweit, wat, äh und wo machst du den

01:49:56.360 --> 01:50:14.840
Unterschied, ob es heute davor ist oder morgen, weil, das macht er selber, ich checks trotzdem

01:50:14.840 --> 01:50:40.640
nicht, ach so, das macht er selber, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

01:50:40.640 --> 01:50:53.320
aber es muss ja nicht 0h30 sein, es könnte ja auch irgendwie, 18h sein, gehts dann immer

01:50:53.320 --> 01:51:02.320
noch

01:51:02.320 --> 01:51:09.560
DURATION HOURS okay also das ja das ist ein bisschen kürzer und das ist vielleicht schöner

01:51:09.560 --> 01:51:13.860
zu lesen aber ich checks nicht so gut wie mines wobei mines auch schon nicht gut zu

01:51:13.860 --> 01:51:19.520
checken ist aber ich glaube ich lass jetzt mines erstmal ich mein das versteh ich wenigstens

01:51:19.520 --> 01:51:31.800
noch halbwegs können wir kurz anschauen ist es das karbon video ja ich hab schon auf ich

01:51:31.800 --> 01:51:38.520
hab's ich hab schon auf die flur hammer denn 21 wir machen noch eine viertel stunde wir

01:51:38.520 --> 01:51:46.000
machen auch eine viertel stunde go da gucken uns noch das karbon video an carbon ich verstehe ja

01:51:46.000 --> 01:51:55.800
nicht so genau wann man carbon verwenden soll weil die ganzen spiele programmierer werden

01:51:55.800 --> 01:52:04.960
wahrscheinlich weiter c++ verwenden das ist wahrscheinlich nur wenn man keinen bock auf

01:52:04.960 --> 01:52:14.200
c++ hat aber c++ libraries verwenden muss oder so ja gucken wir gucken wir uns an ok also das

01:52:14.200 --> 01:52:18.920
das das sollte soweit passen ach ja in viertel stunde haben wir noch zeit wir müssen die sache

01:52:18.920 --> 01:52:26.320
noch in utc umwandeln ich glaube das ist in dem fall tatsächlich jetzt relativ easy nao machen

01:52:26.320 --> 01:52:33.520
wir hier mal weg und das machen wir auch oben hin weil das kommt ja später in kommandozeilen

01:52:33.520 --> 01:52:47.160
argumente parsing kommt mal hier weg das ist wirklich pepega aber ok so also starts at start

01:52:47.160 --> 01:53:01.360
time utc in utc so duration habe ich noch nicht kann denn ok mal was anderes kann dann go time

01:53:01.360 --> 01:53:09.120
und duration zusammen rechnen irgendwie wahrscheinlich ok testen wir mal time duration

01:53:09.120 --> 01:53:32.360
das erinnert mich an an rast von gestern wie ok sag mal ich habe ich habe eine duration von 20

01:53:32.360 --> 01:53:41.760
minuten minutes time minutes 20 so kann ich jetzt sagen

01:53:41.760 --> 01:54:00.160
ne da muss ich moment das muss muss ich muss ich hier oben machen end time ist da time at ach das

01:54:00.160 --> 01:54:12.040
geht ok das ist gut dass das funktioniert was ist denn jetzt schon wieder dein problem mensch ach

01:54:12.040 --> 01:54:38.320
moment nee ok einfach so oder was ok end time utc ja das müsste doch jetzt eigentlich funktionieren

01:54:38.320 --> 01:54:47.200
lass mal kurz in den alert manager gucken nix aktiv ja ja ich brauche meinen delete knopf

01:54:47.200 --> 01:55:01.760
ich brauche meinen delete knopf so also utc auto comment comment ist jetzt erst mal egal gut wenn

01:55:01.760 --> 01:55:08.440
ich das jetzt richtig sehe der sollte jetzt eine maintenance setzen oder eine silent setzen für

01:55:08.440 --> 01:55:24.880
morgen 0 uhr 30 also 23 siebter 0 uhr 30 bis 0 uhr 50 wenn das alles funktioniert warum sagt

01:55:24.880 --> 01:55:34.320
er ich soll das nicht machen delete ach so geht das auch das ist dann quasi eine duration time

01:55:34.320 --> 01:55:42.480
minute mal 20 so mies ist die api gar nicht mal muss ich sagen wenn man sich da dran gewöhnt ist

01:55:42.480 --> 01:55:50.440
das naja das hier oben ist schon eklig aber naja ok gucken wir mal also für morgen 0 uhr 30 bis

01:55:50.440 --> 01:56:08.320
0 uhr 50 funktioniert hoffe ich mal panning view ja wir reden ja wir reden ja von utc ja wir reden

01:56:08.320 --> 01:56:23.080
ja wir reden ja von utc ja

01:56:23.080 --> 01:56:45.160
ja doch doch doch doch das ist richtig das ist richtig 22 uhr 30 utc ist 0 uhr 30 bei uns

01:56:45.160 --> 01:56:51.640
zeitzonen abschaffen da bin ich auch dafür zeitzonen sorgen für viel mehr stress als dass

01:56:51.640 --> 01:56:56.320
es irgendwas bringt dann ist es halt bei ein um 20 uhr mittag und ein beim 12 uhr mittag ist

01:56:56.320 --> 01:57:03.200
doch egal man gewöhnt sich dran dass 20 uhr mittag ist besser als sommerzeit winterzeit

01:57:03.200 --> 01:57:22.520
zeitzonen shit ok das war erstaunlich einfach jetzt jetzt hat er die maintenance gesetzt so jetzt

01:57:22.520 --> 01:57:30.520
fehlt uns natürlich noch ach so die id brauchen wir noch von der maintenance ok gibt es so was

01:57:30.520 --> 01:57:37.360
wie dynamic in go so irgendwie so dynamic jason ohne dass ich ein extra objekt zum marsch allen

01:57:37.360 --> 01:57:55.400
und entmarsch allen brauche also sowas wie hier response response response wir zählen

01:57:55.400 --> 01:58:06.680
alles nur noch in unix timestamps ja da bin ich dabei gibt es sowas wie ok go lang scheiß

01:58:06.680 --> 01:58:14.520
jason dynamic dynamic jason in go also ich würde jetzt gerne ehrlich gesagt sowas machen jason

01:58:14.520 --> 01:58:25.360
id aber ich glaube das das geht nicht oder oder kann ich da irgendwelche anonymen structs

01:58:25.360 --> 01:58:46.480
jetzt für verwenden nö anmarschal into dynamic hell wunderbar map string interface jason

01:58:46.480 --> 01:59:04.080
raw message ok ich habe keinen plan was der was der dude da treibt da machen lassen wir

01:59:04.080 --> 01:59:11.240
da jetzt einen typ draus erzeugen und gut ist schwäger wir bekommen als antwort für

01:59:11.240 --> 01:59:24.200
einen post wo steht die response hier

01:59:24.200 --> 01:59:35.560
es type struct ja keine ahnung

01:59:35.560 --> 01:59:49.920
silence response silence id rapper ach keine ahnung silence response heißt das ding jetzt

01:59:49.920 --> 02:00:05.360
gut ist weil ich brauche die id das heißt wenn ich das jetzt richtig im kopf habe jason

02:00:05.360 --> 02:00:18.000
die marschal ne entmarschal oder wie heißt das anmarsch ja meinetwegen so body und jetzt

02:00:18.000 --> 02:00:24.600
sagt man ihm in welchen typ im moment den typ musste man vorher anlegen und da hat er

02:00:24.600 --> 02:00:47.720
chat gesagt das macht man mit war silence oh gott war fuck alle ich weiß nicht bis funktioniert

02:00:47.720 --> 02:00:57.120
jetzt gucken wir uns einfach ab was haben wir hier gemacht so macht man das alles klar

02:00:57.120 --> 02:01:03.480
also dahinter einfach den typ also silence response und dann sagt man ihm hier was war

02:01:03.480 --> 02:01:19.120
das und man muss man dann und machen und api root ok bites ok direkt davon lesen ging anscheinend

02:01:19.120 --> 02:01:33.600
nicht ein bisschen umständlich aber ok

02:01:33.600 --> 02:01:49.920
wobei kann ich nicht einfach sagen bites read read reader new reader irgendwie so less

02:01:49.920 --> 02:02:11.320
body ach fuck was ist das problem

02:02:11.320 --> 02:02:34.040
wirklich muss man das wirklich so so extrem umständlich machen bites so gotte hallo so

02:02:34.040 --> 02:02:52.640
und jetzt ok das ist wirklich krass umständlicher shit so null ist jetzt gut oder schlecht ach

02:02:52.640 --> 02:03:00.040
ne moment ich ich ich ich print hier auch das falsche ich will ja auch das printen tatsächlich

02:03:00.040 --> 02:03:15.080
es funktioniert glaube ich ja funst du musst du response body noch klausen wie geht oh

02:03:15.080 --> 02:03:22.120
der chat sagt es geht auch noch was anderes hier zeigt mal her der chat way wird jetzt

02:03:22.120 --> 02:03:35.640
ausprobiert jason u decoder body die code in moment das muss trotzdem an das muss ich

02:03:35.640 --> 02:03:53.400
trotzdem wahrscheinlich anlegen und da muss kommt jetzt was any so unhandelt error keck

02:03:53.400 --> 02:04:10.800
ok und das funktioniert jetzt tatsächlich das funktioniert ich muss das noch klausen

02:04:10.800 --> 02:04:25.560
die coolen leute in go sagen doch dann so was oder ach so

02:04:25.560 --> 02:04:47.440
cool das müsste klaus heißen dann wüsste man das body klaus gibt das nicht in den reader

02:04:47.440 --> 02:05:03.920
fuck

02:05:03.920 --> 02:05:11.200
also funktioniert das jetzt oder nicht was hat er denn für schmerzen also er ist damit

02:05:11.200 --> 02:05:25.160
nicht einverstanden aber ich werde definitiv nicht das da machen das kann ich euch sagen

02:05:25.160 --> 02:05:44.240
ne ne ne der meckert der meckert darüber wie macht man das richtig ganz ehrlich ich

02:05:44.240 --> 02:05:49.120
muss es nicht klausen weil selbst wenn es memory liegt ist egal das programm läuft

02:05:49.120 --> 02:05:54.000
zwei sekunden dann memory liegt halt solls memory liegen ist mir doch egal das wird geschlossen

02:05:54.000 --> 02:06:00.960
und dann räumt es automatisch auf das wird nicht geklost fertig bleibt so da wird nichts

02:06:00.960 --> 02:06:08.080
geklost ok das funktioniert so dann können wir jetzt die letzten drei minuten noch gucken

02:06:08.080 --> 02:06:17.000
ob wir diese ausgabe hier so schön hinkriegen emoji ausgabe ist definitiv das wichtigste

02:06:17.000 --> 02:06:36.080
überhaupt so das funst schonmal emoji ausgabe so prindeln davor prindeln danach und jetzt

02:06:36.080 --> 02:06:47.200
müssen wir noch diesen ganzen anderen krempel ausgeben also fmt ja wie mache ich ok das

02:06:47.200 --> 02:06:52.040
das können wir doch nicht machen weil hier mache ich jetzt ja gleich farbige konsolen

02:06:52.040 --> 02:07:04.560
ausgabe und sowas aber das können wir machen also fmt prindeln warum gibt es eigentlich

02:07:04.560 --> 02:07:14.640
keine gescheiten interpolate strings und nur dieses format zeug so monitoring silence

02:07:14.640 --> 02:07:42.400
created plus silence eigentlich moment moment leute leute ich habe das allerwichtigste vergessen

02:07:42.400 --> 02:07:54.000
das allerwichtigste was eigentlich heutzutage nirgendswo fehlen darf ja so ist das gut so

02:07:54.000 --> 02:07:59.560
ist das so muss das sein also ohne rakete kannst du das heute nicht mehr machen sie

02:07:59.560 --> 02:08:08.920
ist ja auch am streamtitel heute rakete ist einfach so dass das das summa summa emoji

02:08:08.920 --> 02:08:13.600
was die ganzen coolen leute heute verwenden und vor allem die ganzen krypto bros und

02:08:13.600 --> 02:08:17.360
die ganzen leute die scammen wollen die haben immer alles nur das geilste für dich und

02:08:17.360 --> 02:08:30.800
mit rakete ja wir können so eine halbwegs sinngemäße ausgabe machen ja also sprich

02:08:30.800 --> 02:08:38.600
sagen wir start start ist amt das ganze farbige zeug haben wir hier nicht ok go color terminal

02:08:38.600 --> 02:09:00.280
das go vielleicht selbst plus start time string leute was der unterschied zwischen string

02:09:00.280 --> 02:09:19.520
und go string go string ok kann man das jetzt formatieren ne format und da wieder dieser

02:09:19.520 --> 02:09:38.360
komische layout string meine güte ich will haben ja eigentlich eigentlich will ich das

02:09:38.360 --> 02:09:45.720
gar nicht haben eigentlich will ich will ich da stehen haben startet in so und so viel minuten

02:09:45.720 --> 02:09:53.680
gibt es den go lang humanizer gibt es denn so was go humans ok ja weil mein netprogramm

02:09:53.680 --> 02:10:04.320
gibt aus starts in 4 hours from now oder solche dinger das ist viel praktischer an der stelle

02:10:04.320 --> 02:10:14.240
als einfach eine zeit go humans einfach 3,2 karsternchen also du brauchst glaube ich auf

02:10:14.240 --> 02:10:19.120
github und go oder russ projekt da musst du schreiben written in russ written in go und

02:10:19.120 --> 02:10:30.840
dann kriegst du gar keiner fliegen die sterne time wie formatiert man time times humanize

02:10:30.840 --> 02:10:35.560
time korrekt das probieren wir jetzt mal schnell aus dann gucken wir dann ist Schluss für

02:10:35.560 --> 02:10:45.360
heute dann gucken wir uns noch ein paar videos an wie bindet man das ein github go humanize

02:10:45.360 --> 02:11:04.320
klar sink ja geh fort was jetzt unused import go fuck mich nicht ab please humanize time

02:11:04.320 --> 02:11:14.120
und wie ging das jetzt noch mal time some time instance also sprich wann starten wir

02:11:14.120 --> 02:11:27.760
end time a moment start start nicht end time null start start time start time ok zeige

02:11:27.760 --> 02:11:36.680
ich mal her 2 hours from now genau so will ich das haben probieren noch mal das hatte

02:11:36.680 --> 02:11:48.600
ich doch vorher das das mag er nicht weil weil er weil ich den error nicht händle ja

02:11:48.600 --> 02:11:52.840
ich händel nicht den error den close werfen kann und das ich mein laufen tut es ist ein

02:11:52.840 --> 02:12:02.240
warning hier von von der ide oder was auch immer was trotzdem cringe warnings cringe warnings

02:12:02.240 --> 02:12:28.360
hat das ding vielleicht irgendwelche sinnigen optionen na mir wäre es nämlich lieber der

02:12:28.360 --> 02:12:41.680
würde ausgeben starts in one hour 50 minutes und nicht 2 hours from now gibt es da nicht

02:12:41.680 --> 02:13:10.320
ein paar bessere beispiele für time custom time was will er von mir

01:56:24.620 --> 02:13:31.520
ich bin nicht der einzige das lesen könnte das lesen können das die meisten

02:13:31.520 --> 02:13:39.560
würde ich sagen so schwierig ist das ja nicht ja aber das ist keine gescheite time formatierung

02:13:39.560 --> 02:13:47.400
hat go format human time ich würde schon lieber haben dass da so was steht wie nicht 2 hours

02:13:47.400 --> 02:14:10.840
from now sondern 2 hours from now stimmt ja nicht wirklich ja es sind ja 1 40 from now

02:14:10.840 --> 02:14:19.360
moment startzeit startzeit ja doch 2 hours from now moment meine startzeit sind doch

02:14:19.360 --> 02:14:33.800
nicht 2 hours from now das stimmt doch auch überhaupt nicht guckt mal moment start time

02:14:33.800 --> 02:14:44.320
sind doch keine 2 hours from now das sind das sind 3 stunden 40 das hat auch mit utc

02:14:44.320 --> 02:15:10.520
nix zu tun 3 stunden 40 sind das ja das ist aber nicht in utc und selbst wenn was 42 42

02:15:10.520 --> 02:15:19.560
nicht 3 40 komm ich auf 3 40 42 ok jetzt verstehe ich das ist in 2 stunden 40 und das ding kann

02:15:19.560 --> 02:15:27.960
ja aber das ist doof also also die formatierung finde ich finde ich kacke ja das das sollte

02:15:27.960 --> 02:15:45.760
schon

02:15:45.760 --> 02:15:59.360
ne das ist dumm das sollte schon genauer dastehen ansonsten ich mein ich kanns auch einfach

02:15:59.360 --> 02:16:07.360
wir können auch einfach sagen irgendwie zu duration oder so falls das geht oder kann

02:16:07.360 --> 02:16:16.760
man 2 2 sachen voneinander abziehen kann man kann man in go time now minus geht das

02:16:16.760 --> 02:16:46.040
warte mal kacke oder was ist das sup sup subtract oder so so kacke string moment ist falsch

02:16:46.040 --> 02:17:03.920
rum das ist falsch rum start time sup time now ja und da kommt jetzt was raus ein timespan

02:17:03.920 --> 02:17:19.480
oder was ist denn kacke jetzt überhaupt eine duration ok ja das ist in ordnung format das

02:17:19.480 --> 02:17:34.320
ding hat keine formatmethode oder was minutes ja man ist das beste das beste was ich machen

02:17:34.320 --> 02:17:44.520
kann jetzt kann man das kann man das karsten das ist ja nur mit karsten los nee alter muss

02:17:44.520 --> 02:17:59.520
ich das vorher in karsten oder in string karsten oder was nee was einfach nur strill

02:17:59.520 --> 02:18:15.160
nee wir sind nicht in python kann man nicht auch eine duration passen doch ich glaube

02:18:15.160 --> 02:18:30.040
schon da noch irgendwas geschrieben duration doch irgendwas stand doch da duration nee

02:18:30.040 --> 02:18:43.440
nee kann man nicht add support for duration nee das ist ja was ist eigentlich sein problem

02:18:43.440 --> 02:18:57.480
mir mal doof gefragt ich meine float 64 ja schön und wie kriege ich das jetzt hin muss

02:18:57.480 --> 02:19:27.440
ich jetzt sagen dollar v print f print f format so lull backslash n das ist go land ja da

02:19:27.440 --> 02:19:40.560
das passt so aber naja also naja schön ist was anderes so kann man das rounden irgendwie

02:19:40.560 --> 02:20:03.240
round math round naja ja so ich mein so könnte man damit leben schön ist es nett

02:20:03.240 --> 02:20:30.960
was prozent also muss ich das gar nicht selbst round he doesn't know he lacks critical information

02:20:30.960 --> 02:20:47.720
funktioniert nicht leute ohne so so naja ich will aber null haben geht es auch ja so ist

02:20:47.720 --> 02:20:58.480
gut so ist gut es startet in 153 minuten also ganz im ernst ordentlich formatiert wäre

02:20:58.480 --> 02:21:06.480
mir das lieber das da steht startet in zwei stunden 33 minuten oder so wäre mir irgendwie

02:21:06.480 --> 02:21:14.640
schon deutlich lieber man kann das sicherlich doch doch chat man kann das garantiert von

02:21:14.640 --> 02:21:19.880
hand machen aber ich bevorzuge es da irgendwelche libraries die dann auch ein gewisser bisschen

02:21:19.880 --> 02:21:24.320
fehlerfreier sind als das was ich mir jetzt aus den fingern saugen könnte das ist aber

02:21:24.320 --> 02:21:43.520
enttäuschend ja dass du die times dass die times hier nicht ordentlich formatieren kannst

02:21:43.520 --> 02:22:01.240
das gefällt mir nicht go humanize time wenn die emojis auch in putty angezeigt ich glaube

02:22:01.240 --> 02:22:09.040
nicht dass putty so modern ist dass es den neuesten front renderer von windows verwendet

02:22:09.040 --> 02:22:16.920
also wahrscheinlich eher nicht also das liegt ja daran dass nur die neueren direkt oder

02:22:16.920 --> 02:22:28.920
wie heißt das direkt direkt wie heißt da krempel für die schriftarten

02:22:28.920 --> 02:22:40.840
direkt stream ne windows font render direkt irgendwas mit windows zeug direkt right heißt

02:22:40.840 --> 02:22:48.200
es genau direkt right ja also wenn putty das nicht verwendet führt das schrift rendern

02:22:48.200 --> 02:22:53.480
wovon ich ausgehe dass es das nicht macht dann wird das mit den emojis nicht funktionieren

02:22:53.480 --> 02:23:03.640
powershell kann es standardmäßig auch nicht nichts unter windows kann das standardmäßig

02:23:03.640 --> 02:23:14.600
das einzige was es kann unter windows ist das neue microsoft terminal als geht es mal

02:23:14.600 --> 02:23:29.600
einst auf chat als könnte das ding hier emojis keckel das glaubt ihr doch selber nicht ja

02:23:29.600 --> 02:23:38.520
es hat nicht ein emoji wobei ich könnte eigentlich anstatt zu copy pasten einfach windows taste

02:23:38.520 --> 02:23:45.480
guck hier da ist nichts mit emoji so powershell glaube kann das auch nicht es ist ja der gleiche

02:23:45.480 --> 02:23:53.320
shit im endeffekt so das einzige was es kann ist das neue windows terminal ach ne da auch

02:23:53.320 --> 02:24:01.160
nicht da muss man auch in ubuntu oder so starten dass das funktioniert na geil richtige rots

02:24:01.160 --> 02:24:21.560
weitere grundlinux zu verwenden ok alles klar neue chrome version ist am start leute

02:24:21.560 --> 02:24:25.760
naja das soll es heute mal gewesen sein mit go lang wir gucken uns jetzt noch das video

02:24:25.760 --> 02:24:37.600
an mal gucken ob es da irgendetwas gibt es für go garantiert fertige libraries so also

02:24:37.600 --> 02:24:45.600
das da soll ich mir angucken zeigt mal her go lang das ist das wird im leben nicht c++

02:24:45.600 --> 02:24:49.160
kann nur von c++ gekillt werden da bin ich überzeugt von

02:24:49.160 --> 02:25:03.760
na da kann man sich jetzt drüber schreiten ja was gibt es immer noch

02:25:03.760 --> 02:25:09.440
microsoft javascript type script apple killed objective c with swift jet brains killed java

02:25:09.440 --> 02:25:22.520
with kotlin and now google is stepping up to the plate for the biggest challenge of all c++ it just

02:25:22.520 --> 02:25:27.760
is designed to match the performance of c++ with lvlm while being able to interop with existing

02:25:27.760 --> 02:25:33.400
c++ code bases that's a big deal because c++ is by far the most prolific language when it comes to

02:25:33.400 --> 02:25:40.320
building high performance low-level systems ja auch die most shit language is 1983 and it's

02:25:40.320 --> 02:25:46.080
accumulated a lot of technical debt in the process the creator of c++ once said quote within c++

02:25:46.080 --> 02:25:49.960
there is a much smaller and cleaner language struggling to get out the problem with making

02:25:49.960 --> 02:25:57.280
c++ das hat er aber schön umschrieben und dadurch dass die klinische language out get it

02:25:57.280 --> 02:26:03.560
wird immer mehr shit obendrauf gebaut better today is that it's such an important language for so many code bases

02:26:03.560 --> 02:26:07.920
that it needs to focus more on standardization as opposed to evolving the design to what modern

02:26:07.920 --> 02:26:12.360
developers want it's really hard to change and establish check now ist es nicht auch in niederländer

02:26:15.880 --> 02:26:17.560
genauso wie der pyson dude

02:26:17.560 --> 02:26:27.760
like when python 2 into python 3 the changes weren't that extreme but it's still very painful

02:26:27.760 --> 02:26:33.280
for anybody wanting to and also all the content on the web and stack overflow becomes stale one

02:26:33.280 --> 02:26:37.560
could argue it's actually a good thing that c++ doesn't try to change too aggressively carbon

02:26:37.560 --> 02:26:42.680
is designed to be a successor language for c++ which is no small undertaking but google is no

02:26:42.680 --> 02:26:47.520
stranger to creating programming languages it gave us go and very well liked in the

02:26:47.520 --> 02:26:51.640
industry at this point carbon doesn't have a good logo or mascot but i'm sure it will get one

02:26:51.640 --> 02:26:56.040
eventually you might also be wondering why not just use a modern memory safe language like rut

02:26:56.040 --> 02:27:02.000
näher ich vermute mal ganz einfach weil die leute c++ libraries verwenden wollen bei google und das

02:27:02.000 --> 02:27:06.920
dann mit rust halt schwierig wird rust und c++ interop ist halt nicht das einzige was du machen

02:27:06.920 --> 02:27:16.160
kannst ist ein c++ kram in c interface zu exportieren die wollen wahrscheinlich kein c++ verwenden

02:27:16.160 --> 02:27:25.560
aber sie wollen c++ libraries verwenden so so stelle ich mir den anwendungszweck von carbon

02:27:25.560 --> 02:27:31.760
vor erst first of all not all c++ developers actually like rust but more importantly carbon

02:27:31.760 --> 02:27:37.200
is designed for easy adoption by existing c++ codebases and developers it has bidirectional

02:27:37.200 --> 02:27:42.440
interoperability with c++ which means you can use existing c++ was last and seamlessly or

02:27:42.440 --> 02:27:46.760
vice versa now i've only been coding for about 12 years which isn't nearly enough time to learn

02:27:46.760 --> 02:27:51.120
c++ let's take a look at some code anyway to run carbon at this point you'll need to install

02:27:51.120 --> 02:27:56.360
google's build tool basil as well as llvm to build it to say hello world we have a main function

02:27:56.360 --> 02:28:01.560
that uses print with a string literal looks pretty simple but if you've never seen a c++ hello world

02:28:01.560 --> 02:28:05.760
that uses this character out bullshit then it looks like a revolutionary improvement but a bigger

02:28:05.760 --> 02:28:11.720
feature is the moment moment despite this vomit so high IQ it was llvm to build it to say hello

02:28:11.720 --> 02:28:15.560
world we have a main function that uses print with a string literal looks

02:28:17.560 --> 02:28:25.520
sieht eigentlich irgendwie so aus wie ich mir das vorstelle aber ja wir wissen in c++ geht

02:28:25.520 --> 02:28:33.480
das so nicht allerdings wenn irgendwann in 15 jahren mal alle compiler die string format api

02:28:33.480 --> 02:28:40.400
unterstützen dann sieht das auch in c++ ganz brauchbar aus falls es jemals der fall sein wird

02:28:40.400 --> 02:28:46.280
it's pretty simple but if you've never seen a c++ hello world that uses this character then it looks

02:28:46.280 --> 02:28:51.200
like it's really revolutionary improvement but a bigger feature is the fact that it supports a

02:28:51.200 --> 02:28:56.160
modern generic system generics allow you to pass types as parameters to classes and functions a

02:28:56.160 --> 02:29:00.880
common pattern and statically typed languages but c++ takes a different approach that's often

02:29:00.880 --> 02:29:05.360
misused and abused called templates carbon still supports templates but generics will provide a

02:29:05.360 --> 02:29:16.240
bunch of advantages in most situations but moment nur durch das jetzt richtig verstehe du kannst

02:29:16.240 --> 02:29:23.120
jetzt carbon generics und oder templates verwenden ja das macht ja viel besser

02:29:26.760 --> 02:29:32.160
ja patrick genau das dachte ich mir auch gerade bunch of advantages in most situations but more

02:29:32.160 --> 02:29:37.560
importantly carbon looks to improve upon memory safety patterns in c++ you can have uninitialized

02:29:37.560 --> 02:29:41.560
variables which can sometimes be important for performance but more often than not they just

02:29:41.560 --> 02:29:46.040
result in bugs and memory access bugs can be very dangerous when hackers learn to exploit that

02:29:46.040 --> 02:29:50.000
carbon has an entire dock on its safety strategy and basically it tries to be as safe as possible

02:29:50.000 --> 02:29:56.800
without hurting performance or interoperability with c++ and it also ich ich fehle immer noch

02:29:56.800 --> 02:30:06.680
ein bisschen so wirklich den den einsatzzweck dazu sehen in different modes like debug performance

02:30:06.680 --> 02:30:10.880
and hardened depending on how much you want to prioritize them carbon hat ja anscheinend

02:30:10.880 --> 02:30:17.200
kein zwischenschritt in dem es erst carbon zu c++ übersetzt und dann durch einen compiler deiner

02:30:17.200 --> 02:30:28.420
wahl kloppt wäre das so könnte man damit wenigstens wenigstens sp 32 programmieren also ja also

02:30:28.420 --> 02:30:32.720
patrick ich glaube auch nicht dass ich das groß durchsetzt memory safety notably it doesn't use

02:30:32.720 --> 02:30:37.320
mechanisms like baro checking reference counting or garbage collection like you might find in

02:30:37.320 --> 02:30:42.080
other languages sounds pretty cool so when can i start using it well at this point it's experimental

02:30:42.080 --> 02:30:46.200
and it's an extremely ambitious project it'll likely be multiple years before this language

02:30:46.200 --> 02:30:50.160
is production ready now even though google just implemented a hiring freeze employers

02:30:50.160 --> 02:31:05.200
are already looking to hire carbon developers you just need to have 10 years of carbon experience

02:31:05.200 --> 02:31:09.440
to apply this has been the code report thanks for watching and i will see you in the next

02:31:09.440 --> 02:31:17.120
one ja das ist eindeutig jebait liest mal den rest aws react photoshop ja ja thanks for

02:31:17.120 --> 02:31:20.480
watching and i will see aber damit der witz der geht immer

02:31:20.480 --> 02:31:35.120
ja du musst irgendwas programmieren viel anders wird das nicht funktionieren am besten

02:31:35.120 --> 02:31:38.600
ist natürlich wenn du irgendein ziel oder irgendein anwendungszweck hast warum du das

02:31:38.600 --> 02:31:45.560
ganze lernst ja manche haben sie wollen irgendwie den spiel programmieren manche wollen einfach

02:31:45.560 --> 02:31:50.640
nur irgendwie eine ordentliche desktop anwendung machen die ihre bilder organisiert was auch

02:31:50.640 --> 02:32:03.400
immer vielleicht hast du ja irgendein ziel was du machen willst vielleicht willst du

02:32:03.400 --> 02:32:11.520
auch die next gen blockchain ai machen ja leute wenn ai porn kommt das wird das riesen

02:32:11.520 --> 02:32:21.240
business ich sag's euch ai generated porn das lernt was die leute geil finden und dann

02:32:21.240 --> 02:32:34.440
für personalized porn generator das ist das ist da steckt die kohle drin ich sag's euch

02:32:34.440 --> 02:32:55.400
ai porn gachi was hyper gachi ich dich ja what ich glaube du musst doch noch ein paar

02:32:55.400 --> 02:33:01.760
tutorials lesen und vor allem die beispiele machen die in den tutorials drinne stehen

02:33:01.760 --> 02:33:16.160
das wird safe geben ja man die ansätze sind jetzt ja schon da funktioniert noch nicht

02:33:16.160 --> 02:33:21.920
so richtig gut aber die ansätze sind da und die nächsten paar jahre wird es das geben

02:33:21.920 --> 02:33:28.000
ja aber die sind alle nicht so nicht so dolle also ich will nicht behaupten dass ich alle

02:33:28.000 --> 02:33:35.160
gesehen habe weil die das no relax critical information aber das was ich gesehen habe

02:33:35.160 --> 02:33:44.600
aus strengen wissenschaftlichen blickpunkt natürlich war jetzt noch nicht so der wahnsinn

02:33:44.600 --> 02:33:51.840
und das was die dort gemacht haben war ja im endeffekt auch eine fertige porn szene nehmen

02:33:51.840 --> 02:34:02.520
und dann dort das gesichts swappen im endeffekt also das ist ja nochmal was anderes als sachen

02:34:02.520 --> 02:34:09.760
komplett generieren aber das wird kommen auf jeden fall sag ich euch das ist so sicher

02:34:09.760 --> 02:34:17.600
wie das arme in der kirche dass sowas gibt ja judo mir hat gute kurse je nachdem welche

02:34:17.600 --> 02:34:26.680
programmier sprache du machst ja gut keine ahnung also dass der satz war jetzt bescheuert

02:34:26.680 --> 02:34:32.680
also welche programmier sprache willst du denn lernen ansonsten ich gehe davon aus

02:34:32.680 --> 02:34:39.040
dass es für die meisten auf judo mir ganz gut ganz gute kurse gibt wie installierst

02:34:39.040 --> 02:34:50.240
du auf linux eine tage z-datei ist jetzt ist jetzt gerade jebait im chat ansonsten

02:34:50.240 --> 02:34:57.120
ist es ganz einfach tage z entpacken ist das easieste auf der welt zeigte wie das geht

02:34:57.120 --> 02:35:20.400
da xfz v blub punkt da punkt jetzt hat so sieht es aus und dann jetzt

02:18:40.060 --> 02:35:50.760
da kann ich mir merken extrakt den rest auch nicht aber die beste seite

02:35:50.760 --> 02:36:15.040
bestes seite geht nicht für alles aber für das wichtigste hallo leute hier ist der max

02:36:15.040 --> 02:36:20.120
und jetzt ist es wirklich passiert 96 tage nach dem upload von meinem video über wenn

02:36:20.120 --> 02:36:25.080
aus elf dachte sich der geht einfach mein eigenes video an ja das muss ich jetzt mal

02:36:25.080 --> 02:36:38.440
dick keck wait ach das hatte ich auch wegen gedriggerten linux fans vorher ok also also

02:36:38.440 --> 02:36:48.000
vergesst sie und vergesst sie plus plus zum einstieg wenn du unter windows hauptsächlich

02:36:48.000 --> 02:36:53.800
unterwegs bist vergesst auch erst mal linux versuche nicht fünf sachen gleichzeitig zu

02:36:53.800 --> 02:36:58.080
lernen und sie und sie plus plus ist zum einstieg auch das schlechteste was man nehmen kann

02:36:58.080 --> 02:37:05.040
meiner meiner meiner ich weiß gibt leute die sehen das anders aber ich sehe das so sucht

02:37:05.040 --> 02:37:18.560
es die schaap oder pausen aus beides gute einsteigerprogramm ihr sprachen ja aber nicht

02:37:18.560 --> 02:37:24.360
zum einstieg naja du könntest die beispiele machen die dort bei den tutorials dabei sind

02:37:24.360 --> 02:37:31.400
ich weiß nicht ob die ob die dort irgendwelche übungsprojekte haben ansonsten musste halt

02:37:31.400 --> 02:37:38.320
ein bisschen das nachbauen was sie in den tutorials lernst also rein tutorials machen

02:37:38.320 --> 02:37:44.760
ohne ein bisschen zu üben ist kacke ich mache es ja auch meistens so ich lese immer relativ

02:37:44.760 --> 02:37:51.120
viel tutorials oder guckt mir relativ viele talks oder tutorial videos an zu einem thema

02:37:51.120 --> 02:37:55.800
und ich fange erst dann an und dann gucke ich die einzel punkte nach so nachdem ich

02:37:55.800 --> 02:37:59.620
einen groben überblick habe aber du kannst nicht ein komplettes programmierbuch quasi

02:37:59.620 --> 02:38:03.680
durchlesen von anfang bis ende und dann erst anfangen also müsstest du musst schon mal

02:38:03.680 --> 02:38:08.440
so nach ein paar themen immer was kleines machen und dir das mal angucken weil du hast

02:38:08.440 --> 02:38:13.040
ja da gerade wenn du was neu lernst hast ja alles drinne ja von basic datenstrukturen

02:38:13.040 --> 02:38:19.800
bis kommando zeilen anwendung bis alles das springt dann sehr hin und her also ich würde

02:38:19.800 --> 02:38:24.340
immer mal zwischendurch schon so ein paar kleine übungs anwendungen machen muss ja

02:38:24.340 --> 02:38:48.920
nichts grosses sein kannst du archlinux empfehlen ja beste arch by the way wir wissen ja woran

02:38:48.920 --> 02:39:01.040
man einen archlinux user erkennt er wird es dir erzählen

02:39:01.040 --> 02:39:08.560
ich habe noch nie coaching gemacht und nachdem ich mir vorstellen könnte das dauert ein

02:39:08.560 --> 02:39:15.000
bisschen müsste ich dafür wahrscheinlich zu viel geld verlangen als dass ich das lohnen

02:39:15.000 --> 02:39:22.760
würde für dich nee dann ganz ehrlich gerade der einstieg den kriegt man wunderbar mit

02:39:22.760 --> 02:39:32.280
kursen und übungs- und kleinen übungsprojekten hin wenn du brauchst die tutorials wenn du

02:39:32.280 --> 02:39:35.880
gar keine ahnung hast dann weißt du nämlich noch gar nicht an was zu suchen sollst ja

02:39:35.880 --> 02:39:40.240
wenn du eine programmiersprache schon kannst und lernst jetzt eine andere dann weißt du

02:39:40.240 --> 02:39:43.440
nach was du googeln musst ja habt ihr heute gesehen ich habe laufend nach irgendwas gegoogelt

02:39:43.440 --> 02:39:48.640
wie das mit go funktioniert aber schon weil ich wusste wie das heißt was ich suche wenn

02:39:48.640 --> 02:39:52.400
du gar keine ahnung hast weißt du nicht an was du googeln willst da was du googeln musst

02:39:52.400 --> 02:40:01.680
also nee du musst also ein bisschen tutorials und sei froh dass es video kurse sind früher

02:40:01.680 --> 02:40:06.280
hast du die bücher geholt ja aber du musst ab und zu mal schon ein paar kleine übungs

02:40:06.280 --> 02:40:11.720
sachen machen das wird nicht anders funktionieren muss dir halt irgendwelche simplen projekte

02:40:11.720 --> 02:40:19.320
raussuchen irgendwas was überschaubar ist es gibt sehr viele videos dazu so zehn projekte

02:40:19.320 --> 02:40:24.440
für einsteiger oder einsteiger projekte empfehlungs sachen da gibt es da gibt es was ja von

02:40:24.440 --> 02:40:28.720
kleinen kommando zeilen anwendungen manche basteln irgendwelche taschenrechner wobei

02:40:28.720 --> 02:40:32.840
ich sagen muss taschenrechner können ultra komplex sein aber die easy varianten davon

02:40:32.840 --> 02:40:43.400
nicht oder irgendwas was dateien sortiert du kannst beispielsweise mal ein bubble sort

02:40:43.400 --> 02:40:49.960
von hand machen so so so kleinigkeiten aber da gibt es viele blog posts und videos mit

02:40:49.960 --> 02:41:02.800
einsteiger programmierideen ja embeddelt da würde ich auch immer also wenn ich

02:41:02.800 --> 02:41:06.960
die auswahl habe zwischen c plus plus und c dann würde ich wahrscheinlich weiter so

02:41:06.960 --> 02:41:12.600
machen wie ich mit arduino mache ich mach c plus plus in c also ich mach zum größten

02:41:12.600 --> 02:41:17.680
teil c aber mit ein bisschen c plus plus weil mich spätestens wenn wenn wenn ich irgendwo

02:41:17.680 --> 02:41:25.840
sehe standard mk shared pointer bla bla bla dann ist bei mir schon zu viel c plus plus

02:41:25.840 --> 02:41:35.520
drinne ja das wird mir rein mit pyson schwierig er hätte mit javascript anfangen müssen

02:41:35.520 --> 02:41:45.400
weil mit pyson hast du dann plus plus tk was halt naja finde ich nicht nicht der rede

02:41:45.400 --> 02:41:51.000
wert ist und definitiv auch nicht gelernt werden muss vielleicht könnte man eine kleine

02:41:51.000 --> 02:41:54.520
webanwendung machen aber dann bräuchte man schon wieder javascript ntml fürs frontend

02:41:54.520 --> 02:42:08.040
und pyson fürs backend wie du dich am besten darauf vorbereiten kannst dich mal ein bisschen

02:42:08.040 --> 02:42:13.720
über die laden schlau machen in denen du hinkommst was die dort machen letztendlich

02:42:13.720 --> 02:42:18.560
du musst du musst nicht programmieren großartig lernen bevor du deine ausbildung anfängst

02:42:18.560 --> 02:42:23.880
die ausbildung ist dafür da dir was beizubringen was du machen musst ist du musst interesse

02:42:23.880 --> 02:42:30.320
und eigeninitiative in der ausbildung haben aber dann hast du direkt vor ort leute die

02:42:30.320 --> 02:42:34.600
du fragen kannst und projekte die du machen musst dann ist es nicht so nach dem motto

02:42:34.600 --> 02:42:38.480
ich lese den tutorial und weiß nicht was ich damit anfangen soll wenn du das machst

02:42:38.480 --> 02:42:45.360
kommt dein chef zu dir und sagt hier guck mal wir haben in den script was sich auf 20

02:42:45.360 --> 02:42:51.360
servan einloggt und dort ein paket hinkopiert ja blödes beispiel das macht man wahrscheinlich

02:42:51.360 --> 02:42:55.000
heute nicht mehr mit einem mit einem script aber nur als beispiel und dann sagt er zu

02:42:55.000 --> 02:43:00.400
die hier nimm dir das mal und baum einen parameter ein wo man den fad eingeben kann wohin das

02:43:00.400 --> 02:43:05.560
kopiert wird so und dann hast du auch schon ein ziel was du machen musst dann weißt du

02:43:05.560 --> 02:43:09.640
auch ungefähr wonach du nachgucken musst und dann hast du auch wen du nur fragen kannst

02:43:09.640 --> 02:43:19.720
ja ne also da würde ich mir jetzt nicht so viel gedanken zu machen im vorfeld ne das

02:43:19.720 --> 02:43:26.680
ist auf jeden fall nichts für den anfang binary tree inverten muss man auch nicht zum

02:43:26.680 --> 02:43:36.000
anfang ne wie gesagt das erstens habe ich keine großartigen pies eine ahnung und zweitens

02:43:36.000 --> 02:43:40.040
wäre das zu teuer und ich habe es auch noch nie gemacht ich habe da erstens kein bock

02:43:40.040 --> 02:43:43.720
drauf und zweitens dauert es zu lange und wäre deswegen in kombination mit kein bock

02:43:43.720 --> 02:43:58.000
drauf wie das viel zu teuer ist ja ich weiß aber dann musste zwei frameworks nebeneinander

02:43:58.000 --> 02:44:18.080
lernen das ist auch nix wo denn du hast überhaupt keine frage chain lore fels jam ich hab das

02:44:18.080 --> 02:44:32.680
schon gesehen das ist wieder ein klassischer das ist überhaupt

02:44:32.680 --> 02:44:44.800
nicht das ist nicht deine frage das ist dein tibet versuch microsoft access das ist das

02:44:44.800 --> 02:44:54.200
was du brauchst um dich in windows einzuloggen deswegen heißt es ja auch access ohne access

02:44:54.200 --> 02:44:58.520
kannst du dich nicht in windows einloggen das heißt nachdem du jetzt eingeloggt bist

02:44:58.520 --> 02:45:11.920
und im twitch chat schreibst hast du auch access naja ich muss den tibeter tibeten was

02:45:11.920 --> 02:45:25.560
bleibt mir denn alles übrig ok chat

02:45:25.560 --> 02:45:42.480
hast du feste streamzeiten nicht wirklich nee kannst du mir aber follow und dann siehst

02:45:42.480 --> 02:45:53.200
und kriegste nachricht wenn ich online gehe was ist die bessere alternative zu access

02:45:53.200 --> 02:45:59.040
diese art der anwendung sind komplett überflüssig und braucht kein mensch wenn du eine anwendung

02:45:59.040 --> 02:46:02.480
hast die eine datenbank braucht die nicht übers netzwerk oder sonst wie dann nimmst

02:46:02.480 --> 02:46:07.280
der sq light wenn du eine web anwendung hast wo ein bisschen mehr brummt wo du im zweifelsfall

02:46:07.280 --> 02:46:14.920
auch die datenbank auf eine extra kiste machen willst nimmst du postgres fertig und wenn

02:46:14.920 --> 02:46:20.840
du dann ganz spezielle anforderungen hast kannst du mal so was wie wie mongo db redis

02:46:20.840 --> 02:46:26.560
kasandra was nicht alles gibt influx db und sowas nachdenken aber nur wenn du ganz spezielle

02:46:26.560 --> 02:46:33.480
sachen machen willst wo postgres nicht nix nix taugt ja ansonsten für einfache sachen

02:46:33.480 --> 02:46:52.360
sq light uninstall anderes fällt mir da nicht mehr ein wir haben auch auf irgendeinem ibm

02:46:52.360 --> 02:47:02.320
mainframe haben wir noch db 2 und unsere mainframe entwickler die kommen sich für die krassesten

02:47:02.320 --> 02:47:10.240
giga chats vor ist echt so wenn du da vorbeigehst die denken echt sie sind die krassesten heckermans

02:47:10.240 --> 02:47:22.160
auf der welt dann haben sie so eine hässliche fadenkreuz konsole ibm mainframe terminal

02:47:22.160 --> 02:47:34.580
hier guck so ein terminal ist das mit so einem fadenkreuz drauf wo man was anklickt ganz

02:47:34.580 --> 02:47:42.600
ganz pains champion das sieht das sieht auch aus wie 1990 nur dass du sowas halt mittlerweile

02:47:42.600 --> 02:47:53.920
auf dem desktop hast aber wenn ich sowas schon sehe weißt du was ich machen kann wenn einstiegspunkt

02:47:53.920 --> 02:48:00.500
im eckfall nicht dann verwendest du weder pisen noch sie schab sucht ihr eine sprache

02:48:00.500 --> 02:48:05.680
raus und fangen mit der an kannst du nicht ernsthaft sie schab pisen und c plus plus

02:48:05.680 --> 02:48:13.960
gleichzeitig lernen wollte das kann doch nicht dein ernst sein nimm pisen oder nimm sie schab

02:48:13.960 --> 02:48:23.520
den rest vergesst lass bleiben zum einstieg wir haben auch linux drauf da kannst ja so

02:48:23.520 --> 02:48:30.640
minimal vms laufen lassen da haben wir auch linux drauf eigentlich c c und c plus plus

02:48:30.640 --> 02:48:43.080
sind zum einstieg müll verschlüsselungstool für daten unter linux ja normalerweise hätte

02:48:43.080 --> 02:48:57.280
ich gesagt einfach ich sag immer das falsche nfs oder e-crypt fs ich kann mir immer nicht

02:48:57.280 --> 02:49:04.120
merken welches das aktuelle ist was man verwenden soll nee nee du willst du willst nicht vera

02:49:04.120 --> 02:49:09.880
krypten sowas du möchtest ja dateien sinken vermute ich mal ja du möchtest dateien ver

02:49:09.880 --> 02:49:14.400
du möchtest auf datal so wie ich das verstehe möchtest du auf datal ebene verschlüsseln

02:49:14.400 --> 02:49:20.760
so dass du sinken kannst weil du sagst auf mehreren rechnern du willst e-crypt fs oder

02:49:20.760 --> 02:49:27.160
eng fs und ich bin mit nein nein nein nicht lux du willst was was du sinken kannst so

02:49:27.160 --> 02:49:31.160
wie ich das verstehe du willst e-crypt fs oder eng fs ich kann mir nicht merken was

02:49:31.160 --> 02:49:39.200
davon das aktuelle ist macht beides ungefähr das gleiche verschlüsselt auf dateiebene

02:49:39.200 --> 02:49:47.840
datainamen bleiben erhalten je nachdem wie man es einstellt aber es wird nicht ein großer

02:49:47.840 --> 02:49:53.960
blob draus gemacht sondern da teilweise verschlüsselt das ist das was du haben willst ja du willst

02:49:53.960 --> 02:50:06.280
e-crypt fs oder eng fs du musst gucken was davon das aktuelle ist ja in der berufsschule

02:50:06.280 --> 02:50:10.960
oder im betrieb im betrieb kann dir das keiner sagen im betrieb könnte es auch genauso gut

02:50:10.960 --> 02:50:17.640
java sein deswegen sag ich ja du musst da weil dich schlau machen bei deinem betrieb

02:50:17.640 --> 02:50:23.480
was der denn hauptsächlich verwendet berufsschule ja du kannst dir den wenn du glück hast kannst

02:50:23.480 --> 02:50:27.800
dir den plan von einer berufsschule online angucken ansonsten würde ich sagen wahrscheinlich

02:50:27.800 --> 02:50:33.800
eher c sharp mittlerweile früher haben sie viel c gemacht aber die ganzen boomerlehrer

02:50:33.800 --> 02:50:43.720
mit c sind mittlerweile weg also wahrscheinlich eher c sharp aber um die berufsschule macht

02:50:43.720 --> 02:51:03.560
ihr keine gedanken nicht n-crypt fs eng fs meine ich also die berufsschule musst du

02:51:03.560 --> 02:51:08.440
dir keine gedanken machen die berufsschule hat absolut unterirdisches niveau ihr werdet

02:51:08.440 --> 02:51:27.160
nach drei jahren immer noch bei print print lese eine zahlein sein das berufsschule kannst

02:51:27.160 --> 02:51:41.080
du vergessen

02:51:41.080 --> 02:52:11.000
dann ist die scharpe zahlein ausgestorben

02:52:11.000 --> 02:52:37.240
ja außer in china in china nicht die die chinesen die stehen unglaublich auf java guckt mal

02:52:37.240 --> 02:52:44.800
ich kann ich euch zeigen gucken wir uns mal die github trends an nicht today sagen wir

02:52:44.800 --> 02:52:55.760
mal sagen wir mal week und jetzt gucken wir mal nach china chinesen repo wieso beileid

02:52:55.760 --> 02:53:05.840
der c ist ok aber c++ ist so der größte abfakt den ich kenne guck hier erstes china chinesen

02:53:05.840 --> 02:53:21.000
ding und es ist in keine ahnung es ist in gar nichts ok

02:53:21.000 --> 02:53:28.280
nächstes python ok alles klar c++ ja ok es sieht jetzt so aus als habe ich miss erzählt

02:53:28.280 --> 02:53:41.600
aber es ist so die chinesen verwenden saumäßig viel java java tatsächlich also diese diese

02:53:41.600 --> 02:54:00.440
woche keine trending china chinesen repos dabei wim trendet da guck an aber wie gesagt

02:54:00.440 --> 02:54:21.560
die chinesen stehen total auf auf java auf java wie es die coolen leute sagen

02:54:21.560 --> 02:54:31.680
auch zu können ist sicherlich nicht verkehrt also das einzige was ich mit c++ mache ist

02:54:31.680 --> 02:54:37.280
es sei denn der chat zwingt mich in irgendeiner art und weise dazu also in letzter zeit haben

02:54:37.280 --> 02:54:44.560
wir c++ web assembly gemacht mit ffm pack das war tatsächlich relativ cool und da hat

02:54:44.560 --> 02:54:51.040
mich c++ auch nicht so stark genervt für microcontroller graben nervt mich c++ immer richtig

02:54:51.040 --> 02:54:58.080
gerade wenn man anfängt modernes c++ machen zu wollen ist einfach nur ätzend an vielen

02:54:58.080 --> 02:55:09.200
stellen nicht dass nicht gute sachen dabei werden aber vieles ist einfach so unglaublich

02:55:09.200 --> 02:55:16.760
umständlich gemacht die ganze daytime ap in c++ also da sind die zeilen sind immer

02:55:16.760 --> 02:55:23.160
300 zeichen lang nach rechts bis du dann irgendwie mal millisekunden zu sekunden umgewandelt

02:55:23.160 --> 02:55:33.240
hast und so was außerdem dauert es wahrscheinlich noch 15 jahre bis alle compiler so neue sachen

02:55:33.240 --> 02:55:40.920
wie die format api können und so was ich glaube es werde ich in nächster zeit nicht

02:55:40.920 --> 02:55:51.560
machen nee nee du kannst du kannst prime suppen wenn du willst oder suppen wenn du willst

02:55:51.560 --> 02:56:08.680
ansonsten kannst du einfach auch nur da sein wie viel ram zieht dein browser ich glaube

02:56:08.680 --> 02:56:37.520
16 gigabyte nee nix alter zieht der nix der zielt insgesamt 1,4 g nix nix ist hier angesagt

02:56:37.520 --> 02:56:49.280
guck mal hier der langweilt sich jetzt hat er sogar noch speicher freigegeben der langweilt

02:56:49.280 --> 02:57:00.120
sich komplett ja das stimmt ok das verstehe ich das leuchtet ein dann dann kann ich nachvollziehen

02:57:00.120 --> 02:57:06.440
in unreal kommste halt nicht drumherum habe ich keine ahnung von ich weiß nur du kannst

02:57:06.440 --> 02:57:12.520
entweder unreal c++ machen oder du brauchst drei monate bis du das gleiche in blueprints

02:57:12.520 --> 02:57:16.640
zusammen geklickt hast was du auch runter programmieren könntest in einem halben tag

02:57:16.640 --> 02:57:34.360
geht er nee nee glaube nicht dass der geht ich habe den ewig nicht verwendet nee nee

02:57:34.360 --> 02:57:46.800
gibt keine spenden ist brauche ich auch nicht so blödsinn das lasst bleiben keck w hd ok

02:57:46.800 --> 02:57:59.200
leute bei einer bank in frankfurt ihr könnt bitts spenden ich weiß nicht wie viel von

02:57:59.200 --> 02:58:19.840
bitts ankommen was ist der share bei bitts

02:58:19.840 --> 02:58:31.400
und sender bitts alles müll ich bin 15 die hohen rakete dankeschön für den sub

02:58:31.400 --> 02:58:56.240
ich bin nicht 15 massive eine milliarde bitts ich bin 38 bin richtig hardcore boomer

02:58:56.240 --> 02:59:01.360
ihr müsst nicht spenden ich habe genug geld bin froh wenn ihr am start seid es reicht

02:59:01.360 --> 02:59:25.720
schon man kann natürlich nie genug haben ich beschwer mich auch nicht achso stimmt überhaupt

02:59:25.720 --> 02:59:31.600
nicht ich bin 37 aber ich jetzt war aber kein schibet nee nee ich hatte noch kein geburtstag

02:59:31.600 --> 02:59:40.960
37 37 37 bin ich noch ja ich mache noch vier tage woche ist das beste was du machen kannst

02:59:40.960 --> 02:59:50.680
das beste was du machen kannst wenn du mit deiner kohle auskommst meistens machen es

02:59:50.680 --> 03:00:00.000
da 20 prozent mehr oder weniger auch nicht fett wenn du mit deiner kohle auskommst dann

03:00:00.000 --> 03:00:07.600
mach vier tage woche oder noch weniger mach so viel dass du gut mit deiner kohle auskommst

03:00:07.600 --> 03:00:13.520
was machst du die restlichen tage naja youtube und stream zum beispiel und sachen die man

03:00:13.520 --> 03:00:23.760
so machen muss aber jene muss man das rückwärts lesen in ja nee dankeschön für den primes

03:00:23.760 --> 03:00:40.200
ab ok also also folgendes ich verpasst nichts jaja reicht überhaupt kein überhaupt kein

03:00:40.200 --> 03:00:48.520
ding ich meine ich verdiene mit twitch und youtube auch noch was also leider nicht so

03:00:48.520 --> 03:00:52.200
modern wie man das jetzt bräuchte weil ich mir damals nicht so viel gedanken darüber

03:00:52.200 --> 03:00:58.640
gemacht habe ich habe zwei klimaanlagen im schlafzimmer und im arbeitszimmer heizungs

03:00:58.640 --> 03:01:06.440
heizung ist ne gasheizung im keller die auch warmwasser macht was ziemlich monak s ist

03:01:06.440 --> 03:01:25.760
aktuell vom preis her aber was willst du machen ja ist so omega 0 gas putin gefällt das bestimmt

03:01:25.760 --> 03:01:55.720
das ist ja quasi so was ja ich hab ich hab heute witziger weise überlegt ob

03:01:55.720 --> 03:02:08.400
das nicht sinnvoll wäre noch im wohnzimmer oben und im schlafzimmer unten eine klimaanlage

03:02:08.400 --> 03:02:12.840
einzubauen beziehungsweise die erweitern zu lassen zu meinem außengerät da müsste halt

03:02:12.840 --> 03:02:20.080
nen rohr hier bei mir durchs arbeitszimmer aber das müsste eigentlich gehen zu irgendwie

03:02:20.080 --> 03:02:28.440
an der wand oder so wie auf talks tut ja gibt aktuell nichts leute wisst ihr was ich gerade

03:02:28.440 --> 03:02:34.520
spiele mega nice game also wahrscheinlich nicht für den mainstream das da habe ich

03:02:34.520 --> 03:02:55.520
jetzt ein paar stunden gespielt gestern richtig nice ich weiß nicht ob das mainstream ist

03:02:55.520 --> 03:03:05.920
keine ahnung ich glaube den meisten leuten jetzt wird das nicht so gut gefallen das ist

03:03:05.920 --> 03:03:23.920
das ist cool echt spielt das jeder ja weil katze wahrscheinlich ja

03:03:23.920 --> 03:03:28.960
es ist aber auch was besonderes also dass es gibt kein anderes spiel dieser art also

03:03:28.960 --> 03:03:37.600
es gibt so adventure games mit so ein bisschen item sammeln und und abliefern also ein bisschen

03:03:37.600 --> 03:03:43.640
rätsel ultra light gibt es ja viele aber dass du halt eine katze bist ist halt das gibt es

03:03:43.640 --> 03:04:07.760
sonst nicht das ist 2014 mal schon ein competitive ups war ein competitive game gezockt ja ich

03:04:07.760 --> 03:04:15.040
bin der krasseste one on one sniper in modern warfare 2 one on one rust aber nur mit quick

03:04:15.040 --> 03:04:19.760
scopes also hardscopes kann ich überhaupt nicht ab hardscopes ist wirklich für die

03:04:19.760 --> 03:04:26.760
richtigen kack noobs quickscope only und aber auch so dass man das scope nicht sieht also

03:04:26.760 --> 03:04:31.960
ihr wisst ja ein richtiger quickscope ist wenn du in das scope gehst hittest bevor du

03:04:31.960 --> 03:04:38.040
das fadenkreuz siehst nur so alle anderen rules sind für noobs dann spiele ich nicht

03:04:38.040 --> 03:04:54.040
gegen euch one on one ansonsten kommt one on one rust easy bis jetzt nicht bis jetzt

03:04:54.040 --> 03:04:58.040
wurde nicht mal beantwortet ob die katze er oder sie ist ist für das spiel auch total

03:04:58.040 --> 03:05:12.240
uninteressant kennt jemand der gos und steckdosen flaschen aus zwecks flaschen was also wir

03:05:12.240 --> 03:05:15.240
haben ja schon gos und steckdosen geflasht aber die aktuellen kann man nicht mehr über

03:05:15.240 --> 03:05:33.040
die flaschen deswegen ist das nicht so tolle richtig eben klar weil den lol die leute so

03:05:33.040 --> 03:05:38.120
nett sind und das überhaupt nicht verschwitzt oder toxic ist das ist ein bisschen wie ach

03:05:38.120 --> 03:05:46.080
ja tatsächlich habe tatsächlich schon competitive spiele gespielt ich habe overwatch gespielt

03:05:46.080 --> 03:05:53.760
sogar esl turniere und wir haben sogar gewonnen teilweise stellt euch das mal vor wir waren

03:05:53.760 --> 03:05:58.800
glaube ich was war der beste weekly unser bester weekly platz war glaube ich vierter

03:05:58.800 --> 03:06:02.960
und deutsches deutsches weekly haben wir sogar ein paar mal gewonnen nicht dass das jetzt

03:06:02.960 --> 03:06:11.360
super krass oder so gewesen wäre aber immerhin ja wir waren gar nicht schlecht am anfangen

03:06:11.360 --> 03:06:30.640
von dem game also einer aus meinem ehemaligen overwatch team ist schweizer und ist tatsächlich

03:06:30.640 --> 03:06:39.600
einer der wenigen schweizer pro gamer die ich kenne geworden und gut der erx hat es

03:06:39.600 --> 03:06:46.800
auch probiert aber ich glaube das ist auch zu alt schau mal guck nicht zu keck weh glaubt

03:06:46.800 --> 03:06:51.480
es ist auch abgehakt und von den anderen weiß ich nicht was da draus geworden ist

03:06:51.480 --> 03:07:05.160
ja ich habe zs go gespielt aber nie somit mit leib und seele und komplett ich meine

03:07:05.160 --> 03:07:11.880
ich habe am ende wie viel ich habe 200 stunden in cs das ist ja nix 200 stunden in cs da

03:07:11.880 --> 03:07:30.440
kecken dich ja alle aus dass 200 stunden in cs ist quasi sowie fünf stunden in kot ja

03:07:30.440 --> 03:08:00.320
ich bin auch weg leute ich gehe jetzt pennen bad good time ja chain law ordentlich gibt

03:08:00.320 --> 03:08:08.320
welche die gehen in die zehntausende mittlerweile schon 2014 waren tausend stunden gut das jetzt

03:08:08.320 --> 03:08:32.200
auch outdated overrated gebetet alles klar leute wir sehen uns bis denn zu

