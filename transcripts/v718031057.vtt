WEBVTT

01:30.000 --> 01:32.000
Das war's für heute.

01:32.000 --> 01:34.000
Vielen Dank für's Zuschauen.

01:34.000 --> 02:02.000
So Leute, ich bin auch mal wieder abgestanden.

02:02.000 --> 02:04.000
So Leute, ich bin auch mal wieder am Start.

02:04.000 --> 02:08.000
Hat jetzt fast ne Woche gedauert, seit ich da war.

02:08.000 --> 02:10.000
Aber ich war ein bisschen beschäftigt.

02:10.000 --> 02:12.000
Außerdem musste ich auf der Arbeit relativ viel machen.

02:12.000 --> 02:14.000
Ich hatte nach der Arbeit echt keinen Bock mehr,

02:14.000 --> 02:16.000
großartige Streaming-Actions zu machen.

02:16.000 --> 02:19.000
Aber jetzt ist der Wochenende und jetzt passt das wieder.

02:19.000 --> 02:21.000
So, mal gucken.

02:21.000 --> 02:23.000
Äh, ohje hier, jetzt gibt's ja schon Abos ohne Ende.

02:23.000 --> 02:25.000
Was ist denn hier los?

02:25.000 --> 02:27.000
Der Versuch ist am Start, 4 Monate.

02:27.000 --> 02:28.000
Exzellent.

02:28.000 --> 02:29.000
Subscription.

02:29.000 --> 02:35.000
Subscriber.

02:35.000 --> 02:38.000
In groß sehend die Bilder so derart schlecht aus.

02:38.000 --> 02:43.000
Ähm.

02:43.000 --> 02:45.000
Haben wir noch?

02:45.000 --> 02:47.000
Neh was, ne Tri peeland auch 9 Monate.

02:47.000 --> 02:48.000
Exzellent, Subscription nicht mehr.

02:48.000 --> 02:53.000
Subscriber.

02:53.000 --> 02:54.000
Das ist ja fast schon.

02:54.000 --> 03:15.200
Du hast dank des Abonnements von Tribulon ein Emote erhalten.

03:15.200 --> 03:16.200
Hä?

03:16.200 --> 03:21.840
Und was mache ich damit jetzt?

03:21.840 --> 03:27.960
Ja, excellent.

03:27.960 --> 03:29.840
Hyper Crown habe ich bekommen.

03:29.840 --> 03:30.840
WTF?

03:30.840 --> 03:33.840
Was soll das sein?

03:33.840 --> 03:34.840
Twitch Bits Belohnung.

03:34.840 --> 03:35.840
Moment.

03:35.840 --> 03:37.840
Ich habe keine Bits gesperrt.

03:37.840 --> 03:38.840
Twitch Logik.

03:38.840 --> 03:40.840
Man weiß es wieder nicht.

03:40.840 --> 03:41.840
Ja.

03:41.840 --> 03:44.000
Der Tazer ist wieder da hier.

03:44.000 --> 03:45.000
Fünf Stück.

03:45.000 --> 03:50.160
Er hat schon insgesamt 129 verschenkt, Alter.

03:50.160 --> 03:53.440
Da platzt, da platzt der Kopf fast schon, ja.

03:53.440 --> 03:54.440
Ähm, wer hatten denn?

03:54.440 --> 03:55.440
Ja, Dankeschön, Tazer.

03:55.440 --> 03:56.440
Im Moment.

03:56.440 --> 03:57.440
Drei Stück, nicht fünf Stück.

03:57.440 --> 03:58.440
Ich habe mich verguckt.

03:58.440 --> 03:59.440
Er schreibt fünf Emotes geteilt.

03:59.440 --> 04:00.440
Alter, Twitch, please.

04:00.440 --> 04:01.440
Come on, brah.

04:01.440 --> 04:02.440
Der Mark Jojo.

04:02.440 --> 04:03.440
Ich habe gerade gesagt, der Mark Yolo hat eins gekriegt.

04:03.440 --> 04:04.440
ChrisW.de.

04:04.440 --> 04:05.440
RagingFox1337.

04:05.440 --> 04:06.440
Jaja.

04:06.440 --> 04:20.680
Lose96 ist auch zehn Monate am Start, ja, das ist ja schon wirklich.

04:20.680 --> 04:21.680
So.

04:21.680 --> 04:22.680
Ähm, also.

04:22.680 --> 04:23.680
Ich wollte euch jetzt mal was zeigen.

04:23.680 --> 04:24.680
Fällt euch hier oben rechts was auf.

04:24.680 --> 04:25.680
Da.

04:25.680 --> 04:26.680
Fällt euch da oben rechts irgendwas auf.

04:26.680 --> 04:27.680
Ihr denkt, das ist ein Bild.

04:27.680 --> 04:37.400
Aber wenn ihr genau hinguckt, werdet ihr feststellen, das ist kein Bild.

04:37.400 --> 04:47.600
Weil wenn ihr ganz genau oben rechts hinguckt, seht ihr die blaue LED blinken.

04:47.600 --> 04:58.440
Haha, ein GIF.

04:58.440 --> 04:59.920
Ja, das kasst ihr mal gleich.

04:59.920 --> 05:00.920
Ja.

05:00.920 --> 05:01.920
Das ist nämlich ein Livestream.

05:01.920 --> 05:02.920
Von.

05:02.920 --> 05:03.920
Ähm.

05:03.920 --> 05:04.920
Vom VLC.

05:04.920 --> 05:12.800
Der wiederum Livestreamt von einer Kamera, die ich hier neben auf den Rechner gestellt

05:12.800 --> 05:13.800
habe.

05:13.800 --> 05:14.800
Mit einem ESP32-Bot.

05:14.800 --> 05:15.800
Vollkorn-Mischbrot.

05:15.800 --> 05:17.800
Exzellent-Subscription.

05:17.800 --> 05:20.800
Geht ja wieder ab 6.

05:20.800 --> 05:21.800
Monat.

05:21.800 --> 05:22.800
Dankeschön.

05:22.800 --> 05:23.800
Ja.

05:23.800 --> 05:30.920
Man sieht hier oben auch, ich hab das ein bisschen gecropped in meinem OBS.

05:30.920 --> 05:31.920
Ups.

05:31.920 --> 05:35.040
Ähm, das ist das 3D-gedruckte Gehäuse, was ich dafür hab.

05:35.040 --> 05:36.040
Oh, Moment.

05:36.040 --> 05:37.040
Kirby.

05:37.040 --> 05:41.320
Kirby, halt mal die Klappe.

05:41.320 --> 05:43.360
Ah, jetzt.

05:43.360 --> 05:45.760
Gleich, gleich viel entspannter.

05:45.760 --> 05:48.200
Man muss es ja nicht übertreiben.

05:48.200 --> 05:49.200
So.

05:49.200 --> 05:50.200
Ähm.

05:50.200 --> 05:51.200
Und man sieht.

05:51.200 --> 05:52.200
Es, es, es funktioniert.

05:52.200 --> 05:53.200
Ich kann euch ja mal kurz, kurz zeigen, dass es, dass es real ist.

05:53.200 --> 05:54.200
Ich halt mal kurz was, ich halt mal kurz was ins Bild.

05:54.200 --> 05:55.200
Jetzt wird sich, wird sich gleich, gleich wird sich hier was tun.

05:55.200 --> 05:56.200
Bloop.

05:56.200 --> 05:57.200
Habt ihr's gesehen?

05:57.200 --> 05:58.200
Live.

05:58.200 --> 06:18.720
Kam-Leak, Finger, Leute, Finger-Leak, IP-Leak, alles Leak, Alter, oh shit hier, Leute, das

06:18.720 --> 06:27.960
ist echt, das ist echt, das ist echt, das ist echt, das ist echt, das ist echt, das

06:27.960 --> 06:30.280
ist echt, Leute, Scheiße, ich hab meine IP geleaked wieder.

06:30.280 --> 06:31.280
Weird-Champ.

06:31.280 --> 06:38.160
Moment, ich sollte die Emotes vielleicht mal ein bisschen verkleinern.

06:38.160 --> 06:46.640
X-Fatal, 14 Monate, ja jetzt geht's aber ab hier.

06:46.640 --> 06:51.120
Dankeschön für den Sub.

06:51.120 --> 06:54.800
Vollkorn-Mischbrot auch 6 Monate, ich glaub, den hatte ich schon, aber ich bin grad, grad

06:54.800 --> 06:55.800
zu viel.

06:55.800 --> 07:03.840
Ja, wunderbar, ich mach mal kurz hier nebenbei den Chat auf, damit ich, falls irgendwelche

07:03.840 --> 07:05.760
Sachen kommen, dann nachher nochmal zurückscrollen kann.

07:05.760 --> 07:17.680
Also, was man hier schön sieht ist, ihr könnt mal ne Runde dedoßen, ja 122.168.1.1.1.0,

07:17.680 --> 07:19.160
kommt hier direkt bei der Polizei raus.

07:19.160 --> 07:29.840
Das war, ne, das war nicht Weird-Champ, das war, wo ist Pains-Champ, wo ist Pains, wo

07:29.840 --> 07:30.840
ist mein Pains-Champ?

07:30.840 --> 07:35.680
Moment, siehst du mal, ich hab jetzt ne Woche nicht gestreamt, schon find ich meine Emotes

07:35.680 --> 07:36.680
nicht mehr.

07:36.680 --> 07:44.160
Ha, Pains-Champ, da, Pains-Champ, exellent, na so muss das sein, ja.

07:44.160 --> 07:47.440
Was macht das blaue Licht, es leuchtet blau, gut erkannt.

07:47.440 --> 07:55.120
Tja, ja und zwar, was ich heute vor hab, ist folgendes, also wir gucken uns jetzt nicht

07:55.120 --> 07:57.840
nur das Board an, wie es da irgendwie blau blinkt oder so, wir probieren das heute mal

07:57.840 --> 08:05.600
ein bisschen aus, weil, das Meme-Board braucht Voice-Commands, das hat, das kann doch Voice-Commands,

08:05.600 --> 08:06.600
guck.

08:06.600 --> 08:16.560
Das kann doch, das kann doch, kann doch Voice-Commands, oder, oder es kann, was er, eine Runde Monke

08:16.560 --> 08:17.560
ist.

08:17.560 --> 08:21.200
Ja, es ist, mein Chancen, oh, wieder am Start, oder das hier, das hier, kann, kanns ja auch,

08:21.200 --> 08:28.600
also kann er Waff, Waff und MP3, ach, dass du dem sagst, was er zeigen soll, ach, du meinst

08:28.600 --> 08:34.080
so ne Alexa Light oder was, oh ja, genau, also heute, heute gibt es huge Hacker-Man-Streams

08:34.080 --> 08:38.400
und zwar, was wir heute machen, ist folgendes, oh Gott, es war es dringend, ich übelst

08:38.400 --> 08:56.080
den Verhals, jetzt kommt mir keiner an mit, ach, so, genau, heute gibt es übelsten Hacker-Man-Streams

08:56.080 --> 09:02.960
und zwar, ich hab mir ne, ich hab mir ne neues Board bestellt, schon vor ner Weile, diesmal

09:02.960 --> 09:10.040
hab ich den Fehler gemacht, tatsächlich nur eins zu bestellen, enemyac130, das war, das

09:10.040 --> 09:16.920
war der beste Ansager, ey, der enemyac130-Typ, der ist immer so richtig, der ist, der Typ

09:16.920 --> 09:25.120
ist immer so richtig eskaliert, wenn du TDM gespielt hast, oder enemyac130above, so immer

09:25.120 --> 09:33.000
kurz vor, total am eskalieren, ja und ich hab sogar, diesmal, diesmal den komischen, ich

09:33.000 --> 09:40.160
hab das bei Amazon bestellt, ja, mein neues Mutterbrett, genau, viel zu teuer, wenn man,

09:40.160 --> 09:47.240
wenn man bei Aliexpress gerade guckt, kostet der Kram im Endeffekt die Hälfte, nein,

09:47.240 --> 09:52.800
Aliexpress darfst nicht, kostet bei Aliexpress kostet der Kram die Hälfte, man muss gucken,

09:52.800 --> 10:02.520
dass man das Richtige findet, was, aus Polen verschicken die hier, was, Moment, what, what,

10:02.520 --> 10:12.120
warum kann man aus Polen nicht nach Deutschland liefern lassen, aber aus China nach Deutschland,

10:12.120 --> 10:20.840
was ist das für ne Logik, ja, viel Spaß, oder besser gesagt, viel Erfolg, der Scamtrain

10:20.840 --> 10:32.400
ist abgeschlossen, 8 Abos, 0 Bits, weird Scamchat, also, aus Polen kannst du hier Deutschland

10:32.400 --> 10:38.800
liefern lassen, aus China, China funktioniert, so, guckt euch mal den Versand an, der Versand

10:38.800 --> 10:48.960
aus China ist halt der Witz, ne, 69, alternativ kann man auch Special Line YW machen, das

10:48.960 --> 10:55.720
ist schneller und noch billiger, und hat sogar Sendeverfolgung oder so, was auch, immer,

10:55.720 --> 11:08.120
keine Ahnung, Aliexpress Logik, da kommt DHL, 60 Cent, 69, 79, 1, 18, DHL, 27, 66, kannst

11:08.120 --> 11:18.320
du erzählen, wie du vom Azubi gegebated wurdest, ach, meinst, Tribulon meinst du das hier,

11:18.320 --> 11:22.320
wir müssen mal gucken, ich hab's extra oben rechts im Bild hingemacht, da ist eigentlich

11:22.320 --> 11:27.880
nix spannendes, deswegen hab ich das mal oben rechts im Bild hingemacht, ähm, du meinst,

11:27.880 --> 11:38.200
ne Moment, hier, das da, wo mich der Azubi gebated hat, ja, da hat mich der Azubi gebated,

11:38.200 --> 11:43.920
ja, allerdings muss man mal sagen, der Azubi hat mich auch nur zum Teil gebated, weil letztendlich

11:43.920 --> 11:47.960
hab ich ja das letzte Wort, ob das jetzt okay war oder nicht, also da kann mich gebaten,

11:47.960 --> 11:51.400
wie er will, und er kann mich auch zurecht gebaten, und im Zweifel kann ich sagen, kann

11:51.400 --> 11:52.400
ich sagen, trotzdem falsch.

11:52.400 --> 12:00.120
Weißt du, das war irgendwie neun und dreiviertel, ich hab gesagt, ey, komm, mach bis elf, was

12:00.120 --> 12:04.320
du willst, und damit hab ich ja eigentlich gemeint bei unserem Azubi, eigentlich wollte

12:04.320 --> 12:09.440
ich ihm ja sagen, du kannst halt irgendwas von den sinnvollen Sachen dir was aussuchen

12:09.440 --> 12:16.400
und machen, ja, ähm, und dann kam, elf Uhr hatten wir Gruppenrunde, danach haben wir

12:16.400 --> 12:22.640
diese Dockerzeugen gemacht, und dann fünf Minuten später AFK, das ist das AFK-Zeichen

12:22.640 --> 12:27.920
im Teams, also sprich, er hat, was du, äh, oder was du willst, wörtlich genommen, er

12:27.920 --> 12:34.560
ist einfach AFK gegangen, hat's gedacht, leck mich, ich hau ab, der Smiley impliziert aber

12:34.560 --> 12:41.080
nichts machen, ne, ja, also da kann man jetzt viel reininterpretieren, da kann man jetzt

12:41.080 --> 12:46.080
viel reininterpretieren, weil der Tag lang ist, ich glaube, er könnte auch seine Antwort

12:46.080 --> 12:49.960
sagen, sei es gleich nah, ich schreib einfach mal, ja, ja, in der Hoffnung, ich hab meine

12:49.960 --> 12:55.520
Ruhe, na, ansonsten ist er aber echt nicht übel, muss sagen, ähm, der fragt teilweise

12:55.520 --> 13:01.760
richtig, richtig, äh, advancede Sachen, unser neuer Azubi, ne, also, der hat zum Beispiel,

13:01.760 --> 13:08.520
wir haben uns ein bisschen Dockerzeug angeguckt, ähm, und da haben wir uns so, die verschiedenen,

13:08.520 --> 13:14.600
die, die, richtig Massive Brain, Alter, da haben wir uns die unterschiedlichen, äh,

13:14.600 --> 13:19.560
Modi so angeguckt, was man so Netzwerk-Config machen kann für Container und allgemein für

13:19.560 --> 13:23.040
VMs und sowas, und da geht's, du hast ja, du hast ja verschiedene Möglichkeiten, wie

13:23.040 --> 13:27.880
du so ne, sag mal mal eine VM, bei Container ist das mehr oder weniger ähnlich, äh, Docs

13:27.880 --> 13:35.760
Fame, Twitch Prime, dankeschön, huge subscription, dankeschön, für den, Moment, wo ist er,

13:35.760 --> 13:36.760
Sub.

13:36.760 --> 13:43.120
Ähm, genau, da gibt's ja verschiedene Varianten, was man machen kann, ähm, du kannst beispielsweise

13:43.120 --> 13:48.640
das ganze, äh, intern lassen und dann musst du halt ne Portweiterleitung machen, äh, du

13:48.640 --> 13:52.720
kannst aber natürlich auch so Sachen machen wie, benutze die gleiche Netzwerkkarte im

13:52.720 --> 13:58.040
Host für, für unterschiedliche VMs mit jeweils eigener IP, und da hat der Azubi gefragt,

13:58.040 --> 14:01.800
hoffentlich ist er nicht im, heimlich im Chat verdreht, kann sein, kann sein, wir haben

14:01.800 --> 14:08.520
hier manchmal einen Heinrich rumlaufen, ja, hm, keine Ahnung, zumindest hat er mich dann

14:08.520 --> 14:13.280
gefragt, und das fand ich wirklich nicht, nicht verkehrt, war echt schon richtig, richtig

14:13.280 --> 14:16.960
gut, also da musst du mal ein bisschen, musst du, musst du, weit denken, um da drauf zu

14:16.960 --> 14:20.600
kommen, da hatten wir es davon, dass du ja auch eine Netzwerkkarte in deinem Host nehmen

14:20.600 --> 14:27.200
kannst und verschiedene, ähm, VMs können sich die Netzwerkkarte teilen, jeweils mit

14:27.200 --> 14:35.600
eigenen IP, und da meinte der so, ja aber heißt das denn nicht, dass, ähm, dann, äh,

14:35.600 --> 14:39.520
entweder VM wäre oder das Betriebssystem die MAC-Adresse faken muss von der, von der

14:39.520 --> 14:44.840
Netzwerkkarte, oder muss ich sagen, auf die Idee musste er erst mal kommen, das ist gar

14:44.840 --> 14:48.360
nicht so doof, und ja, muss er, natürlich muss er die MAC-Adresse faken, weil wie soll

14:48.360 --> 14:52.520
das sonst gehen, mit unterschiedlichen IPs, zugleiche, zugleiche, funktioniert ja sonst

14:52.520 --> 14:56.720
nicht, natürlich muss er die MAC-Adresse faken, und dass er da drauf gekommen ist, das fand

14:56.720 --> 15:04.360
ich wirklich, äh, exzellent, ja, also da sieht man schon ganz, ganz so, äh, low brain

15:04.360 --> 15:08.400
ist er nicht, also da ist schon, das ist nicht übel gewesen, und er fragt auch ein paar

15:08.400 --> 15:12.720
andere Sachen, die sind, die sind ganz, äh, ganz clever, allerdings allgemein muss man

15:12.720 --> 15:16.800
sagen, ich hab den ein bisschen, ein bisschen geil findet er sich, aber, ähm, wenigstens

15:16.800 --> 15:22.680
hat er Ahnung, nicht so wie unser anderen, den, den wir mal hatten, der, ähm, hab ich

15:22.680 --> 15:28.600
das, hab ich das eigentlich schon mal erzählt, ähm, wir hatten mal einen Azubi, der, ähm,

15:28.600 --> 15:31.720
aber da kann ich jetzt weder, weder, noch nicht mal Vorname sagen, weil sonst ist das

15:31.720 --> 15:37.280
zu offensichtlich, wir hatten mal einen Azubi, der, ähm, hat sich auch für, für ultra

15:37.280 --> 15:42.400
big brain gehalten, also da reicht das hier nicht, der war, der dachte von, ups, Moment,

15:42.400 --> 15:47.480
der dachte von sich selbst, der ist ungefähr so brain hier, also min, mindestens, mindestens

15:47.480 --> 15:54.640
so, hat er gedacht, ja, also, wenn nicht sogar so oder, oder irgendwie so, ja, also der war,

15:54.640 --> 16:01.960
der war wirklich vor, vor, äh, vor haus het oder was auch immer, zumindest, zumindest,

16:01.960 --> 16:06.720
ähm, hat er sich dann irgendwann überlegt, ok, so als Azubi hat man ja nicht allzu viel

16:06.720 --> 16:12.840
Geld, was könnte man dann machen, sag mal ist die Musik auch ein bisschen laut bei euch,

16:12.840 --> 16:18.320
aber eigentlich, eigentlich passt die Musik ganz gut, aber ich find's ein bisschen, hör

16:18.320 --> 16:25.920
mal einen Ticken leiser, so, ähm, so, genau, wo bin ich jetzt stehen geblieben, ja, und

16:25.920 --> 16:31.040
der, der dachte halt, der ist, der ist wirklich massive, äh, massive big brain und hat sich

16:31.040 --> 16:36.040
überlegt so, ok, bei, also als Azubi verdient man ja wenig Geld und irgendwie haben wir

16:36.040 --> 16:41.480
eh nicht so viel zu tun und dann hat der auf einer, auf einer ausgemusterten Hardware bei

16:41.480 --> 16:47.000
uns im Rechenzentrum, die er eigentlich hatte, für so ein Azubi Übungs, äh, ESX Cluster,

16:47.000 --> 16:51.640
also sprich, der hat, der hat von sich aus gesagt, er kümmert sich um so ein Azubi ESX

16:51.640 --> 16:56.600
Cluster zum Üben, für andere Azubis, wo die, wo die, äh, quasi Übungs-Vorhems drauf

16:56.600 --> 17:02.640
machen können, also ja, hier so ein, so ein Virtualisierungs-, so ein, so ein Virtualisierungs-Kram

17:02.640 --> 17:09.000
im Endeffekt und irgendwann ist dann rausgekommen, aber das ist, glaub ich, nie so an die große,

17:09.000 --> 17:13.320
an die große Glocke gehängt worden, irgendwann ist rausgekommen, der Typ hat einen Filesharing-Service

17:13.320 --> 17:28.840
betrieben. Der Typ hat einen Filesharing-Service betrieben und der war so low-brain, wie gesagt,

17:28.840 --> 17:34.640
der hat ja, der hat sich viel, viel zu, viel zu big-brain gehalten, der Typ hat, der hat

17:34.640 --> 17:39.480
sogar Werbung dafür gemacht, der hatte sogar eine Webseite, dass man bei ihm kostenlos

17:39.480 --> 17:44.880
Videos gucken kann und sowas, das war, das war schon nicht mal Grauzone, das war schon

17:44.880 --> 17:51.200
hardcore illegal, was er getrieben hat, ja, es hat nie eine, also, es hat nie auf der Arbeit

17:51.200 --> 17:55.080
jemand an etwas höherer Position als sein jeweiliger Teamleiter mitgekriegt, der hat

17:55.080 --> 18:01.560
gesagt, mal raus, ähm, und, ähm, er selbst, die Polizei hat es wohl auch nicht mitgekriegt,

18:01.560 --> 18:10.600
aber, richtig low-brain, Alter, das war auf dem ESX in der Firma gehostet, ja, auf dem

18:10.600 --> 18:27.160
Azubi ESX, also der wollte es echt, Kim.com als Azubi, das ist doch nicht so lange her,

18:27.160 --> 18:33.520
aber, der war, der war wirklich, der war next-level, man kann, man kann es auf beide Arten sehen,

18:33.520 --> 18:38.800
da war entweder next-level big-brain oder schon sowas von low-brain, das ist nicht,

18:38.800 --> 18:48.560
ich weiß auch nicht, ja, keine Ahnung, was bei dem los war, ja, und zumindest, der hat

18:48.560 --> 18:55.520
auch gedacht, der wäre es halt voll und, außer diese Sachen hat er eigentlich nichts

18:55.520 --> 18:59.240
auf die Reihe gekriegt, und unser jetziger, der stellt, also der fragt die richtigen Sachen

18:59.240 --> 19:02.640
und hat auch schon, der fragt eigentlich recht clevere Sachen, also da kann ich mich, kann

19:02.640 --> 19:05.440
ich mich nicht beschweren, wo wir übrigens gerade bei Azubis sind, ich hab noch, noch

19:05.440 --> 19:11.240
eine Geschichte, die ich euch erzählen kann, und zwar, ähm, kannst du empfehlen, was man

19:11.240 --> 19:17.560
tun kann, um sich auf Physi-Ausbildung vorzubereuen, ja, also was du tun kannst, als vor der Ausbildung

19:17.560 --> 19:21.960
eigentlich nicht, sondern nicht viel, du solltest Interesse für, für solche Themen haben,

19:21.960 --> 19:25.520
das ist das, das ist das wichtigste, also solltest dich vielleicht ein bisschen fürs Programmieren

19:25.520 --> 19:29.360
interessieren, vielleicht ein bisschen für Hardware, Computergedöns allgemein, für Technik

19:29.360 --> 19:34.400
halt einfach, dass man da so ein bisschen scharf drauf ist, Neues zu lernen, ja, das

19:34.400 --> 19:38.440
ist aber großartig, man, also was ich jedem empfehlen kann, ob Physi oder, oder nicht

19:38.440 --> 19:41.520
oder vor der Ausbildung, sich ein bisschen so Grundlagen programmieren, beschäftigen

19:41.520 --> 19:47.920
ist nicht verkehrt, das bringt einem überall was, genau, also eine andere Sache, ähm, Tro

19:47.920 --> 19:51.920
M sagt, hab gerade vier Azubis in meinem Team, da fühlt sich der Tag so an wie eine

19:51.920 --> 19:55.760
Lehrstunde in der Uni, ja man muss auch so viel labern, das geht, das geht, das, gut,

19:55.760 --> 19:58.800
ich bin es ja mittlerweile hier vom Stream gewöhnt, wenn ich nicht ne Woche, ne Woche

19:58.800 --> 20:04.680
weg bin, aber ansonsten schon, ähm, hab probiert auf dem Raspberry Pi ein Web-Server, bin abgekackt

20:04.680 --> 20:08.640
ab Engine X, ja, Engine X ist auch nicht, also sag mal so, Apache ist das komplizierteste,

20:08.640 --> 20:14.000
was die Konflikt angeht, Engine X ist dahinter, nicht ganz so kompliziert, aber der beste

20:14.000 --> 20:20.320
Web-Server, einfach nur, wenn man, einfach nur ein Web-Server braucht, ohne irgendwas,

20:20.320 --> 20:27.080
den hier, das ist easy as fuck, bist du der einzige Ausbilder, äh, ich bin ja noch nicht

20:27.080 --> 20:33.160
mal Ausbilder, also ich darf das ja eigentlich gar nicht, dafür mach, ich weiß dafür mach

20:33.160 --> 20:41.480
ich das jahrelang schon, aber wir haben einen, der darf, ja, ähm, ne bin ich nicht, nächste

20:41.480 --> 20:45.160
Woche ist er, nächste Woche ist er auch woanders und wir sind eh ne überall, überall woanders,

20:45.160 --> 20:48.440
zumindest eine Sache, die ich euch noch erzählen wollte von dem anderen Azubi, wir hatten

20:48.440 --> 20:52.600
mal so den, so richtig den Massive, Massive Brain Azubi, also der hatte, der hatte gar

20:52.600 --> 20:56.880
keine Ahnung, der ist jetzt übrigens, äh, Junior-Consultant bei irgendeinem Consulting,

20:56.880 --> 21:00.880
äh, bei irgendeinem Consulting Laden und ich frag mich ernsthaft, Consultant ist ja

21:00.880 --> 21:05.680
jemand vom Namen her, den frage ich zu Dingen, wo ich selbst nicht weiterkomme, beziehungsweise

21:05.680 --> 21:10.480
wo ich halt, wo ich halt fachmännische Hilfe brauche und der Typ hat absolut keinen Plan

21:10.480 --> 21:14.480
gehabt und jetzt ist er Consultant, also das bestärkt mal wieder so meine Meinung, was

21:14.480 --> 21:24.560
das Thema, was, ne, dieses Consulting-Thema angeht, zumindest, ähm, der, das ging bei

21:24.560 --> 21:30.280
dem auf die Abschlussprüfung zu und der hatte selbst von kundlegendsten Sachen im Netzwerk

21:30.280 --> 21:34.960
keinen Plan, da hab ich gesagt, ok, weißt du was, setz dich mal ne Woche zu mir, wir

21:34.960 --> 21:37.560
gucken uns immer mal wieder zwischendurch was an, das ist jetzt auch schon wieder, keine

21:37.560 --> 21:44.320
Ahnung, vier Jahre her oder so und da haben wir uns jetzt ne Woche angeguckt, zu wirklich

21:44.320 --> 21:48.000
im Detail und auch jetzt nix großartiges kompliziertes, wir haben uns angeschaut, wie kommt ein Rechner

21:48.000 --> 21:55.120
von A nach B, wie weiß ein Rechner, beispielsweise überhaupt, im gleichen Netz, wie er was

21:55.120 --> 22:04.080
an andere Rechner schicken kann, Chat, Frage an euch, machen wir mal den Chat IQ Test,

22:04.080 --> 22:09.600
woher weiß Rechner A, wie er was an Rechner B schicken kann, wenn sie im gleichen Netz

22:09.600 --> 22:17.760
sind, wie funktioniert das, also sprich, ich mach ping IP Adresse von Rechner A von Rechner

22:17.760 --> 22:24.360
B aus, wie weiß mein Rechner, wie der zum Ziel kommt, also sprich, wie er den anderen

22:24.360 --> 22:29.200
erreichen kann, wohlgemerkt im gleichen Netz, also sprich, Router, Gedöns, sprich, ist

22:29.200 --> 22:35.000
alles egal, IPs sind auch statisch vergeben, also nix mit DHCP, das zwei Rechner, statische

22:35.000 --> 22:47.440
IP von A nach B. Über MAC Adresse, ja, das ist schonmal richtig, aber der Chat, der Chat

22:47.440 --> 22:51.760
ist natürlich, wäre nicht mein Chat, wenn er nicht hier Massive Brain wäre, das ist

22:51.760 --> 23:01.320
ja schon hier quasi, der Chat hat es schon richtig erkannt, Arp, korrekt, nicht Routinkabelle,

23:01.320 --> 23:08.080
also jeder der gesagt hat, Arp ist korrekt, alle anderen sind nicht korrekt, aber das

23:08.080 --> 23:16.760
war ja schon, so, das funktioniert ja folgendermaßen, bevor dein Rechner was zu einem anderen Rechner

23:16.760 --> 23:23.040
schicken kann im gleichen Netzwerk oder überhaupt zu irgendwas im gleichen Netzwerk, muss der

23:23.040 --> 23:26.800
die MAC Adresse in irgendeiner Art und Weise bekommen, weil die Zustellung erfolgt auf

23:26.800 --> 23:32.480
Layer 2 und das ist nunmal MAC Adresse basiert, das heißt, was der macht ist, ein Request

23:32.480 --> 23:41.520
ins Netzwerk, war ganz vereinfacht gesagt, ich such die MAC Adresse zu dieser IP Adresse

23:41.520 --> 23:47.280
und dann antwortet derjenige, der Rechner, gibt es übrigens auch interessante Angriffsszenarien,

23:47.280 --> 23:52.960
wenn man darauf antwortet und nicht die MAC Adresse, da gibt es verschiedene Szenarien,

23:52.960 --> 23:58.520
aber ganz einfach gesagt, der eine Rechner fragt ins Netzwerk rein, quasi wer hat die

23:58.520 --> 24:03.400
MAC zugehörig zu dieser IP und der Rechner, der die halt antwortet, gut ist, dann habe

24:03.400 --> 24:08.880
ich die MAC Adresse und kann das ganze adressieren, so, und so Sachen, so Sachen haben wir durchgekaut

24:08.880 --> 24:14.800
ne Woche lang mit dem Azubi vor ein paar Jahren und der hat ja auch den Eindruck gemacht,

24:14.800 --> 24:20.840
dass er das kapiert hat und wenn man ihn gefragt hat, dann hat er auch die Sachen halbwegs

24:20.840 --> 24:25.160
sinnvoll beantworten können, allerdings muss man sagen, der Kerl hatte ein wahnsinniges

24:25.160 --> 24:28.800
Talent und deswegen ist er glaube ich als Konsultant gar nicht schlecht, da hat er ein

24:28.800 --> 24:34.160
wahnsinniges Talent, fließend den Übergang zu schaffen von er kennt sich aus zu er kennt

24:34.160 --> 24:42.560
sich nicht aus, also sprich, wenn der, ja Edelknecht, irgendwann vergisst man das aber

24:42.560 --> 24:49.320
Azubi sollte man das schon wissen, also sprich, wenn der was erzählt hat von irgendeinem Thema,

24:49.320 --> 24:52.760
dann hat er erzählt und erzählt und erzählt, hat er Ahnung und irgendwann kam der Punkt

24:52.760 --> 24:55.760
wo er keine Ahnung mehr hatte und hat einfach weiter erzählt und erzählt und erzählt und

24:55.760 --> 24:59.360
du hast diesen Übergang nicht gemerkt, bei den meisten Leuten merkst du den Übergang

24:59.360 --> 25:04.600
von ich hab Ahnung und jetzt kommt das wo ich mir on the fly was ausdenke, aber der

25:04.600 --> 25:13.040
hatte huge randomness Prozessor im Kopf, der konnte sich quasi on the fly neue Sachen

25:13.040 --> 25:18.400
ausdenken ohne dass das aufgefallen ist und der hat teilweise einen übelsten Stuss von

25:18.400 --> 25:22.400
sich gegeben und das hat sich so angehört als weißer wovon er spricht, also eigentlich

25:22.400 --> 25:27.000
der geborene Konsultant wenn man so will, das Problem ist nur wenn du das jemand erzählst

25:27.000 --> 25:32.800
der sich mit der Sache zumindest schon mal am Rande beschäftigt hat, weil dann wirst

25:32.800 --> 25:38.080
du direkt feststellen es ist Blödsinn, zumindest wir haben uns das eine Woche angeguckt, der

25:38.080 --> 25:44.920
könnte wirklich richtig stonk sein der Typ, der könnte extrem stonk sein, so gleich fangen

25:44.920 --> 25:48.760
wir an zu basteln mit dem ESP hier oben da blinkt er immer noch blau vor sich hin, aber

25:48.760 --> 25:54.320
zumindest um die Sache abzuschließen wir haben uns das eine Woche angeguckt und am Freitag

25:54.320 --> 25:58.800
also Ende der Woche habe ich gesagt okay wir machen das jetzt mal so, ich hab jetzt die

25:58.800 --> 26:03.960
Woche viel erzählt, ich frag dich jetzt ein paar Sachen und du erklärst mir das einfach

26:03.960 --> 26:11.760
und dann hab ich ja unter anderem auch gefragt wie ist das wenn Rechner A zu Rechner B will,

26:11.760 --> 26:15.200
dann hatten wir das glaube ich auch von statischen Routingtabellen und sonst was und hat auch

26:15.200 --> 26:22.560
ein bisschen was an die Tafel gemalt und irgendwann wo es ums Thema A-Prequest ging, hat er wusst

26:22.560 --> 26:27.360
das nicht mehr, hat er es vergessen, ist ja im Prinzip auch nicht schlimm, da hab ich

26:27.360 --> 26:32.480
halt zu ihm gemeint okay wir gehen mal von aus jetzt ist irgendwie Prüfung oder schriftliche

26:32.480 --> 26:40.040
mündliche was auch immer, irgendwas musst du denen jetzt ja hinwerfen was Halbweg Sinn

26:40.040 --> 26:48.040
ergibt und das hat ihn so fertig gemacht, dass ich ihn gefragt habe, dass ich so hartnäckig

26:48.040 --> 26:52.000
gewesen bin, dass ich gesagt hab er muss da jetzt was drauf antworten, da meinte er dann

26:52.000 --> 26:57.520
zu mir irgendwie so ha Max ist doch jetzt egal, da hab ich halt zu ihm gemeint so nee

26:57.520 --> 27:00.840
das ist nicht egal, wir haben uns das jetzt eine Woche lang angeguckt, da kannste sich

27:00.840 --> 27:03.440
jetzt nicht hinstellen und sagen das was wir eine Woche lang gemacht haben wäre jetzt

27:03.440 --> 27:09.680
egal, dann können wir es uns ja auch gleich und der Typ der hat instan den halben Nervenzusammenbruch

27:09.680 --> 27:19.400
gekriegt, ich wollte, ich also meinem Eindruck nach hab ich den nicht irgendwie übermäßig

27:19.400 --> 27:26.400
da angegangen, ich hab einfach nur gesagt es ist jetzt nicht egal, weil ich mein was

27:26.400 --> 27:30.440
ist das für eine Antwort, es hat sich jemand mit dir eine Woche hingesetzt und was gelernt

27:30.440 --> 27:37.000
und du sagst ihm am Freitag wenn er dich was dazu fragt ist doch egal, ich sag nein ist

27:37.000 --> 27:44.240
nicht egal, der war fertig, der hat angefangen zu flennen, der war komplett neben der Spur

27:44.240 --> 27:48.760
und ich wusste gar nicht was ich machen soll, ich wusste ernsthaft, ich hab damit nicht

27:48.760 --> 27:53.680
gerechnet, ich wusste nicht was ich machen soll, ich hab da natürlich nicht weiter gemacht,

27:53.680 --> 27:58.560
ich hab gesagt ey ist okay, ist gut, ähm, äh beschäftig dich mal ein bisschen, geh

27:58.560 --> 28:04.000
rauf beschäftig dich mal ein bisschen was anderes, so also im Prinzip, ja der hat übelst

28:04.000 --> 28:11.480
angefangen zu heulen, der war fertig mit den Nerven alter, ich echt keine Ahnung, also

28:11.480 --> 28:17.400
ich bin mir da keiner Schuld bewusst, dass ich den irgendwie übermäßig da hätte,

28:17.400 --> 28:21.480
ich hab ihn einfach nur gefragt was zu einem Thema wozu er was wissen sollte ja, zumindest

28:21.480 --> 28:26.640
der war komplett fertig und ich mein ich kanns in gewisser Weise nachvollziehen, es ist

28:26.640 --> 28:32.520
schon belastend, wenn man quasi offensichtlich keine Ahnung hat und jemand anderes ist hartnäckig

28:32.520 --> 28:37.080
und besteht darauf, dass man sich jetzt quasi outet, dass man keine Ahnung hat, das ist

28:37.080 --> 28:42.360
doof, die einfachste Variante dagegen fortzubeugen ist zumindest ein bisschen Ahnung zu haben

28:42.360 --> 28:49.520
oder insofern eine Ahnung zu haben, dass man was erzählen kann was damit was zu tun hat

28:49.520 --> 28:55.640
oder aber man ist schon ne Weile dabei und hat sich irgendwelche Standardantworten zurechtgelegt

28:55.640 --> 29:03.000
so nach dem Motto, das muss dann im Nachgang geklärt werden oder auch eines der besten

29:03.000 --> 29:09.720
Sprüche die ich letztens von irgendeinem BWL Mensch gelernt habe, der hat, ich weiß

29:09.720 --> 29:14.600
gar nicht was war, der hat am Anfang von seiner, von der ganzen Geschichte hat er erzählt

29:14.600 --> 29:20.960
wir machen das und das, so und dann ist ihm am Ende aufgefallen er hat das nicht gemacht

29:20.960 --> 29:28.280
und die Ausrede von hier vom Stonksmann war, ja dieses Thema verorten wir jetzt woanders

29:28.280 --> 29:36.480
beste Antwort, dieses Thema verorten wir jetzt woanders, das ist so ein absolut Bullshit

29:36.480 --> 29:44.600
Nichtsagesatz, also chat ich gifte jetzt gleich 5 Saps, so dann gifte ich keines Saps und

29:44.600 --> 29:50.920
dann sag ich dann um mich rauszureden, also das Sap giften verorten wir jetzt woanders

29:50.920 --> 30:01.480
das ergibt überhaupt keinen Sinn, gut aber wenn du schon diese Weile hast, da hast du

30:01.480 --> 30:09.560
so ein paar Sprüche schon dran und was mich ja persönlich immer wundert, was so gut klappt,

30:09.560 --> 30:16.280
was eigentlich glaube ich jeder schon durchschaut hat ist, was ist eure Standardantwort, wenn

30:16.280 --> 30:20.080
euch irgend einer was fragt, wenn ihr nicht gerade euer Chef ist, wenn euch irgend einer

30:20.080 --> 30:25.360
was fragt, wie siehts denn damit aus, was macht ihr denn da gerade oder wie siehts denn

30:25.360 --> 30:30.120
damit aus, wie sieht da eure Standardantwort aus, also meine Standardantwort ist, also

30:30.120 --> 30:34.520
ja klar es kommt drauf an was es ist, aber wenn es was normales ist, was man vielleicht

30:34.520 --> 30:38.640
vergessen hat zu machen, also sprich in dem Moment wo der einen fragt erinnert man sich

30:38.640 --> 30:47.360
wieder dran, oh fuck das wollte ich ja vor 2 Wochen schon machen und so und ich sag dann

30:47.360 --> 30:53.160
immer, oh ja da sind wir dran, da sind wir dran, in Arbeit oder sowas, da sind wir gerade

30:53.160 --> 30:58.480
dran, da sind wir gerade dran, das ist ich glaube gerade in der IT so ein Satz den hörst

30:58.480 --> 31:02.960
du bei 90% der Themen kommt als Antwort, du fragst irgend was und wie siehts denn damit

31:02.960 --> 31:06.920
aus, da sind wir dran, wie siehts denn damit aus, da sind wir gerade dabei, hier sind wir

31:06.920 --> 31:13.440
auch dran, das eigentlich kauft das, es ist erstaunlich wie viele einem das abkaufen,

31:13.440 --> 31:19.440
in Wirklichkeit bedeutet 90% da sind wir dran, also klar es kann entweder wirklich ein längerwieriges

31:19.440 --> 31:26.440
Thema sein, aber meistens bedeutet das, scheiße ich hab's vergessen, ja wo bleiben die 5,

31:26.440 --> 31:35.840
wie gesagt das verorten wir jetzt woanders, ok genug geschwätzt, ich bin jetzt schon

31:35.840 --> 31:41.400
wieder eine halbe Stunde on, schönes Intro, aber jetzt können wir mal ein bisschen was

31:41.400 --> 31:46.920
sinnvolles machen, was sollen dir die Leute denn sagen, keiner wird sagen mach ich jetzt

31:46.920 --> 31:51.720
sofort, ganz ehrlich ich find's gut wenn die Leute sagen, oh hab ich vergessen, mach ich

31:51.720 --> 31:55.880
später, da weißt du wenigstens ok, der labert kein Scheiß, da hat er nicht zwei Wochen

31:55.880 --> 31:59.320
für gebraucht, der hat nicht dran gedacht, aber je nachdem wer dich das fragt ist klar

31:59.320 --> 32:17.440
dass du das nicht sagen kannst, so hab ich irgendwas im Chat überlesen, die notwendigen

32:17.440 --> 32:38.560
Unterlagen liegen wir im Moment nicht, das ist auch gut, das ist auch nicht schlecht,

32:38.560 --> 32:45.960
diesen Skill hab ich bei vielen Consulten schon festgestellt, leider ist das Problem

32:45.960 --> 32:50.800
dabei ist bei mir immer, wenn es ein Thema ist wo ich mich mit auskenn, dann merkst du

32:50.800 --> 32:55.600
natürlich wenn einer Mist erzählt, und vielleicht kommt daher auch meine Annahme, dass die meisten

32:55.600 --> 33:06.600
Consultants absolut keinen Plan haben, vielleicht wirkt das aber einfach nur so, ok ich glaub

33:06.600 --> 33:11.680
ich hab nix im Chat übersehen, jetzt können wir so langsam aber sicher anfangen, hast

33:11.680 --> 33:18.280
du mal einen Access Point, via einem Laptop Computer-Gauss mit dem neuen Wi-Fi 6 ist das

33:18.280 --> 33:32.120
echt ein PIA, was ist denn ein PIA, ist PIA sowas wie, oder was ist PIA, was hast du

33:32.120 --> 33:40.160
vor mit dem ESP32 zu machen, eh gucken wie man das Farbdisplay, pain in the ass, ah Chat,

33:40.160 --> 33:46.120
ok also es ist das Gegenteil von, ehm also was wir heute vorhaben, bevor ich noch die

33:46.120 --> 33:50.280
anderen Sachen im Chat erzähle, also was wir heute vorhaben ist folgendes, ich mach die

33:50.280 --> 33:55.160
nachher übrigens mal in das 3D Drucker Case rein, weil ich find das Case ist richtig gut

33:55.160 --> 34:00.480
geworden, also folgendes was wir heute mal machen, eh das Ding hat ein Farbdisplay, und

34:00.480 --> 34:03.760
wir probieren erstmal ein bisschen das Farbdisplay, mal gucken wie man das steuern kann, ich hab

34:03.760 --> 34:08.040
im Vorfeld schon mal geguckt, also ich bin jetzt nicht komplett ahnungslos, ihr wisst

34:08.040 --> 34:15.000
ja, ich gebate euch manchmal ein bisschen, ich tu manchmal so im Stream, liegt Leute,

34:15.000 --> 34:20.240
liegt, ehm ich tu ja manchmal im Stream so, als hätte ich keine Ahnung von dem Thema,

34:20.240 --> 34:24.160
dabei hab ich mir das im Vorfeld schon angeguckt, und ja ich hab's mir im Vorfeld auch schon

34:24.160 --> 34:27.760
ein bisschen anguckt, weil ich will's nicht komplett planos machen, aber nicht extrem

34:27.760 --> 34:31.960
viel, ja also ich weiß beispielsweise welches Library wir verwenden und wie das grob funktioniert,

34:31.960 --> 34:39.560
aber ehm so, genau, und was wir probieren ist folgendes zu machen, ehm ich hab nämlich

34:39.560 --> 34:45.320
die Hoffnung, dass ich dieses Board, weil das ein Farbdisplay hat, für mehrere Projekte

34:45.320 --> 34:51.640
verwenden kann, also so nach dem Motto fast schon Default, weil so ein Display ist für

34:51.640 --> 34:58.680
jegliche Sachen eigentlich gut, ehm das bricht ja voll mit dem Motiv des Kanals, warum das

34:58.680 --> 35:04.720
denn, das ist nicht das Konzept, dass ich planos bin, das Konzept ist, dass der Chat

35:04.720 --> 35:12.840
und ich Big Brain sind, also hauptsächlich der Chat, weil wo, na, Sub-IQ, sag ich doch

35:12.840 --> 35:19.960
immer, ehm zumindest, ich hab zwei, so zwei Default Boards, ich hab einmal den Tiny, Tiny

35:19.960 --> 35:27.160
Pico, das ist so ein ganz kleines, ehm, ESP32 Board, das ist für Sachen wo man definitiv

35:27.160 --> 35:31.440
kein Display braucht und einfach möglichst kleine haben will, wie gesagt bei mir in der

35:31.440 --> 35:35.120
Klingel und so war es so ein ganz kleines Footstink, aber für alles, was man, wo man

35:35.120 --> 35:38.960
das Gerät wirklich benutzt, finde ich das als Default Board mit dem Display eigentlich

35:38.960 --> 35:45.920
ziemlich gut, man hat, ehm, mehrere Crown Anschlüsse, zweimal 3,3 Volt, einmal 5 Volt,

35:45.920 --> 35:55.680
was schonmal sehr praktisch ist für viele Sensoren, am Ende ist das Spiel gecrashed

35:55.680 --> 36:02.120
wegen Anti-Cheat, Moment, was war das nochmal, welches Spiel ist gecrashed wegen Anti-Cheat,

36:02.120 --> 36:09.360
ach Modern Warfare, ja, was haben wir nochmal programmiert, ehm, genau, wir hatten was

36:09.360 --> 36:13.400
programmiert, was die Sound-Lautstärke von Modern Warfare anpasst und da ist der Anti-Cheat

36:13.400 --> 36:19.400
angesprungen, richtig, ehm, zum Beispiel, man kann da alles mögliche mitmachen, also

36:19.400 --> 36:25.560
je nachdem was das Ding macht, von Temperaturanzeige bis, was weiß ich, Temperatur, Luftfeuchtigkeit,

36:25.560 --> 36:31.360
welche Daten, die empfangen wurden, verfügbare, was weiß ich, Netzwerke, falls man irgendeinen

36:31.360 --> 36:37.920
Scanner draus machen will, ehm, wie viele Blumen gegossen werden müssen, wenn man Bodenfeuchtigkeitssensoren

36:37.920 --> 36:45.120
hat oder sowas, also eigentlich alles möglich, so ein Display ist immer praktisch, so, ehm,

36:45.120 --> 36:48.040
und also was wir heute probieren, ich wollte erst mal gucken, dass wir über das Display

36:48.040 --> 36:53.480
halbwegs angesprochen kriegen, dann ein bisschen, und das wird wieder Pains-Champ, weil das

36:53.480 --> 37:04.400
ist C++, ehm, und ein bisschen gucken, dass man das, ehm, also C++ wird wieder ganz grausam,

37:04.400 --> 37:12.600
dass das ein bisschen schön, ehm, also Multicore, Multithreaded ist, das Ding hat ja zwei CPUs,

37:12.600 --> 37:19.000
ja, Tiny Pico Deck, der ist einfach nur klein, der ist einfach nur klein und, ne, der kann

37:19.000 --> 37:27.000
schon ein bisschen mehr, also was an dem ganz gut ist, was an dem, was an dem ganz gut ist,

37:27.000 --> 37:30.320
der kostet 20 Dollar oder so in dem Dreh, das ist wirklich, ist wirklich relativ teuer,

37:30.320 --> 37:36.560
ehm, was an dem ganz gut ist, erstens, der ist klein, ehm, zweitens, was sonst wenige

37:36.560 --> 37:41.760
Boards haben, der hat einen sehr geringen, ehm, Idle Stromverbrauch, also, ehm, Deep

37:41.760 --> 37:46.560
Sleep Stromverbrauch, also der ist nicht nur, nicht nur klein, der ist auch super geeignet

37:46.560 --> 37:52.400
für Anwendungen mit Batterie und Akku, hier steht ja, was sie alles für tolle Vorteile

37:52.400 --> 37:57.480
haben, genau, zwar ein Dual-Core, das haben sie alle, ehm, WLAN, Bluetooth, das haben

37:57.480 --> 38:02.680
sie auch alle, es hat eine RGB-LED für Status-Anzeige dabei, das ist eigentlich ganz cool, ehm,

38:02.680 --> 38:09.720
es hat onboard eine Steuerung für Akkus und hat einen sehr niedrigen Deep Sleep, ehm,

38:09.720 --> 38:13.560
Low Power Usage steht hier, ehm, optimiert für Deep Sleep, also sprich, der ist fix

38:13.560 --> 38:18.080
und fertig, benutzbar für Batterie und ist auch, was den Stromverbrauch angeht, sehr

38:18.080 --> 38:25.520
praktisch für Low, guck mal, 20 µA, ehm, unter 20 µA Deep Sleep, das ist wirklich,

38:25.520 --> 38:33.400
wirklich gering, wenn man da einen 1200 mAh Akku nimmt und das Ding nur, keine Ahnung,

38:33.400 --> 38:38.160
vier, fünfmal am Tag auflassen lässt, dann hält das zwei Jahre mit dem Akku, das ist,

38:38.160 --> 38:44.560
das ist wirklich cool, das Teil, ja, aber für alles, was, ehm, eben am Kabel ist, USB

38:44.560 --> 38:50.240
und, ehm, sonst wie, dann, ehm, guck ich, dass ich in Zukunft defaultmäßig das nehme,

38:50.240 --> 38:54.760
weil, ehm, könntest du machen, ja, ja, ich glaub, die Baupläne für den Tiny Pico gibt's

38:54.760 --> 39:02.240
sogar, kannst du, kannst du dir selbst PCP, ehm, vor's Schiener drucken lassen, ehm,

39:02.240 --> 39:07.760
könnte man da theoretisch einen Barebone Linux drauf zum Laufen zu bekommen mit 4 MB Speicher,

39:07.760 --> 39:17.840
also ich sag mal, theoretisch unmöglich ist nix, allerdings glaube ich nicht, dass das

39:17.840 --> 39:26.080
für die Architektur so ohne weiteres möglich ist, aber ehrlich gesagt, also unmöglich

39:26.080 --> 39:32.400
ist nix, ja, aber recht unwahrscheinlich, das Ding ist auch sehr, na, Windows 10 auf gar

39:32.400 --> 39:35.560
keinen Fall, Leute, Windows 10 auf gar keinen Fall, das Ding ist sehr beschränkend, ich

39:35.560 --> 39:47.320
mein, es hat 4 MB Flash und was, 60 KB RAM, STM32, ehm, ja, unter einem Microampere haben

39:47.320 --> 39:51.800
die Dinger auch nur, wenn die das ordentlich gemacht haben, dass USB und alles abgeschaltet

39:51.800 --> 39:57.000
wird, beim STM32 weiß ich nicht, wie es aussieht mit WLAN-Unterstützung, was beim STM32 auf

39:57.000 --> 40:01.800
jeden Fall nicht so gut ist, ist der ganze Support, was Arduino-Treiber angeht, aber

40:01.800 --> 40:04.160
vielleicht ist es mittlerweile auch besser und ich muss sagen, ich hab damit noch nix

40:04.160 --> 40:14.960
gemacht, ich hab nen STM32 hier, allerdings einen, nämlich den hier, ehm, nämlich den

40:14.960 --> 40:24.680
hier, den hatte ich mir mal auf Kickstarter gekauft, ehm, ja, wenn es kein WLAN hat,

40:24.680 --> 40:34.720
dann ist es schon mal doof, ehm, ich hab mir nämlich den hier, eh, hallo, wo ist er denn,

40:34.720 --> 40:39.720
Shop, kucken wir mal im Shop, kaufen wir, ja, genau, so einen hab ich mir hier nämlich

40:39.720 --> 40:46.080
mal gekauft, das ist glaub ich ein, das ist ein STM32, aber das coole ist, ehm, den kann

40:46.080 --> 40:50.920
man mit, die haben ne.NET-Implementierung für das Ding gebastelt, also sprich, man

40:50.920 --> 40:54.520
kann mit, das ist der erste Microcontroller, den man mit.NET programmieren kann, das

40:54.520 --> 40:59.000
ist, wohlgemerkt, für den Preis eher nen Witz, ja, das ist ein Entwickler, also da

40:59.000 --> 41:03.240
ist auch alles möglich dabei, was man braucht, ehm, ich hab mir ehrlich gesagt auf Kickstarter

41:03.240 --> 41:08.800
nur einmal bestellt, weil ich mal gucken wollte, ob, wie weit man kommt mit.NET und Microcontroller,

41:08.800 --> 41:12.360
bin ich, da bin ich echt, bin ich wirklich mal gespannt, hab ich noch nicht ausprobiert,

41:12.360 --> 41:18.160
aber das ist schon mal ne ganz andere Hausnummer, also der hat auch ordentlich RAM, 16 MB RAM

41:18.160 --> 41:26.340
ist extrem viel, wie gesagt, ehm, der ESP32, der hat 60 KB oder so, 32 MB Flash ist auch

41:26.340 --> 41:31.400
krass, ja, auch das andere Zeug, also das ist schon mal ne ganz andere Hausnummer hier,

41:31.400 --> 41:36.040
ja, die haben ne.NET-Implementierung für Microcontroller gebastelt, und wer hier übrigens

41:36.040 --> 41:43.840
genau hinguckt, wird feststellen, dass der nen ESP32 noch onboard hat, also sprich, der

41:43.840 --> 41:50.960
hat nen STM32 und der hat nen ESP32, der ESP32 macht W-Lan, und ich könnt mir vorstellen,

41:50.960 --> 41:55.600
man kann nen ESP32 auch noch zusätzlich programmieren, das heißt, man hat hier wirklich krasse Rechenleistung

41:55.600 --> 42:02.280
am Start auf nen kleinen Controller, man hat hier nen Dual-Core vom ESP32, den Ultralow-Power-Core

42:02.280 --> 42:09.400
vom ESP32 und hier nen STM32-F7, der wahrscheinlich performancemäßig das Ding nochmal in die

42:09.400 --> 42:17.200
Tasche steckt, richtig viel RAM und richtig viel Flash, also das ist echt, das ist echt

42:17.200 --> 42:22.640
heftig das Teil, allerdings 50 Euro lohnen sich jetzt nicht so wirklich für kleine Sachen,

42:22.640 --> 42:32.000
ja, genau, so viel zum Tiny-Pico und dem ganzen Kram, so um die Sache jetzt mal fertig

42:32.000 --> 42:36.420
zu machen, also, was wir heute machen ist folgendes, wir probieren bisschen mit dem Display rum

42:36.420 --> 42:43.680
und dann versuchen wir Update über W-Lan, da hab ich schon ne fertige Updater-Klasse

42:43.680 --> 42:48.720
für, ja, ihr habt richtig gehört, C++-Klasse, Pain's Champ, was willst du machen, das ganze

42:48.720 --> 42:58.640
Arduino-Zeug ist halt so ne Mischung aus zum größten Teil C mit ein bisschen C++, und

42:58.640 --> 43:08.600
dann machen wir nen Update und das Update zeigen wir auf dem Display an, ich hab den

43:08.600 --> 43:16.240
Sinn dieser ESP32-Boards noch nie verstanden, zum Beispiel sowas hier, also ich zeig dir

43:16.240 --> 43:21.240
mal eine Sache, die ich letztens gebastelt hab, wofür das praktisch ist, nämlich, zum

43:21.240 --> 43:28.280
Beispiel sowas hier, das ist ne Steuerung für meine Klimaanlage, da hinten ist nen

43:28.280 --> 43:33.600
Temperatur-Luftfeuchtigkeits-Sensor dran, hier ist der Infrarot-LED, da ist ein Display

43:33.600 --> 43:40.800
dran, das ist übrigens nur ein monochromes Display bei dem hier, ein Display dran, Luftfeuchtigkeit-Temperatur,

43:40.800 --> 43:44.360
und hier unten hab ich den Knopf, so programmiert den hier glaube ich, dass ich damit die Klimaanlage

43:44.360 --> 43:49.680
ein ausschalten kann, das sind so Sachen, die kann man zum Beispiel mit nem ESP32 wunderbar

43:49.680 --> 43:57.040
machen, weil ESP32 ne super Kombination ist, aus ziemlich viel Rechenleistung, je nach

43:57.040 --> 44:03.220
Board, recht niedrigem Stromverbrauch, und W-Lan und Bluetooth, und das in Kombination

44:03.220 --> 44:08.320
gibt's so sonst eigentlich nirgendswo, und eine wichtige Sache, die ich noch vergessen

44:08.320 --> 44:18.080
hab, ziemlich gute Unterstützung, was Entwickler und Projekte angeht, also das ESP32, also

44:18.080 --> 44:22.520
dieses ESP-IDF-Gedöns vom Hersteller, ist wohl relativ gut, ich muss sagen, damit mach

44:22.520 --> 44:26.040
ich recht wenig, aber man verwendet viele Funktionen da draus, auch wenn's kein IDF-Projekt

44:26.040 --> 44:30.440
ist, allerdings die Arduino-Unterschützung ist ziemlich gut, und dementsprechend auch

44:30.440 --> 44:36.960
der ganze Library-Support, also du musst hier ja, beispielsweise diesen Luftfeuchtigkeits-Sensor,

44:36.960 --> 44:40.600
den musst du gar nicht großartig jetzt hier irgendwelche Register auslesen, irgendwelche

44:40.600 --> 44:44.120
Interrupts machen, sonst was, nimmst einfach ne fertige Library für das Ding und kannst

44:44.120 --> 44:50.000
auslesen, das ist halt praktisch, ein Arduino bekommt doch dasselbe, nee, ein Arduino hat

44:50.000 --> 45:02.400
kein WLAN, zum Beispiel, ja, der hat viel mehr digital, also die Arduino-Boards, es

45:02.400 --> 45:11.840
hat schon seinen Grund, dass gerade die ESP62 für die extrem budget Sachen und die ESP32,

45:11.840 --> 45:16.680
dass die ziemlich den Arduino den Rang abgelaufen haben in den letzten Jahren, die haben ja

45:16.680 --> 45:21.760
auch nachgezogen, es gibt jetzt ja neue Arduino-Boards mit, glaub auch, Bluetooth sogar, also WLAN

45:21.760 --> 45:27.880
auf jeden Fall, und ich glaub auch Bluetooth dabei, also die mussten halt auch mal ein

45:27.880 --> 45:28.880
bisschen aufholen.

45:28.880 --> 45:40.320
Wenn man was bauen will, was 30 Jahre hält, dann hast du ja auch ganz andere Voraussetzungen,

45:40.320 --> 45:41.320
denke ich mal.

45:41.320 --> 45:44.760
Also, ich würd mal sagen, die meisten Sachen hier halten doch schon verhältnismäßig

45:44.760 --> 45:50.600
lang, die gehen nicht einfach mal so kaputt, aber 30 Jahre ist halt ne Hausnummer, 30 Jahre

45:50.600 --> 45:53.520
ist echt ne Hausnummer, hast doch ganz andere Probleme.

45:53.520 --> 45:59.200
Wichtig ist aber halt auch gut, dass man einen Ersatz bekommt, und hier kriegst du,

45:59.200 --> 46:04.320
kriegst du, glaub ich, lange noch Ersatz, aber gut, das Problem hast du bei Arduino's

46:04.320 --> 46:05.320
ja auch nicht.

46:05.320 --> 46:11.480
So, und also sprich, das ist heute das Ziel, dass wir am Ende ein Update übers WLAN machen

46:11.480 --> 46:19.000
können, und auf dem Display angezeigt wird, wie weit das Update ist.

46:19.000 --> 46:20.480
So, auf geht's.

46:20.480 --> 46:27.200
So, ihr seht das ganz oben rechts, das erste, was wir so machen ist, mir ist nix blöderes

46:27.200 --> 46:33.520
eingefallen, das hab ich mir nur drüber geschrieben, dass ich nicht aus Versehen meine Secrets-Datei

46:33.520 --> 46:42.360
aufmache, weil da steht, da steht, zum Glück, zum Glück steht's hier nicht drinnen.

46:42.360 --> 46:48.480
Nein, es steht nicht drinnen, exellent, da steht meine SSID und mein WLAN-Passwort drinnen.

46:48.480 --> 46:54.880
Also die darf ich jetzt nicht aufmachen.

46:54.880 --> 47:01.440
So, also das erste, was wir machen ist, wir geben mal irgendwas auf dem Display auf, weil

47:01.440 --> 47:05.360
oben rechts ist ja, das passiert ja nix, das blinkt blau vor sich hin.

47:05.360 --> 47:08.000
So, nehmen wir uns mal irgendwie ein billiges Example.

47:08.000 --> 47:12.800
Achso, übrigens, nochmal zur Erklärung, wie das Ganze jetzt, dass es überhaupt funktioniert.

47:12.800 --> 47:19.840
Patrick, 14 Monate, gebated, krasser Shit, dankeschön, 14 Monate, das ist wirklich ja

47:19.840 --> 47:24.840
extrem lang.

47:24.840 --> 47:25.840
Massive IQ.

47:25.840 --> 47:31.640
Am Ende kommt, Compiler-Fehler, WLAN-Passwort, ja, ich hab extra nen WLAN genommen, weil

47:31.640 --> 47:32.960
ich nach dem Stream wieder wegschmeiße.

47:32.960 --> 47:37.280
So, zumindest, wir gucken uns jetzt mal ein einfaches Example an, wie man irgendwas auf

47:37.280 --> 47:38.960
den Bildschirm schreiben kann.

47:38.960 --> 47:43.480
Wie gesagt, ich hab mir das schonmal angeguckt, das ist nicht so kompliziert.

47:43.480 --> 47:50.360
Genau, und was ich zeigen wollte, meine Config für das Board ist folgendes, muss man nämlich

47:50.360 --> 47:55.600
sagen, das Board ist offiziell, das ist glaube ich relativ neu, das ist noch nicht unterstützt,

47:55.600 --> 48:00.240
man muss ein paar Sachen hier selbst hinzufügen, dass das Ganze funktioniert, aber das sind

48:00.240 --> 48:06.040
hauptsächlich ein paar Defines für das Display, das hab ich auch auf GitHub gefunden hier.

48:06.040 --> 48:11.040
Also erstens, das Ding hat einen ziemlich schnellen Speed für die serielle Schnittstelle,

48:11.040 --> 48:13.600
das schafft quasi das Doppelte, was eigentlich maximal geht.

48:13.600 --> 48:20.680
Will ich mich nicht beschweren, dann ist es wenigstens schnell hochgeladen.

48:20.680 --> 48:29.960
So, also wir verwenden das ganz normale Arduino-Framework, Standard-Partition für den Flash-Speicher,

48:29.960 --> 48:34.440
Standard-Partition für den Flash-Speicher beim ESP32, muss man auch mal sagen, sind

48:34.440 --> 48:42.120
ungefähr 1MB, ungefähr über den Daumen gepeilt, ungefähr, das ist ein vollständiges

48:42.120 --> 48:53.400
Board hier, guck, ungefähr 1,3MB Speicher auf dem Flash für die Software, für die

48:53.400 --> 49:00.840
Firmware, 1,3MB für eine Kopie von der Firmware, wenn man ein Update macht und der Rest ist

49:00.840 --> 49:07.080
Flash-Speicher, wo man Zeugs drauf speichern kann, von Bild, Bildchen bis Schriftarten

49:07.080 --> 49:12.400
bis sonst was, das ist so die Standard-Partitionierung von dem ESP32 Flash-Speicher.

49:12.400 --> 49:15.400
Das hat auch nur 4MB Flash, es gibt auch Sachen, die haben 16MB Flash.

49:15.400 --> 49:19.360
So, und was ich hier gefunden habe für das Board auf GitHub ist ein paar Compiler-Flex,

49:19.360 --> 49:23.720
die man noch angeben muss, das habe ich eingefügt, das Ding hat nämlich noch zwei Buttons,

49:23.720 --> 49:29.320
das ist ein ziemlich cooles Gesamtpaket, man hat ein großes Farb-Display, man hat zwei

49:29.320 --> 49:34.200
Buttons, die man verwenden kann und ein Reset-Button, also ist ein ganz gutes Gesamtpaket.

49:34.200 --> 49:41.240
Also, die GPIOs für die Buttons, was das ist, weiß ich nicht, das ist der Treiber für

49:41.240 --> 49:48.120
das Display, Größe, Höhe vom Display, welche GPIOs vom Display belegt sind und das hier

49:48.120 --> 50:01.000
ist wichtig, Backlight, wenn man das Backlight, nämlich, wenn man das hier nicht setzt, dann

50:01.000 --> 50:04.360
spackt das Display irgendwie rum.

50:04.360 --> 50:10.120
Bei AliExpress steht 4MB, 16MB, vielleicht schickt mal eine Link, müssen wir mal gucken,

50:10.120 --> 50:11.840
aber die haben eigentlich 4MB.

50:11.840 --> 50:18.280
Ja, und das sind alles irgendwelche Displays, ach ja, und es unterstützt Anti-Aliaste-Fonds.

50:18.280 --> 50:26.600
Okay, wir probieren das jetzt mal aus, wir machen normaler Test für das Display.

50:26.600 --> 50:32.680
Es kann sein, dass die Playlist übel schlecht abgemischt ist, ich meine, hallo, viel zu

50:32.680 --> 50:33.680
laut.

50:33.680 --> 50:36.680
Ja, besser.

50:36.680 --> 50:45.640
Das ist der Patrick, der kennt sich schon aus.

50:45.640 --> 50:53.760
Also, wir müssen als erstes mal uns die Library holen für dieses Display, also, Libraries,

50:53.760 --> 51:00.800
TFT, das da, Brauma, und Plattform AIO hat so eine merkwürdige Angewohnheit, das schlägt

51:00.800 --> 51:08.640
irgendwie die Version nicht geordnet nach Release-Datum vor, sondern geordnet nach älteste,

51:08.640 --> 51:11.640
also man möchte nicht die älteste installieren, man muss immer runterscrollen, ich möchte

51:11.640 --> 51:15.720
die neueste Version installieren, was ich ja persönlich für ziemlich low-brain halte.

51:15.720 --> 51:25.680
So, also, dann sagen wir jetzt Include, und dann hieß das Ding irgendwas mit TFT, LCD,

51:25.680 --> 51:37.400
äh, äh, Moment, wie, Generic, haben die irgendwie mal ein gescheites Beispiel, irgendwas, so

51:37.400 --> 51:47.040
ein Hallo-Welt-Beispiel oder sowas, ah, hier, das da, TFT-ESPE, das hat er wahrscheinlich

51:47.040 --> 51:49.840
nicht gecheckt, dass ich das Included hab, und jetzt muss ich noch mal neu starten.

51:49.840 --> 51:50.840
Oder?

51:50.840 --> 51:51.840
Oder?

51:51.840 --> 51:52.840
Hat er's erkannt?

51:52.840 --> 52:01.520
Okay, ich muss noch mal neu starten, er hat nicht erkannt, dass ich's installiert hab,

52:01.520 --> 52:03.840
und meine Klimaanlage muss ich anmachen.

52:03.840 --> 52:10.200
So, äh, ich hab mal eine Frage zu Let's Encrypt, du hast ja bei dir zu Hause eine Domain, äh,

52:10.200 --> 52:16.520
ja, hab ich, genau, korrekt, die ist öffentlich nicht erreichbar, aber wie validierst du,

52:16.520 --> 52:20.720
dass dann mit Let's Encrypt, muss der Dienst dafür nicht weitergehen werden, durch Portfolding?

52:20.720 --> 52:24.680
Ich mach das genau so, wie ich das von ein paar Streams in Traffic in meinem Stream eingerichtet

52:24.680 --> 52:25.680
hab.

52:25.680 --> 52:35.240
Also, das Ganze läuft über den DNS von Cloudflare, und, ähm, der ThirdBot macht DNS, äh, na,

52:35.240 --> 52:36.240
wie heißt Challenge?

52:36.240 --> 52:39.000
DNS-Challenge mit Let's Encrypt.

52:39.000 --> 52:46.200
Der geht über die DNS-API von Cloudflare hin, hinterlegt das Secret, was, ähm, Let's Encrypt

52:46.200 --> 52:47.200
abruft.

52:47.200 --> 52:51.440
So, also, jetzt haben wir das hier eingebunden, jetzt müssen wir so ein Display-Cloud-Anding,

52:51.440 --> 52:52.440
oder?

52:52.440 --> 52:53.440
Wie ging das genau?

52:53.440 --> 52:59.440
TFT, und jetzt schreiben wir erst mal irgendwas, jetzt schreiben wir irgendwas aufs Display,

52:59.440 --> 53:06.120
in der Hoffnung, gibt's da, gibt's da so ein, hat das irgendwie so ein, haben die irgendwie

53:06.120 --> 53:12.840
ein Hello World Beispiel, wo nicht 30, ach guck mal da, sogar für das Board hier, exzellent.

53:12.840 --> 53:18.560
Ne, das brauchen wir alles nicht, Z-Rotation brauchen wir, Z-Rotation brauchen wir auf

53:18.560 --> 53:24.120
1, das ist richtig, weil ich das Ding hier hochkant hab, also ihr seht's ja, ähm, also

53:24.120 --> 53:27.760
sonst, sonst würde er, sonst würde er so rumschreiben, was doof ist, er soll ja so

53:27.760 --> 53:28.760
rumschreiben.

53:28.760 --> 53:36.360
Also Rotation 1 brauchen wir auf jeden Fall, als erstes muss man TFT in it, so, und jetzt

53:36.360 --> 53:41.080
sagen wir TFT draw, wir schreiben jetzt mal irgendwas drauf und gucken, ob's funktioniert,

53:41.080 --> 53:52.000
ähm, Qt chat ayayaya, und zwar auf 00, also sprich 00 ist, äh, die linke obere Ecke,

53:52.000 --> 54:00.200
Qt chat ayayaya, und Schriftart, keine Ahnung, 4, das Ding hat standardmäßig, das wird übrigens

54:00.200 --> 54:05.920
auch gleich nur lustig, ähm, das Ding hat standardmäßig 8 eingebaute Schriftarten

54:05.920 --> 54:11.040
oder 7, 1 bis 7, aber man kann Custom Schriftarten nachladen, das werden wir auch gleich ausprobieren,

54:11.040 --> 54:16.000
so, mal gucken, ob das jetzt funktioniert, wenn ich das uploade, also wenn's funktioniert

54:16.000 --> 54:20.320
sollte da oben auf dem Display gleich Qt chat ayayaya stehen, aber ich hab bestimmt irgendwas

54:20.320 --> 54:21.320
vergessen.

54:21.320 --> 54:32.360
Ah, ich bin da auch doof, guck mal, ich hab das Display, ich hab's noch gesagt, man muss

54:32.360 --> 54:53.520
das Display auf on schalten, so, Leute seht ihr was auf dem Display, ich seh da nix, Qt

54:53.520 --> 55:03.920
chat ayayaya, doch, jetzt, ok, Moment, ähm, jetzt müssen wir mal was ausprobieren, jetzt

55:03.920 --> 55:09.840
müssen wir mal was ausprobieren, ich glaube, die Verzögerung vom Stream ist ganz schön

55:09.840 --> 55:17.840
hoch, glaub die Stream Verzögerung ist ziemlich hoch, ähm, wir machen jetzt mal hier, wir

55:17.840 --> 55:30.920
machen mal einen Counter, Strong, so, Delay, keine Ahnung, Sekunde, äh, und dann machen

55:30.920 --> 55:40.920
wir hier noch, so, also sprich, wir gucken jetzt mal, ob das, was da im Bild steht, übereinstimmt,

55:40.920 --> 55:49.920
so, hier unten steht gleich ne Nummer, und da gucken wir, also, eins, zwei, drei, WTF,

55:49.920 --> 55:57.160
ah, ich hab's nicht geklärt, Moment, ich muss doch klären das Display, das hab ich

55:57.160 --> 56:02.280
vergessen, init klärt anscheinend nicht, zum klären musste man glaub ich mal nen Fill,

56:02.280 --> 56:17.920
Fill Screen, Fill Screen mit TFT, Black, genau, so, und jetzt, jetzt sollte das ganze funktionieren,

56:17.920 --> 56:23.400
eventuell kannst du noch das Bild einfügen, das, ja, das probieren wir, wir machen jetzt

56:23.400 --> 56:35.440
Ayaya Emote drauf, das machen wir, Moment, das Ayaya Emote kommt drauf, da muss ja mal

56:35.440 --> 56:43.160
gucken wie man das macht, ok, mal kurz schauen, ok, 21, ok, ungefähr ne Sekunde Verzögerung,

56:43.160 --> 56:52.960
25, ja, ok, der Stream ist halbwegs aktuell, wir machen das Ayaya Emote auf das Display,

56:52.960 --> 57:02.760
das ist aber gleich die komplizierte Sache, ne, wie das funktioniert, da muss ich nämlich

57:02.760 --> 57:07.440
erstmal nachgucken, das ist gar nicht so easy da nen JPEG drauf zu kriegen, und zwar, ich

57:07.440 --> 57:10.120
hab's mir zwar im Vorfeld schon angeguckt, aber da ist einfach mal so nen randomen JPEG

57:10.120 --> 57:14.680
drauf zu kriegen glaub ich nicht so einfach, probieren wir mal aus, man kann hier TFT sagen,

57:14.680 --> 57:23.920
push image, und dann braucht man nen speziell vorbereitetes Image, also sprich, man muss

57:23.920 --> 57:34.880
das hier erstmal preprocessen, und da muss ich mal nachgucken, wie das, wie das funktioniert,

57:34.880 --> 57:50.720
es gab nen Tool, es gab nen Tool für Images, es gab ne Webseite, wo war das denn, es gab

57:50.720 --> 58:00.200
ne Webseite wo man Bilder umwandeln konnte in Images die das Ding verwenden kann, muss

58:00.200 --> 58:15.560
ich mal kurz hier in meinem Beispiel gucken, wo finde, wo ich das hab, ansonsten muss ich

58:15.560 --> 58:27.200
dem sein GitHub nochmal durchsuchen, ja, Image, so heißt das, Image Converter 565 online,

58:27.200 --> 58:36.200
ich weiß, klingt wie ne Pornseite, aber das Ding heißt so, der da, genau, genau, weil

58:36.200 --> 58:43.760
da kann jetzt, man kann jedes beliebige JPEG, PNG, JPEG, oder GIF, und Leute nicht JIF,

58:43.760 --> 58:52.120
GIF, kann man umwandeln in nen Bild, was der Kram, was das Ding versteht, seit wann streamst

58:52.120 --> 59:04.680
du schon, hast du es, wenn mich Twitch, 45 Minuten, ja, 59 Minuten, GIF, GIF, ok, also,

59:04.680 --> 59:11.040
laden wir uns den Kram mal runter, also ich glaube von der Größe her vom Display Leute,

59:11.040 --> 59:28.120
ich glaube ijajaja02 tut es auch, ijajaja, ok, browse, downloads, ijajaja, Mac File,

59:28.120 --> 59:42.160
WimDefault, Code, ja, exzellent, so, das brauchen wir jetzt in unserem Programm, da,

59:42.160 --> 59:50.000
Generated, ijajaja, PNG, und wir machen uns mal, wir machen uns mal im Images, im Images

59:50.000 --> 59:58.400
File, kopieren das da rein, ijajaja, und save, Images, so, also wer schon immer mal ijajaja

59:58.400 --> 01:00:04.440
als Hex Array sehen wollte, der kann sich jetzt freuen, also das einmal ijajaja in

01:00:04.440 --> 01:00:11.080
Bytes, eine Sache müssen wir noch machen, wir müssen einmal Arduino inkluden, weil das

01:00:11.080 --> 01:00:21.720
sonst Brockmem nicht auflösen kann, und ich glaube diesen Blödsinn können wir, oh, achso,

01:00:21.720 --> 01:00:28.360
das ist noch aus dem Main, ijajaja, ok, probieren wir es mal aus, Push Image, Push Image 00,

01:00:28.360 --> 01:00:34.480
00, äh, warte mal, Breite Höhe, was zum Höhe, was weiß ich, wie breit das ist, wie hoch

01:00:34.480 --> 01:00:44.880
ist das, 64 mal 3, ernsthaft jetzt, kann das nicht 64 mal 64 sein, warum muss das 64 mal

01:00:44.880 --> 01:00:52.760
63 sein, was ist das für ein beknacktes Format, ok, Push Image, also Breite Höhe, die Sache

01:00:52.760 --> 01:00:57.480
ist jetzt die, ich weiß jetzt nicht, ob es Höhe mal Breite oder Breite mal Höhe ist,

01:00:57.480 --> 01:01:02.720
probieren wir es mal aus, also 63, wir können natürlich richtig, wir können natürlich

01:01:02.720 --> 01:01:09.400
richtig, richtig pro sein, dass wir quasi sowas, sowas irgendwie, keine Ahnung, un-signed,

01:01:09.400 --> 01:01:17.360
short, das, ich glaube, man kann in C++, ähm, beliebig, beliebig lange Sachen schreiben,

01:01:17.360 --> 01:01:30.160
bevor eine Variable kommt, ey, das, das hört nie auf, ähm, ijajaja, B ist äh, 64, und

01:01:30.160 --> 01:01:37.560
äjajaja, Höhe ist 63, so, dann sieht das nämlich viel stylischer aus, ich mein, sowas

01:01:37.560 --> 01:01:43.240
wie schönes C++ gibt es eh nicht, also insofern, müssen wir das eigentlich auch gar nicht

01:01:43.240 --> 01:01:59.200
probieren, Images einbinden, äjajaja, Moment, äjajaja, weit, äjajaja, hoch, und jetzt

01:01:59.200 --> 01:02:04.120
das eigentliche Bild, äjajaja, ich bin ja mal echt gespannt, ob das jetzt funktioniert,

01:02:04.120 --> 01:02:18.200
ich hab bestimmt noch, irgendwas vergessen, so, ähm, Bild, ne, das, aber Push Image juckt

01:02:18.200 --> 01:02:21.840
das, wenn ich die falsche Höhe eingebe, weil er dann wahrscheinlich wegen dem Index zugreift,

01:02:21.840 --> 01:02:36.080
sich gibt, so, jetzt bin ich ja mal gespannt, ob das funktioniert, Leute, äh, die Farben

01:02:36.080 --> 01:02:49.640
sehen irgendwie nicht richtig aus, ach, ich weiß, woran das liegt, ich weiß, woran das

01:02:49.640 --> 01:02:55.200
liegt, ne, ist nicht zu hell, die Farben sehen, ich weiß, woran das liegt, ähm, das hab ich

01:02:55.200 --> 01:03:01.040
in nem GitHub Issue gefunden von dem, manche Displays sind irgendwie falsch rum Byte Order

01:03:01.040 --> 01:03:06.560
und hier vertauscht es Grün und Rot, äh, ja, Grün, Grün und Rot, jetzt, jetzt gehts

01:03:06.560 --> 01:03:13.840
wahrscheinlich, ah, ja, ja, ok, ich muss mal kurz auf mein Handy tippen und dann besser

01:03:13.840 --> 01:03:19.760
ranzoomen, weil so wirklich, äh, gut erkennt tut man, man erkennt es halbwegs, ja, man erkennt

01:03:19.760 --> 01:03:26.280
es halbwegs, ich guck mal kurz, dass das, Moment mal, ich steh mit meinem Stuhl auf

01:03:26.280 --> 01:03:51.480
dem, auf dem Erbel, warte mal, so, versuch mal, dass Helligkeit abgleichen bis, ja, ok,

01:03:51.480 --> 01:04:09.980
ich steh jetzt mit meinem Stuhl auf dem, ja, ok, dann machs, machs, ach, ach, ach, ach,

01:04:09.980 --> 01:04:19.640
ok, okay, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

01:04:19.640 --> 01:04:28.840
follow my sketch on Twitter

01:04:28.840 --> 01:04:31.820
ini

01:04:31.820 --> 01:04:45.240
war

01:04:45.240 --> 01:05:08.960
Jetzt erkennt man ein bisschen besser was, jetzt erkennt man, wir nehmen mal das größere

01:05:08.960 --> 01:05:14.500
Bild, wir nehmen mal eins mal ein bisschen größer, das ist zu hell, wir machen das

01:05:14.500 --> 01:05:19.200
Display auch mal ein bisschen, ein bisschen dunkler, als erstes nehmen wir mal ein

01:05:19.200 --> 01:05:24.600
bisschen das größere Bild, als erstes nehmen wir mal das fette hier, aja ja

01:05:24.600 --> 01:05:52.440
überschreiben wir damit, yes, replace, zack, aja ja, jetzt, jetzt, aja ja, in groß, nehmen wir den kram, appearance by images rein, achso, nee, moment, wir müssen jetzt

01:05:52.440 --> 01:06:10.400
jetzt brauchen wir jetzt die neue Größe, was ist das, 128, was 128 mal 100, 125, ok, dann, meinetwegen soll

01:06:10.400 --> 01:06:29.240
wir recht sein, so, gut, ok, probieren, probieren wir es nochmal, wie es jetzt ausschaut, jetzt muss auf jeden

01:06:29.240 --> 01:06:39.080
Fall das Bild ein bisschen größer sein, ah, ok, jetzt erkennt, jetzt muss ich nur noch das Display ein

01:06:39.080 --> 01:06:43.280
bisschen dunkler machen, weil das Licht da irgendwie nicht, weil der Weißabgleich

01:06:43.280 --> 01:06:47.720
irgendwie ein bisschen sackt, aber jetzt, jetzt erkennt man schon ein bisschen

01:06:47.720 --> 01:06:55.720
besser was, oder, außer dass es auf dem Kopf steht, aber ok, benutzt du eigentlich für

01:06:55.720 --> 01:07:01.800
dein nass Samba oder irgendwas, ja, ja, ja, mach ich, so, wir machen, dass wir machen

01:07:01.800 --> 01:07:05.440
das Display jetzt ein bisschen dunkler, da habe ich mir aber auch schon

01:07:05.440 --> 01:07:12.960
rausgesucht, wie das geht, weil ich nicht ganz planlos bin, übrigens, ich probiere

01:07:12.960 --> 01:07:20.480
nochmal eine Sache, ich versuche das jetzt nochmal neu mit dem iPhone zu sagen, vielleicht kann das

01:07:20.480 --> 01:07:34.800
nochmal neue Weißabgleich oder so machen, naja, ich glaube auch, dass die, ich habe

01:07:34.800 --> 01:07:38.520
jetzt so schlechtes, ich habe jetzt so schlechtes Licht, wenn ich helleres

01:07:38.520 --> 01:07:45.960
Licht rum hätte, würde es wahrscheinlich besser funktionieren, das können wir mal ausbilden, ich mache jetzt

01:07:45.960 --> 01:07:51.720
erstmal das Display kurz ein bisschen dunkler, das geht folgendermaßen, deswegen habe ich

01:07:51.720 --> 01:07:57.480
hier das auch auf standardmäßig ausgesetzt, das Display, ich habe nämlich was gefunden, wie man die

01:07:57.480 --> 01:08:08.560
Helligkeit vom Display steuern kann, und zwar geht das so, ich habe mir den Kram sogar Kommentare

01:08:08.560 --> 01:08:17.920
dran geschrieben, also, so, das ist volle Pulle Helligkeit, Null ist aus, das heißt, wir machen jetzt

01:08:17.920 --> 01:08:29.040
mal 100, das ist so halbe halbe hell, vielleicht sieht man da ein bisschen besser was, schauen wir mal, ob man

01:08:29.040 --> 01:08:37.800
jetzt das eine Runde, aja ja, besser erkennt, ja, das sieht doch viel besser aus,

01:08:37.800 --> 01:08:50.680
hättest du das Bild nicht über eine Base64-Kodierung umrechnen lassen können, sofern das Programm,

01:08:50.680 --> 01:08:56.080
ich weiß nicht, ob man da irgendwie Base64, ob das irgendwie in Base64 braucht, also ich meine,

01:08:56.080 --> 01:09:03.040
die Frage ist ja, in welchem Format möchte die Library das hier haben, keine Ahnung, was das für ein

01:09:03.040 --> 01:09:08.960
Format ist, keine Ahnung, ehrlich gesagt, keine Ahnung, die Library braucht das Format, was dieses

01:09:08.960 --> 01:09:18.480
Tool hier, dieses Tool, wo ist es hin, was dieses Tool ausspuckt, so, jetzt erkennt man es aber besser,

01:09:18.480 --> 01:09:37.960
wir machen mal kurz noch ein bisschen dunkler, 50 oder so, das ist ein inoffizieller Standard

01:09:37.960 --> 01:09:51.720
namens C-Image aka Bitmap, oh guck mal, jetzt erkennt man richtig gut was, aber es steht auf dem Kopf,

01:09:51.720 --> 01:09:57.920
jetzt erkennt man doch richtig gut was, oder, kann man sich jetzt gar nicht mal beschweren hier,

01:09:57.920 --> 01:10:03.120
ich guck mal, wie hell das jetzt ist, wahrscheinlich ist das total dunkel, ne, geht eigentlich, geht

01:10:03.120 --> 01:10:07.160
eigentlich, ist nicht so übertrieben, also ich glaube, das Problem, wenn ich das Display zu hell

01:10:07.160 --> 01:10:12.240
mache, ist folgendes, wenn ich das Display zu hell mache, dann ist die Umgebung zu dunkel,

01:10:12.240 --> 01:10:18.640
dann kriegt das, da kriegt das die Kamera hin, so lassen wir das, so lassen wir das jetzt erstmal,

01:10:18.640 --> 01:10:22.680
so und jetzt machen wir die Rotation noch mal auf 3, dann müsste es, dann müsste es sogar

01:10:22.680 --> 01:10:42.720
richtig rum, Aja, ja, saa, so Achtung, Pause Champ, Pause Champ, ha, und richtig rum, achso,

01:10:42.720 --> 01:10:50.240
Moment, habe ich das im Stream auf den Kopf gestellt, warum habe ich das denn im Stream

01:10:50.240 --> 01:10:55.280
auf den Kopf gestellt, das ist doch total bescheuert, ich, da dreh ich das in OBS einfach mal rum,

01:10:55.280 --> 01:11:23.800
in das hier Transform, Rotate, ha, Aja, ja, so ist das doch gut, so jetzt haben wir die

01:11:23.800 --> 01:11:26.800
Display Library ein bisschen ausprobiert, allerdings muss ich natürlich sagen, wirklich

01:11:26.800 --> 01:11:33.120
sinnvoll ist das jetzt net, dass wir da Aja ja drauf anzeigen lassen können, was für

01:11:33.120 --> 01:11:38.680
IP-Cams nutzt du noch mal, ich will mir IP-Cams, ganz ehrlich, alles Müll, ich hab mir ja

01:11:38.680 --> 01:11:48.160
letztens 4 Kameras gekauft zum ausprobieren und eine schlechter als die andere, ich hab

01:11:48.160 --> 01:11:53.120
mir einmal die da gekauft, die kann nämlich, ich hatte einen 4x optischen Zoom, ich hab

01:11:53.120 --> 01:12:04.160
mir die hier gekauft, ähm, dann irgendwie eine billige China für 30 Euro, die da, ne,

01:12:04.160 --> 01:12:13.520
ja die da, äh, ich wollt gucken, welche billig Cam besser ist und die sind alle scheiße,

01:12:13.520 --> 01:12:32.680
die hier, so, und, äh, äh, äh, achso und die hier, so, also von allen Kameras muss

01:12:32.680 --> 01:12:38.680
man sagen, vom Handling ist das hier mit Abstand die beste, leider hat die kein WLAN und geht

01:12:38.680 --> 01:12:42.160
halt nur über PoE, was eigentlich nicht verkehrt ist, allerdings hab ich gerade an der Stelle,

01:12:42.160 --> 01:12:49.720
wo ich die Outdoor-Kamera hinstelle, hat gerade kein PoE-Kabel am Start, äh, ja Kingwall,

01:12:49.720 --> 01:12:58.080
wenn du eine ordentliche findest mit Stromversorgung über 5V, 12V oder wie auch immer und WiFi,

01:12:58.080 --> 01:13:02.600
dann nehm ich die sofort, aber irgendwie find ich da keine, so und jetzt passt mal auf,

01:13:02.600 --> 01:13:10.160
also diese Kamera fand ich ziemlich gut, die hat ein gutes Webfrontend zum konfigurieren,

01:13:10.160 --> 01:13:15.400
ähm, macht auch einen guten Eindruck, also ich war echt zufrieden mit der Kamera und

01:13:15.400 --> 01:13:21.560
ich hatte die jetzt eine Woche draußen hängen und jetzt ist sie kaputt, der Flash-Speicher

01:13:21.560 --> 01:13:35.600
ist kaputt, nach dem Reboot sind alle Settings weg, nach einer Woche Flash-Speicher im Arsch,

01:13:35.600 --> 01:13:43.760
hat sich am, hat sich Sonntagmorgen oder Samstag, letzte, warte mal, nee, irgendwann, irgendwann

01:13:43.760 --> 01:13:48.840
mit, irgendwann, Montagmorgen oder irgendwie so war das glaub ich, hatte sich reset und

01:13:48.840 --> 01:13:52.720
hab ich nachgeguckt, okay, jedes Mal wenn ihr Reboot, der Flash-Speicher ist kaputt,

01:13:52.720 --> 01:13:58.200
jedes Mal wenn ihr Reboot, vergesst ihr alle Settings, also voll für'n Arsch, ja hickwischen

01:13:58.200 --> 01:14:06.080
finde ich keine, die Wi-Fi taugt, also ne ordentliche Wi-Fi-Kamera, ich brauch ja auch

01:14:06.080 --> 01:14:09.760
nix mit Zoom, was, hickwischen DS, also eins muss ich sagen, hickwischen hat ja absolut

01:14:09.760 --> 01:14:21.080
grausame Namen, ich mein DS12, blubblubblubblubblub, was auch immer, ja das ist so ne Domecam,

01:14:21.080 --> 01:14:32.800
kann man die vertikal an der Wand mounten? Wahrscheinlich, ne? Ähm, hier, ich, JoKill,

01:14:32.800 --> 01:14:37.520
ich mach's ganz einfach, ich schick's an Amazon zurück, ich schreib mir das mal auf

01:14:37.520 --> 01:14:45.720
mit, mit, mit dieser hickwischen Cam, aber hauptsache WLAN, ja, so, also ich, ich erzähl

01:14:45.720 --> 01:14:49.960
euch jetzt noch mal kurz was, also, die hier ist nach, die fand ich gut, ich hätt' mir

01:14:49.960 --> 01:14:56.560
sogar noch mehr von gekauft, nach einer Woche im Arsch, so, die hab ich nicht weiter ausprobiert,

01:14:56.560 --> 01:15:01.720
weil, ähm, die hat zwar optischen Zoom, aber die ist mir ein bisschen zu groß für den,

01:15:01.720 --> 01:15:06.640
für den, für den Eingangs, also für die, für die Wand, äh, gegenüber von der Eingangstür,

01:15:06.640 --> 01:15:13.240
also gegenüber vom Hoftor, jetzt hab ich die Eingangstür, ähm, die war mal ein bisschen

01:15:13.240 --> 01:15:17.440
fett, die hier, also es kann durchaus sein, dass die hier funktioniert, die werd ich wahrscheinlich

01:15:17.440 --> 01:15:22.280
an die Garage machen, da wo ich auch von dem Vierfachzoom bisschen was hab, ok, das Ding

01:15:22.280 --> 01:15:35.400
sieht aus wie von 1995, aber ich mein, wenn sie funktioniert, ist ok, boah, ok, ich mein,

01:15:35.400 --> 01:15:39.480
vielleicht, vielleicht hat Qualität einfach seinen Preis, ja, die anderen Cams, die ich

01:15:39.480 --> 01:15:47.400
gekauft hab, waren halt alle richtig billig, die gibt's, die gibt's auch bestimmt günstiger,

01:15:47.400 --> 01:15:56.760
oder, die gibt's, die gibt's auch bestimmt günstiger zu kaufen, hm, gut, aber ich mein,

01:15:56.760 --> 01:15:59.680
für den Preis, den ich an Müll ausgegeben hab, zumindest, ich mach jetzt erstmal fertig,

01:15:59.680 --> 01:16:04.720
also, die hier, die heb ich mir auf, die mach ich wahrscheinlich an die Garage, äh, die

01:16:04.720 --> 01:16:08.440
mach ich wahrscheinlich an die Garage dran, da sie vom Vierfachzoom was haben, also zu

01:16:08.440 --> 01:16:12.480
der kann ich nichts sagen, ist genauso gut wie die hier, plus die ist mal kaputt gegangen

01:16:12.480 --> 01:16:16.520
nach einer Woche, was das Webinterface und so angeht, also an sich eigentlich ganz gut,

01:16:16.520 --> 01:16:23.400
weil ich das hier wahrscheinlich ein bisschen für den Arsch, so, die China Cam ist tatsächlich

01:16:23.400 --> 01:16:38.840
im wahrsten Sinne des Wortes, also die ist wirklich Müll, ähm, erstens schreiben sie

01:16:38.840 --> 01:16:43.880
hier was, dass du die einrichten kannst über Webinterface und sonst was, und sobald du

01:16:43.880 --> 01:16:48.800
dich verbindest, per Webinterface, auf die China Cam, ich mach das ja so, um die Kameras

01:16:48.800 --> 01:16:53.960
zu testen, weil ich will die nicht ins WLAN packen, um die Kameras zu testen, ich hab,

01:16:53.960 --> 01:16:59.320
mach ich mal den Raspberry Pi an, der selbst im WLAN ist, und, äh, ich hab einfach einen

01:16:59.320 --> 01:17:03.680
DACP-Säufer laufen auf der Netzwerkschnittstelle, da ziehen sich die Kameras dann immer was,

01:17:03.680 --> 01:17:09.920
die 128G RAM, ach, schwachsinn, wahrscheinlich unterstützt die SDs für 128G, äh, sehr

01:17:09.920 --> 01:17:18.240
auxin, nur 12 Monate, Dankeschön, Subscription hier, Hyper, Hyper-Subscriber, zumindest angeblich

01:17:18.240 --> 01:17:23.240
hat es ein Webinterface, wo du drauf kannst 403 verbinden, und ich bin nicht der Einzige,

01:17:23.240 --> 01:17:28.520
und irgendwie ist das, was die hier schreiben, alles Bullshit, es gibt zwei Varianten, die

01:17:28.520 --> 01:17:34.760
mit Webinterface, die man gut konfigurieren kann, und die Cloud-Variante, die, äh, nur

01:17:34.760 --> 01:17:38.800
Cloud-Only ist, und das ist irgendwie die Cloud-Variante, was man nicht erkennen kann,

01:17:38.800 --> 01:17:45.160
so, wahnsinniger Chebat, schicke ich auch zurück, alles, kommt alles weg, richtig Skammas,

01:17:45.160 --> 01:17:49.560
so, nächste Cam, die hier, das ist so eine ganz billige China-Cam, die kostet 30 Euro

01:17:49.560 --> 01:18:03.800
oder so, 40 oder sowas, die ist eigentlich ganz okay, das Problem dabei ist, Dahua, also

01:18:03.800 --> 01:18:10.320
ganz ehrlich, das Webinterface kann ruhig ein Krampf sein, ich mein, das Webinterface

01:18:10.320 --> 01:18:16.360
von denen hier, die brauchen sogar noch Flash für das Video, hallo, wer mischt denn diese

01:18:16.360 --> 01:18:23.640
Musik immer ab, ähm, der braucht noch Flash für das Video im Browser, aber das ist mir

01:18:23.640 --> 01:18:32.120
egal, ich greife es eh über den RTSP-Stream ab, also, ähm, und die Cam, die hat mir eine

01:18:32.120 --> 01:18:36.880
auf Twitter empfohlen, finde ich eigentlich ganz gut, für 40 Euro, ähm, und die Sache

01:18:36.880 --> 01:18:44.400
ist die, du brauchst dafür eigentlich nicht die China-Firmware, es gibt nämlich auf GitHub

01:18:44.400 --> 01:18:51.960
eine Custom-Firmware dafür, ha, ich sehe schon den Chat, ich guck gleich mal nach der anderen,

01:18:51.960 --> 01:18:57.360
also, so, und bis ich dann festgestellt habe, nachdem ich die Kamera bestellte, also, erstens,

01:18:57.360 --> 01:19:02.760
ähm, man muss donaten, dass man den RTSP-Server bekommt, das ist okay, donate ich 5 Dollar,

01:19:02.760 --> 01:19:07.040
hab ich kein Problem mit, die Sache ist nur die, zum Einrichten für die Kamera braucht

01:19:07.040 --> 01:19:17.920
man die China-App und, ähm, nen Ye-Home-Account, weil die Custom-Firmware kann nicht auf die

01:19:17.920 --> 01:19:22.240
WLAN-Funktion zugreifen, die WLAN-Funktion ist anscheinend irgendwie verschlüsselt, was

01:19:22.240 --> 01:19:25.680
auch immer, Firmware vom Hersteller, wo die Custom-Firmware irgendwie keinen Zugriff

01:19:25.680 --> 01:19:31.020
drauf hat, das heißt, man braucht zum Einrichten die Chinas, die China-App, ähm, die dann

01:19:31.020 --> 01:19:36.280
erstmal schön deine WLAN-Information nach China überträgt wahrscheinlich, was ich gemacht

01:19:36.280 --> 01:19:39.680
habe ist, ich hab mir einen extra Account eingerichtet, einen extra WLAN eingerichtet

01:19:39.680 --> 01:19:46.280
bei mir, und, äh, das hab ich danach einfach wieder gelöscht und ne, und 10-Minute-Mail-Account

01:19:46.280 --> 01:19:51.480
gemacht für China, alles okay, ging ja auch, und danach hab ich den Custom-ROM drauf gemacht,

01:19:51.480 --> 01:19:57.000
die Custom-Firmware für die Kamera drauf gemacht, ähm, und dann ist mir aufgefallen,

01:19:57.000 --> 01:20:05.720
man kann die WLAN-Settings nachträglich nicht ändern, also sprich, ich müsste das temporäre

01:20:05.720 --> 01:20:11.080
WLAN jetzt für immer da lassen, weil sonst bootet die Cam nicht mehr, also auch übelster

01:20:11.080 --> 01:20:20.920
Müll, so, und die hier ist eigentlich ziemlich gut, die ist total, ganz klein, ähm, und

01:20:20.920 --> 01:20:25.520
geht wohl auch Outdoor, leider nur PoE, die hatte ich mir aber gekauft, weil ich die an

01:20:25.520 --> 01:20:29.560
meinem 3D-Drucker, also weil ich die auf meinen 3D-Drucker, oder gegenüber von meinem 3D-Drucker

01:20:29.560 --> 01:20:35.360
stellen will, weil die eine ziemlich gute Nightwish-Geschichte hat und ziemlich klein

01:20:35.360 --> 01:20:40.920
ist, so, und dann ist das mit PoE auch kein Problem, also die halte ich mir auf das andere,

01:20:40.920 --> 01:20:45.600
aber die wäre optimal, hätte die WLAN, man könnte die WLAN-fähig machen, äh, ich könnte

01:20:45.600 --> 01:20:50.040
da zum Beispiel so ein Mini-Mini-Access-Point dran machen, und dann wäre die auch im WLAN,

01:20:50.040 --> 01:20:56.800
so was hier, ähm, als Bridge, absoluter Schrott, ok, dann vielleicht doch nicht, aber die Teile

01:20:56.800 --> 01:21:02.920
sind wirklich gut, für 22, 22 Euro gibt es so einen MikroTek Mini-Access-Point, und der

01:21:02.920 --> 01:21:07.760
ist wirklich klein, der ist, weiß gar nicht, guckt euch mal hier, das liegt vorne auf der

01:21:07.760 --> 01:21:13.000
Hand, so klein ist der, der ist quasi, also der ist wirklich mini, dieser Access-Point,

01:21:13.000 --> 01:21:18.040
das ist Wahnsinn, was die bei MikroTek für kleinen Shit gebaut haben, da brauchen wir

01:21:18.040 --> 01:21:22.560
ein PoE-Injector und, äh, für die Kamera, und da machen wir ein Access-Point dran, würde

01:21:22.560 --> 01:21:27.680
funktionieren, ist ein bisschen viel gefuddelt für eine, für eine Kamera, ja, so, äh, was,

01:21:27.680 --> 01:21:36.360
was hat eben noch einer empfohlen, die hier, oh, das ist aber ein riesen Ding, Alter, oder

01:21:36.360 --> 01:21:44.320
nicht so groß, wie groß ist denn die, wichtig ist, dass sie ein Web-Interface hat und RTSP,

01:21:44.320 --> 01:21:51.480
zum Stream-Abgreifen, na gut, das waren meine Ausflüge ins Kameraland, alles, alles Müll,

01:21:51.480 --> 01:21:56.200
die hier fand ich ehrlich gesagt richtig gut, außer dass sie mir nach einer Woche kaputt

01:21:56.200 --> 01:22:06.320
gegangen ist, also, also Crap, so, weiter, schon eine Idee für ein, äh, NVR, ja, mein

01:22:06.320 --> 01:22:14.520
eigenes Zeug, also ich, ich brauch keine Special-NVR, was weiß ich, Archivierung und Geduldens,

01:22:14.520 --> 01:22:17.080
ich benutze das eigentlich hauptsächlich zum Nachgucken, wenn's klingelt und sonst

01:22:17.080 --> 01:22:25.560
was, und ich hab ja selbst was gebastelt, was meine Web-Cams alle per Web-RTC im Browser

01:22:25.560 --> 01:22:28.320
anzeigt, hab ich euch ja hier, will ich jetzt nicht aufmachen, weil ich wahrscheinlich

01:22:28.320 --> 01:22:32.920
wieder irgendwas leake, ähm, hol dir eine Bosch, ja, das ist wahrscheinlich so ein 20.000

01:22:32.920 --> 01:22:52.640
Euro Ding, ne, ja, ähm, und das, was mir die Sachen auch anzeigen kann im Browser,

01:22:52.640 --> 01:22:58.320
das hat ne ganz easy Rekordfunktion, ja, also ich hab, ich hab was eigenes gebastelt, was

01:22:58.320 --> 01:23:03.960
ich schon seit Monaten vor hab, endlich weiter auszubauen und auf GitHub zu stellen, aber

01:23:03.960 --> 01:23:08.280
ihr wisst, wie konsequent ich mit solchen Projekten bin, gut, machen wir mal, so viel

01:23:08.280 --> 01:23:14.320
zum Thema Kamera, ja, ähm, ja, gucken wir uns das Ganze mal ein bisschen weiter an, dass

01:23:14.320 --> 01:23:22.120
wir hier ein bisschen zu, zu Potter kommen, ähm, wie gesagt, wenn ihr noch was zur Kamera

01:23:22.120 --> 01:23:25.960
hast, fragt mich, wenn ihr irgendwas ausbildungsmäßig, technisch, ihr könnt mich alles fragen im

01:23:25.960 --> 01:23:30.440
Chat, ähm, ich find's immer gut, wenn im Chat ordentlich was los ist und ich muss sagen,

01:23:30.440 --> 01:23:34.200
ich muss mal mein Chat mal zur Abwechslung, äh, zur Abwechslung mal wieder nicht flame,

01:23:34.200 --> 01:23:39.240
sondern zur Abwechslung mal eine Runde den Chat loben, ähm, ich hab jetzt eine Woche

01:23:39.240 --> 01:23:43.960
nicht gestreamt, erstens cool, dass so viele Leute instant wieder am Start sind und, ähm,

01:23:43.960 --> 01:23:49.480
ich guck ja persönlich selbst auch relativ viel Twitch und alles, ich muss sagen, es

01:23:49.480 --> 01:23:56.040
gibt Channel, die haben tausend Zuschauer und der Chat ist absolut tose Hose und ich

01:23:56.040 --> 01:24:08.000
hab 200 Zuschauer und im Chat ist was los. Gut, aber das sind auch Gaming Streams mit

01:24:08.000 --> 01:24:12.720
nicht so viel Chat Interaktion, ja, aber, aber der Chat ist wirklich Massive Poggers

01:24:12.720 --> 01:24:25.480
mit da, easy, im Q-Chat ist immer was los, richtig. Hast du ein Informatikstudium, ich

01:24:25.480 --> 01:24:34.840
hab nur eine Ausbildung vor 13 Jahren oder so, 13, 13, ist schon ein bisschen her. Also,

01:24:34.840 --> 01:24:39.720
wir sind jetzt stehen geblieben, weil wir haben es geschafft AjaJa auf dem Display anzuzeigen,

01:24:39.720 --> 01:24:43.640
es ist jetzt nicht so, dass uns das wahnsinnig viel bringt, aber was wir da schon mal gelernt

01:24:43.640 --> 01:24:49.480
haben dabei ist, wie es funktioniert. Ein Problem, was ich mit dieser Display Library

01:24:49.480 --> 01:24:56.160
hatte, ich versuche euch das mal zu zeigen und zwar, ähm, Moment, ich mal jetzt das

01:24:56.160 --> 01:25:00.920
Bild hier, ich muss mal meinen String woanders hin malen, irgendwie auf, frag mich nicht,

01:25:00.920 --> 01:25:07.640
äh, Moment, wie breit ist AjaJa und welche Höhe hat AjaJa? Höhe 125, ok, dann machen

01:25:07.640 --> 01:25:15.440
wir mal, ich malen mal nämlich den Text nebendran, äh, äh, ne, Höhe ist 0, ist ok, Breite,

01:25:15.440 --> 01:25:21.160
Breite ist AjaJa plus, plus 10. So, jetzt haben wir nämlich den Counter wieder oben

01:25:21.160 --> 01:25:26.040
und jetzt passt mal auf, ich zeig euch mal was mit dem Counter. Der hat nämlich so ein

01:25:26.040 --> 01:25:31.320
kleines Problem, ich hoffe man erkennt das auf der, auf der Vorschau mit dem Counter.

01:25:31.320 --> 01:25:40.320
Achso, Moment, äh, ja, ich mach mal, ich mach mal das, das Image, das Image lassen wir

01:25:40.320 --> 01:25:44.400
hier oben reinschreiben, dass ihr nur den Counter aktuellisiert. Ähm, wenn ich das

01:25:44.400 --> 01:25:48.960
nämlich volle Pulle mit Geschwindigkeit laufen lasse, dann werdet ihr vielleicht sehen, dass,

01:25:48.960 --> 01:26:00.280
das Display ein bisschen rumspackt. Fällt, na, man siehts nicht richtig. Fällt euch was

01:26:00.280 --> 01:26:06.560
auf, ne, anscheinend, wahrscheinlich nicht, ne. Aber mir fällt was auf, wenn ich, wenn

01:26:06.560 --> 01:26:10.240
ich drauf gucke. Ich glaub ihr sehts nicht richtig, damit ihr das richtig seht, muss

01:26:10.240 --> 01:26:15.840
ich glaube ich die Schrift, die Schrift ein bisschen größer machen. Ich mach jetzt die

01:26:15.840 --> 01:26:23.960
Schrift mal richtig fett, vielleicht seht ihrs dann auch. Zumindest, das Display flackert,

01:26:23.960 --> 01:26:38.640
das flackert beim Refresh. Seht ihrs jetzt? Weiß ich auch nicht ob ihrs jetzt seht, aber

01:26:38.640 --> 01:26:48.000
das flackert. Ein bisschen, ein bisschen, aber ich müsste eigentlich die Schrift, ich

01:26:48.000 --> 01:26:54.320
müsste eigentlich die Schrift noch größer machen. Ähm, machen wir mal was anderes.

01:26:54.320 --> 01:27:06.880
Äh, umso, umso größer und umso komplizierter die Schriftart ist. Ähm, Load Free, ne, Entfond,

01:27:06.880 --> 01:27:17.720
hallo? Rischel Studio, what the fuck? Rischel Studio, was ist los? Naja, TFT. Einfach mal

01:27:17.720 --> 01:27:27.800
IntelliSense abgekackt. Ich zeig's euch nochmal viel deutlicher. TFT, Fond, ich muss aber

01:27:27.800 --> 01:27:48.200
erst noch, ähm, Z-Free-Fond. So, und, Mono. Wir machen mal einen großen Fond, äh, Free-Mono-24,

01:27:48.200 --> 01:28:04.520
überhaupt so leht. Ne. Ja, und? So, und jetzt müssen wir einen anderen Fond haben und dann

01:28:04.520 --> 01:28:17.360
sieht man's, dann sieht man's noch besser. Weiß ich ob der Comic Stunts kann, eher nicht.

01:28:17.360 --> 01:28:29.480
Ja, jetzt, jetzt sieht man's gut. Jetzt sieht man's gut. So. Man kann dagegen was machen.

01:28:29.480 --> 01:28:35.640
Ähm, also das Problem ist, übrigens, ich kann euch sagen, warum man's bei den eingebauten

01:28:35.640 --> 01:28:38.880
Schriftarten nicht gesehen hat. Das Ding hat drei verschiedene Sachen, wie es rendern

01:28:38.880 --> 01:28:49.880
kann. Das kann die eingebauten Schriftarten rendern, ähm, und, ich muss aber trotzdem

01:28:49.880 --> 01:28:59.280
Ayaya einplanten, weil ohne Ayaya geht das, geht ja hier nix, ja. Das bräuchte FreeSync,

01:28:59.280 --> 01:29:06.400
ja. Also, das kann die eingebauten Fondarten relativ schnell rendern, deswegen, also diese

01:29:06.400 --> 01:29:10.160
Standardfonden, deswegen hat man's kaum gesehen, deswegen hat man's kaum gesehen mit den Standardfonden.

01:29:10.160 --> 01:29:15.120
Wenn es FreeType oder sonstige Dinger, frag mich nicht, Fondarten rendert, dann spackt

01:29:15.120 --> 01:29:23.520
es rum und wo es richtig rumspackt ist, wenn man Anti-Aliast-Fonds rendert. So, dann ist

01:29:23.520 --> 01:29:27.920
das, dann ist das, dann ist das richtig, dann ist das richtig. So, es gibt was was man dagegen

01:29:27.920 --> 01:29:33.760
machen kann, und zwar, man kann das Ganze als Sprite rendern und dann, wenn das Sprite

01:29:33.760 --> 01:29:40.560
fertig ist, es erst auf den Bildschirm anzeigen lassen. Das ist insofern ganz praktisch, weil

01:29:40.560 --> 01:29:45.000
es dann halt auch nur die Teile Refreshed, die Refreshed werden müssen und dann flackert's

01:29:45.000 --> 01:29:54.680
nicht. Geht angeblich, hab ich hier gelesen, ja, äh, auch auf GitHub. Wir brauchen jetzt

01:29:54.680 --> 01:30:00.640
bloß mal ein Beispiel für das Sprite. Kann man einem Display FreeSync machen, wenn das

01:30:00.640 --> 01:30:05.920
von, nein, nein, nein, Schwachsinn. Ich hab nur FreeSync gerade gesagt, das ist Blödsinn.

01:30:05.920 --> 01:30:10.680
Hat damit nichts zu tun. FreeSync ist ja im Prinzip eine Technik, wo du mit deiner Grafikkarte

01:30:10.680 --> 01:30:14.360
dem Monitor Bescheid sagen kannst, sobald das Bild da ist und da Refreshed dann. Das

01:30:14.360 --> 01:30:21.760
gibt's hier in der Art und Weise gar nicht. Jetzt muss, man muss auch fair, fair, fair

01:30:21.760 --> 01:30:27.280
sein. Das ist jetzt ein relativ unrealistisches Szenario. Ihr seht, wie schnell ich hier auf

01:30:27.280 --> 01:30:32.160
das Display draufschreibe. Aber auch wenn ich ein bisschen langsamer mache das Ganze,

01:30:32.160 --> 01:30:38.840
weiß nicht, ob man es dann erkennt, es flackert beim Refresh und das ist unangenehm, finde

01:30:38.840 --> 01:30:52.240
ich. Seht ihr es? Es flackert, es flackert auch ein bisschen, selbst wenn es so langsam

01:30:52.240 --> 01:31:05.040
drauf ist. Es flackert immer, es flackert im Prinzip immer beim Refresh. So, und was

01:31:05.040 --> 01:31:12.680
man dagegen machen kann ist, das auf den Sprite zu rennen. Da müssen wir bloß mal hier nachgucken,

01:31:12.680 --> 01:31:16.800
dass ich ein Beispiel, dass ich irgendein Beispiel finde. Der andere Seite, ich kann

01:31:16.800 --> 01:31:20.480
mal in meinem Spickzettel gucken, weil ich hab mir ein paar Sachen vorfeld kopiert.

01:31:20.480 --> 01:31:28.760
Da kann man das mal ausprobieren. Sprite, achja, hier. Exzellent. Okay, das heißt wir

01:31:28.760 --> 01:31:46.480
machen mal ein Sprite, falls man das hier so machen kann. Ah, gut, komm. Sag mal, diese

01:31:46.480 --> 01:31:57.200
Musik, wer mischt die ab? Die ist mal übelst laut und mal übelst leise. Die können sich

01:31:57.200 --> 01:32:01.400
da gar nicht entscheiden. Dürfen deine Azubis auch ein Spickzettel verwenden? Klar, ist

01:32:01.400 --> 01:32:06.280
mir doch egal. Nee, die können sich echt nicht entscheiden mit der Musik, ob das laut

01:32:06.280 --> 01:32:17.920
oder leise sein soll. Best of Chillmix. Merry Christmas Chillmix. Perfekt jetzt für im Sommer.

01:32:17.920 --> 01:32:27.720
Exzellent. So, so, so, so, so wird hier gechillt. Alles klar. So, man muss sich den Sprite anlegen

01:32:27.720 --> 01:32:38.760
und jetzt, anstatt dass man hier die Sachen direkt drauf schreibt auf das Display, schreibt

01:32:38.760 --> 01:32:43.960
man die Sachen auf das Sprite und das Sprite schreibt man auf das Display, wenn es fertig

01:32:43.960 --> 01:32:52.440
ist. Soweit, wie ich das jetzt kapiert hab. So. Also, bereiten wir das ganze mal vor.

01:32:52.440 --> 01:33:04.760
Das heißt, wir machen jetzt hier Z-Font. Z-Font. Dahin. Und wir können auch mal das

01:33:04.760 --> 01:33:13.200
Image drauf pushen, ist auch gut. Bildest du aus? Ich muss mich manchmal ein paar Azubis

01:33:13.200 --> 01:33:23.160
kümmern, ja. Ach nee, was bildest du aus? Hauptsächlich Linux und Netzwerk-Geschichten,

01:33:23.160 --> 01:33:31.760
die ich mit den Azubis mache. Das ist so eine eigene Buffering-Geschichte. Zumindest soll

01:33:31.760 --> 01:33:36.880
die Library angeblich mit Sprites im Endeffekt viel schneller klarkommen, weil es auch besser

01:33:36.880 --> 01:33:40.240
checken kann, wo sich was geändert hat. Zumindest soll es weniger flackern. Das müssen wir

01:33:40.240 --> 01:33:46.200
erstmal ausprobieren. Ihr seht ja da oben, flackert das erst, fuck. Also. Push-Image,

01:33:46.200 --> 01:33:51.640
ich muss jetzt mal kurz nachgucken, wo ich die Sache mit dem Sprite mache. Genau, jetzt

01:33:51.640 --> 01:33:58.600
muss man, dass das Ayaya als Sprite überhaupt funktioniert, muss man dem sagen Farbtiefe

01:33:58.600 --> 01:34:10.760
16 Bits, also 2 Bits Farbtiefe. Sonst sieht Ayaya ziemlich kacke aus. Create, Sprite,

01:34:10.760 --> 01:34:18.800
TFT, genau, also wir wollen das so breit haben wie das ganze Display und so hoch haben

01:34:18.800 --> 01:34:24.280
wie das ganze Display. Übrigens, die nächste Sache wird viel spannender, wir gucken, dass

01:34:24.280 --> 01:34:31.200
wir das Multithreaded machen. MonkaS. So, jetzt haben wir hier der Sprite, da malen wir

01:34:31.200 --> 01:34:37.200
jetzt unseren String drauf und wenn ich jetzt nicht ganz verkehrt liege, dann müsste das

01:34:37.200 --> 01:34:48.800
eigentlich, ich gucke mal kurz nach, da müsste das eigentlich so funktionieren. Ach nee,

01:34:48.800 --> 01:34:56.160
ha, eins habe ich noch vergessen. Swap, Swap Bites. Sonst haben wir nämlich Ayaya wieder

01:34:56.160 --> 01:35:00.960
falsch rum. Übrigens, wollt ihr mal Ayaya falsch rum sehen? Wollt ihr mal Ayaya Inverted

01:35:00.960 --> 01:35:14.040
Colors sehen? Nein, dann Cursed, Cursed Ayaya, da lasse ich das nämlich mal weg. So, ähm,

01:35:14.040 --> 01:35:19.080
dann müssten wir sagen, übrigens das müssen wir nachher machen, dann müssen wir dem noch

01:35:19.080 --> 01:35:34.880
sagen, ähm, einmalig Fill und zwar komplett, komplett schwarz machen in den Hintergrund.

01:35:34.880 --> 01:35:46.400
Ah nee, Fill Sprite. Einmal komplett schwarz machen, das ganze. So, ähm, dann können wir

01:35:46.400 --> 01:35:52.080
unser Build pushen. Ja, unser Counter soll hier in Ruhe rum, ups, in Ruhe rum countern,

01:35:52.080 --> 01:35:59.360
das interessiert mich jetzt nicht. Ähm, Set. So, das ist die Stelle, wo er anfängt zu

01:35:59.360 --> 01:36:03.680
schreiben, wenn man es nicht damit macht, deswegen das brauchen wir an der Stelle nicht. Wir

01:36:03.680 --> 01:36:08.720
geben er explizit an, wo er das ganze hinschreiben soll, also, dass er quasi ans Ende vom Bild

01:36:08.720 --> 01:36:17.000
auf, äh, oben am Bildschirm ran schreiben soll. Ich weiß, dass das gut funktioniert,

01:36:17.000 --> 01:36:20.960
Multi-Swap mit ESP, das werden wir auch gleich ausprobieren. Aber das, äh, also, was mir

01:36:20.960 --> 01:36:26.720
ja vorschwebt, ist folgendes. Also, was mir vorschwebt, ist folgendes. Also, das Ziel

01:36:26.720 --> 01:36:30.080
heute ist ja, dass wir, äh, dass wir, dass wir, dass wir Firmware-Updates machen können

01:36:30.080 --> 01:36:36.120
übers WLAN und den Progress auf dem Bildschirm sehen. Äh, was mir vorschwebt, ist, dass

01:36:36.120 --> 01:36:41.440
der Update-Server, also der, der, aber da hab ich schon ne fertige Klasse für, dieser,

01:36:41.440 --> 01:36:46.880
also sprich der Web-Server, wo ich das Update pushe, läuft mit nem eigenen Task und das

01:36:46.880 --> 01:36:52.240
Build-Refreshen läuft auch mit nem eigenen Task. Also sprich so, dass wir möglichst

01:36:52.240 --> 01:36:59.040
gut ne ESP32 ausnutzen und das alles schön flutscht und das eine nicht auf das andere

01:36:59.040 --> 01:37:04.320
Ausgabe warten muss. Weil grade, wenn man hier in der Main-Loop was schreiben würde

01:37:04.320 --> 01:37:08.820
aufs Display und es dauert irgendwie 100 Millisekunden bis es aufm Display ist, ist

01:37:08.820 --> 01:37:12.440
voll für n Arsch. Ich will meine Main-Loop-Säule so schnell durchrattern wie geht und nicht

01:37:12.440 --> 01:37:16.400
irgendwie auf Display-Ausgabe warten. Das würde ich gerne asynchron auf nem anderen,

01:37:16.400 --> 01:37:21.000
anderen Core machen. Mal gucken, wie wir das gebacken kriegen. So, äh, Drawstring,

01:37:21.000 --> 01:37:25.040
brauchen wir jetzt noch irgendwas? Achso, genau, ha, eins, eins hab ich vorher noch

01:37:25.040 --> 01:37:33.520
vergessen. Ähm, wir müssen noch die Text-Color, Set Text-Color und dem kann man jetzt sagen,

01:37:33.520 --> 01:37:41.200
wer möchte, dass der Text weiß ist und dass der Hintergrund schwarz ist. Ähm, da kann

01:37:41.200 --> 01:37:46.000
man noch eine Sache machen, die relativ praktisch ist, wenn man seinen Text ausrichten will.

01:37:46.000 --> 01:37:51.120
Man kann ihm sagen, an welcher Stelle quasi, wenn man irgendwelche ausricht, also im Angenommen

01:37:51.120 --> 01:37:55.680
ich sag, der Text soll zentriert sein, hier kann ich ihm sagen, wo der Anker von dem ganzen

01:37:55.680 --> 01:37:59.440
Text ist und das ist jetzt Top-Left, also linke obere Ecke, also sprich, der fängt

01:37:59.440 --> 01:38:05.840
auch wirklich immer oben links in der Ecke an. Ähm, so, das war's. Und jetzt müsste

01:38:05.840 --> 01:38:13.280
der eigentlich, achso, nee. Übrigens, was ich hier mache, ist falsch, nicht TFT, sondern

01:38:13.280 --> 01:38:22.160
PUSH. Und jetzt sollte der, wenn das alles richtig funktioniert, ohne zu flackern, ähm,

01:38:22.160 --> 01:38:36.000
die Sachen auf dem Bildschirm schreiben. Gucken, ob das funktioniert. MonkaS Smoke, ja. Ah,

01:38:36.000 --> 01:38:59.120
Cursed! Okay, wir machen das ganze doch mal rein. Okay, übrigens, der, der Font funktioniert

01:38:59.120 --> 01:39:16.160
nicht, ich probier mal nen Default-Font aus, ob der funktioniert. Oh, hups, Set Text, Moment,

01:39:16.160 --> 01:39:23.720
das da übrigens. Ja, der Chat hat wieder aufgepasst, Big Brain Chat. Set Text, Color und ne Position

01:39:23.720 --> 01:39:33.680
ist bescheuert. Ja, da hab ich vertippt. So ist richtig. Oh. Aha! Und das flimmert schon

01:39:33.680 --> 01:39:38.640
relativ, schon ne ganze Ecke weniger, wobei das immer weniger flimmert, ähm, mit den

01:39:38.640 --> 01:39:44.960
eingebauten Schriftdaten. Probieren wirs mal so. Ich glaube, das funktioniert mit diesen

01:39:44.960 --> 01:39:51.160
Schriftdaten nicht. Ähm, ich hab schon was vorbereitet und zwar, kennt ihr diese Standard-

01:39:51.160 --> 01:40:00.480
äh, Android-Schrift? Guck mal, es flimmert weniger, seht ihr das, Leute? Also, da kann

01:40:00.480 --> 01:40:09.520
man jetzt nix sagen, man sieht fast alles. Roboto, genau, Roboto Mono. Hast du noch Kontakt

01:40:09.520 --> 01:40:15.320
zum Friseur? Ja. Also seht ihr, Leute, mit dieser, mit dieser Technik ist das, ich könnte

01:40:15.320 --> 01:40:20.360
mir vorstellen, der Schreibvorgang ist nen Ticken langsamer, als wenn man direkt auf

01:40:20.360 --> 01:40:26.280
das Display schreibt, aber dafür flimmert das, flimmert das nicht so. Oder aber es ist

01:40:26.280 --> 01:40:30.800
deutlich schneller, ähm, weil er nur das aktualisieren muss, was er sich aktualisiert

01:40:30.800 --> 01:40:38.640
hat. Ne, Roboto, Roboto nehmen wir als, als Fontart hier. Roboto Mono Bolt nehmen wir

01:40:38.640 --> 01:40:51.600
als Fontart. Ja. Das hier. Roboto Mono Bolt. Hab ich das hier mit installiert? Wenn nicht,

01:40:51.600 --> 01:41:04.640
muss ich noch mal installieren. Ja. Yes. Max hat Doppelbuffbrick entdeckt. Ich hab das

01:41:04.640 --> 01:41:10.600
Rad neuer erfunden, ja. Aber das ist cool. Guck mal, es funktioniert ohne, dass das irgendwie,

01:41:10.600 --> 01:41:15.480
ähm, na Doppelbuffering im eigentlichen Sinne, na doch ist es, ist es, ist es im Endeffekt,

01:41:15.480 --> 01:41:20.760
weil ich male es in einen Buffer, den ich nicht anzeige. Wann gibt's denn mal wieder

01:41:20.760 --> 01:41:24.640
YouTube-Content? Ich hab drei Themen, die ich die ganze Zeit schon machen will, aber

01:41:24.640 --> 01:41:28.720
irgendwie kann ich mich nicht dazu überwinden. Ich hoffe, ich krieg's vielleicht entweder

01:41:28.720 --> 01:41:32.080
heute Abend oder morgen früh, nee, morgen früh muss ich Stream machen, irgendwann morgen

01:41:32.080 --> 01:41:38.080
hin, da ich zumindest zum aktuellen PC-Hardware-Zeug, wo ich mich äußern wollte, also, ne, mein

01:41:38.080 --> 01:41:41.280
Problem ist ja, ich möchte mir schon seit einem Jahr einen neuen Rechner kaufen und

01:41:41.280 --> 01:41:44.960
ich kann mir nix kaufen, weil es kein sinnvolles Upgrade gibt. Da wollte ich mich mal drüber

01:41:44.960 --> 01:41:51.560
auslassen. Ja, also im Prinzip ist es wirklich so eine Art Doppelbuffer, so wie der Flow690

01:41:51.560 --> 01:41:56.600
sagt, weil ich schreibe es erst in einen Buffer, der nicht auf dem Bildschirm angezeigt

01:41:56.600 --> 01:42:04.160
wird und hier switche ich dann quasi das Bild, also hier pushe ich das vorgerenderte Bild

01:42:04.160 --> 01:42:10.280
quasi nur auf den Bildschirm. Wolltest du ja mal 3059X holen? Ja, wollte ich, notgedrungen,

01:42:10.280 --> 01:42:15.200
weil es nichts anderes gibt, aber es lohnt sich nicht. Das Upgrade von einem 8700K ist

01:42:15.200 --> 01:42:26.840
einfach zu gering, außer man profitiert von den zweieinhalb mal mehr Kernen. Aber mach

01:42:26.840 --> 01:42:33.360
ich nicht. Was soll ich denn, guck mal, ich hab permanent eins bis zwei VMs laufen plus

01:42:33.360 --> 01:42:37.200
irgendwelche Spiele, die auch ein bisschen Leistung ziehen teilweise, das juckt den Rechner

01:42:37.200 --> 01:42:45.720
überhaupt gar nicht. Ich mein, es kann doch nicht sein, dass ich den Rechner vor drei

01:42:45.720 --> 01:42:51.480
Jahren gekauft habe mit 8700K, wobei die 1080T, die hatte ich noch vom letzten Rechner und

01:42:51.480 --> 01:42:56.800
die hab ich damals auch von den Media gekriegt, aber der hätte jetzt nicht Unsummen gekostet,

01:42:56.800 --> 01:42:59.840
den Rechner, den ich damals gekauft hatte, selbst mit 1000 Euro für die Grafikkarte.

01:42:59.840 --> 01:43:03.640
Dass der drei Jahre später immer noch eines der besten ist, das kann doch nicht sein,

01:43:03.640 --> 01:43:11.320
es ist doch vollkommen verkehrte Welt. In der Zeit hast du dir ne Xbox, ne Xbox plus

01:43:11.320 --> 01:43:21.520
ne Playstation, normal ne Playstation plus und ne Switch kaufen müssen, dass du konsolmäßig

01:43:21.520 --> 01:43:33.200
aktuell bist und mit einem PC drei Jahre easy. Naja, so also wir haben es geschafft,

01:43:33.200 --> 01:43:39.000
es läuft flüssiger. Sowohl Ayaya flimmert nicht, als auch unser Counter flimmert nicht.

01:43:39.000 --> 01:43:48.040
Das ist natürlich eine äußerst nice Sache. Ayaya ist leider ein bisschen groß. Ayaya

01:43:48.040 --> 01:43:58.720
ist ein bisschen groß. Kifke in elf Monate, dankeschön. Exzellenz Subscription. Dankeschön.

01:43:58.720 --> 01:44:07.920
Ein bisschen groß, dass man den Counter nicht richtig sieht. Ich mein wir könnten, wir könnten

01:44:07.920 --> 01:44:18.880
den Counter einfach, ähm, ups. Wir könnten den Counter einfach overflowing lassen. Mal

01:44:18.880 --> 01:44:23.520
gucken ob das funktioniert oder ob das dann crasht. Ich hab noch nie, ups, äh Moment.

01:44:23.520 --> 01:44:28.440
Ich hab noch nie absichtlich irgendwas overflowing lassen beim ESP32, aber wahrscheinlich wird

01:44:28.440 --> 01:44:34.640
das einfach overflowen und es wird nix passieren. So jetzt sollte der eigentlich bis 256 gehen

01:44:34.640 --> 01:44:41.840
und ne, wobei wie lang war das Short? Sehen wir gleich. Ne, wie lang war das Short? Ist

01:44:41.840 --> 01:44:58.680
es 8 Bytes? Ne, äh, ach ach, ach was weiß ich. Nehm einfach. Jetzt vorbei. Jetzt geht's

01:44:58.680 --> 01:45:09.840
nur bis 256. 16 Bit. Ja, so. So, mal gucken ob es overflowet. Ja, so ungefähr. Spack

01:45:09.840 --> 01:45:22.560
ein bisschen rum bei, aber okay. Naja, das liegt jetzt aber an mir, das liegt jetzt aber

01:45:22.560 --> 01:45:27.920
an mir, weil ich schreib hier immer nur eine Zahl. Also ich müsste eigentlich, äh, sowas

01:45:27.920 --> 01:45:33.880
hier machen. Dann ist das Problem weg. Also ich muss einfach noch ein paar Leerzeichen

01:45:33.880 --> 01:45:38.960
dahinten schreiben, dass der die Zahl, dass der die Zahl überschreibt. Das passt auf,

01:45:38.960 --> 01:45:56.560
jetzt ist es gefixt. Jetzt ist es gefixt. Habt ihr gesehen? Wisst ihr was mich ja mal

01:45:56.560 --> 01:46:04.000
interessieren würde? Wie lang das dauert. Was, was würdet ihr schätzen? Was, was würdet

01:46:04.000 --> 01:46:11.880
ihr schätzen? Wie lang dauert das Malen und auf Bildschirm pushen? 20 Millisekunden, 30,

01:46:11.880 --> 01:46:19.320
eine? Weniger als eine? Ich hab echt keine Vorstellung. Wie lang dauert das? Probieren

01:46:19.320 --> 01:46:26.320
wir mal aus. Machen wir mal Mikros für die Sache, dass es vielleicht nicht, dass es

01:46:26.320 --> 01:46:34.280
relativ schnell ist. Was ist denn bei Push-Image eine, äh, nee bei Push-Image, hier meinst

01:46:34.280 --> 01:46:41.480
du, oder? Nee, ach Moment, du meinst, äh, da. Also wenn du eine kleinere Größe einstellst,

01:46:41.480 --> 01:46:51.920
ist es abgeschnitten. Wenn du eine größere Größe, können wir ja mal machen hier. So,

01:46:51.920 --> 01:47:00.960
dann ist es abgeschnitten. Wenn du was einstellst, was größer ist, dann crash da. Hast du dir

01:47:00.960 --> 01:47:13.240
mal eine billige Capture geguckt? Okay, ich hab nix gesagt. Das ist, tipp. Anscheinend

01:47:13.240 --> 01:47:16.520
muss man gucken, dass es in der richtigen Größe ist. Oder irgendwie rescalen vorher.

01:47:16.520 --> 01:47:23.040
Frag mich nicht. Welche Capture-Card meinste, Herz93? Übrigens, irgendjemand wollte doch

01:47:23.040 --> 01:47:28.880
vorher einen Link zu was posten, was ich mir angucken soll. Äh, vielleicht hab ich das

01:47:28.880 --> 01:47:37.440
übersehen. Aber, ah ja, ich geh mal kurz durch den Chat durch. Ich hab ihm ein paar

01:47:37.440 --> 01:47:43.080
Sachen übersehen. Hi, ich habe einen Standard-Wodafone-Router, würde aber gern mein Heimnetz unterteilen

01:47:43.080 --> 01:47:46.940
in Sub-Netz und so weiter. Das geht wahrscheinlich mit dem Standard-Wodafone auch, oder? Sollte

01:47:46.940 --> 01:47:52.320
ich den Router ersetzen und ein weiteres Gerät anschaffen, das es macht, um dein Netz

01:47:52.320 --> 01:48:04.360
in Sub-Netz zu unterteilen. Ähm, ach so, hm. Nee, das geht wahrscheinlich mit dem

01:48:04.360 --> 01:48:12.160
Wodafone-Router nicht. Weil der Router bräuchte mehrere IPs, jeweils in einem Netz eine,

01:48:12.160 --> 01:48:19.480
dass das funktioniert. Sehr gute Frage, da wird ja wahrscheinlich nichts alles übrig

01:48:19.480 --> 01:48:26.280
bleiben. Also, so wie ich's gemacht hab, ist folgendes. Ich hab meinen Wodafone-Unity-Media-Connectbox,

01:48:26.280 --> 01:48:29.720
das ist ja Wodafone jetzt, und dahinter hab ich einen Mikro-Tick-Router, der das alles

01:48:29.720 --> 01:48:36.840
für mich macht. Also, ich verwende beides. Weil du kannst es ja gar nicht wirklich ersetzen.

01:48:36.840 --> 01:48:46.440
Du brauchst ja das ganze Wodafone-Zeug, wegen Kabelmodem und sowas. Und eine Fritzbox kann

01:48:46.440 --> 01:48:51.960
das auch nicht. Fritzbox ist kein wirklich guter Router, Fritzbox ist ein gutes Multifunktionsgerät.

01:48:51.960 --> 01:48:56.480
Dir wird nichts alles übrig bleiben. Dir beispielsweise einen Mikro-Tick Hex-POE oder

01:48:56.480 --> 01:49:02.920
so zu kaufen, den da. Den empfehle ich immer gerne, weil der hat ordentlich Power für

01:49:02.920 --> 01:49:09.840
den Preis und ist auch von den Features her top. Hinter die Unity-Media-Connectbox machen.

01:49:09.840 --> 01:49:18.920
Ja. Ach ja, um euch zu zeigen, dass es crasht, wenn ich zu groß... Also, ich geb jetzt mal

01:49:18.920 --> 01:49:25.920
hier die zu groß an, die Bilddimension, und jetzt sollte das ganze eigentlich crashen.

01:49:25.920 --> 01:49:44.160
Nvidia, please, what the fuck? What is happening? Was war das überhaupt? Was hab ich da gerade

01:49:44.160 --> 01:49:53.160
gedrückt? Alt-F3? Nee. Was hab ich da gerade gedrückt bei Nvidia? Kann mir das irgendjener

01:49:53.160 --> 01:50:10.320
erklären? Ja. Und ich wollte euch immer zeigen, dass es crasht. Ups. Nicht. Es crasht nicht.

01:50:10.320 --> 01:50:26.760
Es ist bloß verschoben. Ok, auch gut. Ja. Ok. Also, so viel dazu zum Router. Zum Router,

01:50:26.760 --> 01:50:48.440
wie die Cisco-Leute das immer sagen. Chat durchscrollen. Was hat ein Rechner damals

01:50:48.440 --> 01:51:03.000
gekostet? Wenn du die Grafikanne beißt, verdiene ich wahrscheinlich 3000€ in dem Dreh. Äh,

01:51:03.000 --> 01:51:15.200
nee, das ist was anderes. Das ist was anderes. Das ist das mit dem E-Ink-Display, oder? Ach,

01:51:15.200 --> 01:51:24.400
nee, den kenn ich nicht. Also, zu dem Board kann ich nichts sagen. Also, ich hab gerade

01:51:24.400 --> 01:51:29.520
einen Link zu dem Board hier gepostet. Ich weiß, dass die auch E-Ink-Displays haben.

01:51:29.520 --> 01:51:46.040
Was? USB-Capture die 23€ für eine Capture-Card? Ok. Soll denn das sein? Bestimmt, die haben

01:51:46.040 --> 01:51:50.440
bestimmt das lizenziert, dass die Watch Dogs und so verwenden dürfen. Ganz bestimmt.

01:51:50.440 --> 01:52:01.320
Aber anscheinend, anscheinend scheint es ja zu funktionieren. 23€, das kann man fast

01:52:01.320 --> 01:52:06.040
schon einfach mal ausprobieren und gut ist. Das speichere ich mir mal. Das ist eine ganz

01:52:06.040 --> 01:52:13.400
coole Sache, einfach mal ausprobieren. Hast du extra ein Netz zwischen dem Router vom ISP

01:52:13.400 --> 01:52:24.440
und deinem Router? Ja. Du kannst den Custom-Router freischalten, richtig, aber du musst erst

01:52:24.440 --> 01:52:29.040
mal einen Custom-Router finden für Vodafone, der Kabelmodem hat und alle Features, die

01:52:29.040 --> 01:52:43.440
du haben willst und da gibt es eigentlich nichts. So, ja also dazu, ist das ein komplettes

01:52:43.440 --> 01:53:03.720
Board oder ist das nur das Display? Nee, das ist ein komplettes Board. Aber irgendwie

01:53:03.720 --> 01:53:09.080
kaum GPIOs, ach hier hinten sind die GPIOs drauf. Ist eigentlich auch ein ganz cooles

01:53:09.080 --> 01:53:20.280
Teil. Ist aber ein anderes Display, oder? Ist auch ein anderer Display-Treiber, oder?

01:53:20.280 --> 01:53:29.720
Oder nicht? Ich weiß nicht. Zumindest scheint es ein ganz normales ESP32 zu sein, was schon

01:53:29.720 --> 01:53:34.920
mal ganz gut ist. Bloß dass es die GPIOs hinten hat und schaut es an auf der Seite. Wird

01:53:34.920 --> 01:53:41.480
eben auch sein, scheint bestimmt, ist bestimmt auch nicht schlecht. Ok, also weiter im Text.

01:53:41.480 --> 01:53:48.160
Wo sind wir denn stehen geblieben? Also, wir können jetzt Aja-ja malen, ohne dass das

01:53:48.160 --> 01:53:57.000
ganze flimmert. Als nächstes, oder ich überlege mal gerade, was, ja, als nächstes, wir haben

01:53:57.000 --> 01:54:02.360
zwei Sachen, was wir machen können, chat. Also, entweder probiere ich jetzt gleich das

01:54:02.360 --> 01:54:09.400
ganze Multithreader zu machen, was ich eh probieren werde, oder wir gucken, wie ich

01:54:09.400 --> 01:54:15.280
hier meinen Font rein bekomme. Das ist nämlich nicht so einfach, den Font da reinzukriegen

01:54:15.280 --> 01:54:25.240
und sag mal, ist die Musik wieder schlecht? Ja, es wird viel zu laut. So ist angenehmer

01:54:25.240 --> 01:54:32.920
von der Musik her. Also, ihr seht es ja hier, das ist hier zwar ein Font, der eingebaut

01:54:32.920 --> 01:54:37.800
ist, aber ehrlich gesagt, Roboto Mono ist mein Lieblingsfont. Und da kann man ein bisschen

01:54:37.800 --> 01:54:42.720
was lernen bei, wenn man eigene Fonts verwenden will mit dem Display, denn man muss sich

01:54:42.720 --> 01:54:48.520
den Font generieren, den man haben will, also zum Beispiel hier ist Roboto Mono als Font,

01:54:48.520 --> 01:54:58.640
da muss man sich generieren und dann muss man den Font irgendwie auf den ESP32 kriegen,

01:54:58.640 --> 01:55:06.960
was Komfort AAA, kenn ich nicht, und da muss man den Font irgendwie auf den ESP32 kriegen

01:55:06.960 --> 01:55:12.240
und da kann man was lernen bei, weil der ESP32, also man hat verschiedene Möglichkeiten da

01:55:12.240 --> 01:55:18.520
was drauf zu bekommen. Die einfachste Variante ist das hier, Procman. Also, was der macht

01:55:18.520 --> 01:55:26.840
ist, der speichert diese Daten im Flash, aber im Speicherbereich von der Firmware, also

01:55:26.840 --> 01:55:32.560
im Speicherbereich von meinem Programm. Der ESP hat allerdings noch so ein Filesystem

01:55:32.560 --> 01:55:44.400
drauf, wo ich mit der Standardpartitioniere ungefähr 2 MB, 1,5 MB, Dateien speichern

01:55:44.400 --> 01:55:51.120
kann, wie ich lustig bin und das ist auch relativ easy zu benutzen, da muss man nur zusätzlich

01:55:51.120 --> 01:55:54.520
Uploaden, also das macht man nicht alles hier drin, die muss man zusätzlich Uploaden und

01:55:54.520 --> 01:55:57.320
man muss ihm auch sagen, wie er die ganzen Sachen lesen soll. Das können wir jetzt mal

01:55:57.320 --> 01:56:02.480
machen, also wenn man Dateien auf den ESP hochladen will, ist es relativ einfach, zumindest

01:56:02.480 --> 01:56:09.560
mit Plattform IO, da muss man einfach hier einen neuen Ordner anlegen, folder und den

01:56:09.560 --> 01:56:23.400
muss man data, hallo, nicht da, da, what the fuck, da, ok, da, was ist das schon wieder,

01:56:23.400 --> 01:56:30.320
was nutzt du als Cam, das ist mein iPhone gerade. So, und hier, wenn man hier in diesen

01:56:30.320 --> 01:56:38.680
Data-Ordner was reinlegt, dann kann man das Uploaden auf den ESP32. So, und das probieren

01:56:38.680 --> 01:56:45.840
wir jetzt mal aus, es gibt hier nämlich ein Beispiel bei denen, wie man Fonts lädt vom

01:56:45.840 --> 01:56:56.760
Filesystem. Da muss ich mal hier in die Examples, smooth, ja sogar anti-aliased Fonts, das ist

01:56:56.760 --> 01:57:05.680
richtig big brain, Font Demo, Font Demo 1, Font Demo, ja genau, was auch immer, und hier

01:57:05.680 --> 01:57:12.600
macht er das ganze, also sprich, man muss den Font erstmal auf den ESP32 hochladen

01:57:12.600 --> 01:57:19.520
auf den Flash-Speicher, Hack-Font, ich kann Hack-Font, Hack-Font ist gut, ja hab ich sogar

01:57:19.520 --> 01:57:30.440
installiert, weil das ist mein Default, Default-Font-Hack-Regular, genau, so, gehen wir mal wieder hin, also

01:57:30.440 --> 01:57:35.800
sprich, man muss die Sachen hochladen auf den ESP32 in Flash, in das Flash-Filesystem

01:57:35.800 --> 01:57:38.840
und dann muss man sagen, das ganze nennt sich übrigens SPIFFS, ich hab keine Ahnung,

01:57:38.840 --> 01:57:45.840
für was SPIFFS steht, ehrlich gesagt, Apreviation, SPIFFS, hab keine Ahnung, für was steht

01:57:45.840 --> 01:57:55.280
SPIFFS, Serial Peripheral Interface Flash, ah, yes, alles klar, Chat, jetzt, wir sind,

01:57:55.280 --> 01:58:01.160
muss man sagen, Educational Stream, hab ich das überhaupt drinne stehen heute, Lehrreich,

01:58:01.160 --> 01:58:09.560
korrekt, jetzt, hier lernt man noch was, Serial Peripheral Interface Stream, Flash, we smart,

01:58:09.560 --> 01:58:17.280
chat, kann ich mir bis morgen nicht merken, ist, eine Ohre rein, andere Ohre raus, guck

01:58:17.280 --> 01:58:24.840
mal, bei Eats Delivery haben sie sogar was stehen, Eats Delivery, genau, Hack-Font,

01:58:24.840 --> 01:58:30.720
so und man muss das hochladen auf den ESP32 und dann kann man hier checken, ob das im

01:58:30.720 --> 01:58:36.000
Filesystem drinne ist und dann laden, das werden wir jetzt mal ausprobieren, wie kann

01:58:36.000 --> 01:58:43.640
ich, ah, Moment, wie kann ich das ent, hab ich das irgendwie zusammengeklappt gerade,

01:58:43.640 --> 01:58:50.600
nee, oder, nee, ach, nee, ich hab nur die Zeile kopiert, ich hab's nicht zusammengeklappt,

01:58:50.600 --> 01:58:57.560
so, das heißt, dass mein Display, mein Custom-Font anzeigen kann, wir nehmen mal Hack, wir

01:58:57.560 --> 01:59:08.080
nehmen den Hack-Font, Hack-Font ist das Beste hier, Hack-Font Bold, der ist exzellent, guckt

01:59:08.080 --> 01:59:14.880
euch mal an, Hack-Font, top, den nehmen wir jetzt, weil ich find ihn schöner als den

01:59:14.880 --> 01:59:21.480
hier, so, und was man da jetzt machen muss, ist, dass es übelst kompliziert, aber, das

01:59:21.480 --> 01:59:26.120
hab ich im Vorfeld schon mal ausprobiert, man muss, um Fonts zu generieren, also diese

01:59:26.120 --> 01:59:31.400
Library kann wohl drei verschiedene Fonts, einmal die eingebauten Fonts, dann irgendwelche

01:59:31.400 --> 01:59:37.000
Free-Type, frag mich nicht, sonst was Fonts, und für die Big-Brain-Leute, die wir natürlich

01:59:37.000 --> 01:59:44.200
alle, alle 200 Leute hier gerade sind, hoffe ich mal, chat, easy, gibt es noch die Möglichkeit,

01:59:44.200 --> 01:59:50.400
Custom-Fonts hochzuladen, die Anti-Aliast werden, und das können wir uns natürlich

01:59:50.400 --> 01:59:56.200
nicht nehmen lassen, noch mal einen schönen Anti-Aliast-Font auf unser Display zu packen.

01:59:56.200 --> 02:00:03.560
Vorher schauen wir noch mal kurz, wie lange so ein Render-Vorgang dauert, ähm, guck

02:00:03.560 --> 02:00:21.160
mal mal, ähm, Moment, jetzt, jetzt, jetzt, jetzt, jetzt kommen meine C-Kentnisse wieder,

02:00:21.160 --> 02:00:29.360
äh, ach du Scheiße, also, ähm, Vorteil, was ist, ein, Moment, Printf-Formatierung für

02:00:29.360 --> 02:00:40.560
einen, so, ähm, Unsigned-Long, was zum Teufel ist ein Unsigned-Long für einen Printf-Placeholder,

02:00:40.560 --> 02:00:43.680
wieso bist du eigentlich in Just Chatting und nicht in Science and Technology, weil ich

02:00:43.680 --> 02:00:51.040
es nicht umgestellt habe, äh, Unsigned-Long-Printf, weiß doch, weiß doch kein Mensch aus dem

02:00:51.040 --> 02:00:58.000
Kopf, aha, %lu, was auch irgendwie nicht, nicht sonderlich konsistent ist, weil ich

02:00:58.000 --> 02:01:05.760
meine, die Variable-Deklaration ist Unsigned-Long und hier ist Long, Long-Unsigned, es, es ist

02:01:05.760 --> 02:01:12.240
auch, äh, Low-Brain, ja, so, gucken wir mal, wie lange das dauert, wenn der sowas hier

02:01:12.240 --> 02:01:19.880
rendert, also quasi das, das, das neue Sprite auf das, auf das Bild raus, äh, Printen,

02:01:19.880 --> 02:01:36.480
gucken wir mal, äh, 14 Millisekunden, 14 Millisekunden, das ist, das dauert ein bisschen, 14 Millisekunden

02:01:36.480 --> 02:01:45.320
ist relativ ordentlich, ich meine, nicht, dass es bei der Anwendungssache stören würde,

02:01:45.320 --> 02:01:51.320
ja, ähm, wo liest du die MS ab, hier, das sind, das sind Mikrosekunden, 14 da sind 14

02:01:51.320 --> 02:02:02.920
Millisekunden, also umgerechnet Millisekunden sind ungefähr 14 Millisekunden, hier speichert

02:02:02.920 --> 02:02:07.600
er sich Mikrosekunden beim Start und hier nimmt er die aktuelle Sache minus dem Start,

02:02:07.600 --> 02:02:11.240
also sprich, das wie lange es, wie lange es gedauert hat, das ist so der, der, der Easy-Mode-

02:02:11.240 --> 02:02:18.480
äh, Clock-Dings-Timer schlechthin bei Arduino, 14 Millisekunden, das ist in der Tat ziemlich

02:02:18.480 --> 02:02:23.760
viel, aber für den Anwendungszweck vollkommen ausreichend, wo wir wieder mal am Thema sind,

02:02:23.760 --> 02:02:26.720
deswegen muss man das Ganze auch Multithreaded machen, zumindest schwebt mir das vor, das

02:02:26.720 --> 02:02:32.080
Multithreaded zu machen, weil es viel einfacher ist dann zu sagen, ok, ich schreib das jetzt

02:02:32.080 --> 02:02:39.640
Async, also, äh, Async, Chatnet, nicht das wieder, na, also, Asynchron, ich sag einfach

02:02:39.640 --> 02:02:43.600
nur schreib das raus, übergebe das dem anderen Thread und der andere Thread schreibt mir

02:02:43.600 --> 02:02:47.720
das dann aufs Display, während ich hier weitermachen kann in der Main-Loop, das ist doch eigentlich

02:02:47.720 --> 02:02:57.680
ganz nice, ja, 60 FPS ist ok, ja, es ist nicht wirklich im Vergleich zu normalen 60 Hz, aber

02:02:57.680 --> 02:03:01.360
für so eine Operation auf so einem Controller ist 14 Millisekunden, also 14 Millisekunden

02:03:01.360 --> 02:03:06.800
ist für solche Sachen, ist das eigentlich nicht wenig, ähm, wie gesagt, in 14 Millisekunden

02:03:06.800 --> 02:03:20.840
kann ich wahrscheinlich prim zahlen, das fragt mich nicht bis wohin berechnen, ja, aktuell

02:03:20.840 --> 02:03:26.940
sind wir ziemlich genau bei 60 FPS, ja, gut, also weiter im Text, ähm, wir wollten uns

02:03:26.940 --> 02:03:39.480
hier Font, Font generieren, so, und um sich nen Font selbst zu generieren, das ist übelst,

02:03:39.480 --> 02:03:46.040
wie hieß das, so, das ist total wir, also, so sehen unsere Fonts aktuell aus und so sollen

02:03:46.040 --> 02:03:50.720
unsere Fonts aussehen, also wir wollen die Fonts schön Anti-Alias haben, dass das auch

02:03:50.720 --> 02:03:57.120
was fürs Auge ist, dass das auch was hermacht, ähm, so, und die Sache ist jetzt die, damit

02:03:57.120 --> 02:04:03.320
man den Kram, man braucht diese Fonts, also die Schriftarten, braucht man in diesem Format

02:04:03.320 --> 02:04:09.920
VLW, ein Schriftartenformat, den die wahrscheinlich nur die Big Brains Leute unter uns je bisher

02:04:09.920 --> 02:04:13.520
gehört haben, also ich hab's noch nie gehört, ich weiß, ich hab ihr schonmal von einem

02:04:13.520 --> 02:04:21.360
Schriftartenformat VLW gehört, ich nicht, ähm, und das erzeugt man mit einem extra

02:04:21.360 --> 02:04:28.640
Editor zum Fonts erzeugen, oh, auf Java-Basis ist das ganze auch noch, also sprich, wir

02:04:28.640 --> 02:04:37.960
müssen uns allen Ernstes jetzt was auf Java-Basis installieren, nur, damit wir Fonts generieren

02:04:37.960 --> 02:04:48.400
können, das ist ziemlich low, ja, oder, Processing, ich weiß nicht was das ist, ich hab keine

02:04:48.400 --> 02:04:52.680
Ahnung was das ist, wir werden uns den Kram jetzt bloß für Linux 64bit runterladen, was

02:04:52.680 --> 02:04:59.160
ist das überhaupt, was, was ist Processing, welcome Processing, Dan explains, wenn Dan

02:04:59.160 --> 02:05:10.680
das explains, das ist alles gut, Processing Java für Ingenieure, so, also, VGAT, wir machen

02:05:10.680 --> 02:05:18.400
mal einen eigenen Ordner, mkdir, äh, Dance Game, passende Ordner für die Java-Anwendung,

02:05:18.400 --> 02:05:25.920
VGAT, so, weiß gar nicht ob ich überhaupt Java installiert hab, oder Java, wie die coolen

02:05:25.920 --> 02:05:42.560
Sachen, Leute, Leute, Java, Java, ASMR Stream, so, ähm, also, entpacken wir das ganze mal,

02:05:42.560 --> 02:05:53.560
dein Mic ist kacke für ASMR, ja das stimmt, das ist nicht teuer genug, das nutzt Coding,

02:05:53.560 --> 02:05:59.520
was, das nutzt Coding Train immer für seine Game in X Minuten Programmiervideo, hat geknackst,

02:05:59.520 --> 02:06:06.800
oh, es hat geknackst, hab ich übersteuert gerade, Java, ja das hat geknackst, weil ich

02:06:06.800 --> 02:06:14.040
dran gegriffen hab, das ist, wenn ich hier an den Mikrofonarm greife, ich mein, ich

02:06:14.040 --> 02:06:17.640
kann das natürlich auch die ganze Zeit so von uns, aber das machen wir nicht, weil das

02:06:17.640 --> 02:06:23.880
ist ja gar nicht Sinn und Zweck der Übung heute, ja, manchmal komm ich mit bescheuerten

02:06:23.880 --> 02:06:28.040
Ideen dabei, so, jetzt gehen wir mal hier rein, starten den Kram, und ich hoffe, dass ich

02:06:28.040 --> 02:06:33.000
irgendeine Java Runtime da hab, gucken wir mal, ob's startet, oh, das ist gestartet,

02:06:33.000 --> 02:06:37.840
ich hab legit kein Plassen Schimmer, was das hier ist, wirklich nicht, keine Ahnung, äh,

02:06:37.840 --> 02:06:41.920
Sketch Excellent Speichern, ich will das auch gar nicht verwenden, was ich verwenden will

02:06:41.920 --> 02:06:50.840
ist das hier, Create Font, und hier kann man nämlich Schriftarten im VLW Format erstellen,

02:06:50.840 --> 02:06:56.760
was auch immer, also, wieso keine Facecam, weil ich ESP32-Cam oben rechts hab, übrigens

02:06:56.760 --> 02:07:02.320
meine Frage, wie findet ihr das mit der Kamera, wie gefällt euch das, dann sieht man wenigstens

02:07:02.320 --> 02:07:07.680
auch mal was, ne, ich find das viel spannender, wenn man auch mal sieht, was passiert, so,

02:07:07.680 --> 02:07:24.480
Font, also, Hack, Hack Bold, 48, gut, wir machen mal 48, wir machen mal 48, und wir machen

02:07:24.480 --> 02:07:30.480
24, ich glaub, die zwei Sachen sind, eins sind, sind, sind ganz gut, Schriftgröße,

02:07:30.480 --> 02:07:38.720
also Hack 24 für kleine Sachen, und Hack 48 für große Sachen, excellent, so, und jetzt

02:07:38.720 --> 02:07:41.680
machen wir den Shit wieder zu, ich will's nicht, ich will's gar nicht sehen, so, wie

02:07:41.680 --> 02:07:48.160
war das, Sketch, Sketch Data, da liegt's, so, also, wir müssen den Kram jetzt kopieren,

02:07:48.160 --> 02:07:55.040
die Fonts, hallo, Hack, what the fuck, warum hat das kein Auto für Vollständige, normalerweise

02:07:55.040 --> 02:07:58.640
macht's das so immer, also, auch wenn ich klein geschrieben hab, obwohl's groß geschrieben

02:07:58.640 --> 02:08:08.560
wird, so, und jetzt muss ich das kopieren nach Documents, Platform.io, Projects, Display,

02:08:08.560 --> 02:08:13.680
und dort in den Data-Ordnern, so, und jetzt seht ihr, jetzt hab ich die Schriftarten hier

02:08:13.680 --> 02:08:20.400
drinne in meinem Projekt, und nun muss ich die Dinger uploaden, äh, ich uploaden, ähm,

02:08:20.400 --> 02:08:27.040
ich brauch ne Shell, nun muss ich, oh, ich brauch ne Platform.io Shell, wohlgemerkt,

02:08:27.040 --> 02:08:33.960
ähm, und jetzt muss ich die Sachen uploaden zu meinem ESP32, also sprich, ähm, eine optionale

02:08:33.960 --> 02:08:39.040
leichte Transparenz wäre gut, das ist aber ganz schön advanced, ich weiß nicht, ob's

02:08:39.040 --> 02:08:43.800
das sowas kann, äh, übrigens, jemand hat vorhin gefragt, was wir heute machen, vielleicht

02:08:43.800 --> 02:08:47.680
sollte ich das nochmal kurz erzählen, weiß gar nicht, wer das war, ich hab's, ich wollte

02:08:47.680 --> 02:08:52.760
es eigentlich machen, hab's dann voll verdrängt, ähm, hier, Phirps2 hat gefragt, also, was

02:08:52.760 --> 02:08:58.520
wir heute machen ist, ich hab mir nen TTGO, äh, T-Display gekauft, also sprich, ein ESP32

02:08:58.520 --> 02:09:06.000
mit Farbdisplay, was ich machen will ist, Firmware-Update übers WLAN, und, ähm, Status vom Firmware-Update

02:09:06.000 --> 02:09:20.480
anzeigen, auf dem Display. So, ähm, ich glaub, so ging das, also sprich, der uploadet jetzt

02:09:20.480 --> 02:09:25.280
diese zwei, das, das braucht manchmal ein bisschen, das, äh, spackt, spackt öfters

02:09:25.280 --> 02:09:32.440
mal ein bisschen rum, das, das ist, das ist nicht so ganz zuverlässig, dieser upload auf

02:09:32.440 --> 02:09:36.680
den ESP32, vielleicht muss ich auch mal kurz einstöpseln, wieder aus- und wieder einstöpseln

02:09:36.680 --> 02:09:41.120
und so, weiß man nicht so genau, das spackt manchmal ein bisschen rum, auf jeden Fall,

02:09:41.120 --> 02:09:48.080
der, der uploadet jetzt, die, diese zwei Fonts in den Flash vom ESP32, in das Flash-File-System,

02:09:48.080 --> 02:09:52.920
das Gute daran ist, nochmal so, warum man das macht, ist, man hat beim ESP32, man hat

02:09:52.920 --> 02:10:00.000
ungefähr 1,3 Gigabyte, oder sagen wir, 1,25, nicht Gigabyte, was laber ich denn, Megabyte,

02:10:00.000 --> 02:10:09.560
Gigabyte, ähm, also man hat ungefähr 1,25 Megabyte Platz, Alter, kannst du mal uploaden,

02:10:09.560 --> 02:10:16.280
auf dem ESP32 für seine eigene Software, 1,25 Megabyte, das ist jetzt nicht ultra viel,

02:10:16.280 --> 02:10:23.960
aber auch nicht extrem wenig, dann hat man noch eine zweite Partition, 1,25 MB, ähm,

02:10:23.960 --> 02:10:28.720
für Updates, dass man quasi, während man, während das System läuft, man schon einen

02:10:28.720 --> 02:10:35.600
Firmware-Update draufschreiben kann, was genauso groß ist, und, ähm, dann hat man

02:10:35.600 --> 02:10:40.560
noch den restlichen Speicher von den 4 MB, hat man ungefähr nochmal, ungefähr nochmal

02:10:40.560 --> 02:10:47.040
so 2,1,5 MB Speicher-Flash-File-System, und in das Flash-File-System laden wir das Ganze

02:10:47.040 --> 02:10:54.440
hoch, denn unser Sketch, also das Firmware nennt sich Sketch bei Arduino, hat halt eine

02:10:54.440 --> 02:10:58.760
gewisse Größenlimit, und da kriegen wir die Fonts gar nicht rein, das heißt, die Fonts

02:10:58.760 --> 02:11:01.920
schieben wir auf das Flash-File-System, und dann laden wir das so hoch.

02:11:01.920 --> 02:11:05.560
Nutzt du deine eigene WLAN-Upload-Lib, die du im Stream gebastelt hast?

02:11:05.560 --> 02:11:08.640
Ja, aber die habe ich mittlerweile ein bisschen verbessert und erweitert, die ist mittlerweile

02:11:08.640 --> 02:11:14.160
ziemlich gut, finde ich, die hat sogar Lifetime-Events, also sprich Update-Started, Update-Ended,

02:11:14.160 --> 02:11:18.600
Update-Progress und sowas, das ist eigentlich ganz gut geworden, ich ziehe das Ganze mal

02:11:18.600 --> 02:11:23.680
kurz raus und stecke es wieder rein, mal probieren, ob das funktioniert jetzt, weil irgendwie

02:11:23.680 --> 02:11:44.120
der Upload, der Upload mag nicht. Ah, jetzt funktioniert's. Übrigens, hört man mich

02:11:44.120 --> 02:11:57.080
eigentlich von der, hört man mich hier irgendwie über den iPhone Stream? Ne, oder? Ne, ne,

02:11:57.080 --> 02:12:04.160
hat keinen Sound. Moin Nico, so gut, jetzt hat er das Ganze

02:12:04.160 --> 02:12:13.760
hochgeladen auf den ESP32-IP-Lig, Monka-IP-Lig, ja. So, und nun können wir gucken, dass wir

02:12:13.760 --> 02:12:18.120
zugreifen können anhand dieses Tutorials auf die neue Schrift, also das Ziel ist, dass

02:12:18.120 --> 02:12:22.120
die Schriftart, wir machen gleich Ayaya mal ein bisschen kleiner vielleicht, warte mal,

02:12:22.120 --> 02:12:25.840
wir hatten noch eine kleinere Ayaya-Variante, dass man das ein bisschen schöner sieht mit

02:12:25.840 --> 02:12:31.560
der Schriftart. Also unsere Schrift sieht aktuell so aus und wir wollen sie so aussehen

02:12:31.560 --> 02:12:36.160
lassen. So, wir haben die Schriftarten hochgeladen, jetzt müssen wir das machen, was der hier

02:12:36.160 --> 02:12:46.080
auch im Tutorial geschrieben hat. TFT Begin, Set Total, hier, das da. Wisst ihr was, wir

02:12:46.080 --> 02:12:50.120
machen, wir, ja, vorbei, wir können's, wir können's uns mal kopieren, wobei, ich mach

02:12:50.120 --> 02:12:56.120
das wahrscheinlich anders. So, im Setup, im Setup müssen wir jetzt gucken, ob die Schriftarten

02:12:56.120 --> 02:13:10.400
da sind. No way. Unser, unser Flash geht immer. Lul. So, Exist, das ist das, das ist das Wichtige.

02:13:10.400 --> 02:13:17.400
So, also wir machen ein If und jetzt gucken wir, ob unser Font da ist, also in dem Beispiel

02:13:17.400 --> 02:13:32.760
ist es NotoSansBolt15 und bei uns ist es halt HackBolt24 und HackBolt48. So, und wir wollen

02:13:32.760 --> 02:13:42.200
übrigens einen Fehler schmeißen, also sprich, äh, keine Ahnung, Print, ja, FontsNotFound,

02:13:42.200 --> 02:13:50.080
CakeW, ok, und dann ESP Restart. Hat zwar keinen Sinn zu restarten, aber was sollen

02:13:50.080 --> 02:13:54.000
wir machen, wir können ja, wir können ja, wir können ja schlecht, schlecht weiter machen

02:13:54.000 --> 02:13:59.040
ohne, ohne die Fonts, wenn man die Fonts verwenden wollen, ne. So, also, und übrigens das If

02:13:59.040 --> 02:14:14.120
ist komplett falsch, IfNotExists oder NotExists, ne, Moment, äh, LowBrain, warte mal, ne, stimmt

02:14:14.120 --> 02:14:29.680
das, was ich jetzt mache, ne, oder, doch, doch, jetzt richtig, ne, naja, ja, oder, ne,

02:14:29.680 --> 02:14:37.000
und, und müsste das sein, oder bin ich jetzt einfach total, ne, ne, mit und, mit und wird

02:14:37.000 --> 02:14:43.320
es ja nicht stimmen, ne, es, also, mal angenommen, der, der Font hier existiert nicht, dann ist

02:14:43.320 --> 02:14:58.480
das hier true, genau, wenn irgendein Font nicht existiert, dann, äh, ja, ja, dann,

02:14:58.480 --> 02:15:03.280
dann ist das genau, weil ansonsten, wenn das hier true ist, geht er gleich hier rein, äh,

02:15:03.280 --> 02:15:06.040
wenn das hier falsch ist, macht er den nächsten, und wenn der true ist, geht er hier rein, ok,

02:15:06.040 --> 02:15:14.240
das passt, weil mit und wird es nicht funktionieren, bei und, das würde nur funktionieren, wenn

02:15:14.240 --> 02:15:22.800
beide Fonts nicht da wären, das ist, ja, ne, ne, das, das ist ja nicht das, ok, also

02:15:22.800 --> 02:15:36.680
Fonts not found, ok, ähm, und dann, wie geht's weiter, Fonts missing, bla, bla, bla, und

02:15:36.680 --> 02:15:44.000
jetzt Fonts load, load font, genau, ok, also, set font, dann machen wir das hier weg, load

02:15:44.000 --> 02:15:53.200
font, ähm, load font, hack bold, achso, in welchem Format muss man das eigentlich hinschreiben,

02:15:53.200 --> 02:16:13.080
äh, so, Moment, what the fuck, ah, ne, nur ohne Endung, also so, ok, hack bold 48, so,

02:16:13.080 --> 02:16:25.400
und jetzt sollte der unseren Font verwenden, gucken wir mal, ob er das macht, macht er

02:16:25.400 --> 02:16:36.160
das, ah, guck mal, hack font, excellent hack font, da ist er, ganz schön fetter Text,

02:16:36.160 --> 02:16:42.160
ja, er hat den Font geladen, guck mal, und jetzt braucht er, mit dem custom font braucht

02:16:42.160 --> 02:16:48.240
er schon 20 Millisekunden das ganze zu rendern, also, wir haben es nicht schneller gemacht

02:16:48.240 --> 02:16:57.240
gerade, geht auch kursiv, klar, du kannst jeglichen Font nehmen, der du willst, ja, kannst

02:16:57.240 --> 02:17:03.560
auch kursiv machen, aber kursiv, das ist ein Mono-Spell, übrigens, ganz wichtig, sollte

02:17:03.560 --> 02:17:09.040
ich vielleicht an der Stelle auch nochmal erwähnen, für solche Sachen, wenn man, ähm,

02:17:09.040 --> 02:17:15.760
wissen will, wo man auf dem Display ist, macht euch das Leben einfach mit Mono-Space-Fonts,

02:17:15.760 --> 02:17:21.760
also es gibt ja zwei grundsätzlich unterschiedliche Arten von Fonts, du hast, what the fuck, du

02:17:21.760 --> 02:17:26.680
hast Mono-Space-Fonts, sowas wie das hier, Mono-Space-Fonts bedeutet, jedes Zeichen,

02:17:26.680 --> 02:17:35.040
übrigens auch das Leerzeichen, äh, ist exakt gleich breit, also sprich, das Simikolon ist

02:17:35.040 --> 02:17:39.920
genauso breit wie das F, sieht vielleicht nicht so aus auf den ersten Blick, aber Mono-Space-Fonts,

02:17:39.920 --> 02:17:44.000
jedes Zeichen ist exakt gleich breit, so, und dann hast du die normalen, was ist das,

02:17:44.000 --> 02:17:55.520
Serif-Dings, Fonts, da sind die Buchstaben unterschiedlich breit, ja, wenn ich endlich

02:17:55.520 --> 02:17:58.760
mal einen neuen PC zusammenbauen kann, kann ich das machen, aber es gibt ja nichts Neues,

02:17:58.760 --> 02:18:05.320
was ich mit kaufen kann, also Ende des Jahres vielleicht, und dadurch, wenn man Mono-Space-Fonts

02:18:05.320 --> 02:18:10.040
für sowas nimmt, ist es ganz nützlich, da kann man besser ausrechnen, wo man ist, zum

02:18:10.040 --> 02:18:17.760
Beispiel, ich möchte ja später eine Fortschrittsanzeige auf dem Display machen, so, die, alter, die

02:18:17.760 --> 02:18:25.440
Fortschrittsanzeige wird dann ungefähr so aussehen, keine Ahnung, so, irgendwie so

02:18:25.440 --> 02:18:31.880
wird die Fortschrittsanzeige später aussehen, also sprich, da unten drunter und da unten

02:18:31.880 --> 02:18:41.720
drunter schreiben wir dann irgendwie, keine Ahnung, 24% oder 24 von 100%, so, das ist

02:18:41.720 --> 02:18:47.040
das Ziel, dass ich das auf den Bildschirm schreiben kann, am Ende, mit einem Bildchen

02:18:47.040 --> 02:18:50.600
drüber, vielleicht machen wir wirklich ein kleines obendrüber und gucken, ob das Ganze

02:18:50.600 --> 02:19:08.200
funktioniert. So, ja, und gerade sowas hier geht halt nur

02:19:08.200 --> 02:19:14.040
gescheit mit Mono-Space-Fonts, oder, einfacher, deutlich einfacher mit Mono-Space-Fonts, weil

02:19:14.040 --> 02:19:18.440
ich kann mich darauf verlassen, bei einem Mono-Space-Font, dass der Punkt exakt so breit

02:19:18.440 --> 02:19:22.380
ist wie das da und exakt so breit wie das da, das heißt, ich probiere einmal aus, wie

02:19:22.380 --> 02:19:26.680
viel Zeichen ich brauche, dass ich einen Fortschrittsbalken einmal quer über den Bildschirm bekomme und

02:19:26.680 --> 02:19:32.880
dann ist gut und dann ist es immer so, egal was ich reinschreibe, tja, bei nicht Mono-Space-Fonts

02:19:32.880 --> 02:19:38.720
wäre das halt, halt viel komplizierter. So, also, haben wir doch schon einiges geschafft,

02:19:38.720 --> 02:19:42.940
wir haben hier unser Display, wir haben hier ein Bild, können wir malen und wir können

02:19:42.940 --> 02:19:47.000
unseren Font malen, jetzt gucken wir mal, ob wir das mit dem kleineren Font auch machen

02:19:47.000 --> 02:20:01.240
können, Small Font, schauen wir mal, ob das funktioniert, ja, kleinerer Font ist auch

02:20:01.240 --> 02:20:16.120
da, sehr gut, sehr schön, exellent, Hacker Mans. So, wir machen uns jetzt, by the way,

02:20:16.120 --> 02:20:20.880
nochmal, wir machen das hier mal rückgängig, ich hatte doch vorhin ein kleines Ayaya, oder?

02:20:20.880 --> 02:20:26.040
Oh ne, ich hab das kleine Ayaya nicht gespeichert, Ayaya, hab ich das noch in der History? Hab

02:20:26.040 --> 02:20:37.080
ich das noch in der History drin? Ha, ich sag's euch, beste, Clipboard-History, beste,

02:20:37.080 --> 02:21:00.040
das ist Ayaya Small, wow, was auch, what the fuck, Format, was zum, was zum, was macht

02:21:00.040 --> 02:21:25.600
der mit meiner History? What, warum ist das denn, warum sind da so viele Dinge in der

02:21:25.600 --> 02:21:31.720
History drin? Na gut, ok, dann lad ich das nochmal runter, das ist im Old, die kleine

02:21:31.720 --> 02:21:52.360
Ayaya Variante, die hier, Ayaya Small, Ayaya Small, Make File, zack, Open, jetzt aber,

02:21:52.360 --> 02:22:04.280
so, das da weg, einmal Arduino Includes, so, jetzt haben wir das kleine Ayaya, was ja 64

02:22:04.280 --> 02:22:14.640
mal 63 ist, was, das heißt Einformat, 64 mal 63, das kriegen wir jetzt nämlich ein

02:22:14.640 --> 02:22:30.800
bisschen besser, oh, was hat er jetzt verschmerzt? Ah, ok, so, Upload, jetzt müsste es funktionieren,

02:22:30.800 --> 02:22:34.320
so, das kriegen wir jetzt nämlich ein bisschen besser angeordnet, das Bild können wir nämlich

02:22:34.320 --> 02:22:41.840
jetzt auch nehmen, beispielsweise beim Update-Vorgang hier in der Mitte anzuzeigen, ja, das ist

02:22:41.840 --> 02:22:46.240
doch gut, dann zeigen wir das in der Mitte an, oh, das ist Big Brand, wie kriegen wir

02:22:46.240 --> 02:22:52.240
das jetzt in die Mitte? Moment, wie kriegen wir das Bild in die Mitte? So, ok, dann machen

02:22:52.240 --> 02:23:05.960
wir doch nochmal hier, Int, Ayaya, so, die Breite ist 64, Moment, Ayaya W ist 64, Alter,

02:23:05.960 --> 02:23:17.160
ich kann hier mal schreiben, Ayaya W ist 64, Ayaya H ist 63, ähm, wie kriegen wir das

02:23:17.160 --> 02:23:22.360
jetzt in die Mitte? Das müssen wir dann, das müssen wir uns irgendwie ausrechnen, also,

02:23:22.360 --> 02:23:28.960
wir kriegen es in die Mitte, indem wir Ayaya durch 2, nee, Moment, Moment, Moment, also,

02:23:28.960 --> 02:23:34.040
wie kriegen wir, wie kriegen wir das Bild in die Mitte? Wenn ich das, wenn ich die Breite

02:23:34.040 --> 02:23:44.120
vom Display nehme durch 2, dann hängt es ein bisschen nach links, ne, gucken wir mal, dann

02:23:44.120 --> 02:24:02.040
hängt es ein bisschen, oh, ah, Moment, Moment, äh, das müssen wir kurz mal ein bisschen

02:24:02.040 --> 02:24:09.640
runter machen, keine Ahnung, 70, und übrigens, das ist auch falsch an der Stelle, wo ich

02:24:09.640 --> 02:24:16.600
das mache, hier ist die Breite des Bildes, hier ist, wo ich anfangen will, X, da, so,

02:24:16.600 --> 02:24:26.840
und wenn ich das jetzt hoch lade, dann sollte das halbwegs in der Mitte sein, aber bisschen

02:24:26.840 --> 02:24:34.520
verschoben, das müssen wir anders machen, so, guckt, jetzt ist es ein bisschen verschoben,

02:24:34.520 --> 02:24:37.880
aber es ist schon, es hat sich bewegt, es hat sich, es hat sich, es hat sich, es ist

02:24:37.880 --> 02:24:58.360
ge-moved ein bisschen, ähm, so, also, mal kurz, kurz was aufs iPhone drauf stellen,

02:24:58.360 --> 02:25:04.600
besser ist, hat sich nichts getan, oder, vom Fokus her, nee, so, also, jetzt haben wir

02:25:04.600 --> 02:25:10.200
das in der Mitte, ähm, so, jetzt müssen wir noch sagen, also, die, okay, lassen wir

02:25:10.200 --> 02:25:18.600
überlegen, die Breite, genau, Minusbild durch 2 muss es sein, haben wir ja Glück, dass

02:25:18.600 --> 02:25:39.920
die Breite durch 2 teilbar ist, ups, oh, was ist Nvidia, was ist das, nee, Moment, das

02:25:39.920 --> 02:25:47.240
ist nicht Nvidia, was ist das überhaupt, ist das diese, ist das diese Xbox Game Bar

02:25:47.240 --> 02:25:58.240
oder sowas, okay, Shift, Control, P, was, was ist das unter Windows, Windows, Shift,

02:25:58.240 --> 02:26:27.360
Control, P, Print, what the fuck, was ist das, ist es Nvidia, ist es was von VMWare, VMWare,

02:26:27.360 --> 02:26:41.280
wo kommt das überhaupt her, das ist bestimmt irgendeine Game Bar Geschichte, irgendjemand

02:26:41.280 --> 02:26:48.320
eine Ahnung, wo das hier herkommt, okay, wir können ausprobieren, wir können mal ausprobieren,

02:26:48.320 --> 02:26:57.720
das, ah, okay, das ist VMWare, das ist eine VMWare Geschichte, weil, weil in Windows selbst

02:26:57.720 --> 02:27:05.760
ist es nicht so, es, es sieht aus, es sieht aus wie, äh, das VMWare, und was ist das

02:27:05.760 --> 02:27:21.000
für eine Funktion, ist es einfach nur, einfach nur so, P, nee, Pause, kannst deinen VM Schirm

02:27:21.000 --> 02:27:37.840
drücken, aber es steht hier nicht drin, oder, hier, da, da steht es, was ist, Host Profiles,

02:27:37.840 --> 02:27:53.280
what the fuck, Suspend, nee, ich hab keine Ahnung, was es ist, es geht mir auf den Saktor

02:27:53.280 --> 02:27:58.880
Steuerung, P ist, so uploaden wir das Ganze mal und gucken, ob Ayaya jetzt in der Mitte

02:27:58.880 --> 02:28:10.920
ist, was programmierst du heute, du siehst rechts oben, wo wir gerade dabei sind, ähm,

02:28:10.920 --> 02:28:16.920
aktuelles Ziel ist, also was heute bei rauskommen soll ist, dass wir, ich hab mir einen ESP32

02:28:16.920 --> 02:28:21.680
mit Farbdisplay gekauft, dass wir ein Update machen können, ein Firmware Update über

02:28:21.680 --> 02:28:31.200
das WLAN, und dass man auf dem Display den Progress angezeigt bekommt, so, aktuell sind

02:28:31.200 --> 02:28:42.600
wir noch dabei, mit meinen Bildern schön in der Mitte zentriert, lul, ähm, okay, äh,

02:28:42.600 --> 02:28:46.680
by the way, warum ist der Text, der Text, ach so, den Text hab ich verschoben, ja gut,

02:28:46.680 --> 02:28:55.280
jetzt ist es in der Mitte, und jetzt kann der Text auch wieder schön an Null sein, so

02:28:55.280 --> 02:29:00.560
und jetzt, und so stelle ich mir den Updateprozess im Endeffekt auch vor, es gibt ein Bild in

02:29:00.560 --> 02:29:04.560
der Mitte, halt ein Update, ein Update-Bild, jetzt vielleicht nicht Ayaya, oder meint ihr

02:29:04.560 --> 02:29:10.840
Ayaya ist das perfekte Bild für ein System-Update, ich bin mir da nicht so sicher, so, und da

02:29:10.840 --> 02:29:15.840
unten printen wir dann sowas hier hin, in der Richtung, so, probieren wir mal aus, so

02:29:15.840 --> 02:29:21.480
was, sowas in der Richtung, printen wir dann dahin, keine Ahnung, Progress, könnte jetzt

02:29:21.480 --> 02:29:23.920
ein bisschen breit sein, wir können bei der Gelegenheit gerade mal zählen, wie breit

02:29:23.920 --> 02:29:29.040
wir das Ganze machen können, mit welcher Sprache, ähm, die Dinger kannst du nur gescheit mit

02:29:29.040 --> 02:29:36.720
C und C++ programmieren, es ist zu 90% C mit ein bisschen C++, ey, ich find das sieht

02:29:36.720 --> 02:29:45.600
richtig cool aus, als Update, als Update-Vorgang, Bild, das gefällt mir, das hat was, das ist

02:29:45.600 --> 02:29:55.000
wie ein Sternchen, okay, hey, das ist nice, krieg ich da noch, kriegen wir noch zwei Punkte

02:29:55.000 --> 02:30:03.680
rein, kriegen wir noch zwei Punkte rein, oder ist dann zu weit, aber perfekt, wenn das Update

02:30:03.680 --> 02:30:12.720
fertig ist, Ayaya, kann man machen, ah, das ist eins zu viel, okay, also, die Idee ist

02:30:12.720 --> 02:30:20.520
dahinter folgendes, das hier ist der Progress, und das andere ist, ähm, so, insgesamt, ich

02:30:20.520 --> 02:30:24.200
kann keine Leerzeichen reinmachen, auf jeden Fall, wenn ich Leerzeichen reinmache, kommt

02:30:24.200 --> 02:30:32.040
das Layout durcheinander, ich muss normale Zeichen reinmachen, well done, nee, Endscreen

02:30:32.040 --> 02:30:37.680
ist Reboot, guck genau, jetzt würde das Update durchlaufen, dumm dumm dumm dumm, hier unten

02:30:37.680 --> 02:30:43.320
kommt da noch die, hier unten kommt da noch die, äh, Anzeige, wobei das machen wir in

02:30:43.320 --> 02:30:47.840
einem, hier unten kommt da noch die Anzeige dahunter, sowas wie, keine Ahnung, 24 von

02:30:47.840 --> 02:30:58.960
100%, und das ist dann ein richtig nicer Update-Screen, nee, mit Escape-Character spackt der auch

02:30:58.960 --> 02:31:03.720
rum, also man muss, selbst wenn man Mono-Space fahren, das ist doch nice, oder, stellt euch

02:31:03.720 --> 02:31:09.680
mal vor, das bewegt sich, das wäre richtig krass, das wäre nochmal BigBrain-Update-Anzeige,

02:31:09.680 --> 02:31:15.040
Fernwärts-Upload, so null, dumm dumm dumm dumm dumm, und wenn's voll ist, zack, Reboot,

02:31:15.040 --> 02:31:19.560
Bildschirm aus, Bildschirm aus, wir machen Bildschirm aus und dann Reboot, das heißt

02:31:19.560 --> 02:31:24.960
Leute, es wird Zeit zum BigBrain-Teil des Streams zu kommen, wir müssen ein Update machen,

02:31:24.960 --> 02:31:35.720
vorher das Ding ins WLAN packen, so, ähm, das gefällt mir, das, das gefällt mir, Leute,

02:31:35.720 --> 02:31:39.360
jetzt können wir, jetzt können wir euch überlegen, wollen wir das Bild behalten als Update-Bild

02:31:39.360 --> 02:31:43.520
oder wollen wir da irgendwas, irgendwas Seriöses nehmen, ich meine, letztendlich kann das

02:31:43.520 --> 02:31:51.960
hier, jeder machen wie er will, ich mag beispielsweise die JoyPixels Emojis, man könnte zum Beispiel,

02:31:51.960 --> 02:31:58.080
ähm, das hier nehmen, dieses Refresh oder nee, äh, Reload, wie heißt das Emoji von

02:31:58.080 --> 02:31:59.080
dem?

02:31:59.080 --> 02:32:07.680
One Result, excellent, irgendwas mit Arrow, ah, da ist es doch, man könnte sowas hier

02:32:07.680 --> 02:32:13.600
nehmen für Update, übrigens die Seite ist fucking lahm, ja, aber wir sollen Ayaya behalten,

02:32:13.600 --> 02:32:18.400
okay, okay, wir behalten Ayaya, ja, man, die seriösere Variante wäre, wäre wahrscheinlich

02:32:18.400 --> 02:32:23.240
das hier zum Uploaden, ja, seit wann, seit wann muss man sich da eigentlich registrieren?

02:32:23.240 --> 02:32:36.360
Hm, so, gut, okay, kommen wir mal zum Big Brain Teil des Streams, ich kopiere jetzt

02:32:36.360 --> 02:32:42.760
mal meine Updater-Klasse, die ist fix und fertig, dann machen wir nichts mehr hier, ähm, äh,

02:32:42.760 --> 02:32:48.480
Moment, wie muss ich das File nennen, ah, Moment, ich muss mal kurz bei mir ins, ins,

02:32:48.480 --> 02:32:58.040
ins Bitbucket, nicht ins Bitbucket, ins Git-Frontend und schauen, ob ich meinen Updater hab, Updater,

02:32:58.040 --> 02:33:15.760
okay, so, Updater, zack, muss ich die Datei erstmal copy-pasted kriegen, ich kann kurz

02:33:15.760 --> 02:33:27.880
erklären, wie der Updater funktioniert, ähm, so, zack, exellent, ähm, so, oh, ich muss,

02:33:27.880 --> 02:33:33.320
ich muss den Webserver noch installieren, ja, dann geht's natürlich nicht, also, ähm,

02:33:33.320 --> 02:33:36.400
mein Ziel ist ja die ganze Zeit schon gewesen, ich hab das schon mal in einem anderen Stream

02:33:36.400 --> 02:33:41.840
gemacht, dass man, und nur mal zum verdeutlichen, das ist gar nicht so easy, äh, oh, ich hab's,

02:33:41.840 --> 02:33:47.240
ich hab's verschoben, das war keine gute Idee, Max, ist das immer noch, ich, ich glaube,

02:33:47.240 --> 02:33:52.520
es ist egal, ob ich verschiebe, weil ich hier den, den Content Capture, also, die Sache

02:33:52.520 --> 02:34:01.000
ist die, wenn man ein Update machen möchte, gibt es von Haus aus schon verschiedene Varianten,

02:34:01.000 --> 02:34:07.680
das Einfachste ist über USB, so, fertig, das nächste ist, was eingebaut ist, man kann dem

02:34:07.680 --> 02:34:11.960
Ding sagen, sie sollen sich ein Update abholen, übrigens, ist das wieder ein bisschen zu

02:34:11.960 --> 02:34:16.240
laut, die Musik, oder passt das jetzt, ne, die passt, oder, Musik passt, so, das nächste

02:34:16.240 --> 02:34:21.000
ist, man kann das Update abholen lassen von einem Server, und das dritte ist, man kann

02:34:21.000 --> 02:34:26.000
das Update auf das Gerät draufschieben, das muss man aber selbst machen, und es gibt nichts

02:34:26.000 --> 02:34:31.440
fertiges dafür, was das Ganze über HTTPS macht, und ich persönlich bin ja ein großer

02:34:31.440 --> 02:34:38.360
Fan von Updates über HTTPS, das hat nämlich zwei riesen Vorteile, erstens, die Firmware

02:34:38.360 --> 02:34:45.480
wird verschlüsselt übertragen, zweitens, etwaige Passwörter, die man als Authentifizierung

02:34:45.480 --> 02:34:50.560
davor setzt, so nach dem Motto, nur der Gerätehersteller darf eine neue Firmware einspielen, weil er

02:34:50.560 --> 02:34:58.240
das Passwort hat, sind auch verschlüsselt, also, Update über HTTPS bietet sich wirklich

02:34:58.240 --> 02:35:03.400
an, die Sache ist nur die, es gibt nichts fertiges dafür, und ich hab vor ner Weile

02:35:03.400 --> 02:35:08.600
schonmal angefangen, so nen Updater zu programmieren, der übrigens hat nicht funktioniert, weil

02:35:08.600 --> 02:35:17.320
ich noch ein paar Sachen inkluden muss, der, ja, das hab ich schon gemacht, nen Updater

02:35:17.320 --> 02:35:23.400
programmiert, der das macht, also sprich, das ist nen HTTPS Server, der wartet drauf,

02:35:23.400 --> 02:35:30.360
dass man, ähm, auf Port 8443, defaultmäßig, dass man ein Update startet, so, ich muss

02:35:30.360 --> 02:35:34.440
jetzt noch ein paar Sachen hinzufügen, nämlich, als Webserver Library verwendet das Ding

02:35:34.440 --> 02:35:55.880
diesen hier, ESP32 HTTPS Server, hieß doch so, hallo, den hieß doch so, doch, ja, und

02:35:55.880 --> 02:35:59.040
den gabs auch als Plattformer, oh, das weiß ich genau, weil den hab ich als letztes installiert,

02:35:59.040 --> 02:36:06.400
ja, da is er doch, so, immer das neueste nehmen, weil die mit den alten Versionen anfangen,

02:36:06.400 --> 02:36:10.680
weiß nicht was, warum, warum man mit den alten Versionen anfängt, keine Ahnung, so, installieren

02:36:10.680 --> 02:36:20.160
wir das Ganze, und dann muss ich noch ein paar Helper Sachen inkluden, die hab ich auch

02:36:20.160 --> 02:36:24.480
in jedem Projekt drinne, kann ich gleich schonmal zeigen, die sind auch, die haben sich auch

02:36:24.480 --> 02:36:32.640
so über die letzten, letzter Zeit ein bisschen, ja, ein bisschen verfeinert, so ein paar Sachen,

02:36:32.640 --> 02:36:48.880
die man immer braucht, äh, ups, äh, was für ein Ding, das ist Manjaro Linux, Manjaro

02:36:48.880 --> 02:36:55.200
Linux mit i3 WM, so, und jetzt, werden wir das Ganze mal kompilieren, und ich erklär

02:36:55.200 --> 02:37:00.160
kurz wieder, wie der Updater funktioniert, ähm, indem ich ihn nämlich einfach mal anlege,

02:37:00.160 --> 02:37:11.200
so, erstmal den ganzen Kram kompilieren, so, also, ähm, wie man das Ganze benutzt, ist

02:37:11.200 --> 02:37:17.880
relativ einfach, man legt sich eine Variable an, ähm, also erstmal inkluden das Ganze

02:37:17.880 --> 02:37:29.520
übrigens, äh, Updater, so, und dann gibt es ein Update, ein Update Server, den nennt

02:37:29.520 --> 02:37:33.920
man dann, keine Ahnung, irgendwie so, und dem übergibt man, glaube ich, ne, dem übergibt

02:37:33.920 --> 02:37:38.840
man kein Port, so, ähm, also wie gesagt, das ist ne Update, ja klar sind, die hab ich

02:37:38.840 --> 02:37:44.760
mal gebastelt, und ich muss wahrscheinlich grad mal neu starten, weil der irgendwie

02:37:44.760 --> 02:38:00.920
nicht mag, what the fuck, ah, oh ne, fuck, ich hab das, oh ne, jetzt ist er noch kaputt,

02:38:00.920 --> 02:38:05.400
ich hab das letztens umgebaut, also, okay, fangen wir mal ganz von vorne an, also, wir

02:38:05.400 --> 02:38:09.640
werden das Ding jetzt ins WLAN packen, und dann werd ich meinen Update Server verwenden,

02:38:09.640 --> 02:38:14.000
wo man Updates zu dem System pushen kann, und äh, quasi neue Firmware übers WLAN drauf

02:38:14.000 --> 02:38:18.600
packen, die Sache ist nur die, ich hab das letztens geupdatet, das war nämlich vorher

02:38:18.600 --> 02:38:25.560
keine Klasse, also keine C++ Klasse, das war so ne lose zusammenhängende, äh, Public,

02:38:25.560 --> 02:38:29.960
quasi Functions in diesem Namespace, ich hab da jetzt ne Klasse draus gebastelt, und

02:38:29.960 --> 02:38:37.640
dass das funktioniert, braucht man wirklich die aller, aller neueste Version von diesem,

02:38:37.640 --> 02:38:43.320
äh, HTTPS Server, ohne, ohne geht das Ganze nicht, so, und deswegen müssen wir den ganzen

02:38:43.320 --> 02:38:50.000
Rahmen jetzt mal klonen, von dem seinem Git, sonst funktioniert das nicht, und um die Sache

02:38:50.000 --> 02:38:54.440
noch komplett zu machen, es gibt ne Pull Request, da hab ich auch letztens was reingeschrieben,

02:38:54.440 --> 02:38:59.800
ähm, es gibt ne Pull Request von dem Dude, den muss man auch noch merchanten, dass es

02:38:59.800 --> 02:39:03.360
funktioniert, also, dass es doppelt, doppelt kommt, man braucht die allerneueste Version

02:39:03.360 --> 02:39:08.920
von diesem Server, weil ich hab's erst vorgestern umgebaut, und man muss auch noch ein Pull

02:39:08.920 --> 02:39:12.480
Request merchanten von ihm, dass das Ganze funktioniert, machen wir jetzt einfach mal

02:39:12.480 --> 02:39:22.200
schnell, ich denk mal in 2, 3 Wochen hat er das hoffentlich gemercht und gut ist, so,

02:39:22.200 --> 02:39:27.400
und jetzt sollte der Kram auch kompilieren, das ist wieder, warum das Ganze nicht kompiliert

02:39:27.400 --> 02:39:33.120
ist, weil C++ kacke ist, ich, ich mach heute den ganzen Tag schon C++ und hab mich noch

02:39:33.120 --> 02:39:37.720
nicht über C++ aufgeregt, aber es gibt so ein paar Sachen, eigentlich fast alles an

02:39:37.720 --> 02:39:44.240
C++, was scheiße ist, unter anderem eine Sache, die mir absolut nicht einleuchtet, ähm, wo

02:39:44.240 --> 02:39:50.120
C sharp teilweise besser ist im Interop mit C als C++, was ja irgendwie widersinnig ist

02:39:50.120 --> 02:39:55.640
bei einer Sprache, die aus C entstanden ist, aber eine Sache zeig ich euch mal, die bei

02:39:55.640 --> 02:40:01.000
C++, ich versteh, warum sie so ist, aber warum man da nichts als zur Hilfe eingebaut hat,

02:40:01.000 --> 02:40:11.200
versteh ich nicht, also, ähm, vollkommen egal, was hier drum herum passiert, was man hier

02:40:11.200 --> 02:40:16.400
macht ist, man registriert Methoden, die aufgerufen werden, wenn man in diesem Web-Server diese

02:40:16.400 --> 02:40:22.400
URL aufruft, also geht jemand, geht jemand auf meinen ESP32, auf diese URL-Stats, Updates,

02:40:22.400 --> 02:40:30.800
Restart, ähm, C sharp ist nicht aus C++ entstanden, so, ähm, geht man dahin, also sprich, geh

02:40:30.800 --> 02:40:38.200
ich auf die IP von meinem ESP32 und das Stats, dann geht er in diese Methode rein und, ähm,

02:40:38.200 --> 02:40:44.800
liefert diesen String hier zurück, so, und jetzt seht ihr mal, was richtig sackt an C++,

02:40:44.800 --> 02:40:53.000
der Typ hat das so gemacht, dass man hier einen Callback übergibt, also sprich, hier

02:40:53.000 --> 02:40:59.120
übergibt man ne Funktion, die aufgerufen wird, wenn halt diese URL aufgerufen wird,

02:40:59.120 --> 02:41:04.400
also sprich, url wird aufgerufen im Web-Server, ich wird an diese Funktion übergeben zum

02:41:04.400 --> 02:41:12.200
Handeln des ganzen, so, und in C++ ist es jetzt so, bzw. in C, eigentlich in C++, man kann,

02:41:12.200 --> 02:41:19.440
also ich versuch euch das jetzt mal zu verdeutlichen, was das Problem ist, also, ich mach jetzt

02:41:19.440 --> 02:41:23.400
hier mal ne Funktion, ne Funktion, die nen Callback braucht, also irgendwie was und ich,

02:41:23.400 --> 02:41:30.320
äh, QtChat und der möchte als Callback ne Funktion haben, die einfach nur nichts macht,

02:41:30.320 --> 02:41:34.400
einfach nur aufgerufen werden kann, also, was man, nur, ich versuch, ich versuch das

02:41:34.400 --> 02:41:40.360
jetzt mal, ups, ne warte mal, oh fuck, ich krieg noch nicht mal die Syntax für Callbacks

02:41:40.360 --> 02:41:55.200
hin, ähm, so, so, glaub so, also, was das jetzt macht ist, also man hat ne, man hat

02:41:55.200 --> 02:42:02.400
hier ne Funktion, man hat hier ne Funktion, die, die, der kann, die kann ich halt aufrufen

02:42:02.400 --> 02:42:07.840
und der Funktion übergebe ich, ne zeige auf ne andere Funktion, die diese wiederum aufrufen

02:42:07.840 --> 02:42:13.280
kann, also im Prinzip genau das, was hier auch passiert, ich registriere hier nen Händler,

02:42:13.280 --> 02:42:18.160
wenn slash stats aufgerufen wird auf meinem Webserver, dann wird das weitergereicht an

02:42:18.160 --> 02:42:23.240
die Funktion, die ich vorher registriert hab, das nennt sich Callback, das ist, in C sharp

02:42:23.240 --> 02:42:27.360
gibt sowas relativ günstig als Events, da muss man so ne Scheiße mit, mit Pointer rum

02:42:27.360 --> 02:42:33.600
geschiebe gar nicht machen, das ist einfach eingebaut, aber alles noch okay, das ist halt,

02:42:33.600 --> 02:42:41.960
das ist der C-Way, so jetzt würde man ja denken, C++ ist ja, quasi, einmal aus C entstanden

02:42:41.960 --> 02:42:46.480
und sie, ähm, übrigens die Klasse sollte vielleicht nicht Main heißen, sondern ne,

02:42:46.480 --> 02:42:52.000
Lul heißt die Klasse, ähm, aber zumindest sollte man erwarten, dass bei einer Sprache,

02:42:52.000 --> 02:42:58.920
bei einer Sprache, die aus C hervorgegangen ist, äh, so das Interop, die, also sprich,

02:42:58.920 --> 02:43:03.560
die Zusammenarbeit mit C ganz gut funktioniert und wenn ich jetzt sowas hier aufrufen möchte,

02:43:03.560 --> 02:43:09.800
zum Beispiel, ich hab ne Klasse, die heißt Lul und die Klasse Lul hat ne Methode, die

02:43:09.800 --> 02:43:21.720
heißt, äh, void, keine Ahnung, say, poggers, so und dann hab ich noch was, keine Ahnung,

02:43:21.720 --> 02:43:29.880
say, ajajaja, ist ja auch vollkommen egal, wie das ganze heißt, so und hier möchte ich

02:43:29.880 --> 02:43:39.000
jetzt, quasi, diese, diese C, diesen C-Style-Callback verwenden, allerdings will ich sagen, okay,

02:43:39.000 --> 02:43:47.000
QChat, ähm, nimm mal als Callback, say, ajajaja und man würde eigentlich vermuten, dass das

02:43:47.000 --> 02:43:54.460
ohne Probleme funktioniert, aber man sieht schon, es geht nicht, so, also ich möchte

02:43:54.460 --> 02:44:01.880
als Callback eine Funktion von der Klasse registrieren, so und das geht nicht, das funktioniert

02:44:01.880 --> 02:44:07.840
nicht, ähm, weil das sagt, also quasi, in der, in der objektorientierten Sprache, die

02:44:07.840 --> 02:44:14.520
aus C entstanden ist, haben sie es nicht für notwendig, ähm, nein, Lambda mit This Capture

02:44:14.520 --> 02:44:18.800
geht auch nicht, kann ich dir gleich auch beweisen, dass es nicht geht, also sprich

02:44:18.800 --> 02:44:22.840
bei einer Sprache, die, also einer objektorientierten Sprache, die aus C hervorgegangen ist, ist

02:44:22.840 --> 02:44:29.540
der Interop mit C-Callbacks so dermaßen schlecht, dass es eigentlich schon fast wieder lächerlich

02:44:29.540 --> 02:44:34.040
ist, also was, es gibt keine Möglichkeit, das ganze hier zu machen, das geht nicht,

02:44:34.040 --> 02:44:41.160
es ist nicht vorgesehen, als, als Funktion, eine, eine, eine Methode einer Klasse, als,

02:44:41.160 --> 02:44:47.640
als klassischer Oldschool-C-Funktionszeiger zu verwenden, das geht nicht, das geht in

02:44:47.640 --> 02:44:53.920
C++20 mit ganz viel Template-Hacks und dann aber auch nur komplett, komplett hirnverbrannt,

02:44:53.920 --> 02:45:02.880
wie sie es gemacht haben, ähm, und mit nem, mit nem, mit nem Capture-Lambda geht das ganze

02:45:02.880 --> 02:45:06.320
auch nicht, das habe ich nämlich auch am Anfang gedacht, ach easy, es f**k Capture-Lambda,

02:45:06.320 --> 02:45:09.840
nein, funktioniert nicht, man könnte natürlich sowas hier machen, das wäre jetzt relativ

02:45:09.840 --> 02:45:15.800
einfach, say ayaya, man sieht schon, der Auto vervollständigt gar nichts, aber das funktioniert

02:45:15.800 --> 02:45:20.920
auch nicht, achso, übrigens, man muss das Capture noch, oh this, so, und das geht auch

02:45:20.920 --> 02:45:36.760
nicht, weil, äh, ich mich verschrieben habe, ach Moment, so, nein, es geht auch nicht,

02:45:36.760 --> 02:45:43.000
also erstens, erstens darf man das, darf man das nicht, nicht Capture, ja, selbst wenn

02:45:43.000 --> 02:45:46.840
ich es nicht richtig schreibe geht es nicht, aber jetzt haben wir richtig, QChat war es

02:45:46.840 --> 02:45:51.840
not declared in Discord, es, es, es klappt nicht, aber übrigens die Fehlermeldung ist

02:45:51.840 --> 02:46:01.040
ein bisschen merkwürdig, äh, Moment, ich glaube, ich hab mich vertippt, normalerweise

02:46:01.040 --> 02:46:07.640
müsste der mir sagen, er kann es nicht Capture'n, normalerweise müsste der, hab ich mich verschrieben?

02:46:07.640 --> 02:46:15.160
Ja, genau, das ist, das ist der, das ist der eigentliche, es gibt keine Konvertierung

02:46:15.160 --> 02:46:20.960
von einem Lambda, der Captured zu Vault-Pointer, also sprich, Lambda kann ich nicht verwenden

02:46:20.960 --> 02:46:27.560
und das was Timo sagt geht auch nicht, das geht nur, wenn es Static ist und Static verlier

02:46:27.560 --> 02:46:32.640
ich ja die, die Zuordnung zu meiner Instanz, also sprich, das funktioniert auch nicht,

02:46:32.640 --> 02:46:37.800
wenn ich jetzt sagen würde, äh, also es geht nicht, glaube ich, es geht nicht, äh, wenn

02:46:37.800 --> 02:46:44.040
ich jetzt sagen soll, dann sagt er mir, nein geht nicht, weil nicht Static, Moment, ach,

02:46:44.040 --> 02:46:48.080
ich bin ja, ich weiß, ok, ich weiß was er, ich weiß was er für Schmerz hat, erstmal,

02:46:48.080 --> 02:46:51.480
erstmal machen wir das richtig, erstmal mal das richtig, dass es überhaupt ne Chance hat

02:46:51.480 --> 02:46:56.360
zu funktionieren, ich muss das vorher deklarieren, aber es funktioniert auch so nicht, jetzt

02:46:56.360 --> 02:47:02.440
kriegen wir nämlich vielleicht auch ne richtige, ne richtige Fehlermeldung, genau, jetzt sagt

02:47:02.440 --> 02:47:07.640
er mir nämlich, ok, äh, kann ich nicht, kann ich nicht konvertieren, weil ein Lambda-Ausdruck,

02:47:07.640 --> 02:47:15.320
der Captured, nicht implizit nach Vault-Pointer konvertiert werden kann, was, Interop, C++C,

02:47:15.320 --> 02:47:19.960
ok, also Lambda funktioniert schon mal nicht, man könnte jetzt sagen, ok, weißt du was,

02:47:19.960 --> 02:47:25.360
scheiß auf Lambda, wir übergeben die Methode direkt, als Callback geht auch nicht, dann

02:47:25.360 --> 02:47:31.400
sagt er nämlich, non-Static, so, äh, Timo, das glaube ich dir nicht, das geht nämlich

02:47:31.400 --> 02:47:39.280
nicht, also da würde mich echt mal Code interessieren, so, du kannst sagen, lull, say, say, aja ja,

02:47:39.280 --> 02:47:44.640
dann sagt er dir, geht nicht, weil nicht Static, das einzige was, die einzige Chance, die man

02:47:44.640 --> 02:47:51.920
hat ist, das hier Static zu machen, so, übrigens das geht nicht, weil man Static wieder nicht

02:47:51.920 --> 02:47:57.840
im Header deklarieren darf, was, was auch schon wieder, jetzt weiß ich, jetzt weiß ich nicht,

02:47:57.840 --> 02:48:05.920
was er für, für Schmerzen hat, aber, man muss es Static machen, ja, die Fehlermeldungen

02:48:05.920 --> 02:48:12.800
sind, sind auch ein bisschen, ein bisschen, was, du musst den Adressoperator davor setzen,

02:48:12.800 --> 02:48:26.880
und dann, und dann, dann, mag er auch nicht, kann, kann, kann, kann, also Timo, mich würde

02:48:26.880 --> 02:48:30.720
brennend interessieren, wie du das in deinem Projekt machst, weil, aus meiner Sicht, ist

02:48:30.720 --> 02:48:37.280
das schlicht und ergreifend nicht möglich, außer mit C++ 20 und ganz abartigen Templatext.

02:48:37.280 --> 02:48:47.000
Ja, wenn man Standard Function verwendet, dann geht das, das funktioniert, wenn ich hier

02:48:47.000 --> 02:48:52.240
das C++-Konstrukt dafür verwende, dann funktioniert das, die Sache ist nur die, ähm, wir gehen

02:48:52.240 --> 02:48:56.120
jetzt ja davon aus, dass diese Funktion aus einer ONC-Library kommt, die das eben nicht

02:48:56.120 --> 02:49:02.040
anbietet, also sprich, was, wo ich keine, wo ich keine, keine, äh, Möglichkeit habe,

02:49:02.040 --> 02:49:06.760
was zu ändern, wenn, wenn es mein eigener Code ist, ist es kein Problem, aber, weil

02:49:06.760 --> 02:49:12.560
das halt, sagen wir mal, sowas wie FFmpeg oder sowas, wenn das keine Möglichkeit gibt,

02:49:12.560 --> 02:49:17.120
die, die, äh, die Zeiger da irgendwie über ein Parameter rein zu gehen, hast du gelitten,

02:49:17.120 --> 02:49:24.120
es ist wirklich, es ist wirklich lächerlich, ja, also es ist komplette Witz, also sprich,

02:49:24.120 --> 02:49:28.480
ich kann bei einem klassischen Callback keine Methode verwenden, was mich schon wieder komplett

02:49:28.480 --> 02:49:32.960
dran hindert, die meisten Sachen günstig in der Klasse zu rappen, dass es schöner zu

02:49:32.960 --> 02:49:41.120
verdienen ist. So, die einzige Möglichkeit, die es gibt, ist, es, es gibt die meisten,

02:49:41.120 --> 02:49:47.480
die meisten C-Libraries bieten die Möglichkeit, dass man hier noch einen Custom, einen Custom-Parameter

02:49:47.480 --> 02:49:56.640
übergibt. So, sowas da. So, das funktioniert. Dann kann ich das nämlich Static machen,

02:49:56.640 --> 02:50:03.800
und ähm, hier noch den Zeiger auf die Klasse hier mit, es ist so eklig, wer hat sich das

02:50:03.800 --> 02:50:10.480
wieder ausgedacht, C-Interop von C++ müsste eigentlich das einfachste auf der Welt sein,

02:50:10.480 --> 02:50:15.640
da hat sich bei, hat sich dem C++ Gremium jemand gedacht, ne, also, also C-Libraries

02:50:15.640 --> 02:50:20.720
mit Callback, ne, die unterstützen wir nicht. Das brauchen wir nicht. Ich weiß, warum es

02:50:20.720 --> 02:50:25.560
nicht so ohne weiteres geht, weil unter der Hauben und Funktionsaufruf in der Klasse nicht

02:50:25.560 --> 02:50:30.120
so aussieht, sondern immer quasi die Klassenreferenz mit da fort, aber da hätten sie halt im Compiler

02:50:30.120 --> 02:50:33.040
ein bisschen irgendwie im Standard sich mal was ausdenken müssen, dass das funktioniert.

02:50:33.040 --> 02:50:39.880
Kann doch nicht sein, das ist, das ist komplett lächerlich, dass das nicht aus C++ raus funktioniert.

02:50:39.880 --> 02:50:45.960
So, jetzt habe ich mal mit einer Runde C++ gerantet, es gibt noch sehr viel andere Sachen,

02:50:45.960 --> 02:50:50.920
warum C++ sackt, ähm, zum Beispiel schlicht und klar in der Standard-Library viele Sachen

02:50:50.920 --> 02:50:55.560
fehlen, von den Sachen, die, also, von den Sachen, die in der Standard-Library sind,

02:50:55.560 --> 02:50:59.960
denen fehlen viele Funktionen, ähm, es gibt ganz viele Sachen, wo ich mich bei C++ drüber

02:50:59.960 --> 02:51:09.960
aufregen kann, ähm, tja, naja, zum Beispiel, zum Beispiel schon, dass man, ähm, eine C++-String

02:51:09.960 --> 02:51:16.200
nicht printf'en kann und sowas, oder, oder, keine, kein, kein Printf-Ersatz gibt, der

02:51:16.200 --> 02:51:21.640
mit C++-Konstrucken klarkommt und sowas. Es gibt diese Standard-Out-Geschichte hier,

02:51:21.640 --> 02:51:27.720
aber kein ordentliches Printf. C++-Alternative, wenn man wirklich eine Alternative zu C++

02:51:27.720 --> 02:51:34.440
machen will und man mit reinem C nicht zurechtkommt, kann man sich Rust angucken, aber Rust ist

02:51:34.440 --> 02:51:42.680
ultimativ Big Brain. Also Rust ist nochmal ganz anderer Ansatz. So, ähm, um jetzt mal

02:51:42.680 --> 02:51:50.200
zu der eigentlichen Sache hier zurückzukommen, also, sprich, unser Update-Vorgang. Ich hab

02:51:50.200 --> 02:51:56.760
jetzt meinen, ich räume jetzt mal ein bisschen auf hier, ähm, ich hab jetzt meinen, meinen

02:51:56.760 --> 02:52:01.680
Code für den Update-Server hier reincopy-pasted. Äh, ich muss mal gucken, ob ich das nicht

02:52:01.680 --> 02:52:05.160
auf GitHub demnächst updaten kann. Ich werde euch mal ganz kurz erzählen, wie das, wie

02:52:05.160 --> 02:52:15.040
das funktioniert. Ähm, ach so, ja klar, also wenn du, jetzt bloß der Flo96 schreibt, wenn

02:52:15.040 --> 02:52:18.960
du natürlich was anderes willst, was so quasi fast in die gleiche Kerbe schlägt wie C und

02:52:18.960 --> 02:52:25.560
C++ und sowas, dann Rust. Ähm, C Sharp ist meine persönliche Programmiersprache. C Sharp

02:52:25.560 --> 02:52:31.600
ist, finde ich, vom, von der Konsistenz her, also wie dass ich das, wie das, die Logik,

02:52:31.600 --> 02:52:37.080
von der inneren Logik her, ähm, von der Standard Library, von den Funktionen, wie intuitiv

02:52:37.080 --> 02:52:42.520
sich das bedienen lässt, die beste Sprache, die es gibt. Aus meiner Sicht. Also, was von

02:52:42.520 --> 02:52:47.520
Microsoft, was ich wirklich loben muss, ja. Da hat, da hat er wirklich, da Heilsberg damals

02:52:47.520 --> 02:52:51.520
ganze Arbeit geleistet und die, die jetzt dran arbeiten. Wirklich top. Ich muss, muss

02:52:51.520 --> 02:52:56.160
ich auch wirklich was, Sachen von Microsoft loben, kommt, kommt auch noch vor. So, ich

02:52:56.160 --> 02:53:00.320
werde jetzt mal ganz kurz zeigen, wie das funktioniert. Mit dem Update. Ich werde euch

02:53:00.320 --> 02:53:05.800
auch dann Demonstrieren, dass es funktioniert. Als erstes müssen wir mal eine WLAN-Verbindung

02:53:05.800 --> 02:53:15.160
aufbauen. So, und dazu kommentieren wir mal den, obei, wisst ihr was? Wir lassen das

02:53:15.160 --> 02:53:19.160
einfach. Wir schieben das mal ein bisschen runter, dass es nicht stört. Ähm, so, jetzt

02:53:19.160 --> 02:53:26.080
machen wir hier. Init WLAN. Achso, der macht das wieder. Nein, nein, okay. Hallo. Ah, der

02:53:26.080 --> 02:53:35.040
löscht das. Okay. Ähm, also als erstes, include WIFI, auch mal so. So, wir stellen

02:53:35.040 --> 02:53:40.600
jetzt eine WLAN-Verbindung her mit dem ESP32. Und über das WLAN können wir dann die Updates

02:53:40.600 --> 02:53:46.240
pushen an das Ganze. Ähm, das funktioniert folgendermaßen. Das ist glücklicherweise

02:53:46.240 --> 02:53:50.600
relativ einfach. Also, falls irgendjemand von euch auch mal vorhat, mit dem ESP32 oder

02:53:50.600 --> 02:53:54.920
so, oder irgendwie mit so ein paar kleinen Controllern, äh, was zu machen, kann ich

02:53:54.920 --> 02:54:00.200
euch, äh, nur ans Herz legen, kauft euch irgendein ESP32-Entwickler-Board. Gibt es

02:54:00.200 --> 02:54:05.040
eine gescheite C-Sharp-Umgebung für Linus? Ja, Rider. Top. Rider ist leist, äh, also

02:54:05.040 --> 02:54:11.240
.NET Core mit Whistle Studio Code ist auch gut. Aber, äh, Rider ist noch mal eine Nummer

02:54:11.240 --> 02:54:15.400
besser. Fast besser als Whistle Studio, könnte man sagen. Rider ist leider nicht umsonst.

02:54:15.400 --> 02:54:22.200
Aber Trial. Und eine Trial, die du endlich lang resetten kannst. Lul. Ähm, genau, also

02:54:22.200 --> 02:54:25.960
wie gesagt, ich kann euch das nur empfehlen. Probiert's mal aus. So ein ESP, die Basics

02:54:25.960 --> 02:54:29.720
mit dem ESP32 sind wirklich ziemlich, sind wirklich ziemlich easy. So, jetzt stellen

02:54:29.720 --> 02:54:37.280
wir eine Verbindung zum WLAN her. Also, Wi-Fi. Set Hostname. Da denken wir uns über irgendein

02:54:37.280 --> 02:54:48.360
Hostname aus, ähm, wie man das Ding nennen. Hier, das Ding heißt Display. Oder Studentenzern,

02:54:48.360 --> 02:54:53.040
dann gibt's das umsonst, ja. Äh, Liko sagt, ich suche eine schlanke Fileserver-Software,

02:54:53.040 --> 02:54:57.920
die ich als VM laufen lassen kann. Soll aber kein Sharing-Sache sein, also kein Next-Level.

02:54:57.920 --> 02:55:03.560
Fileserver-Sache? Warum nicht Samba den Klassiker schlechthin, was Fileserver angeht? Samba

02:55:03.560 --> 02:55:06.640
ist auch so ziemlich das einzige, was du verwenden kannst, weil du willst ja wahrscheinlich Windows-Clients

02:55:06.640 --> 02:55:13.560
unterstützen. Ich mein, NFS wäre so die andere Variante, aber, ja. Samba, du willst Windows

02:55:13.560 --> 02:55:20.080
unterstützen. Wer kein Windows unterstützt, wird nicht verwendet. Weil alle, weil die restliche

02:55:20.080 --> 02:55:27.600
Welt Windows verwendet. FTP, wenn nicht Samba, dann nimm NFS. Oder FTP ist ja die Oldschool-Variante,

02:55:27.600 --> 02:55:32.040
ja. Web-DAF, Web-DAF kannst du auch nehmen oder so. Aber Samba ist wahrscheinlich das

02:55:32.040 --> 02:55:37.400
einfachste. So, also wir stellen erstmal ein Hostname ein. Das ist ganz nützlich, weil

02:55:37.400 --> 02:55:42.600
es dann, wenn man einen Router hat, wo sich der ESP per DHCP was abholt, dann steht, wenn

02:55:42.600 --> 02:55:48.720
man Glück hat, das klappt nicht immer, steht dann dieser Name im Router dabei. Also sprich,

02:55:48.720 --> 02:55:51.680
dann heißt das Ding nicht Espressive, sondern das Ding heißt Display. Das heißt, man kann

02:55:51.680 --> 02:55:56.120
es besser zuordnen im Router. Also es funktioniert nicht immer. Ähm, so. Das erste sage ich

02:55:56.120 --> 02:56:00.040
immer mal Disconnect, das ist so ein Tick von mir, dass er alle Sachen, die irgendwie

02:56:00.040 --> 02:56:03.440
an sind oder gespeichert, dass er erstmal wegschmeißt. Ist eigentlich bescheuert, wir

02:56:03.440 --> 02:56:09.120
haben hier gebootet, also wird es nicht connected sein. Dann sagt man ihm, was man verwenden

02:56:09.120 --> 02:56:13.800
will. Man möchte Wi-Fi Station Mode verwenden, das ist ganz normaler, äh, ganz normaler,

02:56:13.800 --> 02:56:22.120
ähm, Mode. Nee, äh, Set, Set, nee, einfach nur Mode. Das ist quasi ganz normaler WLAN-Client.

02:56:22.120 --> 02:56:32.560
Ähm, dann noch eine Sache, die ich nicht verkehrt finde, Set, Autoconnect, auf false, das bedeutet

02:56:32.560 --> 02:56:37.840
meines Wissens nach, er speichert sich keine WLAN-Daten irgendwo im Flash. Und er macht

02:56:37.840 --> 02:56:41.200
auch kein Autoconnect beim nächsten Reboot, sondern immer erst, wenn man es hier in dem,

02:56:41.200 --> 02:56:48.400
im Programm macht. So. Allerdings, so widersprüchlich es klingt, Autoreconnect setzt sich auf true,

02:56:48.400 --> 02:56:53.000
weil Autoreconnect bedeutet, wenn die Verbindung abbricht, im laufenden Betrieb, dann baut

02:56:53.000 --> 02:57:00.320
er sie wieder auf. Ähm, so, und jetzt kommt das eigentliche, Wi-Fi, Beginn, und da schreibe

02:57:00.320 --> 02:57:07.040
ich rein meine SSID und mein Passwort. Was ihr jetzt nicht sehen könnt, weil ich in

02:57:07.040 --> 02:57:16.720
meiner Secrets-Datei drinne stehen hab. So, also sprich, hier kommt SSID, also WLAN-Name

02:57:16.720 --> 02:57:21.680
und hier kommt Passwort rein. Und dann baut er jetzt eine Verbindung zu WLAN auf. Und eine

02:57:21.680 --> 02:57:27.360
Sache copy-paste ich mir mal, die ich eigentlich ganz nützlich finde. Ähm, man sieht, oder

02:57:27.360 --> 02:57:35.480
ich zeig euch, wie man es in Tutorials manchmal sieht, ist, Wi-Fi, äh, nee, die machen sogar

02:57:35.480 --> 02:57:42.520
noch Connection-Status meistens. Also, wie gesagt, so mach ich es nicht. Ähm, weil

02:57:42.520 --> 02:57:48.880
ist not connected. So, also so sieht man es in vielen Tutorials, aber ich find das nicht

02:57:48.880 --> 02:57:56.920
so gut. Ähm, sagen die dann sowas wie Print, äh, keine Ahnung, Punkt. Also quasi Punkt,

02:57:56.920 --> 02:58:04.840
Punkt, Punkt, wir warten bis wir connected sind. Ähm, und dann machen wir eben Delay,

02:58:04.840 --> 02:58:11.440
und wenn das, dann loopen sie in den Tutorials so lang, bis WLAN da ist. Die Sache ist nur

02:58:11.440 --> 02:58:15.760
die, man will eigentlich gar nicht loopen so lange, wie WLAN da ist. Man will vielleicht

02:58:15.760 --> 02:58:20.880
sagen wir mal 10 Sekunden warten, und wenn das nicht geht, dann rebootet man mal. Und

02:58:20.880 --> 02:58:25.520
dann hat man nämlich auch die Chance, äh, eine Logik zu implementieren, die zwei verschiedene

02:58:25.520 --> 02:58:30.680
WLANs probiert. Also so nach dem Motto, man guckt, ob das WLAN hängt, 5 Sekunden, also

02:58:30.680 --> 02:58:33.760
so nicht, also nicht so wie, also so machen sie es in den Tutorials, aber so find ich

02:58:33.760 --> 02:58:39.520
es nicht gut. Ähm, wenn man es anders macht, 5 Sekunden wartet, ob das WLAN geht, wenn

02:58:39.520 --> 02:58:45.440
es nicht geht, rebootet, und dann setzt man irgendeinen Flag im Flash, dass er ein zweites

02:58:45.440 --> 02:58:51.400
WLAN probiert. So kann man nämlich ein Backup-WLAN eintragen, falls das eine mal nicht funktioniert.

02:58:51.400 --> 02:58:57.560
Find ich viel praktischer. So, ich mach das immer so. Copy-paste mir das grad mal, ich

02:58:57.560 --> 02:59:02.360
hab hier irgendwie ausgeteilt, mach das so. Ähm, das ist, find ich, die, die schönere

02:59:02.360 --> 02:59:11.920
Variante. Und zwar, das hier ist eine eingebaute Funktion, der wartet, what the fuck, der wartet,

02:59:11.920 --> 02:59:18.240
bis das IP-Bit gesetzt wird, für, fürs Netzwerk. Das ist eine eingebaute Funktion von, äh,

02:59:18.240 --> 02:59:23.520
also unten drunter ist es, dass, dass, Free Air Toss ist es unten drunter, aber, äh,

02:59:23.520 --> 02:59:28.160
das haben sie hier gerappt in ihrem Arduino Zeug. Der wartet jetzt, bis im Netzwerk das

02:59:28.160 --> 02:59:33.160
Status-Bit für IP gesetzt wird, also sprich, bis, bis das Bit gesetzt wird für, ich hab

02:59:33.160 --> 02:59:38.240
eine IP. Und das hier hinten ist ein Timeout. Also sprich, wir sparen uns schonmal die ganze

02:59:38.240 --> 02:59:43.760
Schleife, das hier ist quasi so eine Art Schleife unter der Haube, wobei das, äh, intern

02:59:43.760 --> 02:59:51.240
anders gehandelt wird als mit einer Schleife. Der wartet 5000 Millisekunden, also 5 Sekunden,

02:59:51.240 --> 02:59:57.840
dass man eine IP bekommt. Wenn er keine IP bekommt, äh, dann macht er folgendes, dann

02:59:57.840 --> 03:00:02.240
schreibt er, Wi-Fi failed, äh, SSID-Name übrigens, by the way, das machen wir jetzt

03:00:02.240 --> 03:00:11.040
mal raus, weil ich, weil ich mein SSID nicht leaken will, äh, äh, Wi-Fi failed, machen

03:00:11.040 --> 03:00:19.120
wir dann nur. So, dann warte ich 5 Sekunden und dann restarte ich. So hat man das, das

03:00:19.120 --> 03:00:24.400
finde ich viel schöner. Und hier könnte man jetzt beispielsweise einen Flag, Flag setzen

03:00:24.400 --> 03:00:29.320
und wenn das Flag gesetzt ist, wird er beim nächsten Reboot nicht dieses WLAN probieren,

03:00:29.320 --> 03:00:34.040
sondern vielleicht SSID 2. Das heißt, man kann dann hin und her switchen und hat immer

03:00:34.040 --> 03:00:41.960
einen Backup-WLAN. Okay, jetzt, und das war's schon, mehr muss man nicht machen, jetzt

03:00:41.960 --> 03:00:48.160
ist man schon verbunden mit dem WLAN. Wir machen jetzt mal folgendes, ähm, wir geben

03:00:48.160 --> 03:00:55.680
jetzt mal meine IP aus, die ich bekomme, probieren wir mal aus. Was wir, was wir, was wir machen

03:00:55.680 --> 03:01:00.080
könnten ist, könnten es auf dem Display anzeigen, aber wir machen es erstmal nur unten, so.

03:01:00.080 --> 03:01:06.400
Ich lade das jetzt mal hoch und jetzt sollte der mir gleich meine IP ausgeben auf der

03:01:06.400 --> 03:01:20.640
Konsole, die ich bekommen habe, im WLAN. Also 192.168.1.... irgendwas. Oh, oh, oh, Max,

03:01:20.640 --> 03:01:37.280
oh, stopp. Okay. Okay. Vielleicht soll ich nicht so viel spammen lassen. Ja. Piss dich

03:01:37.280 --> 03:01:41.200
alle. So, also meine IP hier, gut. Die brauchen wir jetzt nämlich gleich für ein Uploaden

03:01:41.200 --> 03:01:50.880
von der Firmware. So. So, und ihr seht schon, wie fett das Ganze jetzt geworden ist. Das

03:01:50.880 --> 03:01:54.840
ist jetzt, dauert auch länger zum Hochladen. Das ist jetzt gleich mal doppelt so, doppelt

03:01:54.840 --> 03:02:02.880
so fett, der Sketch, weil wir, ähm, WLAN aktiviert haben. Schon hart, ne? WLAN aktiviert

03:02:02.880 --> 03:02:08.800
erstmal 50% vom Speicherplatz voll. Aber der W, der, der Wifi, der WLAN-Stack vom ESP32,

03:02:08.800 --> 03:02:13.520
der braucht halt ordentlich Flash-Speicher. Also sprich, wenn ihr ohne WLAN auskommt,

03:02:13.520 --> 03:02:19.120
ist besser, aber man kauft sich einen ESP32 eigentlich für WLAN. So, das ist die IP,

03:02:19.120 --> 03:02:28.360
die ich bekomme, wenn ich mich connected hab. Und nun können wir uns mal meine Updater-Klasse

03:02:28.360 --> 03:02:38.280
angucken. Was die, was die so macht. Als erstes, was man machen muss, ist, ähm, nachdem, nachdem

03:02:38.280 --> 03:02:45.720
das WLAN gestartet ist, muss man sagen, Server, Begin. Das ist so Arduino-Konvention. So. Jetzt

03:02:45.720 --> 03:02:51.560
kann man ein Port angeben, nenne 8443. Ich nehme meistens 8443, weil es durchaus sein

03:02:51.560 --> 03:02:55.520
kann, dass man 443 mal für was anderes verwendet. Jetzt kann man noch auswählen, auf welchem

03:02:55.520 --> 03:03:04.600
CPU-Core das Ganze laufen soll. Default 1, äh, Default Priorität 1 lass ich. So. Und

03:03:04.600 --> 03:03:13.480
jetzt startet der einen Web-Server. Also sprich, wenn ich sonst nichts mache, außer das, kann

03:03:13.480 --> 03:03:19.080
ich auf Port 8443, schau mal auf diese IP, connecten mit einem Browser. Das kann ich

03:03:19.080 --> 03:03:23.560
euch jetzt auch zeigen, dass das funktioniert. Wenn ich es hochgeladen hab. Oder nicht crashed.

03:03:23.560 --> 03:03:38.040
Manchmal crash da. Weil ich Sachen vergesse. So. Wir hoffen jetzt einfach mal, es ist gestartet.

03:03:38.040 --> 03:03:43.520
Also hier, da, IP. Jetzt gehen wir mal in den Browser hin und sagen, hier ist gleich Stats.

03:03:43.520 --> 03:03:50.080
Oh nee. Kann ich, kann ich, kann ich Stats, kann ich Stats ausführen oder leake ich dann

03:03:50.080 --> 03:04:01.840
irgendwas? Moment. Stats. Stats. Ah nee, nee. Temperatur, Zeit, Uptime, Hostname. Ja, das

03:04:01.840 --> 03:04:20.520
kann ich zeigen. Stats. Ah, Moment, ich, falscher Port. 8443, HTTPS, ähm, Stats. Äh, ja, der

03:04:20.520 --> 03:04:26.720
ist jetzt nicht so schnell, ja. Ich mein, ähm, TLS auf so einem kleinen Furzding. Wollen

03:04:26.720 --> 03:04:39.840
wir uns jetzt mal nicht beschweren? New Connection, New Connection. Ah, Stats. Also Temperatur

03:04:39.840 --> 03:04:47.360
75 Grad, das ist nicht korrekt. Ich glaube nicht, dass das stimmt. Äh, ja, Uhrzeit hat

03:04:47.360 --> 03:04:53.800
er nicht gesetzt, weil kein NTP gesetzt ist. Uptime sind 64.000 Millisekunden, also 64

03:04:53.800 --> 03:04:58.280
Sekunden ist er ab. Hostname, Espressive, Hostname hat er nicht gecheckt. Okay. Also

03:04:58.280 --> 03:05:05.520
ihr seht, der Web-Server auf dem ESP32. Nee, das ist nicht Fahrenheit, das ist eigentlich

03:05:05.520 --> 03:05:24.280
Celsius, oder? Warte mal. Retemp. Fahrenheit. Naja, oder? Übrigens, das habe nicht ich

03:05:24.280 --> 03:05:30.080
falsch geschrieben, ne? Temperature. Also das habe nicht ich falsch geschrieben, das hat

03:05:30.080 --> 03:05:41.120
der Hersteller falsch geschrieben. Sonst geht es nicht. Temperaturesens. Ist das, ist

03:05:41.120 --> 03:05:56.760
das, ist das Celsius? Äh, Celsius? Oh, das ist Fahrenheit. Nee, 24 Grad ist zu wenig,

03:05:56.760 --> 03:06:04.880
das ist ja weniger als Umgebungstemperatur. Nee, das ist Fahrenheit. Das ist, äh, das

03:06:04.880 --> 03:06:14.800
ist, das ist Celsius. Das ist Celsius. Das ist Celsius. Der Temperatursensor ist eh, ähm,

03:06:14.800 --> 03:06:19.640
guck hier. Der Temperatursensor ist eh fail. Also viele ESP32 haben diesen Temperatursensor

03:06:19.640 --> 03:06:26.800
gar nicht, ja. Ähm, ich glaube nicht, dass mein ESP gerade wirklich 77 Grad ist. Wobei,

03:06:26.800 --> 03:06:30.960
also anscheinend liest der ja auch was, es schwankt, es schwankt ja, ja. Aber selbst

03:06:30.960 --> 03:06:34.880
wenn, die Dinger halten einiges aus, aber 77 Grad ist schon ganz schön viel gerade.

03:06:34.880 --> 03:06:38.560
Würde mich echt wundern, wenn das wirklich so viel wäre. Aber man sieht, es funktioniert.

03:06:38.560 --> 03:06:43.160
Uhrzeit hat er nicht gesetzt. Uhrzeit setzen ist ein bisschen komplizierter. Kann euch

03:06:43.160 --> 03:06:47.280
aber auch gerne mal zeigen, wie das funktioniert mit Uhrzeit setzen. Kann ich, da kann ich mal

03:06:47.280 --> 03:06:56.360
wieder was copy-pasten aus was anderem hier. Ähm, wenn man, das ist aus der, aus dem Klimaanlagen-Sketch,

03:06:56.360 --> 03:07:04.320
was ich hier kopiere. Also sprich, man kann Folgendes machen. Man kann sich, übrigens,

03:07:04.320 --> 03:07:11.360
das ist NTP-Servers falsch, den NTP-Server brauche ich. Weil 60.1 ist ein anderes Netz.

03:07:11.360 --> 03:07:18.040
So, das ist, das ist auch wieder Big-Brain-Logik. Also, was das macht, ist Folgendes. Fasse

03:07:18.040 --> 03:07:22.400
ihn doch mal an, ne, komm ich grad nicht hin. Ähm, die Idee hier hinter ist Folgendes. Also

03:07:22.400 --> 03:07:27.200
einmal nimmt man einen NTP-Server, woran sich die Uhrzeit abrufen soll. Und das hier

03:07:27.200 --> 03:07:37.960
ist Next Level Shit. Was das hier bedeutet, ist, das ist eine zusätzliche Info für Zeitzonen-Info,

03:07:37.960 --> 03:07:44.840
quasi in Kombination mit dem, was der NTP-Server liefert. Man kann, dieser String bedeutet,

03:07:44.840 --> 03:07:49.760
da steckt alle Informationen drin, wann wie welche Zeitzonen umgeschaltet werden. Also,

03:07:49.760 --> 03:07:57.280
es gibt die Zeitzone CET-1, CST-2 und dann gibt's hier irgendwie noch das Datum, wann

03:07:57.280 --> 03:08:02.440
wie umgeschaltet wird. Irgendwie um 2 Uhr nachts hin und um 3 Uhr nachts zurück. Also

03:08:02.440 --> 03:08:08.080
sprich, hier ist die Zeitzonen-Info drinnen, dass der automatisch sogar am richtigen Datum

03:08:08.080 --> 03:08:16.520
zur richtigen Uhrzeit automatisch Sommer-Winterzeit umstellt. Schon mal nicht schlecht, ne? So,

03:08:16.520 --> 03:08:22.600
und damit man das Ganze verwenden kann, muss man Folgendes machen. Man muss dem, man muss

03:08:22.600 --> 03:08:29.400
noch NTP-Server und Zeitzonen-Infos setzen. Das kann man hier machen. Config-Time, NTP-Server

03:08:29.400 --> 03:08:33.880
und ZNF, der sagt, dass es das nicht gibt, das ist aber GBATE, das gibt's. Das ist

03:08:33.880 --> 03:08:40.200
irgendeine Build-In Function, die er irgendwie nicht findet. ZNF und dann die Time-Zone-Info,

03:08:40.200 --> 03:08:43.920
was die 1 hier bedeutet, weiß ich gar nicht. Ja, zeigt ihr mir nicht an. Auf jeden Fall

03:08:43.920 --> 03:08:50.480
da 1 hinten dran. So, und wenn man das jetzt, warum CET? Naja, weil ich nun mal in CET bin

03:08:50.480 --> 03:09:00.200
und meine Uhrzeit halt in CET ist. Oder C-E-S-T ist es ja aktuell. So, was wir jetzt mal machen

03:09:00.200 --> 03:09:05.840
können ist, dass man sieht, dass das funktioniert. Wir können uns mal die Uhrzeit anzeigen lassen.

03:09:05.840 --> 03:09:15.880
So, also, Push, dahin, String. Ich hab dafür schon eine helper-Funktion mal gebastelt.

03:09:15.880 --> 03:09:25.720
Time. Das holt sich die Uhrzeit ab, die gesetzt wird von NTP und macht daraus einen Arduino-String,

03:09:25.720 --> 03:09:31.000
den ich dann ausgeben kann. Hallo Max, mega entrannt. Ich find's schön, dass euch gefällt.

03:09:31.000 --> 03:09:35.720
So, und jetzt sollte auf dem Display eigentlich die Uhrzeit kommen, wenn alles funktioniert.

03:09:35.720 --> 03:09:44.200
Schauen wir mal. Schauen wir mal. Warte mal, bis der Upload ver- Der Upload dauert das

03:09:44.200 --> 03:09:51.120
ein bisschen länger, weil es ist der ganze WLAN-Stack drin. Und der ist halt groß. So,

03:09:51.120 --> 03:09:58.600
jetzt Uhrzeit, please. Come on, bra. Kurz gucken, dass er nicht abgeschmiert ist. Haha.

03:09:58.600 --> 03:10:06.560
Okay, habt ihr's gesehen? Habt ihr's gesehen, wie er's gesetzt hat? Am Anfang war da noch

03:10:06.560 --> 03:10:23.360
erster, erster, 1970. Und dann hat NTP gegriffen, er hat Zeit bekommen. 2018. Ja, es sieht wirklich

03:10:23.360 --> 03:10:28.520
ein bisschen aus wie 2018. Ja, wie man das Format ändert, da bin ich ehrlich gesagt

03:10:28.520 --> 03:10:34.280
noch nicht dahinter gekommen. Also sprich, ich müsste was- Ach so, Moment, das Format

03:10:34.280 --> 03:10:40.680
mach ich ja hier. Ja. Ich weiß nicht, ob es hier die Möglichkeit gibt, irgendwie noch

03:10:40.680 --> 03:10:53.160
das Format zu ändern in EU-Zeit oder so. Ah, Datum, Stunde, Minute, Sekunde. Ich weiß

03:10:53.160 --> 03:11:05.880
nicht, ob das EU-Datum kann. EU-Date? Kann das EU-Date? Ah, Setlokal, das, Moment, gibt

03:11:05.880 --> 03:11:14.640
es? Okay, das, das müsste man mal ausprobieren. Aber ich glaube nicht, dass das, dass das

03:11:14.640 --> 03:11:40.480
funktioniert. Setlokal, ESP32. Das wird nicht funktionieren. Ey, glaub ich nicht. Was soll

03:11:40.480 --> 03:11:44.760
ich machen? Ja, ja, Monat, Monat, Tag, Tag. Ja, das könnte ich machen. Ich könnte es

03:11:44.760 --> 03:11:48.800
von Hand so formatieren. Das, das, das, das, das funktioniert. Wobei ich mir nicht sicher

03:11:48.800 --> 03:11:59.200
bin, ob das die richtigen Dinger sind dafür. Also ganz ehrlich, ich kann das mal kopieren,

03:11:59.200 --> 03:12:02.160
aber ich bin mir wirklich nicht sicher, ob das die richtigen Escape-Sequenzen dafür

03:12:02.160 --> 03:12:12.680
sind. Schauen wir mal. Schauen wir mal, ob das die richtigen Escape-Sequenzen sind.

03:12:12.680 --> 03:12:16.360
Ne, M ist ja Minute. Stimmt, stimmt, kann ich sagen. Dann das, was der Imp geschrieben

03:12:16.360 --> 03:12:24.760
hat vielleicht. So. Mal gucken, was da jetzt rauskommt, was der Helmer geschrieben hat.

03:12:24.760 --> 03:12:39.760
Mal gucken, was der Imp rauskommt. Ah. Ne. Ganz ehrlich, ich komme auch mit US-Zeit zurecht.

03:12:39.760 --> 03:12:56.600
So, schauen wir mal, was jetzt kommt. Woop, woop, woop, woop, woop, woop. Woop, woop, woop,

03:12:56.600 --> 03:13:07.840
woop, woop. Hopp. Come on. Nein. Okay, Leute. Wisst ihr was? Wir machen das mal rückgängig

03:13:07.840 --> 03:13:14.960
lassen, so wie es ist. Und wir leben erst mal mit dem Ami-Datum. Sehr schön. Also, Uhrzeit

03:13:14.960 --> 03:13:18.000
setzen, so funktioniert alles schon mal. Wir laden es übrigens mal jetzt wieder hoch,

03:13:18.000 --> 03:13:22.880
dass es dann auch in der Vorschau richtig ist. So, also das funktioniert. Also wir haben

03:13:22.880 --> 03:13:28.720
WLAN-Verbindung. Wir haben WLAN-Verbindung und wir haben richtige Uhrzeit. Das ist doch

03:13:28.720 --> 03:13:36.480
schon mal ganz gut. So. Und jetzt kommen wir zu der Geschichte mit dem Update-Server.

03:13:36.480 --> 03:13:44.880
Also, dass ich mich darauf verbinden kann, habe ich euch ja schon gezeigt. Braucht manchmal

03:13:44.880 --> 03:13:50.000
ein bisschen. Oder braucht ein bisschen, bis das gestartet ist. Hier, New-Verbindung. Ach

03:13:50.000 --> 03:13:56.000
so. Ja, der hat jetzt das Problem, dass sich das Zertifikat geändert hat seit dem letzten

03:13:56.000 --> 03:13:59.440
Neustart. Deswegen macht man sowas auch nicht mit dem Browser. Jetzt müsste ich erst mal

03:13:59.440 --> 03:14:05.280
das wieder clearn. Sondern man macht das einfach mit Curl und gut ist. Das ist auch viel einfacher.

03:14:05.280 --> 03:14:15.760
Vielleicht nicht L-K. So, Curl verbindet sich auf den ESP und ruft die Stats ab. Guckt,

03:14:15.760 --> 03:14:21.240
zack. Irgendwann, drei Stunden später hat er es dann. Also man sieht die Verbindung,

03:14:21.240 --> 03:14:28.920
die verschlüsselte Verbindung zum ESP 2.3. Also schnell ist was anderes, ja. Aber es

03:14:28.920 --> 03:14:35.520
geht. Wir können sie übrigens jetzt noch schön formatieren lassen. JQ, das ist gültiges.

03:14:35.520 --> 03:14:43.000
JQ habe ich nicht drauf. Warum habe ich kein JQ drauf? JQ ist der beste Yammel-Formatter

03:14:43.000 --> 03:15:00.800
hier. Oh, ich muss noch wieder Update machen. Moment, ich habe nicht JQ installiert. Ich

03:15:00.800 --> 03:15:10.000
habe was installiert? Ich habe das falsche installiert. Das wollte ich gar nicht installieren.

03:15:10.000 --> 03:15:19.880
Jetzt habe ich das falsche installiert. Vier hätte ich installieren müssen. Nicht YQ,

03:15:19.880 --> 03:15:25.880
sondern JQ. Hoffentlich geht das jetzt. So, jetzt können wir uns das mal schön formatiert

03:15:25.880 --> 03:15:35.760
ausgeben lassen. Da kommen die Stats von meinem ESP 32 rein, über den Webserver. Also

03:15:35.760 --> 03:15:46.240
ihr seht schon, die Verbindung ist alles andere als hyper schnell, ja. Aber es geht. Dafür

03:15:46.240 --> 03:15:56.360
ist es okay. Update 1, 2, 3. Gut, also das funktioniert. Webserver läuft. Ich habe da

03:15:56.360 --> 03:16:02.480
nur, also wie gesagt, ich habe hier nicht viele Features eingebaut. Man kann drei Sachen

03:16:02.480 --> 03:16:06.120
machen. Ich zeige euch mal kurz, wie es funktioniert. Man kann drei Sachen machen. Man kann sich

03:16:06.120 --> 03:16:09.920
ein paar Stats abrufen. Man kann es über den Webserver restarten. Also sprich, wenn

03:16:09.920 --> 03:16:20.360
ich jetzt so mache, Restart, dann reboote der. Und man kann updaten. Fertig. So, ich

03:16:20.360 --> 03:16:26.320
zeige kurz, wie es funktioniert, bevor wir es ausprobieren. Ist eigentlich relativ simpel,

03:16:26.320 --> 03:16:31.200
aber, wobei, ich überlege gerade, warum machen wir es? Nee, wir machen es andersherum, weil

03:16:31.200 --> 03:16:35.960
sonst ist es zu, zu, zu verwirrend. Wir programmieren jetzt erstmal den Server, der euch ein Update

03:16:35.960 --> 03:16:39.960
hochladen kann. Und nachdem wir uns angeguckt haben und gesehen haben, dass es funktioniert,

03:16:39.960 --> 03:16:44.560
zeige ich euch, wie es funktioniert. Weil ich wollte es auch mal auf GitHub wieder aktualisieren.

03:16:44.560 --> 03:16:48.560
Weil ich am letzten Stream, wo ich das hier zusammengefuddelt habe, haben mich sogar ein

03:16:48.560 --> 03:16:52.280
paar Leute gefragt, sie hätten das gern für ihr eigenes Zeuchen. Ist ja immer schön,

03:16:52.280 --> 03:17:00.880
wenn man sich da austauschen kann, ja. Also. So, das hier ist alles wir untereinander

03:17:00.880 --> 03:17:04.960
geschrieben, das machen wir gleich, das machen wir gleich schöner. Das hier oben ist schon

03:17:04.960 --> 03:17:09.440
recht ordentlich. Also wir machen erstmal hier init, erstmal seriell output und den

03:17:09.440 --> 03:17:13.560
screen initialisieren. Übrigens, das da, können wir schon wieder wegmachen, wir brauchen

03:17:13.560 --> 03:17:29.960
eigentlich nur screen init, weil, das Rest haben wir auf dem sprite. So, den Rest haben

03:17:29.960 --> 03:17:32.880
wir auf dem sprite. Ich glaube, das war's. Mehr muss man da auch am Anfang nicht machen.

03:17:32.880 --> 03:17:38.480
Weil ich lasse es mal drin, nicht, dass es jetzt irgendwie kaputt geht. Wobei, mal ausprobieren

03:17:38.480 --> 03:17:43.160
sollte eigentlich keinen Unterschied machen. So, dann verbinden wir uns ins W-Lan. So,

03:17:43.160 --> 03:17:47.840
und hier starten wir den Server, über den ich Updates hochladen kann. Jetzt muss man

03:17:47.840 --> 03:17:51.680
noch ein paar Sachen machen. Oder wir können noch ein paar Sachen machen. Müssten, müssen

03:17:51.680 --> 03:17:55.480
wir eigentlich, mehr außer starten müssen wir nicht. Ich habe ein paar Features eingebaut,

03:17:55.480 --> 03:18:00.520
das Ding hat einen Callback, wenn er fertig ist. Das Ding hat einen Callback, der aufgerufen

03:18:00.520 --> 03:18:06.360
wird, wenn er progress update hat. Es hat einen Callback, der aufgerufen wird, wenn das Update

03:18:06.360 --> 03:18:12.000
startet. Und es hat einen Callback, wenn das Update timeoutet. Weil, das ist eine Sache,

03:18:12.000 --> 03:18:15.440
wo man immer drauf achten muss, wenn man so Sachen macht, wie Updates hochladen oder

03:18:15.440 --> 03:18:21.040
irgendwie. Generell, wenn man auf so einem Mikrocontroller, so einem ESP32, der irgendwo

03:18:21.040 --> 03:18:25.920
im W-Lan hängt, vielleicht im Keller oder so, wenn man dort irgendwie was startet, was

03:18:25.920 --> 03:18:32.040
potentiell hängen bleiben kann. Und das kann das HTTP-Update, weil die Library da unten

03:18:32.040 --> 03:18:37.920
drunter ist für den Webserver, die hat ein paar Bugs, dass der sich deadlockt. So, und

03:18:37.920 --> 03:18:43.440
deswegen kann ich dann immer nur sagen, okay, man baut einfach einen Timer ein, also sprich,

03:18:43.440 --> 03:18:49.320
man startet einfach einen Timer und der Timer wird regelmäßig resettet. Und wenn dieser

03:18:49.320 --> 03:18:56.240
Timer nicht resettet wird, dann startet sich das Ding einfach neu. So, und jetzt zeige

03:18:56.240 --> 03:19:08.080
ich euch mal, dass das funktioniert mit Updates hochladen. CheckSum, also CheckSum. Ich muss

03:19:08.080 --> 03:19:11.560
mal kurz mal eine andere VM starten, weil da haben wir noch ein Beispiel, wie man den

03:19:11.560 --> 03:19:17.760
Kram aufruft. Ich habe nämlich mittlerweile auch eingebaut, dass eine MD5 CheckSumme über

03:19:17.760 --> 03:19:23.040
das Firmware-Update macht und guckt, dass es auch korrekt übertragen wurde und alles.

03:19:23.040 --> 03:19:33.120
CheckSum, hier, perfekt. Das brauchen wir. Können wir gleich wieder beenden. Also, wenn

03:19:33.120 --> 03:19:37.400
man jetzt ein Update hochladen will zu seinem ESP32, was wir ja leider noch nicht auf dem

03:19:37.400 --> 03:19:41.760
Disp... Oh, ich habe die Rotation rausgenommen, das war keine gute Idee. Jetzt haben wir Aja

03:19:41.760 --> 03:19:48.720
ja hochkant. Der Fachbegriff für diesen Timer ist Watchdog, korrekt. So, 96 ist hier wieder

03:19:48.720 --> 03:20:00.000
im WeSmart-Modus. Wir haben übrigens die Rotation rausgenommen, das ist ziemlich doof. Z, Rotation

03:20:00.000 --> 03:20:06.200
1, weil wir wollen Aja ja gar nicht hochkant haben, wir wollen Aja ja in Quer-Format haben.

03:20:06.200 --> 03:20:12.640
Oh. So, während er das macht, füge ich das hier mal ein. Also, was dieser Curl-Befehl

03:20:12.640 --> 03:20:20.000
macht, ist folgendes. Also, Curl ist quasi ein Programm, mit dem ich HTTP-Request schicken

03:20:20.000 --> 03:20:23.800
kann. Das gleiche, was euer Browser macht, nur von der Kommando-Zeile aus. Also, was

03:20:23.800 --> 03:20:29.640
der macht, ist, der ignoriert erstmal Zertifikatsfehler. Zertifikatsfehler muss ich ignorieren, weil

03:20:29.640 --> 03:20:34.640
mein ESP32 hat kein gültiges SSL-Zertifikat. So, hier schreiben wir jetzt die IP rein,

03:20:34.640 --> 03:20:43.160
was es war. Wisst ihr noch, was es war? 1, 2, 2, glaube ich, oder? 1, Punkt, ja. Rotation

03:20:43.160 --> 03:21:05.600
war 3, war 3. Aja, guck mal, Aja ja auf dem Kopf. Rotation war 3, tatsächlich. So. Update,

03:21:05.600 --> 03:21:17.640
dass ich den richtigen Ordner habe. Ja, so heißt das richtig. So. Also, was der Befehl

03:21:17.640 --> 03:21:29.960
macht, ist folgendes. Oh, äh. Das kann man auch über den Browser machen, das muss man

03:21:29.960 --> 03:21:38.440
nicht über Köln machen. Also, was der macht, ist folgendes. Der geht hier hin, oh ne, ich

03:21:38.440 --> 03:21:44.800
dab, ich hab weggedrückt. Der nimmt sich die Firmware-Datei, die glücklicherweise Firmware.bin

03:21:44.800 --> 03:22:01.800
heißt, so, Firmware.bin und lädt die auf den ESP32 hoch. Das macht er hiermit. So,

03:22:01.800 --> 03:22:08.560
und er übergibt ihm hier einen Parameter, Checksum, und das ist die MD5-Summe von der

03:22:08.560 --> 03:22:12.640
Firmware. Das bedeutet, der ESP32 bekommt die Firmware hoch, kann aber auch gleichzeitig

03:22:12.640 --> 03:22:15.880
überprüfen, dass die korrekt übertragen wurde. So, und ich zeige euch jetzt mal, dass

03:22:15.880 --> 03:22:26.280
es funktioniert. Oh, äh. Ah, ich hab zwei Punkte. So. Äh, beide war ich abgebrochen.

03:22:26.280 --> 03:22:37.360
So, ich mach mal, verbau es, dass man mehr sieht. So. Verbindet sich zum ESP32. Checksum

03:22:37.360 --> 03:22:46.520
hat funktioniert. Und Update startet. Also sprich, der lädt gerade die neue Firmware

03:22:46.520 --> 03:22:50.680
zum ESP32 hoch und dann startet sich der ESP32 neu, wenn der hier fertig ist. Ihr werdet

03:22:50.680 --> 03:22:56.240
es oben rechts sehen, wenn das Update auf 100% ist, dann startet er sich neu. Also sprich,

03:22:56.240 --> 03:23:02.160
ich kann jetzt USB abmachen, das ist eigentlich ziemlich poggers, ich kann jetzt USB abmachen

03:23:02.160 --> 03:23:06.720
und komplett übers WLAN updaten. Was ich nicht mache, weil übers USB updaten ist immer noch

03:23:06.720 --> 03:23:22.520
ein Ticken schneller. Und zack. Und ihr seht es oben rechts, Reboot. Äh. Hat er sich jetzt

03:23:22.520 --> 03:23:27.560
gerade Rebooted? Weil ihr habt jetzt gesehen, ob er sich Rebooted hat. Ich hab nicht zugeguckt.

03:23:27.560 --> 03:23:31.520
Er hätte, er hätte sich eigentlich Rebooten müssen. Ja, er hat sich Rebooted. Er hat

03:23:31.520 --> 03:23:41.320
sich Rebooted. Strom braucht er trotzdem über USB. Ja, aber nicht am Rechner. Ist ja gerade

03:23:41.320 --> 03:23:48.120
der Witz. Den kannst du sonst wo hin hängen. Und nicht unbedingt. Wenn du einen Deep Sleepen

03:23:48.120 --> 03:23:52.560
lässt, geht er auch an der Batterie. Das TT-Go-Board hier vielleicht nicht, aber andere gibt's

03:23:52.560 --> 03:23:59.280
da ja. So. Also sprich, ich bekomme jetzt mit, ich kann jetzt ein Update hochladen über

03:23:59.280 --> 03:24:03.040
WLAN. Das ist genau das, was ich haben will, weil mein Ziel für den heutigen Stream ist

03:24:03.040 --> 03:24:07.560
ja, dass ich hier auf dem Display anzeige, das machen wir jetzt auch gleich, dass ich

03:24:07.560 --> 03:24:16.600
hier auf dem Display anzeige, wie der aktuelle Progress ist für Update-Upload. Das bedeutet,

03:24:16.600 --> 03:24:22.240
wir können jetzt ein Feature verwenden, was ich eingebaut habe in meinen Update-Server,

03:24:22.240 --> 03:24:37.120
nämlich Set Start Callback, bauen wir jetzt, und Set Progress Callback. So, was bekomme

03:24:37.120 --> 03:24:43.440
ich denn da für eine Sache? Übrigens, wisst ihr was mich an C++ bzw. in dem Fall Visual

03:24:43.440 --> 03:24:48.280
Studio Code nervt? Die haben eigentlich ein ganz cooles Feature, nämlich das man sagen

03:24:48.280 --> 03:24:57.160
kann, wenn man hier so lange Types hat hier, so standard, function, void, int, f, dass

03:24:57.160 --> 03:25:03.920
man dann sagen kann, auto, also so auto, auto, so. Und dann, das ist so ein bisschen wie

03:25:03.920 --> 03:25:11.860
var in C sharp, und dann macht er das, aber Visual Studio Code ist zu dumm. Der erkennt

03:25:11.860 --> 03:25:18.160
den Typ von C nicht, und dementsprechend kann ich C nicht richtig verwenden. Small

03:25:18.160 --> 03:25:31.600
Brain. Das ist doof. Deswegen muss ich den Mist hier selbst hinschreiben. Ach Quatsch,

03:25:31.600 --> 03:25:35.600
was mache ich denn? Übrigens, totaler Blödsinn, ich habe mich verdammt, das ist ein Callback

03:25:35.600 --> 03:25:42.320
ohne, bekommt er Argumente? Ah, er bekommt ein Int, Progress, na klar. Übrigens, ist

03:25:42.320 --> 03:25:46.640
es richtig, was ich erzählt habe, in dem Fall aber falsch, weil ich beim falschen Callback

03:25:46.640 --> 03:25:53.840
gewesen bin. So, also, was da jetzt passiert ist, ich gehe jetzt hier zu dem Programm,

03:25:53.840 --> 03:26:00.600
also zu dieser Klasse, die für das Update zuständig ist, und sage, hey, wenn ein Update

03:26:00.600 --> 03:26:09.560
hochgeladen wird, und es quasi, wenn das Progress gemacht hat, also 1%, 2%, 3%, 4%,

03:26:09.560 --> 03:26:14.320
dann ruf mal diesen Code hier kontinuierlich auf bei jedem Progress Schritt, und dann kann

03:26:14.320 --> 03:26:20.720
ich was machen. So, also SetProgressCallback, da werde ich jetzt einfach mein Progress auf

03:26:20.720 --> 03:26:27.920
das Display schreiben. So, und das werde ich mal hier unten irgendwo, wobei eigentlich

03:26:27.920 --> 03:26:32.920
ist egal, aber mach das mal hier unten. Deswegen, wo wir jetzt hier dabei sind, dass dieses

03:26:32.920 --> 03:26:36.840
ganze Drawzeug, das muss noch in eine eigene Klasse rein, weil das ist echt, wir hier

03:26:36.840 --> 03:26:44.240
blickt keiner durch. So, zumindest um zu zeigen, dass das prinzipiell funktioniert ist, ähm,

03:26:44.240 --> 03:26:54.960
mach mal kurz die Loop hier mit Ayaya weg, und die müssen wir eigentlich stoppen. Normalerweise

03:26:54.960 --> 03:27:00.440
mache ich so, dass wenn mein Update Vorgang anfängt, das machen wir jetzt auch, das ist

03:27:00.440 --> 03:27:06.240
eh nicht verkehrt, wenn mein Update Vorgang anfängt, dann stoppe ich die Main Loop, weil,

03:27:06.240 --> 03:27:10.360
äh, wozu brauche ich, ich will, dass der nichts macht, während er Update hochlädt. Das kennt

03:27:10.360 --> 03:27:14.240
ihr wahrscheinlich auch von anderen Geräten, so nach dem Motto Update Vorgang im Progress,

03:27:14.240 --> 03:27:19.120
bitte fassen Sie das Gerät nicht an. So, also wir malen jetzt erstmal auf dem, auf

03:27:19.120 --> 03:27:25.400
dem Display ganz billig den aktuellen Update Progress. So, da steht dann eins, zwei, drei,

03:27:25.400 --> 03:27:28.720
vier, fünf, sechs, sieben oder sonst was dahinter. Wir sind mal, wir sind mal so nett

03:27:28.720 --> 03:27:34.840
und machen noch ein Prozentzeichen dahinter von 100, ähm, und gucken uns das, gucken

03:27:34.840 --> 03:27:42.640
uns das Ganze an. Ja, und vorher, natürlich ganz wichtig, Moment, Push Image, Ayaya, nee,

03:27:42.640 --> 03:27:51.040
hab ich schon, ist ja schon da. So, ähm, genau. So, und was wir jetzt noch machen

03:27:51.040 --> 03:27:55.640
kann, was, was, was die Holzhammer Methode ist, wohl, wohlgemerkt, wir können sagen,

03:27:55.640 --> 03:28:03.560
wenn das Update startet, wenn das Update startet, dann beenden wir unsere, unsere Loop. Wohlgemerkt,

03:28:03.560 --> 03:28:19.640
wenn das Update startet, beende ich einfach hier meine Main Loop. Wohlgemerkt, wenn man

03:28:19.640 --> 03:28:24.600
die einmal beendet hat, die kriegt man nicht wieder gestartet, so ohne weiteres. Also, das

03:28:24.600 --> 03:28:29.600
sollte man bedenken, wenn man das Ganze macht. Also, das ist jetzt nicht unbedingt best,

03:28:29.600 --> 03:28:32.480
best practice, wie man so schön sagt, was ich jetzt hier mache. Also, machen wir hier

03:28:32.480 --> 03:28:47.320
irgendwann Print, ähm, Update in progress, Stop, Main, Main Loop, irgendwas. Also, ich

03:28:47.320 --> 03:28:55.520
was sehe, was ertreibt, ähm, und jetzt sag ich Task, äh, warte mal, was, End, nee,

03:28:55.520 --> 03:29:05.920
Task, Delete, Task, Delete, was, äh, ich brauch das Handle, ich brauch das Handle, äh, Main,

03:29:05.920 --> 03:29:15.360
Loop, Task, Handle, gleich, äh, äh, Task, Handle, wie so, ne? Ne, Moment, ah, fuck,

03:29:15.360 --> 03:29:25.240
wie, ah, wie kriege ich, oder einfach so? Einfach so? Äh, zumindest will ich meine

03:29:25.240 --> 03:29:28.920
Main Loop beenden, wenn, wenn Update startet. Bin mir nicht sicher, ob ich das jetzt richtig

03:29:28.920 --> 03:29:36.680
gemacht habe, ich glaub nicht. Oh, bin ich, nee, äh, Moment, wie ging das nochmal? Ach,

03:29:36.680 --> 03:29:47.680
hier, ah, ich weiß es wieder, ähm, Current Handle war das, ja, genau, und jetzt geht's.

03:29:47.680 --> 03:30:03.080
Also, und wenn ich, oh, fuck, was war? Ach so, ich muss das noch Captchern. Wisst ihr was?

03:30:03.080 --> 03:30:11.320
Kann ich das überhaupt Captchern an der Stelle? Ja, das, guck mal, ob das funktioniert jetzt.

03:30:11.320 --> 03:30:16.680
So, übrigens, wir haben fast unseren kompletten Sketch jetzt verwendet, weil WLAN so viel

03:30:16.680 --> 03:30:22.800
Zeug braucht und HTTPS auch. So, jetzt uploaden wir den ganzen Shit, mal so, und was von der

03:30:22.800 --> 03:30:33.720
Idee jetzt passieren sollte, sobald das Update startet, geht diese Loop hier aus. Äh, können

03:30:33.720 --> 03:30:39.880
wir übrigens auch zeigen, dass diese Loop ausgeht. Gebe hier einfach mal einen Counter

03:30:39.880 --> 03:30:55.040
aus. So, also sprich, wenn das Update startet, geht diese Loop aus, weil ich die hier kille,

03:30:55.040 --> 03:31:01.760
und er hat komplette zwei CPUkerne frei für Updates, Handling und Bildschirminhalt malen.

03:31:01.760 --> 03:31:10.640
So, also sprich, die Main Loop geht aus, das sehen wir auch gleich hier am Print. Übrigens,

03:31:10.640 --> 03:31:15.680
der Print hat jetzt ganz schön viel Gleichachtung, da ist kein Delay oder sonst was drinne. Der

03:31:15.680 --> 03:31:23.960
haut jetzt erstmal hier das Print raus ohne Ende. Und KS. Zumindest hört das gleich auf,

03:31:23.960 --> 03:31:30.400
wenn ich ein Update starte. Und dann sollte der auf dem Display hier, dann sollte der

03:31:30.400 --> 03:31:42.560
eigentlich anzeigen, wie weit er ist. Soweit so gut. Schauen wir mal, wenn der Update startet.

03:31:42.560 --> 03:31:57.640
Ach guck, Update Stopping Main Loop. Aha. Exzellent. Und man sieht den Update Progress

03:31:57.640 --> 03:32:18.160
auf dem Bildschirm. Wenn das nicht Poggers Easy Clap ist, Leute. So, gleich Firmware

03:32:18.160 --> 03:32:25.720
Update durch. Und Reboot. Übrigens, dass der jetzt weiter die gleiche Sache anzeigt

03:32:25.720 --> 03:32:33.440
ist, weil ich den Bildschirm nie cleare. Also sprich, ich muss hier ganz am Anfang mal

03:32:33.440 --> 03:32:44.880
sagen, TFT, Fill, Screen. Einfach mal clearn das Ganze. Übrigens, ich hab ne noch bessere

03:32:44.880 --> 03:32:56.120
Idee. Ich hab die richtige 5-Hat-Idee. Wir machen jetzt einfach OTA Server, Update Finished

03:32:56.120 --> 03:33:02.400
Callback. Wenn das Update Finished ist, schalten wir einfach das Display aus. Das ist was

03:33:02.400 --> 03:33:09.200
hier. Dann, na wieso, da steht 100 von 100, das ist doch dann. Ich mein, wir können da

03:33:09.200 --> 03:33:15.960
noch hinschreiben, dann. Aber wir machen den Bildschirm aus. Das find ich viel geiler.

03:33:15.960 --> 03:33:22.800
Wir machen den Bildschirm aus. Aber wir pasten das jetzt einfach mal. Machen den Bildschirm

03:33:22.800 --> 03:33:26.800
aus. Set Finished Callback. Und jetzt sagen wir einfach Brightness 0. Das ist nämlich

03:33:26.800 --> 03:33:37.640
Bildschirm ausschalten. Also sprich, nach dem Update bei 100% macht er den Bildschirm

03:33:37.640 --> 03:33:46.160
aus. Wir könnten auch noch dann davor reinschreiben, aber ich fürchte, wir haben gerade bei diesem

03:33:46.160 --> 03:33:52.000
Callback nicht mehr allzu viel Zeit. Ich mein, man könnte bei 100% dann drunter schreiben.

03:33:52.000 --> 03:33:58.200
Ja, das ist, das geht. Das könnten wir machen. Oh, da blinkt er hier. Übrigens, wollt ihr

03:33:58.200 --> 03:34:09.040
das Ding mal im 3D gedruckten Case sehen? Das Case ist richtig gut geworden. Also das

03:34:09.040 --> 03:34:16.680
sieht fast wie gekauft aus, das Case. So, okay, wir starten mal, hups, wir starten mal

03:34:16.680 --> 03:34:25.720
den Update Vorgang. Jetzt zeige ich euch mal kurz, wie der Update da funktioniert. Update

03:34:25.720 --> 03:34:33.600
Vorgang. Ah ja, ja. So. Warten wir mal, bis er wieder durchgelaufen ist, bis 100%. Und

03:34:33.600 --> 03:34:43.880
dann sollte er jetzt den Bildschirm ausschalten und rebooten. Und dann müssen wir natürlich

03:34:43.880 --> 03:34:47.800
auch unsere Progress Bar malen. Das ist ja das Allerwichtigste. Progress Bar muss sein.

03:34:47.800 --> 03:35:05.320
Und Bildschirm aus. Und Bildschirm aus. Häh? Habt ihr das gesehen? Und jetzt ist Bildschirm

03:35:05.320 --> 03:35:11.760
wieder an, aber kein Inhalt. Irgendwie Bildschirm ausgeschaltet. So, und übrigens, das hier

03:35:11.760 --> 03:35:19.600
ist ziemlicher Müll. So müsste das dastehen. So. Nice. Gut. Und jetzt kommt die Progress

03:35:19.600 --> 03:35:27.680
Bar. Jetzt kommt die, hat irgendjemand eine Ahnung? Ah, hier. Ich hab's noch. History

03:35:27.680 --> 03:35:37.560
ist das beste Clipboard History. So, und jetzt müssen wir die Progress Bar malen. Also.

03:35:37.560 --> 03:35:52.480
Okay. Wie machen wir das jetzt am besten? So eine Progress Bar. Also. Wir haben hier

03:35:52.480 --> 03:35:58.120
wie viele Stellen? Eins, zwei, drei, vier, fünf, sechs, sieben, acht, neun, zehn, elf,

03:35:58.120 --> 03:36:08.880
13, 14, 15 Stellen. Okay. Also. Sagen wir mal so was wie hier. Total. Total Steps sind

03:36:08.880 --> 03:36:16.040
15. Jetzt könnt ihr mich bei Low-Prain-Aktionen erleben, weil ich war sowas immer komplett

03:36:16.040 --> 03:36:24.920
verkacke. Okay. Also. Also. Wir haben total, also. Also. 15 Schritte wollen wir anzeigen

03:36:24.920 --> 03:36:31.720
beim Update. Warum 15 Schritte? Weil auf das Display maximal 15 Zeichen passen. Oder plus

03:36:31.720 --> 03:36:41.260
die Klammern. So. Also. 15 Schritte wollen wir haben. Das heißt, ich muss jetzt ausrechnen,

03:36:41.260 --> 03:36:50.060
in welchem Intervall, in welchem Intervall ich hochzählen muss. Also quasi 100 Prozent

03:36:50.060 --> 03:36:57.240
durch 15. Leute, wenn ihr seht, dass ich Low-Prain-Shit mache, schreibt es in den Chat. Also. Sprich

03:36:57.240 --> 03:37:09.120
alle 6,6 alle 6,6 Schritte muss ich hochzählen. Also machen wir irgendwie sowas hier. Also

03:37:09.120 --> 03:37:19.480
es muss auf jeden Fall ein Float sein, weil ich teile hier 100 durch 15. Also sagen wir

03:37:19.480 --> 03:37:28.480
irgendwie Steps. Nee. Steps, nicht Increments. Steps. Counter oder so. Oder Steps. Ach komm,

03:37:28.480 --> 03:37:39.520
Scheiß drauf. So. Also 100 durch Total Steps. So. Da müsste jetzt sowas rauskommen wie

03:37:39.520 --> 03:37:54.940
6,6. Von der Idee her. Stepsize. Stepsize. Stepsize. Komm ich. Ja. Mir gefällt mir alles

03:37:54.940 --> 03:37:58.640
irgendwie nicht. Muss ich mir was anderes überlegen noch. So. Das heißt, da kommt

03:37:58.640 --> 03:38:07.280
jetzt sowas wie 6,6 raus. Das heißt, ich weiß, dass ich meinen Counter alle 6,6 Schritte

03:38:07.280 --> 03:38:13.200
hochzählen muss. Ich meine, wenn ich jetzt richtig Low-Prain wäre, aber das machen wir

03:38:13.200 --> 03:38:26.880
nicht. Aber die Noob-Variante wäre ja das da. Progress. Kleiner. 7, so nach dem Motto.

03:38:26.880 --> 03:38:31.480
Nee, kleiner. Kleiner. Ich meine, das widerstrebt mir schon, aber das müsste ja funktionieren.

03:38:31.480 --> 03:38:42.360
Und dann so. Und dann Else-if-Progress-kleiner-das-plus-eins. Aber nee, nee, das machen wir nicht. Round-Progress

03:38:42.360 --> 03:38:59.200
durch 100 mal 15. Dürfte das mit Modulo nicht? Wahrscheinlich. Wahrscheinlich gibt's das zwar.

03:38:59.200 --> 03:39:05.280
Das ist so eine typische Sache, wo es 20.000 verschiedene Varianten gibt. Also, Round ist

03:39:05.280 --> 03:39:18.240
auf jeden Fall schon mal gut. Was? Progress durch 100 mal 15. Moment, das ist im Prinzip

03:39:18.240 --> 03:39:25.040
das. Das ist doch das Gleiche, wie wenn ich sag, Progress durch Increments, oder? Kann

03:39:25.040 --> 03:39:33.480
ich nicht so? Round finde ich schon mal gut. Also, sprich, was rechne ich denn jetzt hier

03:39:33.480 --> 03:39:50.120
aus? Wenn ich Progress durch, also wenn ich den Fortschritt, sagen wir 70%, teile durch

03:39:50.120 --> 03:40:02.880
6,6. Oder durch 6,6. Also, 70 durch 6,6. Dann bekomme ich 10 raus. Das bedeutet, 10 Schritte

03:40:02.880 --> 03:40:12.640
sind fertig. Also, Steps-done. Oh, das kann man bestimmt viel einfacher machen. Progress

03:40:12.640 --> 03:40:21.600
durch Steps. Dann weiß ich, wie viele Schritte fertig sind. Und das sollte ich jetzt vielleicht

03:40:21.600 --> 03:40:29.600
wirklich noch mal runden, weil da irgendwas scheppes rauskommt. Ich kann ja nur ganze

03:40:29.600 --> 03:40:36.200
Steps malen oder nicht. Und auch aufrunden muss ich, weil ich muss jetzt ja noch die

03:40:36.200 --> 03:40:47.680
ausrechnen, die fehlen. Okay, dann sagen wir jetzt das nächste. Steps to go. Also sprich,

03:40:47.680 --> 03:40:56.200
die Schritte vom Update, die noch ausstehen. Das ist dann Total Steps. Also, 15 minus

03:40:56.200 --> 03:41:16.480
Steps done. Okay, ja. Es klingt logisch, muss ich sagen. Also, was gibt den Arduino

03:41:16.480 --> 03:41:20.720
schon eine fertige Funktion, um die 100 auf 15 Schritte zu werben? Oh, exellent. Da müsste

03:41:20.720 --> 03:41:24.520
es dem ja mal ein Beispiel zu schicken, wie ich das genau mache. Da bin ich gerade zu

03:41:24.520 --> 03:41:32.960
low-brain-führend, mir das auszudenken. Aber ich schreib's mir mal auf. So, jetzt

03:41:32.960 --> 03:41:40.720
probieren wir mal aus, ob's funktioniert. So, und da. Okay, jetzt hab ich die Steps.

03:41:40.720 --> 03:41:44.960
So, und jetzt kann ich was richtig Geil, was richtig Nicees benutzen. Ich hab mir nämlich

03:41:44.960 --> 03:41:53.880
mal sowas gebaut. Vor, bei meinen Helper-Classes hab ich immer sowas hier gebaut. Multiply

03:41:53.880 --> 03:41:59.160
string. Das ist quasi das, was man mit Ruby auch machen kann. Wenn du rundest, hast du

03:41:59.160 --> 03:42:06.800
bei 96 Prozent schon 15 Schritte. Das macht nix. Das macht nix. Dann seh ich auf jeden

03:42:06.800 --> 03:42:18.480
Fall den vollen Balken, bevor es sich neu startet. Wenn ich nicht runde, dann fehlt

03:42:18.480 --> 03:42:26.600
mir doch manchmal was, oder? Was soll das Teil machen? Also aktuell soll's einfach

03:42:26.600 --> 03:42:35.000
nur den Update-Vorgang anzeigen auf dem Display. Also ich hab mir sowas gebastelt, das macht

03:42:35.000 --> 03:42:44.440
das gleiche wie bei Ruby. Wenn man bei Ruby zum Beispiel hier diesen String mal eins

03:42:44.440 --> 03:42:49.480
rechnet, bleibt er eins, mal zwei, mal drei, mal vier. Also der verdoppelt die Dinge einfach

03:42:49.480 --> 03:42:53.920
je nachdem, wie viel ich's anzeige. Und das Gute ist, mal null, kommt dann auch nix, kommt

03:42:53.920 --> 03:43:01.520
dann auch nix. Der Edelknecht hier mit Big Brain, Quick Muffs, 15x Progress. Ich nehm

03:43:01.520 --> 03:43:06.000
das alles zur Kenntnis, ich probier das alles mal aus. Ich test jetzt aber erstmal, ob

03:43:06.000 --> 03:43:13.040
mein Zeug tut. Weil ich blick zumindest bei meiner eigenen nicht vorhandenen Logik noch

03:43:13.040 --> 03:43:21.920
am besten durch. Also, jetzt müssen wir uns was zusammenbauen. Also bauen wir uns hier

03:43:21.920 --> 03:43:26.240
mal was zusammen. Temp, immer bester Variablenamen, Leute. Wenn ihr nicht wisst, wie ihr was

03:43:26.240 --> 03:43:43.520
nennen solltet, nennt's Temp. Also plus, plus, am Ende kommt da ne Progress Bar raus. Okay,

03:43:43.520 --> 03:43:51.080
plus. Jetzt machen wir zuerst die Sachen, die dann sind. Ich mach das mal mit nem Gleichheitszeichen

03:43:51.080 --> 03:43:55.520
in der Progress Bar, dass da sowas rauskommt. Aber ich mein, man könnte auch was anderes

03:43:55.520 --> 03:44:01.240
nehmen. Ich weiß nicht, ob das Emojis kann. Ich glaub nicht, dass das Emojis kann. Also

03:44:01.240 --> 03:44:04.640
auch, Farb Emojis schon gar nicht, aber ich weiß nicht, ob es vielleicht schwarz-weiß

03:44:04.640 --> 03:44:18.640
kann oder so. Okay, und das machen wir Steps dann. Genau, also sprich, der nimmt jetzt

03:44:18.640 --> 03:44:25.840
das Gleichheitszeichen und vervielfältigt das so oft, wie Schritte erledigt sind in

03:44:25.840 --> 03:44:35.360
der Progress Bar. So, und als nächstes machen wir dann Alper, Multiply String, Punkt, und

03:44:35.360 --> 03:44:41.640
dann Steps to go. Und das brechen wir jetzt noch mal die Zeile um, dass es ein bisschen

03:44:41.640 --> 03:44:46.920
hübscher ist. Ich mein C++ ist eh schon nicht mehr zu retten, aber zumindest ein bisschen

03:44:46.920 --> 03:44:53.320
lesbar kann man es machen. So, und jetzt so. Okay, von der Idee her müsste der mir jetzt

03:44:53.320 --> 03:45:05.920
ne Progress Bar malen. Chet, meint ihr, das funktioniert? Nee, Moment. Oder? Doch, müsste,

03:45:05.920 --> 03:45:16.040
müsste funktionieren. Nö, in eine andere Zeile schreiben. Also was wir jetzt noch machen,

03:45:16.040 --> 03:45:29.000
ne die Prozentzeile machen wir, genau, genau, stimmt, du hast recht. Also tmp, plus, Moment,

03:45:29.000 --> 03:45:51.560
Newline, tmp plus Newline, plus Progress. So, okay, ob das jetzt funktioniert? Bin ja

03:45:51.560 --> 03:46:00.720
mal gespannt, ob das jetzt klappt. Wahrscheinlich crash da jetzt, weil ich irgendwas vergessen

03:46:00.720 --> 03:46:07.320
hab von irgendwo, irgendwo im Memory rumschreiben, wo ich reinschreiben soll. Ob das

03:46:07.320 --> 03:46:36.000
jetzt, okay, okay, okay. Der Moment der Wahrheit naht, Leute. Okay. Macht er was? Fast, fast

03:46:36.000 --> 03:46:51.920
richtig, fast, Leute, fast. Das funktioniert erstaunlich gut. Der kommt sich hier ein bisschen

03:46:51.920 --> 03:47:09.480
in die Quere, ja. Aber das funktioniert, Leute, das funktioniert erstaunlich gut. Okay, warum

03:47:09.480 --> 03:47:16.680
hat der hier so, der startet sich neu, wenn das Update fertig ist. Naja, so ganz funktioniert

03:47:16.680 --> 03:47:22.160
er nicht. Der malt hier irgendwie zu weit, zu weit drüber und ich bin mir ehrlich gesagt

03:47:22.160 --> 03:47:37.160
nicht sicher, warum der da so weit drüber malt. Sollte ich vielleicht mal, wisst ihr

03:47:37.160 --> 03:47:48.040
was? Wir machen davor mal eine Sache. Oder vielleicht, oder vielleicht ein paar Leerzeichen

03:47:48.040 --> 03:47:54.600
dahinter, dass das da auch alles löscht auf jeden Fall. Muss wahrscheinlich klären.

03:47:54.600 --> 03:48:03.760
Drawstring klärt, glaube ich, genauso lang, wie die Zeile ist. Also vielleicht hilft das

03:48:03.760 --> 03:48:08.800
schon mit ein paar Leerzeichen hinten dran. Kannst du die Prozentanzeige noch sentern?

03:48:08.800 --> 03:48:16.360
Oh, das wird aber ein bisschen komplizierter jetzt. Center Prozent. Können wir mal gleich

03:48:16.360 --> 03:48:21.960
gucken, ja. Okay, mal gucken, mal gucken, ob der jetzt zumindest das Ganze überschreiben

03:48:21.960 --> 03:48:37.600
richtig macht. Auf, fang an, Update machen. Let's go. Okay, nee, nee, nee, wir müssen,

03:48:37.600 --> 03:48:41.840
wir müssen klären, wir müssen auf jeden Fall klären vorher. Das wird so nix, nee,

03:48:41.840 --> 03:48:54.920
nee, nee, das wird so nix. Ah, ja, ja. Nein, das wird x. Extra Drawstring für zweite Zeile.

03:48:54.920 --> 03:49:04.760
Das stimmt, das kann sein, dass der rumspackt, weil da eine Newlight drin ist. Also probier

03:49:04.760 --> 03:49:21.680
mal aus. Also, dann machen wir nur hier String, Progress. So, nächste Zeile, nächste Zeile,

03:49:21.680 --> 03:49:29.280
Progress plus von 100%. So, jetzt müssen wir nur gucken. Moment, wir rechnen jetzt

03:49:29.280 --> 03:49:38.760
70 plus, ähm, man konnte irgendwie die Fondgröße, Größe, Fond, Fondheit, genau, sondern irgendwie

03:49:38.760 --> 03:49:46.600
plus fünf. Also sprich, wir sollten jetzt eine Zeile unten drunter sein plus so hoch

03:49:46.600 --> 03:49:50.600
wie die letzte Zeile. Also, wir fangen dort an, wo die letzte Zeile war, plus die Höhe

03:49:50.600 --> 03:49:54.240
der letzte Zeile plus fünf. Also, das heißt, wir sind jetzt eine Zeile unten drunter.

03:49:54.240 --> 03:49:59.960
So, soweit, soweit von der Theorie her. Aber komisch, dass es bei der Progress Buff funktioniert.

03:49:59.960 --> 03:50:04.400
Ja, ich glaube, du hast recht, der kommt, der kommt, der kommt nicht mit klar, dass das,

03:50:04.400 --> 03:50:10.360
ähm, dass da eine Newlight drin ist. Ich, ich glaube, der, der behandelt beim Clearen

03:50:10.360 --> 03:50:18.200
keine Escape Charakter. Also, der bleibt immer auf der aktuellen Zeile. Und jetzt funktioniert

03:50:18.200 --> 03:50:38.400
es vielleicht. Jetzt, jetzt kann ich mir vorstellen, jetzt funktioniert es. Und, geht's jetzt?

03:50:38.400 --> 03:51:08.040
Okay. Alles klar. Oh. Du hast recht, ich geb Mist aus. Nochmal hochladen. Ja, ich hab

03:51:08.040 --> 03:51:20.080
Mist ausgegeben. Okay, dann. Aber jetzt, jetzt geb ich kein Mist mehr aus. Wie lang sind

03:51:20.080 --> 03:51:27.800
wir eigentlich schon? Oh. Alter, vier Stunden fast. Was ist denn hier los? So, okay, Leute.

03:51:27.800 --> 03:51:41.240
Pass, holt eure Pass Champs raus, ob's funktioniert. Stream soll ich auch noch spiel ab und zu mal,

03:51:41.240 --> 03:51:55.800
ja? Ha! Es funktioniert. Es funktioniert. Das ist ja mass, massiv.

03:51:55.800 --> 03:52:03.920
Pogu. Hab ich, hab ich, hab ich überhaupt irgendeinen ordentlichen Pog, Pog Champ, der

03:52:03.920 --> 03:52:18.360
pockt, pock like this? Sprain, ja. Nice. Cool. Update 100%, Bildschirm aus, Reboot. Richtig

03:52:18.360 --> 03:52:26.120
gut. Richtig nice. Also, was ich jetzt noch nicht gemacht hab, ist, mich hier irgendwie

03:52:26.120 --> 03:52:33.160
um, um Multithreaded kümmern oder so. Also, das einzige, was hier Multithreaded ist, ist

03:52:33.160 --> 03:52:39.000
das hier, der Updater. Der Updater ist Multithreaded. Ach ja, ich hab euch ja gesagt, soll ich mal

03:52:39.000 --> 03:52:44.120
kurz erklären, wie, wie das, wie das funktioniert mit dem Update. Also, was, was der da macht.

03:52:44.120 --> 03:52:48.400
Das ist, ist nicht sonderlich, ist nicht sonderlich kompliziert. Also, der macht, also erstmal

03:52:48.400 --> 03:52:54.280
hier, WLAN muss an sein, dass man über WLAN updaten kann. Das, ja, darauf die Idee kommt

03:52:54.280 --> 03:53:00.080
jeder. So. Also, ich zeig euch einfach mal ganz kurz, was der beim Update macht. Wenn

03:53:00.080 --> 03:53:05.160
man diese, wenn man diesen Update-Server startet, macht er erstmal, generiert ein SSL-Zertifikat.

03:53:05.160 --> 03:53:15.240
Name, CACW, Organization, LUL in Deutschland. Gültig bis 2030. Was eh vollkommen irrelevant

03:53:15.240 --> 03:53:20.200
ist, weil kein Browser dieser Welt diesem Zertifikat jemals vertrauen wird und man

03:53:20.200 --> 03:53:29.280
muss eh sagen, ignore. So, dann konfiguriere ich ihn für fünf parallele Connections auf

03:53:29.280 --> 03:53:35.120
dem Port, der übergeben wird. Also, in dem Fall, Port, eh, Port 8443 ist es bei mir,

03:53:35.120 --> 03:53:40.240
mit dem Zertifikat. Also, sprich, ich generiere ein Zertifikat und sag, starte den HTTPS-Server

03:53:40.240 --> 03:53:45.120
mit dem Zertifikat auf diesem Port für maximal fünf parallele Connections. Fünf parallele

03:53:45.120 --> 03:53:50.200
Connections ist schon ordentlich für den ESP32. Braucht, braucht ein bisschen RAM der Kram.

03:53:50.200 --> 03:53:57.040
So. Und jetzt, das ist eine Multi-Threading-Funktion aus der Standard-Library hier vom ESP32.

03:53:57.040 --> 03:54:04.800
Um genau zu sein, ist das aus Free Air TOS nennt sich das Ganze hier. Also, die, das

03:54:04.800 --> 03:54:13.000
offizielle ESP32-SDK-Firmware, wie auch immer, Entwicklungsgedöns basiert auf Free Air TOS,

03:54:13.000 --> 03:54:20.640
deswegen hat man auch noch die Funktionen daraus. TOS, Monka TOS, genau. Losex90 sagt,

03:54:20.640 --> 03:54:24.920
ich würde einem Zertifikat vertrauen von CACW für die Organisation LUL ausgestellt

03:54:24.920 --> 03:54:30.320
wurden. Ja, klar, ich auch. Sofort. Am besten wäre natürlich noch, wenn das Organisation

03:54:30.320 --> 03:54:34.520
LULW wäre, weil dann, weil dann könnte man das nämlich so rum machen und dann wüsste

03:54:34.520 --> 03:54:40.760
die ganze Welt wieder, dass CACW kleiner LULW ist. Oder besser gesagt, LULW größer

03:54:40.760 --> 03:54:50.800
CACW. Und da stimmt ihr mir sicherlich alle zu. So. Genau, der startet jetzt den Web-Server

03:54:50.800 --> 03:55:02.640
auf Port 8443. Und jetzt startet er den neuen Task. Und man muss wissen, auf dem ESP32,

03:55:02.640 --> 03:55:06.840
wie das läuft mit dem Taskhandling. Das ist gar nicht so, wobei eigentlich ist es viel

03:55:06.840 --> 03:55:14.520
einfacher als unter Windows. Solange ein Task läuft, läuft er. Solange er nicht sleept.

03:55:14.520 --> 03:55:26.040
Also sprich, wenn ein Task hängt, ist schlecht. Also man sollte einen Task nie unendlich lang

03:55:26.040 --> 03:55:32.320
in einer Weilschleife hängen lassen. Man sollte immer Prozessorzeit abgeben, zum Beispiel

03:55:32.320 --> 03:55:40.800
hiermit. Task. Delay. 100 Millisekunden oder sowas. CACW gleich CACW. Nee, eigentlich

03:55:40.800 --> 03:55:47.240
ist CACW gleich gleich CACW. Und in JavaScript ist CACW gleich gleich gleich CACW, weil JavaScript

03:55:47.240 --> 03:55:57.200
ist, die haben sie nicht mehr alle. Also nur C++ ist noch schlimmer als JavaScript. Zumindest

03:55:57.200 --> 03:56:06.000
ganz vereinfacht hat er startet hier einen neuen Thread. Und er führt diese Funktion

03:56:06.000 --> 03:56:14.320
aus. So. Diese Funktion macht folgendes. Startet den Server. Registriert für slash stats slash

03:56:14.320 --> 03:56:22.640
update slash restart diese Händler. Und dann hat es eine unendlich lange endlos Weilschleife,

03:56:22.640 --> 03:56:27.640
in der nichts anderes gemacht wird, wie zu gucken. Gibt es neue HTTP-Request, die abgearbeitet

03:56:27.640 --> 03:56:36.520
werden müssen. Und danach sleept es für 100 Millisekunden. Das ist wichtig, weil der Task

03:56:36.520 --> 03:56:43.240
Scheduler vom ESP32, der ist jetzt nicht sonderlich clever. Also sprich, wenn ich jetzt hier keine

03:56:43.240 --> 03:56:52.240
Prozesszeit abgib, hat das Ding unendlich lang hängt das in diesem Task drinne. Obwohl

03:56:52.240 --> 03:56:58.400
das nicht ganz richtig ist, wenn es Tasks mit gleicher Priorität gibt, dann kann der

03:56:58.400 --> 03:57:03.520
ESP32 Task Scheduler dazwischen hin und her schalten, auch wenn einer in Endlosschleife

03:57:03.520 --> 03:57:09.320
hängt. Aber die viel bessere Variante ist, niemals Endlosschleifen machen in Tasks ohne

03:57:09.320 --> 03:57:16.320
Delay. Und auch ganz wichtig, der Task im ESP32, er darf nie enden. Also sprich, wenn

03:57:16.320 --> 03:57:22.440
ich jetzt hier einen Break rein mache, crasht es. An diesem Break crasht der ganze ESP32,

03:57:22.440 --> 03:57:31.400
weil Tasks dürfen nie enden. Das ist so Policy. Tasks dürfen nur irgendwann mal gelöscht

03:57:31.400 --> 03:57:37.560
werden, aber Tasks dürfen nie von sich aus enden. Kann man den Task auch zu einer gewissen

03:57:37.560 --> 03:57:43.400
Uhrzeit triggern? Ja, kann man, kann man machen. Also die einfachste Variante ist Delay Until,

03:57:43.400 --> 03:57:46.680
man kann es ihm sagen, bis wann er schlafen soll, da muss er die Zeit ausrechnen. Du kannst

03:57:46.680 --> 03:57:52.280
aber einfach einen Timer nehmen, der in einem gewissen Intervall tickt. Gibt es zig Varianten,

03:57:52.280 --> 03:57:54.880
gibt es zig Varianten, wie man das machen kann. Ja, aber das geht auch zu einer gewissen,

03:57:54.880 --> 03:58:00.160
also zu einer gewissen Uhrzeit direkt nicht. Du musst, du musst die Uhrzeit umrechnen in

03:58:00.160 --> 03:58:07.600
interne Ticks, aber dann kannst du sagen, ok, also du hast ja NTP, hast du die Uhrzeit

03:58:07.600 --> 03:58:12.600
abgerufen, dann rechnest du aus, ok, ich will in 5 Stunden das weiter ausführen und

03:58:12.600 --> 03:58:20.840
dann rechnest du das um, was bedeuten 5 Stunden von jetzt in Ticks und dann sagst du V-Task-Delay-Until

03:58:20.840 --> 03:58:26.840
und wartest bis die, so lang bis die Zeit halt da ist. Ja, die schönere Variante zu

03:58:26.840 --> 03:58:32.240
warten, wenn man, wenn man auch spezielle Ereignisse wartet, zum Beispiel, wenn man

03:58:32.240 --> 03:58:39.960
darauf wartet, dass der User einen Knopf drückt oder so. Vielleicht ist jetzt nicht das beste

03:58:39.960 --> 03:58:43.760
Beispiel für Multiswitching, aber wenn man, wenn man mit einem Task warten möchte, bis

03:58:43.760 --> 03:58:48.360
der User einen Knopf drückt, dann ist es besser, man macht da irgendeinen Blocker rein,

03:58:48.360 --> 03:58:54.800
also man sagt nicht V-Task-Delay, sondern man macht das so, dass man irgendeinen Blocker

03:58:54.800 --> 03:59:02.080
nimmt, gibt es ja auch verschiedene Sachen, die eingebaut sind, der quasi unendlich langes

03:59:02.080 --> 03:59:08.160
Delay macht oder ein konfigurierbares Delay macht, außer es wird ein Flag gesetzt und

03:59:08.160 --> 03:59:11.920
sobald ein Flag gesetzt wird, ist er sofort wieder wach. Das ist dann, das ist die schönere

03:59:11.920 --> 03:59:18.840
Variante. Der Internet-Timer ist gut genug für, du hast beim ESP32, du hast verschiedenste

03:59:18.840 --> 03:59:29.920
Timer-Varianten, also die einfachste zu benutzende Variante ist die hier. Das ist ein C++-Wrapper,

03:59:29.920 --> 03:59:37.040
den die gebastelt haben, um die ESP32-Timer-Funktionalität. Du hast zig Timer-Funktionen, du hast einmal

03:59:37.040 --> 03:59:43.080
einen Hardware-Timer, der ist extrem genau, aber ein bisschen komplizierter zu verwenden,

03:59:43.080 --> 03:59:47.520
du hast diesen Free-Air-Toss-Timer, der nach jeder Main-Loop einmal läuft, du hast die

03:59:47.520 --> 03:59:57.760
Abstraktion von diesem Ticker und du hast noch, ich glaube du hast noch einen ESP32-Software-Timer,

03:59:57.760 --> 04:00:03.000
also du hast total viele Timer, also Timer gibt es da wirklich so viele Timer, dass

04:00:03.000 --> 04:00:07.240
du eher Schwierigkeiten hast, den richtigen Timer zu finden. So, genau und wie gesagt

04:00:07.240 --> 04:00:12.360
der Task bleibt jetzt für immer in dieser Endlosschleife hängen und wartet 100 Millisekunden

04:00:12.360 --> 04:00:17.720
macht weiter, immer 100 Millisekunden, unendlich lange, bis zum Reboot. So und die eigentliche

04:00:17.720 --> 04:00:23.280
Sache, was das Update macht, das zeige ich euch jetzt, gehen wir mal da hoch, das ist

04:00:23.280 --> 04:00:31.520
die Funktion, die das Update macht. Also sprich, wenn es ein Request gibt, wenn es ein Request

04:00:31.520 --> 04:00:41.160
gibt, auf Slash-Update, eine Post-Request auf Slash-Update, dann ruft er, äh Moment, wo

04:00:41.160 --> 04:00:49.440
habe ich es, hier, dann ruft er Handle-Update auf. Handle-Update bekommt den HTTP-Request-Parameter

04:00:49.440 --> 04:00:54.560
und Gedöns übergeben und ein Response-Objekt, wo ich an den kleinen Sachen zurückschreiben

04:00:54.560 --> 04:00:58.840
kann. Also ihr seht sie hier beim Update, diese Notifications, bei wie viel Prozent

04:00:58.840 --> 04:01:04.520
das Update-Stack gerade ist, schreibe ich in den Response-Stream rein. So, aber viel

04:01:04.520 --> 04:01:08.200
interessanter ist eigentlich, was der intern macht, um das Ganze updaten zu können, on

04:01:08.200 --> 04:01:15.560
the fly. Wohlgemerkt, das geht bei einem ESP32 nur, wenn man die Update-Partition oder die

04:01:15.560 --> 04:01:22.160
Update-Reservierung im Flash nicht ausgeschaltet hat, weil der Flash ist wie gesagt normalerweise

04:01:22.160 --> 04:01:28.760
eingeteilt ungefähr 1,3 MB für die Firmware, dann nochmal 1,3 MB für die Firmware, für

04:01:28.760 --> 04:01:32.560
Update, also sprich, dass ich updaten kann im laufenden Betrieb und dann umschalten kann

04:01:32.560 --> 04:01:38.280
und restliche Flash-Speicher für Dateien hier. Und wenn man das ausschaltet, man kann

04:01:38.280 --> 04:01:43.640
dem ESP32 auch sagen, hey, mach eine riesen Partition für meine Firmware, äh, dann kann

04:01:43.640 --> 04:01:48.320
ich kein OTA-Update machen. Also ich brauch immer die zweite Partition und den reservierten

04:01:48.320 --> 04:01:53.240
Speicherplatz für die zweite Firmware, dass ich OTA machen kann. Also OTA ist Over the

04:01:53.240 --> 04:02:01.520
Air-Update, weil der updatet nie quasi den Rom, äh, nicht Rom, den Flash, von dem ich

04:02:01.520 --> 04:02:07.840
gerade laufe, sondern der updatet immer in die zweite Partition rein und wenn ich fertig

04:02:07.840 --> 04:02:13.000
geupdatet habe, dann rebootet der und startet die zweite Partition und das nächste Mal macht

04:02:13.000 --> 04:02:16.520
er das Update in die erste Partition, rebootet und startet die erste Partition und so hin

04:02:16.520 --> 04:02:20.320
und her. Das heißt, man hat immer ein laufiges System, falls das Update, wenn man das nämlich

04:02:20.320 --> 04:02:24.600
nicht machen würde, man kann das bestimmt überschreiben und das Update bricht ab bei

04:02:24.600 --> 04:02:29.240
30%, dann hast du deine eigene Firmware überschrieben und kannst nicht wieder starten, um nochmal

04:02:29.240 --> 04:02:38.440
ein Update zu machen. Das wäre PaintsChamp, ziemlich, ja. Genau, ähm, also, der holt sich

04:02:38.440 --> 04:02:43.240
erstmal die Parameter, den Parameter CheckSum hier raus. CheckSum, CheckSum ist das hier,

04:02:43.240 --> 04:02:47.920
was ich übergebe. Also ich berechne auf dem Client einmal eine MD5-Summe und auf dem Server

04:02:47.920 --> 04:02:52.640
einmal eine MD5-Summe und wenn die übereinstimmen, weiß ich, die Firmware wurde ordnungsgemäß

04:02:52.640 --> 04:02:59.520
übertragen. Äh, hier startet er noch den, den, ähm, Update, den TimeOut Timer. Das

04:02:59.520 --> 04:03:05.120
ist das Ding, was guckt, okay, ist das Update hängen geblieben. Was machen wir gerade?

04:03:05.120 --> 04:03:12.920
Wir machen, ich kann dir das zeigen, wir programmieren gerade, ähm, dieses Board, dass man übers

04:03:12.920 --> 04:03:20.520
WLAN ein Firmware-Update machen kann. Ich starte das mal kurz. Äh, hat sich die IP

04:03:20.520 --> 04:03:26.200
geändert? Moment, ich sehe meine IP nicht, the fuck. Äh, vielleicht sollte ich mal diesen

04:03:26.200 --> 04:03:30.000
ganzen Schmodder hier unten nochmal kurz raus machen. Hat sich meine IP geändert? Ich glaube,

04:03:30.000 --> 04:03:34.960
meine IP hat sich geändert. Na toll. Ähm, ich zeig's dir jetzt gleich, indem ich noch

04:03:34.960 --> 04:03:42.840
mal geflasht hab. Genau, und, äh, also sprich, dass wir Firmware-Update übers WLAN machen

04:03:42.840 --> 04:03:50.800
können und auf dem Display ne Anzeige haben, wie weit das WLAN-Update ist. So, das funktioniert

04:03:50.800 --> 04:03:54.760
jetzt auch schon halbwegs noch nicht so hundertprozentig und ich erklär grad, wie das mit dem Update

04:03:54.760 --> 04:03:58.360
an sich funktioniert. Ich zeig's dir einfach mal, wie's aussieht, dass du's mal gesehen

04:03:58.360 --> 04:04:08.360
hast. So, starten please. IP, nee, IP sind wir auch die gleiche. Dann weiß ich nicht,

04:04:08.360 --> 04:04:10.880
dann, dann weiß ich ehrlich gesagt nicht, was da grad für Schmerzen hatte, warum das

04:04:10.880 --> 04:04:19.520
nicht mehr gelaufen ist, was auch immer. Ups. So, Update starten. Und zack, wenn Update startet,

04:04:19.520 --> 04:04:29.320
wirst du gleich den Progress sehen auf dem Display. Ah. Kannste zugucken, wie das Firmware-Update

04:04:29.320 --> 04:04:35.560
übers WLAN auf das Gerät geschrieben wird. Ich mein, das Display hat natürlich im laufenden

04:04:35.560 --> 04:04:39.880
Betrieb dann andere Aufgaben, zum Beispiel, was ich, Temperatur, Luftfeuchtigkeit, Klimaanlagen,

04:04:39.880 --> 04:04:44.040
was auch immer anzeigen. Aber ich finde, das ist eine nette Sache, dass man auch sieht,

04:04:44.040 --> 04:04:49.760
wie weit das Update ist auf dem Display. Ja, wenn das Update durch ist, schaltet ihr den

04:04:49.760 --> 04:04:56.320
Bildschirm aus, rebootet und fährt mit der neuen Firmware hoch. Genau, wir waren jetzt

04:04:56.320 --> 04:05:10.520
gerade beim Update. Also, wo sind wir stehen geblieben? Genau, der startet hier einen Timer

04:05:10.520 --> 04:05:15.560
an der Stelle und zwar der Timer, der guckt, dass das Update nicht hängt. Also sprich,

04:05:15.560 --> 04:05:18.800
das ist ein Timer, den hab ich auf 50 Sekunden gestellt, viel zu hoch, der soll auf 5 Sekunden

04:05:18.800 --> 04:05:26.520
sein. 50 Sekunden, Alter, 50 Sekunden Timer, was ist denn das für ein Spaß? Also sprich,

04:05:26.520 --> 04:05:34.360
der Timer, der tickt alle 5 Sekunden und dann guckt der und ne, der setzt Timeout auf

04:05:34.360 --> 04:05:41.120
True. Und wenn Timeout beim nächsten Timer-Durchgang immer noch gesetzt ist, startet er neu. Und

04:05:41.120 --> 04:05:48.880
ihr werdet sehen, hier irgendwo zwischendrin, resettet der Timeout immer. Hier, der setzt

04:05:48.880 --> 04:05:54.880
immer Timeout bei jedem Progress Schritt auf False. Also sprich, der Timer wird resettet,

04:05:54.880 --> 04:05:58.680
wenn der Timer nicht resettet wird, rebootet er das Ding. Das ist wichtig, bleibt nämlich

04:05:58.680 --> 04:06:02.080
ein Update wirklich mal hängen, wäre das Gerät nicht mehr erreichbar für ein weiteres

04:06:02.080 --> 04:06:15.480
Update. Das wäre ja ziemlich beknackt. Genau, ich mach mal kurz ein Bild drauf. Wo haben

04:06:15.480 --> 04:06:28.240
wir denn unser Push-Image? Ah ja, ja. Also das Bild muss da schon drauf, sonst sieht

04:06:28.240 --> 04:06:32.240
es da ja so langweilig aus in der Ecke oben, wenn das einfach nur ein dunkles Display ist.

04:06:32.240 --> 04:06:39.040
Statt, ah ja ja lieber, Wub-Old. Ja Wub-Old können wir auch noch rein machen. Das mit

04:06:39.040 --> 04:06:43.640
den Bildern ist überraschend einfach gewesen, muss ich sagen. Gut, während er uploadet,

04:06:43.640 --> 04:06:48.400
gucken wir uns nochmal kurz das Update an, wie es weitergeht. Weil jetzt kommt das eigene

04:06:48.400 --> 04:06:53.640
Firmware-Update. Also Timer setzt ja, er sagt alle laufenden Updates ausmachen, alle Errors,

04:06:53.640 --> 04:06:56.680
die es gegeben hat, wegmachen, die es nicht gegeben haben kann, weil er startet sich ja

04:06:56.680 --> 04:07:03.480
neu, wenn ein Update fehlgeschlagen ist, aber sicher ist sicher. Ah ja ja, da sind wir wieder.

04:07:03.480 --> 04:07:10.680
So, dann überprüft er die Check-Summe. Dann überprüft er die Check-Summe, ob quasi,

04:07:10.680 --> 04:07:17.720
also er setzt, nein, er nimmt sich die Check-Summe, die wir hier eben übergeben, MDFD MD5 Check-Summe,

04:07:17.720 --> 04:07:21.480
die man auf dem Client geprüft hat und setzt die hier bei dem Updater-Objekt, dass er

04:07:21.480 --> 04:07:26.840
das überprüfen kann, wenn die Firmware fertig hochgeladen ist, ob die Check-Summe übereinstimmen.

04:07:26.840 --> 04:07:31.560
Weil, wenn wir das nicht machen, kann es sein, dass beim Übertragen des Updates ein Fehler

04:07:31.560 --> 04:07:34.800
drin ist und wir das nicht mitbekommen. Wenn wir eine Check-Summe drüber machen, kriegen

04:07:34.800 --> 04:07:40.720
wir das mit und dann updaten wir einfach nicht. So, jetzt guckt ihr, ob genug Platz im Flash

04:07:40.720 --> 04:07:46.720
ist, also sprich Content-Length vom Update ist dafür noch Platz im Flash, wenn nicht

04:07:46.720 --> 04:07:52.680
Restart. Ihr werdet übrigens sehen, egal bei was der Updater fehlt schlägt, der restartet

04:07:52.680 --> 04:07:59.120
immer. Weil die einzig sind, das einzig sinnvolle Handling und Recovery von sowas ist bei so

04:07:59.120 --> 04:08:04.640
einem Restart. Sobald ich auch meine Main-Loop beendet hab vorher, ich kann das nicht mehr

04:08:04.640 --> 04:08:11.960
recovern, einfach Restart. Ähm, ist das peinlich, das ist C++. Leider, leider, muss ich sagen,

04:08:11.960 --> 04:08:20.040
ist das C++. Leider kommt man da nicht wirklich drumherum. Ich weiß, es gibt diese ganze

04:08:20.040 --> 04:08:26.880
Micro-Python-Geschichte, aber da hast du andere Probleme mit. Und was hat's mit HPP-Aufsicht?

04:08:26.880 --> 04:08:41.800
Äh, das ist gleich wie Punkt H. Plus die C++-Variante. Es ist ganz normale Header, wie H. Wobei

04:08:41.800 --> 04:08:46.680
ich ehrlich gesagt nicht weiß, ob das nicht intern doch ein Unterschied ist. So, äh,

04:08:46.680 --> 04:08:52.240
dann setzt er das Ganze in Progress ist und hier liest er quasi einfach nur jedes Mal,

04:08:52.240 --> 04:08:58.560
ne Moment. Hier liest er quasi die Bites, die man uploadet aus dem Curl, liest er ein.

04:08:58.560 --> 04:09:03.120
Und dann schreibt er die ganze Sache hier, ähm, dann update er den Progress, je nachdem

04:09:03.120 --> 04:09:14.760
wie weiter ist. Und hier schreibt er das Update auf den Flash. Hier schreibt er das Update

04:09:14.760 --> 04:09:21.360
in Flash. Wenn es einen Fehler gibt, Restart. Wie immer. Wenn er hier irgendwie mit der

04:09:21.360 --> 04:09:25.040
Pfeil-Länge-Probleme hat, Restart. Und wenn er hier unten durch ist, sagt er Response

04:09:25.040 --> 04:09:33.200
Code 200. Ähm, wenn es einen Fehler gibt, Restart. Ansonsten sagt er hier Finished. Äh,

04:09:33.200 --> 04:09:38.360
er ruft den Callback auf. Der sagt hier Update fertig. Er gibt nochmal die MD5-Sommer aus

04:09:38.360 --> 04:09:46.520
und stoppt den Server, wartet 100 Millisekunden, Restart. Fertig. Kennt sich einer im Chat

04:09:46.520 --> 04:09:59.560
mit UDP und FH4? Also UDP sagt mir was, aber was ist FH4? Autos. Forza Horizon 4. Äh,

04:09:59.560 --> 04:10:04.040
ok. Dann meinst du wahrscheinlich mit UDP auch nicht das Protokoll, sondern irgendwie

04:10:04.040 --> 04:10:10.280
irgendein Autogame, oder? Weil sonst erschließt sich wieder der Zusammenhang nicht so ganz.

04:10:10.280 --> 04:10:16.960
So. Tja. So, was wollten wir noch machen, Chat? Wir wollten das zentrieren noch, kann

04:10:16.960 --> 04:10:29.320
das sein? Wir wollten das Update noch zentrieren, ne? Man kann da Autostats auslesen. Ups. Wir

04:10:29.320 --> 04:10:35.560
wollten das noch zentrieren. Oh, das können wir noch machen. Ähm, die Schrift zentrieren.

04:10:35.560 --> 04:10:44.840
Ok. Wie zentrieren wir die Schrift? Das probieren wir jetzt mal hier drinnen aus, wie man Schrift

04:10:44.840 --> 04:10:56.760
zentriert, weil das schneller geht, als hier jedes Mal aufs Update zu warten. Äh. Ok,

04:10:56.760 --> 04:11:08.200
Draw. String. Probieren wir das mal aus. 0 auf 0, 0. Äh, Font. Ja, Font, den wir haben.

04:11:08.200 --> 04:11:18.200
Push. 0, 0. So, wie kriege ich 0 jetzt in die Mitte? Eigentlich doch genauso. Genauso

04:11:18.200 --> 04:11:29.120
wie vorhin, oder? Also sprich, äh, TFT. Äh, hallo, TFT. Breite. Durch 2. Und jetzt müsst

04:11:29.120 --> 04:11:32.360
... Ah, Moment. Nee, jetzt ist nicht in der Mitte. Jetzt... Doch, ich weiß, was ich

04:11:32.360 --> 04:11:35.960
machen muss. Aber gucken wir mal. Gucken wir mal. Jetzt sollte der... Jetzt sollte das

04:11:35.960 --> 04:11:41.880
zumindest schon so ein bisschen in der Mitte sein. So. Ansatzweise in der Mitte, aber nicht

04:11:41.880 --> 04:11:55.560
wirklich hundertprozentig in der Mitte. Auflad hoch. Reboot. So, Zeig her. Oh. Es ist... Es

04:11:55.560 --> 04:12:00.320
ist fast in der Mitte. Es ist nicht wirklich in der Mitte, aber... Es geht in die richtige

04:12:00.320 --> 04:12:06.720
Richtung. Können wir uns darauf einigen, ja? Es... Jetzt ist hier... Aja, ja, Kopf ist

04:12:06.720 --> 04:12:16.680
... Bisschen... Fehlt eine Ecke. So wie bei Max-FPS-Keks. Da fehlt auch eine Ecke. Okay,

04:12:16.680 --> 04:12:19.960
das hat nicht so ganz funktioniert. Also, wir machen das auf jeden Fall jetzt erstmal

04:12:19.960 --> 04:12:29.080
auf Höhe 70. Und wahrscheinlich müssen wir jetzt sagen, ähm, dass der... Die Ausrichtung

04:12:29.080 --> 04:12:35.220
des Textes soll der machen Top Center. Gucken, ob das jetzt funktioniert, was ich hier getrieben

04:12:35.220 --> 04:12:46.760
habe. Top Center. Äh, Tbilius Text Width kriege ich nicht so ohne weiteres raus. Das würde

04:12:46.760 --> 04:12:53.680
funktionieren, aber Text Width kriege ich nicht so ohne weiteres raus. Ah. Doch, ich

04:12:53.680 --> 04:12:57.080
müsste den Text erstmal irgendwo hinschreiben, dass ich die weiter rauskriege. Ich glaube,

04:12:57.080 --> 04:13:09.560
das geht auch so, wenn ich das zentriere. Schauen wir mal. Ha! Genau in der Mitte. Und

04:13:09.560 --> 04:13:19.120
jetzt müssen wir das mal richtig machen. Aja, ja. Aja, ja, ja, ja. Upload. Weil dafür

04:13:19.120 --> 04:13:28.920
ist diese Sache, da kann man quasi so, ähm, so Ankerpunkte mit einstellen. Wo die Sachen

04:13:28.920 --> 04:13:34.200
sich hier dran ausrichten, wenn ich hier Angaben, wo das hinschreiben soll, rein mache. Fancy,

04:13:34.200 --> 04:13:41.800
richtig fancy. So. Und jetzt gucken wir mal. Jetzt haben wir das einzig, das einzig wahre

04:13:41.800 --> 04:13:55.200
Kombination. Also besser, besser geht's jetzt immer. Aja, ja. Aja, ja. Oh, ich hab Hunger,

04:13:55.200 --> 04:14:02.240
Leute. Übelst Hunger. Ich glaube, ich glaube, mal was essen. So. Ähm, jetzt sind wir ja

04:14:02.240 --> 04:14:10.040
immer noch zu einer Sache nicht gekommen. Und jetzt mal über OTA flaschen, ob die neue

04:14:10.040 --> 04:14:14.720
Firmware auch geladen wird. Können wir machen. Wir machen aus dem Aja, ja mal Aja, ja. So

04:14:14.720 --> 04:14:22.360
und die neue Firmware flaschen wir jetzt hier drüber. Äh. Moment, ich muss das, ich muss

04:14:22.360 --> 04:14:46.480
das erst noch mal kompilieren. Wie ging das noch mal? So. Genau. Also das da, das ist

04:14:46.480 --> 04:14:52.320
hier Firmware Upload und davor muss ich den ganzen Kram noch einmal kompilieren. So, also

04:14:52.320 --> 04:14:56.520
von der Idee hier sollte der jetzt nach dem Firmware Upload nach dem Firmware Update nicht

04:14:56.520 --> 04:15:08.080
mehr Aja, ja ja ja anzeigen, sondern nur noch Aja, ja. Schauen wir mal. So, kompiliert

04:15:08.080 --> 04:15:17.680
neue Firmware. Linking Firmware. Ja. 90% Flash voll. Null. Das Wifi und das HTTPS Zeug

04:15:17.680 --> 04:15:44.920
hier so fett. Ok, Update läuft. Go. Ich glaube ich weiß woran das liegt. Ich glaube ich

04:15:44.920 --> 04:16:00.840
weiß woran das liegt. Der sollte aber, das hier kommt sich in die Quere, wobei ich ehrlich

04:16:00.840 --> 04:16:08.600
gesagt nicht so genau verstehe warum. Ich glaube das kommt sich aus vollen Gründen

04:16:08.600 --> 04:16:18.200
in die Quere. Der schreibt aufs Display. Der schreibt aufs Display. Wie wechselst du so

04:16:18.200 --> 04:16:22.560
schnell zwischen Linux und Windows? Ich habe Linux in der VM und ich schalte einfach mit

04:16:22.560 --> 04:16:27.280
Control-Windows-Tasten zwischen den Windows-Desktops um. Und innerhalb von Linux mit Windows hast

04:16:27.280 --> 04:16:36.920
du 1, 2, 3. Ich glaube ich weiß was passiert. Die Main Loop läuft und das Update startet,

04:16:36.920 --> 04:16:42.640
der beendet die Main Loop aber der hängt noch irgendwie hier drinnen. Und dadurch

04:16:42.640 --> 04:16:47.280
dass er das so schnell macht ist die Chance dass er in irgendeinem komischen State kommt

04:16:47.280 --> 04:17:00.160
relativ hoch. So, also eigentlich müsste man das jetzt locken, aber wir locken das jetzt

04:17:00.160 --> 04:17:07.160
nicht. Sondern wir machen einfach mal ein Delay. Ich gebe zu das ist nicht die schönste

04:17:07.160 --> 04:17:10.600
Variante, aber ich will einfach nur gucken ob das mit dem Update funktioniert, dann kann

04:17:10.600 --> 04:17:14.640
man sich um den Rest kümmern. Ja übrigens, das ist der nächste Grund hier, warum ich

04:17:14.640 --> 04:17:24.000
das Multithreaded machen will. Was mir ja vorschlebt ist so eine Display-Klasse, die ein Renderthread

04:17:24.000 --> 04:17:31.280
hat und dass ich sicher sein kann, dass der Zugriff auf das Display immer vom gleichen

04:17:31.280 --> 04:17:43.240
Thread passiert. Weil dann kann so ein Scheiß gar nicht passieren. Ok, Firmware Update.

04:17:43.240 --> 04:17:54.680
So, mal gucken ob das jetzt funktioniert mit hochladen. Ich hoffe es crasht nicht. Fängt

04:17:54.680 --> 04:18:04.400
an. Ok, das funktioniert. Das Delay ist nicht schön, aber Display Factory Class. Wir sind

04:18:04.400 --> 04:18:16.760
nicht in Java. Gibt es morgen ein Aufwachs-Stream? Wahrscheinlich, ja. So, und jetzt macht der

04:18:16.760 --> 04:18:22.160
Firmware Update. Und nochmal ganz kurz, ich habe jetzt Aja jajaja zu Aja jaja geändert.

04:18:22.160 --> 04:18:25.560
Also sprich, wenn das Firmware Update geklappt hat, rebootet er jetzt und dann steht nur

04:18:25.560 --> 04:18:44.080
noch Aja jaja da, anstatt Aja jajaja. Hat funktioniert. Also Firmware Update tut. Magic,

04:18:44.080 --> 04:18:54.360
genau. Ja perfekt, wunderbar. Also, ich habe mal eine Frage an euch. Ich würde ja gerne

04:18:54.360 --> 04:19:00.520
auch ein bisschen Multithreading mit Display machen. Habt ihr noch Brain Kapazitäten frei?

04:19:00.520 --> 04:19:11.800
Wir können kurz Pause machen und ich ess was nebenbei. Habt ihr noch, soll man weitermachen?

04:19:11.800 --> 04:19:20.400
Oder wollen wir morgen Mittag oder so weitermachen? Max, herzlichen Glückwunsch, du kannst jetzt

04:19:20.400 --> 04:19:25.440
eine Firmware laden, hast aber keinen Speicherplatz mehr, um was zu machen. Doch habe ich, ich

04:19:25.440 --> 04:19:51.280
habe noch, Moment. Ich habe noch, um genau zu sein. What? Verarschen. Ich habe noch um

04:19:51.280 --> 04:20:10.760
genau zu sein. 100? What the fuck? Ich habe noch genau 140 Kilobyte. SDBA 42, neun Monate,

04:20:10.760 --> 04:20:24.360
angeschön. Excellent Subscription, huge. Moment. Angeschön. Ich habe noch genau 140 Kilobyte

04:20:24.360 --> 04:20:41.200
frei von 1,3 MB. Also sprich, also runden wir mal auf. 1 MB geht drauf für WLAN und HTTPS

04:20:41.200 --> 04:20:49.880
TLS. Easy as fuck. Hey, immerhin kann ich jetzt ein secures Update über HTTPS machen,

04:20:49.880 --> 04:20:54.640
das WLAN. Dafür habe ich nur noch 140 Kilobyte für mein Sketch für sinnvolle Sachen frei.

04:20:54.640 --> 04:21:00.000
Aber man kann es, also man kann der Sache ein bisschen entgegenwirken. Ich könnte zum

04:21:00.000 --> 04:21:05.880
Beispiel, ups, also was ich machen kann ist, wenn mir der Speicher nicht reicht, also wenn

04:21:05.880 --> 04:21:12.480
mir 100, irgendwie 1,3 MB zu wenig sind, ich kann die Partitionierung ändern von dem, vom

04:21:12.480 --> 04:21:20.800
ESP32. Ja, Speicher erweitern, auch wenn Kappa dahinter steht, das geht tatsächlich. Es

04:21:20.800 --> 04:21:26.960
sind 4 MB, aber ich kann die Einteilung ändern. Guck mal mal, also ich brauche ja nur, ich

04:21:26.960 --> 04:21:37.400
brauche ja nur ungefähr 300 Kilobyte für meine Fonts. Das heißt, jetzt, das habe ich

04:21:37.400 --> 04:21:42.800
noch nie gemacht. Das habe ich noch nie gemacht. Ich weiß nur, es gibt hier so CSV-Files, wo

04:21:42.800 --> 04:21:49.080
drin steht, wie groß die Firmware ist. Äh ne, ich habe schon einen Compiler. Guck mal,

04:21:49.080 --> 04:21:54.160
Optimize for size habe ich schon eingestellt. Mehr geht nicht. Das ist schon Maximum. Was

04:21:54.160 --> 04:21:58.440
ich übrigens überraschend finde ist, dass der Upload-Speed, das doppelte geht, von dem,

04:21:58.440 --> 04:22:07.160
was eigentlich gehen sollte. Ähm, also sprich, es gibt hier verschiedene Partitionen, Partitionierungsmöglichkeiten

04:22:07.160 --> 04:22:16.160
für den Flash. So, und die Fault ist folgendes. Die Fault ist Firmware, das was ihr hier seht,

04:22:16.160 --> 04:22:21.760
die Größe, das die ich auch habe, Firmware so groß und für Updates so groß. Dann noch

04:22:21.760 --> 04:22:27.080
ein paar Bytes für NFS und OTA, ich weiß nicht, was das genau ist, irgendwelche Metadatengeschichten

04:22:27.080 --> 04:22:32.040
und das hier ist das Flash-Filesystem. Also sprich, hier ist er 1,3 MB und hier ist er

04:22:32.040 --> 04:22:40.640
5 MB. Was wir machen können ist, wir können das SPIFFs kleiner machen, können das SPIFFs

04:22:40.640 --> 04:22:47.280
kleiner machen und, oh das hat, boah fuck, wie geht denn das? Hab ich noch nie ausprobiert.

04:22:47.280 --> 04:22:51.560
Das probieren wir jetzt mal aus. Wir können das SPIFFs kleiner machen, ähm, also sprich

04:22:51.560 --> 04:22:59.000
das Flash-Filesystem, weil wir brauchen ja plus 300 Kilo Bytes und die Partitionsgröße

04:22:59.000 --> 04:23:03.800
für die App, das probieren wir mal aus. Da bin ich jetzt gespannt darauf, wie das funktioniert.

04:23:03.800 --> 04:23:12.400
So, wahrscheinlich, okay wir laden uns erstmal die Datei runter. Die legen wir mal hier ins

04:23:12.400 --> 04:23:17.000
Hauptverzeichnis, weil ich nicht weiß, wo das anders hin muss. Dann benennen wir die

04:23:17.000 --> 04:23:26.400
um, nicht in default, sondern in, keine Ahnung, max.csv. Und geben jetzt mal hier, Build Partitions,

04:23:26.400 --> 04:23:30.320
oh fuck, Build Partitions, das ist jetzt ja Default, da sollte sich ja nichts ändern,

04:23:30.320 --> 04:23:34.200
aber wir sehen, ob es geht, max.csv an. Da sehe ich schon mal, ob ich in die richtige

04:23:34.200 --> 04:23:42.160
Datei gelegt habe. Wie viele Threads kann man gleichzeitig laufen lassen? Ich glaube

04:23:42.160 --> 04:23:47.320
sogar, dass das, also okay, ich war unbeschränkt, unbeschränkt wird es nicht sein, aber relativ

04:23:47.320 --> 04:24:07.960
viele, max.task, nee, max.task, ja ich weiß es nicht, wahrscheinlich 32 oder sowas, genug,

04:24:07.960 --> 04:24:12.760
also parallel laufen kannst du nur zwei, das Ding hat nur zwei Kerne, aber in der Schedule

04:24:12.760 --> 04:24:21.160
wird wahrscheinlich einige abkönnen. Ich gehe davon aus, du kannst mehr Threads aufmachen,

04:24:21.160 --> 04:24:28.320
als du sinnvoll verwenden kannst, weil der Aufwand so groß wird, bei 30 Milliarden Threads,

04:24:28.320 --> 04:24:34.720
Standard Arduino kann nur einer, ja, das funktioniert hier auch nur, weil das ein Free

04:24:34.720 --> 04:24:44.040
Athos ist, zwei CPU Kerne hat, mit einem Arduino oben drauf. Okay, die Frage ist jetzt, schlägt

04:24:44.040 --> 04:24:50.680
das fehl, wenn ich hier was angebe, was es nicht gibt, Build, not found, okay, okay,

04:24:50.680 --> 04:25:00.760
also max.csv, Search, Search Marketplace für csv, Excel Viewer, oh guys, geh mal weg, das

04:25:00.760 --> 04:25:08.000
letzte was ich in meinem Visual Studio Code brauche ist, Rainbow csv, was ist denn das,

04:25:08.000 --> 04:25:18.960
oh, boah, das ist geil, das brauche ich, exellent, exellent, das brauche ich, beste, ha, guckt

04:25:18.960 --> 04:25:27.080
euch mal an, sieht das nicht wunderbar aus jetzt, Highlighter des csv, geiler geht es

04:25:27.080 --> 04:25:32.840
ja nicht mehr, so, jetzt müssen wir ein bisschen Big Brain rechnen, jetzt müssen wir ein bisschen

04:25:32.840 --> 04:25:39.640
rechnen, also, wenn wir das jetzt größer machen, oh Leute, quick, quick muffs, also

04:25:39.640 --> 04:25:44.960
wir machen das jetzt größer, nur mal um 1, sagen wir, wir machen das um 1 größer,

04:25:44.960 --> 04:25:52.240
dann muss ich das hier auch 1 hochzählen, so, dann machen wir das hier größer, und

04:25:52.240 --> 04:25:56.800
dann muss ich das hier auch um 1 hochzählen, und das hier muss ich um 2 kleiner machen,

04:25:56.800 --> 04:26:03.440
oh, fuck, und das hier muss ich um 2 kleiner machen, weil kein Speicherplatz mehr da ist,

04:26:03.440 --> 04:26:13.920
oder, oder, funktioniert das jetzt, bin ich ja mal gespannt, ob ich mehr Platz hab, Synthwave

04:26:13.920 --> 04:26:18.800
84 Code Highlight, was ist das denn, Moment, jetzt bin ich mal gespannt, was der reportet,

04:26:18.800 --> 04:26:39.840
ja, es ist größer, es ist egal, ob das Hex ist, eine 1 ist überall eine 1, also wenn

04:26:39.840 --> 04:26:44.040
ich das hier an eine 1 ändere, kann ich es auch da ändern, natürlich, es ist größer

04:26:44.040 --> 04:26:53.160
geworden, äh, oh, Moment, nee, nee, Offset muss um 1 hoch, das Offset geht um 1 hoch

04:26:53.160 --> 04:26:57.880
und das Offset, das ist immer 1 nach dem anderen, also sprich, das Offset ist 1 hochgegangen

04:26:57.880 --> 04:27:14.920
plus das, nee, Moment, Lowbrain, Moment, Moment, ich bin, ich muss nochmal rückgängig

04:27:14.920 --> 04:27:28.080
machen, ich bin verwirrt, ja, nee, doch, nee, Moment, Moment, Moment, das da plus das,

04:27:28.080 --> 04:27:47.320
ja, tatsächlich, tatsächlich, äh, was sind die riesigen, wenn das PIFs kleiner macht,

04:27:47.320 --> 04:27:51.480
eigentlich, eigentlich kein, theoretisch ist das, das, das Realeveling dann nicht so gut,

04:27:51.480 --> 04:27:55.960
aber es ist ja immer ehrlich gesagt nicht so, dass man, äh, Megabyteweise Zeug auf

04:27:55.960 --> 04:28:02.920
Flash schreibt von so einem Ding am Tag, eigentlich keine, ja, so, also, okay, okay, wir machen,

04:28:02.920 --> 04:28:07.080
wir machen, wir machen das, wir machen das jetzt mal größer, ich bin ja gerade, okay,

04:28:07.080 --> 04:28:13.280
also, sprich, chat, ihr müsst jetzt mal mitgucken, wie viel größer kann man das machen, das

04:28:13.280 --> 04:28:20.880
sind Bites, okay, wir müssen jetzt erstmal, Moment, Moment, Hex to Dezimal und Werter,

04:28:20.880 --> 04:28:32.320
perfekt, Hex und Word, Moment, kann das das auch so machen, das da Bites, 2 Kilo Bites,

04:28:32.320 --> 04:28:43.080
so, ähm, kann, kann das eigentlich auch Hex, kann das, kann das eigentlich auch Hex, Google,

04:28:43.080 --> 04:28:52.040
kann das eigentlich auch so was reinhauen, ne, ah, das wäre zu, zu low, also, 1500 Kilo

04:28:52.040 --> 04:28:59.160
Byte, ich brauch aber nur 300, ich brauch aber nur 300 Kilo Byte, oder sagen wir mal,

04:28:59.160 --> 04:29:02.720
sagen wir mal so, äh, wir machen, wir machen einfach mal die Hälfte, oder, wir machen

04:29:02.720 --> 04:29:07.200
einfach mal die Hälfte, das reicht, also sprich, wir machen anstatt 17, machen wir,

04:29:07.200 --> 04:29:13.360
aber bei 17 gibt es eben mit der Hälfte, das ist ein bisschen, bisschen doof, äh, da

04:29:13.360 --> 04:29:20.040
waren wir halt, 13 5000 oder so, äh, welche Arduino würdest du als ersten Microcontroller

04:29:20.040 --> 04:29:23.400
Anfänger empfehlen, muss er ein Original sein, oder können er breit, ja, kein, ich würde

04:29:23.400 --> 04:29:29.840
mir heute gar kein Arduino mehr kaufen, ganz ehrlich, hol dir so einen, gehst in Amazon,

04:29:29.840 --> 04:29:41.200
holst den Dreierpack, falls du mal einen kaputt machst, so, Dreierpack 20 Euro, bei Aliexpress

04:29:41.200 --> 04:29:46.160
bestellen ist natürlich noch deutlich günstiger, ich finde, die Dinger sind nach wie vor zum

04:29:46.160 --> 04:29:51.880
Einstieg wirklich gut, wobei ich jetzt mal echt sagen muss, das Ding hier, was ich hier

04:29:51.880 --> 04:29:57.160
grad habe, also was du hier grad siehst, ist auch gar nicht übel, da kostet halt

04:29:57.160 --> 04:30:01.480
eine 14 Euro, aber du hast ein Display dabei, und ein Display ist eine coole Sache, wenn

04:30:01.480 --> 04:30:06.240
man Sachen übt, dass man sich direkt auf dem Gerät was anzeigen lassen kann, also wirklich

04:30:06.240 --> 04:30:11.880
übel finde ich den auch nicht, es sollte einen ESP2866 reißen, ja, aber ich finde

04:30:11.880 --> 04:30:20.760
einen ESP32 einfach angenehmer, kannst du auch mit einem ESP2866 anfangen, dann holst

04:30:20.760 --> 04:30:29.480
du dir einen NodeMCU oder so, ist ein bisschen günstiger, aber ganz ehrlich, den ESP32 gut

04:30:29.480 --> 04:30:37.520
ist, ich finde, ich finde die ESP32, finde ich, finde ich eine Ecke angenehmer, ja,

04:30:37.520 --> 04:30:41.720
also der mit Display finde ich auch nicht verkehrt zum Einsteigen, aber die mit Abstand

04:30:41.720 --> 04:30:45.000
einfachste Variante, wenn du einfach ein bisschen rumprobieren willst, ist der hier,

04:30:45.000 --> 04:30:48.840
da kannst du eigentlich nichts verkehrt machen, und wenn du das Dreierpack nimmst, selbst

04:30:48.840 --> 04:30:53.320
wenn du mal bei einem den USB Anschluss abbrichst und den anderen irgendwie grillst, weil du

04:30:53.320 --> 04:31:01.400
aus Versehen zu viel Spann hast, hast du immer noch einen, aber die sind recht robust, also

04:31:01.400 --> 04:31:05.320
den finde ich gut, und mit dem Display kannst du natürlich sowas hier machen, das ja auch

04:31:05.320 --> 04:31:18.480
nicht zu unterschätzen ist, ja, so, ok, wir waren dabei unsere Petitions Tabelle zu berechnen,

04:31:18.480 --> 04:31:30.040
also, wie mache ich das jetzt, chat, give energy, also, size, wenn ich die size hier

04:31:30.040 --> 04:31:34.560
jetzt, ich vergrößere die Dinger mal, das muss doch hinhauen, wenn ich die um 6 größer

04:31:34.560 --> 04:31:55.680
mache, also, wenn ich die um 12 größer mache, dann bin ich hier bei 5, oder 5, ja, ok, das

04:31:55.680 --> 04:32:12.160
machen wir nicht, das andere war besser, das andere war besser, also, das reicht nicht,

04:32:12.160 --> 04:32:17.080
fuck, ich kann nicht einfach, ich kann nicht einfach die 20 machen, den 20 machen, das

04:32:17.080 --> 04:32:28.280
funktioniert nicht, das ist zu wenig, ne, Excel habe ich nicht, ok, dann machen wir

04:32:28.280 --> 04:32:36.720
beide 5 hoch, 5 müsste, warte mal, 4 hoch, 4 kann ich so machen, 8, 8, dann habe ich

04:32:36.720 --> 04:32:43.480
noch 9, ne, Moment, ich habe ja auch Mist gemacht, Moment, Moment, wenn ich 6 hier hoch

04:32:43.480 --> 04:33:09.680
mache, 12, dann habe ich, ich habe eine 0 zu wenig gemacht, ne doch, Excel 95, ne, also,

04:33:09.680 --> 04:33:14.360
wenn ich das hier, warte mal, wenn ich das hier einmal, einmal 6 abzieht, sind so, und

04:33:14.360 --> 04:33:24.920
beim nächsten Mal 6 sind das dann, warte mal, 11, 5, so, ne, 50.000 sind es danach

04:33:24.920 --> 04:33:30.240
noch so, und 50.000, da sieht das nämlich schon ein bisschen anders aus, dann sind das

04:33:30.240 --> 04:33:41.760
nämlich am Ende, das reicht, das reicht, das reicht genau für die Fonds, das reicht genau

04:33:41.760 --> 04:33:51.160
für die Fonds, kommt mal, wenn ich mich nicht verrechnet habe, das kann nicht immer sein,

04:33:51.160 --> 04:34:01.160
das reicht genau für die Fonds, exzellent, so machen wir das, ok, also, dann sind das

04:34:01.160 --> 04:34:08.960
hier, 20, ja, Poggers, aber richtig, ok, ok, oh fuck, ok, 20, also ich mache das hier

04:34:08.960 --> 04:34:15.480
um 6 rauf, 20, ich mache das hier um 6 rauf, das heißt, das sind 21, ich mache das hier

04:34:15.480 --> 04:34:36.800
um 6 rauf, das sind 20, das heißt, das hier müsste 41 sein, stimmt das? Ach stimmt, das

04:34:36.800 --> 04:34:45.720
ist Hex, ach ne, das ist auch noch Hex, was soll denn der Scheiß, warum ist das Hex, oh

04:34:45.720 --> 04:34:54.720
ne, das ist ja Lowprey, oh fuck, das funktioniert nicht, das ist ja auch Hex, stimmt, natürlich

04:34:54.720 --> 04:35:02.680
ist das Hex, ich habe keinen Bock, den Scheiß jetzt in Hex zu rechnen, was ist das für ein

04:35:02.680 --> 04:35:16.960
Hex, RIP, RIP Hex, oh, was genau wird das, also was wir heute gemacht haben ist, dass

04:35:16.960 --> 04:35:25.120
du übers WLAN, dass du übers WLAN dein Firmwareupdate machen kannst, sieht dann so aus, also du kannst

04:35:25.120 --> 04:35:37.160
übers WLAN ein Firmwareupdate auf das Ding packen und du kriegst angezeigt, kann das sein,

04:35:37.160 --> 04:35:51.800
dass der irgendwie seine IP vergisst oder so, zumindest du kannst Firmwareupdates machen,

04:35:51.800 --> 04:35:58.600
kann das sein, dass das DHCP irgendwie Timeout wird oder sowas, weil das ist definitiv nicht

04:35:58.600 --> 04:36:07.320
normal, ah, ich weiß woran das liegt, ich weiß, das habe ich ja ganz vergessen, ja,

04:36:07.320 --> 04:36:13.960
man muss hier regelmäßig checken, dass WIFI noch oben ist und wenn WIFI nicht mehr oben

04:36:13.960 --> 04:36:20.640
ist, muss man WIFI wieder starten, was aber wurscht ist, ich zeige es dir trotzdem, ich

04:36:20.640 --> 04:36:27.160
mache jetzt einfach mal ein Reset, dass WIFI wieder funktioniert, hast du dem Gerät eine

04:36:27.160 --> 04:36:32.360
Startschalte IP geben, nee, ich weiß aber woran das liegt, die Dinger verlieren ab und

04:36:32.360 --> 04:36:45.240
zu WLAN Verbindungen, man muss immer sowas hier machen, aber das macht man auch in einem

04:36:45.240 --> 04:36:53.920
eigenen Task normalerweise, sowas in der Richtung muss man eigentlich immer machen, sowas musst

04:36:53.920 --> 04:36:57.920
du irgendwie immer permanent laufen haben, falls er mal Verbindungen verliert, ich weiß,

04:36:57.920 --> 04:37:02.040
dass ich Auto-reconnect habe, aber das klappt manchmal nicht und das macht man am besten

04:37:02.040 --> 04:37:08.200
auch in einem eigenen Task, so und jetzt kann ich es dir zeigen mit dem Firmwareupdate, zack,

04:37:08.200 --> 04:37:37.400
und irgendwann geht es los, Firmwareupdate über das WLAN, aha, ah, wtf, nochmal Firmwareupdate

04:37:37.400 --> 04:37:48.440
über das WLAN, ah jetzt klappt es, ok, dass du siehst, wie weit das Firmwareupdate ist,

04:37:48.440 --> 04:37:55.520
das haben wir heute gemacht und gerade, genau, wenn das Firmwareupdate durch das Reboot das

04:37:55.520 --> 04:37:59.760
ist, das hier ist übrigens nicht gut gemacht, also das hier muss auf jeden Fall immer im

04:37:59.760 --> 04:38:03.200
gleichen Set passieren, das kann nicht sein, dass es hier so Race-Conditions gibt zwischen

04:38:03.200 --> 04:38:08.640
hier Drawter was, da Drawter was und da stoppt er mitten in der Draw-Aktion, das ist doof,

04:38:08.640 --> 04:38:12.520
genau, du siehst, wie weit das Firmwareupdate ist und wenn das Firmwareupdate fertig ist,

04:38:12.520 --> 04:38:18.240
dann macht er den Bildschirm aus, Rebootet und startet neu, mit der neuen Firmware und

04:38:18.240 --> 04:38:21.680
was ich jetzt gerade probiere ist und ich bin da gerade zu low-brain für das zu berechnen,

04:38:21.680 --> 04:38:33.120
weil das ist Hex, ehm, ich will die Partitionsgröße ändern, dass ich mehr Platz habe, ok, chat,

04:38:33.120 --> 04:38:39.720
also das heißt Hex, Windows-Taschenrechner, Kalk, zack, Windows-Taschenrechner, wie stellt

04:38:39.720 --> 04:38:46.760
man den Kram um, dass es Hex ist, Programmer, ok, das da, wow, das habe ich aber nicht

04:38:46.760 --> 04:39:02.840
kopiert, ah doch, habe ich kopiert, so, ehm, in Hex, nein, Hex, ok, Hex, also, ist das jetzt

04:39:02.840 --> 04:39:14.040
alles in Hex, passt das jetzt, also, machen wir es mal so, ehm, ich will mal, sagen wir

04:39:14.040 --> 04:39:37.160
mal, 300 Kilo Bytes oder so, 300 Kilo Bytes, also sagen wir mal, 300 Kilo Bytes, also gut,

04:39:37.160 --> 04:39:56.640
das heißt, ich kann jetzt hier, Moment, Minus, warte mal, immer in Google, klar, also, das

04:39:56.640 --> 04:40:08.000
heißt, ich rechne jetzt hier mal Minus, warte mal, was hatten wir jetzt, Minus 300.000, 300.000,

04:40:08.000 --> 04:40:16.760
nee, what the fuck, achso, das ist ja die aktuelle, Moment, achso, das ist, Moment, das ist ja

04:40:16.760 --> 04:40:22.880
nicht in Hex, was mache ich denn hier, ah fuck, das muss ich, das ist ja nicht in Hex,

04:40:22.880 --> 04:40:40.680
das ist, das ist Dezimal, kann das Google auch, nee, ah, was, what the fuck, eigentlich nur

04:40:40.680 --> 04:40:44.640
plus 60.000, ja, glaube ich dir, glaube ich dir, ich muss mir das sagen, ich mache das

04:40:44.640 --> 04:40:55.160
zu sehr in sowas, Dezimal 6, okay, what, also muss ich jetzt für 300 Kilo Bytes, plus,

04:40:55.160 --> 04:41:03.200
das rechnen, also, da komm ich, das krieg ich da, dreh ich ja, dreh ich ja ab im Kopf,

04:41:03.200 --> 04:41:09.560
bis ich den Scheiß berechnen hab für alles, eigentlich doch nur plus 60.000 und dann hast

04:41:09.560 --> 04:41:32.600
du deine, achso, ja, aber das ist ja, das ist ja, das ist ja wir, wobei, wisst ihr was

04:41:32.600 --> 04:41:45.080
ich jetzt nicht kapier, das weiß ich nicht kapier, warum ist der Offset bei 29, 15.000

04:41:45.080 --> 04:42:09.720
Hex, plus 14.000 Hex sind doch nicht 29, oder, das ist doch irgendwas, hä, ist das echt

04:42:09.720 --> 04:42:37.880
so, probieren wir mal aus, hallo, plus, achso, warum ist das in Hex so, ist das überhaupt

04:42:37.880 --> 04:42:48.360
Hex, was man hier eingeben, Alter, Winner aus Taschenrechner, please, macht der das

04:42:48.360 --> 04:42:53.320
jetzt eigentlich richtig, ist das jetzt überhaupt Hex, was ich hier eingebe, und warum löscht

04:42:53.320 --> 04:43:00.760
er den Kram hier nicht, okay, der Winner aus Taschenrechner, Calculator, was ist denn,

04:43:00.760 --> 04:43:13.640
was, ja, ja, gut, Hex, Hex Calculator, excellent, okay, das da, plus das da, Calculate, was,

04:43:13.640 --> 04:43:23.680
was ist, kennt jemand gescheit, warum ist das 28, jetzt blicke ich nicht mehr durch,

04:43:23.680 --> 04:43:29.920
jetzt blicke ich nicht mehr durch, warum das so ist, keine Ahnung, das ist mir jetzt zu,

04:43:29.920 --> 04:43:37.080
also kann man den Scheiß doch einfach zusammenrechnen, hab ich das gar nicht falsch gemacht eben,

04:43:37.080 --> 04:43:46.200
quick muffs, okay, okay, also, also, warte mal, ich mach jetzt, ich mach jetzt mal wirklich

04:43:46.200 --> 04:44:00.680
ganz lowbrane, ja, also, drei dazu, drei dazu, äh, Moment, acht, äh, Moment, was mach

04:44:00.680 --> 04:44:14.120
ich denn da für ein Scheiß, sieben, acht, sieben, und das hier jetzt, und das sind jetzt

04:44:14.120 --> 04:44:35.000
also, dann 34, oder, ne, 35, 35, 30, so, und, ja, das, nicht nur für dich, nicht nur für

04:44:35.000 --> 04:44:44.200
dich, Spanisch, das ist für mich auch Spanisch, okay, wir rechnen jetzt einfach mal, 18 Hex,

04:44:44.200 --> 04:44:58.400
okay, Moment, Hex, wo ist unser Hex Calculator, wo ist unser Hex Calculator in, wo ist er,

04:44:58.400 --> 04:45:13.440
so, 2F, ah, exzellent, also, 18 plus 17, ha, jetzt, jetzt, jetzt kommen wir der Sache näher,

04:45:13.440 --> 04:45:24.400
jetzt kommen wir der Sache näher, oh, Mist, 2F, so, äh, okay, und, und, und, Moment, rückwärts,

04:45:24.400 --> 04:45:28.480
Moment, rückwärts, also, ich hab jetzt das hier ja von 14, also, ich hab jeweils drei

04:45:28.480 --> 04:45:52.160
dazu gerechnet, also, ähm, Minus, jetzt, kann ich jetzt einfach, ah ja, 14.000, genau, aha,

04:45:52.160 --> 04:46:03.720
okay, das stimmt noch alles, okay, stimmt das jetzt, was ich da getrieben hab, jetzt

04:46:03.720 --> 04:46:09.320
bin ich ja mal gespannt, okay, wir haben, wir haben eine ganze Ecke mehr, wir haben eine

04:46:09.320 --> 04:46:25.840
ganze Ecke mehr Platz, so, ähm, what, so, und das sind in Kilobyte, ja, es ist eigentlich

04:46:25.840 --> 04:46:28.960
viel zu viel, es ist eigentlich viel zu viel, okay, äh, aber wir haben jetzt, wir haben

04:46:28.960 --> 04:46:32.960
jetzt mehr Platz, jetzt, was ich mich jetzt frage ist, stimmt das jetzt, was ich gemacht

04:46:32.960 --> 04:46:44.320
hab, ist das, ist das jetzt richtig, upload, also, mal gucken, ob ich jetzt uploaden kann,

04:46:44.320 --> 04:46:54.560
ach, nee, Moment, vorher muss ich, muss man, muss man das einmal pushen, wie updated man

04:46:54.560 --> 04:47:01.800
die Position, hab ihr mal ein Excel in Rechner gebastelt in Excel, ja, stimmt, okay, okay,

04:47:01.800 --> 04:47:12.560
okay, so, und jetzt, jetzt uploaden wir noch mal die, äh, Fonts, naja, das packt wieder

04:47:12.560 --> 04:47:24.280
rum, ich muss noch kurz rausziehen wieder, naja, so, Fonts updaten, sagt der auch irgendwie,

04:47:24.280 --> 04:47:28.520
was, wie groß, wie groß ist, Autotacting, Flashing, Compress, sagt der irgendwas, wie

04:47:28.520 --> 04:47:46.920
groß das Spiffs ist, das ist seltene Papagei, man sieht den hier, ja, so, und das soll jetzt

04:47:46.920 --> 04:47:55.560
funktioniert haben, anscheinend, anscheinend, okay, Moment, das, das hat jetzt echt funktioniert,

04:47:55.560 --> 04:48:15.760
also, war, war das so einfach, also, einfach, ist das so, ist das so simpel, die ESP32-Partition,

04:48:15.760 --> 04:48:36.880
anscheinend, Partition Tables, Outspeed Erase Flash, naja, brauchen wir nicht, ja, ja, okay,

04:48:36.880 --> 04:48:43.080
also, ich glaube, das war's jetzt, ich glaube, das war's jetzt, oder, also, das hat jetzt,

04:48:43.080 --> 04:48:57.080
das hat jetzt funktioniert, okay, Upload, tatsächlich, funktioniert, krasser Shit, wir

04:48:57.080 --> 04:49:02.000
haben gerade die Partition, Partitionierung vom Flash geändert, was, hab ich doch nie

04:49:02.000 --> 04:49:08.800
gemacht, ähm, was wird das, allgemein erst mal ein Display ansprechen, naja, also, was

04:49:08.800 --> 04:49:13.680
wir heute gemacht haben ist, wie du grad siehst, dass wir eine Firmware, dass wir ein Firmware

04:49:13.680 --> 04:49:18.520
Update übers WLAN machen können und auf dem Display angezeigt bekommen, wie weit das Update

04:49:18.520 --> 04:49:23.780
ist, ja, und wenn das geht, kann man damit alles möglich machen, also, ich werd wahrscheinlich

04:49:23.780 --> 04:49:29.120
dieses Gerät hier für meine Klimaanlage verwenden, ich hab ja hier schon mal was gebastelt, nämlich

04:49:29.120 --> 04:49:33.200
das hier mit einem anderen, allerdings, mit einem Farbdisplay find ich das viel besser,

04:49:33.200 --> 04:49:40.520
bei einem Farbdisplay find ich das viel besser, da werd ich nämlich beispielsweise hier für

04:49:40.520 --> 04:49:45.000
Temperatur, Klima-, äh, Temperatur, Luftfeuchtigkeit und sonst was, nehm ich dann irgendwie nen

04:49:45.000 --> 04:49:51.400
Emoji für ein-, für keine Ahnung, für Cold, eins, irgendwie sowas da, oder Snowflake

04:49:51.400 --> 04:49:55.880
oder sonst was, und für Hot, und dann zeig ich die passenden Sachen an, je nachdem, was

04:49:55.880 --> 04:50:05.280
auf meiner Klimaanlage passiert, aber aktuell ging es einfach darum, dass man Update machen

04:50:05.280 --> 04:50:17.640
kann übers WLAN, und du siehst, Update übers WLAN, Funst, zack, inklusive Progress auf

04:50:17.640 --> 04:50:25.840
dem Bildschirm, Leute, wir sind 5 Stunden da jetzt schon dabei, wisst ihr was, die Multi-

04:50:25.840 --> 04:50:31.560
flooding-Geschichte, gefunden hab ich dich über dein Nextcloud-Video, du meinst, wo

04:50:31.560 --> 04:50:39.800
ich Nextcloud ein bisschen geflammt habe, ja ich kenn das, ich kenn das mit der Emoji-Funktion,

04:50:39.800 --> 04:50:43.600
aber ich guck mir lieber die Bilder auf GetEmoji, auf JoyPixels an, weil ich die Windows Emojis

04:50:43.600 --> 04:50:52.800
maximal hässlich finde, ähm, also ich glaube den Rest, also die Multi-Flooding-Geschichte

04:50:52.800 --> 04:50:58.640
machen wir morgen, ich probier jetzt noch eine Sache aus, da kann ja der Flo96 mal mit

04:50:58.640 --> 04:51:08.240
BigBrain machen, ähm, ist, also wenn ich da jetzt noch mal 300 hinzufüge, ist eigentlich

04:51:08.240 --> 04:51:16.000
kein Problem, ne, also sprich, wenn ich jetzt sowas hier mache, plus, dann ist, aha, aha,

04:51:16.000 --> 04:51:27.960
jetzt, jetzt, oh fuck, jetzt wird's komplizierter, oh jetzt, jetzt kommt BigBrain-Time, das,

04:51:27.960 --> 04:51:39.200
das heißt, das heißt, ok, ok, das heißt, anstatt 20, äh, wäre die Size hier jetzt

04:51:39.200 --> 04:51:53.520
das da, seh ich das richtig, und dann wäre das hier 1B, ne, was, dann ist zu wenig Platz

04:51:53.520 --> 04:52:11.240
für Spiffs, echt, das müsste doch eigentlich reichen, das reicht noch, das reicht noch,

04:52:11.240 --> 04:52:17.640
ok, das, das müsste jetzt hier stimmen, so, dann machen wir das da wieder, so, hier steh

04:52:17.640 --> 04:52:23.480
ich jetzt ein bisschen auf dem Schlauch, also im Prinzip rechne ich doch jetzt hier einfach

04:52:23.480 --> 04:52:48.120
1B plus 1A und dann krieg ich raus 10, wat, äh, kann das sein, Moment, warum hab ich

04:52:48.120 --> 04:53:05.360
weniger Stellen, ach, Minus, ich muss plus rechnen, ich kann, noob, Minus gerechnen,

04:53:05.360 --> 04:53:13.320
so, hä, so müsste es jetzt passen, ach so, äh, Moment, hier muss ich ja noch abziehen,

04:53:13.320 --> 04:53:19.720
äh, Moment, was, was, was, was, hier stell ich jetzt hier ab, von dem machen wir jetzt

04:53:19.720 --> 04:53:32.240
Minus, äh, noch mal, 30.000, eh, ok, big brain, big brain, noob, so langsam hab ich's

04:53:32.240 --> 04:53:40.840
raus, mal gucken, wie viel Platz ich jetzt hab, guck mal, guck mal, bam, 68, jetzt hab

04:53:40.840 --> 04:53:53.360
ich richtig Platz, so, und das hier in Dezimal, Bites zu Kilobyte sind 917 Kilobyte, wunderbar,

04:53:53.360 --> 04:53:58.160
oh, oh, ich hab mich verrechnet Leute, ich glaub ich hab mich irgendwo verrechnet, wo

04:53:58.160 --> 04:54:13.240
hab ich mich verrechnet, Monkess, ich hab mich verrechnet, F, F, wo hab ich mich denn

04:54:13.240 --> 04:54:30.880
verrechnet, du bist mit dem Gesamtspeicher drüber, ja, aber das kann doch nicht sein,

04:54:30.880 --> 04:54:36.640
ich hab doch eigentlich nix geändert, vom Gesamt, von der Gesamtmenge her, ok, ok,

04:54:36.640 --> 04:54:46.360
das war das ganze nochmal rückgängig, ok, Upload, Upload ist gut, ist gut, ESP, beruhig

04:54:46.360 --> 04:54:55.880
dich, beruhig dich, alles klar, Partitionsgröße wieder in Ordnung, alles gut, ah, alles gut,

04:54:55.880 --> 04:55:15.680
kein Panik, exellent, so, ah, ich weiß was ich verkehrt gemacht hab, ich weiß was ich

04:55:15.680 --> 04:55:23.120
verkehrt gemacht hab, also, sprich, das da plus 30.000 war das hier, ich glaub ich weiß

04:55:23.120 --> 04:55:32.840
was ich verkehrt gemacht hab, ich muss nämlich rechnen, das da plus 10.000, das ist doch

04:55:32.840 --> 04:55:41.520
richtig, hab ich doch richtig gemacht, hab ich doch richtig gemacht, hab ich doch richtig

04:55:41.520 --> 04:56:07.320
gemacht, hab ich doch richtig gemacht, hä, hab ich doch richtig gemacht und jetzt rechnen,

04:56:07.320 --> 04:56:24.560
das hab ich doch, hä, was hab ich denn jetzt verkehrt gemacht, ah, das hab ich verkehrt

04:56:24.560 --> 04:56:39.480
gemacht, ich hab einmal zu wenig abgezogen, so, und jetzt, und jetzt, hä, hä, gehts jetzt,

04:56:39.480 --> 04:56:44.640
guck mal ich weiß wie viel Platz ich jetzt hab hier, guck euch das mal an hier, so viel

04:56:44.640 --> 04:56:55.440
Platz für Zeugs und ich kann OTA machen, aha, es funktioniert, achso, Fonts not found,

04:56:55.440 --> 04:57:00.480
ja, ok, das ist, das ist klar, dass Fonts not found sind, weil ich muss hier die Fonts

04:57:00.480 --> 04:57:10.680
wieder Uploaden, Fonts Uploaden, jaja, ist gut, komm, come on bro, ok, das ist ja was,

04:57:10.680 --> 04:57:13.720
bevor die Font, bevor das hier wieder rumspackt, einmal rausziehen und reinziehen und dann

04:57:13.720 --> 04:57:33.080
geht der Upload immer, so, jetzt sind nämlich auch die Fonts da, so, macht der jetzt was,

04:57:33.080 --> 04:57:53.000
jaja, und jetzt, zack, Firmware Upload, jaja, clap, das ist doch, das ist doch mal eine

04:57:53.000 --> 04:57:59.480
gute Partitionierung, hm, ungefähr ein MB, ungefähr ein MB Platz für Spiffs, was eigentlich

04:57:59.480 --> 04:58:04.280
top ist, ein MB für Dateien, reicht dicke und, oh fuck, ich bin schon wieder mit dem

04:58:04.280 --> 04:58:16.520
Stuhl über mein Kopfhörer, Alter, geh, so, jetzt hab ich richtig viel Platz, das ist,

04:58:16.520 --> 04:58:25.640
das ist ultra nice, Querzi, zwei Monate, dankeschön, excellent subscription, dankeschön, nice,

04:58:25.640 --> 04:58:55.640
hatabl dance er ι keÇerL colony hüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüıüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüüü

04:58:55.640 --> 04:58:57.640
nur 70 prozent

04:58:58.360 --> 04:59:03.440
flash belegt für meinen sketch jetzt habe ich quasi in diesen 70 prozent wlan drinnen

04:59:04.600 --> 04:59:06.600
hatte der ps update drinnen

04:59:11.080 --> 04:59:13.080
704 kilobyte für fonds

04:59:14.080 --> 04:59:18.080
echt bin ich nicht auf 900 noch was gekommen das da

04:59:18.080 --> 04:59:23.480
das da kann kann google sowas

04:59:25.480 --> 04:59:27.480
beides 2 kilobytes

04:59:27.480 --> 04:59:38.360
nee ist einfach nur eine header datei leider haben die es immer noch nicht geschafft

04:59:48.720 --> 04:59:51.720
kann google nicht nicht wirklich sowas tun dennst

04:59:51.720 --> 05:00:00.240
was nicht du hast recht ich habe mich verrechnet es sind vorhin habe ich mit a gerechnet du hast

05:00:00.240 --> 05:00:08.120
recht sind 720 kilobyte für hast recht nee das ist das ist gleiche wie die header datei das dumme

05:00:08.120 --> 05:00:15.960
ist halt auch an c plus plus dass sie immer noch so fest hängen an ihrem header feil gedöns das

05:00:15.960 --> 05:00:21.960
ist eines der punkte die ich mit mit am kreppigsten finde von c plus plus so ein ordentliches

05:00:21.960 --> 05:00:32.240
metadata wie soll man das nennen exports wie nennt man das richtig modul module also sprich

05:00:32.240 --> 05:00:36.400
sowas was sie schon seit fünf versionen machen wollen so ein ordentliches modul system das ist

05:00:36.400 --> 05:00:43.200
mal langsam wird mal echt zeit jetzt haben sie es angedacht für 20 also für c plus plus 20

05:00:43.200 --> 05:00:48.840
meter aber es wird mal echt sein also header feil rumgefuddelt ist wirklich absolut abfuck

05:00:48.840 --> 05:00:57.080
wenn man sich das gerade bei anderen sprachen anguckt das öffnet auch das öffnet endlich

05:00:57.080 --> 05:01:03.240
mal die möglichkeit dass man einen ordentlichen package manager oder oder dependency abhängigkeits

05:01:03.240 --> 05:01:09.640
auflös paket manager für c plus plus macht das gibt es jetzt zwar schon aber ohne module wird

05:01:09.640 --> 05:01:17.360
das nicht so richtig funktionieren mit modulen dann ich also ich persönlich denke dass c plus

05:01:17.360 --> 05:01:25.000
plus module eines der wichtigsten sachen ist die sie schon hätten zehn jahren vor zehn jahren

05:01:25.000 --> 05:01:32.880
machen sollen als quasi ruby mit gems und allem aufgekommen ist mehr als diesen inkonsistenten

05:01:32.880 --> 05:01:37.280
anderen krepp den sie da teil was eingeführt haben es gibt in c plus plus so viel doppelt

05:01:37.280 --> 05:01:43.440
und dreifache dinger da muss ich nur mal gucken muss ich nur mal angucken wie viele varianten es

05:01:43.440 --> 05:01:48.560
gibt sachen zu swappen standard swap atomic ich meine ich weiß klar alles hat ein bisschen

05:01:48.560 --> 05:01:54.440
andere varianten aber das ist doch so macht man doch keine api standard swap exchange pointer

05:01:54.440 --> 05:02:02.920
swap atomic exchange dann atomic things mit replace shared pointers swap alle möglichen

05:02:02.920 --> 05:02:07.800
sachen doppelt und dreifach komplett quer durch die standard library durch weiß nicht was sie

05:02:07.800 --> 05:02:14.400
sich dabei wirklich gedacht haben so macht man so macht man keine keine library die man gerne

05:02:14.400 --> 05:02:22.000
verwendet als entwickler also ganz ehrlich wenn ich wenn ich eine funktion anbieten möchte die

05:02:22.000 --> 05:02:28.160
werte swappt dann mache ich sowas wie standard swap meinetwegen und da gibt es halt einen

05:02:28.160 --> 05:02:33.400
führenden atomic parameter ja vielleicht unterstützt das manche werte nicht dann mache ich das halt mit

05:02:33.400 --> 05:02:40.120
einem lock im hintergrund für die plattform so dass es zumindest deterministisch funktioniert

05:02:40.120 --> 05:02:45.480
und schreibt irgendwie doku rein ja auf plattform xy ist das nicht atomic in hardware irgendwas so

05:02:45.480 --> 05:02:51.320
dass man das ordentlich verwenden kann aber also die c plus plus standard das ist so so quer bet

05:02:51.320 --> 05:02:56.960
jeder hat mal irgendwo sein häufchen hingemacht allein schon allein schon das hier guckt mal also

05:02:56.960 --> 05:03:06.720
in c plus plus kannst du sachen initialisieren zum beispiel so zum beispiel so habe ich hier

05:03:06.720 --> 05:03:18.760
habe ich hier irgendwie ein beispiel für ja zum beispiel ist es erlaubt also so die sachen zu

05:03:18.760 --> 05:03:26.200
initialisieren finde ich ok du sagst dass es dieser typ von funktions pointer im endeffekt mit diesem

05:03:26.200 --> 05:03:34.680
namen der ist hier null an der stelle aber so ist auch erlaubt und jetzt ist die frage jetzt weißt

05:03:34.680 --> 05:03:42.600
du es nie ist das hier jetzt null oder ist das irgendein interner standard constructor der

05:03:42.600 --> 05:03:49.640
aufgerufen wird weil c plus plus ja quasi das da und das da manchmal mehr oder weniger gleich

05:03:49.640 --> 05:03:58.480
macht also es ist es ist so inkonsistent irgendwie dann hast du sachen die du die du initialisieren

05:03:58.480 --> 05:04:05.120
kannst hier ganz normal im aufruf dann mit geschweiften klammern dingern ja es hat alles

05:04:05.120 --> 05:04:11.360
irgendwie seine daseinsberechtigung das ist schon klar ganz ganz einfach nur weil sie bock drauf

05:04:11.360 --> 05:04:18.680
hatten haben sie das nicht gemacht aber eine konsistente und und nachvollziehbare api sieht

05:04:18.680 --> 05:04:26.920
einfach anders aus als das was die da in der c++ standard library gestrickt haben und jedes mal

05:04:26.920 --> 05:04:30.440
wenn ich mir irgendwelche vorträge von irgendwelchen c++ konferenzen anguckt denke

05:04:30.440 --> 05:04:37.280
ich mir alter hättet ihr es nicht einfach einfach machen können so dass man sich nicht zwei stunden

05:04:37.280 --> 05:04:44.640
vortrag anhören muss dass man weiß dass man manche paraneter nicht verwenden darf obwohl

05:04:44.640 --> 05:04:49.840
sie da sind oder hättet ihr es nicht so machen können dass ich nicht sachen übergeben kann die

05:04:49.840 --> 05:04:58.200
es kaputt machen oder so und es gibt es gibt so viele sachen an c++ die ich also für mich

05:04:58.200 --> 05:05:03.000
ist c++ mit die die ekligste sprache die es einfach gibt und wie gesagt ich könnte mich da

05:05:03.000 --> 05:05:16.680
monate und jahre drüber auslassen ja also plus plus ja dann gibt die leute damit mit holy sea

05:05:16.680 --> 05:05:22.680
und und c++ ganz abgespeckt anfangen aber ist es wirklich ist es wirklich eklig so und ich

05:05:22.680 --> 05:05:33.400
zeige euch was was auch was auch witzig ist ich habe letztens gesucht wie man also wie man

05:05:33.400 --> 05:05:43.840
am besten einen c++ string formatieren kann mit printf ich finde es ja auch ein bisschen

05:05:43.840 --> 05:05:52.640
affig dass kein printf implementierung mitkommt bei c++ die für c++ typen gültig ist

05:05:52.640 --> 05:06:00.080
und die erweiterbar ist für custom typen in c sharp ist das zum beispiel wunderbar in c

05:06:00.080 --> 05:06:05.840
sharp hast du eine feste string die du bei jeder klasse standardmäßig mit dabei haben

05:06:05.840 --> 05:06:12.120
musst du kannst es überschreiben musst du aber nicht und du kannst das einfach verwenden in

05:06:12.120 --> 05:06:17.040
string interpolation also quasi so wie man formatiert das strings in c sharp macht und

05:06:17.040 --> 05:06:21.800
das funktioniert mit jedem typ mit jedem eingebauten typ mit jedem custom typ entweder kommt der

05:06:21.800 --> 05:06:26.520
klassenname raus oder ich habe to string überschrieben und das kommt also hätte man relativ gut machen

05:06:26.520 --> 05:06:35.080
können aber hatten sie keinen bock drauf weil auch immer wie auch immer man weiß es nicht und

05:06:35.080 --> 05:06:40.480
ich habe jetzt mal gesucht die beste variante passbar auf stack overflow jetzt die beste

05:06:40.480 --> 05:06:54.040
variante format also printf printf für standard string ich habe die ich habe die abgewandelte

05:06:54.040 --> 05:06:58.600
variante gesucht wie bekomme ich einen standard string printf formatiert in den buffer rein aber

05:06:58.600 --> 05:07:02.600
ob ich den jetzt in buffer rein bekommen oder ausgeben ist erstmal egal guckt euch mal die

05:07:02.600 --> 05:07:09.680
akzeptierte antwort an also also i have to format standard string with printf and send it into

05:07:09.680 --> 05:07:17.000
file stream eigentlich eine super einfache anforderung ja auch so eine sache wo ich das

05:07:17.000 --> 05:07:21.720
habe ich in c++ total oft ich denke mir ach easy kein ding und dann gucke ich nach fuck geht in

05:07:21.720 --> 05:07:28.280
c++ nicht so und jetzt und jetzt passt auf passt passt passt auf die antwort die antwort erst mal

05:07:28.280 --> 05:07:33.680
you can do this directly ja klar ich weiß dass man das nicht direkt machen kann aber warum nicht

05:07:33.680 --> 05:07:40.640
warum ist keine printf implementierung für standard string dabei also dass das c dass das c printf

05:07:40.640 --> 05:07:47.160
kein kein c++ string versteht verstehe ich aber warum gibt es kein standard printf was den c++

05:07:47.160 --> 05:07:56.840
string versteht übrigens rat in a box wo wir gerade beim thema sind ich habe auch so ein bisschen

05:07:56.840 --> 05:08:05.480
klein wie zum beispiel das hier weil es mir auf den sack geht aber wohlgemerkt mit custom

05:08:05.480 --> 05:08:11.720
klassen funktioniert ja auch nicht mit also mit mit custom klassen mit custom klassen funktioniert

05:08:11.720 --> 05:08:16.120
das hier auch nicht das funktioniert nur mit basic mit basic types man kann sich da was was

05:08:16.120 --> 05:08:24.920
ich richtig gut finde ist da gibt es doch diese dings wie ist das getappt die finde ich gut hier

05:08:24.920 --> 05:08:33.560
fmt fmt ist gut die haben die haben python style formatting für c++ leider kann man nicht mal

05:08:33.560 --> 05:08:37.520
string als prozent s übergeben ja genau solche sachen so und jetzt und jetzt können wir kurz

05:08:37.520 --> 05:08:43.560
kaputtlachen also simple frage und allein schon dass die antwort dass es nicht möglich ist erst

05:08:43.560 --> 05:08:48.360
schon mal damit you can't do this directly und jetzt passt mal auf die antwort auf was der typ

05:08:48.360 --> 05:08:55.320
vorschlägt wie man das machen kann nee das ist klar dass das was ich auch mache das geht

05:08:55.320 --> 05:09:18.560
aber nicht verpasst pass mal auf was ist das euer ernst ist das c++ ist das euer ernst

05:09:18.560 --> 05:09:36.360
das da und der typ ist auch kein das ist already pretty easy die alle noch von gut geistern

05:09:36.360 --> 05:09:44.760
verlassen oder was also ganz ehrlich ganz ehrlich die c++ leute ich glaube wenn du das

05:09:44.760 --> 05:09:50.520
lang genug verwendest die schmilzt einfach so der kopfwerk dass du das echt geil findest so was hier

05:09:50.520 --> 05:10:05.040
man kann das man kann das irgendwie noch verstehen ja aber für so was simples wie

05:10:05.040 --> 05:10:14.520
einen standard string in einen buffer schreiben erstens warum muss man da überhaupt mit templates

05:10:14.520 --> 05:10:23.520
anfangen und und zweitens warum muss man da überhaupt was selbst für machen das ist genau

05:10:23.520 --> 05:10:33.440
so wie dass die dass der c++ standard so ich ich rente jetzt mal ein bisschen so dass der

05:10:33.440 --> 05:10:52.760
c++ standard string das der kein to lower case hat gibt es nicht ich mein ich mein der arduino

05:10:52.760 --> 05:11:02.720
string hat das wenn wir gerade dabei sind welche ist deine lieblingsprogrammiersprache c sharp

05:11:02.720 --> 05:11:07.840
gefolgt von ruby eigentlich ruby und c sharp beides auf gleicher gleicher gleicher höhe

05:11:07.840 --> 05:11:14.360
allerdings ist ruby leider in letzten jahren sehr vom ja vom mainstream irgendwie ein bisschen

05:11:14.360 --> 05:11:19.520
absteigenden ast ja und ruby kamen jetzt leider nicht mehr so viel verwenden also ruby und c

05:11:19.520 --> 05:11:26.520
sharp in meiner absolut lieblichen sprachen so blöd es klingt ich bin mittlerweile sogar also

05:11:26.520 --> 05:11:31.440
ich lese ich lese da ja auch immer ganz gerne über java script ich muss ehrlich sagen so

05:11:31.440 --> 05:11:36.520
schlecht finde ich ja war es ist weit davon entfernt mein lieblingssprach so schlecht finde

05:11:36.520 --> 05:11:42.320
ich javascript mittlerweile gar nicht mehr heißen ist auch ok da mache ich nicht so viel drin aber

05:11:42.320 --> 05:11:52.560
mein absolut lieblings lieblingssprache ist die schaap ja was ich auch nicht mag aber ok

05:11:52.560 --> 05:12:00.720
finde ist go auch so ein paar eigenheiten die als features verkauft werden zum beispiel dass

05:12:00.720 --> 05:12:10.880
es keine das generics überflüssig werden dass es keine richtigen maps gibt was fällt mir

05:12:10.880 --> 05:12:17.240
sonst noch aus dem kopf ein das gibt es gibt es ein paar merkwünsche dass das zum beispiel

05:12:17.240 --> 05:12:22.480
auch da dass sie der meinung sind ok eine filterfunktion ist doof macht lieber eine

05:12:22.480 --> 05:12:28.560
schleife so was da bin ich jetzt auch nicht also go ist ok aber ich finde auch hatten

05:12:28.560 --> 05:12:36.840
paar fragwürdige entscheidungen genau das ist auch so was wo ich bin auf z plus plus frage

05:12:36.840 --> 05:12:43.800
warum warum hat der warum hat standard string ich meine diese kombination an wörtern ja also

05:12:43.800 --> 05:12:49.640
standard und string spricht das soll quasi die default standard string implementierung für diese

05:12:49.640 --> 05:12:55.320
sprache sein warum hat die kein to lower oder to upper es kann mir doch keiner erzählen dass

05:12:55.320 --> 05:13:02.040
das zu blutet wäre man hat es aber abgesehen wenn ich nicht verwende dann dann brauchst auch

05:13:02.040 --> 05:13:08.280
keinen platz das ist lächerlich was das was die string was die default string anbietet von

05:13:08.280 --> 05:13:14.760
z plus plus das ist nix und gerade das string klasse klasse braucht ordentlich funktionalität

05:13:14.760 --> 05:13:23.400
dass man nicht auf die idee kommt wie in z plus plus jeder eine eigene string klasse zu basteln

05:13:23.400 --> 05:13:27.320
jemand im chat ich glaube red in a box war es vorhin hat auch irgendwie eine eigene string

05:13:27.320 --> 05:13:36.360
geschichte weil die standard string klasse kacke ist du kannst es nicht gescheit slice du kannst

05:13:36.360 --> 05:13:42.480
das nicht gescheit to upper to lower du kannst du kannst das nicht gescheit filtern du kannst nix

05:13:42.480 --> 05:13:48.040
index office glaube ich kann es nicht mal index off sehe ich das richtig feind ok feind kannst ja

05:13:48.040 --> 05:13:56.040
aber so ein index oft wird zum beispiel auch was da können sie sich wirklich von dass die

05:13:56.040 --> 05:14:09.560
scharp string klasse was abschneiden die kann das einfach ja das ist das nächste flow 96 warum

05:14:09.560 --> 05:14:16.680
sowas überhaupt notwendig ist warum erwartet man von seinen programmierern dass die für so

05:14:16.680 --> 05:14:22.480
was einfaches wie string to lower ernsthaft sowas schreiben und und dann und dann noch

05:14:22.480 --> 05:14:28.200
diese iterator shit das ist das nächste was mich nerven würde die ganze iterator geschichte

05:14:28.200 --> 05:14:32.520
in t plus plus ist auch wahnsinnig undurchsichtig da gibt es auch drei verschiedene varianten wieder

05:14:32.520 --> 05:14:39.160
ernsthaft warum muss warum erwarte ich von meinen programmieren sowas zu schreiben anstatt einfach

05:14:39.160 --> 05:14:45.040
eine to lower to upper methode anzubieten in meinen in meiner standard leib ich meine es ist die

05:14:45.040 --> 05:14:51.800
standard library da kann es aber to lower für ein string jetzt nicht zu viel sein und solche

05:14:51.800 --> 05:15:02.680
dinger hier allein schon allein schon dass so dass sowas überhaupt notwendig ist ja ein iterator

05:15:02.680 --> 05:15:08.240
ordentlich implementiert sollte das unter der haube machen können wenn so was also wenn es sowas wie

05:15:08.240 --> 05:15:18.080
for each gibt wenn es mit wenn es ein konstrukt wie for each gibt dann erwarte ich dass das ohne

05:15:18.080 --> 05:15:24.040
beginn und end funktioniert da kann ich beim normalen vor bleiben lustigerweise gibt es ja

05:15:24.040 --> 05:15:32.400
ein schleifen konstrukt was das kann vor range kann das wenn ich das wenn das hier ein vector

05:15:32.400 --> 05:15:47.040
ist das geht es ist ja nicht so als wäre das total nicht möglich ja mit concept soll das besser

05:15:47.040 --> 05:15:51.200
werden ja habe ich auch ich habe letztens in talktube gesehen was was dann auch zukommt wobei

05:15:51.200 --> 05:15:57.520
ich mich als ernsthaft frage es gibt so viele sachen die die ich mittlerweile als als standard

05:15:57.520 --> 05:16:04.040
an sehe wo die wo die dann teilweise bei c++ schon seit zehn jahren rum machen und dann ankommen mit

05:16:04.040 --> 05:16:16.840
ja c++ 20 21 22 c++ 35 hat das dann geil c++ hat dann mit c++ 28 mal irgendwas was keine ahnung

05:16:16.840 --> 05:16:35.520
ruby seit 30 jahren hat also das was auch geiles ist die geschichte wie sie wie sie das wie sie

05:16:35.520 --> 05:16:45.600
das mit multi multithreading und so gemacht haben es gibt es gibt standard standard thread ok es gibt

05:16:45.600 --> 05:17:03.240
aber auch standard es und es gibt auf hack ich habe vergessen jetzt habe ich vergessen was die

05:17:03.240 --> 05:17:09.800
eigentliche sache was ich erzählen wollte dass dass das auch wieder total inkonsistent ist ja

05:17:09.800 --> 05:17:19.680
zumindest es scheint also in c sharp sieht das ganze so aus task dot run dann habe ich eine

05:17:19.680 --> 05:17:26.240
ordentliche lambda syntax dahinter und siehe da es funktioniert das alles was ich machen muss so

05:17:26.240 --> 05:17:31.920
und mit standard s-sync muss ich dann irgendwie so dinger machen standard s-sync dann erstmal

05:17:31.920 --> 05:17:36.320
diese komische lambda syntax ok aber da kann ich jetzt noch drüber streiten das da standard

05:17:36.320 --> 05:17:47.760
lounge bin ich mir nicht sicher was was ich davon nehmen muss also das da und dann arguments so

05:17:47.760 --> 05:17:52.120
also weiß ich was so das jetzt irgendwie besser ist ich mein klar man kann auch man kann auch

05:17:52.120 --> 05:17:57.640
einfach task thread erstellen aber es ist halt hakelig dass das worauf ich raus will

05:17:57.640 --> 05:18:04.080
versuch mal die thread id ich dachte ich dachte get id geht gibt es extra dafür

05:18:04.080 --> 05:18:13.000
gab es da nicht gab es da nicht in get id extra macht dazu wenig mit

05:18:13.000 --> 05:18:24.840
ja ich weiß aber kann sie schaft dann c oder c++ code für einen hab halt ja und nein c code

05:18:24.840 --> 05:18:31.880
gar kein problem c++ code nur und das wie so ziemlich jede andere sprache außer nicht mal

05:18:31.880 --> 05:18:42.960
c++ selbst c++ kommt ja mit c++ teilweise nicht klar c++ code nicht liegt aber einfach daran

05:18:42.960 --> 05:18:47.520
c++ ist zu wir dass das zu implementieren dass das andere sprache direkt callen kann geht nicht

05:18:47.520 --> 05:18:52.640
aber was du machen kannst und das ist eigentlich auch so wie man das normalerweise macht wenn

05:18:52.640 --> 05:19:00.080
du eine c++ wenn du eine sache in c++ hast die du verwenden willst dann exportierst du das

05:19:00.080 --> 05:19:08.720
als c funktion und dann kannst du es von jeder klasse ausrufen also zum zum beispiel die

05:19:08.720 --> 05:19:19.760
das war reines c das war jetzt ein blödes blödes beispiel gewesen aber du kannst du kannst

05:19:19.760 --> 05:19:27.600
c++ und exportierst ein paar reine statische c funktionen raus das geht dann kannst du es von

05:19:27.600 --> 05:19:41.360
jeder anderen klasse auch verwenden ja also zeugs gut aber wir haben heute richtig richtig was

05:19:41.360 --> 05:19:46.760
geschafft muss man sagen wir sind fünfeinhalb stunden ganz schön lang sieht nicht so aus außer

05:19:46.760 --> 05:19:52.400
das eierjahr auf dem display steht schön dass übrigens so viele leute am start sind ich glaube

05:19:52.400 --> 05:19:57.360
mal dass mit dem controller oben rechts in der ecke ist gut angekommen das werde ich auch beibehalten

05:19:57.360 --> 05:20:03.360
wenn wir wieder irgendwelche programmiergeschichten oder microcontroller geschichten machen das ist

05:20:03.360 --> 05:20:09.440
gut wenn man wenn man da was sieht ja überleg gerade auch noch eine sache also morgen machen wir auf

05:20:09.440 --> 05:20:19.720
jeden fall weiter mit dem multithreaded async malen auf den bildschirm weil so ist das doof

05:20:19.720 --> 05:20:23.880
das klappt nur weil hier ein delay drin ist und wenn das im ungünstigsten fall aufhört dann

05:20:23.880 --> 05:20:28.400
kackts ab das ist nicht gut deswegen das malen auf das display muss immer vom gleichen thread

05:20:28.400 --> 05:20:34.480
funktionen kommen sonst geht das kaputt du kannst nicht an die pit kommen die wird in einem wrapper

05:20:34.480 --> 05:20:41.320
versteckt in städten ach so id ist nicht die pit gut es wäre auch zu einfach na gut die pit

05:20:41.320 --> 05:20:49.920
kann es nicht sein weil die pitt ja pro programm gleich ist thread id ja aber was gibt denn get

05:20:49.920 --> 05:20:58.240
id was gibt denn get id aus wenn ich die wenn ich die hast du schon mal ein led display angesteuert

05:20:58.240 --> 05:21:13.960
ja das ist ein led display aber ich glaube du meinst ein richtig echtes na so ein richtiges

05:21:13.960 --> 05:21:22.920
echtes großes nee habe ich noch nicht ich weiß prinzipiell wie es über vga funktioniert dann

05:21:22.920 --> 05:21:29.040
ist es egal was man anspricht ob lcd oder oder was auch immer röhren monitor also ich weiß

05:21:29.040 --> 05:21:36.520
prinzipiell wie es über vga funktioniert also ich könnte jetzt nicht runter programmieren ja ganz

05:21:36.520 --> 05:21:48.800
klar vga ist da noch am einfachsten weil vga so schön manuell teilweise analog ist hdmi dvi

05:21:48.800 --> 05:21:55.800
kein plastenschimmer allerdings ist es ja auch was was die grafikkarte für mich macht es sei denn

05:21:55.800 --> 05:22:01.400
ich möchte das mit inso einem controller hier machen also vga es gibt ja leute die haben schon

05:22:01.400 --> 05:22:10.240
vga für den esp 32 programmiert das funktioniert ich glaube hdmi und dvi wird nicht so ohne weiteres

05:22:10.240 --> 05:22:16.800
klappen über den esp 32 oder irgendwer müsste das im hdmi ziemlich sicher nicht da brauchst du

05:22:16.800 --> 05:22:23.440
wahrscheinlich einige sachen die der esp 32 nicht hat dvi vielleicht dvi mit vga fallback auf

05:22:23.440 --> 05:22:30.960
jeden fall aber ansonsten in einem normalen rechner ist das ansteuern von einem led display

05:22:30.960 --> 05:22:36.320
oder von lcd oder von einem bildschirm ja überhaupt nicht das problem macht die grafikkarte für dich

05:22:36.320 --> 05:22:40.480
du musst einfach nur der grafikkarte sagen was sie was sie ausgeben soll und dann ist es auf dem

05:22:40.480 --> 05:23:03.960
display so ach okay ja das red in a box ist es typisch typisch c++ einfach wirre sachen wo man

05:23:03.960 --> 05:23:08.560
sich denkt warum warum mut warum mutet ihr das euren programmieren eigentlich zu warum macht

05:23:08.560 --> 05:23:14.160
es denn nicht so dass es intuitiv und irgendwie in sich schlüssig verwendbar ist das ist eigentlich

05:23:14.160 --> 05:23:18.960
das größte problem was ein c++ hat du stehst da manchmal vor einer wand und denkst dir warum

05:23:18.960 --> 05:23:31.880
macht ihr es denn so kompliziert und so inkonsistent und so an fünf stellen es gibt

05:23:31.880 --> 05:23:37.520
auch display die über spi laufen ja das hier zum beispiel also wenn es danach geht dann habe

05:23:37.520 --> 05:23:43.680
ich schon mal selbst angesprochen aber auch nur über eine library also es ist ein spi tft display

05:24:08.240 --> 05:24:16.560
ich habe mir was in meinem c++ sagt textdokument aufgeschrieben wo ich jetzt nicht checke ach

05:24:16.560 --> 05:24:28.280
genau jetzt weiß ich worauf ich raus wollte die fehlermeldung cac w das habe ich mir meinem

05:24:28.280 --> 05:24:32.680
c++ document aufgeschrieben hat jemand eine ahnung warum das nicht funktioniert by the way

05:24:32.680 --> 05:24:44.120
hat jemand eine ahnung warum das nicht funktioniert die fehlermeldung

05:24:51.640 --> 05:24:54.640
kann mir das jemand schlüssig erklären warum das nicht funktioniert

05:24:54.640 --> 05:25:08.080
ja right in the box das habe ich mir dann auch zusammen gereimt das habe ich mir dann auch

05:25:08.080 --> 05:25:15.320
zusammen gereimt allerdings warum kann ich null pointer es sein aber warum kann ich null pointer

05:25:15.320 --> 05:25:22.920
es sein warum kann ich null pointer es sein das ist ja die einzige frage warum geht das warum

05:25:22.920 --> 05:25:30.120
warum kann ich null pointer es sein aber ich kann nicht checken ob es ungleich null pointer ist

05:25:30.120 --> 05:25:40.200
c++ also die fehlermeldung die eigentlich ist sagt diesen operator gibt es nicht also sprich

05:25:40.200 --> 05:25:49.120
die haben die haben die haben den assign die haben den assign operator overloaded und haben

05:25:49.120 --> 05:25:56.920
wahrscheinlich irgendwas eingebaut dass der assign operator mit null pointer funktioniert

05:25:56.920 --> 05:26:09.720
was beinhaltet dass du ja wenn ich das wüsste keine ich weiß es ist wahrscheinlich ist ich kann

05:26:09.720 --> 05:26:13.600
es nicht die bank hier drin keine ahnung wie man jetzt zumindest nicht mit breakpoints

05:26:13.600 --> 05:26:22.440
das sind so dinge da auf die stoß sich laufen in c++ und ich denke what the fuck es ist all

05:26:22.440 --> 05:26:35.000
unlogisch es fuck wieder warum ja auch noch so eine auch noch so eine sache wo ich mich

05:26:35.000 --> 05:26:43.560
gerade schon beim c++ so aufregeln hier also man kann ja wenn man den vector hat kann man ja sowas

05:26:43.560 --> 05:26:51.760
machen vector erase und dann standard remove vector beginnt vector end dann das was man

05:26:51.760 --> 05:27:03.880
removing will also so wert und dann bis zum ende solche konstrukte was ist denn mit euch los warum

05:27:03.880 --> 05:27:09.400
gibt es nicht einfach ein vector vector quatsch hier vector remove all und dann gebe ich hier

05:27:09.400 --> 05:27:18.640
irgendwann über gebe ich hier irgendwas was ich what the fuck da hast du auch eine template

05:27:18.640 --> 05:27:23.320
funktion kann ich verstehen weil sowas braucht man öfters ich verstehe nicht warum gibt's warum

05:27:23.320 --> 05:27:29.400
warum warum warum ist jeder scheiß doppelt dreifach übelst komplizierter standard library aber so

05:27:29.400 --> 05:27:36.800
simple sachen so einfache dinge die du laufen brauchst nicht erschließt ich mir nicht man kann

05:27:36.800 --> 05:27:42.240
bei c sharp beispielsweise sagen die übertreiben es teilweise ein bisschen also was du damit link

05:27:42.240 --> 05:27:48.200
alles machen filtern kannst auf listen und erase ist teilweise nicht mehr normal teilweise auch

05:27:48.200 --> 05:27:54.240
beißt sich beißt sich selbst so quasi in schwanz weil es ultra langsam ist weil es fünf mal durch

05:27:54.240 --> 05:27:59.520
die liste durchgeht dass die übertreiben ist vielleicht manchmal ein bisschen aber in 10 plus

05:27:59.520 --> 05:28:03.560
plus ist ist da die einfach machen wir einfach gar nicht aber keine bock drauf so lassen wir

05:28:03.560 --> 05:28:12.560
bleiben ist overrated jebaited ja die standard benahmung ist auch nicht geil weiter übrigens

05:28:12.560 --> 05:28:20.000
dieses ist wifi connected das sollte ich mal drin lassen weil wenn wifi nicht connecten ist dann

05:28:20.000 --> 05:28:27.880
muss er reconnecten ich muss mal kurz auf meinem github gucken wie man das richtig macht eins in

05:28:27.880 --> 05:28:34.960
den chat nein kappa 123 in den chat wenn schon habe ich es hier das letzte mal gemacht so aus

05:28:34.960 --> 05:28:50.200
ja genau einfach reifer ist connected reconnect also ich reconnecte mich einfach komplett

05:28:50.200 --> 05:29:02.200
hardcoded auch gut kann man auch machen nun gut ok chat wir machen morgen weiter 10 uhr ungefähr

05:29:02.200 --> 05:29:15.840
930 bis 1030 aufwacht stream ich werde jetzt erst mal aufgehen und was futtern und dann sehen

05:29:15.840 --> 05:29:36.520
wir uns morgen ich gucke mal ob ich irgendwann hosten kann von kleineren denen ich folg ob es irgendwas gibt

05:29:36.520 --> 05:29:43.280
haben alle schon so viel zuschauen von den ganz kleinen das die online sind den ich folge von

05:29:43.280 --> 05:29:53.720
die gucke ich eigentlich kaum noch eine also eigentlich schnitt dabei

05:29:58.560 --> 05:30:06.040
gut alles klar leute wir sehen uns morgen morgen geht es weiter und

05:30:06.040 --> 05:30:22.200
chat ich habe euch gerade ausgeblendet also wir sehen uns dann morgen ich hoffe euch

05:30:22.200 --> 05:30:26.000
hat es gefallen ich glaube dass mit der kamera oben ist gut angekommen schön dass so viele

05:30:26.000 --> 05:30:31.800
dabei waren obwohl es ein controller programmier stream war das ist ja normalerweise nicht so dass

05:30:31.800 --> 05:30:36.840
da so viele zugucken aber ich glaube das bild oben hat viel dazu beigetragen dass das ist

05:30:36.840 --> 05:30:44.520
interessant interessanter ist zum zugucken auch ein wirklich lang und fünfe halb stunden was für

05:30:44.520 --> 05:30:51.320
ein c++ compiler benutzt du den einzigen den man von esp 32 verwenden kann den offiziellen

05:30:51.320 --> 05:31:03.040
für die extensor den cpus gibt nur ein das ist das ist irgendwie gcc das unter der haube ist es irgendwie gcc und

05:31:03.040 --> 05:31:06.920
dann sehen wir uns morgen früh beim aufwachstream und morgen mittag nach dem aufwachstream irgendwann

05:31:06.920 --> 05:31:11.440
ein bisschen später machen wir wahrscheinlich hieran weiter und programmieren das multithreaded mit

05:31:11.440 --> 05:31:22.840
dem display das ist alles nur von einem stadt aus funktioniert also ist nicht fertig ne ist

05:31:22.840 --> 05:31:30.160
nicht fertig was was fehlt ist noch erst dass wir das ja ordentlich waren und dass das rick also das

05:31:30.160 --> 05:31:35.840
hier kommt eine eigene klasse für für display und ich will dass das malen auf dem display immer

05:31:35.840 --> 05:31:39.920
vom gleichen thread aus funktionieren immer vom gleichen task aus funktioniert dass wir nicht so

05:31:39.920 --> 05:31:45.800
ein mist haben wie der main loop greift drauf zu und hier greift was drauf zu das ist müll ich will

05:31:45.800 --> 05:31:51.200
dass man das adden kann in irgend so eine trocke oder irgendwas keine ahnung und dass dann immer

05:31:51.200 --> 05:31:55.920
ein task im hintergrund hergeht und sagt gibt es neue jobs die ich aufs display malen soll ja

05:31:55.920 --> 05:32:00.160
wohl aufs display malen dann hast du nämlich keine probleme wieso hast du kein jepp enable weil jepp

05:32:00.160 --> 05:32:12.640
ein dummes emote ist jepp ist nicht feifett und wir haben nur feifett emote alles klar leute wir

05:32:12.640 --> 05:32:33.280
sehen uns bis morgen macht gut zu

