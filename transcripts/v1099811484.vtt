WEBVTT

00:00.000 --> 00:02.000
Das war's für heute.

00:02.000 --> 00:04.000
Vielen Dank für's Zuschauen.

00:04.000 --> 00:31.000
Das war's für heute.

00:31.000 --> 00:33.000
Das war's für heute.

00:33.000 --> 00:35.000
Vielen Dank für's Zuschauen.

00:35.000 --> 00:37.000
Das war's für heute.

00:37.000 --> 01:01.000
Vielen Dank für's Zuschauen.

01:07.000 --> 01:09.000
Das war's für heute.

01:09.000 --> 01:11.000
Vielen Dank für's Zuschauen.

01:11.000 --> 01:13.000
Das war's für heute.

01:13.000 --> 01:15.000
Vielen Dank für's Zuschauen.

01:15.000 --> 01:17.000
Das war's für heute.

01:17.000 --> 01:19.000
Vielen Dank für's Zuschauen.

01:19.000 --> 01:21.000
Das war's für heute.

01:21.000 --> 01:23.000
Vielen Dank für's Zuschauen.

01:23.000 --> 01:25.000
Das war's für heute.

01:25.000 --> 01:27.000
Vielen Dank für's Zuschauen.

01:27.000 --> 01:29.000
Das war's für heute.

01:29.000 --> 01:31.000
Vielen Dank für's Zuschauen.

01:31.000 --> 01:33.000
Vielen Dank für's Zuschauen.

01:33.000 --> 01:35.000
Vielen Dank für's Zuschauen.

01:35.000 --> 01:41.000
Also wenn ich mir früher ein 37 jährigen vorgestellt habe, dann habe ich mir das nicht so vorgestellt

01:49.000 --> 01:53.840
Ja, moin leute. Ich mache mal meine vm grad an, wo wir gerade dabei sind

01:54.520 --> 02:00.280
Und meine vm, wie die coolen leute sagen, wir haben einen auf der arbeit, der sagt nicht vm, der sagt immer vm

02:01.160 --> 02:03.680
Klingt irgendwie ein bisschen hängen geblieben, ich weiß aber

02:03.680 --> 02:07.320
Wobei, das stimmt nicht mehr, der ist gar nicht mehr bei uns auf der arbeit, der ist mittlerweile

02:07.960 --> 02:12.120
Hat eine eigene firma firma gegründet, ist jetzt woanders als beratungsstelltyp

02:12.880 --> 02:17.320
Aber da hat er immer gesagt, we am und er hat auch nicht vm, wo er gesagt, sondern immer gesagt, we am, we are

02:18.360 --> 02:20.360
we am

02:20.560 --> 02:22.840
Wo ist denn hier meine, meine vm, da

02:26.520 --> 02:31.000
We am, genau, naja, der w kann es ja nicht sein, weil w

02:31.000 --> 02:37.680
Würden die amis ja w aussprechen, also vm müsste eigentlich bei den, bei den amis wie w sein

02:37.920 --> 02:45.200
Wie bescheuert ist eigentlich, dass w w ausgesprochen wird, ja alles andere kannst du irgendwie betonen

02:45.760 --> 02:47.760
Aber das w

02:47.960 --> 02:49.960
Was haben die sich dabei gedacht

02:49.960 --> 03:10.960
Kona style

03:11.240 --> 03:14.200
Gut, da sucht man, da sucht man den sinn ja vergebens

03:14.200 --> 03:16.720
Das hat sich halt so entwickelt

03:18.880 --> 03:21.880
Ja wusste, dir woher das wort planet kommt

03:22.600 --> 03:27.560
Also wie ich jetzt darauf komme, muss ich muss ich mal erzählen, ich habe letztens ein video geguckt auf youtube

03:28.360 --> 03:30.360
Interview mit einem flat earther

03:31.040 --> 03:33.840
Und der typ, der war geil, der hat gesagt

03:34.720 --> 03:41.760
Das ist doch klar, passt mal auf big brain, big brain move, der hat gesagt, das ist doch klar, dass das alles flach ist

03:41.760 --> 03:45.560
Beim wort planet, das ist plan

03:46.080 --> 03:49.360
Planet, man erkennt doch schon, dass das flach ist

03:51.360 --> 03:54.920
Und da habe ich geguckt, kommt das nicht aus dem griechischen

03:55.400 --> 03:59.920
Da habe ich geguckt, doch doch, das kommt aus griechischen, hat mit plan überhaupt nichts zu tun

04:01.440 --> 04:03.440
Überzeugt komplett, ja

04:03.440 --> 04:06.440
Ihr wisst ja, was ich mal gerne sehen würde für ein video

04:06.440 --> 04:11.240
Flat earth, also flach Erde versus hohle Erde

04:11.240 --> 04:13.640
Da würde ich mich mal interessieren, was dabei rauskommt

04:13.640 --> 04:16.600
Die können, die können doch gar nicht auf den gemeinsamen nenner kommen

04:16.600 --> 04:19.800
Weil um hohl zu sein, muss die Erde schon mal rund sein und hohl

04:20.680 --> 04:25.000
Und flat, das passt überhaupt nicht, das, das würde ich gerne, das würde ich gerne mal gucken

04:25.000 --> 04:29.000
Flach Erde versus wie das gibt es, ne das kann ich mir nicht angucken

04:30.120 --> 04:33.080
Das, also ich würde, ich auf der einen Seite würde ich mir das gerne mal angucken

04:33.080 --> 04:36.920
Das, also ich würde es, ich auf der anderen Seite würde ich es gerne gucken

04:36.920 --> 04:39.880
Aber da platzt bestimmt mein Kopf dabei, wenn ich, wenn ich das sehe

04:41.400 --> 04:43.400
IQ++, ja

04:44.120 --> 04:46.120
Huge

04:46.920 --> 04:51.880
8 Monate, dankeschön für den sub, hyper sub, ne noch nicht ganz, noch normaler sub

04:51.880 --> 05:02.120
Ehh, ich mach mal kurz hier meine VM an, meine VM, sorry, meine VM mach ich an

05:02.120 --> 05:09.000
Wer im Innen lebt, was weiß ich, wahrscheinlich gab es da nicht mal so ein Film, dass die Nazis

05:09.000 --> 05:11.720
überlebt haben im Inneren der Erde oder sowas

05:11.720 --> 05:14.520
Das ist hier irgendwie so eine Verarschung

05:14.520 --> 05:26.040
Oder, oder war das auf dem Mond, ok, ja ich bin da nicht so im Bilde was da angeht

05:26.040 --> 05:41.400
Was ist WMHWDB, ah, echt ich hab schon alles geupdatert, das hätte ich gar nicht gedacht

05:41.400 --> 05:52.440
Ah cool, ich hab meine Mail geschrieben, Foggers

05:52.440 --> 05:57.400
Mittlerweile ist das Menü von Thunderbird so unübersichtlich, wie kann ich jetzt als

05:57.400 --> 06:01.800
Unread wieder einstellen, ok, wunderbar, sonst vergesse ich das morgen

06:01.800 --> 06:06.600
Ja, mach mal Update hier, wobei wir brauchen die Linux Kiste eigentlich gar nicht, fällt

06:06.600 --> 06:13.400
ich grad aus, wir machen doch, wir machen doch, wir machen doch Windows Stellzweider

06:13.400 --> 06:25.880
Warum ist das nicht verknüpft, Overlaychamp, hallo, hallo, warum startet das nicht, willst

06:25.880 --> 06:45.240
du mal starten, ist das deinstalliert, hä, hä, was ist das jetzt, warum ist das einfach

06:45.240 --> 06:56.440
weg, warte, warte, warum ist das, ich hab das nicht deinstalliert oder so, das ist noch

06:56.440 --> 07:05.000
da, vielleicht Upgrade, ah ja vielleicht Upgrade, das kann sein, warum macht es dann aber kein

07:05.000 --> 07:14.200
neues Icon wenn Upgrade, wahrscheinlich weil es Windows ist und suckt, kann man das jetzt

07:14.200 --> 07:33.800
hier drüber starten, hä, hä, was zum, ich checke es nicht, wie starte ich das denn jetzt,

07:33.800 --> 07:41.080
warum ist das weg, warum ist das einfach, warum hat sich das einfach gelöscht, Ryna

07:41.080 --> 07:54.520
64, was, warte mal, warte mal, warte mal, warte mal, als admin start, was zum Teufel

07:54.520 --> 08:02.760
ist das, warum ist, warum ist mein Rider weg, das ist doch offensichtlich, offensichtlich

08:02.760 --> 08:11.480
ist es doch noch da, noch da, hat jemand eine klarreiche Idee, nee ich hab es nicht über

08:11.480 --> 08:19.240
Toolbox installiert, ich hab es direkt so installiert, ich installiere es jetzt einfach nochmal,

08:19.240 --> 08:24.000
ich installiere es jetzt einfach nochmal, dann geht es bestimmt wieder, oder ich installiere

08:24.000 --> 08:34.240
es jetzt über die Toolbox, ich installiere, komm, Standalone Installer, gibt es das über

08:34.240 --> 08:40.400
Vingate, nee Vingate hab ich nicht drauf, da hier, Excel, gibt es ja auch cool Leute,

08:40.400 --> 08:48.840
die sagen nicht Excel, die sagen EXE, ist das eigentlich so P-Pro-Fat, komm mal früher,

08:48.840 --> 08:58.680
das hätte gerade mal auf eine CD gepasst, das verstehe ich nicht, aber warum hat sich

08:58.680 --> 09:08.640
das jetzt deinstalliert, das verstehe ich nicht, wo ist das, das Checker, das ist mir zu hoch,

09:08.640 --> 09:18.680
das ist mir zu, das ist Windows Logik, CD 400 MB, nein, nein, CD ist 750 MB und warum

09:18.680 --> 09:26.040
ist die CD 750 MB, weil die erste CD von Sony, Beethovens fünfte, Symphonie oder sowas

09:26.040 --> 09:34.000
enthalten musste und das war genau 72 oder 74 Minuten, ich glaube sogar 72 waren's, weiß

09:34.000 --> 09:40.080
es nicht genau, das kommt umgerechnet auf 750 MB, das ist Boomerwissen, heute interessiert

09:40.080 --> 09:47.840
das keinen mehr, so, ich installiere das jetzt nochmal, vielleicht darf ich dann, darf ich

09:47.840 --> 09:58.320
dann wieder starten, weiß ja nicht, ok, ja ist gut, ich installiere, Next, Select, Uninstall,

09:58.320 --> 10:05.840
ehrlich gesagt, ich will das gar nicht an ins, ja ok wunderbar, Silently, wunderbar, mach

10:05.840 --> 10:18.880
Silently, jetzt mach mal 1,5, ok, ich hab legit keine Ahnung was da Sache ist, sehr

10:18.880 --> 10:33.080
spitz, immer gut, ach 650, waren's nicht 750, waren 650 sogar, kann sein, wie schnell ist

10:33.080 --> 10:55.680
ein Internetleitung, ähm, ähm, ähm, ähm, gute Frage, 440 ab oder 540 ab, eins von beiden,

10:55.680 --> 11:01.240
ich hab mir übrigens jetzt den Kram gekauft, ich hab mir jetzt hier dieses Package gekauft

11:01.240 --> 11:20.000
letztens erst, Store, Desktop, wo ist es denn, Bye, All Products Pack hab ich mir letztens

11:20.000 --> 11:26.960
gekauft, fürs Jahr, das geht schon, eigentlich ist 250 für ein Jahr durchaus ok, das verwendet

11:26.960 --> 11:41.080
man fast jeden Tag und es ist echt gute Software, so ich hoffe jetzt geht der Kram wieder, Run,

11:41.080 --> 11:49.720
ahja, jetzt funktioniert's, alles klar, jaja, jaja, ich hab's mir ja gekauft, ich könnte

11:49.720 --> 11:53.880
jetzt eigentlich mit dem Key mich anmelden, egal, wir wollen jetzt, wir wollen jetzt ja

11:53.880 --> 12:00.880
mal weitermachen, ok, scheint zu funktionieren, alles klar, wo sind wir stehen geblieben,

12:00.880 --> 12:05.760
ich mach mal ruhig das Studio auf, hatten wir irgendwelche Memory Leaks, nee das geht

12:05.760 --> 12:10.880
nicht mit Key, das geht mit, also ich glaube es geht auch noch mit Key, aber man lockt sich

12:10.880 --> 12:15.840
da ein mit Account und Passwort, also da ist es tatsächlich schwierig was zu leaken, weil

12:15.840 --> 12:19.720
man das jetzt nicht im Klartext irgendwie, irgendwie, mal gucken ob wir einen Memory Leak

12:19.720 --> 12:26.800
haben zum Schluss und ob der Kram noch funktioniert hat, genau, das hat ganz hart weirdchamped,

12:26.800 --> 12:41.840
weirdchamped, weirdchamped mit oder ohne Memory Leak, sag, weirdchamped ohne Memory Leak, ok

12:41.840 --> 12:57.680
alles gut, wunderbar, hab ich Subs übersehen Leute, ich guck einfach mal bei mir kurz im

12:57.680 --> 13:09.440
Dashboard, vielleicht mal kurz, ah nee, Overlay hab ich gesehen, Fatal hat gestern 25 Monate

13:09.440 --> 13:17.680
Subscribed, weiß nicht ob er da ist, aber easy as fuck, mega Hyper Subscription hier,

13:17.680 --> 13:23.320
also ich zeig euch mal wo wir stehen geblieben sind, also was schon funktioniert ist, das

13:23.320 --> 13:30.000
GIF als Overlay, wir machen das mit dem Papagei, das ist mir lieber, Content, wo ist der Papagei

13:30.000 --> 13:40.520
Leute, ich brauch irgendwas motivierendes jetzt, in Ryder gibt es da das Menü Resharper,

13:40.520 --> 13:46.680
ja, ja, ja, du kannst Memory Profile machen, wenn du es mit dem Debugger startest, aber

13:46.680 --> 13:57.240
ich bin noch ein bisschen auf Kriegsfuß mit dem Ryder Debugger, jawoll, passt, High Performance

13:57.240 --> 14:08.240
Rare Parrot funktioniert, alles klar, perfekt, easy, also da sind wir stehen geblieben, da

14:08.240 --> 14:14.280
sind wir stehen geblieben bei ungefähr 1000 FPS GIF, so, was ich jetzt probieren werde

14:14.280 --> 14:20.160
ist, der Memory Leak ein bisschen oder, nee das kann sein, dass ich das erst einpendel,

14:20.160 --> 14:24.960
das pendelt sich ein, also was ich heute mal probiert, das ist der ekligste Source Code

14:24.960 --> 14:29.520
glaube ich, den ich je fabriziert habe hier, das ist alles in einer Datei und alles untereinander

14:29.520 --> 14:35.200
und absolut unverständliche, kryptische DirectX Dinger, ich habe keine Ahnung was da abgeht,

14:35.200 --> 14:38.320
wir werden das jetzt ein bisschen ordentlich machen und wir machen das Multithreader, zumindest

14:38.320 --> 14:45.000
ist das mein Plan, also mein Plan für heute ist, wir machen den Decoder und das Renderding

14:45.000 --> 14:50.480
per DirectX machen wir in zwei verschiedene Threads, wir machen also quasi einmal Bilder

14:50.480 --> 14:56.520
zu Grafikkarten, Kopierthread und einmal GIF Decoder und wenn wir ganz schlau sind, und

14:56.520 --> 15:00.600
wenn wir ganz schlau sind heute, dann machen wir das sogar so, dass ich nicht permanent

15:00.600 --> 15:07.240
das GIF von meiner Festplatte lese, ich bin mir nicht sicher, hat der Task Manager eine

15:07.240 --> 15:14.400
IO Anzeige, was ist das hier mal, hier guck mal da, na gut es ist gecashed, es ist gecashed,

15:14.400 --> 15:18.840
aber der macht trotzdem jedes mal, also der liest das immer von der Festplatte, das ist

15:18.840 --> 15:27.640
auch nicht schön, es ist auf jeden Fall sinnvoller, wenn ich das im RAM behalte bei einem GIF und

15:27.640 --> 15:33.600
dann wenn das alles funktioniert und wir wissen, dass das Huge Mega Big Brain Performance ist,

15:33.600 --> 15:37.840
dann machen wir es mal so, dass man das auch verwenden kann, weil aktuell ein GIF mit 1000

15:37.840 --> 15:42.680
FPS braucht ja kein Mensch, wir gucken dann wie lange so ein Durchlauf braucht und machen

15:42.680 --> 15:51.760
dann auch mal einen Sleep rein, so sieht ein Source Code immer aus, ja ganz wichtig ist

15:51.760 --> 15:55.880
ja auch der Source Code, der muss ja so gut dokumentiert sein, dass da quasi, ne der muss

15:55.880 --> 16:00.720
so gut geschrieben sein, dass der sich selbst dokumentiert, also zum Beispiel ist es wichtig,

16:00.720 --> 16:08.160
dass man die Variablen Plup nennt, Temp, ne das ist gar nicht Temp, Plup Temp, E ist

16:08.160 --> 16:17.800
sehr beliebt, Count Temp 2, also gerade Count und Temp 2, da weiß man sofort Bescheid wenn

16:17.800 --> 16:32.000
man das sieht, Data und Size ist auch immer gut, Plup sowieso, ja also Leute ich lese

16:32.000 --> 16:35.680
das heute, ich habe keinen Plastenschimmer, wenn man was es macht, macht aber nichts,

16:35.680 --> 16:42.280
wir räumen jetzt ein bisschen auf, wir räumen jetzt mal ein bisschen auf, also ich schmeiß

16:42.280 --> 16:48.120
den ganzen Shit erstmal raus, wir machen jetzt mal Big Brain, hab ich hier, hab ich hier

16:48.120 --> 17:09.480
hier Rit, oh nice, ok jetzt, jetzt adde ich aber viel mehr als ich haben will, iiih Rit

17:09.480 --> 17:23.480
ok, Windows, ZEG, ich mach mal ein ordentliches Terminal auf, so, wo muss ich hin, CD, Rider,

17:23.480 --> 17:28.800
dann haben wir Overlay Champ und da muss ich Git das Git Repo löschen, Git, so ich hab

17:28.800 --> 17:33.560
da irgendwie Mist, ich hab da irgendwie Mist, Mist, also Git in it, so und jetzt brauch

17:33.560 --> 17:38.040
ich ein Git Ignore, ein ordentliches Git Ignore, ja gab es noch so eine coole Seite, die hab

17:38.040 --> 17:43.760
ich euch am letzten extra noch gezeigt, Git Ignore, GitHub, da gab es so einen fertigen

17:43.760 --> 17:50.120
GitHub, Git Ignore Vorlage, der war auch ganz praktisch, wobei brauchen wir nicht, ist eigentlich

17:50.120 --> 18:07.960
ziemlich sinnlos, was weiß ich, ob es da eine Vorlage für gibt, Git Ignore eigentlich,

18:07.960 --> 18:18.480
.io, stimmt,.io muss das sein, wir haben 169 Zuschauer, Alter das ist laggy,.net brauchen

18:18.480 --> 18:37.640
wir wahrscheinlich, ne, hallo,.net Core, ok und jetzt, ok das brauchen wir, der Rest

18:37.640 --> 18:47.200
ist eigentlich ziemlich, ziemlich unsinnig, aber ok, also Git, Git Ignore, Git, hab ich

18:47.200 --> 18:56.880
da ein Wim drin, boah, Alter jetzt aber advanced hier, äh, Dings und FFmpeg kommt rein, gut,

18:56.880 --> 19:02.080
das reicht eigentlich schon, mach das alles äußerst ungern,.vs können wir auch noch

19:02.080 --> 19:12.320
rein machen und Punkt, ok, perfekt, das sieht doch jetzt eigentlich ganz gut aus, ok, Git

19:12.320 --> 19:22.520
Add minus A, oh nein, Windows Git, Alter, Git Commit minus A minus M, Keg W, perfekt,

19:22.520 --> 19:25.800
so, jetzt hab ich das nämlich in meiner, in meiner Git List zu sehen, jetzt kann ich den

19:25.800 --> 19:30.320
ganzen, den ganzen Shit, den ich hier unten hab, kann ich jetzt einfach löschen und, und

19:30.320 --> 19:43.480
gut ist, so, schnell mit xml schreiben, was, xml, also egal was es ist, xml ist in der

19:43.480 --> 19:48.560
Regel nicht die Lösung dafür, ok, also fangen wir mal an, oh guck mal, ich hab schon ein

19:48.560 --> 19:54.360
paar Klassen angelicht, Videodecoder, Videodecoder brauchen wir, Videoframe brauchen wir auch,

19:54.360 --> 19:59.840
also, wir machen jetzt den Decoder Multithreader, das bedeutet wir brauchen erstmal, Musik

19:59.840 --> 20:05.920
zu laut, passt, so, das heißt wir brauchen jetzt erstmal eine Klasse, wo wir einen Bild

20:05.920 --> 20:12.640
von dem Gift drin halten können, also quasi ein Bild davon, was wir gerade 1000, 1000

20:12.640 --> 20:18.600
FPS haben, einmal ein Bild, ein Bild, so, das benutzen wir ja grad schon, nur mit dem

20:18.600 --> 20:29.040
Unterschied, dass, das ergibt überhaupt keinen Sinn, was ich hier mache, warum hab ich denn

20:29.040 --> 20:32.440
keinen Memory Leak, kann das sein, dass ich, ich verwende die Klasse noch gar nicht, ich

20:32.440 --> 20:38.240
hab wirklich alles in einer Datei, kann das sein, alles unter, ach du, ach du Scheiße,

20:38.240 --> 20:42.360
ok, ich hab's wahrscheinlich letzten Stream gesagt, ich verstehe nicht mehr, was ich gemacht

20:42.360 --> 20:48.080
hab, aber ich muss sagen, es ist heute eingetreten, ich verstehe nicht mehr, was ich gemacht hab,

20:48.080 --> 20:54.080
der Qtbot schickt keine Benachrichtigungen, weirdchamp, lul, richtig weirdchamp, also dann,

20:54.080 --> 20:56.920
dann machen wir das mal, dann versuchen wir das mal ordentlich zu machen, ich schmeiß

20:56.920 --> 21:01.840
diesen ganzen Shit hier raus, so, wir machen das jetzt, das brauchen wir, dass das Fenster

21:01.840 --> 21:16.360
ist, so, und dieser ganze Mist hier, pass mal auf, das machen wir jetzt so, bam, auscommentated,

21:16.360 --> 21:23.560
das kommt weg, und das ist das ganze Diret X Zeug, das muss auch weg, ok, ich kommentier's

21:23.560 --> 21:32.400
erst mal nur aus, dass ich, dass ich's gleich wieder finde, ok, so, jetzt krieg ich ein

21:32.400 --> 21:38.400
leeres Fenster, wenn ich das starte, oder, leeres Fenster, leeres Fenster, ok, perfekt,

21:38.400 --> 21:43.960
jetzt können wir anfangen, also, ich brauch ein Videoframe, das hier ist der FFmpeg,

21:43.960 --> 21:52.080
das hier ist also quasi das unmanaged FFmpeg Ding, dann brauch ich Höhe, Breite, Größe

21:52.080 --> 21:58.360
von einer, einer Bildzeile, und ein Pointer auf die Bilddaten, ok, das passt eigentlich,

21:58.360 --> 22:02.080
das ist eigentlich ganz sinnvoll, das einzige, was ich jetzt noch machen muss, ich muss dafür

22:02.080 --> 22:08.400
sorgen, dass der Kram automatisch aufgeräumt wird, so, und da verwenden wir jetzt mal was

22:08.400 --> 22:13.480
für, was man normalerweise in C Sharp relativ selten verwendet, wir verwenden mal das Gegenteil

22:13.480 --> 22:20.200
von einem Konstraktor, sondern wir verwenden mal einen Destructor, also sprich, wenn der

22:20.200 --> 22:25.480
Garbage Collector das Ding aufräumt, dann ruft er das Ding hier auf, und was wir hier

22:25.480 --> 22:31.640
machen müssen ist, alle managed Ressourcen freigeben, die wir haben, so, und managed Ressourcen

22:31.640 --> 22:40.320
sind in dem Fall, das unmanaged FFmpeg Zeug, also von der Idee her müsste das dann sowas

22:40.320 --> 22:47.520
sein, mal wieder Partner Programming, ich hab mit dem nur in letzter Zeit wenig Kontakt

22:47.520 --> 22:50.160
gehabt, der hat aber auch keine, ich wollte den jetzt auch nicht nerven, dann auch keine

22:50.160 --> 22:55.360
Videos hochgeladen, ich glaube, der ist grad studiumsmäßig oder wie auch immer anderweitig

22:55.360 --> 23:01.280
beschäftigt, weiß ich nicht, aber ich würde tatsächlich gerne weitermachen, dass da was

23:01.280 --> 23:18.320
vorzeigbares rauskommt, Medgill, genau, ja, sag ich, ich mag den Smiley, oder Smiley,

23:18.320 --> 23:26.040
das war jetzt richtig, richtige Boomer, ich sag keine Smiley Emotes, Reissjam Bugfix Session,

23:26.040 --> 23:33.320
soll ich euch mal ehrlich was sagen, soll ich mal real talk, ich hab keinen Bock mehr

23:33.320 --> 23:50.440
am Reissjam was zu machen, ich weiß nicht, warum es keine Ankündigung im Discord gab,

23:50.440 --> 23:55.320
der Bot ist dead wahrscheinlich, ich hab keinen Bock mehr am Reissjam was zu machen irgendwie,

23:55.320 --> 24:01.360
guck mal, das letzte Changeshok ist nicht umsonst vom Februar, der Reissjam hat ja eigentlich

24:01.360 --> 24:09.280
seine Aufgabe erfüllt, es gibt ja mittlerweile wieder Hardware, lass es die Community machen,

24:09.280 --> 24:16.200
kannst vergessen, die Community macht da wahrscheinlich gar nichts, die Community ist nur scharf auf

24:16.200 --> 24:25.520
mein Frontendkram wahrscheinlich, mein BigBrain Javascript Zeug, ich weiß nicht ob ich am

24:25.520 --> 24:31.760
Reissjam nochmal was mache, keine Ahnung, also mein aktuell funktioniert der noch, auch

24:31.760 --> 24:37.360
das ist natürlich nicht so ganz richtig, was passiert denn da wenn ich da drauf klicke,

24:37.360 --> 24:54.280
wo komme ich denn da raus, oh die Expertseite ist richtig schnell, nicht lieferbar, ok nicht

24:54.280 --> 25:06.440
lieferbar ist ungleich 1799 Euro, ok dann ist der Website ein Paser im Arsch, keine Ahnung,

25:06.440 --> 25:13.920
da müsste ich den mal, ich müsste mal den, wie heißt das Ding, den Street Merchant rebasen,

25:13.920 --> 25:20.640
aber ich hab keinen Bock am Reissjam was zu machen, ich sag's euch wie es ist, ausgechampft

25:20.640 --> 25:29.000
erstmal, ja das Gute ist ja ich hab damals ja schon versucht ein bisschen mitzudenken

25:29.000 --> 25:33.000
und ich hab keinen selbst programmiert, sondern ich nehme einen den es auf GitHub gibt, die

25:33.000 --> 25:46.920
sind leider ein bisschen langsam was die deutschen Jobs angeht, naja wir machen heute erstmal

25:46.920 --> 25:53.840
ein bisschen Gift Overlay, iDisposable verwenden das könnte man machen, aber da muss ich mich

25:53.840 --> 26:11.880
ja trotzdem selbst darum kümmern das zu disposen, AvFrame Release, nee, Free, ok so müsste das

26:11.880 --> 26:16.280
eigentlich funktionieren, an dem Moment das muss ja unsaves, warum, was hat das für Schmerzen,

26:16.280 --> 26:21.560
is not assignable, oh Pointerstells, Pointerstells und das geht jetzt aber so nicht, also brauchen

26:21.560 --> 26:29.080
wir unsere schöne Temp Variable wieder, weil Temp der beste Name ist für alles, so perfekt,

26:29.080 --> 26:37.560
so und jetzt von der Idee her räumt er das FFmpeg Zeug automatisch auf, bin mir nicht

26:37.560 --> 26:46.880
so ganz sicher ob das so funktioniert, aber von der Idee her müsste das eigentlich funktionieren,

26:46.880 --> 26:54.560
wir haben Mods da, wir haben Mods da, je dass wir Mods da haben die sagen bloß grad nichts,

26:54.560 --> 27:02.040
Mod Check, ok also jetzt können wir hier unser FFmpeg Zeug drin speichern, jetzt müssen wir

27:02.040 --> 27:07.640
bloß, das stimmt noch übrigens gar nicht was ich da mache, ich muss sagen FFmpeg Frame

27:07.640 --> 27:21.280
Clone oder sowas, Frame Clone, ah hier, weil FFmpeg handelt die Videodaten tatsächlich

27:21.280 --> 27:29.680
relativ clever, also das heißt Finalizer, stimmt, das heißt glaube ich schon immer so,

27:29.680 --> 27:33.800
jetzt wo du sagst ich glaube das heißt seit Anfang an in C-Sharp so, Destructor ist, ihr

27:33.800 --> 27:39.680
seht ich hab so viel C++ Zeug gemacht, das hat sich bei mir in den Kopf eingebrannt obwohl

27:39.680 --> 27:47.320
ich das eigentlich gar nicht will und ich C++ absolut nicht mag, aber es gibt so ein paar

27:47.320 --> 27:56.600
C++ Sachen die merkt man sich anscheinend, so also FFmpeg macht das relativ Big Brain,

27:56.600 --> 28:02.240
das Management von Bilderdaten, also ich versuche euch das mal kurz zu zeigen an der Stelle,

28:02.240 --> 28:10.600
also wenn man hier mit FFmpeg einen Frame decoded, also in dem Fall den GIF Frame decoded,

28:10.600 --> 28:18.240
dann legt FFmpeg für einen unter der Haube einen Buffer im RAM an wo die RGB, also wo

28:18.240 --> 28:23.720
das Bild drinne steht, so nachdem FFmpeg weiß, dass Memory Handling oder generell immer

28:23.720 --> 28:31.720
wieder Sachen erstellen und löschen und erstellen relativ ineffizient ist, kann man FFmpeg sagen,

28:31.720 --> 28:38.880
das soll das nur löschen, den Buffer im RAM, wenn er es nicht mehr verwendet wird, also

28:38.880 --> 28:44.560
quasi macht FFmpeg ein bisschen sowas wie Garbage Collection, nur muss man es von Hand

28:44.560 --> 28:54.480
machen, indem man ihm sagt, ok FFmpeg Frame unref, der hat internen Counter und du musst

28:54.480 --> 28:59.840
es quasi referenzieren und dann wird internen Counter plus eins gerechnet und wenn du es

28:59.840 --> 29:04.800
unrefst wird es minus eins gerechnet, wenn es bei null ist, gibt FFmpeg den Speicher frei

29:04.800 --> 29:07.720
von so einem Bild, da muss man sich nicht mehr selbst darum kümmern, das heißt was

29:07.720 --> 29:13.800
ich jetzt machen muss, ich muss sicher gehen, dass es unreferenziert wird und dann alles

29:13.800 --> 29:18.640
gelöscht ist, so das müsste eigentlich passen, das referenziert, das unreferenziert und löscht

29:18.640 --> 29:24.720
den Kram, das müsste so weit eigentlich passen, so jetzt kommt das eigentlich kompliziert,

29:24.720 --> 29:32.120
einfach den Decoder für GIFs. Ich weiß, dass wir Modstar haben, ich habe

29:32.120 --> 29:50.760
ja mein Creator Dashboard. Wisst ihr was? Wir haben keine Modstar. Modcheck, wo sind

29:50.760 --> 30:01.600
sie alle hin? Und wenn, und wenn sich gar so sehr einer daneben

30:01.600 --> 30:05.840
benimmt, das kommt ja nie vor, wir wissen ja, der Chat ist eigentlich immer relativ

30:05.840 --> 30:21.080
verträglich hier, das kann ich ihn auch von Hand bannen, kein Problem. Doppelmodcheck

30:21.080 --> 30:25.760
sogar. So, also wir brauchen jetzt den Multi-Threaded

30:25.760 --> 30:32.760
Decoder für GIFs. Gut, auf gehts, Leute, jetzt. So, den machen wir aber iDisposable,

30:32.760 --> 30:41.080
ich lasse ihn auf, iDisposable, also ich lasse ihn irgendwie, falls ich den, falls ich das

30:41.080 --> 30:48.720
brauche mal, ach komm, scheiß drauf, memory leak, FTW, gut, also wir haben unsere FFmpeg

30:48.720 --> 30:52.840
Zeug ein bisschen gerappt. So, also GIF Decoder, das können wir uns

30:52.840 --> 31:01.640
kopieren von dem, was wir hier eklig zusammengewurstet haben das letzte Mal. Also wir brauchen irgendwas

31:01.640 --> 31:09.680
um die Bilder zu decoden vom GIF. Also, wir nehmen ja dieses GIF hier und dieses GIF hat,

31:09.680 --> 31:13.680
wer kann schnell zählen, wie viele Bilder hat das GIF? Was meint ihr, wie viele Bilder

31:13.680 --> 31:19.320
hat das GIF? Also ich meine nicht FPS, aus wie vielen

31:19.320 --> 31:24.320
Bildern es insgesamt besteht. Ich hab keine Ahnung, wenn ich ehrlich bin,

31:24.320 --> 31:35.400
kann das FF Probe, kann das FF Probe? Sagt es einem an, wie viele Bilder man hat?

31:35.400 --> 31:43.960
GIF 25 FPS, das heißt ja nicht, wie viele Bilder es insgesamt sind, ok, das müssen

31:43.960 --> 31:53.720
wir mal gucken, FF Probe, GIF Image Count, Patch Frame Count, perfekt.

31:53.720 --> 32:02.680
GIF, what? Alles klar Leute, Obvious Command, natürlich,

32:02.680 --> 32:18.160
natürlich. Das ist total klar, ups, falsch die Mode.

32:18.160 --> 32:24.720
Was auch immer das macht, mal gucken, ob das jetzt überhaupt funktioniert.

32:24.720 --> 32:41.000
10, 10 Leute, 10, 10, haben wir. Alles klar, aber Count Packets ist falsch,

32:41.000 --> 32:53.360
Count Packets, Count Packets stimmt nicht. Pound Count Frames, ach du Scheiße, das ist

32:53.360 --> 32:56.080
ja viel komplizierter, als ich mir das vorgestellt habe.

32:56.080 --> 33:02.320
Calculate it based on time instead, oh, oh Leute, exquisite, nee, nee, nee, nee, das mach

33:02.320 --> 33:05.960
ich jetzt nicht. Ok, 10, ich geh ja verfassen 10, 10 Frames,

33:05.960 --> 33:10.920
alles gut, 10 ist, wir werden es ja gleich sehen, wir werden es ja gleich selbst sehen,

33:10.920 --> 33:17.000
also wahrscheinlich, wahrscheinlich 10 Frames. Alter, was ist das denn für, ist das Dings,

33:17.000 --> 33:26.920
ist das ähm, ist das nicht mein Genres Mask oder, ist, a link between words, genau,

33:26.920 --> 33:34.080
Bettge. Ah ok, also machen wir mal irgendwas public,

33:34.080 --> 33:42.160
natürlich unsave, was sonst, how to check the speed of, speed weiß ich, den speed weiß

33:42.160 --> 33:51.920
ich, der speed ist 25 fps, ich will wissen aus wieviel einzel Bilder das GIF besteht,

33:51.920 --> 34:02.720
also unsave, so wie nennen wir das Ding, Public, unsave, was weiß ich, Read Frames, so, bool

34:02.720 --> 34:07.760
loop ist defaultmäßig true, kann ja auch sein, dass ich mein GIF nur einfach anzeigen

34:07.760 --> 34:16.600
will, vielleicht braucht man das, äh, what, also what, read frames true, so und dann brauchen

34:16.600 --> 34:25.520
wir noch irgendwie die Möglichkeit das zu cancel, cancellation token, gleich, so, setzen

34:25.520 --> 34:30.680
wir auch leer, also sprich defaultmäßig wird das einfach endlos schleif und gut ist,

34:30.680 --> 34:37.840
VLC, stimmt, im VLC könnten wir nochmal gucken, ob der VLC da was anzeigt, das ist tatsächlich

34:37.840 --> 34:49.080
auch eine gute Idee, VLC, VLC kann das GIF gar nicht abspielen,

34:49.080 --> 35:04.840
der nightbot ist kaputt, VLC ist, VLC ist kaputt, was zeigt ein VLC an, bei tools, media information,

35:04.840 --> 35:18.160
frame rate 10, ok, also, guck dir mal, VLC kommt mit dem GIF nicht klar, windows photo

35:18.160 --> 35:22.280
kann das, ja, aber windows photo kann dir nicht anzeigen, aus wieviel Einzelbildern

35:22.280 --> 35:28.640
das besteht, oder, das wird mich äußerst verwundern, ne, natürlich nicht, was sonst,

35:28.640 --> 35:33.640
also, dass windows photo überhaupt irgendwas kann, wird mich schon wundern, Quatsch, kein

35:33.640 --> 35:36.880
Problem, wir kriegen das doch gleich selbst raus, ich wollte bloß gucken, ob es ffprobe

35:36.880 --> 35:40.760
irgendwie kann, so, also, read frames, so und jetzt können wir uns den kran zusammen

35:40.760 --> 35:47.800
kopieren, als erstes, wir wollen das ganze ja multithread machen, also, task, task, run,

35:47.800 --> 35:58.280
bam, so, neuen task starten, weil, true, lul, beste, beste, erstmal eine Endlosschleife,

35:58.280 --> 36:04.520
checkw, so, mal gucken, ob das funktioniert, wenn ich das jetzt starte, true, lulw, genau,

36:04.520 --> 36:10.200
so, also, jetzt brauchen wir hier sowas, wo gehts denn hier überhaupt los, jetzt brauchen

36:10.200 --> 36:17.760
wir sowas wie decoder gleich, oh ne, wir machen das, wir machen das ab, machen das ab, mach

36:17.760 --> 36:25.580
alles aus, private void, start render, lulw, lulw, lulw, lulw, lulw, lulw, lulw, lulw,

36:25.580 --> 36:35.500
lulw, lulw, lulw, lulw perfekt, so, und da, machen wir jetzt mal hier, decoder, video

36:35.500 --> 36:45.420
decoder, und, ja, decoder, read frames, das ergibt so keinen Sinn, was ich da mache,

36:45.420 --> 36:50.160
weiß ich auch. Ich will bloß mal gucken, ob das so alles tut, was ich, was ich, was ich

36:50.160 --> 36:56.500
gemacht hab. Ah Moment, Moment, Moment. Moment, das stimmt ja gar nicht, was ich hier mache.

36:56.500 --> 37:04.500
Hier muss ich auch noch ein Thread starten. Wo ist das vorher, das vorher erstellte Nassi-Schneidermann-Diagramm?

37:04.500 --> 37:12.060
Ähm, ich dachte, das machst du. Man muss das üben. Man muss das einfach nur oft genug

37:12.060 --> 37:17.260
üben. Du kannst uns das ja dann in der, so in der halben Stunde im Stream vorstellen.

37:17.260 --> 37:24.700
Können wir per Discord gucken. Natürlich schwierig. Das ist übrigens auch ein Grund, warum ich

37:24.700 --> 37:29.380
diese ganze Struktogramm-Kacke teilweise so bescheuert finde. Es ist unglaublich schwierig,

37:29.380 --> 37:32.540
den Struktogramm zu erstellen. Für was, wenn du selbst noch keine Ahnung hast, wie es eigentlich

37:32.540 --> 37:38.700
aussehen soll. Also das, was da teilweise in der Berufsschule erzählt wurde. Ich mein, ich konnte,

37:38.700 --> 37:45.540
ich hab ja angefangen hier mit, mit, mit Programmieren seit, keine Ahnung, 2002 oder so. Also ich

37:45.540 --> 37:49.020
machte das schon eine ganze Weile. Also mir war sogar in der Berufsschule, ich hab ja die

37:49.020 --> 37:52.420
Ausbildung später gemacht. Ich konnte ja zu dem, zu dem Zeitpunkt schon ganz, ganz brauchbar

37:52.420 --> 37:56.620
programmieren. Ähm, mir war das damals in der Berufsschule schon bewusst, was das für ein Mist

37:56.620 --> 38:05.420
ist. Und, ähm, die Lehrer dann ernsthaft behauptet haben, so nach dem Motto, ja, erstmal, erstmal

38:05.420 --> 38:09.860
Struktogramm, so dumm. Niemand, also niemand macht wirklich Struktogramme, das kommt ja noch dazu.

38:09.860 --> 38:14.980
Struktogramme ist total, also Nasty Schneidermann Struktogramme sind total sinnlos. Also selbst der

38:14.980 --> 38:20.500
Ersteller, der Erfinder hat ja gesagt, das ist eigentlich sinnlos. Und generell war Programmieren

38:20.500 --> 38:39.180
in der Berufsschule unglaublich bescheuert. Das ist einfach, einfach dumm. Programmieren in der

38:39.180 --> 38:43.340
Berufsschule hat man gesehen, wie viele unfähige Leute hier am Start sind. So, also von der Idee

38:43.340 --> 38:51.660
her will ich jetzt sowas hier machen. Also, passt mal auf, passt mal auf. Von der Idee her will ich sowas machen. For each, Frame,

38:51.660 --> 39:04.820
Decoder Read Frames, ähm, ähm, Private Void Draw Bitmap. So, ich weiß, dass das so nicht

39:04.820 --> 39:18.580
funktioniert, aber so von der Idee her will ich das, will ich das machen. Ja, ok, also.

39:18.580 --> 39:27.420
So weit, so weit von der Idee her. So, weil das würde dann heißen, wenn das, wenn das so funktioniert,

39:27.420 --> 39:36.220
wie ich mir das vorstelle. Das heißt, ich habe hier einen eigenen Thread. Das brauchen wir nicht mehr. Alter, was ist hier los?

39:36.220 --> 39:43.940
Ja, ich habe hier einen eigenen Thread. Ich muss halt nur gucken, wie ich das, wie ich das von da hier,

39:43.940 --> 39:54.140
hier raus bekomme. Moment mal, ergibt das überhaupt Sinn, was ich da mache? Es ergibt doch gar keinen

39:54.140 --> 40:02.380
Sinn, was ich da mache, oder? Habe ich hier einen eigenen Thread? Nee, ich muss das in irgendeine

40:02.380 --> 40:07.620
Warteschlange schreiben. Ich muss das in irgendeine, in irgendeinen Buffer schreiben, von dem ich das

40:07.620 --> 40:14.980
dann hier rauslese. Wenn ich jetzt hier einf, nee, nee, sonst bringt das ja nichts. Dann funktioniert das.

40:14.980 --> 40:24.660
Weil dann hat er hier einen Thread gestartet. Dann kriegt er hier aus irgendeiner Warteschlange ein neues Bild.

40:24.660 --> 40:35.980
CD, EFC, das, das, das, das ist garantiert irgendein Hexcode für irgendein Pfeil, oder? So was wie

40:35.980 --> 40:45.420
Kaffee, Babe, Bayava. Was ist das? Okay, ist es anscheinend doch nicht, aber hätte ich jetzt, hätte ich jetzt vermutet.

40:45.420 --> 40:57.540
Welches Pfeil ist das? Aber danke schön für den Prime-Sub, by the way. Massive-Sub. Nur Buchstabenfolge,

40:57.540 --> 41:06.700
es würde, es würde als Pfeil-Header durchgehen. Es ist, es ist gültiges, gültiges Hex. Bayava fängt, weiß

41:06.700 --> 41:20.380
ich, ob ihr das wisst, Bayava, Bayava-Pfeil-Header steht drinnen. Binary. Wie heißt denn das richtig?

41:20.380 --> 41:33.660
Ja, genau. Bayava, Bayava steht in dem, was es für ein, was es für ein Pfeil-Typ ist, steht, steht das

41:33.660 --> 41:53.940
drinnen. Kaffee, Babe. Da wollten sie lustig sein, die Java-Leute. Okay, also weiter im Text. Also das

41:53.940 --> 42:00.660
von, das ist von der Idee her eigentlich ganz, ganz sinnig, was ich hier mache. Aber, aber so geht

42:00.660 --> 42:11.020
das, so geht das natürlich nicht. Okay, ich weiß nicht, was ich mache, ehrlich gesagt. Wir basteln

42:11.020 --> 42:16.140
jetzt erstmal den Decoder, der den Kram in seinem eigenen Thread ausgibt. Also, ich will auf jeden

42:16.140 --> 42:23.580
Fall nicht Rückgabewert void. Wir verwenden jetzt mal was ganz Neues, was Massive Big Brain neu ist,

42:23.580 --> 42:29.940
was es erst seit C Sharp 9 gibt. Mal gucken, ob das so funktioniert, wie ich mir das vorstelle. So,

42:29.940 --> 42:40.700
also wir könnten jetzt hier beispielsweise sagen I enumerable Video Frame und dann sowas hier machen,

42:40.700 --> 43:03.060
dass der, ach ne, das geht ja nicht immer. Das geht ja nicht. Ach ne, Yield Return ist es,

43:03.060 --> 43:11.700
ne? Ah ja, genau. So, genau und das geht in Unsafe nicht, stimmt. Das darf man in Unsafe

43:11.700 --> 43:21.660
nicht machen. So war das, genau, so war das. Okay, alles klar. Okay, so. Wir probieren jetzt mal was

43:21.660 --> 43:26.260
ganz Neues aus, was ganz Neues, habe ich selten verwendet und zwar wir probieren jetzt mal Channels

43:26.260 --> 43:31.060
aus. Also von der Idee her ist das jetzt folgendermaßen. Ich versuche das, ich versuche

43:31.060 --> 43:34.700
mal, ich versuche mal zu erklären, was ich mir jetzt denke und ob das funktioniert,

43:34.700 --> 43:40.380
ist dann wieder was anderes. Also wir starten hier einen Extra Thread, der unabhängig läuft

43:40.380 --> 43:49.380
von unserem Fenster. An damit gar nichts zu tun. So, da drin lesen wir jetzt aus dem GIF,

43:49.380 --> 44:00.420
das GIF quasi Bild für Bild ein. Dann schreiben wir das in einen Buffer und diesen Buffer lesen

44:00.420 --> 44:05.980
wir dann hier in dem Renderthread aus. Allerdings so, dass das quasi unabhängig voneinander

44:05.980 --> 44:11.340
läuft. Also nicht so, nicht ein Durchlauf unerwartet hier, sondern dass der das einfach

44:11.340 --> 44:15.860
da reinschreibt und hier, wobei, einfach reinschreiben ist blöd, dann produzieren wir

44:15.860 --> 44:21.380
wahrscheinlich Memory Leak, wenn wir schneller decoden als wir es rendern. Also beschränken

44:21.380 --> 44:26.340
wir den Buffer mal. So, wir verwenden jetzt mal Channels. Channels ist neu, das gibt es erst

44:26.340 --> 44:36.140
seit C-Sharp 8 oder C-Sharp 9. Das ist, sagt Microsoft, die High-Performance-Variante von

44:36.140 --> 44:46.820
was eigentlich? Von Collections für Thread-Kommunikation. Keine Ahnung, was sagt Microsoft denn selbst

44:46.820 --> 45:01.660
zu Channels? Channels. Was sagen die dazu? Channels. Ja, die Channels in Go und die Microsoft

45:01.660 --> 45:06.300
Channels, die haben außerdem Name nicht so wirklich viel gemein. Denn Channel in Go hat

45:06.300 --> 45:12.100
ja auch Syntax, also im Prinzip ist es Kommunikation, also reinschreiben und rauslesen, das ist

45:12.100 --> 45:17.100
das Gleiche, aber Go hat ja komplette Syntax Extensions für Channels, das gibt es ja hier

45:17.100 --> 45:24.340
nicht. So, also was sagen die denn selbst? Was? Microsoft das? Nein, nein, nein, auf Englisch

45:24.340 --> 45:35.660
please. Die neuen Microsoft Docs sind kacke. Ich meine, was soll mir das denn sagen? Channels

45:35.660 --> 45:46.260
support reading and writing of elements. Ja, geil, auf die Idee bin ich auch schon gekommen.

45:46.260 --> 45:52.300
Das ist keine allzu big brain Erklärung. Kann es denn ein Channel-Reader-Return? Doch, doch,

45:52.300 --> 45:57.380
doch, kann ich machen. Wahrscheinlich, wahrscheinlich kann Channel-Reader-Return, ja, das funktioniert.

45:57.380 --> 46:04.140
Kann aber auch, ich probiere das jetzt mal. Also, Videoframe. So, und maximal 10 Stück

46:04.140 --> 46:10.060
im Voraus rendern, das reicht. Wenn ich 10 Stück im Voraus rendere, das hat den Scham,

46:10.060 --> 46:14.300
also mal angenommen, ich würde nur einen rendern und dann war, also nein, ich würde

46:14.300 --> 46:20.500
einen decoden, also ich decode ein Bild, schreibe es hier rein, render das Bild aufs Fenster

46:20.500 --> 46:26.820
und warte dann, ähm, dann profitiere ich ja nicht so wirklich schön vom Multithreading,

46:26.820 --> 46:31.580
oder? Also ich würde sagen, wir machen, der darf einfach mal 10 Frames rendern. Wichtig

46:31.580 --> 46:38.500
ist, äh, decoden. Wichtig ist, dass ich in der richtigen Reihenfolge dann render. Das

46:38.500 --> 46:42.380
sollte ja passen, weil der von Anfang bis Ende das immer nacheinander reinschreibt.

46:42.380 --> 46:54.580
Und, ähm, dadurch, dass ich 10 Frames im Voraus habe, kann ich dann später, wenn ich

46:54.580 --> 47:01.140
hier auch mal auf die normale FPS-Anzahl runtergehen will, also nicht 1000 FPS, sondern 25 FPS,

47:01.140 --> 47:06.940
habe ich dann hier nicht so das Problem mit Timings, weil das eigentliche Rendern ist

47:06.940 --> 47:12.620
in unter einer Millisekunde durch. Dann mache ich da einfach dann Hardcoded Sleep 16 oder

47:12.620 --> 47:16.820
was auch immer, 16 Millisekunden oder was auch immer das ist. Nee, für 25 FPS ist es

47:16.820 --> 47:31.020
was? 40 Millisekunden. 40, 40 Millisekunden Sleep. Dann hat man 25 FPS. Stimmt das was

47:31.020 --> 47:46.700
ich sage Leute? 40 Millisekunden pro Frame sind 25. Ergibt das Sinn? Ich würde sagen

47:46.700 --> 47:54.020
ja, aber so sicher bin ich mir da jetzt auch nicht. Ich glaube schon. Egal. Also, okay,

47:54.020 --> 48:00.860
wir probieren das jetzt mal aus. Gut, ähm, 3 in Error, genau. Also wir haben einen Channel

48:00.860 --> 48:07.660
angelegt, Channel mit 10 Stück. Okay, wir starten ein Task, das heißt jetzt kann ich

48:07.660 --> 48:14.060
mir den ganzen Krempel hier erstmal kopieren von FFmpeg. Zeitdurchfrequenz habe ich gemacht,

48:14.060 --> 48:20.220
wir haben 40 raus. Also 1 durch 25 für 0,04, das sind 40 Millisekunden, das muss dann

48:20.220 --> 48:28.260
stimmen. Okay, also Copy Paste. Das ist, okay. Das brauchen wir auch, das brauchen wir auch,

48:28.260 --> 48:33.900
das brauchen wir auch. Eigentlich brauchen wir das alles bis auf den ganzen Mist da unten.

48:33.900 --> 48:43.980
Okay. Alles klar. Das ist Low Level FFmpeg Zeug, was halt so gemacht werden muss, weil

48:43.980 --> 48:51.540
es sonst nicht funktioniert. So, den Pfad zu unseren Binaries setzen, den Pfad zum Bild,

48:51.540 --> 48:58.700
das ist vielleicht dumm, das Ganze jetzt zu hardcoden, aber ich mein, why not? Was ist

48:58.700 --> 49:04.420
eigentlich unsafe? Naja, also ziemlich alles hier ist unsafe. Allein schon, dass hier

49:04.420 --> 49:15.300
ein Kontextpointer zurückkommt, ist unsafe. Das geht nicht anders. Das ist ein ziemlich

49:15.300 --> 49:21.180
dünner Rapper um FFmpeg. Achso, du meinst, für was unsafe an sich ist. Unsafe ist, dass

49:21.180 --> 49:31.420
ich so Sachen machen kann, wie Pointer verwenden, Referenzen verwenden und Dinger. Ich weiß

49:31.420 --> 49:35.020
es gar nicht, was es noch geht, aber wenn du sobald du Low Level Pointer machen willst,

49:35.020 --> 49:41.420
musst du sagen unsafe. So, und das Dumme ist an unsafe, dass man einige Features nicht

49:41.420 --> 49:46.020
verwenden kann in einem unsafe Kontext. Zum Beispiel Yield Return und sowas, das geht

49:46.020 --> 49:53.980
nicht in unsafe und Async Await geht auch nicht in unsafe. Oh fuck, wenn Async Await

49:53.980 --> 49:58.540
nicht geht, dann kann ich auch keine Channels verwenden. Ach Quatsch, wir warten einfach

49:58.540 --> 50:09.180
synchron. Wer braucht Await? Einfach synchron warten und gut ist. Also, was haben wir denn

50:09.180 --> 50:26.740
jetzt? Bild, Bild, ok. Kontext, Open. Das muss ja funktionieren, weil das ging ja im

50:26.740 --> 50:41.780
anderen auch. So, was brauchen wir als nächstes? Package, Package, Frame. Also ich hab's hier

50:41.780 --> 50:44.580
eben gestartet, das funktioniert. Das heißt, das können wir uns jetzt Copy Pasten aus dem,

50:44.580 --> 50:52.100
was wir eben hatten. So, übrigens, warum ist der hier rot? Weil ich nichts Returne. Ok,

50:52.100 --> 51:02.580
dann sagen wir jetzt hier Return, Return, Channel, Channels, Alter, Channel, Reader.

51:02.580 --> 51:19.660
So, geht das? Ich hoffe mal. Race Condition gibt's nix. Ne, bei uns gibt's nie Bugs. Das

51:19.660 --> 51:23.820
ist doch, also komm, hatten wir schon einmal in einem Stream was, was nicht funktioniert

51:23.820 --> 51:37.580
hat? Ich kann mich nicht erinnern. So, ne. So, also. FFmpeg versteht unter Packet und

51:37.580 --> 51:43.940
Frame folgendes. Also, ich versuch das mal zu erklären. Also FFmpeg ist ja ne Multimedia

51:43.940 --> 51:52.740
Library mit Video-Decodern und Video-Encodern. Also FFmpeg kann ja im Prinzip alles, was

51:52.740 --> 51:59.980
es so gibt, außer was FFmpeg nicht kann. Also FFmpeg kann H264, GIF, Avi-Gedöns, die

51:59.980 --> 52:05.020
unterschiedlichsten Container von MP4 bis MKV bis MOF und sonst wie. Also FFmpeg kann

52:05.020 --> 52:14.860
alles. Das einzige was FFmpeg nicht kann, was halbwegs verbreitet ist, sind, ähm, wie

52:14.860 --> 52:25.180
heißt denn dieses, dieses neue Apple-Bilder-Format? H-H-H-E-I-C oder so? H-Hike? Wisst ihr was

52:25.180 --> 52:35.820
ich mein? Hike-Image? Heißt das Hike? Hier, das da. Genau. Das kann FFmpeg noch nicht.

52:35.820 --> 52:45.180
Aber was FFmpeg kann, ist die Video-Variante davon. Das können sie. Sie können nur die

52:45.180 --> 52:49.980
Image-Variante davon noch nicht. Aber das ist bei FFmpeg alles nur eine Frage der Zeit,

52:49.980 --> 53:03.820
bis es das auch kann. Achso, was Yield macht, das kann ich dir zeigen. Das zeige ich dir.

53:03.820 --> 53:07.020
Ich glaube, da kann ich ein schönes Beispiel basteln. Ich muss mal irgendwie in das Programm

53:07.020 --> 53:12.980
reingehen, was äh, wo nichts passiert, wenn ich starte, weil das ist gerade proppen. Also

53:12.980 --> 53:17.420
was du machen kannst mit Yield-Return ist folgendes. Ähm, wie erkläre ich das jetzt

53:17.420 --> 53:26.660
am besten? Also mal angenommen, du hast eine Liste, die on the fly erzeugt werden soll.

53:26.660 --> 53:31.260
Normalerweise ist es ja so, wenn du, sorry, wir machen jetzt einfach, warte, warte, ich

53:31.260 --> 53:35.460
mache mal, ich zeig dir das, ich mache mal ein eigenes, äh, oder haben wir vielleicht

53:35.460 --> 53:41.180
noch ein Konsolenprojekt, was ich irgendwie... New Project, wir machen das jetzt in Visual

53:41.180 --> 53:51.620
Studio, dann komme ich nicht durcheinander. Äh, Console, ConsoleApplication.net Core,

53:51.620 --> 53:57.980
ConsoleApp 16, ich würde sagen, wir hätten einige, wir hätten einige ConsoleApps gehabt,

53:57.980 --> 54:07.420
aber who cares? So, also ich zeig dir jetzt, was das macht, wenn, wenn Visual Studio da

54:07.420 --> 54:13.500
Bock drauf hat. So, also, ähm, normalerweise, wenn du eine Liste erzeugst, ist das ja relativ

54:13.500 --> 54:21.460
einfach. So, du erzeugst, nein, du erzeugst eine, okay, die sind aber mittlerweile krass

54:21.460 --> 54:26.940
minimalistisch, was Includes angeht, Alter. So, du erzeugst normalerweise eine Liste,

54:26.940 --> 54:31.340
in dem du die Elemente, also, dann ist, die Elemente sind schon bekannt zu dem Zeitpunkt,

54:31.340 --> 54:35.380
also du erzeugst eine Liste und sagst, wir kürzen das mal ab, wir kürzen das mal ab,

54:35.380 --> 54:39.340
also wir sagen jetzt hier 1, 2, 3, 4, 5, 6, 7, ach so, immer, so, das kommt in die Liste

54:39.340 --> 54:44.660
rein. So, und wenn du jetzt die Liste durchlaufen willst, dann muss die Liste schon fertig sein.

54:44.660 --> 54:53.140
So, also zu diesem Zeitpunkt, wenn du das ausgibst, die Liste, dann ist die Liste schon

54:53.140 --> 55:02.980
fertig. Liste, dann ist die Liste schon fertig. Also sprich, die, die ist, die ist komplett,

55:02.980 --> 55:10.100
von Anfang bis Ende. Wenn du jetzt allerdings was hast, was eventuell nie fertig wird oder

55:10.100 --> 55:15.180
on the fly erzeugt werden sollt, oder, oder, oder on the fly erzeugt, machen wir, du willst

55:15.180 --> 55:21.220
eine random Nummer haben. Sagen wir, du willst einen unendlich langen Stream von random Nummern

55:21.220 --> 55:28.780
haben. Das kannst du so nicht machen. Wenn du das in eine Liste schreibst, dann ist die

55:28.780 --> 55:33.100
Liste quasi, die muss, bevor du sie durchläufst, muss die, muss die fertig sein. Aber sagen

55:33.100 --> 55:36.780
wir mal, du willst einen unendlich langen Stream an random Nummern haben. Wie machst

55:36.780 --> 55:43.980
du das? So, natürlich, die einfachste Variante ist, also die, die Variante, die aber nicht

55:43.980 --> 55:51.980
sich gut integrieren lässt, sondern halt einfach alles in einem Blockbrauch ist, du sagst random,

55:51.980 --> 56:08.420
und dann sagst du hier quasi, wild, true, random, next, so, bam. So, das ist, so, jetzt

56:08.420 --> 56:16.940
hast du eine, eine Endlosschleife mit random Nummern. So, das ist jetzt allerdings vielleicht

56:16.940 --> 56:22.300
nicht die allerschönste Variante, weil das ist eine Endlosschleife in deinem Main, und

56:22.300 --> 56:26.940
du kannst das auch von nirgendwo anders aufrufen. Und vielleicht willst du auch gar keine Endlosschleife

56:26.940 --> 56:30.780
haben, vielleicht willst du das auch mal irgendwann abbrechen, oder vielleicht willst du auch

56:30.780 --> 56:37.100
gar nur 100 random Nummern, aber du willst nicht 100 random Nummern im Vorfeld berechnen,

56:37.100 --> 56:42.060
sondern du willst die eine nach dem anderen, und ab 100 ist halt, ist halt Schluss. So,

56:42.060 --> 56:47.900
nehmen wir mal das Beispiel, dann kannst du das, dann kannst du das machen mit yield return,

56:47.900 --> 57:02.460
also du sagst static, generate, random numbers, void ist übrigens falsch, das heißt, an

57:02.460 --> 57:07.780
der Stelle willst du sagen, ok, ich gebe keine Liste zurück, sondern ich gebe ein, ein nummerable

57:07.780 --> 57:14.000
zurück von ins, an der Stelle ist ja noch gar nicht klar, wie viele, wie viele random

57:14.000 --> 57:17.660
Nummern es gibt, also ok, es gibt 100, aber es ist, also du willst die Nummern nicht im

57:17.660 --> 57:25.660
Voraus berechnen. So, jetzt machen wir, jetzt machen wir eine Schleife, dann void, kleiner

57:25.660 --> 57:32.580
100, also wir machen im Prinzip das gleiche wieder oben, machen im Prinzip das, das hat

57:32.580 --> 57:36.220
aber auch einen schönen, das hat aber auch schon einen schönen, einen schönen Nebeneffekt,

57:36.220 --> 57:41.100
yield macht eine Liste, die erzeugt wird, während man drüber iteriert, ja, yield macht gar keine

57:41.100 --> 57:48.380
Liste, yield erzeugt on the fly immer einzelnen Rückgabewert, jedes Mal, wenn du ein, ein,

57:48.380 --> 57:56.060
anfragst. Eine Vorschleife macht ja unter der Haube nichts anderes, wie immer next aufzurufen

57:56.060 --> 58:01.020
bei einem Iterator, und bei dieser next Aufruf sorgt dafür, dass der bei, ich zeig's, ich

58:01.020 --> 58:06.900
zeig's euch, wieder reinspringt und, und das weiter, weitermacht, so. Wenn du jetzt hier

58:06.900 --> 58:13.340
was hast, für 100 random Numbers zu generieren, du willst aber immer nur eine haben, also du

58:13.340 --> 58:17.300
willst nicht im Vorfeld alle 100 erzeugen, normalerweise würdest du jetzt hier eine Liste

58:17.300 --> 58:31.540
machen, war list int list add und dann würdest du sagen return list, was das blöde daran

58:31.540 --> 58:36.780
ist, ich mein das funktioniert, aber was der jetzt macht ist, du generierst jetzt 100 random

58:36.780 --> 58:41.620
Nummern und gibst die zurück, das willst du ja vielleicht gar nicht, vielleicht überleg

58:41.620 --> 58:47.380
dir mal das generieren von so einer random Nummer, würde jetzt 5 Minuten dauern oder

58:47.380 --> 58:54.140
5 Sekunden, das können wir ja mal einbauen, einfach just for fun, nee machen wir nicht,

58:54.140 --> 58:57.900
aber reicht glaube ich, also stell dir mal vor das dauert ein bisschen, das zu generieren,

58:57.900 --> 59:01.860
da willst du das jetzt vielleicht nicht 100 mal im voraus machen, so und jetzt können

59:01.860 --> 59:07.860
wir das Ganze ein bisschen verbessern, wir können jetzt sagen hier, for each generate

59:07.860 --> 59:17.100
100 random Numbers item, so noch werden immer 100 random Numbers, bei dem Aufruf hier von

59:17.100 --> 59:21.700
dieser Funktion, werden 100 random Nummern generiert, in eine Liste geschrieben und die

59:21.700 --> 59:27.900
Liste wird zurückgegeben und erst dann läuft die Schleife, so die effizientere Variante

59:27.900 --> 59:35.220
ist aber die random Nummer immer erst zu jedem Durchlauf zu generieren, anstatt 100 im Vorfeld,

59:35.220 --> 59:39.180
das ist C sharp, so und das macht man jetzt folgendermaßen, man lässt diesen ganzen Listenshit

59:39.180 --> 59:51.180
weg und sagt einfach, yield return random next, so und du wirst sehen, das funktioniert

59:51.180 --> 01:00:00.580
genauso, aber jetzt funktioniert das folgendermaßen, der ruft sich den iterator ab, also der ruft

01:00:00.580 --> 01:00:06.660
sich dieses I enumerable ab, kann man gucken, ob man das hier irgendwie sieht, genau, der

01:00:06.660 --> 01:00:14.060
holt sich den oder den enumerator raus und ruft dann quasi pro Durchlauf move next auf,

01:00:14.060 --> 01:00:18.340
das ist das, was die Vorschleife unter der, was eine for each Schleife unter der Haupe

01:00:18.340 --> 01:00:25.120
macht, also eine for each Schleife ist quasi eine wild Schleife, die move next aufruft

01:00:25.120 --> 01:00:31.220
bis falls zurückkommt und das dann in eine Variable schreibt, ist halt syntaktisch ein

01:00:31.220 --> 01:00:39.020
bisschen schöner und was der jetzt macht ist, der sagt ok, ich hole mir den iterator, ruft

01:00:39.020 --> 01:00:46.540
next auf, so und wenn du next aufrufst, heißt das ok, der geht hier rein, führt das aus

01:00:46.540 --> 01:00:52.540
bis zum ersten mal yield return, wenn yield return kommt, springt er zurück, führt den

01:00:52.540 --> 01:00:59.660
Schleifenbody aus und beim nächsten next macht er den nächsten Schleifendurchlauf,

01:00:59.660 --> 01:01:03.660
das heißt du musst jetzt nicht mehr 100 random nummern im Vorfeld erzeugen, sondern kannst

01:01:03.660 --> 01:01:11.860
100 random nummern on the fly erzeugen, während du sie brauchst, was natürlich deutlich angenehmer

01:01:11.860 --> 01:01:20.780
ist und das ganze kannst du natürlich auch endlos machen, also wir sagen jetzt mal generate

01:01:20.780 --> 01:01:29.020
random numbers und sagen anstatt vor sagen wir einfach while, while true, dann hast du

01:01:29.020 --> 01:01:40.660
hier eine endlos stream von random nummern, das ist recht praktisch, man braucht das selten

01:01:40.660 --> 01:01:45.020
aber wenn man es braucht ist es wirklich praktisch, das ist halt sinnvoll bei Dingern wo du nicht

01:01:45.020 --> 01:01:50.860
weißt wann Schluss ist oder wo vielleicht nie Schluss ist, zum Beispiel stell dir ne

01:01:50.860 --> 01:01:57.820
Kamera vor, stell dir ne Kamera vor, von der du Videobilder liest, die hört ja nicht

01:01:57.820 --> 01:02:04.180
auf die Kamera, die hat ja im Prinzip unendlich Bilder, praktisch nicht, da irgendwann geht

01:02:04.180 --> 01:02:12.660
sie kaputt, aber die hat ja theoretisch unendlich viele Bilder, du kannst ja gar nicht am Anfang

01:02:12.660 --> 01:02:19.940
eine Liste mit allen Kamerabildern, die je kommen werden erstellen um die zu verarbeiten,

01:02:19.940 --> 01:02:25.540
du brauchst ja nen stream von Kamerabildern, immer dann wenn es halt ne neues Kamerabild

01:02:25.540 --> 01:02:29.940
gibt und das könntest du beispielsweise so hier drinnen machen, du würdest dann nicht

01:02:29.940 --> 01:02:33.820
random next aufrufen, du würdest dann sagen camera read next frame oder was auch immer,

01:02:33.820 --> 01:02:37.820
unten drunter ist dann nen rtsp stream, was auch immer ist ja egal, aber du könntest

01:02:37.820 --> 01:02:44.820
über diese ap dann aufrufen, ja also das ist yieldreturn und jetzt kommt die bigprane

01:02:44.820 --> 01:02:57.140
variante, es gibt jetzt async einarmorable, das gibt es auch, dann kannst du nämlich sagen,

01:02:57.140 --> 01:03:06.300
ich weiß übrigens gar nicht wie die richtige syntax davon ist, und wie war da jetzt die

01:03:06.300 --> 01:03:17.620
richtige, man muss das async machen, und dann muss man hier sagen await, ja genau das funktioniert,

01:03:17.620 --> 01:03:23.460
und das braucht man für den fall der fälle, das ist auch neu, seit csharp 8 oder so oder

01:03:23.460 --> 01:03:29.980
neu, das braucht man für den fall der fälle, dass man hier drinnen await verwenden will,

01:03:29.980 --> 01:03:42.940
zum beispiel await task delay 100, 100 millisekunden, oder sagen wir mal ne sekunde, guck du hast

01:03:42.940 --> 01:03:49.300
jetzt einen unendlichen stream von random nummern, und wir simulieren jetzt halt hier,

01:03:49.300 --> 01:03:52.820
dass es ein bisschen warten muss, das ist mal angenommen, das wäre nicht so schnell,

01:03:52.820 --> 01:03:58.020
das random nummern generieren, und jetzt sieht man auch, dass es sinnvoll ist, dass man die

01:03:58.020 --> 01:04:06.500
immer nicht alle im vorfeld generieren muss, sondern immer nur eins auf einmal, ja so sieht

01:04:06.500 --> 01:04:14.860
es aus, du hast es halbwegs verstanden, ja, das ist die neu, also async, das braucht man

01:04:14.860 --> 01:04:21.660
ganz selten, das normale ist schon selten, aber das ist doch ziemlich selten, dass man

01:04:21.660 --> 01:04:25.540
das verwendet, das wie gesagt, das verwendet man eigentlich nur, wenn man irgendwelche

01:04:25.540 --> 01:04:31.900
eingebauten sachen verwenden möchte, die await und async sind, sonst braucht man das

01:04:31.900 --> 01:04:38.500
nicht, hat javascript eigentlich async await von c-sharp geklaut oder andersrum, ja c-sharp

01:04:38.500 --> 01:04:45.540
geklaut, ist kein witz, ist so, c-sharp war mit die erste sprache die das hatte, die haben

01:04:45.540 --> 01:04:52.060
das geklaut und ich vermute mal, dass das, da bin ich mir aber nicht sicher, das rate

01:04:52.060 --> 01:04:57.620
ich jetzt einfach mal, dass das ein bisschen was mit typescript zu tun hatte, weil der

01:04:57.620 --> 01:05:03.420
typescript-typ bei microsoft ist der c-sharp erfinder, der hat irgendwann gesagt, ich

01:05:03.420 --> 01:05:14.140
habe keinen bock mehr auf c-sharp, wie heißt der anders heilsberg, der hat c-sharp erfunden

01:05:14.140 --> 01:05:19.380
auf auftrag von microsoft und jetzt typescript und ich vermute mal, dass es damit zusammen

01:05:19.380 --> 01:05:24.780
hängt, dass javascript jetzt auch async await im standard hat, dass die sich gedacht

01:05:24.780 --> 01:05:32.660
haben, das ist so eine gute idee, das bauen wir direkt in den standard mit ein, ja vermute

01:05:32.660 --> 01:05:39.940
ich, weiß nicht ob das stimmt, keine ahnung, wie weit sind wir aktuell, wir bauen das heute

01:05:39.940 --> 01:05:50.260
ordentlich, ich finde das aber auch gut in javascript mit async await, weil ich muss

01:05:50.260 --> 01:05:56.860
euch ehrlich sagen, ich habe diese manuelle promise, then, error-geschichte nie richtig

01:05:56.860 --> 01:06:05.380
gecheckt, vor allem hast du in javascript, der irgendwann 50, 50 spillionen nestet, then

01:06:05.380 --> 01:06:12.660
links und sonst wie was gehabt, also in javascript hast du ja irgendwann so ein ding hier dann,

01:06:12.660 --> 01:06:18.660
das war ja nicht unnormal in javascript, dass du sowas hattest hier, da ist das mit async

01:06:18.660 --> 01:06:28.020
await schon schöner, ok also wir decoden mal unser gif weiter, ok also, was ich eigentlich

01:06:28.020 --> 01:06:33.220
an der stelle sagen wollte, was ffmpeg unter packet und frame versteht, also wie gesagt,

01:06:33.220 --> 01:06:38.100
ffmpeg ist ein multimedia framework, mit dem man videos decoden kann, gifs decoden kann,

01:06:38.100 --> 01:06:42.740
bilder decoden kann und auch endcoden kann, also alles was man multimedia braucht, ist

01:06:42.740 --> 01:06:48.380
ffmpeg eigentlich gut, es gibt eigentlich nur zwei große so open source multimedia frameworks,

01:06:48.380 --> 01:06:55.140
die viel verwendet werden, das ist einmal libav, das ist quasi ffmpeg, moment habe ich

01:06:55.140 --> 01:07:00.260
das jetzt verwechselt, war libav nicht, ist das ffmpeg, doch ich glaube es ist libav,

01:07:00.260 --> 01:07:09.580
das ist einmal ffmpeg und gstreamer, vlc verwendet was eigenes, hat aber glaube die ffmpeg codecs

01:07:09.580 --> 01:07:26.260
mit dabei, mplayer auch, genau, und was ffmpeg versteht unter packet und frame ist ein bisschen

01:07:26.260 --> 01:07:33.980
schwammig, also wenn du ein video decoden willst, dann geht das in zwei schritten, du liest

01:07:33.980 --> 01:07:43.860
mit ffmpeg die datei ein, in dem fall das gif, ffmpeg guckt dann, dass es soweit einliest,

01:07:43.860 --> 01:07:47.820
was man von der datei braucht, dass man ein bild decoden kann, das ist ja gar nicht so

01:07:47.820 --> 01:07:55.460
einfach, je nach video format, muss man unterschiedlich viel einlesen, dass es ausreicht um ein vollständiges

01:07:55.460 --> 01:08:04.060
bild zu decoden, also ffmpeg liest so viel ein wie es einlesen muss in ein packet, also

01:08:04.060 --> 01:08:11.420
sprich ein packet ist ein komprimiertes bild, ein komplettes komprimiertes bild in ffmpeg

01:08:11.420 --> 01:08:18.320
und ein frame ist ein unkomprimiertes bild, also ein packet ist quasi alle informationen

01:08:18.320 --> 01:08:26.060
die ich brauche um ein bild decoden zu können, aber eben noch komprimiert, noch nicht decoded

01:08:26.060 --> 01:08:32.500
und ein frame ist das nachdem es decoded ist, also ein frame ist dann, weiß nicht ob es

01:08:32.500 --> 01:08:43.660
immer rgb ist, nee ein frame ist das was man ihm angibt, modge, ja kann ich rein machen,

01:08:43.660 --> 01:08:50.060
so also ich habe jetzt versucht zu erklären, das heißt was wir jetzt machen müssen ist,

01:08:50.060 --> 01:08:55.100
wir müssen ffmpeg sagen, liest ein package ein soweit du es brauchst und dann decode

01:08:55.100 --> 01:09:04.060
das mit dem passenden decoder, das haben wir glücklicherweise schon alles gemacht, irgendwo

01:09:04.060 --> 01:09:15.700
hier, einfach big brain decoding time, ich bin mir nicht mehr ganz sicher was ich da gemacht

01:09:15.700 --> 01:09:38.340
habe, kannste es mal einrücken, reformat, continue, so, genau und jetzt muss ich das

01:09:38.340 --> 01:09:53.780
ganze decoden, decoden, in den frame rein und das wars, gut gucken wir mal ob das ganze

01:09:53.780 --> 01:09:59.420
jetzt funktioniert, ich vermute mal wir haben jetzt einen memory leak produziert, also das

01:09:59.420 --> 01:10:04.820
sollte ausreichen dass der jetzt multithreadet unser gif decoded, wir werden wahrscheinlich,

01:10:04.820 --> 01:10:10.220
nee wir werden ziemlich sicher noch nichts sehen, aber wir sehen dass es unterschiedliche

01:10:10.220 --> 01:10:30.220
bilder gibt, das können wir gleich mal ausprobieren, frame, irgendwie timestamp, wts, genau, packet,

01:10:30.220 --> 01:10:38.540
timestamps, so also das sollte von der idee jetzt funktionieren, machts nicht, ok, excellent,

01:10:38.540 --> 01:10:57.380
warum nicht, decoder, ah weil ich das nirgendswo aufrufe, 0w, code frames, funktioniert das

01:10:57.380 --> 01:11:03.860
jetzt, ok, funktioniert, so wir sehen auch dass die timestamps irgendwie sind ergeben

01:11:03.860 --> 01:11:09.780
von einem gif, dann die timestamps sind 048 bis 36 und dann loopts wieder von vorne, also

01:11:09.780 --> 01:11:16.820
das heißt wir haben 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 bilder in dem gif, dann gehts wieder

01:11:16.820 --> 01:11:20.940
von vorne los, also sprich das gif besteht aus 10 bildern, das ist halt der timestamp

01:11:20.940 --> 01:11:30.020
von den einzelnen bildern, wie immer sich das errechnet, keine ahnung, so also das funkt,

01:11:30.020 --> 01:11:35.020
das decoden funktioniert prinzipiell schonmal, ist halt ne endlos schleife, das heißt wir

01:11:35.020 --> 01:11:40.340
werden das nie wieder los, deswegen hab ich eben auch hier gesagt ich brauch was zum cancelen

01:11:40.340 --> 01:11:47.220
und dementsprechend läuft auch meine decoding schleife nicht für immer sondern nur bis

01:11:47.220 --> 01:11:54.540
token is cancellation requested, also sprich wenn ich sage hier abbrechen dann soll er

01:11:54.540 --> 01:12:08.380
auch aufhören die schleife laufen zu lassen, dann lasst es doch drin stehen, passt doch,

01:12:08.380 --> 01:12:11.340
daher müssen wir jetzt heute nichts mehr großartig dazu schreiben, ich hab ja schon erklärt was

01:12:11.340 --> 01:12:18.620
wir machen, so also jetzt haben wir das ganze hier, jetzt decoden wir das ganze hier und

01:12:18.620 --> 01:12:26.060
jetzt hab ich glaub ich ne memory leak fabriziert wenn ich nicht komplett falsch liege, das

01:12:26.060 --> 01:12:36.860
werden wir jetzt mal kurz kontrollieren ob wir ne memory leak fabriziert haben oder nicht,

01:12:36.860 --> 01:12:56.620
schauen wir mal, ich vermute mal schon, das sieht doch ein bisschen nach memory leak aus,

01:12:56.620 --> 01:13:03.180
gut ist ja aber auch klar ich lösche den kram ja auch nicht, ok doch wir müssen noch

01:13:03.180 --> 01:13:07.460
was machen, wir müssen dem garbage collector sagen dass der aufräumen soll, es kann auch

01:13:07.460 --> 01:13:15.460
sein dass wir gar kein memory leak haben, der einfach nicht aufräumt, doch wir haben

01:13:15.460 --> 01:13:24.100
memory leak, ok ich glaube das liegt daran weil ich das nirgendswo freigebe also sprich

01:13:24.100 --> 01:13:31.780
ich muss jetzt sagen bitte freigeben das was du hier eingelesen hast wenn wir durch sind

01:13:31.780 --> 01:13:53.100
hier mit also sprich ffmpeg av frame unref und ffmpeg av packet unref, wo ist da noch

01:13:53.100 --> 01:14:04.900
ein pointer reference ach mensch ffmpeg please, wo ist das problem jetzt schon wieder warum

01:14:04.900 --> 01:14:23.740
nicht, achso ich hab es falsch rum, der langs ist kein wunder dass es nicht funktioniert,

01:14:23.740 --> 01:14:29.940
wenn man das richt, so mal gucken ob das memory leak jetzt weg ist, das sieht auch schon mal

01:14:29.940 --> 01:14:36.940
besser aus, er bleibt bei 53mb, außer dass der garbage collector grad absolut eskaliert

01:14:36.940 --> 01:14:43.700
weil ich ihn jede schleife aufrufe und collecten lasse, aber zumindest kein memory leak mehr,

01:14:43.700 --> 01:14:49.220
so wenn ich gc collect weg mache dann sieht es so aus als hätten wir memory leak, haben

01:14:49.220 --> 01:14:59.940
wir aber nichts, sieht so nicht mal so aus, alles klar gut, ich hätte das eigentlich gedacht

01:14:59.940 --> 01:15:06.060
es geht ein bisschen rauf, gut wunderbar dann stimmt das nicht was ich gesagt hab alles

01:15:06.060 --> 01:15:13.060
gut also wir haben kein memory leak das ist schon mal fein, sehr gut, so und jetzt zum

01:15:13.060 --> 01:15:19.420
eigentlichen decode, also decoded haben wir das bild hier, jetzt muss ich irgendwie das

01:15:19.420 --> 01:15:28.460
bild von meinem decoder in das fenster reinbringen oder zumindest so tun erstmal, ich muss das

01:15:28.460 --> 01:15:33.980
bild irgendwie aus meinem decoding thread in meinen ich würde gern was rendern thread

01:15:33.980 --> 01:15:40.420
bekommen, so und das wollte ich über den channel machen, also maximal 10 frames im voraus

01:15:40.420 --> 01:15:54.820
rendern, das heißt ich brauch da jetzt sowas wie channel, writer, write async, normalerweise

01:15:54.820 --> 01:16:00.780
würde man das by the way so machen, aber nachdem diese metode unsafe ist kann ich kein async

01:16:00.780 --> 01:16:05.620
und await verwenden in unsafe, deswegen müssen wir das jetzt ein bisschen anders machen,

01:16:05.620 --> 01:16:18.460
new, video frame, was ich hoffe das funktioniert was ich gemacht hab, wait cleared gc eigentlich

01:16:18.460 --> 01:16:25.180
den stuff aus der unsafe funktion, ja solang es managed memory ist macht es das schon,

01:16:25.180 --> 01:16:38.020
wie gehen das, wie kann ich denn da warten, s-task, wait, da sagt microsoft das soll man

01:16:38.020 --> 01:16:43.580
nicht so machen, aber mir fällt gerade ehrlich gesagt nichts anderes ein, weil wir können

01:16:43.580 --> 01:16:56.980
es nicht der microsoft way machen, never used, warum, wir können es nicht im microsoft way

01:16:56.980 --> 01:17:03.780
machen, weil wir unsafe verwenden und wenn da kein await drinne verwenden darf, get await

01:17:03.780 --> 01:17:08.820
result, result ist das schöner als das, ich weiß nicht, ich lasse es jetzt einfach mal

01:17:08.820 --> 01:17:17.940
so gucken ob es funktioniert, ja, warum ist das schöner, machst du das gleich oder, also

01:17:17.940 --> 01:17:33.380
gut, also von der idee her kann ich jetzt hier ne schleife machen und dann darin rendern

01:17:33.380 --> 01:17:41.180
und das sollte dann unabhängig voneinander laufen, ok ich sollte es vielleicht nicht

01:17:41.180 --> 01:17:51.220
draw bitmap nennen, sondern draw, keine video frame oder so, so jetzt bin ich mal gespannt

01:17:51.220 --> 01:17:58.860
ob das funktioniert, wie kriege ich denn jetzt raus überhaupt ob das funktioniert, ich gebe

01:17:58.860 --> 01:18:09.140
hier einfach mal was drin aus, also frame, keine ahnung, data, mir egal, so, das sollte

01:18:09.140 --> 01:18:15.260
jetzt unabhängig voneinander passieren wenn es funktioniert was ich gemacht hab, ja klappt,

01:18:15.260 --> 01:18:28.780
warum ist das ein pointer 0, das kann eigentlich nicht stimmen, warum ist der pointer 0, der

01:18:28.780 --> 01:18:37.020
zumindest funktioniert als multithreaded decoden schonmal, also der decoded hier unabhängig

01:18:37.020 --> 01:18:56.860
von einem thread wo ich rendern will, 10 frames im voraus, get await result will rework stack

01:18:56.860 --> 01:19:08.780
trace to take all, ich hab gar kein oi thread, sicher dass ich das verwenden soll, ja der

01:19:08.780 --> 01:19:15.940
zebaro ist glaub ich mit matte im studium beschäftigt oder mit dem zebaro grill keine

01:19:15.940 --> 01:19:21.860
ahnung, ok ich mach das jetzt mal was der chat sagt, also der chat sagt ich soll nicht

01:19:21.860 --> 01:19:45.540
task aware sondern ich soll sagen get awaiter get result, also ok gut wenn der chat sagt

01:19:45.540 --> 01:19:53.980
dass das besser ist dann glaub ich das dem chat, gucken wir mal ob das im release mode

01:19:53.980 --> 01:20:03.220
funktioniert, tatsächlich funktioniert auch, ok chat hat recht ich mach das jetzt so, ist

01:20:03.220 --> 01:20:17.620
das auf jithub, nee, moment was, hallo meine off topic frage ich hab jemanden auf youtube

01:20:17.620 --> 01:20:21.860
gefunden der dieses interview liegt was sie hat mit dem dice team bezüglich dem neuen

01:20:21.860 --> 01:20:27.700
battlefield, kann ich hier werbung für den machen weil wir sicher einige interessieren

01:20:27.700 --> 01:20:31.500
da du ja wenig erzählen magst was hier drin, na gut ich darf dazu nichts erzählen wenn

01:20:31.500 --> 01:20:35.980
es jemand anderes geleakt hat kann ich ja nichts für, kannst du ruhig machen das interessiert

01:20:35.980 --> 01:20:43.220
mich nicht, was kannst du hier machen kannst du ruhig den video link posten da kann ich

01:20:43.220 --> 01:20:50.340
dir sogar sagen ob das stimmt oder nicht, ob das legit ist, wobei du siehst es daran

01:20:50.340 --> 01:20:55.300
ob das legit ist ist der chat mit dabei, wenn der chat mit dabei ist dann siehst du ab

01:20:55.300 --> 01:21:06.580
und zu von mir mal dumme comments im chat, was lost, der lost hat garantiert nicht das

01:21:06.580 --> 01:21:12.140
interview geleakt ups ich kenn den lost mit der hab ich letztens ein video aufgenommen

01:21:12.140 --> 01:21:32.900
ist das willst du mich jibaden, zeig mal her, zeig mal her, da kommt jetzt wahrscheinlich

01:21:32.900 --> 01:21:43.860
rick astley als link, achso ne die infos liegen kann der, das ist ok, das ist erlaubt, der

01:21:43.860 --> 01:21:54.900
lost zeigt nix aus dem internen fhq, das ist ok, das ist alles in ordnung, du darfst das

01:21:54.900 --> 01:22:00.860
event nicht mitschneiden, du darfst die infos aus dem event aber verwenden, das ist in

01:22:00.860 --> 01:22:04.900
ordnung was er gemacht hat, ich hab sogar mit dem lost genau über dieses thema haben

01:22:04.900 --> 01:22:10.140
wir uns da eine weile unterhalten, also das ist alles in ordnung, du darfst nur nicht

01:22:10.140 --> 01:22:13.780
jetzt das event mitschneiden, hätte jetzt einer das event hochgeladen, ja das wäre

01:22:13.780 --> 01:22:23.860
was anderes gewesen, ne so ist das alles in ordnung, ich hab ja auch immer im videos

01:22:23.860 --> 01:22:30.060
sachen aus dem fhq erzählt, ok nochmal kurz big brain time, big brain time stimmt es

01:22:30.060 --> 01:22:47.340
jetzt was ich hier so mache, also ich glaub schon, ich glaube schon dass das hier stimmt,

01:22:47.340 --> 01:22:55.500
wir können ja mal kurz gucken ob das parallel läuft, wir gucken mal ob das parallel läuft,

01:22:55.500 --> 01:23:06.740
also red sleep, ich lass das hier mal eine sekunde sleepen, frame in channel schreiben

01:23:06.740 --> 01:23:12.820
bevor der frame unreft wird, ja mach ich ja, oder du meinst du der löscht das dann

01:23:12.820 --> 01:23:22.540
wieder, ne der löscht das nicht, weil ich das gerappt habe in video frame und der macht

01:23:22.540 --> 01:23:28.860
am anfang nen ref intern nochmal, also hier macht der nen ref drauf ffmpeg technisch

01:23:28.860 --> 01:23:34.300
und gibt den dann am ende wieder frei, hier unreff ich den kram bloß, dass am ende der

01:23:34.300 --> 01:23:40.980
ref counter auf 0 geht, was ich wahrscheinlich gar nicht machen müsste, was ich wahrscheinlich

01:23:40.980 --> 01:23:49.660
gar nicht machen müsste, aber immerhin also dass das klappt auf jeden fall, programmierst

01:23:49.660 --> 01:23:53.860
du immer ins zishab, ja das ist mein lieblingssprache, ich kann andere, ich hab irgendwo sogar ne tabelle

01:23:53.860 --> 01:23:58.940
mit wo ich mal aufgeschrieben hab was ich kann, ja also die üblichen dinger, ich könnt

01:23:58.940 --> 01:24:02.620
sogar was in java programmieren, hab ich aber kein bock drauf, krieg ich anfälle, ja also

01:24:02.620 --> 01:24:23.940
meine lieblingssprachen sind einolch zishab und ruby, aber ruby ist ja nicht mehr angesagt,

01:24:23.940 --> 01:24:35.340
ruby ist entgleist ja, ruby interessiert keinen mehr leider, so ich will mal kurz testen ob

01:24:35.340 --> 01:24:41.820
das ganze jetzt wirklich multithreaded ist, also der sollte jetzt hier 10 bilder einlesen,

01:24:41.820 --> 01:24:49.460
das testen wir jetzt mal ob das auch wirklich so ist, so der sollte unabhängig hier von

01:24:49.460 --> 01:24:57.940
10 bilder einlesen, also gucken wir mal, sagen wir einfach mal channel, reader, count, gucken

01:24:57.940 --> 01:25:18.620
wir mal ob das tut, ja ne 0, was, warum 0, das sollten noch eigentlich weiterhin 10 sein,

01:25:18.620 --> 01:25:37.140
die logik muss mir jetzt mal einer erklären, warum 0, ich warte hier ne sekunde, ich lese

01:25:37.140 --> 01:25:55.740
die garantiert nicht schneller als die gerendert werden, das verstehe ich net, ach 0 ist frame

01:25:55.740 --> 01:26:04.780
data, moment, die anzeige stimmt ja gar nicht, 0w, wartet mal, ahja die anzeige stimmt überhaupt

01:26:04.780 --> 01:26:34.460
nicht, ok alles klar, ok so, 10, der müsste jetzt aber weiter rendern, warum

01:26:34.460 --> 01:26:59.820
rendert der nicht weiter, der sollte jetzt eigentlich weiter rendern, wartet mal, jetzt

01:26:59.820 --> 01:27:04.540
bin ich verwirrt, der sollte eigentlich weiter rendern, der sollte jetzt einen durchgang machen

01:27:04.540 --> 01:27:13.460
und dann den nächsten frame holen, oder kann das sein, dass das gar nicht funktioniert,

01:27:13.460 --> 01:27:27.620
was mir der chat hier gesagt hat, dass das hier net geht, dass der chat mich gebadet hat,

01:27:27.620 --> 01:27:41.260
der chat mich gebadet hat, das geht nicht chat, das geht nicht was ihr geschrieben habt,

01:27:41.260 --> 01:27:44.980
ich weiß aber nicht warum, ich hab keine Ahnung warum das eine geht und das andere

01:27:44.980 --> 01:27:55.340
nicht, kein Schimmer, aber jetzt funktionierts, jetzt funktionierts, guckt, das ist genau

01:27:55.340 --> 01:28:00.780
in der Reihenfolge, also man sieht ja auch, dass es multithreaded ist, der macht 10 Stück

01:28:00.780 --> 01:28:11.780
instant, mehr darf er nicht, mehr darf er nicht und dann liest er und nach jedem lesen

01:28:11.780 --> 01:28:18.660
kommt ein neues, das ist, ok, das funktioniert richtig legit multithreaded, alles klar, wunderbar.

01:28:18.660 --> 01:28:26.540
Wie findest du das vim plugin für die chatprints, das hab ich noch nicht verwendet ehrlich gesagt,

01:28:26.540 --> 01:28:33.740
keine Ahnung, ich mag vim plugins in anderen editors nicht, ich mags auch in vias code

01:28:33.740 --> 01:28:39.100
nicht und sonst wie, ich mag aber auch grafische vims nicht, also ein gvim ist überhaupt nicht

01:28:39.100 --> 01:28:44.620
meins, auch wenn ich vim auf der kommando zeile mag, aber wenn mein vim nicht nach kommando

01:28:44.620 --> 01:28:56.700
zeile aussieht, sondern nach gui, weiß nicht, mag ich das nicht, ok jetzt müssen wir mal

01:28:56.700 --> 01:29:07.220
das gif malen, gut, also das gif decoden funktioniert, so draw video frame, jetzt muss, ach du scheiße

01:29:07.220 --> 01:29:16.180
der direct x shit hier, wenn ich das schon sehe krieg ich anfälle, guckt euch das mal

01:29:16.180 --> 01:29:25.900
an, das ist so massive pains champ, boah, ok wir machen da jetzt ne eigene klasse draus,

01:29:25.900 --> 01:29:32.100
wir machen da jetzt ne eigene klasse draus, ich mach das, ich verschieb das gleich, mach

01:29:32.100 --> 01:29:41.300
das mal hier innen drinnen, dass ich besser, public class, d, 2d, shit, oder stuff, komm

01:29:41.300 --> 01:29:51.860
wir sind nett, ich lager das irgendwo hin aus, so also was brauchen wir denn da, boah

01:29:51.860 --> 01:30:05.980
wie viel gedülns, ok vielleicht krieg ich das doch irgendwo hin, also den direct x kram

01:30:05.980 --> 01:30:10.900
wieder einkommentieren, den direct x kram wieder einkommentieren, so das brauchen wir

01:30:10.900 --> 01:30:17.820
auch, das brauchen wir auch, das ist so übertrieben unübersichtlich das zeug, das brauchen wir

01:30:17.820 --> 01:30:26.460
auch, übrigens die frage steht immer noch, warum geht das, ich weiß es nicht, ich weiß

01:30:26.460 --> 01:30:37.380
es bedeutlich, aber es geht, dann das wieder einkommentieren, ach du scheiße, das zeug

01:30:37.380 --> 01:31:02.060
ist so abartig, ok, swap, ah hier unten render ich ja erst, ok, ok, und da kommt ja noch

01:31:02.060 --> 01:31:08.220
mehr dabei, ok das ist nur das direct x setup was wir brauchen, das ist so geil, das rendert

01:31:08.220 --> 01:31:12.020
noch gar nichts, das ist nur was man braucht, dass direct x überhaupt der meinung ist,

01:31:12.020 --> 01:31:19.780
dass es funktioniert, ich guck mal ob es crasht, ok es crasht nicht, es funktioniert noch,

01:31:19.780 --> 01:31:28.660
ist alles gut, so und jetzt können wir versuchen hier was zu renderen drin, jetzt können wir

01:31:28.660 --> 01:31:36.420
versuchen was zu renderen, also wo render ich denn hier direct x mäßig was, ja begin

01:31:36.420 --> 01:31:45.940
draw, color, gut, ich mal jetzt einfach mal einen roten, einen schwarzen, einen schwarzen

01:31:45.940 --> 01:31:57.580
linden, einen gelbes fenster, oh gucken ob das funktioniert, begin draw, also damit stehe

01:31:57.580 --> 01:32:08.140
ich ja echt auf kriegsfuß, und jetzt irgendwie swap chain, swap, ne wie ging das, swap, present,

01:32:08.140 --> 01:32:15.100
so und die 0 das habe ich mir gemerkt, die 0 ist v-sync oder nicht v-sync, wenn ich

01:32:15.100 --> 01:32:19.340
es mit einer 1 mache, dann wartet er auf v-sync, wenn ich es mit einer 0 mache schreibt er

01:32:19.340 --> 01:32:33.020
so schnell wie geht, so, ach ich vergaß ein rotes fenster zu malen ist ja gar nicht so

01:32:33.020 --> 01:32:45.540
doch glaube ich red, gucken wir ob wir jetzt ein rotes fenster kriegen, nein warum nicht,

01:32:45.540 --> 01:32:55.420
wofür ruft er das überhaupt auf, achja ich mache es kaputt, ich rendere schon, ich rendere

01:32:55.420 --> 01:33:00.740
schon bevor ich überhaupt das device angelegt habe, das ist die falsche reinfolge, so rum

01:33:00.740 --> 01:33:24.140
jetzt gehts hoffe ich, nein, ok ich hatte gedacht es funktioniert jetzt, macht das was, ok von

01:33:24.140 --> 01:33:31.340
der idee ruft er das auf, direct x bros, habe ich irgendwo was, mache ich irgendwas falsch,

01:33:31.340 --> 01:33:45.460
was genau gemalt werden soll, naja ein rotes fenster, sonst nix, einfach ein rotes fenster,

01:33:45.460 --> 01:34:01.420
war ich das falsch, macht das bestimmt falsch, weil das so eklig zu verwenden ist, hier begin

01:34:01.420 --> 01:34:09.700
draw clear, boah ist das eklig, also gut also von der idee her stimmt das ja was ich da

01:34:09.700 --> 01:34:34.300
mache, ok malen wir jetzt ein rotes rechteck, malst du mit clear, ja von der idee her sollte

01:34:34.300 --> 01:34:39.740
clear ja alles komplett auf eine farbe setzen, also normalerweise macht man clear am anfang

01:34:39.740 --> 01:34:49.660
und dann malt man oben drüber, also wenn man nicht übermalen will, so, warum geht das

01:34:49.660 --> 01:34:55.220
jetzt hier nicht mehr, ach nee das ist rider was kein fehler anzeigt, sondern mir einfach

01:34:55.220 --> 01:35:01.420
sagen will die farbe ist rot, sollte clear nicht alles transparent machen, nur mit transparent,

01:35:01.420 --> 01:35:20.540
vermute ich mal, keine ahnung, so, mal weg, draw rectangle, so und zwar eine new rectangle

01:35:20.540 --> 01:35:35.460
00 oder keine ahnung von 10 10, moment, yes, rectangle f alles klar, dass wir da mal haben,

01:35:35.460 --> 01:35:41.420
unbedingt, raw rectangle ist mir zu billig, ich will rectangle f haben, so jetzt haben

01:35:41.420 --> 01:35:52.860
wir hier, wir starten in dem fenster mit 10 pixel links oben, 200 pixel right, 200 pixel

01:35:52.860 --> 01:36:02.580
hoch hohes rechteck, black brush, ok, so funktioniert das jetzt, wo ist das problem, warum geht

01:36:02.580 --> 01:36:13.780
das nicht, ich habe irgendwas vergessen von meinem anderen zeug hier, nur dass ich nicht

01:36:13.780 --> 01:36:23.380
mehr durchblicke was ich da gemacht habe, was habe ich denn vergessen, irgendwas habe

01:36:23.380 --> 01:36:41.100
ich hier übersehen, direct x zeug, draw image, ja, ah, ich weiß was ich vergessen

01:36:41.100 --> 01:36:53.820
habe, habe ich das händel vom fenster gesetzt, fuck habe ich, ach du scheiße, keine ahnung,

01:36:53.820 --> 01:37:08.540
kein schimmer, warum kriege ich hier kein rectangle, warum nicht, skip, genau, rage

01:37:08.540 --> 01:37:15.260
spit, so wir machen das jetzt mal hier ohne das thing, wir rendern das jetzt einfach mal

01:37:15.260 --> 01:37:31.100
direkt hinten dran, ah der black brush ist nicht da, na dann, begin draw end draw, das

01:37:31.100 --> 01:37:41.820
ist eigentlich richtig, dann present, das macht einfach nicht, das macht nichts, end

01:37:41.820 --> 01:37:51.340
draw, present, vielleicht fehlt dick eigentlich net, ok, ich hab legit keine ahnung woran

01:37:51.340 --> 01:37:56.660
das liegt, aber wir ignorieren das jetzt einfach mal und tun so als würde es funktionieren

01:37:56.660 --> 01:38:02.460
und malen jetzt einfach mal ein bild, vielleicht geht das ja, zufälligerweise, vielleicht

01:38:02.460 --> 01:38:06.540
haben wir ja klug, vielleicht geht das einfach mal ein bild malen, moment ich mach mal was

01:38:06.540 --> 01:38:14.780
anderes nochmal hier, transparent, das hatte ich ja vorher auch so, transparent, wird das

01:38:14.780 --> 01:38:21.340
noch aufgerufen, ja das geht nicht, wir ignorieren das jetzt einfach, wir ignorieren das, wir

01:38:21.340 --> 01:38:24.900
gehen einfach, sagen einfach das funktioniert, das funktioniert und jetzt malen wir das mit

01:38:24.900 --> 01:38:36.100
dem bild malen, also was zum teufel mach ich hier, create a bitmap, ok das pro durchlauf

01:38:36.100 --> 01:38:44.500
zu machen ist doch auch schonmal fail, das kann doch net im sinne das erfinder sein was

01:38:44.500 --> 01:38:53.260
ich hier bastel oder was ich hier gebastelt habe, gut wie dem auch sei ich kopier das

01:38:53.260 --> 01:38:59.060
jetzt einfach, das war hier, das ist alles was ich zum rendern brauch, das kopier ich

01:38:59.060 --> 01:39:05.340
da jetzt einfach rüber und dann probieren wir aus ob das funktioniert und wenn wir

01:39:05.340 --> 01:39:11.700
glück haben klappt es und wirklich wahrscheinlich klappt es nicht, aber das sehen wir dann,

01:39:11.700 --> 01:39:18.020
ich hab vergessen end draw aufzurufen, end draw, wo gibts end draw, begin draw, end draw

01:39:18.020 --> 01:39:34.940
direkt über present, comp device commit fehlt, hab ich das, hab ich das übersehen, stimmt,

01:39:34.940 --> 01:39:48.700
wo ist denn das hin, das hatte ich vorher noch, hab ich das gelöscht, moment, pass auf,

01:39:48.700 --> 01:40:11.820
jit, jit magic, comp, commit, commit, warum hab ich nix gelöscht aber das, wie kann man

01:40:11.820 --> 01:40:16.860
so bescheuert sein, gut dass wir zumindest irgendjemand im chat haben der weiß was ich

01:40:16.860 --> 01:40:27.060
hier mache, weil ich weiß es nicht, warum hab ich das gelöscht, ist doch total hängen

01:40:27.060 --> 01:40:39.180
geblieben, richtig, 3 hat time leute, leute, point, wo, emote, richtig, oi, chat hat immer

01:40:39.180 --> 01:40:46.780
recht, nee, der chat hat heute schon gezeigt dass er nicht immer recht hatte, gut das heißt

01:40:46.780 --> 01:40:51.220
wir denken jetzt, wir vermuten jetzt einfach mal das funktioniert, probieren wir das doch

01:40:51.220 --> 01:41:00.220
mal aus, probieren wir das doch mal aus ob es funktioniert, wo ist denn hier, begin, also

01:41:00.220 --> 01:41:10.660
begin draw, transparent, end draw, so und jetzt sagen wir hier einfach mal red, so und

01:41:10.660 --> 01:41:17.900
jetzt mal gucken, ah, bam, also richtig massive big brain, wer auch immer das jetzt gerade

01:41:17.900 --> 01:41:23.020
geschrieben hat, dass ich das vergessen hab, vielleicht wollte ich euch ja auch bloß testen

01:41:23.020 --> 01:41:33.300
chat, ok es funktioniert, perfekt, rotes Fenster, dann können wir uns ja in der Sache

01:41:33.300 --> 01:41:40.620
wiederholen, transparent, ich kommentiere das jetzt einfach mal ein, weil ich keine Ahnung

01:41:40.620 --> 01:41:44.380
mehr genau hab was ich da gemacht hab das letzte mal, das ist auf jeden fall sehr ineffizient

01:41:44.380 --> 01:41:51.020
weil ich alles pro durchgang neu anlege und das ist dumm, natürlich unsafe, was sonst,

01:41:51.020 --> 01:42:05.580
machen wir hier irgendwas anderes, höhe, reite, was hat er jetzt schon wieder, uint

01:42:05.580 --> 01:42:14.740
ist not int, komm int alles gut, dann halt kein uint, dann halt nen int, so warum eigentlich

01:42:14.740 --> 01:42:20.220
nen int, warum braucht man wirklich nen int bei einer höhe, ich mein was ist denn minus

01:42:20.220 --> 01:42:27.060
200 für ne höhe, ich verstehe wenn man sagt startpunkt ist minus 200, nach gott das macht

01:42:27.060 --> 01:42:33.740
doch, doch das macht sinn, minus 200 ist dann nach links anstatt nach rechts oder, also

01:42:33.740 --> 01:42:39.460
mal angenommen, mal angenommen ich sage ich starte von null null, also oben link, pixel

01:42:39.460 --> 01:42:44.400
oben links oder sagen wir ich starte in der mitte, sagen wir ich starte in der mitte,

01:42:44.400 --> 01:42:52.060
also null null und keine ahnung 800 oder so und ich male dann in rechteck, so wenn ich

01:42:52.060 --> 01:43:04.900
200 mal 200 male, dann male ich quasi sowas hier, also ich mal paint, excellent, also wenn

01:43:04.900 --> 01:43:12.420
ich 200 mal 200 male, dann male ich sowas, null ist oben links, deswegen sage ich ja

01:43:12.420 --> 01:43:24.180
auch null und 800 oder so, so und wenn ich jetzt malen würde, 200 minus 200, dann würde

01:43:24.180 --> 01:43:30.100
ich sowas hier malen oder, ja so paint kann das nicht, dann würde ich quasi sowas hier

01:43:30.100 --> 01:43:37.580
malen, dann würde es ja ins negative gehen, gibt das sinn, kann das sein, weil ansonsten

01:43:37.580 --> 01:43:49.380
wüsste ich nicht warum man ins verwendet für höhe breite, vielleicht auch gespielt

01:43:49.380 --> 01:43:56.780
und vielleicht ist es auch nix von beiden und die waren einfach zu faul, so data, moment

01:43:56.780 --> 01:44:08.980
das brauche ich doch hier gar nicht den kram, also create effect, ne das brauche ich nicht,

01:44:08.980 --> 01:44:33.460
brauchen wir hier, new size, frame, breite, frame höhe, so frame data, jetzt funktioniert

01:44:33.460 --> 01:44:46.300
natürlich, ach moment das ist ja schon in pointer, prominent, frame line size, haben

01:44:46.300 --> 01:44:59.740
wir so schon, ok, breite, ok das ist big brain, quick muffs, da gehe ich einfach von aus,

01:44:59.740 --> 01:45:07.620
stimmt nach wie vor, hoffe ich mal, da beste variablenamen überhaupt, so jetzt habe ich

01:45:07.620 --> 01:45:13.980
hier so dinge wo ich mir ehrlich gesagt nicht mehr sicher bin wofür die da waren, reformat,

01:45:13.980 --> 01:45:20.100
brauchen wir die jetzt oder brauchen wir die jetzt net, ne die habe ich nur reinkopiert

01:45:20.100 --> 01:45:29.660
mal aus test, test vom, keine ahnung wir starten sie jetzt einfach mal, ok es funktioniert

01:45:29.660 --> 01:45:51.060
nicht, das wäre jetzt ja auch zu schön gewesen, hätte einfach funktioniert, modge ist da,

01:45:51.060 --> 01:45:55.380
rendert da überhaupt hier noch irgendwas, mal gucken, alter ich habe keine ahnung was

01:45:55.380 --> 01:46:04.900
ich hier treibe, ne rip der rennt da gar nichts mehr, null das ist abgeschissen, vielleicht

01:46:04.900 --> 01:46:11.380
soll ich das awaiten dass ich ordentliche exception kriege wenn er abkackt, war das

01:46:11.380 --> 01:46:18.820
nicht eben noch lines, oh das kann sein, ja moment, ne ne ne ne das ist schon richtig

01:46:18.820 --> 01:46:32.620
so, warte mal, das ergibt doch, das stimmt doch überhaupt nicht was ich da mache, das

01:46:32.620 --> 01:46:36.860
ist doch alles leer, guck mal, ach bin ich aber schnell, guck mal, das wird nirgends

01:46:36.860 --> 01:46:41.820
wo gesetzt, deswegen war das vorher auch immer null pointer, ich hab da nie was hingeschrieben,

01:46:41.820 --> 01:46:51.340
das ist alles leer, das ist alles null, breite null, höhe null, lines heiß null, data null,

01:46:51.340 --> 01:46:58.580
das kann ja nicht funktionieren, ja trycatch ist so ein ding, wenn du unmanaged code hast

01:46:58.580 --> 01:47:05.860
dann funktioniert trycatch nicht immer und das ist komplett unmanaged zeugs unter der

01:47:05.860 --> 01:47:12.380
haube, da steht überhaupt nichts drin, ok da muss ich mir jetzt noch was überlegen,

01:47:12.380 --> 01:47:21.220
wie kriege ich die breite raus, die breite ist ja in wirklichkeit raw, also der ffmpeg

01:47:21.220 --> 01:47:42.820
frame, breite, genau, so höhe ist ffmpeg frame höhe, linesize ist ffmpeg frame linesize

01:47:42.820 --> 01:47:52.380
null, genau, das hatten wir nämlich vorher, das war das mit der null, was haben wir jetzt

01:47:52.380 --> 01:47:59.780
noch, data, so und data ist dann das was wir vorher auch hatten, das ist raw und einfach

01:47:59.780 --> 01:48:10.020
so, nee data war auch null, data null, das ganze muss man eben noch sagen, dass das ein

01:48:10.020 --> 01:48:23.660
pointer ist, irgendwie, so ok, achtung, bam, der refrescht nicht, ach nee ich habe noch

01:48:23.660 --> 01:48:37.100
ein sleep 1 drin, ich habe noch ein sleep 1 drin, slow motion parrot, aber es funktioniert

01:48:37.100 --> 01:48:46.740
schon mal, oh das sleep raus, ok das heißt ich kann den ganzen shit hier rausschmeißen

01:48:46.740 --> 01:48:53.940
von den ganzen eklichen kram vom letzten mal weg, so perfekt, den kram auch raus, das sieht

01:48:53.940 --> 01:49:00.620
schon, das sieht jetzt schon deutlich aufgeräumter aus den ganzen kram als das letzte mal, so

01:49:00.620 --> 01:49:18.180
jetzt machen wir hier mal den sleep raus und jetzt, bam, jawoll, da flutscht es, ich hab's

01:49:18.180 --> 01:49:26.380
geadded das emote, da flutscht es, aber was sagt die auslastung, oh, oh, oh, oh, wir

01:49:26.380 --> 01:49:36.460
haben gerade 10 gigabyte ram ausgelastet, haben wir leaked champ irgendwo, mal gucken

01:49:36.460 --> 01:49:42.820
wie die cpu auslastung ist, ah das ist nice, guck mal jetzt haben wir viel höhere auslastung

01:49:42.820 --> 01:49:54.100
als vorher, das heißt das ist jetzt ein bisschen multithreaded zumindest, ich bin begeistert,

01:49:54.100 --> 01:49:59.300
multithreaded champ, also es ist natürlich sinnlos ein gif so schnell zu rendern, ich

01:49:59.300 --> 01:50:04.220
muss jetzt noch gucken wie viel fps hat das gif und es dann realistisch, also in dem fall

01:50:04.220 --> 01:50:12.180
muss ich 40 millisekunden warten, dass das gif in korrekter geschwindigkeit läuft, guck

01:50:12.180 --> 01:50:19.740
also jetzt sieht das auch schon besser aus, sieht das normal aus, aber wir haben irgendwo

01:50:19.740 --> 01:50:24.340
glaube ich einen memory leak, das muss ich jetzt gerade noch mal ausprobieren, wir machen

01:50:24.340 --> 01:50:27.980
jetzt was was wir sonst nicht macht aber ich will einfach wissen ob es nicht daran liegt

01:50:27.980 --> 01:50:39.300
dass der garbage collector einfach nicht collectet, doch das liegt daran dass der garbage collector

01:50:39.300 --> 01:50:54.580
nicht collectet, der garbage collector ist zu pepo fett, der collectet zu langsam, warum

01:50:54.580 --> 01:51:08.780
macht der denn sowas, kann man dem garbage collector, weiß das jemand, kann man dem sagen

01:51:08.780 --> 01:51:17.180
ey collecte mal ab einem gigabyte ram, weil ich mein jetzt mal ernsthaft, man sagt ja

01:51:17.180 --> 01:51:29.060
immer garbage collector nicht manuell collecten lassen und sowas, aber ich mein, aber ich

01:51:29.060 --> 01:51:39.340
mein, aber ich mein es kann doch nicht sein, dass der garbage collector erst bei was weiß

01:51:39.340 --> 01:51:50.580
ich wie viel gigabyte ram sich mal dazu überreden lässt zu collecten oder, ich mein wir brauchen

01:51:50.580 --> 01:52:01.180
8g, 9g ram, 10g ram, mal gucken ab wann der collectet, 11g ram, 12g ram, ah das ist aber

01:52:01.180 --> 01:52:11.940
nett, das ist aber nett, dass er ab 12g ram erst mal erst mal pause macht, 12, also ich

01:52:11.940 --> 01:52:17.540
finde, oh oh oh wiss ich dachte das wars jetzt schon, also ich finde, ich finde das kann

01:52:17.540 --> 01:52:22.820
man sich schon mal gönnen, das kann man sich für den gif, für den gif player schon mal

01:52:22.820 --> 01:52:39.460
gönnen 13,3gigabyte ram, also keine schande, gut investierte 13,3gigabyte ram ja finde

01:52:39.460 --> 01:52:53.540
ich auch, also es ist ja fast wie ein chrome mit 100, 100 tabs auf, also der garbage collector

01:52:53.540 --> 01:52:58.940
hat auch gar keinen bock zu collect kann das sein, der denkt sich so, wo ist das problem

01:52:58.940 --> 01:53:15.700
reicht doch, ok wie kann ich dem garbage collector sagen, guck mal das ist, das ist max generation,

01:53:15.700 --> 01:53:35.900
ne der hat erst einmal versucht zu collecten, ey guck mal das juckt dir nett, das juckt

01:53:35.900 --> 01:53:53.020
dir nett, das kann doch nicht den ernst oder, manged language by the way, vielleicht hätte

01:53:53.020 --> 01:53:58.900
ich, Leute Leute soll ich euch mal was sagen, vielleicht hätte ich es doch in C++ machen

01:53:58.900 --> 01:54:06.860
sollen, gut dann wären wir jetzt nicht soweit gewesen, bloß nicht alter C++ ich hätte anfälle

01:54:06.860 --> 01:54:11.660
bekommen, ich wäre durchgedreht wenn ich das hätte in C++ machen müssen sage ich

01:54:11.660 --> 01:54:19.900
euch, manged language unsafe keyboard, ja moment das eine hat ja mit dem andere nichts

01:54:19.900 --> 01:54:26.220
zu tun, ja das hier sagt ja einfach nur ich darf rumsauen wie ich will aber manged memory

01:54:26.220 --> 01:54:31.260
übrigens brauche ich das an selfie an der stelle gar nicht aber manged memory soll er

01:54:31.260 --> 01:54:43.820
trotzdem handeln, mein eigenen unmanaged memory das handle ich ja sogar, ok was ich machen

01:54:43.820 --> 01:54:49.380
könnte ist tatsächlich mich selbst um das aufräumen kümmern und nicht der garbage

01:54:49.380 --> 01:54:59.300
collector, also ich könnte anstatt so einen garbage collector destructor oder finalizer

01:54:59.300 --> 01:55:09.620
zu verwenden könnte ich das wirklich selbst machen, also das ist ja dann relativ einfach

01:55:09.620 --> 01:55:20.340
dann würde ich dann würde ich sowas sagen wie, so dann packe ich das einfach da rein

01:55:20.340 --> 01:55:35.340
das kommt weg und ich sag hier drinnen, moment hier unten sag ich dann frame dispose so und

01:55:35.340 --> 01:55:54.300
jetzt sollten wir auch kein memory leak mehr haben aber auch kein memory leak mehr easy

01:55:54.300 --> 01:56:02.380
ich dachte mir halt wir lassen das den garbage collector übernehmen zu schnell ne das ist

01:56:02.380 --> 01:56:07.060
genau richtig das sind jetzt ungefähr so 1500 fps ich finde das ist genau richtig für das

01:56:07.060 --> 01:56:15.500
gif wird langsam mehr ja ne ne ne das passt schon das passt schon manche sachen brauchen

01:56:15.500 --> 01:56:21.700
erst ein bisschen aber das das das das ist ja ne ne guck das passt schon ach jetzt hast

01:56:21.700 --> 01:56:30.060
du collected das ist ja nett das ist ja nett das war von 140 auf 116 mb 100 garbage collected

01:56:30.060 --> 01:56:44.740
ist gut aber von 13 gigabyte mal was collecten das muss man nicht

01:56:44.740 --> 01:56:48.220
hier ich hab den moment ich hatte es doch eben auf ich glaube ich weiß woran das liegt

01:56:48.220 --> 01:56:56.340
warum das nicht collected wird weil moment ich hab das ja hier über einen destructor

01:56:56.340 --> 01:57:03.860
gemacht so und intern ist es ja so jede klasse mit die mit jede klasse mit finalizer wird

01:57:03.860 --> 01:57:15.620
vom garbage collector erstmal nicht im ersten durchlauf collected so das finalizer klassen

01:57:15.620 --> 01:57:22.660
vom garbage collector collected werden müssen irgendwelche ja nur bill gates weiß es keine

01:57:22.660 --> 01:57:30.060
ahnung bedingungen eintreten vielleicht dass der ram zu voll wird oder so keine ahnung

01:57:30.060 --> 01:57:33.980
also finalizer klassen werden ein bisschen anders bannen aber das geht also normalerweise

01:57:33.980 --> 01:57:37.900
also dass das prinzipiell funktioniert hat man ja gesehen wenn ich gc collect von hand

01:57:37.900 --> 01:58:00.060
mache dann geht es ja und das ist bei 13,3 gigabyte nicht mehr geworden ist das spricht

01:58:00.060 --> 01:58:04.940
auch dafür dass der gar nicht doof ist und das intern schon weiter verwendet aber halt

01:58:04.940 --> 01:58:10.440
diesen 13 gigabyte block behält was halt mega hängen geblieben ist weil ich will kein 13

01:58:10.440 --> 01:58:21.620
gigabyte großen gift player haben also 116 ich finde 116 mb für den fenster mit gift

01:58:21.620 --> 01:58:32.820
player und bis in direkt x geschiss ist ist schon in ordnung genau die gelben punkte zeigen

01:58:32.820 --> 01:58:38.060
an wo er collectet es stimmt aber man weiß ja nicht ob er nur eine normale collection

01:58:38.060 --> 01:58:43.180
macht von allen first generation wie heißt der kram first generation von allen first

01:58:43.180 --> 01:58:48.340
generation objekten oder ob er eine komplette collection macht wo auch finalizer drin sind

01:58:48.340 --> 01:58:55.460
also finalizer ist quasi also das habe ich mal gelesen wenn du ein objekt hast mit finalizer

01:58:55.460 --> 01:59:00.100
dann ist das quasi wie ein second generation objekt im garbage collector er collecte das

01:59:00.100 --> 01:59:06.180
nicht mit den normalen sachen sondern erst zu einem anderen zeitpunkt und was auch immer

01:59:06.180 --> 01:59:10.780
keine ahnung microsoft logik ist mir auch wurscht so ist so ist eigentlich fast noch

01:59:10.780 --> 01:59:16.620
besser ich ich ich ich dispose das einfach von hand am ende und dann ist ruhe das ist

01:59:16.620 --> 01:59:22.100
auch gut ich habe mir halt gedacht hey managed language wir können das den garbage collector

01:59:22.100 --> 01:59:27.340
handeln lassen aber bevor ich den 13 gigabyte gift player habe dann collecte ich das lieber

01:59:27.340 --> 01:59:35.340
von hand was ist denn chain law ich sehe da in deiner message nix wie viele emotes denn

01:59:35.340 --> 01:59:41.300
noch ich glaube von allen emoten vorschlägen haben wir das letzte mal habe ich das letzte

01:59:41.300 --> 01:59:47.860
ich glaube die letzten zwanzig ffz emotes sind von dir ach nee du meinst neuesten emote

01:59:47.860 --> 02:00:04.220
vorschlag für mein für mein ein emotes ach so soll denn das sein

02:00:04.220 --> 02:00:09.100
leute das müsst ihr mir erklären erklärt mir das mal chat erklärt mir das wenn ihr

02:00:09.100 --> 02:00:33.420
mir das erklärt so dass ich es auch lustig finde dann mache ich das rein

02:00:33.420 --> 02:01:01.460
ok was ist das origin ok das zusammengesetzt aus cope und opium

02:01:01.460 --> 02:01:14.960
was ist denn cope was ok wenn man sich mit schwierigen sachen

02:01:14.960 --> 02:01:31.300
auseinandersetzt ok das heißt ok wenn ich das jetzt richtig verstehe wenn was richtig

02:01:31.300 --> 02:01:36.620
in die hose gegangen ist setzt man sich quasi cope um auf dass es einem wieder besser geht

02:01:36.620 --> 02:01:46.340
also das fiktionale droge setzt man sich dann auf dass er wieder betten hinein ja was

02:01:46.340 --> 02:01:57.460
denn jetzt jepp oder nein ich sehe schon ich sehe schon dass da bin ich zu alt für jetzt

02:01:57.460 --> 02:02:06.420
wo was auch immer stark geklickt habe wollte ich nicht wenn was kacke ist aber du sagst

02:02:06.420 --> 02:02:25.140
schon ok das ist quasi bis es fein dass es dieses fein bloß bloß anders oder ok dann

02:02:25.140 --> 02:02:34.020
dann dann verstehe ich aber ich wusste also wir können dieses emote nehmen aber das müssen

02:02:34.020 --> 02:02:40.680
wir noch ein bisschen anpassen das sieht mir noch ein bisschen zu paint paintig aus kannst

02:02:40.680 --> 02:02:44.620
du das noch irgendwie schöner machen dann nehme ich mache ich direkt rein dann nächsten

02:02:44.620 --> 02:02:53.060
stream aber das muss eigentlich das muss noch ein bisschen professioneller aussehen ich

02:02:53.060 --> 02:03:06.020
kann dir nicht sagen was aber es sieht irgendwie ziemlich weiß ich zusammen gewusstet aus

02:03:06.020 --> 02:03:10.140
vielleicht das blaue die blauen kabel so dass man sieht wenn das so klein das erkennt guck

02:03:10.140 --> 02:03:16.860
mal das erkennst du doch nett wenn das emote klein ist das emote ist ungefähr auf der

02:03:16.860 --> 02:03:40.540
größe im chat das erkennt man nicht gut gut dass wir das jetzt auch mal geklärt haben

02:03:40.540 --> 02:03:47.940
jetzt weiß ich bescheid macht mein aktuelles video so auf youtube ich habe sehr ich lasse

02:03:47.940 --> 02:03:55.420
meine eigenen videos immer einmal durchlaufen weil gut für den algorithmus was sagen denn

02:03:55.420 --> 02:04:02.780
die leute ausbildung beginnt exzellent so leute heute sind wir doch so ganz schön relativ

02:04:02.780 --> 02:04:06.580
weit gekommen wir haben diesen ganzen shit also ich mein blub und temp müssen wir noch

02:04:06.580 --> 02:04:13.100
aufräumen wir lagern das nächste mal das direkt x zeug aus aber das war heute schon

02:04:13.100 --> 02:04:17.820
mal echt gut wir machen wir machen übrigens das lieb mal wieder rein dass das nicht immer

02:04:17.820 --> 02:04:23.980
so hektisch aussieht sondern normal also das war doch heute schon mal richtig richtig gut

02:04:23.980 --> 02:04:29.660
wir machen das ganze jetzt multithreaded das doch schon mal nice und wir haben das decoding

02:04:29.660 --> 02:04:35.260
von dem gif komplett hier raus das heißt das nächste mal lagern wir noch hier in diese

02:04:35.260 --> 02:04:42.980
direkt 2d stuff klasse das ganze direkt x zeug aus und dann sieht das doch fast fast lesbar

02:04:42.980 --> 02:04:53.260
aus das video von heute ist nicht super beliebt das liegt aber auch daran weil es einfach

02:04:53.260 --> 02:04:59.140
nicht so viele leute anspricht das betrifft ja erstmal nur leute die ausbildung machen

02:04:59.140 --> 02:05:03.300
gemacht anfangen also anfangen gerade machen oder vielleicht interessiert sind weil sie

02:05:03.300 --> 02:05:22.260
die mal gemacht haben ja alternativ macht man es wie hart verrat erstmal

02:05:22.260 --> 02:05:37.100
harzen bei stimmt ja bei ihm überhaupt nicht ist das eine wiederholung ja das ist eine

02:05:37.100 --> 02:06:02.380
wiederholung ich bin eigentlich schon im bettke ich bin nicht mehr an bettke

02:06:02.380 --> 02:06:11.260
es ist eigentlich was eigentlich im friseur ist der ist ja und scheine ich nope der frazier

02:06:11.260 --> 02:06:26.580
mit seinen weep games i weep frisier äh moment was was chat sekunde was mich interessiert

02:06:26.580 --> 02:06:31.420
kannst du mal checken ob der mehr objekte erstellt als der gcf wie soll ich das machen

02:06:31.420 --> 02:06:41.220
du kannst es doch bei dir nachbauen machen objekte objekte mit finalizer was memory belegt

02:06:41.220 --> 02:06:46.740
und gucken ob er es freiräumt oder nicht ja ich weiß jetzt nicht wie ich das checken

02:06:46.740 --> 02:06:57.820
soll wo ist das limit hast du schon eine world durch ich hab nicht mal weiter gespielt es

02:06:57.820 --> 02:07:05.940
ist halt äußerst repetitive dem game fehlt so gut wie jeglicher inhalt zumal sie versuchen

02:07:05.940 --> 02:07:12.460
ja ein bisschen auf die pvp schiene zu gehen aber das ist finde ich nicht konsequent nachdem

02:07:12.460 --> 02:07:16.260
auch alle fraktionen in der gleichen welt spielen und du zusätzlich noch sagen kannst

02:07:16.260 --> 02:07:22.260
ob die flaggen willst für pvp oder nicht ich weiß nicht es ist irgendwie ich meine

02:07:22.260 --> 02:07:28.860
in bdo ist es ansatzweise ein ähnliches system aber in bdo kannst du immer noch force jemand

02:07:28.860 --> 02:07:37.300
killen wenn er dir zu sehr auf den sack geht und du hast deutlich mehr zu tun freust du

02:07:37.300 --> 02:07:42.980
dich noch einfach game auf ja ja es dauert auch gar nicht lang ich freue mich extrem

02:07:42.980 --> 02:07:59.440
auf das da das kommt im 2 september ist das glaube ich release date ja da freue ich mich

02:07:59.440 --> 02:08:07.180
richtig drauf kingmaker war schon nice auch wenn die steam noobs das wieder nicht gecheckt

02:08:07.180 --> 02:08:17.340
haben die steam noobs bei kingmaker die haben geschrieben oh nein das spiel ist viel zu

02:08:17.340 --> 02:08:23.020
schwer ich sterbe in der ersten höhle und der npc der vor der höhle steht sagt ihr

02:08:23.020 --> 02:08:31.020
wortwörtlich nehmen explosive also nehmen bomben mit gegen die gegen die mücken da

02:08:31.020 --> 02:08:37.380
in der höhle und die leute machen das nicht versuchen die mücken schwer zu killen und

02:08:37.380 --> 02:08:43.460
sterben und schreiben dann auf steam und nein das spiel ist zu schwer just suck developer

02:08:43.460 --> 02:08:53.700
ja da freue ich mich richtig drauf das kommt ja auch wie gesagt in einem monat raus aber

02:08:53.700 --> 02:09:09.500
nächsten monat werde ich erstmal 37 also noch mehr boomer als jetzt schon wisst ihr

02:09:09.500 --> 02:09:14.940
eigentlich ich sagte zwar ist aber wisst ihr eigentlich dass boomer für meine generation

02:09:14.940 --> 02:09:21.100
überhaupt nicht die korrekte bezeichnung ist boomer sind leute die von 1948 bis 1965

02:09:21.100 --> 02:09:31.120
geboren sind ich bin eigentlich kein boomer und ich bin

02:09:31.120 --> 02:09:39.500
auch kein zoomer ich bin die generation dazwischen die richtigen zoomer sind übrigens eigentlich

02:09:39.500 --> 02:09:48.700
auch gar nicht generation z sondern eher generation alpha das sind die die ab 2012 geboren sind

02:09:48.700 --> 02:09:55.820
bis 2025 das sind die richtigen das sind ich bin boomer genau ich war millennial ich bin

02:09:55.820 --> 02:10:00.860
boomer wo wir wirklich welche dachten dass die dass die welt uns das war echt hängen

02:10:00.860 --> 02:10:11.900
geblieben boomer ist eine lebenseinstellung ja gut das stimmt in der heutigen zeit wundert

02:10:11.900 --> 02:10:18.820
mich ja auch nix du kannst ja auch laut laut twitter laut twitter kannst du ja auch als

02:10:18.820 --> 02:10:25.500
20 jähriger chinese weißer alter mann sein twitter wenn ihr mir das nicht glaubt twitter

02:10:25.500 --> 02:10:28.820
erklärt euch schon wie das funktioniert macht euch keine gedanken das ist laut twitter

02:10:28.820 --> 02:10:36.780
überhaupt kein problem ohne probleme möglich easy also kann man natürlich auch boomer sein

02:10:36.780 --> 02:10:48.620
wenn man nicht in der boomer generation geboren ist das ist ganz klar ja aber das war doch

02:10:48.620 --> 02:10:57.940
heute relativ erfolgreich das hat gut gut funktioniert wollen wir outro outro musik

02:10:57.940 --> 02:11:07.980
machen bei 5 minuten habe ich noch 5 minuten habe ich noch produktiv ja war gar nicht schlecht

02:11:07.980 --> 02:11:19.020
gleich spätge gleich gleich spätge ich fand es auch cool dass wir das hier mal mit channels

02:11:19.020 --> 02:11:24.060
ausprobiert haben weil wie gesagt channels ist ja neu seit dotnet keine ahnung 3.1 oder

02:11:24.060 --> 02:11:33.620
so dotnet core 3.1 also der vorgänger von dotnet 5 nicht zu verwechseln mit dotnet framework

02:11:33.620 --> 02:12:03.580
4.8 also microsoft benahmung sind ja schon immer richtig gut gewesen trifile gibt es

02:12:03.580 --> 02:12:08.820
doch irgendwelche interessanten dinger die heute passiert sind aber blizzard ist ja richtig

02:12:08.820 --> 02:12:13.780
die scheide die kacke am dampfen habt ihr das mitgekriegt die wollen jetzt streiken

02:12:13.780 --> 02:12:19.420
bei blizzard jetzt also blizzard ist vorbei da ist jetzt da ist jetzt wirklich richtig

02:12:19.420 --> 02:12:24.980
richtig die die kacke am dampfen aber die sind ja auch doof die sind die sind ja auch

02:12:24.980 --> 02:12:30.740
die sind ja auch total hängen geblieben also nach dieser geschichte und nach der klar

02:12:30.740 --> 02:12:34.380
also erst mal die klage und dann nach der nach dieser ganzen geschichte dann auch diese

02:12:34.380 --> 02:12:39.980
komische mail zu veröffentlichen dass es doch eigentlich gar nicht so stimmt beziehungsweise

02:12:39.980 --> 02:12:47.420
dass dass man so viel dafür dafür tut ist typisches management gelaber aber das ist

02:12:47.420 --> 02:12:53.900
eh so ein so ein ich sag so ein so ein so ein so ein rhetorik trick den manager manager

02:12:53.900 --> 02:12:59.620
leute und oder auch pressesprecher gerne versuchen ja also irgendjemand kommt und sagt leute

02:12:59.620 --> 02:13:04.580
eure firma hat scheiße gebaut weil sie a und b gemacht hat dann kommt dann da kommt eine

02:13:04.580 --> 02:13:09.500
offizielle presseerklärung und da steht dann drinne ich bin stolz darauf in einer firma

02:13:09.500 --> 02:13:16.500
zu sein bei der a und b niemals ein thema ist gewesen ist oder niemals niemals passieren

02:13:16.500 --> 02:13:20.500
kann du machst einfach eine presseerklärung wo genau das gegenteilige drin steht von dem

02:13:20.500 --> 02:13:28.100
was man dir vorwirft obwohl obwohl sogar zwar auf der hand liegt dass es so ist aber blizzard

02:13:28.100 --> 02:13:35.020
ist wirklich ja die haben keine gewerkschaft soweit ich weiß in den usa bei blizzard aber

02:13:35.020 --> 02:13:47.700
die wollen morgen oder so blizzard streik die wollen morgen genau die wollen morgen

02:13:47.700 --> 02:14:03.140
irgendwie streiken

02:14:03.140 --> 02:14:21.940
hier mittwoch das heißt was jetzt passieren wird ist folgendes das management von blizzard

02:14:21.940 --> 02:14:28.900
wird jetzt versuchen die sachen klein zu reden und irgendwelche aus dem ermel gezauberten

02:14:28.900 --> 02:14:34.340
beruhigungs sachen zu erzählen sie haben ja in dem in dem letzten statement hat blizzard

02:14:34.340 --> 02:14:41.580
ja auch erzählt sie hätten jetzt was haben sie geschrieben anti anti mobbing und diskriminierungskurse

02:14:41.580 --> 02:14:45.260
und sowas da habe ich mich als letztes mal schon gefragt wie man sich sowas vorstellen

02:14:45.260 --> 02:14:50.420
soll ja als ist es den leuten diese scheiße verhalten nicht klar als geht irgendjemand

02:14:50.420 --> 02:14:54.600
von diesen leuten in den kurs und man sagt ihm hier übrigens dass du hast dich da nicht

02:14:54.600 --> 02:15:03.140
gut verhalten da sagte ach wirklich das wusste ich ja gar nicht leute die andere leute abfacken

02:15:03.140 --> 02:15:06.660
die machen das absichtlich weil sie spaß dran haben und die wissen das die machen das

02:15:06.660 --> 02:15:13.340
ja absichtlich weil sie spaß dran haben die gehen auch nicht in den kurs und und sagen

02:15:13.340 --> 02:15:19.540
danach hoja das habe ich noch nie so gesehen ja jetzt ist jetzt werde ich ein anderer menschen

02:15:19.540 --> 02:15:33.980
nach dem kurs was ein schwachsinn

02:15:33.980 --> 02:15:44.140
ja wahrscheinlich schon aber bei den meisten ist es so die meisten die auf der arbeit leute

02:15:44.140 --> 02:15:51.860
abfacken die wissen sehr wohl dass das dass sie das machen und die haben spaß dran du

02:15:51.860 --> 02:15:55.020
hast bestimmt den ein oder anderen der sich da noch nie gedanken darüber gemacht hat

02:15:55.020 --> 02:16:10.820
und es nicht checkt aber die meisten wissen das bei warcraft 1 war noch alles ok es war

02:16:10.820 --> 02:16:25.740
bei blizzard lange alles ok erst seit die ganzen stonks leute da am start sind also ich

02:16:25.740 --> 02:16:31.140
würde sagen das letzte wenn man mal auf watch außen vor lässt was ja so ein abfallprodukt

02:16:31.140 --> 02:16:37.300
war von einem mmo was sie machen wollten das letzte gute game was blizzard gemacht hat

02:16:37.300 --> 02:16:47.620
ist wings of liberty overwatch auch aber auf auf watch war ja so ein so ein ok vielleicht

02:16:47.620 --> 02:16:51.620
hartstone noch hartstone lasse ich mir auch noch gefallen hartstone war ein interner versuch

02:16:51.620 --> 02:16:56.780
von einem kleinen team ob man nicht irgendwie mal was innovatives wieder machen kann aber

02:16:56.780 --> 02:17:08.860
ansonsten wir haben hartstone raus 2014 ja dann sagen wir hartstone dann danach konntest

02:17:08.860 --> 02:17:17.180
vergessen ist eigentlich ganz gutes game gewesen aber das war ja ein unfall also in dem produkt

02:17:17.180 --> 02:17:21.140
dass das rausgekommen ist wirst du wenn es rauskommt overwatch 2 ich denke ich werde

02:17:21.140 --> 02:17:25.900
es mir mal angucken aber also nach aktuellem stand wird overwatch 2 ja in nächster zeit

02:17:25.900 --> 02:17:31.740
nicht erscheinen und das was ich bisher gesehen habe rechtfertigt für mich nach wie vor kann

02:17:31.740 --> 02:17:39.620
overwatch 2 jeff ist weg hat schon seinen grund der hatte keinen bock mehr auf den kack

02:17:39.620 --> 02:17:47.220
was auch immer der intern war der alte blizzard mitgründer ist weg links ist weg ich habe

02:17:47.220 --> 02:17:53.860
schon vergessen wie er heißt dass das multitalent von blizzard der voice geaktet hat grafiken

02:17:53.860 --> 02:17:59.580
gemacht hat die stories geschrieben hat wie ist er denn der bekannteste blizzard typ ich

02:17:59.580 --> 02:18:06.980
komme nicht auf den namen chris metzen jetzt habe ich es wieder genau der ist auch weg

02:18:06.980 --> 02:18:32.340
ist ja nichts mehr da der ist noch da ja also das glaubt nicht dass das was das was wird ganz

02:18:32.340 --> 02:18:44.740
ehrlich das ist nicht schlecht aber ich habe so viele emotes die wir kaum benutzen ich

02:18:44.740 --> 02:18:51.740
muss die immer aus hallo wo ist die emote anzeige warum habe ich hier keine keine ffz

02:18:51.740 --> 02:19:08.940
emote anzeige was ist das problem bei der twitch ist doch alles an weg hat hat kein bock

02:19:08.940 --> 02:19:14.220
mehr aber andere rechte habe ich noch vielleicht muss man eingeloggt sein dazu keine ahnung

02:19:14.220 --> 02:19:22.940
ich meine ich habe wie viel sind das 80 80 80 bett twitch tv emotes oder so 1 2 3 4 5

02:19:22.940 --> 02:19:41.300
6 7 pro zeile 1 2 3 4 5 6 7 8 9 10 11 12 zeilen alter ah ungefähr 80 80 bett twitch tv

02:19:41.300 --> 02:19:53.100
emotes und dann bestimmt nochmal 1 2 3 4 5 6 7 1 2 3 4 5 6 7 nochmal nochmal mindestens

02:19:53.100 --> 02:20:12.340
um die 40 ffz emotes also das ist die emotes verwendet gar keiner mehr cac buy ist underrated

02:20:12.340 --> 02:20:16.940
cac buy brauchen wir jetzt gleich wieder wenn ich off gehe also leute heute war äußerst

02:20:16.940 --> 02:20:23.780
produktiver nicer progas stream da kam sogar was richtig sinnvolles bei raus ich mache

02:20:23.780 --> 02:20:27.460
ich heute letzte mal ihr wolltet ihr wolltet ich mache ich wieder ich mache ich wieder

02:20:27.460 --> 02:20:34.500
outro outro musik ja das ist ja bettge musik oh was ist das das müssen wir uns glaube

02:20:34.500 --> 02:20:40.820
ich angucken dann am sonntag fachinformatik system integration 2011 also moment zeigt

02:20:40.820 --> 02:20:50.580
hier was hat er auf windows windows in windows oh das ist big brain das ist vm windows in

02:20:50.580 --> 02:20:57.340
windows mit windows krasse scheiß bin 17 jahre alt und macht die ausbildung zum fachinformatiker

02:20:57.340 --> 02:21:02.020
in fachrichtung system integration hier bei der firma handmann stehm integration es klingt

02:21:02.020 --> 02:21:07.420
es klingt ein bisschen ein bisschen schwebisch zu meinen aufgaben gehört die konfiguration

02:21:07.420 --> 02:21:12.100
und die installation von system sowie die betreibung und die wartung von it system da

02:21:12.100 --> 02:21:17.340
ich zum großteil in der it infrastruktur beschäftigt bin lerne ich anwenderprobleme zu lösen zum

02:21:17.340 --> 02:21:24.340
beispiel in der it hotline jawoll endkundensupport beste da hat jeder bock drauf dauert drei

02:21:24.340 --> 02:21:28.580
jahre danach habe ich noch die möglichkeit mich weiterzubilden zum beispiel mit dem techniker

02:21:28.580 --> 02:21:34.500
fachwirt ja das juck kein fachwirt ist also ehrlich gesagt vielleicht weiß ich ob ihr

02:21:34.500 --> 02:21:39.700
einen kennt ich kenne niemand der die weiter bildungs ihk geschichten gemacht hat ich kenne

02:21:39.700 --> 02:21:44.820
nur leute die nach der ausbildung gesagt haben ich gehe eventuell noch was studieren aber

02:21:44.820 --> 02:21:50.660
ich habe noch keinen gesehen gibt es bestimmt der die der diese diese weiterführen ihk

02:21:50.660 --> 02:21:57.700
abschlüsse gemacht hat keine ahnung oder sogar mit einem studium nice sound abmischung

02:21:57.700 --> 02:22:03.740
ok ok da kann da finde ich mich jetzt sogar ein bisschen wieder alles ibm notebook erkennt

02:22:03.740 --> 02:22:06.940
man diesen trackpad in der mitte wo er gerade seinen finger drauf hat falls es eins ist

02:22:06.940 --> 02:22:15.820
was ist ein kabeltester ne keine ahnung aber immerhin das sieht relativ ordentlich aus

02:22:15.820 --> 02:22:20.380
entgegen zu dem wie es bei uns früher im etat ausgesagt jede menge glasfaser stellts

02:22:20.380 --> 02:22:34.260
sc stecker muss glasfaser sein irgendwelche letztwerk

02:22:34.260 --> 02:22:52.700
die musik ist die gute alte ihr glaubt es mir immer nicht wenn ich sage server haben

02:22:52.700 --> 02:22:56.540
heute im rechten zentrum immer noch vga das vollkommen normal glaube auch nicht dass

02:22:56.540 --> 02:23:04.540
es das ist ein dl 380 das nicht nicht nicht nicht nicht der neueste dl 380 falls ein dl

02:23:04.540 --> 02:23:16.100
380 ist aber neu genug die am vga ist immer noch am start

02:23:16.100 --> 02:23:20.620
warum genau muss jemand neben ihm stehen beim glasfaserkabel einstecken also ich gehe davon

02:23:20.620 --> 02:23:26.100
aus als hubi kann das alleine glasfaserkabel einstecken wenn es ihm mal gezeigt hat also

02:23:26.100 --> 02:23:47.780
das ist jetzt ja nicht dass das wahnsinns skills erfordert würde ja das heißt er darf

02:23:47.780 --> 02:23:52.980
den ganzen scheiß machen den alle anderen auch super wahrscheinlich ist es da wirklich

02:23:52.980 --> 02:24:03.300
nicht schlecht dass das was ich mich schon als vollwertiges mit in unserer it was mir

02:24:03.300 --> 02:24:07.580
bis jetzt am besten gefallen hat ist das aufbauen von netzwolken in der it ja da wird dann auch

02:24:07.580 --> 02:24:15.900
gleich das theoretische wissen netzwerk netzwerk kram ist ist echt spannend aus der berufsschule

02:24:15.900 --> 02:24:20.860
null ganz bestimmt der lernt das erst wie man es richtig macht und dann in der berufsschule

02:24:20.860 --> 02:24:24.260
noch mal wie man es verkehrt macht waren die kindern tage so entstand dann auch gleich

02:24:24.260 --> 02:24:40.780
eine gewisse freundschaft unter den azubis alter welche wer hat den sound abgemischt

02:24:40.780 --> 02:24:48.980
was bin ich sehend sysco konfig port sysco port konfig ne was sieht man da leute habt

02:24:48.980 --> 02:25:00.620
ihr einen plan das ist übrigens kein IBM er meint er ist eingehackt ja ist das ist

02:25:00.620 --> 02:25:19.900
das port konfig vielleicht könnte schon sein oder auch nicht boah da hätte ich keinen

02:25:19.900 --> 02:25:25.540
bock drauf alter arbeitsplätze einrichten hör mal auf es gibt so ein paar dinge da

02:25:25.540 --> 02:25:28.740
könnte da könntest du das würde ich im leben da könnte mir die sonst was bezahlen

02:25:28.740 --> 02:25:33.660
das würde ich nicht machen das ist hotline und das ist turnschuhe arbeitsplätze einrichten

02:25:33.660 --> 02:25:40.860
habe ich jetzt dein interesse am beruf des informatikers für systemintegration geweckt

02:25:40.860 --> 02:25:45.780
um ehrlich zu sein danach hätte ich die ausbildung nicht angefangen nach endkundensupport an

02:25:45.780 --> 02:25:51.180
der hotline und arbeitsplätze einrichten klick dich rein wir freuen uns auf deine bewerbung

02:25:51.180 --> 02:26:02.900
ne bloß nicht

02:26:02.900 --> 02:26:08.500
der typ sieht aus wie der tagschausprecher bloß dass das net ist

02:26:08.500 --> 02:26:34.020
das ist ja nichts neues wir wissen das ja schon lange dass der kreativ ist wissen wir

02:26:34.020 --> 02:26:55.780
auch also sich neue neuen beschiss ausdenken naja gut egal outro musik

02:26:55.780 --> 02:27:13.540
also leute wir sehen uns bis nächsten stream cu

02:27:13.540 --> 02:27:37.820
bye

02:27:43.540 --> 02:27:45.540
Das war's für heute.

02:27:45.540 --> 02:27:47.540
Vielen Dank für's Zuschauen.

02:27:47.540 --> 02:28:13.540
Das war's für heute.

02:29:13.540 --> 02:29:15.540
Das war's für heute.

