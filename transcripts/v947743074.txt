Excellent, so, gucken wir mal wie lange ich das heute durchhalte.
Ja, grausam, ich weiß, ja es ist besser, aber so nicht ganz gut, also ich habe immer noch ein bisschen Kopfweh, also insofern gucken wir mal, gucken wir mal wie lange ich das durchhalte.
Ah, ich habe jetzt übrigens mal OBS hier oben, das Teil eingeblendet, dass wir besser sehen was passiert, aber mal gucken ob das, oh hängt das?
Guck mal OBS ist Legamans, aber wir können uns das dann auch, wir müssen uns eigentlich nicht den OBS angucken, wir können es auch hier angucken.
Mit meiner wahnsinnig super staubfreien gereinigten Unterlage, aber sieht das halt aus, wenn man es drauf macht, Keks ist auch am Start.
So, ich mach mal OBS, kurz Browser auf, Terminal auf, exellent, danke für den Sub, dann haben wir den Breadtrooper, zwei Monate, Massive, Big IQ, Stonks für den Chat, ja.
Ja, C++ wird wieder echt Pain's Champ in the Ass, Alter, ich sag's euch.
Muss mal kurz mein lokales Git Repo aufmachen, dass ich ein bisschen abgucken kann, von anderen Sachen, ah yes, also folgendes.
3 Monate, danke für den Sub, huge, PowerShell Skript, naja geht so, geht so, jetzt nicht unbedingt das wo ich scharf drauf bin.
So, also ich hab den Stromzähler weitergebaut, den wir das letzte Mal gebaut haben, ich zeig euch das mal schnell, was ich da getan hat.
Also, ich hab jetzt ein 3D gedrucktes Gehäuse am Start, ich hoffe man erkennt das, ein 3D gedrucktes Gehäuse am Start, mit Display, mit Display schon drinnen vorne, es ruckelt gerade ein bisschen bei der Übertragung kann das sein, naja gut.
So, hinten Anschluss für Netzteil, unten mal ein Loch for future, warum leckt das, warum leckt das, liegt bestimmt daran, weil ich mehrere Streams auf hab, wartet mal, passt mal auf, ich mach mal kurz OBS zu, ich mach mal OBS zu.
Reicht das wenn man das heidet?
Komm wir machen das, wir removen das, scheiß drauf, dann leckt es nämlich nicht mehr, hoffe ich mal, ansonsten können wir die Bitrate auch noch ein bisschen runter machen, naja also zumindest 3D gedrucktes Gehäuse am Start, ihr seht Anschluss fürs Netzteil ist schon da,
ich hab übrigens ein bisschen näher rangezoomt heute, falls euch das auffällt, dass man die Sachen ein bisschen besser sieht, also sprich ihr seht auch das funktioniert, wenn ich jetzt hier das Netzteil anschließe, dann leuchtet das, scharf stellen please, da wo die Mausteil ist, das geht an und es geht auch nicht kaputt.
Und genau, so hier innen drin, das ist glaube ich jetzt nicht so wahnsinnig spannend, hier unten geht das Netzteil rein, da wo ihr das silberne Teil da seht, da geht das Netzteil rein und das da unten ist ein Spannungswandler, 12 Volt auf, Mensch machts einfach mal so, dass man was sieht, 12 Volt auf 5 Volt, das ist ein Board, das hatte ich noch übrig, eigentlich ist das Board da unten, ihr seht ihr ja gedacht, dass man da das Netzteil rein macht, aber keck wait,
ich hab's einfach unten reingesetzt und gucken, dass das scharf stellt mal, genau und dann hab ich unten einfach hier an 5 Volt und Ground angelötet, so und dann geht das einfach hier an die Klemmen, das hier ist 5 Volt Anschluss für alle möglichen Board Sensoren
und das hier ist, das andere ist mit dem weißen Kabel ist der Ground Anschluss, so und hier ist schon ein Controller dran, der letzte den ich grad hab von der Sorte, die anderen haben ja die Chinesen kaputt gemacht, aber irgendwie mag das heute nicht scharf schalten gell, naja, vielleicht muss man das so hinhalten, dann schaltet es scharf, scharf, iPhone, ah yes, da hängt ein, da hängt Chico dran,
genau und was ich da jetzt angeschlossen hab aktuell ist nur das Display, nur das Display und Strom für den Controller, so, genau, so sieht das aus, excellent, excellent, wunderbar, ich lasse es einfach mal so stehen, setz mich mal wieder hin,
und dass die Musik nicht zu laut ist, nee, passt eigentlich, also, jo, geht wieder halbwegs, setz Pudding, Dankeschön für den Sub, Tierborn, 13 Monate, das ist ja Hyper Subscription, oh ja, C++ wird echt ätzend, tja, ich würde empfehlen, geh lieber lernen,
Woyzer Schlucker, moin, ich hoffe mal, ich hoffe mal für die Menschheit, dass die meisten das nicht geil finden, so, und was wir jetzt machen müssen ist, wir müssen den Controller programmieren, also das Teil hier, und zwar, also, ich zeig euch mal, ich hol mal aus diesem Berg, der da drüben liegt noch ein paar Sachen raus, also was da jetzt dran kommt am Ende ist folgendes, oh das Scam Train Leute, noch eine Sekunde, das Scam Train, nein, Twitch kriegt kein Geld, so, also was wir
haben, nee, Spannungswander brauchen wir nicht, also, genau, das da ist der Sensor zum Stromzähler auslesen oben, das ist im Prinzip einfach nur so ein kleiner Foto Resistor, der erkennt, wenn es hell wird, das können wir einfach mit der Lampe hier oben ausprobieren, ich mach die Lampe dann einfach ein und aus, dann sehen wir, ob's zählt, oder ich deck's einfach ab, und dann sehen wir, ob's zählt, oh, das ist das eine,
den brauchen wir, den müssen wir gleich dran machen, dann haben wir noch, oh guck mal, hab ich ein geiles Case für ausgedruckt, ratet mal, was hier drinnen ist, Massive 3D Druck Case, was könnte hier drinnen sein, ich kann's euch sagen, es ist der schlechteste und billigste von der Art und Weise, die ich, dieser Sensor, den ich hab, da ist drinnen, ein uralter DHT11,
Luftdruck, Luftfeuchtigkeit und Temperatursensor, aber man muss zugeben, ah, da steht er sogar drauf, DHT11, lull, das Gehäuse ist nice, ne, da ist, ne, vorbei läuft noch, läuft noch, da ist die Ubisoft-Server drauf, korrekt, so, und das allerwichtigste an Sensor,
irgendwo da ist der da, mit dem Sensor können wir dann erkennen, wenn am Stromzähler die Scheibe einmal durchgelaufen ist, das sind zwei Infrarot-LEDs und die erkennen, wenn quasi so ne, so ne weiße Linie unterbrochen wird, und damit können wir dann zählen, ob bei diesem oldschool Stromzähler die Scheibe durchläuft,
so, also das muss man alles anschließen noch, aber das ist, wie gesagt, jetzt kein allzu großer Akt mehr, die drei Dinge, und ne, ich glaub, das war's, ähm, Display hab ich schon angeschlossen, da gucken wir uns das ganze mal an, würd' ich sagen,
ähm, ich werd' mal kurz diesen, den Sensor hier, wobei den kann ich, den kann ich hier drin lassen, ist eigentlich kein Ding, so, genau, also ich würd' sagen, wir fangen jetzt folgendermaßen mal an, wir gucken mal, dass wir das Board geflasht kriegen, mit irgendwie, so nem Hello World fürs Display, dass wir wissen, dass das alles funktioniert, weil da bin ich, bin ich so sicher, das Display war die ganze Zeit eingebaut,
wo ich hier drin rumgewurstet hab, aber ich hab, ich hab, falls ich's kaputtmache, falls ich's kaputtmache, ich hab noch ein Ersatzdisplay, kann ich mal hier hinlegen, ja, und dann, dann schauen wir mal, und dann, und dann versuchen wir die ganzen Sensoren anzuschließen und gucken, ob das dann klappt,
äh, ihr könnt's euch aussuchen, Leute, wollen wir oben, also quasi hier in die Ecke, dieses Ding immer als Vorschau lasten, nee, ich glaub, das ist im Weg, spätestens, wenn ich den Editor auf hab, ist das im Weg, ich glaub, ich mach einfach nur so'n kleines Overlay in, in meiner Linux VM, das reicht.
Wieder 5er Pack gekauft, nee, nee, nicht nur 5er Pack, ich glaub, 20er Pack oder so. Welchen 3D Drucker, ein i3 Mega S, kostet irgendwie 230 Euro, also jetzt nix wahnsinnig teures, und das hier sieht man ja auch, das ist auf dem gröbsten Druck-Setting gedruckt.
Guck mal, das siehst du ja hier, die Schrift ist nicht sonderlich gut und man sieht hier
auch die ganzen Streifen und so, also das ist 0,3mm oder was das ist, das geht noch
ein bisschen besser, wenn man es kleiner stellt.
Darf ich fragen, wieso du C++ nicht magst?
Oh, das ist keine gute Idee, dann bin ich erstmal jetzt eine Stunde beschäftigt zu
erzählen.
Ich glaube, es wird sich rausstellen im Laufe des Streams, warum ich C++ nicht mag.
Okay, also, machen wir mal, machen wir mal, Editor auf, ich werde mal, Sekunde, mach
mal kurz eine Vorschau von der, von dem, ah, Bitrate, das glaube ich vollkommen egal,
die Bitrate, Bitrate müsste wurscht sein, oh, oder auch nicht, das sieht jetzt ja mega
schlecht aus, ach, das läuft gar nicht, okay, hallo, hallo, perfekt, äh, Picture in Picture
S, jetzt haben wir es auf dem zweiten Desktop, jetzt machen wir es ein bisschen kleiner, da
haben wir ein bisschen, bisschen Vorschau, wobei, also wirklich, so wirklich gut erkennen
tut man ja nix, ne?
Phoenix17mona, Dankeschön für den Sub, das ist ja Hypersubscriber, ich könnte das Teil
ein bisschen weiter hoch legen, dann erkennt man was, ey, wenn man, wenn es was zu sehen
gibt, wenn es was zu sehen gibt, dann switch ich einfach um und dann sieht man es ja, glaube
ich am sinnvollsten, aber das ist wieder zu, so, also wir legen jetzt erstmal ein Projekt
an und ich würde sagen, wir updaten erstmal, was haben wir denn da gemacht, oh ja, exzellent,
wir haben schon ein leeres Projekt, wunderbar, ähm, wir updaten den ganzen Krampel jetzt
erstmal, jawoll, hier, update, update, libraries, was haben wir hier noch, alles installiert,
schon ne Weile her, brauchen wir alles nicht, aber trotzdem updaten, updaten, exzellent,
jawoll, so, also wir legen jetzt mal das neues Projekt an und dann gucken wir mal, dass wir
das Display, ich versuch das mal hier so zu machen, dass man es sieht, leg ich mir das
jetzt am besten hin, dass man das Display gut erkennt, so, irgendwie, nein, das funktioniert
ja nicht, da ist ja hinten jetzt die, da ist ja hinten der Anschluss für, hm, wartet mal,
mach ich das jetzt am besten, so, irgendwie, ne, das ist ja wirklich, wirklich gut funktioniert,
das ist grad nicht, nicht gut durchdacht, ähm, ich stell das einfach, wartet mal, ich stell
das einfach hier, hier drauf, oder, ist das besser, ich druck nochmal, ich druck nochmal
schnell den Ständer, Ständer aus, äh, nicht wirklich, oder, exzellent, perfekt, sieht
sehr stabil aus, wie es jetzt da hängt, äußerst stabil, muss aber so rum, weil sonst ist falsch
rum, hm, wie krieg ich das jetzt, ok, Moment, Moment, wie krieg ich das denn jetzt gescheiter
positioniert, ok, lass mal, lass mal, lass mal überlegen, chat, ihr seid auch sonst
immer so schlau, da kann das Kabel rein, du meinst, in die Dose, gut, in die Dose ist
schlecht, da ist ne Lampe drin, aber, die müsst ich raus machen, könnte man ausprobieren,
das könnte man ausprobieren, so, so, ah, yes, exzellent, chat, big brain, big brain chat
wieder am Start, die Subs haben sich gelohnt, so, also, jetzt erkennt man den Kram auch,
kdhks, dankeschön Twitch Prime, Qantas97, auch exzellent Prime Subscriptions, und in
Phoenix haben wir schon, nice Subs, so, jetzt erkennt man glaube ich was, so, das erste,
was wir jetzt mal probieren werden ist, zu flashen mit so nem Hello World Display Ding,
ich mach mal ein neues Projekt, was ist es denn, open, new project, hi, es ist joe, 15
Monate, hyper Subscription, danke für den Sub, thealfax, 3 Monate, dankeschön für
den Sub, jetzt gehts ja hier Schlag auf Schlag, so, also, Projekt Name, Leute, wir brauchen
einen guten Namen, ich hab ne Idee, Wattchamp, man soll immer den Stromzähler auslesen,
und Wattchamp kann man sich wenigstens merken, so, das Board ist ein Tiny Pico, Framework
Aruino, ja, passt, aber wir werden nicht ganz das Vanilla benutzen, sondern neuere Version,
use default location, finish, hat sich der Shitrepo Azubi bei dir gemeldet, ja, ja hat
er, was will der hier, ist es gut oder schlecht, User Bin GCC, das wird nicht funktionieren,
User Bin GCC wird garantiert nicht funktionieren, das muss ich doch mal kurz zumachen, ich glaube
nicht, dass das so klappt, der Wattchamp, hat er, hat er es jetzt gecheckt, Source, Main,
ein, nein, nein, nein, geh mal fort, Visual Studio, Alter, so, kann er, kann er kompilieren,
ok, funktioniert, alles klar, bei Azubi als nächstes kompiliert, ja, der Jesus, ne, aber
fast, 408, Dankeschön für den Sub, so, auf gehts, huge, huge Startcode, ja, wir laden,
wir laden jetzt einfach mal irgendwas hoch, achso, bei, das wichtigste hab ich ja noch
vergessen, was euch vielleicht auffallen wird, ist, der Controller ist gar nicht bei mir
am Rechner angeschlossen, ich kann da drauf nichts flaschen, ich hab jetzt aber überlegt,
wir machen absolut Big Brain Modus, und zwar, ich hab hier ein Raspberry Pi liegen, in diesem
nice, nice Case, und da ist ein USB Kabel dran, wenn ich das rausgezogen krieg, ohne
dass ich das umschmeiße, das andere, und was wir jetzt machen können ist, das steht halt
hier nicht wirklich stabil, aber, scheiß drauf, was wir machen können ist, ich kann
jetzt, das probieren wir mal aus, ich hab das letzte Mal im Stream schon probiert, da hat
es nicht ganz funktioniert, ich will ja, dass ihr das seht, ne, wenn ich das Ding rüber
an den Rechner mache, dann seht ihr es ja nicht mehr, ja, wir müssen ein bisschen gewackelleben,
glaub ich, zumindest, ich werd jetzt mir hier das USB Device sharen, auf meinen lokalen
Rechner, um es dann über den Raspberry Pi zu flaschen, so als wäre es angeschlossen
bei mir lokal am Rechner, hat man das verstanden, also ich leite quasi so den USB Anschluss
weiter an meinen lokalen Rechner über den Raspberry, dass ich das hier auf dem Basteltisch
haben kann, aber lokal entwickeln, richtig Massive, ja, Next Level 5 Head, so, jetzt
muss ich mal gucken, ah, Moment, ha, guckte mal, ich bin auch doof, ich brauch das Kabel
da gar nicht drinnen, weil zum Flaschen und zum Entwickeln machen wir das natürlich
per USB an Strom, USB Strom, so, jetzt haben wir es per USB angeschlossen, jetzt müssen
wir mal gucken, dass wir es, ah, yes, was eine Wackelei, aber es funktioniert, das mache
ich nur so, dass man den Controller irgendwie sieht, exellent, da hängt ein bisschen viel
davor, Moment, wir müssen das einmal ordentlich positionen, Positioning ist alles hier, Leute,
nicht raus strafen, warte mal, wir machen das anders, wir machen das da einfach unten
rein, ah, yes, so ist perfekt, jetzt erkennt man die LEDs, jetzt erkennt man den Controller,
sieht zwar äußerst behilfsmäßig aus, aber man erkennt alles und das Display auch, exellent,
so lassen wir das jetzt, perfekt, sehr gut, musst du an dem Konstrukt noch irgendwas dran
bauen, ne, ich muss die Sensoren anschließen, das ist alles, also ich muss die Sensoren
anschließen und dann passt, also eingebaut habe ich das hier schon, äh, nicht, noch nicht
mal im letzten, nicht im Stream vorher, das habe ich Offstream gemacht, das Gehäuse, letztens
im Stream vorher habe ich meine Boards gegrillt mit einem billigen China Spannungswandler,
ok, also fangen wir mal an, das billigste, was man machen kann ist erstmal serielle Schnittstelle
auf 9600 und jetzt machen wir nichts anderes wie Serial, äh, Print, soweit komme ich
mit C++ auch noch klar, CacWade, so, und jetzt muss ich von meinem Raspberry Pi erstmal
das USB Kabel scheren, dass ich dran komme, äh, was hat mein Raspberry Pi für eine IP,
weißes Haar, ist das Staubsauger, der vielleicht, hm, was hat mein Raspberry Pi für eine IP,
ah, hier, 126 hat der jetzt, ok, meinetwegen, yes, der Chat ist schon drin, ja, war klar,
Chat ist immer schnell bei sowas, USB IP, genau, Lists, sonst kann man sich anzeigen
lassen, was man für USB Geräte hat, das hier ist das Flashgerät, also die ist, äh,
der, sag mal, ist die Auflösung schlechter geworden, eben war die Auflösung dann noch
besser, weil die Auflösung ist doch echt passabel, genau, also sprich, der Serial-Converter,
der per USB angeschlossen ist, ist das auf, ähm, 13, Unable, warum, oder, ach, ist das
vielleicht schon, USB IP, USB, minus R, nee, wie ging das jetzt nochmal, Alter, USB IP,
muss man mal, muss man mal angucken, minus R war das, USB IP, Lists, minus R, und jetzt
die IP vom Raspberry Pi, 126, could not connect, ok, also, was muss ich machen, Modprobe, USB
List, alles klar, USB IP List, minus L, alles klar, USB IP, minus groß D, Demon Mode, Bind,
ok, ah, jetzt, exellent, und jetzt kann er das auch anzeigen, so, und jetzt, USB, konnte
ich mit dem Kram nochmal mounten, Moment, wie mounte ich den USB-Gerät nochmal, mit
USB List, minus R, soll nicht, äh, bin ich, ach, hier, ok, ich muss noch irgendwelche
Module laden, was auch immer, ich mach jetzt einfach mal das Tutorial durch, ich mach das
nur, dass ich euch das schön im Bild zeigen kann, ohne euch das Ding direkt an mein Rechner
anschließen muss, ähm, Attach, ok, also, im Prinzip dann so, Attach, 1.1.3, sudo, oh,
Moment, mein, mein, Keg-Wade, sudo, ah, jetzt, exellent, so, mal gucken, ob er jetzt das
Gerät erkannt hat, der, hier, da ist es, USB, so, und jetzt, und jetzt müsste ich theoretisch,
von meinem lokalen Rechner uploaden können, auf den Controller, über den Raspberry Pi,
schauen wir mal, ob das funktioniert, yes, exellent, exellent, funktioniert, nice, so,
Serial Output, Keg-Wade, also, funktioniert, das Ding läuft, too, way too smart, ja, so,
jetzt können wir den Kram flashen, so, und jetzt wird es eklig, jetzt kommt C++-Time,
oder wie die Cooloys sagen, C++, allerdings ist das unter, ist das mit den Arduino Sachen
halbwegs erträglich, außer man muss Sachen machen, die nicht drin sind, dann ist, Keg-Wade,
ok, lasst mal überlegen, wie fangen wir jetzt erstmal an, ich copy paste mir jetzt mal ein
paar Sachen, die ich auch mit diesem anderen Projekt am Start habe, also, erstmal muss
man die Projekt-Settings ändern, und zwar, ich muss mir das gerade mal aufmachen, also,
die Settings ändern, wow, big, was habe ich denn da gemacht, ok, erstmal den Upload-Speed
erhöhen, mal gucken, ob das da noch funktioniert, weil ansonsten ist das teilweise relativ lahm
mit dem Upload von der neuen Firmware, ok, funktioniert noch, alles klar, das geht gleich,
sobald wir WLAN-Includen geht das viel langsamer, so, Upload-Speed höher machen, äh, by the
way, geht eigentlich noch mehr, was ist denn die nächste höhere, sagte mal, meint ihr
ein serieller Portpack, das hier, habe ich noch nie ausprobiert, 3,6k, nee, ach, was
auch immer, Keg-Wade, Keg-Wade, nein, geht nicht mehr, ok, dann muss man das da hinzufügen,
das Copy gesagt, das weiß ich nicht, auf dem Kopf, das habe ich im anderen Projekt, dass
man bessere Exceptions angezeigt bekommt, wenn der Controller abkackt, ansonsten, wenn
der Controller abkackt, steht einfach nur drinnen, Stack Trace und Speicheradressen
Offset, was ziemlich nichtsagend ist, wenn man das hier included, kriegt man wenigstens
halbwegs eine Anzeige, in welchem Modul was kaputt gegangen ist, eigentlich ganz praktisch,
so, dann ganz wichtig, wir wollen den neuesten C++ Shit verwenden, ja, korrekt, den neuesten
C++ Shit, nämlich, wer das daraus nicht erkennt, das ist C++ 20, oh, geht nicht, was habe
ich vergessen, ah, ich habe vergessen, die neueste, die neueste, die neueste Version
vom Compiler zu include, ok, exzellent, exzellent, ich will unbedingt, wir brauchen C++ 20, einfach
weil es neu, einfach weil es neu, es hat kein, was ist denn jetzt das Problem, es hat kein
Tiefegekund, aber es muss neu sein, ja, weil umso, also C++ ist an sich ja schon absolut
zumutig, zumutig und umso älter das ganze ist, umso, es ist ja kaum möglich, aber es
ist dann noch schlechter, genau, C++ kommen tolle neue Dinge dabei und der alte Scheiß
bleibt auch dabei, glaub, der installiert irgendwas im Hintergrund gerade, wir lassen
den mal, wir lassen den mal kurz, yep, yep, cock, so, weiter geht's, haben wir hier, ah,
jetzt kann er kompilieren, weil viel hilft viel, so siehts aus, das sieht schon mal gut
aus, nice, ok, Upload funktioniert noch alles und Cack Weight wird auch noch ausgegeben,
alles klar, passt, ok, ich würde sagen, Projekt Settings sind erstmal ok, neuester C++ Standard,
bessere Exzeptions, schnellere Upload Speed, neueste Variante von dem Arduino Krams beziehungsweise
dem, dem Framework vom Hersteller, was unter Arduino läuft, weil, das kann ich euch übrigens
nur empfehlen, wenn ihr ESP32 Sachen programmieren wollt mit Plattform.io, nehmt das neuere,
weil die alte Version basiert noch auf 3.3, glaube, und da sind ganz viele Sachen anders
und ihr könnt kein C++20 verwenden, so, passt soweit, würde ich sagen, ok, exquisite, was
ist Plattform.io, das ist, was sagen sie denn selbst, Professional Collaborative Platform
for Embedded Development, im Prinzip ist es ein Visual Studio Addon, ein Visual Studio
Addon, was das Einrichten von der Entwicklungsumgebung für Microcontroller easy as fuck macht,
du musst nur das Addon installieren über den Addon Store und dann kannst du einfach
ein neues Projekt anlegen und direkt Uploaden, du musst gar nichts machen, großartig, also
die Settings, die ich jetzt gemacht habe, sind rein optional, weil es ein bisschen angenehmer
ist, also nicht Arduino IDE oder sowas, nehmt Plattform.io, die Arduino IDE ist Crap, absolut
Crap dagegen, ok, also legen wir mal los, lass mal kurz in mich gehen, wie fangen wir
an, also wir fangen schon mal nicht damit an, indem wir unsere serielle Schnittstelle
auf 9600 machen, sondern wir machen die auf ein bisschen mehr, so, ich hoffe es funktioniert
noch, Monitor Speed brauche ich noch, genau, funktioniert, nehme ich nicht, Monitor Speed,
das ist das, wie schnell die serielle Ausgabe ist, mal Uploaden, ah Moment, das nicht Uploads,
Monitor Speed, ok, guck man sieht es glüht schon fast beim Uploaden, das schlimmste an
der Arduino IDE ist ja das Theme und dass es keinerlei Code Assist gibt, also du hast ja
keinerlei Autocomplete oder sowas, hier hast du wenigstens das Standard Visual Studio Autocomplete
C++ Kram, das ist da noch ein bisschen erträglicher, ok, wir haben hochgeladen, Output Care Query
Speed passt noch, ok, also wir fangen jetzt erstmal an das Display anzusteuern, also sprich
das hier drauf was erscheint, übrigens wenn ihr was wissen wollt schreibt net Wupplos
dabei, ich scroll dann gleich ab und zu mal über den Chat, falls ich zu lahm bin sagt
mir Bescheid, so das heißt wir brauchen jetzt erstmal eine Library für das Display, also
Libraries, so und das ist ein SSD 1306 Display und wir nehmen als Library die erste die ihr
erfindet, weil die habe ich schon mal verwendet, die ist ganz ok, nein nicht die, ok ich habe
Mist erzählt, die Library nehmen wir nicht fürs Display, wir nehmen auch nicht die, wir
nehmen die hier, die da nehmen wir, die hier, warum ihr euch jetzt fragt, warum die, weil
es so ist, weil die funktioniert und die anderen Crap zu bedienen sind und nicht richtig funktionieren.
Oder nehmen wir sogar die, warte mal, was sind die neuere Version hier von, 4.2, warum
gibt es denn die doppelt, 4.2, heck wait, hä, warum gibt es die Sachen doppelt, paper
please, egal das ist der Treiber den wir wollen für das Display, fügen wir hinzu, wo ist
der Watt, der Wattchamp, jawoll, Wattchamp, exellent, so und hier ist auch immer gleich
ein Beispiel, das ist übrigens auch ein Vorteil von dieser, von der, von Platform.io, die
haben das hier ganz schön integriert, klar die Beispielprogramme müssen die Library Autoren
zur Verfügung stellen, aber hier kann man schön nachgucken wie der ganze Kram funktioniert,
Simple Demo, Simple Demo ist immer gut, genau, das da müssen wir include und dann müssen
wir display in it und irgendwas drauf anzeigen, genau das, das kann nicht so kompliziert sein,
also include, das da, kompilierter Kram noch, so also wir versuchen jetzt erstmal auf dem
Display was anzuzeigen, hier scheint zu funktionieren, also ich bin nicht ganz planlos, ich hab das
schonmal gemacht, so display in it, flippen tun wir erstmal nix, wozu, areal plane, ne
wir wollen eine größere Schriftart, was haben wir noch, areal 16, areal alter gibt's nicht
monospace oder so, oh Gott was ist das denn, ok wir müssen unsere eigene Schriftart gleich
noch holen, weil areal ist Crap, ne ne Leute, Comic Sans ist auch Crap, wisst ihr warum
alles Crap ist außer Monospace, weil dann die Buchstaben unterschiedlich breit sind
und wenn die Buchstaben unterschiedlich breit sind, dann kannst du nicht richtig ausrechnen
wo du was auf dem Display hinschreiben musst, das ist Müll, Hack, Hack ist eine sehr gute
Idee, mal gucken ob es das dafür gibt, ansonsten nehmen wir irgendeinen Monospace, Roboto oder
sowas, Konsola, ja müssen wir mal gucken, aber wir versuchen jetzt erstmal was auf dem
Display anzuzeigen, Text-Align, Drawstring, na gut, also im Prinzip sollte es das eigentlich
gewesen sein, jetzt sollte was auf dem Display stehen, wenn ich das richtig sehe, ich sehe
gerade eine Sache, wo ich noch mal machen, Display, Set, Contrast, wobei muss ich das
machen, ich probier's mal so, so jetzt sollte da ganz oft Hello World drauf stehen, wobei
wir schreiben da nur einmal Hello World drauf, das reicht ja, so Upload, Moment, das kann
nicht funktionieren, ich hab das ja an den anderen Pins dran, Leute das kann nicht gehen,
ich hab das gar nicht an den Standard Pins dran, ich hab das an Pin 25 und 26 dran und
das hier ist Pin 25, das jebaitet mich, Moment, das ist Hex 26, das ist Hex 26 oder? 38, ok,
das kommt eher hin, Moment, Tiny Pico Pinout, macht das Display was? Nein, macht nix, Pinout
erstmal angucken, die Standardbus für so Displays ist bei dem auf 39 und 2 und what the fuck,
auf 21, auf 21 und 22, warum, what the, ok, das ist falsch, das ist definitiv verkehrt,
ich hab die auf GPIO 25, 25 und 26, ich bin mir jetzt nicht sicher, warum ich das Kabel
angeschlossen hab, ehrlich gesagt, wir probieren das jetzt einfach mal aus, ob das Display
angeht, ok, postchamp, postchamp, postchamp, postchamp, nope, probieren wirs mal andersrum,
also die Adresse, die Adresse stimmt, das weiß ich, die Adresse stimmt, 03C, das steht hinten
auf dem Display irgendwo drauf oder die Displays haben das, das weiß ich, das passt, ok, gehts
jetzt, upload please, upload, upload, upload, upload, please, vielleicht sieht mans einfach
nur auf der Kamera, nicht, ah, guck mal, warte mal, hier, das ist glaub ich gar nicht richtig
sein, also 26, 25 müsste eigentlich richtig sein, ich guck mal nach, ich hab das doch
schonmal gemacht, gehts jetzt, fuck, ok moin, ich muss mal abgucken kurz, init, display init,
ok, das da, das da hab ich im anderen Projekt gemacht, display init, set contrast 255, ah,
ich weiß, was ich vergessen hab, man muss ihm ja auch sagen, dass er was anzeigen soll
am Ende, man muss sagen, display, display, display, dass er was anzeigt, calculate, postchamp,
bam, ok, es sieht nicht gut aus in der Kamera, das stimmt, gerade mit diesem Winkel hier
sieht das nicht gut aus, aber, ich glaub man erkennt was, huge refresh rate, massive refresh
rate, easy clap, ich hab ne, ich hab ne andere Idee, wir nennen das nicht display, ich nenn
das, ja, wie soll ich es denn sonst nennen, wenn ich display, lcd, lcd, display, da kann
ich nämlich so machen, lcd, init, lcd, wobei es ist glaub ich ein led, screen, screen,
screen ist gut, screen gefällt mir, oh, wie war multiple cursor in wishlist studio nochmal,
wishlist studio code, anzeige, oh ja, anzeige ist raus, anzeige ist gut, chat soll ich es
screen oder anzeige nennen, ne, anzeige, ich kann mit deutsche variablen Namen, geht
nicht, wir können es auch ausgabegerät nennen, das ist doch auch was, oder, ausgabegerät,
displaychamp, nein wir nennen das einfach nur screen und gut ist, paintschamp, ok das
funktioniert, excellent, hello world ist jetzt huge chat, ok also das display an sich funktioniert
schonmal, ich bin begeistert, ich muss mir gleich noch ein paar helper classes rüber
kopieren, weil ich sonst zu viel raw c++ machen muss und das paintschamp mich schon
wieder, was kann man denn hier eigentlich machen, build filesystem, was sind das für
dinge da oben, build filesystem, ok, program size, aha, upload filesystem image, erase
flash, ich hab irgendwie den eindruck, das klicke funktioniert irgendwie dazu richtig,
pricked, ich hab mir ne eigene klasse mal gebaut, so als anti-prick maßnahme, die resettet
erst nach nem erfolgreichen boot, muss ich mir gleich mal alles rüber kippen, wisst
ihr was, wir klicken da jetzt nicht weiter, drehen rum, who cares, wir machen das einfach
zu brauch ich eh net, ok also, bei der gelegenheit müssen wir gleich noch das filesystem aktivieren,
weil, wenn wir Stromzählerstand auslesen, dann will ich den Kram ja auch, falls sich
das ding mal neu startet, will ich ja auch den aktuellen stand mir merken, das heißt
muss ich auf den flash speicher schreiben, so und jetzt würd ich sagen, bevor wir jetzt
was, jetzt brauchen wir erstmal ne ordentliche schriftart, ich mein das sackt doch hier,
guckt sich das mal an, das ja, areal, wo komm man da hin, wo komm man da hin, areal, wir
brauchen monospace, wieso verwendest du c++, weil es keine andere, es gibt keine andere
variante, also du kannst das nicht mit was anderem programmieren, es gibt theoretisch
die variante mit micro python zu programmieren, da hast du aber andere probleme, oder es gibt
ne experimental rust implementierung, die ist aber auch problematisch, also du kannst das
nur sinnvoll in c++ machen, so also das brauchen wir schonmal nicht, ja gibts wirklich, gibts
wirklich, so also wir brauchen jetzt erstmal ne ordentliche schrift, und dazu gibts ne poggers
webseite, das hab ich schonmal vorbereitet, wie in der koch-sendung, hier kann man die
schriftarten generieren, für so embedded-dinger, so und jetzt, jetzt müssen wir mal gucken,
was wir als schriftart, was wir als schriftart haben wollen, kann man nach monospace, was,
flashbang, ah gut, weils der chat ist, so monospace, was haben wir mal monospace, monospaced,
crafty girls, ah grills, beste schriftart, so das brauch ich unbedingt da, gibt es hack,
hack, ne, homemade apple gibt es, ach du große kacke, ich will mich jetzt allerdings da nicht
so ehrlich gesagt, roboto, wir nehmen roboto medium, gibts konsolas, ne konsolas ist ne
microsoft schrift, die gibts wahrscheinlich nicht, der ist auch ok, gibts ubuntu mono oder
sowas, boss, ah da kann man icons mitmachen, ok das ist natürlich auch cool, nimbus mono,
ne wir nehmen roboto und gut ist, da weiß ich, dass die gescheit aussieht, wir nehmen
roboto mono medium, so und als, wir brauchen das einmal in schriftgröße 16 und einmal
in schriftgröße 12, emoji support, das ist ne gute frage, ich kanns mir nicht vorstellen,
wenn du die schriftarten hier quasi noch als bytearrays brauchst, ich kann mir nicht vorstellen,
dass das ding emoji support hat, aber wir könnens mal ausprobieren, das würd mich äußerst
wundern, wenn das emoji support hätte, ich glaube eher, dass es entweder abkackt oder
nicht, was ich persönlich eher glaube ist, der zeigt irgendwelche byte geschwubbel an,
was nicht funktioniert, pricked, huge music hier, ne guck da kann keine emojis, also wir
brauchen roboto medium 16, da weiß ich glücklicherweise wie es funktioniert, wie man das einrichtet,
man braucht ne extra datei, kann man zum Beispiel fonts.h, weil c und gerade c++ immer noch
mit header scheiß rumhantiert, by the way 2021, fragt mich nicht warum, aber ist so,
historisch gewachsen, so das machen wir weg, include arduino, sonst kann er den kram nicht
verwenden, oh jetzt wär ich nervös bei der musik leute, gachi bassmusik, so und jetzt
brauchen wir die ganze schriftgröße nochmal in 12, excellent, da seht ihr mal das ist
richtig low level shit, aber ein bisschen low level shit, wenn man hier schriftarten
noch als byte arrays rumhantieren muss, da weißt du schon was sache ist, ok und jetzt
set font, roboto, ne erst mal include den ganzen kram, include font, jawoll, ich hab
schon wieder vergessen was der unterschied ist zwischen include so und include so, ich
glaub das search pass, so roboto, roboto medium exquisite, geht nicht, weil, warum, weil invalid
conversion, oh die musik macht mich fertig, ich muss das überspringen, ok schon besser,
ist mir aber eigentlich auch zu anstrengend, ja geht besser, weil const char geht nicht
zu const uint, uint 8 underscore t pointer, tja, einfach jibay, wir ändern einfach den
typ in der hoffnung dass es funktioniert, muss funktionieren, das sind im prinzip alles
ein byte und gut ist, wenn man das nicht zueinander casten kann automatisch weiß ich nicht, aha
scheint zu funktionieren, ruby in 2021 und als web framework immer noch rails wahrscheinlich
ne, ich bin auch ruby fan aber es hat es leider dazu abgefahren, die schriftart jetzt
anders, 16, also jetzt sollte es definitiv anders aussehen, das sollte jetzt auf jeden
Fall, ah jetzt, bigger cute chat ist am start, nice, so, also das display, ich würde das
ungefähr so aufbauen, wir machen mal so wie ich mir vorgestellt wie man das ganze anzeigen
könnte, also, als erstes in die oberste zeile kommt ein bisschen debug info, falls ich in
zwei jahren mal wieder in den keller gehe und wissen will was das ding für ne ip hat,
das schreibe ich auf jedenfalls aufs display drauf, ich könnte im router gucken aber ip
anzeige schadet auf jeden fall nix, also machen wirs mal so, screen clear bei jedem loop,
tag rate als ausgabe können wir uns mal sparen, so screen set font auf 12, so und oben kommt
die ip, ich trage jetzt einfach mal testweise was ein, also ich habe noch gar kein wlan,
so, dann würde ich sagen ok dann bei 20 machen wir jetzt den, sowas wie ne uptime oder so,
mal rein, so und dann unten drunter mit 16 machen wir dann quasi den total zähler stand
und dann hier oben den für den ersten stock, den für den ersten stock kriegt so ein hütchen,
also keine ah, kwh und unten irgendwie so habe ich mir das vorgestellt, mal gucken ob
das überhaupt alles aufs display passt, wahrscheinlich nehme ich nicht, ne das kann nicht aufs display
passen, das kann nicht aufs display passen, kwh das display ist ja plus 64 hoch, das kann,
ne ja, aber die idee ist schon mal nicht verkehrt ne, also der sinn ist ja gibt es auch ne grafana
page zum stromverbrauch, ja weil ich werde das so machen, ich exportiere das dann in
mein home assistant, also es hat ja keinen sinn es einfach auf dem display anzuzeigen
wenn man eh neben dem stromzähler steht, das ist einfach doch die bug dass ich gucken
kann ob das übereinstimmt, ähm die eigentlichen daten überträgt das ja, überträgt das
ja auf zu meinem home assistant, das ist ja der witz, ne das ist zu weit auseinander,
also ich würde sagen wir fangen jetzt hier mal bei 0 an, dann machen wir das hier auf
14 und das nächste machen wir dann irgendwie, keine ahnung, plus plus 20 oder so oder plus
plus, ah so, müsste, müsste ungefähr hinhauen, draus nun, weil der ey bei uns ist auch am
stürmen, es fuck, was ist denn das für ein controller, das ist ein, zeige ich dir, erst
mal gucken ob die aus, ja so ist doch schick oder, exquisite ist das, äh das ist ein es
p32 tiny pico und das ist ein standard esp32 halt in besonders klein, der hat nicht alle
pins rausgeführt aber für meine zwecke reicht das, das gute ist halt, dass der ist mini,
der passt da halt easy rein dann auch in das ganze zeug, ich mein die box ist an sich ja
auch nicht groß, ip nur beim neustarten, nee nee nee, ip lass ich die ganze zeit da, weil
wenn das an ist und ich will nicht auf den ersten blick einfach drauf gucken können
dass es noch funktioniert und das, das passt schon, ip, uptime und dann die dinger, ich
muss da, da guckt ja je keiner drauf, das ist ja rein für mich zum gucken falls irgendwas
nicht funktionieren sollte, dass ich überprüfen kann ob alles in ordnung ist, weil wenn du
eh unten bist kannst du auch so auf den zähler gucken, ist das, ja das ist tatsächlich oben,
ok das ist, das ist eigentlich wunderbar so kann man das lassen, wie machst du stromversorgung
oder akku oder netzgerät, achtung, kabelchamp, was du jetzt nicht siehst auf der rückseite
hat das ding einen anschluss für 12 volt dc, what is happening im hintergrund gerade
in der musik, warum ip und uptime nicht im wechsel, ja das könnte man machen, das ist
mir aber fast schon der aufwand nicht wert, da müsste ich ja nämlich zählen und gucken
wann der das wie macht, weiß ich nicht, das ist dann advanced, das ist dann advanced, das
können wir dann, die musik alter, das macht mich voll nervös, du hast mein interview
bei null gesehen, das video ist echt gut geworden, hätte ich nicht gedacht am anfang,
dass wir da so guten flow entwickeln, nee es ist, nee nee es ist nicht, es ist 12 volt
auf ein altes d1 mini shield, was ich noch hatte und von da 12 volt auf den 12 volt input
von dem da, weil das schöne ist, wenn ich den über 5 volt, was laber ich denn, 12 volt
auf 5 volt und wenn ich den über 5 volt power dann gehen die ganzen leds, das ding ist so
gemacht zum strom sparen, dass keine leds an sind, wenn es über 3,3 volt gepowert wird,
aber woher kommen denn deine daten, die kommen hier her, ich hab einmal im keller sowas hier
hängen, so richtig oldschool dingen mit scheibe, die durchläuft, exellent, so einen hab ich
unten, sieht dann so aus und ich hab oben einen stromzähler, der alle so und so viel wattstunden
blinkt, so und das ganze, also ich weiß, dass es geht, weil ich hab unten im keller schon
was hängen, was das auslesen macht, aber das ist total abartig gelöst und mit band
dran geklebt und ich hab die passenden sensoren hier, also wie gesagt, der sensor ist zum
auslesen von dem zähler, wo sichs dreht, iphone please, hat keinen bock, das sind zwei infrared
leds, die erkennen, wenn der strich durchläuft, jaja, bei uns machen die auch keine anstatt
den kram auszutauschen und wenn sie ihn austauschen, ist es für mich nur gut, da mach ich nämlich
einfach zweimal den infrared sensor dran und es geht trotzdem wieder, so mal kurz konzentrieren,
also setup wunderbar, dann brauchen wir folgendes, wir brauchen um den sensor, wir testen jetzt
erstmal die ganzen sensoren, bevor wir wlan gedöns ausprobieren, würde ich sagen, wir
testen erstmal die ganzen sensoren, so, also wir schließen immer den sensor an und auf
dem display planten wir einfach jetzt mal den sensor stand ein, wir nehmen den da als
erstes, weil der ist einfacher zum ausprobieren, wo ist er, da, den schließen wir jetzt einfach
mal an, der ist, das ist ein lichtempfindlicher sensor, wenn da vorne licht drauf schaltet,
dann ist es, wie wenn man den knopf drückt hier hinten, also ich hab den eingestellt auf,
der ist eingestellt, hat man hier 4 outputs, ein analog output, ein digitaler output plus
3,3 volt ground und wenn das ding licht erkennt, dann ist das, krieg ich halt auf dem digital
pin ein signal, so und das schließen wir jetzt mal an und probieren mal aus, ob das funktioniert
und danach schließen wir mal den temperatursensor an und gucken, ob das funktioniert, also, welchen
port nehmen wir denn mal, also zum testen werde ich jetzt folgendermaßen machen, ich
schließe das an 3,3 volt und ground, ah ne moment, ha, geht gar nicht, ich hab ja gar
keinen, ähm, gar keinen freien, gar keinen freien pin mehr dafür, dann schließe ich
es gleich richtig an, schließe ich es gleich richtig an und zwar hier in die Klemmen rein,
dann mach ich es auch, dann mach ich es auch anders, dann mach ich das hier gleich mit
den, da hab ich nämlich noch ein paar passende kabels für, guckt, das kann ich da, kann
ich dann für ground nehmen, da weiß ich gleich, das hat passende farbe, nehme ich hier das
eine weiße für ground und hier noch ein übrig gebliebenes rotes irgendwo, wenn ich noch eins
hab, hab ich noch ein übrig gebliebenes rotes irgendwo, stop hier, ja, dann nehmen wir nämlich
gleich die kabel, dann haben wir auch gleich die richtigen farben für den sensor, so,
ich brauch den abisoliert champ, Leute, ich brauch den abisoliert champ, gucken, plopp,
oh, fuck, es geht nicht raus, weil ich vorne irgendwie was zusammengelötet hab, schon,
das zackt, ok, da muss ich nochmal, die sache nochmal kürzen, kürzen, nochmal abisolieren,
so, wunderbar, einmal, zweimal, wunderbar, so, dann schließen wir den ganzen crempel
mal an und gucken, ob es funktioniert, also, was brauchen wir denn, vcc ist das rote, ups,
falscher sensor übrigens, by the way, vcc ist das rote, ich hoffe, man sieht irgendwas,
das da, so, und ground ist, ja da, exellent, ja, und dann brauchen wir noch ein data pin,
data pin nehme ich jetzt erst mal so ein langes kabel und gut ist, ok, ich mach mal kurz den
ganzen kram aus, achso, kann ich das jetzt überhaupt vom raspberry pi abstöpseln und
die usb weiterleitung geht dann weiterhin, ich hab jetzt zwei varianten, entweder ich
machs aus und stöpsel es an oder ich machs on the fly, in der hoffnung ich schließ
nix kurz, weiß ich nicht, was die bessere variante ist, wahrscheinlich ausschalten,
wir müssen es ja nicht absichtlich kaputt machen, no risk, no fun, ja, ist klar, na gut,
ich muss es hier eh runter machen, ich komm ja eh nicht dran, ich komm ja eh nicht richtig
dran hier, kann ichs auch, kann ichs auch mal kurz ausmachen, so, also, gucken dass alles
richtig angeschlossen ist, plus 5 volt ist vcc und das andere ist ground, passt, das heißt
ich steck das mal in die klemmen rein und dann gucken wir mal, ob das ganze angeht,
vor die ärmel hochkrempeln, der cursor, exquisite cursor, so, also schauen wir mal, ich mach
mal kurz das kabel hier ab, dass ich besser dran komm, so, also einmal klemme, rein damit,
guckt, einmal hier und einmal, na kann man den kram vielleicht bisschen fest machen,
einmal an crown klemsorn, hoch, hab ichs nicht auf, exzellent, passt, ist dran, sicher, dass
es auch bloß 5 sind, ich hoffe mal, ansonsten smokes klein, so und als data pin nehmen wir
mal, was nehmen wir denn mal, 14, ok wunderbar, also passt, schließen wir mal in der hoffnung,
es geht nicht direkt kaputt, also merkt ihr schon mal, 14 gpio ist das dran, ok noch raucht
nix, noch raucht nix, der sensor ist übrigens by the way auch an, aber das ist auch klar,
dass der sensor angeht, weil guckt mal, seht ihr, erkennt ihr das, das grüne licht vom
sensor, der kennt man glaub ich nicht richtig, oder, der hat hier, der leuchtet grün, weil
er was erkannt hat, erkennt man, ok und wenn ich das zu halte, je nachdem, dann geht das
grüne aus, so, guckt jetzt das grüne aus, jetzt grüne wieder an, ok, so, also an 14
ist es dran, schauen wir mal, dass ich euch das display wieder gezeigt krieg, so, exzellent,
lassen wir es mal so hängen, wunderbar, so, natürlich ist das ding jetzt permanent auf
grün, weil die lampe hier drauf donnert, ne, aber wenn ich das hier mal zu halte, dann
gehts grüne aus, exzellent, exzellent, so, das werden wir jetzt versuchen mal zu detecten,
und das ist das teil, was dann den oberen, für das obere stockwerk den stromzähler
zählen lässt, gut, glaub so war besser, oder auch nicht, eben hatte ich es doch schön
positiont, warum ging das eben so gut zu positionieren, jetzt gehts nicht mehr, so jetzt, exzellent,
exzellent, sacked alter, so, sehr schön, oder auch nicht, aber es funktioniert, nice, ok,
alles klar leute, dann probieren wir es mal den kram auszulesen, ich will eigentlich,
dass ihr das grüne, ich will eigentlich, dass ihr die grüne led von dem ding seht, kann
ich euch das irgendwie so einblenden, dass man die grüne led gescheit sieht, jetzt oder,
jetzt sieht man es eigentlich ganz gut, ah, noch besser, guck mal, so ist perfekt, so
ist poggers, exzellent, wo kann man den keks unten links kaufen, nirgendswo, ok, so, also
pin 14, so, also von der idee her sollten wir das jetzt mal irgendwie auf die reihe
kriegen, dass wir den pin auslesen können, wenn licht an und aus geht, wir können jetzt
mal eine sache testen, ich kann mal das licht generell an und aus machen, ob das dann schon
dunkel genug ist, ah guck, jetzt ist grüne licht aus, und jetzt, wenn ich die beleuchtung
wieder anmache, geht auch das grüne licht wieder an, seht ihr das, also der erkennt,
der erkennt, dass es, der erkennt kurz, dass es lichteinfall gegeben hat, ok, sehr schön,
also dann gucken wir mal, wie wir die sensoren erkennen können, so und eine sache muss man
beachten, wenn man so input ausliest, es gibt die einfache variante, dass man einfach hier
direkt sagen kann, hier digital read und dann gpio, das problem ist nur, dass solche sensoren
mal ganz gerne dazu neigen ein bisschen zu bouncen, also sprich, der geht, also sprich
wenn das licht angeht, geht der sensor, oder wenn das licht ausgeht und das halt nicht
so schnell geht, dann ist der sensor eventuell einfach 5000 mal ganz schnell an und aus,
deswegen nehm ich da irgendeine library, die das ganze für mich schon debounst, also sprich,
die dann quasi nur einmal schaltet alle 500 millisekunden oder so, hat ha auch, ja aber
ich sende das nicht an ha, ich sende das nicht an meinen home assistant 5000 mal die
sekunde, dass der das debouncen kann, dann nehmen wir easy button nehmen wir dafür, so
und da hat hier irgendwo nen, der hat hier irgendwo nen example für interrupts, ach
ist schon, ha ist home assistant, dass das was ich für heim automatisierung und anzeige
verwende, so das brauchen wir jetzt hier, also wir brauchen nen button, easy button, button
pin, so das ist kein button, sondern, äh, wie nennen wir das denn jetzt, äh, sensor
LED, LED sensor oder nein, light sensor heißt das Ding, so, also include easy button und
wir haben es dran an GPIO 14, oder chat, hab ich die richtige erinnerung, funktioniert
ein Heizungsdashboard noch, ja, alles gut, funktioniert noch, gut, ähm, jetzt müssen
wir uns mal das Beispiel angucken, button begin on press, on sequence, on support interrupt,
also es gibt zwei varianten, wenn man schalter und buttons auslesen will, wie man das machen
kann, man kann das über interrupts machen, oder man kann das in der main loop machen,
ich persönlich bevorzuge das mit interrupts zu machen, ähm, was, willst du per camera
deinen Stromzähler auslesen, nee nee nicht per camera, ich bevorzuge das per interrupts,
weil man da nix verpassen kann, ansonsten in der main loop ist das mir n bisschen, hatte
ich schon Probleme mit, ja, über interrupts funktioniert das folgendermaßen, sobald der
button an oder aus, also sobald es registriert wird, ruft es ne funktion auf, die das dann
hochzählt, man darf da allerdings nicht zu lange brauchen, weil ansonsten die Kiste abstürzt,
weil die alles andere nicht mehr machen kann in der Zeit, wo es den interrupt ausführt,
da muss man n bisschen aufpassen, so, das heißt nicht button, das heißt light sensor, was
ich machen will ist folgendes, also, ich hab hier diesen controller, ich hab zwei sensor
an, einmal nen sensor, der licht erkennt und einmal nen sensor, der auf so nem alten drehscheibenzähler
erkennt, wenn der strich durchläuft, ich weiß, dass das funktioniert, weil ich hab
sowas bei mir ähnliches im keller schon hängen, und da dran hängt nen microcontroller, hier,
da, hier, man sieht ihn gerade nicht, aber doch da, neben hängt er, und der schickt
es dann per mqtt an meine heimautomatisierung, so, on sequence brauchen wir nicht, beginn,
supports, ich würde mal sagen, if supports interrupt können wir uns schenken, weil entweder
gehts oder geht nicht, weil sonst krieg ich ja gar nix mit, so, on button pressed, was
will der da haben, on button pressed, button pressed, ok, das gefällt mir nicht, machen
die denn da, so, sequence brauchen wir nicht, read, button pressed, kann man das mit lambdas
machen, wir müssen mal ausprobieren, vielleicht ist das, durch geht das schöner, also, das
wir quasi sagen können, so, on pressed, ok, jetzt kommt die wunderschöne 10 plus plus
lambdas und tags, geht das, potentiell, mag er das, ok, das würde funktionieren, äh,
ich kenn das bitbastleih-video, da hab ich sogar nen kommentar drunter geschrieben damals,
dass ich das ähnlich mach, da hab ich sogar nen kommentar damals drunter geschrieben,
hier, so, ok, das funktioniert, on button pressed, also kann ich das jetzt so rum machen,
ach, moment, das ist der interupt, ok, gucken wir mal, ob ich hier auch lambdas und tags
verwenden kann, weil dann brauch ich den kram da oben nicht, hoffentlich geht das, das ist
auf jeden fall die schönere variante, light sensor read, machen wir so, mag er das, frisst
er das, ah, yes, scheint zu funktionieren, sonst hätte es schon einen Fehler gegeben,
so, on pressed, so, und hier müssen wir jetzt eintragen, dass wir hochzählen, wenn, ich
glaub ich muss noch was zu trinken holen, dass wir den schrumpfverbrauch hochzählen,
wir machen das jetzt mal nur sehr, äh, prototypartig, also int, äh, total, nein das ist nicht total,
das ist, ähm, first floor energy, von null, wobei, leute, wir können jetzt super advanced
das c++ machen, wir nehmen kein int, sondern wir nehmen ein, wie heißt das, standard atomic,
das, weil wir greifen ja da von verschiedenen, wir greifen da ja von verschiedenen sachen
drauf zu, wir greifen da einmal aus dem interrupt drauf zu, und wir greifen aus der main loop
drauf zu, wobei im interrupt kann eigentlich nichts passieren, weil nichts anderes ausgeführt
wird, während der interrupt läuft, aber wenn der gerade, doch, doch, da kann was passieren,
wenn der gerade liest, der interrupt kommt, oder was auch immer, context switch, wie auch
immer, oder dann reinschreibt, oder dann wieder fortsetzt, ich glaub das ist wahrscheinlich
so die bessere variante, syncchamp, genau, ok, first floor energy, und dann haben wir
besser einmal zu viel gesynkt, als einmal, als einmal zu wenig, warum will der nicht,
incomplete type, not allowed, c++70, ah yes, weil, ach stimmt, man muss den kram include,
ja, hast recht, also, comic, ah nice, geht das jetzt, du kannst rust nicht gescheit verwenden,
hast du mal versucht, ja guck mal, rust sp 32, das ist übelst, äh, nicht aus, das ist,
äh, übelst outdated schon die versionen, die sie haben, ok, ach, 20 tage, ich hab nichts
gesagt, das letzte mal, wo ich geguckt hab, ähm, und sehr experimentell, müssen wir mal
ausprobieren, was magst du an c++ nicht, das fast machen wir nicht auf, sonst bin ich jetzt
fünf Minuten drüber zu erzählen, fünf Minuten und 50 Minuten drüber zu erzählen, was ich
an c++ nicht mag, das meiste mag ich an c++ nicht, also, es ist auf jeden fall besser geworden,
aber das heißt nichts, es ist immer noch kacke, also, ok, ok, eine, eine, eine sache, eine
sache, eine sache, ähm, zum beispiel, dass, dass, dass die sich ewig lang nicht drauf
festgelegt haben, und wir fangen mit was viel einfacherem an, mit was viel einfachem was
an c++ sagt, dass sie immer noch header verwenden, 2021, ich geb dir header alter, das ist doch
kein halo, warum machen die nicht ein ordentliches modulformat und gut ist, jede sprache der
letzten 50 jahre kriegt, ok, 40 jahre kriegt das halbwegs hin, 30 jahre, ähm, c++ nicht,
findest du c besser, ehrlich gesagt, c ist wenigstens konsistent, leichtgewichtig und
irgendwie in sich schlüssig, c++ nicht, ja, es gibt viele sachen, c++ 20 hat keine module,
das haben sie, glaub ich, auf 23 verschoben, ok, light sensor read, enable interrupt light
sensor, blablabla, ok, wir updaten jetzt unser display einfach mit den werten vom light sensor,
was für programmiersprache ich mag, ruby, c sharp, python, zum teil auch go, ich bin
mittlerweile sogar javascript magisch ganz gern, was ist der unterschied zwischen headern
und modulen, ich hab keine ahnung wie c++ module implementiert, wahrscheinlich kacke,
der große unterschied ist, du brauchst keine header mehr, du include, also was heißt du
include, du importierst ein modul und dann ist gut, das ganze meta daten zeug spricht,
welche metoden gibt's, nicht sachen doppelt importieren, passende abhängigkeiten, wie
was importiert wird, das macht alles dann für dich, die sprache oder der compiler macht
das dann für dich, bei c++ header hast du so ganz merkwürdige konstrukte wie if not defined,
pragma once include, blablabla, einfach nur um darüber hin wegzutäuschen, dass header
im prinzip nichts anderes ist wie reinkopieren, und das macht halt probleme manchmal, die
include reinfolge macht probleme, alles mögliche, das hast du mit modulen gar nicht mehr, du
hast dann auch eine einheitliche beschreibung, ich hab echt keine ahnung was mit c++ modulen
ist, zumindest würde ich das halt erwarten, dass es das abfackelt, eine einheitliche sache
was man exportieren will, was nicht, versuch mal templates, ahja klar, das soll natürlich
auch ordentlich funktionieren, ohne header, mein andere sprachen kriegen das auch hin,
deswegen verstehe ich nicht, ok mal go außen vor, go hat ja den google weg gemacht, wir
machen einfach keine generics, wir sagen einfach man braucht das nicht, in go die taktik bei
google ist eh geil, sobald was zu kompliziert wird, beziehungsweise zu anstrengend zu implementieren
sagt go einfach nein nein nein nein, das verwirrt die leute, das bauen wir nicht ein, ja go
kriegt jetzt nach 50 jahren mal generics, ja es gibt so viele sachen die mich nerven
an c++, die standard library ist auch krass inkonsistent, da merkst du richtig, dass in
der standard library die unterschiedlichen dinger von 50 verschiedenen leuten entwickelt
wurden, ich paste euch mal kurz was in chat, was ich letztens bei stackoverflow gefunden
habe, wie man den, wie man rausbekommt, wie die standard formatierung für das tausender
trend zeichen ist, also normalerweise würde ich folgendes erwarten, in einer halbwegs
normalen programmiersprache, würde ich sowas erwarten, ja, ich hab hier so ein print, irgendwie
print, was auch immer, print sonst was, so da kann ich jetzt in irgendeiner art und
weise formatierungsgedöns angeben und sag, ey komm ich will das formatieren, dezimal
10 stellen, was auch immer und an der stelle will ich dann keine ahnung meine zahl reinschreiben,
also so würde ich das erwarten, so und dann gibt es die sache, ok, tausender trend zeichen
punkt oder komma, so und jetzt kommt der hit, mittlerweile hat c++ im standard was
um sowas zu formatieren, das ist eigentlich ganz nice, wenn wir bringen später fmt, werden
wir auch noch include, dass man, ich mag fmt, da opfer ich auch gerne ein bisschen flash
speicherplatz für, so, so wäre das nice, so und jetzt kommt jetzt der hammer, wenn
man jetzt sagen möchte, hey ich will aber nicht den standard tausender trend zeichen
haben, sondern ich möchte einen punkt anstatt einen comma haben, dann würde ich erwarten
keine ahnung, entweder dass man das hier vorne machen kann, das ist hässlich, dass
man einen zusatz, einen zusatz parameter hat, irgendwie separator gleich sowas, übrigens
name parameter c++ auch nicht, was ich auch absolut kacke finde, c++ hat default, default
parameter aber keine name parameter, was das, was es eigentlich fast schon wieder sinnlos
macht, so, also sowas würde ich erwarten oder aber, oder aber dass man sagt, local.de,
das wäre auch noch ok, das wäre auch noch ok, aber wenn man rausbekommen will, wenn
ihr mal eine runde kacken wollt, wie man rausbekommt, was der aktuell gesetzte sensor, äh, sensor,
der aktuell gesetzte, ähm, tausender separator für ne länder setting ist in c++, ich habs
mir extra raus kopiert, weil es so schön ist, muss man das hier machen, aha yes, dazu
fällt der nix mehr ein oder, dazu fällt der nix mehr ein, trivial, trivial, wer macht
es denn nicht, ok, Leute, ich sehe wir machen absolut keinen progress, obvious, ok, wir
wollen jetzt auf dem sensor, äh, auf dem display ausgeben, was unser licht, light sensor
gesenzt hat hier, light sensor read, achso, onpress muss ich auch machen, onpress wollen
wir, äh, first floor energy++ einfach mal machen, so, und hier geben wir first floor
energy aus, äh, ich muss das wahrscheinlich erstmal in den string konvertieren, dass das
ordentlich funktioniert, ok, wunderbar, ich sollte jetzt mitten auf dem display eigentlich
null stehen haben, oh, warum, oh, habe ich nicht angeschrieben, ach, der export ist ja
weg, device not found, no exportable device, ich hab, ich hab, ich hab mein usb redirect
kaputt gemacht, da ist es doch, find, complete, attach, ah, yes, excellent, alles klar, ok,
jetzt upload, ja, ich kann, wie gesagt, ich habe für den fall der fälle, weil öfter
weiß ich, ich habe ein textdokument bei mir am start, das ist mittlerweile 103 zeilen lang,
und der titel ist warum c++ sackt, da hab ich nur so dinger drin stehen, weil, weil,
weil, es wird immer wieder drüber diskutiert, so nach dem, oh, aber so schlecht ist es doch
gar nicht, guck mal, da steht null, leute, es hat funktioniert, und jetzt ist die frage,
zählt das hoch, ok, jetzt, jetzt kommt der special moment, zählt das hoch, wenns ausgeht,
oh Mist, zu viel licht, ein fall aus dem fenster, es ist, es ist zu hell, es ist zu hell, ich
muss es zu, da, zu, hm, hm, hm, hm, hm, haha, ok, ja, ja, ja, ja, ja, ja, ja, ja, ja, ja,
Okay, wir machen wir machen serial output und gucken ob es funktioniert
Serial print press press it upload
Gpio 14, da ist es doch dran
Warum hast du das Z-Font in der Lupe? Weil ich ansonsten oben drüber was hatte mit dem kleinen...
Das funktioniert nicht
Das funktioniert der Button funktioniert nicht, warum funktioniert der Button nicht?
Habe ich irgendwas? Vielleicht sollte ich doch mal checken was der Typ im Beispiel drin stehen hat
If button supports interrupt, guck mal lassen wir das mal ausgeben ob das...
Was hat er übrigens für Schmerzen mit meinem Filesystem? Das kann ich mal wegmachen, das brauche ich jetzt nicht
Aber ob Smiths fällt ist erstmal egal
Gpio 14, hab ich doch
Upload, okay zeig mal her, habe ich das auch richtig angeschlossen? Gpio? Ich sehe es jetzt nicht
Leute, ich habe es falsch angestöpselt, guck mal
Guck mal, ich habe es an den Port für einen Analogsensor angeschlossen
Ich habe es den Analogsensorport angeschlossen, ich muss es an Digitalport anschließen
Geh aus Lichtsensor, geh aus
Geh aus, aus, es ist zu hell
Einmal press, der hat es erkannt, der hat es erkannt
Energy++, Upload, ausmachen, das ist irgendeine Mario Remix Playlist
Es hat geruckelt
Sorry Leute, die Kamera ist glaubt RIP
Oh shit, oh oh oh, ich muss das Kabel anschließen an die Kamera Leute
Ich habe das Stromkabel nicht dran gehabt, bald wäre die Kamera ausgegangen
Guck mal, es hat übrigens gezählt by the way
Boah übel, huge lag, was ist denn hier los, das ist massive lag gerade
Mal kurz reloaden
Ah yes, komm mal, seht ihr das?
Das funktioniert
Aus, an, also sprich bei jedem Lichtimpuls zählt der
Exzellent
Ok, von der Logik her klappt das ganze, wir sollten vielleicht hier nochmal einstellen
dass der ein bisschen empfindlicher ist
So, was kann man hier alles einstellen bei dem Button, das ist ja wirklich nicht wirklich
ein Button
Debounce Time, 35 Millisekunden
Für was ist das unsigned Int oder für was ist das U wahrscheinlich, also da können
wir auch durchaus mal 100 Millisekunden machen, schneller wird das Ding nicht play
Pullup Enable, äh
Active Low
Ah stimmt, Moment, jetzt ist die Frage, was ist besser, was ist besser
Moment, schaltet das?
Das schaltet beim ausgehen, guck
Das schaltet beim ausgehen
Ok, das müssen wir umdrehen, das muss schalten beim angehen
Ist gerade ein Zug vorbeigefahren, ja seht ihr, das ist das Problem, wenn es zu empfindlich
eingestellt ist
Da geht es total oft an und aus, dafür braucht man so eine Debounce Time
Ok, um das jetzt abzufangen sind 100 Millisekunden auch zu wenig, aber passt schon
Wir wollen, ja Pullup, meinetwegen, guck mal, by the way, dafür bräuchten wir jetzt die
named parameters
Hätte C++ named parameters, könnte ich jetzt einfach sagen, Active Low gleich
Geht aber nicht und deswegen muss ich den ganzen anderen Mist angeben
True und der ist false, das heißt er sollte eigentlich umgedreht schalten
Upload
Ok, also, dann machen wir jetzt nochmal Licht an
1, habt ihr es gesehen?
Das schaltet jetzt beim Licht angehen
Bäm, 2
3
Ok, das funktioniert, sehr gut, exell
OBS Ninja, das ist ein Github Projekt
Da bekommst, da kannst du dein iPhone, deine iPhone Kamera recht easy in OBS einbinden
mit
Ich hab das bei mir lokal laufen hier, das da ist das
Ok, das funktioniert schon mal, ich bin begeistert, exellent, exellent
Debounce Time 100 Millisekunden ist auch in Ordnung
Wir könnten das eigentlich noch deutlich höher stellen auf, keine Ahnung, 500 Millisekunden
so viel, so viel brauche ich nicht, das blinkt alle, alle Minute mal oder so
Das ist Manjaro mit E3WM
Natürlich ist es ein Github Projekt
Jemand ist auf Github gegangen, hat da ein Projekt angelegt
Sonst, wenn es kein Github Projekt wäre, dann würdest du es ja auf Github nicht sehen
Oh, oh, oh ja, es ist ein Open Source Projekt, welches auf Github gehostet wird
Da muss man es aber ganz, das, genau, genau, man benutzt auch kein Linux, sondern wir benutzen
nur noch GNU-Linux
Außerdem wissen wir alle, dass es nicht Github heißt, Leute
Chat, wie heißt das ganze richtig?
Ihr wisst das, es ist nicht Github
ShitHub, genau, korrekt
So, so viel ShitHub
Ich bin mal kurz schnell was zu trinken holen, dann bin ich gleich wieder da
Ich bin mal kurz schnell was zu trinken holen, dann bin ich gleich wieder da
Ich bin mal kurz schnell was zu trinken holen, dann bin ich gleich wieder da
Ich bin mal kurz schnell was zu trinken holen, dann bin ich gleich wieder da
Ich bin mal kurz schnell was zu trinken holen, dann bin ich gleich wieder da
Ich bin mal kurz schnell was zu trinken holen, dann bin ich gleich wieder da
So chat, ihr könnt euch aussuchen, was wir als nächstes machen wollen.
Den Temperatursensor, also den anderen, den Infrarot-Sensor, den können wir uns jetzt
erstmal sparen, der funktioniert exakt gleich wie der.
Wollen wir jetzt zuerst WLAN machen?
Also es gibt ein paar Tasks, die wir noch erledigen müssen.
Also wir brauchen, wir müssen WLAN einrichten auf dem Ding.
Wir müssen gucken, dass wir das auf die Air-Firmware updaten können, weil wenn das Ding im Keller
hängt, will ich vielleicht mal eine Firmware hochladen mit einem Bug-Fix und ich will nicht
mein Rechner anschließen müssen.
Also OTA müssen wir machen und, oder den Temperatursensor, also wollen wir WLAN gedünst
machen oder Temperatursensor als nächstes?
Könnt ihr euch überlegen, WLAN, ja übrigens, das mit Leak ist tatsächlich so eine Sache.
Wie habe ich das das letzte Mal denn gemacht?
Secrets, ich glaube so, das müssen wir mal gucken.
By the way, ich habe dafür einen extra Access Point bei mir jetzt gemacht für Stream, mit
einem WLAN extra für Streamsorn, ja, include Secrets, ok, testen wir das mal, const wifi
ssid gleich keg wait, by the way, ist falsch, ich will einfach nur wissen, ob das, wie ist
das jetzt richtig?
So, wifi ssid, ha, es wird nicht angezeigt, sehr gut, ah yes, exquisite, so ist das gut,
es wird nicht angezeigt, dann passt das, dann kann ich das hier reinschreiben, also Secrets,
so, da muss ich euch chat, chat, ich muss euch mal kurz aussperren, und es ist übrigens
auch nicht schlimm, wenn ich was leake, weil ich habe ein Access Point und ein WLAN nur
für ein Stream am Start jetzt mit sowas, äh, Moment, wo habe ich das Passwort?
Oh Gott, das Passwort wieder hier, Massive Passwort, ok, passt, kann euch wieder anschalten,
wifi pw, mal gucken, ob es uns anzeigt, nein, macht es nicht, alles klar, ich kann euch
wieder einschalten, ja, wenn es liegt, ist nicht schlimm, so, also, ok, dann machen wir
das jetzt mal, dann machen wir das jetzt mal mit WLAN, also, wir machen eine, jetzt wird
es ein bisschen advanced, jetzt wird es ein bisschen advanced, im Notfall das nach dem
Stream ändern, nee, ich muss es nicht ändern, ich habe ein extra Access Point mit einem extra
WLAN nur für den Stream, da kann ich einfach das Ding resetten und was neues vergeben,
es ist überhaupt kein Ding, also es ist überhaupt keine Auswirkung, wenn ich das leake, aber
ich will es trotzdem nicht leaken, äußer nie, nutzt du eigentlich OBS in einer VM, nee,
Windows Host, was diese ganzen CAC-Wörter bedeuten, das sind Emotes, ok, also wir brauchen
Void-WiFi-Reconnect, nennen wir das mal, Voipt, so, das Copy-Paste ich mir jetzt aus einem
anderen Projekt, weil ich habe keine Ahnung aus dem Kopf, was ich da alles gemacht habe,
ich versuche es euch einfach mal zu erklären, also, also, Wi-Fi-Include vielleicht noch
vorher, Wi-Fi-Hostname, haben wir sowas auch noch, ok, ok, das schreibe ich aber nicht
in Secrets rein, haben wir hier, Hostname, Wattchamp, brauchen wir sonst noch was, NTP-Server-Default,
was haben wir, was habe ich da gemacht, ok, gleich Default, also ok, ich versuche mal
zu rekapitulieren, was ich mir dabei überlegt habe, was hat er für Schmerzen, oh, TZ-Info
ist undefined, TZ-Info, wo habe ich das, Moment, Moment, TZ-Info, ok, ich glaube, das sorgt
sogar dafür, dass die Zeitzone richtig gesetzt wird, wenn ich das richtig gemacht habe,
das ist glaube ich alles in Ordnung, ich glaube, der zeigt sinnlose Fehler, oh, also, was ich
verkehrt, also, was das Ding macht ist, was habe ich da, ich bin verwirrt, was ich da
gemacht habe, also, das kann ich wohl direkt machen, geht das so, uns das was ich da gemacht
habe, die Statusleistung ist Powerline, ok, das scheint zu funktionieren, ah, Moment,
Moment, Moment, ah, Max, Max, was machst du da, stimmt überhaupt nicht, was ich da mache,
das muss zwingend, glaube ich, ein NTP-Server Default sein, Wifi, NTP-Server, ok, ich bin
echt so ganz sicher, warum ich das so gemacht habe, aber alles klar, also, was ich mir dabei
gedacht habe, soweit ich das, soweit ich das erkenne, ist folgendes, also, der schreibt
erstmal, er reconnectet sich, disconnectet alles, falls noch was da ist, automatisches
Connecten schaltet er aus, er setzt den Hostnamen, er startet das WLAN, dann wartet er, dass
das WLAN abkommt, 10 Sekunden lang, dann setzt er, dann setzt er den NTP-Server, warum kein
Auto-Reconnect, ich bin mir ehrlich gesagt nicht so ganz sicher, warum kein Auto-Reconnect,
kann ich jetzt nicht so genau sagen, dann setzt er den NTP-Server auf die Gateway-IP, weil
ich jetzt einfach mal davon ausgehe, wenn das auf die Fall steht, ist das was ich haben
will, so, jetzt schauen wir mal, ob das funktioniert, wir schauen jetzt mal, ob der sich connecten
kann, WLAN-mäßig, so, also, start, setup, haben wir hier einen Delay, Delay 500, dass
die Zeit hat mich zu attachen, so, und jetzt sagen wir, Wi-Fi reconnect, ob das jetzt funktioniert,
ich hab da so meine Zweifel, Upload, hol dir doch die Gateway-IP vom DHCP, das ist, das
ist die Gateway-IP vom DHCP, das ist die Gateway-IP, die ich per DHCP gekriegt habe, so, und
funktioniert das jetzt, reconnect, reconnect, cac-wait, cac-wait, ah, ich hab meinen Access-Point
ja noch gar nicht angeschlossen, kann ja gar nicht funktionieren, sehen wir auch gleich,
was im Fehlerfall passiert, Wi-Fi connect failed, rebooting, ok, wo ist der Access-Point,
da, warte mal, klick, der sollte jetzt eigentlich hochfahren, kurz in meinen, kurz in meinen
Router gucken, ob, ob das Ding sich irgendwo meldet, das braucht ein bisschen zum starten,
das ist so ein Access-Point hier, Mikrotik-Light, so, den kleinsten, nee, nee, nee, nee, nicht
UHP, MP-Light, Map-Light, das Ding, das ist ein mini, also mini, furz mini Access-Point,
der ist, der ist ein paar Zentimeter groß nur, kostet auch nur 20 Euro, aber für so kleine
Test-Sachen ist das optimal, so, 2137 hat das Ding als IP, der Access-Point, alles klar,
aber der Connect funktioniert nicht, warum nicht, ja Router OS ist echt Wissenschaft
für sich, Wi-Fi Connect failed, ich mach mal kurz den Timeout noch ein bisschen höher,
ich hol mal schnell mal ein Tablet und guck mal, ob der Access-Point auch da ist, ja,
ich check immer, ob der Access-Point auch erreichbar ist, mit dem Handy kann ichs ja
nicht so schlecht machen grad, ah, im Moment ist es heißt anders, Cacquade, die SSID ist
falsch, die SSID ist falsch, so, und jetzt hoffen wir, dass WLAN funktioniert, come
on please, give energy chat, reconnect, ich glaub, das ist gut, wenn da eins steht, ich
bin mir nicht ganz sicher, ob das gut ist, aber ich glaub, das hat funktioniert, da
steht eins, da steht eins, eins ist auch mal ne gute Ausgabe, ok, ich glaub, es hat funktioniert,
wir gehen und wir lassen uns mal die IP ausgeben, wo geb ich denn hier eins aus, äh, Print,
ach hier, ok, Wi-Fi reconnect und da kommt jetzt hier Serial, Print und zwar Wi-Fi, IP,
Local IP to String, Upload, ah, yes, ihr seht, wie viel länger das Sketch zum Hochladen braucht,
nur weil ich WLAN drin hab, by the way, ist euch das mal aufgefallen, das Ding ist einfach
50% größer geworden wegen WLAN, ok, 2.138 bekommen wir, excellent, IP ist am Start,
warst du das mit dem Arduino, ja so halb, das ist ein ESP32, aber die haben ein bisschen
Arduino Zeug drum rum gestrickt, ja, wobei ich tatsächlich auch relativ viel eingebautes
ESP Zeug verwende, oftmals, warum kein 2866, weil ich das mit dem ESP viel angenehmer finde,
zum Beispiel, weil man ne Sache machen kann, die ich jetzt mache, da muss ich mir ein paar
Helper Sachen mal copypasten aus meiner, äh, anderen Project, Helper Punkt, Hedder, ich
geb dir Hedder, wir müssen uns zwei Sachen rüber kopieren, einmal das da, und einmal
das da, Moment, ne, was muss man da alles noch machen, ich kopier einfach die ganze
Datei, hab ich da irgendwas drin, was man nicht zeigen darf, NTP, Arduino Strings, Split,
ne, ok, Helper, Helper Class, easy, brauchen wir, zack, weil viel Passwort liegt, ne, da
ist nix liegt, genau, ok, so, und jetzt können wir sagen, include Helper, so, und jetzt können
wir nämlich so Sachen machen, wie, ich hab mir da so einen kleinen Wrapper gebastelt
für die, für den eingebauten zweiten Core, also sprich, der ESP32, der hat ja zwei CPU-Kerne,
und man kann das mit den eingebauten Sachen machen, man kann das mit der C++ Standard
Task, was auch immer Library machen, das Problem ist, dass die, standardmäßig die
Speichergröße für die Task so klein ist, in C++, witzigerweise stellen die das glaube
ich auf nur 512 Bytes, und sobald du ein bisschen was größeres in so einem Thread machst,
kackts ab, deswegen hab ich mir so einen eigenen Mini-Wrapper drumherum gebastelt, das ist
alles, wer macht das nicht, ja, ich weiß gar nicht, was ich da gebastelt hab, den nageln
mich jetzt nicht, denkt nicht, das ist irgendwie geil, was ich da gebastelt hab, ich weiß
gar nicht mehr, was ich da genau gemacht hab, also, ich erstelle einen Task auf dem ersten,
auf dem zweiten Core, Default auf dem zweiten Core, einen Task, und ich führe die Funktion
aus, die ich übergebe, das ist ein bisschen, wie man in C-Sharp einen Standard-Task, keinen
Standard-Task, einen Task laufen lässt, ja, das ist ein Namespace, das ist ein Namespace,
helper ist ein Namespace, so, run, und jetzt kommt das Coole, was man machen kann, ähm,
warum kein ESP-266, weil, was man jetzt machen kann ist, man macht einen zweiten Thread auf,
äh, zum Beispiel, halt so, wie man es hier sieht, das kann man auch, wie gesagt, man
kann auch sagen, Standard-Thread, nee, Standard, ich hab gar keine Ahnung, was die Standard,
doch Standard-Thread ist, glaube ich, bei C++, könnte man auch machen, aber ich hab so
einen eigenen Mini-Wrapper gebastelt, einfach, weil mir viele Sachen schon oft, da sind
auch ein paar andere Sachen drinne, also Sachen, die mir auf den Keks gegangen sind, so, und
jetzt kann ich nämlich im Hintergrund immer checken lassen, dass W-Lan und so funktioniert,
also, machen wir jetzt mal diese, diese, huge, beautiful Lambda-Syn-Task wieder rein, so,
Endlosschleife, while true, Delay, einfach schlafen, 1000 Millisekunden, so, und da drinne
kann ich jetzt zum Beispiel sagen, if Wi-Fi connected, oder is, is not connected, dann
Wi-Fi reconnect, das heißt, ich kann permanent checken lassen, ob mein W-Lan in einem zweiten
Thread, das heißt, ich muss das nicht in meiner Main-Loop hier drinne rumsauen, wie liest
du denn die Zähler überhaupt aus, äh, wie gesagt, unter anderem mit, äh, LED, die an
dem Zähler dran ist, und da kommt der Sensor dran, du siehst, wenn Licht, wenn Licht an
und aus geht, zählt der hoch, ja, der hat ein bisschen Probleme mit dem Fenster, wie
ihr hier grad seht, das geht jetzt, das geht jetzt grad ganz schnell an und aus, das Ding,
weil Licht im Fenster reinkommt, jetzt hab ich die Hand drüber, dafür braucht man ein
Deep Bouncing, das zählt jetzt nur alle 100 Millisekunden hoch, so, und, äh, das lese
ich damit aus, den einen Sensor, den anderen Sensor lese ich aus mit einem anderen Infrarots,
äh, LED-Sensor, der erkennt, wenn die Scheibe beim Zähler durchgelaufen ist, das funktioniert,
so, und ich lass jetzt die ganze Zeit im Hintergrund checken, ob, äh, weil ich hatte schon öfters
mal Probleme, dass, äh, wenn ich das, äh, den Controller, keine Ahnung, nen Tag hab
laufen lassen, dann hat es Verbindungen zum W-Lan verloren und hat nie wieder ne Verbindung
zum W-Lan aufgebaut, deswegen, das war übrigens der Grund für, warum ich Auto Connect und
Auto Reconnect auf False gesetzt hab, das war der Grund, das hat rumgebackt bei mir,
ähm, das hat rumgebackt, ich hab am Anfang auch immer gesagt, Auto Connect, Auto Reconnect
und der hat manchmal nach einem Tag das W-Lan verloren und das hat nie wieder, hat nie wieder
das W-Lan gestartet, deswegen hab ich mir sowas gedacht, ich lass einfach im Hintergrund
permanent checken, ob, äh, ob das Connected ist, wenn es nicht Connected ist, Connecten
ist, wenn es sich nicht Connecten lässt, dann startet er neu, wie setzt du den Absolutwetter
am Anfang, äh, welchen, was, wo, Bit Connect, so, das ist schon mal gut, so und ich geh
noch mal auf Nummer sicher, dass auch alles mit der Verbindung funktioniert, jetzt, das
könnte man, könnte man sagen, ich bin super pingelig, aber, ich hab keinen Bock, dass
die W-Lan Verbindung hängt, wir pingen jetzt auch regelmäßig unseren Gateway und gucken,
ob das funktioniert, na, dass die Zahl in der Software gleich, der am Zähler ist, ach
so, äh, die kann ich übers Webinterface später setzen, so hab ich mir das zumindest vorgestellt,
das Webinterface setzen, oder ich schreib die Initial Hardcoded rein und upload in den
Sketch, wo das Hardcoded drin steht am Anfang, muss ich mal gucken, wahrscheinlich lass ich,
wahrscheinlich mag ich übers Webinterface, kriegt so ne, so, rudimentäres Webinterface,
pingen den Gateway auch noch, das Copy-Paste ich mir, by the way, jetzt auch mal aus dem
anderen, ah, gut, das heißt, ercheckt ist das, oh, ah, das hab ich mitkopiert und das
gibt's hier nicht, ok, alles klar, ich hab nix gesagt, das brauchen wir jetzt nicht,
äh, ich schreib das aufs Filesystem, FMT, oh, ich hab hier Sachen für Format drin,
ah, exzellent, ok, dann muss ich die Format-Library noch reinmachen, hab ich das einzige, wo ich
das drin hab, ok, das mach ich, das mach ich später, das will ich jetzt noch nicht machen,
das ist zu viel auf einmal, ok, exzellent, FMT beste, ja, dafür opfer ich gerne auch
ein paar Flash, bisschen Flash-Speicher, bevor ich mich hier mit Printline und anderen Konsorten
rumschlage, da mach ich das lieb, habt ihr übrigens gesehen, wie fett das geworden ist,
es war bei 20, 25 oder 20, 25% und jetzt nur durch den WLAN-Treiber ist aber 65% Sketch-Size,
der Sensor bekommt das mit der Zehlscheibe mit, ja, guckt mal, der Sensor bekommt das
mit der Zehlscheibe mit, der hier nicht, der ist für die LED, die blinkt, aber der Sensor
bekommt das von der Zehlscheibe mit, du siehst, der Sensor, der hat zwei LEDs, eine Infrarot-LED
und Infrarot-Empfänger und wenn der unterbrochen wird bzw. die Intensität sich ändert, dann
erkennt der das und gibt den Signal weiter und wenn man das auf die Scheibe richtet und
auch dann der schwarze oder rote Strich durchläuft, dann erkennt es der Sensor, dass die Intensität
nachlässt und er weiß, aha, Signal, das funktioniert, das habe ich bei mir schon im Keller hängen,
das geht, also das ist, wie viel kostet so ein Ding, nur 5 Cent oder so, bei Aliexpress,
weiß nicht, wenn du bei Amazon guckst, IR-Line-Sensor, ich bin mir jetzt gar nicht sicher, nach was
ich suchen muss, nope, so nicht, ja, wir nähern uns der Sache, ok, ich habe ehrlich gesagt
keine Ahnung, was ich suchen muss, Barrier, Barrier, Barrier-Sensor, meine Upgrade-Library,
ne, das mit HTTPS, das ist mir zu buggy, sowas hier, genau, die da braucht man, TCRT5000,
ich mache zum HTTPS das Update und ich verwende auch was Fertiges, die da brauchst, ok, 5
Stück, viel zu, wenn du bei Aliexpress guckst, wie gesagt, das Kram ist mega billig, guck
mal, 26 Cent, oder aber du kaufst dir einen Pack, 10er Pack, 1144, bei den da wollen wir,
ah, guck mal, da ist die Anordnung anders, mal horizontal, mal vertikal, ah, guck mal,
hier, das ist Geld mit dem, was man bezahlt, ah, das ist dann doch nicht so günstig, wenn
das, ah gut, das ist bei Aliexpress, kostet es jetzt tatsächlich was, ach, Moment, ich
hab jetzt, ich hab jetzt 100 bestellt, oder, hab ich jetzt 100 bestellt gerade, weil das
sind 10 Pieces, ach, ich hab 100 bestellt, great, ok, 100 für 30, für 40 Euro, ok,
also einer, 10 Stück, also 10 Stück, 10 Stück für 5, 6 Euro, 650, ja, also ist nicht teuer,
die ganzen Sensorkram sind nicht teuer, ok, also jetzt sollte sich WLAN technisch zumindest
verbinden, hab ich eigentlich schon das WLAN Passwort irgendwie geleakt, ich hoffe nicht,
er zeigt es aber auch glücklicherweise nicht an, ok, nice, nice, guck mal, reconnect, wunderbar,
ok, dann machen wir das jetzt mit dem Display noch ein bisschen schöner und dann machen
wir noch OTA, dass wir das updaten können über den Browser, also wir werden das so
machen, wenn, ok, jetzt muss ich mal kurz in mich gehen, also, wir sagen starten, ich
brauch auf jeden Fall das File System, wir formatieren ein, nee, ich brauch auf jeden
Fall das File System, um Sachen drauf zu speichern, was hat er denn für Probleme, warum mag der,
das, also ich muss nämlich den Zählerstand drauf speichern, wenn ich neu starte, den
aktuellen Zählerstand, deswegen, ich brauch auf jeden Fall Flash Speicher Zugriff, weiß
nicht was, ich weiß nicht warum der mounted failed hat, ich glaub ich muss einfach einmal
Flash, einfach einmal reflashen, dass das funktioniert, machen wir mal über Kommandozeile,
Documents, Project, der Watt, der Wattchamp, ich glaub, oh was war das, Upload, keine Ahnung,
Erase, Flash, wie ging das nochmal, ich benutze, genau, ich benutze Anjaro mit die 3 WM, Erase,
ich muss den Speicher mal löschen, dass ich den Flash Speicher richtig ansprechen kann,
was, ach deswegen, hä, warum hab ich das nicht in meinem Pass drin, muss ich das jetzt
verstehen, ok, Flash löschen, T, was, run, T, Erase, exquisite, auf, mach platt das Ding,
Wattchamp, irgendwie mag er nicht, wir können auch noch, ich kann euch noch was cooles zeigen,
wir können die Partitionstabelle, also, Partitionstabelle hört sich jetzt ein bisschen hochtrabend
an, ja, aber man kann, also standardmäßig hat das 4MB Flash und man kann, weil ich
es hier gerade sehe, man kann die unterschiedlich einteilen, was, der soll erstmal, der soll
erstmal Flash, Flash löschen, und man kann das unterschiedlich einteilen, Standard-Einteilung
ist glaube ich von diesen 4MB, ist glaube ich 1MB für die Firmware, 1MB für Update
Firmware und 2MB für Dateien, wenn man jetzt allerdings mehr Platz, oh, ich muss den Monitor
ausmachen, deswegen geht das nicht, wenn man mehr Platz braucht, kann man das ändern,
ich kann euch auch mal zeigen, wie, das ist tatsächlich ganz nice, weil bei dem Projekt
brauche ich eher weniger Speicher für zusätzliche Dateien, nur ein paar Bytes, aber es könnte
sein, dass die Firmware relativ groß wird, jetzt hat das resettet, ok, und das kann man
folgendermaßen machen, also jetzt, ich kann euch ja zeigen, dass es funktioniert, also
wenn ich ihn jetzt frage, wie groß ist die Firmware, dann sagt er, ok, 65% vom Flash-Speicher
sind belegt, also 65% von diesen 1,3MB, also der macht 1,3MB für die, also, der teilt
sein Flash, Flash Partition, da gibt es bestimmt ein schönes Bild für, genau, also, der macht
standardmäßig, teilt er sein Flash ein, das sind 4MB Speicher, so, und, der macht 1MB
oder 1,3, in dem Fall MB für die Firmware, die wir jetzt drauf haben, nochmal 1,3MB für
die Firmware, dass man nämlich Updates machen kann im laufenden Betrieb, und dann auch Filesystem,
so, und das kann man ändern, das kann man ändern, und zwar, das machen wir jetzt mal,
wollte ich nämlich eh schon machen, und zwar gibt es dann irgendwo, kann man eintragen,
Outbuild Partitions, genau, hier, so, und jetzt merkt ihr euch, wir haben 65% belegt
bei unserer Firmware von 1,3MB, so, und jetzt trage ich das hier mal ein und lasse den neu
bilden, mit neuer Partitions-Tabelle, jetzt werdet ihr gleich sehen, jetzt haben wir eine
ganze Ecke mehr Platz, ich lese gleich, ich scroll gleich, chat noch mal alles durch,
falls ihr irgendwas über seht, schreibt netwoblos dabei, guck, und jetzt haben wir nur noch
mit der Firmware 43% von 2MB belegt, also sprich, der hat einfach den Flash-Speicher,
die hintere Partition, ein bisschen verkleinert, sodass ich mehr Platz für meine Firmware
hab, eigentlich ne ganz nette Geschichte, dass man das, so 5, 6 verschiedene Presets
gibts da, wenn es überhaupt nicht ausreicht, kann man auch ne eigene Partitions-Tabelle
machen, in CSV, weiß nicht warum die sich gedacht haben, Partitions-Tabellen sind gut
in CSV zu machen, man weiß es nicht genau, ok, also wir haben Wlan, ups, also wir haben
Wlan-Verbindung, achso, der kackt übrigens ab, weil ich gerade meine Firmware gelöscht
hab, muss ich die Firmware nochmal neu hochladen, so, ok Leute, also, wo sind wir stehen geblieben,
also wir haben jetzt Verbindung, wir haben jetzt Verbindung zum Wlan, Mounting-Spiffs,
warum?
Warum, warum failt der?
Format True, Flash kaputtgeschrieben, Quatsch, weil das Ding, er hat jetzt kein Real Level
wie ne SSD, aber von zweimal schreiben ist er bestimmt nicht kaputt, ich muss einfach
nochmal löschen, im Zweifelsfall hilft das, ohne Mist, es hilft wirklich, mehrfach löschen,
Spiffs Mounted Fail, ok, google, Spiffs Mounted Fail, ok, was hat der für Schmerzen, ein
der Flash ist nicht, warum ist der Chat so scharf drauf, dass man Flash RIP ist, Erase,
ich lösche es jetzt nochmal, dann gehts, passt auf, what the fuck, ey, mit den alten
sehr billigen 286 Dash kann das sein, aber nein, nein, der ist, oh Mist, der ist garantiert
nicht kaputt, der Flash, ganz bestimmt nicht, das ist, das buggt manchmal ein bisschen,
das hab ich schon öfters gehabt, ja das mit der Partitionstabelle kann tatsächlich sein,
aber ich hab ja gelöscht, also das sollte, eigentlich sollte er das checken, das wars
mit dem Flash für immer, ja irgendwie werden wir den Flash schon zum Leben wieder erwecken,
warum, Mounting Spiffs Failed, kann das sein, weil ich das hier, warte mal, ich hab doch
hier in diesem Helper nochmal drin stehen, Prick übrigens, der Name ist Programm, was,
wo ist das Problem, ok, True, schreibe True rein, er formatiert das halt meinetwegen,
warte mal, äh, wat, ah, Upload, nein, nein, der Flash ist nicht RIP Leute, im Zweifel
verlöten wir neu Flash genau, der Flash ist garantiert nicht kaputt, redet das nicht
herbei Chat, dass der Flash kaputt ist, ok, hat das jetzt funktioniert, hat das jetzt
funktioniert oder war ich einfach, oder war ich einfach nur nicht schnell genug, probieren
wir mal, probieren wir mal aus, äh, Spiffs Exists, gucken wir mal, wir tun einfach mal
so, ob irgendeine Datei existiert, lalala.txt, so, und wenn das mit nem Fehler klappt, dann
weiß ich, dass das funktioniert, ich hab kein Board mehr, wenn jetzt der Flash kaputt ist,
hab ich ein Problem, der ist nicht kaputt, der Flash kann nicht kaputt sein, siehste,
Flash geht, einfach nur ein paar mal, einfach ein paar mal cleart und jetzt funktioniert's,
exellent, sehr schön, so, das war jetzt hier weg, und jetzt klappt's auch, also, sehr
schön, gut, Flash ist nicht kaputt, so, jetzt können wir mal anfangen, also, äh, wir initialisieren
das Serial, wir initialisieren den Flash, wir sagen, äh, Display Init, by the way, das
können wir, müssen wir übrigens gar kein Delay hinmachen, Init Set Contrast, kann man
auch Screen Set, was haben wir noch, Set Brightness, 255, wird das dann heller, wenn ich das noch
hoch mach, oder ist es Default, Set Contrast Set Brightness, gucken wir mal, was passiert,
wenn ich hier den, ist das dann irgendwie, ob das dann irgendwie heller wird, oder so,
Flashbang Screen, ja, Leute, geht in Deckung, und, und, und, Postchamp, Postchamp, Postchamp,
Nö, sieht exakt genauso aus, dann glaube ich, kann man sich den Kram auch komplett sparen,
ähm, okay, also, Clear Screen kann man sich auch sparen, weil, warum will ich was clearen,
was grad frisch, äh, dran kommt, so, äh, Screen, dann setzen wir Set Font, äh, ne,
wie ging das, äh, Set Font, Font, äh, dann nehmen wir nämlich als Speicher, als, als
Font, den kleinen, so, und jetzt schreiben wir ein bisschen Debug beim Starten, also,
fangen wir mal an, ähm, Screen, Draw, String, und da schreiben wir jetzt erstmal einfach
nur, dass ich weiß, dass es funktioniert, Punkt, Punkt, Punkt rein, und zwar ganz an
Anfang, okay, Screen, Display, sehr schön, so, dann mach ich Wi-Fi Connect, nachdem ich
Wi-Fi Connect mache, ähm, geben wir die IP aus, Moment, mach ich das nicht hier schon
irgendwo, ach, mach ich hier schon, lull, da geben wir die IP aus, dass ich weiß, dass
ich connected bin, äh, Local IP, und, ähm, was machen wir ansonsten noch, wir können
auch IP Adresse da vorschreiben, oh, die Mario Musik, Alter, jetzt wollen sie wieder wissen,
Gachi Bass Music, du, du, du, du, IP, können sogar sagen Print, dann steht es auf einer
Zeile, okay, ähm, so, dann starten wir den, das WLAN-Task-Gedöns, hier könnten wir nochmal
Delay machen, dass auf jeden Fall Display und so initialisiert ist, so, dann connecten
wir uns zum WLAN, da geben wir die IP aus, dann schreiben wir die IP aufs Display, würde
ich sagen, Display, ach, nicht Display, Screen, ich hab's ja umbenannt, Display, äh, Brindeln,
und zwar die IP, und zwar jetzt auf links oben, 20 Pixel nach unten, Tool String, jetzt
pass auf, jetzt wird's eklig, das mag er nicht, weil, äh, ach, Moment, es ist ja auch Draw
String, lull, verschrieben, okay, da schreiben wir jetzt die IP drauf, Screen, Display, so,
da weiß ich so auf jeden Fall schon mal jetzt, was los ist, wenn das Ding neu startet, uploaden
wir mal, so, der sollte jetzt booten, sich verbinden und danach die IP anzeigen auf dem
Display, zumindest kurz, muss mal aufs Klo pinkeln, ja, okay, schauen wir mal, ob das funktioniert,
Reboot please, Punkt, Punkt, Punkt, Connect please, Connect, Connect, Connect, oh, das
ging jetzt zu schnell, habt ihr die IP gesehen, ich hab nicht hingeguckt, er hat sich connected,
er hat, er hat sich quasi, komm, sind wir mal so nett und machen Delay von 100, dass
wir nicht so eine Chance haben, das zu sehen, du hast gesehen, ernsthaft, okay, nice, ich
hab's nicht gesehen, ich hab nicht, ich hab nicht genau hingeguckt, so, jetzt müssen
wir noch dafür sorgen, dass wir neue Firmware hochladen können und ich hab mir sowas mal
selbst gebaut über HTTPS, das verwenden wir jetzt nicht, ah, da war's, habt ihr's gesehen,
ganz kurz war die IP am Start, excellent, also falls das hängen bleibt, dann, dann passt
das, so, das brauchen wir, so, und jetzt müssen wir noch für eine Sache vorsorgen und zwar
sollte ich das Ding mit Firmware Updates kaputt machen, da muss ich sicherstellen, dass ich
die Chance hab, eine neue Firmware zu flashen, sollte ich eine kaputte Firmware geflasht
haben, ich hoffe, man versteht, was ich meine, also stellt euch vor, ich uploade eine neue
Firmware, das Ding hängt im Keller und ich kann keine zweite Firmware uploaden, das wird
ziemlich, ziemlich sackt, ja, was war die Frage, wie steuerst du den an und überträgst den
an?
Also, das ist ein bisschen advancedere Geschichte für den Stream, hier neben dem Raspberry
Pi, da ist der USB angeschlossen, der Controller, und ich hab auf dem Raspberry Pi mein USB,
äh, Device, was der erkannt hat, mein USB-Port, geshared übers Netzwerk mit meinem Desktop-Rechner,
einfach nur, damit ich das hier stehen lassen kann, die Kamera am Start ist, ich euch was
zeigen kann, und ich halt trotzdem am Desktop entwickeln kann, normalerweise würde man das
einfach per USB an den Rechner anschließen und uploaden und gut ist, so, und jetzt kommt
meine Big Brain selbstgebastelte Klasse zum Tragen, ich weiß nicht, ob das, äh, wahnsinnig
durchdacht ist, und zwar, ich hab mir sowas gebastelt, für den Fall der Felder, ich's
kaputt machen, nehm ich eine Brick Guard, so, und dann kann ich sagen, Last Boot Successful,
wenn Last Boot nicht Successful ist, dann machen wir nen Delay von 45 Sekunden, dass
ich die Chance hab, ne neue Firmware hochzuladen, bevor es wieder crasht, versteht man was
ich mein, also stellt euch mal vor, das Ding hier steht am Arsch der Welt, ihr ladet ne
neue Firmware hoch, und die Firmware hat nen Bug, und das Ding crasht immer wieder und
startet sich neu, USB IP verwende ich, ja, und hier hab ich jetzt einfach 75 Sekunden
Zeit, wenn es nicht richtig gestartet ist, die neue Firmware hochzuladen, so, und das
funktioniert folgendermaßen, das ist eigentlich total simpel gelöst, ähm, ich leg ne Datei
an auf dem Filesystem, die Setup OK heißt, wenn es die Datei gibt, Setup OK, dann bedeutet
das, der Boot war erfolgreich, und wenn's die nicht gibt, dann bedeutet das, der Boot
hat nicht funktioniert, das heißt, der letzte Boot, der letzte Boot hat nicht funktioniert,
das heißt, wenn ich einmal meine komplette Logik durchlaufen habe, und ich weiß, dass
meine neue Firmware funktioniert, muss ich quasi einmal sagen, äh, quasi hier so nach
dem Motto, Set Boot Successful, ob das so die Weisheit, der Weisheitsletzter Schluss
ist, weiß ich nicht, aber es funktioniert auf jeden Fall, so, wieso Delay und nicht
Endlosschleife, äh, weil Delay die CPU-Zeit abgibt an andere Tasks, und Endlosschleife
eben endlos ist, und ich brauch ja noch ein bisschen CPU-Zeit, wenn ich ein neues OTA-Firmware
hochladen will, aber beschreibst du die Datei da nicht die ganze Zeit, das ist tatsächlich
nicht so sinnvoll, das stimmt, aber bis jetzt ist mir noch kein Flash kaputt gegangen, ja,
ist nicht, ist nicht so sinnvoll, man könnte zum Beispiel jetzt sagen, dass man sagt, äh,
once oder so, aber wie ging das, Standard Once, Call Once, Call Once, nee, gibt's nicht,
was muss ich da include'n für, thread, mutex, okay, wir machen jetzt C++-Magic, geht das,
Call Once, geht's, ein Flag, nein, nein, wir wollen das mit exquisite C++-Botmitteln machen,
das geht aber nicht, kann der wohl nicht, dann machen wir das anders, dann merken wir
uns das einfach, wenn das okay war und gut ist, das C fehlt echt, oh, achso, nee, findet
er aber auch so nicht, okay, probieren wir nochmal, aber ich glaube, findet er auch so
nicht, ne, nee, kann er nicht, okay, was auch immer, was auch immer, welcher C++-Standard
ist das, 11, warum ist das hier nicht drinne, warum kann er das nicht, ist doch C++-20 angeblich,
vielleicht ist das include-experimental drinne, once, nee, ich hab keinen Plan, alter, C++,
please, standard call once, once flag, okay, und warum genau findet er das nicht, oh, blieb,
oh, guys, C++, nein, nein, stopp, was war denn das, alter, darf ich hier drinnen nichts
include'n, muss ich das oben machen oder wie, ah, ah, okay, wenn man das oben include'n,
dann funktioniert's auch, alles klar, works as intended, so, und wie macht man das jetzt,
call once, aha, aha, excellent, call once flag, was, was mach ich hier überhaupt gerade,
was, was mach ich hier, okay, excellent, C++-Stands mach ich, flag, so, perfekt, so, und jetzt
sollte das nur noch einmal aufrufen, sehr schön, hoffentlich funktioniert das jetzt, ah, yes,
ah, yes, exquisite, exquisite, sehr schön, was auch immer es jetzt genau tut, er sollte
es nur noch einmal pro Boot machen, alles klar, sehr schön, oh, set, boot, successful, einmal
durchgelaufen, wunderbar, richtig Pfeiffer, aber massive, die haben echt so'n Mist, ja,
das ist C++, alter, was erwartest du, okay, ich bin jetzt ein bisschen aus dem Konzept
gekommen, wo bin ich denn entstehen geblieben, ich hab, ich hab'n Linux-Desktop mit unterschiedlichen
Desktops und, also Linux, Linux VM mit unterschiedlichen Desktops und ich hab'n Windows Host drunter,
wo ich aus der VM raus switchen kann, relativ schnell, mit Windows Shortcuts, okay, so, und
jetzt müssen wir OTA einbauen, Standard String ist nicht gescheit, nein, ich glaube, die
Standard C++ String Klasse ist so ziemlich die schlechteste String Klasse, die von allen,
von allen modernen Sprachen, man darf nicht vergessen, die hatten bis, bis, bis vorletztens
Standard, hatten die nicht mal oder haben immer noch nicht, too lower, too lower und
uppercase drinnen, auch kein Split oder irgendwas, nix, zu übelster Crap, ey, genau, Standard
too lower, wenn ich sowas, wenn ich sowas schon sehe, Alter, warum ist das nicht einfach
eine Methode an der String Klasse, also, du hast keinen Split, du hast keinen Partition,
ich glaube Reverse hast du im Zweifelsfall noch irgendwo, du hast keinerlei sinnvolle
String-Methoden, die man braucht, ich weiß nicht, was C++-Leute los ist, ja, will ich
aber gar nicht jetzt verwenden, so, jetzt wirst du OTA machen, jetzt wirst du OTA machen,
also sprich, dass wir, das ist Albi, exakt, da muss ich auch immer kecken, ja, wenn ich
dann, manchmal sucht man in C++ nach den einfachsten Dingern und dann kommst du auf Stack Overflow
und dann kommen die an, ach Leute, erst mal Boost include, mal ganz davon abgesehen, Boost
für ESP32 gibt's überhaupt nicht, ich include doch keinen Boost für String Split, hallo,
Split, das sollte Basic sein, by the way, das ist auch ne Sache, die hab ich mir selbst
gebastelt, String Split, weil's nicht eingebaut ist, so fail, ok, also, weiter im Text, genau,
wir müssen jetzt OTA-Updates machen, wie gesagt, ich hab schon selbst was für OTA-Updates
gebaut, mit HTTPS und so, heute machen wir die einfache Variante, einfach ein fertiges
Projekt verwenden und zwar, was ich ganz gut finde, ist das da, da kriegt man so ne Webseite
zum Firmware-Hochladen, eigentlich relativ easy, muss man include und gut ist, also einbinden
und gut ist, add, der Watt-Champ, bam, kann Standard String eigentlich UTF-8, das kommt
ja auch noch dazu, Standard String ist komplett, Encoding unabhängig, das ist im Prinzip einfach
nur ein besseres Byte-Array, was halt ein Witz ist 2021, ja, wobei es auch seine Vorteile
hat, genau, W-String gibt's ja auch noch, so, da haben wir den Kram installiert, wie
verwendet man das jetzt, include, Web-Server, Async, Alter, die Musik, LOLW, die Toads sind
aber ganz schön am Rumschreien im Hintergrund, Moment, wir wollen ESP32-Demo, Async, ich
nenne es Async, Main, also wie, lass mal kurz überlegen, wir include das, hier wo man Custom
Libraries include, ja, das da, OTA, so und jetzt muss ich mal kurz in die Hilfe gucken,
wie das funktioniert, Web-Server, auf Port, also wir brauchen einen Web-Server, damit wir
die neue Firmware hochladen können, so, also sprich, dann machen wir hier mal einen Web-Server,
auf Port 80, korrekt, Port 80 ist gut, dazu müssen wir noch ein paar anderes Zeug include,
Alter, ich blick gerade, was hat der Typ für Abhängigkeit, nochmal, achso, Async, Web-Server,
Async TCP braucht er noch, oh meinetwegen, Dependency Hell, so, wo ist es, ah, vor zwei
Jahren, na top aktueller Web-Server, den brauchen wir, der Watt-Champ, Moment, das war jetzt
aber eigentlich gar nicht das, was ich installieren wollte, oder, ich wollte den Web-Server installieren,
Warte, Moment, jetzt hab ich irgendwie Mist installiert. Ah, ah, help, installed, weg damit.
Oh, die Musik ist jetzt hier Massive, Massive Epic für ESP programmieren. Was brauche ich hier alles?
Das da? Also das da? Der ist tatsächlich zwei Jahre alt, ok. Alter, MonkaS. Und das hier ist auch zwei Jahre alt.
Ok, ich hatte tatsächlich das Richtige. So, der Watt-Champ ist am Start, Web-Server am Start, add. Ok, so.
Hast du schon mal mit C++ Co-Routines und Async Await? Nee, habe ich noch nicht verwendet. So, ok, jetzt sollte das eigentlich funktionieren.
Include, Include, Web-Server gestartet. Ok, nice. Post-Champ. Web-Server gestartet. Das heißt, wie geht es jetzt weiter?
Web-Server, wir müssen uns mal die Demo angucken. Dann sollten wir eine Webseite kriegen zum Firmware-Hochladen.
Also, WLAN gestartet haben wir. Web-Server und was macht der Typ hier jetzt? Start, Begin, on request. Nee, das brauchen wir eigentlich.
Wir brauchen eigentlich nur das da. Und Server, Begin. Alles klar. Das sollte jetzt nicht allzu schwierig sein.
Setup. Das müssen wir machen hier vor. Wartet mal, wartet mal, wir müssen das eigentlich... Ah, ich muss das ein bisschen umsortieren.
So, hier muss ich warten, falls das Firmware-Update nicht funktioniert. Server, Begin, Begin und hier drinnen sagen wir jetzt OTA-Check.
Loop. Und den Hostname müssen wir noch setzen auf Watt-Champ. Hab ich gerade gesehen. Set ID, dass ich auch weiß, auf welchem Controller ich bin.
Und jetzt sollten wir eine Webseite haben, wo ich Sachen Firmware hochladen kann, wenn alles funktioniert hat.
Server, Begin, Begin. Ja, okay, probieren wir mal aus. Jetzt bin ich echt gespannt.
Also wie gesagt, C++, Go-Routines, Go-Routines, nicht Go-Routines, meine Güte. Hab ich noch nicht ausprobiert.
Aber ich könnte mir vorstellen, dass das C++-Creamers auch geschafft hat, Async Away zu verkacken.
Die Letzten, denen ich vertraue, das ordentlich zu implementieren und vor allem Syntax und Sachen zu viel erfinden, die angenehm zu benutzen sind, die Letzten, denen ich das zutraue, ist das C++-Cremium.
Okay.
So, dann schauen wir mal, ob ich jetzt, was für eine IP hat das? 1 und 2, 1, 6, 8, 2, 1, 3, 8. Pause-Champ.
Is unreachable. Warum?
Warum ist der Watt-Champ unreachable?
Oh, ich hab ne Idee, warum der Watt-Champ unreachable ist, Leute.
Ich glaub, mein Axis-Point hat ne Firewall drauf, die nicht funktioniert.
Die, die, die den nicht durchlässt.
Der Axis-Point hat, glaub ich, standardmäßig die Firewall aktiviert. Fuck. Was mach ich denn jetzt? Ich komm an den Watt-Champ nicht dran.
Unreachable? Äh, dass keinerlei Pakete hinkommen und zurück, vor allem nicht zurückkommen.
Äh, ja, wie, wie, Moment. Ich muss, ich muss den Axis-Point, fuck.
Was war der Axis-Point? Hat der Axis-Point nochmal für ne, hier.
Kann ich den Axis-Point managen über ein Browser? Nein! Okay.
Wie komm ich auf den Axis-Point drauf?
Ich muss die Firewall ausschalten. Okay, ähm.
Über Winbox vielleicht auf den Axis-Point. IP gelegt. Oh nein. China Microcontroller detected. Habt ihr gesehen, dass Apple jetzt sogar all dies checkt von der Kamera im iPhone, falls die ausgetauscht wurde?
Ach guck mal, da isser. 137. Vielleicht kann ich mich atmen. Äh. Please. Connect. Connect. Ah.
Ähm. Ähm. Wie komm, wie krieg ich den Zugriff auf meinen Axis-Point? Scheiße. Ich versuch's mal vom Tablet aus.
Sind Port 80 und 443. Ja, aber nicht, nicht eingehen. Für den Axis-Point bin, bin ich ja quasi das Internet. So.
Aber ich hab den als Bridge eingestellt. Die Firewall sollte eigentlich aus sein.
Die Firewall sollte eigentlich aus sein.
Aber ich, ich, ich kann den, ich kann den Controller. Hä?
Jetzt kann ich den Controller pingen?
Leute, ich muss mal pinkeln. Ich bin gleich wieder da.
Ich bin gleich wieder am Start.
Ich bin gleich wieder am Start.
So, wieder am Start. Also, weiter geht's.
Warum kommt der da nicht drauf? Hä? Sogar Nmap meint, dass das offen ist, Port 80. Ah, muss ich vielleicht irgendwie Update oder so machen?
Hä? Ok, Leute. Nmap meint, Port 80 ist offen.
Oh, das hab ich vergessen, oder? Nee, hab ich nicht.
Hab ich irgendwas? Falschgemachter? War das nicht Update?
Ok, was ist die Default Domain? Ich muss auf Slash Update? Slash Update, ja, korrekt.
Hä? Wie kann Nmap meinen, dass der Port offen ist und ich krieg da nichts? Ok, wir machen jetzt einfach einen Curl.
Ok, wir kommentieren jetzt mal einfach alles aus, was irgendwie Probleme machen könnte.
Einfach einfach alles weg. Alles weg, außer WLAN Connect.
Moment, die Debug von der IP lasse ich noch drinnen. Upload. Der Browser hat einen Titel, stimmt? Wait a minute.
Ok, dann bin ich vielleicht doch gecrashed. Oh, guck mal, das ist so oft auskommentiert, dass es schon durchgestrichen ist.
So, reconnect. IP.
Der bekommt die Seite. Der bekommt die Seite, es funktioniert alles. Aber App ist nicht da.
Hä? Die Seite ist korrekt geladen. Content Length müssten... What the fuck?
Ich hab da ja eigentlich nichts drauf. Hä? Also ich hab das schon mal verwendet, das funktioniert eigentlich ganz gut.
Start das Ding mal neu, hab ich ja gerade. Das liegt bestimmt an dem Access Point dazwischen, habe ich irgendwie so die doofe Vermutung.
Bei, eigentlich sehr merkwürdig. Also viel verkehrt laufen kann er hier schlicht, kann er hier nicht, ne?
Er connectet sich zum WLAN. Kann man übrigens mal minimieren. Connectet sich zum WLAN und ansonsten macht er nix.
Server. Moment, ich guck mir nochmal die Hilfe an. Moment, das ist das falsche. Example. Example.
Ich, ich include den Scheiß mal so wie in der Reihenfolge. Man weiß, man weiß ja nie, man weiß, man weiß ja echt nie.
Pass mal auf, am Ende liegt es irgendwie an der Include-Reihenfolge oder sowas. Mich würde, mich würde in C++ echt nix, nix, nix mehr wundern.
Ich mach das direkt unterhalb vom Arduino. Das ist, was ich um sowas wie Include-Reihenfolge überhaupt Gedanken machen muss.
Reconnect. Bosschamp. What the fuck, Alter? Was, warum will das nicht?
Der dampft mir hier irgendwie Teile von der Firmware oder sowas. Keg-Wade? Was? Ok, was mach ich verkehrt? Was mach ich verkehrt?
Das Beispiel ist doch, ich benutze C++ ja, aber das Beispiel ist doch easy. Soll ich mal Strom abziehen und wieder dran machen? Oh, ich hab immer noch.
Es geht. Die Include-Reihenfolge wars. Und da sagt mal einer, was zu Header-Dateien sind was Gutes. So eine Rotzsprache.
So ein abgrundtiefer Schrott, Alter. Es ist echter Wahnsinn, wie schlecht man sein kann 2021.
Krasser Scheiß. Hättest du keine andere Sprache? Nein, leider nicht. Es gibt Micro-Python, ist auch manchmal ein bisschen problematisch, vor allem, weil es nicht so viele Libraries für gibt.
Also für Hardware-Interaktionen und sowas. Und es gibt ein experimentelles Rust, das wars aber auch. So, und jetzt kann ich Firmware hochladen.
Es gibt leider keine andere Auswahl. Freiwillig benutze ich den Schrott doch nicht.
So. Ok, jetzt können wir die ganzen anderen Kran wieder einkommentieren und hoffen, dass es jetzt funktioniert.
Gut, jetzt können wir auch gleich mal probieren, ob der Firmware-Upload funktioniert. Wenn ihr jetzt nach dem Einkommentieren wieder alles geklappt habt.
Hier machen wir noch Screen, Drawstring, 00, wo haben wir denn hier aufgehört? 20, 40, 40, Waiting for OTA, oder machen wir einfach OTA, Waiting, Punkt, Punkt, Punkt. So, geht die Seite jetzt?
Come on! Auf! Wird er kaputt?
Calc Wait? Hä? Ich bin auch gradig verwirrt. Wo ist denn das Problem jetzt? Native Speed. Hä? Da ist er. Hab ich jetzt? Ok, hab ich sonst noch irgendwie Mist drinne vielleicht?
Hab ich sonst vielleicht noch irgendwie Mist drinne?
Ok, ok, ok. Mal mit nochmal Minimalprogramm. Ich bin echt grad voll verwirrt, was der für Schmerzen hat.
Ok, ich mein, mehr kann ich nicht rausmachen.
Warum steht da überhaupt noch ne Null drauf? Da sollte keine Null mehr draufstehen.
Da sollte, da sollte ne... Vielleicht muss ich doch Kontrast und so setzen.
Da sollte Punkt, Punkt, Punkt draufstehen. Aber sag mal so, mehr kann ich nicht. Mehr kann ich ja nicht machen.
Irgendwann ich mach WLAN an, WLAN an, schreib was aufs Display und dann warte ich einfach nur, ob ich ein Update bekomme. Also, mehr ausschalten geht ja grad gar nicht.
Ups. Ich mach jetzt mal den Browser schnell zu und wieder auf.
Hä? Wo bin ich jetzt? Hä, was ist das denn? Eben ging's nur noch. Ah, wait, wait, wait.
Das ist brutalst langsam.
Ich... Hat ich eben noch mehr auskommentiert? Wie kann das? Ok.
Hm. Also aus irgendwelchen Gründen hat der was dagegen, gegen was auch immer. Ok. Nochmal auskommentiert den ganzen Müll.
Ok. Also ich mein, jetzt ist ja wirklich, jetzt ist ja nur wirklich gar nichts mehr drin. Außer WLAN. Also WLAN an, was ich ja brauch für ein Update und Server starten.
Aber ihr habt die Seite eben gesehen, dass es prinzipiell funktioniert.
Ok, jetzt aber. Was ist das für ein Kack? Warum geht das nicht? Die Seite hat doch eben unter exakt den gleichen Bedingungen schon mal geladen.
Er überträgt, er überträgt es ja auch teilweise. Content length. Hä? What the fuck?
Ok, das checke ich jetzt nicht. Example. Das checke ich nicht.
Ist das doch an meinem Access Point? Dass das irgendwie Probleme macht? Ich mein, wir können uns ja mal ausgeben lassen, wie die Verbindungsgeschwindigkeit bzw. der Empfang ist.
Das machen wir mal. Das ging, wie war das? Wi-Fi, R, R, S oder S? Nee. Nee. R, S, R, hier das da.
OTR ist immer ein Problemthema. Also die Library habe ich schon öfters verwendet. Ist überhaupt kein Problem. Ich glaube irgendwie, es liegt an meinem Access Point.
Aber das ergibt auch keinen Sinn. Es kann ja eigentlich nichts mehr sein. Also erstens die Seite ging schon mal und ich habe nichts mehr drin. Ich habe nur wirklich alles aus, was man ausschalten kann.
Ich kann auch die Includes ausmachen. Jetzt ist gleich wirklich alles weg. Ich habe keine Ahnung, aber ich glaube WLAN Empfang ist zumindest ok.
Spiffs was not declared. Ja, auch auskommentieren. Ok, jetzt ist wirklich gar nichts mehr drin. Jetzt muss es funktionieren. Und wenn nicht, dann mache ich jetzt mal Strom ab und Strom gleich wieder dran.
Gucken, dass ich nicht zu oft drauf zugreife von allen Seiten.
Ja.
Ok, der hat echt irgendwelche Probleme und ich weiß nicht was. Gab es irgendwie ein Update in letzter? Hä?
Jetzt hat, jetzt hat, jetzt hat er das Eigen geladen unten, aber der Rest nicht.
Das stimmt doch irgendwie. Also außerdem dauert es auch viel zu lang. Normalerweise geht die Verbindung ziemlich schnell.
Das ist der Exist Point. Ja, ich glaube ohne Scheiß. Ich glaube auch, dass es der Exist Point ist.
Das fackt mich jetzt schon ein bisschen ab.
Ja, und verbinden auf mein Exist Point kann ich mich ja auch nicht.
Ok, das ist ok. Wir gehen einfach mal von aus, das ist der Exist Point. Ich mache den Kram mal wieder rückgängig, dass zumindest die Software halbwegs intakt ist wieder.
Ok.
Dann überlege ich gerade, wie kriege ich das jetzt mit dem Exist Point hin. Ich starte den mal neu. Also wir machen jetzt mal zwei Sachen.
Ich komme nicht drauf auf meinen Exist Point. Ich habe den ursprünglich als Router konfiguriert, da hat er hinter seine Firewall eingeschaltet und dann habe ich ihn umgeschaltet auf Bridge. Ich kann mal gucken, ich gucke mal ob ich mit meinem Tablet drauf komme, dass ich das ausschalten kann.
Ups. Ich mache jetzt erstmal den Exist Point nochmal kurz an und aus und stelle den mal auf den Tisch hoch. Ich brauche ein längeres USB-Card.
Boah. Oh Gott. Oh Gott.
Ok. Jetzt.
Da steht bei mir jetzt auf dem Tisch der Exist Point. Ich habe auch mal.
Ja, du bist nicht connected. Sollte er sich eigentlich versuchen zu reconnecten? So. Laut der Logik, die ich da programmiert habe, der kann sein Gateway doch gar nicht pingen.
Ach nee, der macht. Der will mir doch nicht erzählen, dass er sein Gateway pingen kann.
Ach Moment, das ist noch die alte Firmware. Ich habe die neue noch gar nicht hochgeladen. Ok. Upload.
Ok, jetzt schauen wir mal. Ob der Exist Point jetzt funktioniert. Er ist wieder gestartet.
Ich gucke im Tablet, ob er auch wirklich da ist.
Jep. Jep Kok, der ist am Start. Ok. Reconnect. Alles klar. Nö, das hat einfach keinen.
Ah, vielleicht lag das echt an der Positionierung vom Exist Point oder so. Alles klar. Guck mal. OTA-Page am Start. Choose File.
So, jetzt können wir gleich mal gucken, ob das Firmware-Uploaden funktioniert. Und zwar die Firmware liegt unter Build.
Hier. Also in einem äußerst einfach zu merkenden Verzeichnis ist die Firmware am Start, die wir jetzt hochladen müssen.
Firmware-Bin. Firmware-Upload funktioniert. Exquisite.
Und jetzt können wir zugucken. Er sollte jetzt neu starten, nachdem die Firmware hochgeladen wurde.
Epische Musik zum Firmware-Uploaden. Ja, hat funktioniert.
Taskwatch.com Triggered. Ja, das ist der Reboot von ihm.
Ok. Nice. Ok, es funktioniert. Ich bin begeistert.
Und jetzt Punkt Slash OTH. Kann ich einfach einen Curl hochschieben. So, aber das ist in Ordnung.
Er heißt doch richtig alles, alles klar. Ok. Ok, soweit so gut. Also sprich, wir haben... Brauchen wir das jetzt eigentlich fürs Display?
Braucht man nicht. Kann man löschen. Also sprich, Display initialisieren, bisschen Debug-Infos draufschreiben.
Und jetzt müssen wir noch testen, ob das funktioniert, dass der wartet, wenn er kaputt geht.
Das testen wir jetzt mal folgendermaßen. Also, der checkt ja hier, ob der letzte Boot geklappt hat.
Wenn der letzte Boot nicht geklappt hat, dann wartet er 45 Sekunden, dass ich Zeit hab, noch ein Update zu machen.
So und wir können einfach das jetzt mal kaputt machen. Nämlich einfach hier einen Restart reinschreib.
Das heißt, der bootet jetzt erst mal bis dahin, restartet sich, hat dementsprechend den letzten Boot nicht als erfolgreich markiert
und danach sollte er hängen bleiben, 45 Sekunden, dass ich updaten kann.
In der Hoffnung, by the way, die Webseite geht jetzt wieder. Aber wir sollten es auf dem Display sehen.
Wir sollten es auf dem Display sehen. Auf dem Display sollte dann die IP stehen und OTH-Waiting, 45 Sekunden.
Wenn wir da richtig fancy sind, können wir noch eine Progress Bar machen.
Ok, Crashed. Jetzt hat er gecrashed und jetzt sollte OTH-Waiting da stehen.
Auf.
Und warum nicht?
Ah, weil ich kack genug bin und die Hälfte vergessen hab. Display.
Aber es funktioniert, ihr seht, er bleibt schon hier hängen.
Ok, uploaden wir die Firma nochmal.
Was ich witzig finde, guck mal, wie fett die Firma geworden ist, von anfanglich 25 auf 65% nur durch WLAN hinzufügen.
So, reconnect. Punkt, Punkt, Punkt. OTH-Waiting.
So, und jetzt, während er auf OTH-Waited, kann ich auf die Webseite, die wahrscheinlich wegen meinem Access Point...
Ah, guck. Und jetzt habe ich 45 Sekunden Zeit, eine gefixte Firmware hochzuladen.
Genau, WLAN ist komplett TCP, IP, alles Mögliche.
Also sprich, wenn ich den jetzt pricke, in Anführungszeichen, also sprich, wenn ich eine Firmware hochlade oder wenn irgendwas ist, dass der nicht ordentlich bootet,
dann bleibt der beim zweiten fehlgeschlagenen Boot 45 Sekunden hängen und erlaubt mir eine neue Firmware hochzuladen.
Das ist eigentlich eine ganz coole Taktik.
Nice, so. Ok, dann können wir diesen Restart hier wieder raus machen.
So, dann können wir auch gleich testen, ob der Firmware-Upload funktioniert, indem jetzt...
Ach, Moment. Ich uploade gerade eine Firmware, die noch das Restart drin hat.
Off. Neue Firmware erstellen, please. Jawoll. Upload. Excellent.
Ok, also, nächster. Sensor haben wir, Sensor lesen funktioniert auch. OTH-Abdeckten funktioniert auch.
Der Typ hat noch ein cooles Projekt. Web-Serial.
Das finde ich für Debug-Zwecke auch äußerst praktisch.
Sowas habe ich auch schon selbst gebastelt über HTTPS, aber ich nehme jetzt einfach mal fertige Sachen.
Das ist auch ganz nice. Wow, retry.
Wir haben es kaputt gemacht, Leute.
Da kann ich Debug-Ausgabe im Browser machen über WebSockets. Das ist ziemlich nice.
Rein. Zack. Vor 8 Monaten. Add. Der Watt-Champ. Der Watt-Champ braucht es. Alles bam.
So.
Ich glaube einfach so. War das so? Ich glaube schon.
Mal gucken, ob es doch die Include-Reihenfolge war, die kaputt ist. Ob es jetzt funktioniert.
So. Und jetzt konnte man ihm irgendwo sagen, das muss ich mir mal kurz abgucken. Web-Serial.
Genau. Einfach beginnen. Und dann kann ich jetzt Debug-Ausgaben im Browser machen, was äußerst praktisch ist.
So. Und dann testen wir auch gleich, ob das funktioniert. Wir machen hier mal eine Debug-Ausgabe alle Sekunde.
Check W. So. Jetzt bin ich mal gespannt. Was meint ihr, Flash schneller? Über USB oder über WLAN?
Meine Übertragung über WLAN ist vielleicht sogar fast schneller.
Nee, aber ich denke mal, über Serial Flash doch immer noch ein bisschen schneller.
Leute, ich muss euch sagen, Streaming hilft mir echt. Mir tut der Kopf weniger weh.
Ich glaube ehrlich gesagt, dass der limitierende Faktor hier sogar ist, wie schnell er die Sachen ins Flash schreiben kann.
Gar nicht so sehr der Upload-Speed.
So. Wenn jetzt alles funktioniert. Moin, Midnightwolf. Wenn jetzt alles funktioniert, dann sollten wir jetzt eine Debug-Ausgabe bekommen.
Nice. Check W. Jetzt können wir quasi Logs ausgeben im Browser. Und ich brauche gar keine serielle Verbindung mehr.
So. Und wisst ihr, was das Coole daran ist? Jetzt könnte ich ihn anschließen, nicht mehr über USB, sondern direkt über die externe Stromversorgung.
Und ich könnte Firmware hochladen über den Browser. Also sprich, ich muss ab jetzt nicht mehr mit dem Kabel dran.
Also sprich, wenn das Ding jetzt im Keller hängt, könnte ich ab jetzt hochladen, ohne dass ich ein USB-Kabel dran machen muss.
Was ja praktisch ist. Ich will ja nicht runter rennen müssen mit dem Raspberry Pi oder so.
Und ich habe sogar einen Schutz drin, dass falls ich den kaputt mache mit einer neuen Firmware, ich 45 Sekunden Zeit habe, noch eine gefixte Firmware dann hochzuladen bei jedem Reboot.
Chat, ist das nicht? Moment. Wait. Ist das nicht exzellent?
So, also weiter im Text.
So, Debug-Ausgabe über Web geht auch. Können wir jetzt wieder rausschmeißen.
Wir können die Zeit ausgeben.
Was ich immer ganz gerne mache, ist, dass ich weiß, dass das Ding live ist.
Irgendwie die Zeit ausgeben. Dass ich weiß, es kommt jede Sekunde in eine Ausgabe und die serielle Schütztelle funktioniert.
Wie tiny ist der Tiny Pico eigentlich? Da. Ziemlich klein, guck mal.
Oh, ich sollte, Moment, ich sollte mal das Licht wieder anmachen, das sehe ich gerade. Ich habe meine Beleuchtung gar nicht an.
Ja, guck, der ist ziemlich klein.
Also so mit der kleinste sinnvoll benutzbare ESP32 mit halt schon fertigen Board und wo man auch Pins dran machen kann.
Es gibt noch kleinere, aber die sind dann schon wirklich sehr, sehr raw alles, ja.
Funktioniert das Zählen noch?
Okay, das Zählen vom Sensor haben wir irgendwie kaputt gemacht.
Ah, nee, guck, der bei Licht anzählt, ja. Guck, seht ihr, zwei, drei, vier.
Okay, der Sensor funktioniert noch. Fünf.
Das ist doch open source, wundert mich, dass es das, der ESP, dreimal darfst du raten, aus welchem Land der kommt.
Die Kokomoto zwar noch am Start, das ist schon aus China.
Die Chinesen fahren wieder am Start.
Ach so, ja, das wundert mich auch, dass sie das noch nicht kopiert haben.
Ach, das ist die Abtime, die ich ausgebe.
Gut, also weiter im Text, wie lange bin ich schon am Start?
Ich kriege langsam Hunger, drei Stunden schon.
Okay, also Basics sind ja schon am Start, Sensors funktionieren, OTA funktioniert, Debug-Ausgabe funktioniert.
Jetzt können wir uns noch mal die aktuelle Zeit anzeigen lassen, dafür muss ich mir aber ein bisschen mehr Zeug kopieren.
Zock.
Haben wir nicht vorher den FMT-Fan am Start?
Ich finde das auch beste Textformat Library überhaupt.
Dazu muss ich mir aber was kopieren aus dem anderen Projekt, nämlich, ich habe mir mal irgendwann
Logger was gebastelt zum Text formatieren, was FMT unter der Haube verwendet,
was aber die Arduino Custom Typen kann, also sprich, der kann IP-Adressen gleich formatieren und sowas in der Richtung.
Da muss ich schon mal kurz gucken, Logger.
Das ist an manchen Stellen etwas hässlich.
C++.
FMT ist nicht drinne.
Okay.
Ey!
Das ist auch so ein Ding, ne?
Ich habe keine Ahnung, ob das eine schöne Variante ist, aber der Arduino String,
der konvertiert selbst nicht implizit zu Character Pointer.
Ich habe das einfach mal überschrieben, ich habe keine Ahnung, ob man das sinnvollerweise so machen sollte, aber es funktioniert.
Da muss ich weniger schreiben.
Welches Volk sind diese Chinesen? Na, die aus China.
PainsChamp, ich weiß.
Irgendwie habe ich mir das letzte Mal zu angewöhnt, wenn ich 50 Mal Chinesen gesagt habe, irgendwann muss ich dann mal zum Außer-Chinesen sagen.
Wobei ich Schwachsinn ich finde, es gibt ja Leute, die stehen da voll drauf und sagen das standardmäßig, aber ich bin Team China und nicht China.
Ich meine Chinesen, genau. Die Chinesen meine ich.
So, und jetzt müssen wir uns erstmal GitLab, FMT, klonen.
Und exzellent Text formatieren zu können.
So, clone, code, zack.
Dump, dump, dump, lib, git.
Oh, wir wissen, das heißt, ich gehe jetzt halt shit, shit, clone.
FMT, git, checkout, den letzten Tag.
Der letzte Tag ist glaube ich 7113.
Jawoll.
Jetzt build, zack, bumm.
Minecraft, oh, oh, oh, oh, oh, was jetzt?
FMT has not been declared?
Hä?
Wie richtig ist FMT deklariert, da ist es doch.
Jetzt muss ich rollen.
FMT has not been declared, what?
Wo ist das hier?
Hä?
Wait a minute, da fehlt die Hälfte.
Hä?
Dann muss die Library doch einfach nur klonen oder hat es funktioniert?
Jetzt bin ich verwirrt.
Oder musste das in Include?
Hä?
Das verstehe ich jetzt nicht.
Was habe ich jetzt verkehrt gemacht, clone?
Muss schon in normaler Weise?
Muss schon in normaler Weise?
Nicht.
Ich habe das beim anderen auch im Lip.
FMT has not been declared?
Ich weiß warum, ich weiß warum.
Weil ich es hier nicht included habe.
Jetzt funktioniert es auch.
Kaum included, man richtig schon funktioniert.
Checkout 713, wenn er fertig ist.
Wunderbar.
Erst mal 3 Stunden kompilieren den Kram wieder.
Let's go.
Guck mal, 4% Flash kann man dafür schon mal opfern.
Wunderbar.
Jetzt können wir auch ordentlich Text formatieren.
Jetzt können wir auf dem Display die Sachen richtig nice formatieren.
Nämlich so mit rechts aligned und sowas.
Also ich würde sagen, unser Setup ist eigentlich okay.
Da ist fertig, da muss man immer allzu viel machen.
Fonts haben wir auch.
WLAN Connect wunderbar.
Ich würde sagen, das passt eigentlich jetzt so.
MQTT brauchen wir dann noch später für den Q-Chat.
Aber ich habe keinen MQTT Server zum ausprobieren.
Außerdem Public MQTT Server.
Ich würde sagen, wir machen morgen Mittag fertig.
Morgen Mittag machen wir noch die MQTT Geschichte und das Einbinden in Home Assistant.
Heute machen wir noch die Basics fertig.
Bis 18 Uhr, dann habe ich Hunger und muss was essen.
Pepofett.
Jetzt können wir auf dem Display die Sachen ordentlich anzeigen.
Das machen wir jetzt noch.
Wir haben hier Total Energy von dem Zähler mit der Drehscheibe.
Ich weiß nicht, soll ich lieber Upper Floor nennen?
Erster Stock halt.
Lichtsensor funktioniert.
Dann faken wir das jetzt mal.
Jede Schleife mache ich die Total Energy um 3 höher.
Ich tue so, als hätte ich etwas gemessen mit meinen Sensoren.
Das andere um 1.
Dann schauen wir mal, dass wir die ganzen Sachen anzeigen können.
Was schreiben wir jetzt auf unser Display?
Da steht ja aktuell nur 5.
Das sieht ein bisschen armselig aus.
Wir schreiben jetzt aufs Display das, was ich ursprünglich vorhatte.
Wir schreiben oben hin in die erste Zeile aufs Display.
Erstmal pro Schleifendurchlauf haben wir das Display leer.
Dass wir was Neues drauf schreiben können.
Wir fangen bei 0 an und da schreiben wir hin die IP.
Also WIFI.
Local IP to String.
Das brauche ich zu Debug-Zwecken, sonst blick ich da nicht mehr durch.
Wenn ich ein halbes Jahr oder Jahr später in den Keller gehe, finde ich die IP nicht mehr.
Klar, da muss ich den DHCP gucken.
Aber die IP auf dem Display ist immer gut.
Dann schreiben wir die Uptime.
Mal aufs Display.
Wir können die Uptime oder die Zeit schreiben.
Wir schreiben die Zeit hin.
Ich glaube, das ist schöner aufs Display.
Wen interessiert die Uptime?
Wobei die Uptime ist gar nicht so schlecht.
Wenn ich die Uptime sehe, weiß ich, ob das Ding mal gecrasht ist oder nicht.
Wenn es eine Uptime von 600 Sekunden hat, weiß ich, das Ding ist garantiert gecrasht in letzter Zeit.
Wir machen die Uptime.
Das ist sinnvoller in dem Fall.
Jetzt können wir die Anzeige machen für den Stromverbrauch.
Stromverbrauch formatieren wir folgendermaßen.
Zack.
38, 38, 48.
Das ist der vertikale Abstand zwischen den Zeilen.
Nachdem wir die Schriftgröße größer gemacht haben, müssen wir das ändern,
weil ansonsten hängen die Zeilen ineinander drin.
Total.
Jetzt gucken wir uns das mal an.
Das sollte jetzt schon eine ganze Ecke besser aussehen.
Ich uploade das jetzt mal übers Webinterface.
Und dann schauen wir mal, was schneller uploadet.
Das vergleichen wir zwar.
Ich mache jetzt Firmware-Upload übers Webinterface.
Leute, das nimmt sich nichts.
Der Firmware-Upload ist überall gleich schnell.
Ob Serial oder Webinterface ist egal.
Ich glaube, der limitierende Faktor ist der Flash-Spalch.
Oder was meint ihr?
Ich weiß nicht, wie schnell der Flash maximal ist.
Schauen wir mal, wie es jetzt aussieht auf dem Display.
Ich gucke mir das ein bisschen besser hin.
Okay, das ist doch schon besser.
Das sieht kacke aus, wenn das so...
So ist gut, so sieht man schön was.
Das ist doch schon mal besser.
Oben hast du die IP draufstehen.
Und unten drunter die Refreshrate sackt ein bisschen.
Und unten drunter hast du stehen, was aktuell gemessen wurde.
Sag mal, ist der Chat kaputt oder sagt gerade keiner was?
Keck wait.
Ich glaube, es sagt gerade gerade keiner was.
Test alive.
Ich wundere mich immer, wenn in 5 Minuten bei mir einer was nicht sagt.
Das ist massig.
Normalerweise wird ja, wenn schon auch wenigstens, ein bisschen sinnloses Zeug gespammt.
Alle gestunt von Big Brain Proggers.
Und jetzt machen wir mal richtig nice Text-Formatierungen.
Und zwar, das kann man mit FMT richtig cool machen.
Und zwar können wir jetzt sagen, wir formatieren das jetzt folgendermaßen.
So soll das Ganze aussehen.
Als erstes kommt ein Hütchen, weil erster Stock.
Gibt es eigentlich schon Ergebnisse bei dem Projekt Minecraft Staubsauger?
Ne, ne, gute Sache, muss ich mal aufschreiben.
Hab ich noch gar nicht mehr weiter mir angeguckt nach dem letzten Stream.
So, dann wollen wir das Ganze formatieren, die Zahlen.
Und zwar, wir wollen es rechts alignen, dass die Zahl immer rechtsbündig geschrieben wird.
Und maximal neun Stellen und zwar formatiert.
Also mit tausender Trennzeichen formatiert.
Mit ordentlichen tausender Trennzeichen formatiert.
Und weil C++ so eine schöne Sprache ist,
sieht das tausender Trennzeichen formatieren so aus.
Wartet mal, hier.
Das muss man machen, damit die Sache ordentliche tausender Trennzeichen hat.
Fragt mich nicht, warum, aber es ist so.
Man muss ihm sagen, man muss ein extra Struct anlegen für tausender Separator.
Dann den tausenden Separator auf Punkt setzen.
Sagen, dass es nach dreier Gruppen gruppiert wird, total wir.
Dann irgendwie den Unique-Pointer anlegen, weil, ich hab keine Ahnung.
Dann aus der Default Länder-Setting ein neues Länder-Setting erstellen.
Mit neben Pointer auf diesen Settings Struct.
Und das kann ich dann verwenden beim Text formatieren.
Meine Fresse, Alter.
Richtig, richtig massiv.
Und das müsste dann eigentlich so aussehen, wenn ich es richtig gemacht hab.
Das kopieren wir noch mal.
48.
Moment, da hinten fehlt jetzt noch First-Floor-Energy.
Total Energy.
So, und jetzt sollte das eigentlich hübsch aussehen auf dem Display.
Endlich mal in Ordnung programmiert.
So sieht's aus.
Ah, ich bin ja auch blöd.
Ich muss ja auch noch sagen, dass ich das formatieren will.
Das ist ein Rapper von mir für die FMT-Lib, der ein paar...
Warum hab ich das noch mal gemacht?
Genau, die FMT-Lib, die benutzt standardmäßig Standard-String.
Und ich will Arduino-Strings haben.
Deswegen hab ich das mal einmal gerappt.
So, jetzt sollte es funktionieren, obwohl das als rot angezeigt wird.
Sollte es jetzt funktionieren.
Oh, Regex.
Hat die Standard-Lib im ESP überhaupt eine Regex-Implementierung?
Wo gibt's denn normalerweise Regex?
Oh, yes.
Exquisite Standard-Regex.
Jawoll.
Da.
Hab ich ja schon drauf gewartet.
Was genau hat der Regex mit ECMAScript, Javascript-Zeugs zu tun?
So, mal gucken, wie es jetzt aussieht auf dem...
So, Postchamp.
Postchamp.
Mal gucken, ob es gut ausschaut.
Hey, das sieht nice aus.
Guck mal.
Und der Write-Aligned auch.
Also sprich...
Oh, nee.
Es ist zu fett, Leute.
P-Pro-Fett.
Es steht bloß K da.
Es kann da stehen.
Also, machen wir mal hier 7 Stellen.
7 Stellen sollte wahrscheinlich reichen.
Kann man das überprogrammieren, wenn man nicht konstant leidet?
C++ programmieren auf jeden Fall nicht.
P-Pro-Fett.
Okay, Rebooten.
Ah, so ist das schön.
So, und jetzt haben wir 7 Stellen.
Ich glaube, 7 Stellen reicht für so einen Stromzähler.
Was hat denn so ein Stromzähler da normalerweise drauf hier?
Wie viele Stellen sind denn da drauf?
Wie viele Stellen sind denn da drauf?
Ja, sollte reichen, ne?
Oh, der hat...
Vielleicht sollte ich kein Int nehmen, sondern ein Float.
Guck mal.
Der kann ja sogar Kommas haben.
Was soll denn sowas?
Kommas.
Cacquade.
Warum?
Warum nicht einfach Ints?
Du lockst dich als Route ein, resetzt das Passwort.
Die haben alle Kommas.
Okay, wenn die alle Kommas haben, dann muss...
First, dann muss das kein Int sein, sondern ein Float.
Würde ich mal behaupten.
Wow.
Moment.
Int++ geht, Float++ geht nicht.
Was genau hat der jetzt für Schmerzen?
Okay, Double.
Äh.
Plus gleich.
Warum haben die++ nicht definiert?
Aber ich kann doch ein normales Float auch++en, oder?
Oder geht das nicht?
Das geht doch auch.
Warum geht das dann damit nicht?
Wirkt ein wenig.
++ ist nicht Atomic.
Aber plus eins schon, oder wie?
Nee.
Okay, ja.
Und wie mache ich das mit Floats?
Okay, da hört mein C++ Pick-Prain-Stells auf.
Keine Ahnung.
Atomic, Float++.
Ja, ja, ich weiß, aber hier meckert er doch auch drüber, guck mal.
Dass plus gleich nicht geht.
Special, okay.
Long Double?
Fetch, Sub?
Was?
Du brauchst Fetch, Add?
Okay, jetzt wird's advanced.
Was muss ich fett?
Nee.
Ich hab keinen Plan, Alter.
Okay, wie kriege ich das jetzt um eins hoch?
Fetch, Add.
Fetch, Add.
Das hab ich probiert, aber das ist hier gar nicht drinne.
Oder muss ich da jetzt einen Long Long nehmen?
Nee.
Nee.
Okay.
Ich hab keine Ahnung, ich hab echt...
Kein Schimmer.
Ah, please.
Dankeschön für den Prime, Sub.
Increment, wie geht das?
Stack Overflow helft mir.
How to perform basic operations?
Load?
Compare, exchange?
What?
Nee, das ist eine globale Variable, die brauch ich nicht im Capture Clause.
What the hell?
Okay, okay, das erlaubt, das leuchtet ein.
Compare, exchange?
Ich hab keinen Plassen Schimmer, was hier abgeht.
What the fuck?
Ich bleib doch bei Int.
Das könnte funktionieren, aber das kommt nicht das raus, was ich haben will.
Okay, okay, okay, Kommando zurück, Kommando zurück.
Wir bleiben einfach bei Int.
Und gut ist.
Wir bleiben einfach bei Int.
Chaos, wurscht.
Piss dich, Float.
Nee, das geht nicht.
Fetched.
Gibt's nicht.
Gibt's dafür nicht.
Hab ich grad schon ausprobiert.
Gut, wie dem auch sei.
Ich kann ja einfach sagen, die letzte Stelle.
Die letzte Stelle ist in Float oder irgendwie sowas.
Keine Ahnung.
Mal gucken.
Ich bin noch nicht sicher.
Ich sollte schon als Float machen.
Du musst mit Long, Long initialisieren.
Aber ich will keinen Float.
Ich will kein Int.
Also ich will ja was mit Kommas.
Einfach den Int als Float casten.
Nein, das funktioniert nicht.
Das funktioniert nicht.
Guck.
Ich zeig sie, dass es nicht funktioniert.
Zwar.
Wo sind wir?
Und jetzt sagt er mir.
Das plus plus nicht geht.
Plus gleich geht auch nicht.
Und das, was du schreibst, gibt's auch nicht.
Exzellent.
Ich könnte einfach einen Log nehmen und auf diesen Atomic scheißen.
Was in Long Float ist, ich würde sagen 64 Spit.
Also quasi ein doppelt so großes Float.
Also 64 Spit Float dann wahrscheinlich.
Was weiß ich?
Keine Ahnung.
Aber ich muss sagen, die Ausgabe finde ich schon mal nice.
Das gefällt mir.
Versuch mal Float.
Nein, nein, nein, nein.
Das liegt daran, das ergibt schon Sinn, was sie schreiben auf ihrer Seite.
Das für Floating Point ist keine Assembly oder keine Assembler Operationen gibt, die
das in einem CPU Cycle macht.
Deswegen kann man das nicht Atomic machen.
Das ergibt schon Sinn.
Aber das gefällt mir.
Das ist nice.
Ich meine, ich könnte einfach aus KWH WH machen und dann brauch ich kein Komma mehr,
aber dann reicht mir die Stelle nicht.
Doch, das gefällt mir.
Das ist nice.
So, wir haben jetzt keine Zeit mehr, Leute.
18 Uhr, ich hab Hunger.
Kannst du nicht einfach später nach Float umwandeln?
Ja, doch.
Aber es bringt mir ja nichts, wenn ich in Float caste und ich möchte ja Komma haben.
Ich brauche ja die hundertstel.
Also es bringt mir ja nichts.
So, dann machen wir morgen weiter.
Irgendwann morgen Mittag.
Morgen früh erstmal wieder auf Wachen Stream.
Dann machen wir morgen weiter und dann machen wir die MQTT Geschichte und die anderen Sachen
fertig.
Aber es funktioniert ja alles schon mal relativ nice, muss man echt sagen.
Du machst WH als Int und castest dann nach Float?
Ne, ich müsste es als Float machen, dann als Int casten, weil meine globale Variable,
wo das reinkommt...
Ne, wie kriege ich denn sonst in das Int 1000,8 rein?
Gar nicht.
Ach, wie auch immer, das muss ich mir mal überlegen.
Das passt schon.
Ja, doch, doch, ich will das ja haben.
Muss ich mir mal überlegen, wie man das am besten macht.
Wahrscheinlich ist das Beste, ich lasse diesen Atomic Kram weg und mache einfach eine Lok
hin oder so und gut ist.
So Leute, ich hoffe es hat euch gefallen, weil wieder richtig viele Leute am Start, exquisite.
Mal ganz schnell gucken, ob es irgendjemand gibt, den ich hosten kann, den ich kenne.
Der Lost, aber der hat es nicht wirklich nötig, haben wir einen kleineren am Start.
Der Krieger spielt Fifa, nee Fifa ist echt nicht meins.
So, ne, keiner am Start.
Was macht denn der Frasier?
Ist der Frasier am Start?
Ist der Frasier da?
Stopp.
Alles klar Leute, wir machen Schluss, bis denn, machts gut, wir sehen uns.
Was ist das?
Bis denn, C U.
