1
00:00:30,000 --> 00:00:56,420
Samsung Galaxy Note 20 Pro

2
00:01:56,420 --> 00:02:25,180
So, da bin ich!

3
00:02:26,820 --> 00:02:29,820
MMO Kreisel-Krein-Sucht gestillt für heute.

4
00:02:32,820 --> 00:02:39,820
Jetzt können wir noch ein bisschen, äh, High-IQ, Five Head Chat, den High-IQ ausspielen lassen.

5
00:02:43,820 --> 00:02:44,820
Seh, Staub!

6
00:02:52,220 --> 00:02:54,820
Schluss mit Klammern und Silvio-Lauten, genau.

7
00:02:54,820 --> 00:02:56,820
Brauchen wir nicht.

8
00:02:57,820 --> 00:02:59,820
Also, ein bisschen kann ich das, ja.

9
00:03:00,820 --> 00:03:02,820
Also, komplett planlos bin ich nicht.

10
00:03:03,820 --> 00:03:05,820
Aber mir fehlt halt so die Übung.

11
00:03:06,820 --> 00:03:13,820
Und ich dachte mir so in letzter Zeit öfters, wäre es nicht praktisch, ein bisschen besser Pies entstellt zu können.

12
00:03:13,820 --> 00:03:23,820
Einfach, wenn Bash zu ätzend wird und sich irgendwie ein.NET GO, was auch immer Programm jetzt nicht gerade anbietet für irgendwie was kleines.

13
00:03:24,820 --> 00:03:29,820
Also, ich glaube, das kann auf jeden Fall nichts schaden.

14
00:03:29,820 --> 00:03:31,820
Also, ich glaube, das kann nichts schaden.

15
00:03:32,820 --> 00:03:34,820
Bei der Gelegenheit, ich mach mal kurz die VM an.

16
00:03:35,820 --> 00:03:37,820
Ich mach einmal Updates, installier Pi.

17
00:03:38,820 --> 00:03:40,820
Wie heißt das Ding?

18
00:03:41,820 --> 00:03:43,820
Community Edition.

19
00:03:44,820 --> 00:03:46,820
PyCharm, jetzt hab ich's.

20
00:03:47,820 --> 00:03:49,820
Kann ich das hier abbrechen, VMWare, please?

21
00:03:49,820 --> 00:04:05,820
Chat, weil ihr seid.

22
00:04:06,820 --> 00:04:08,820
Weil ihr seid, Sekunde.

23
00:04:09,820 --> 00:04:11,820
Tolle Webladung für heute.

24
00:04:12,820 --> 00:04:14,820
Gleich 3.11 Beta.

25
00:04:14,820 --> 00:04:22,820
Ja, wenn du mir sagst, was es für gescheite Package Manager gibt, dass man sich die Preview Version installieren kann.

26
00:04:23,820 --> 00:04:25,820
So, volle Webladung für heute.

27
00:04:26,820 --> 00:04:32,820
Ihr habt 5 Sekunden, ihr habt 10 Sekunden Zeit, also in euch aufzunehmen, weil dann schalten wir wieder weg.

28
00:04:32,820 --> 00:04:34,820
Okay.

29
00:04:35,820 --> 00:04:37,820
Genug, next.

30
00:04:39,820 --> 00:04:41,820
So, also, ich mach erst mal kurz ein Update.

31
00:04:41,820 --> 00:04:43,820
1, 2, 3, 4, 5, 6.

32
00:04:43,820 --> 00:04:45,820
Massive FileFile Passwort.

33
00:04:45,820 --> 00:04:46,820
Oh.

34
00:04:46,820 --> 00:04:48,820
Was ist das denn?

35
00:04:48,820 --> 00:04:50,820
Was ist das denn?

36
00:04:50,820 --> 00:04:52,820
Was ist das denn?

37
00:04:52,820 --> 00:04:54,820
Was ist das denn?

38
00:04:54,820 --> 00:04:56,820
Was ist das denn?

39
00:04:56,820 --> 00:04:58,820
Was ist das denn?

40
00:04:58,820 --> 00:05:00,820
Was ist das denn?

41
00:05:00,820 --> 00:05:02,820
Massive FileFile Passwort.

42
00:05:06,820 --> 00:05:08,820
Also ich...

43
00:05:08,820 --> 00:05:10,820
Hab ich das hier installiert?

44
00:05:10,820 --> 00:05:12,820
Nee.

45
00:05:12,820 --> 00:05:14,820
Package Manager, der ist eigentlich ganz gut zu installieren von so Zeug.

46
00:05:16,820 --> 00:05:18,820
Alle switchen von Piesen auf Go.

47
00:05:18,820 --> 00:05:20,820
Nee, überhaupt nicht.

48
00:05:20,820 --> 00:05:22,820
Das sind 2 Sprachen.

49
00:05:22,820 --> 00:05:24,820
Die haben vielleicht...

50
00:05:24,820 --> 00:05:26,820
Mehr kann ich nicht sagen.

51
00:05:26,820 --> 00:05:28,820
Überschneidungen, weil das stimmt nicht.

52
00:05:28,820 --> 00:05:36,020
Überschneidung in der Fan-Gruppe, also es gibt bestimmt viele Leute die Paisten mögen

53
00:05:36,020 --> 00:05:42,140
die auch go mögen und umgedreht, aber ansonsten ist das wirklich was wo ich sagen würde das

54
00:05:42,140 --> 00:05:45,580
macht sich nicht großartig Konkurrenz?

55
00:05:45,580 --> 00:05:53,220
Ich mein du kannst ja eh prinzipiell alles in allem machen, mehr oder weniger gut.

56
00:05:53,220 --> 00:05:58,700
Du kannst auch theoretisch alles in C++ machen, wenn du es erträgst oder dass du

57
00:05:58,700 --> 00:06:03,220
selbstwortbegehst oder so aber das theoretisch möglich ist das du kannst auch mehr oder

58
00:06:03,220 --> 00:06:07,620
weniger fast alles in Javascript machen oder in Rust oder ansonsten das einzige was sich

59
00:06:07,620 --> 00:06:12,660
manchmal davon abhält ist halt wenn spezielle Libraries nicht gibt oder je nachdem wenn

60
00:06:12,660 --> 00:06:18,140
es halt was ganz Low-Leveliges sein soll also du wirst wahrscheinlich keinen Boot Manager

61
00:06:18,140 --> 00:06:26,500
in Javascript programmieren wobei selbst das theoretisch gehen würde du brauchst in jedem

62
00:06:26,500 --> 00:06:31,120
Fall ein paar Zeilen Assembler, das du auf die richtigen Adresse springen kannst und

63
00:06:31,120 --> 00:06:35,480
wenn du es dann dort schaffst irgendwie einen Javascript Interpreter zu starten oder was

64
00:06:35,480 --> 00:06:39,320
auch immer, theoretisch wird das bestimmt gehen aber ich glaube nicht das man das machen

65
00:06:39,320 --> 00:06:42,320
will.

66
00:06:42,320 --> 00:06:53,400
DrBronoopsXx excellents subscribtion overlieh danke für den Zap parallel downloads ja

67
00:06:53,400 --> 00:06:58,000
Das ist eine gute Idee, aber das ist auch so schnell im Vergleich zu dem ganzen anderen

68
00:06:58,000 --> 00:06:59,000
Krempel.

69
00:06:59,000 --> 00:07:15,040
Was haben wir denn hier noch offen?

70
00:07:15,040 --> 00:07:21,160
Ah, nee kein C++ heute, please Leute, ich muss weg, ich muss los.

71
00:07:21,160 --> 00:07:26,600
Haben wir nicht sogar noch irgendwo den Pruder muss los Typ?

72
00:07:26,600 --> 00:07:34,120
Tatsächlich, das verwende ich nie, total outdated Meme, warum habe ich das hier überhaupt noch

73
00:07:34,120 --> 00:07:35,120
drinne?

74
00:07:35,120 --> 00:07:40,120
Pruder muss los, das ist komplett, das habe ich noch nie verwendet.

75
00:07:40,120 --> 00:07:46,080
Seit, also doch, aber seit 2 Jahren nicht mehr oder so, noch länger.

76
00:07:46,080 --> 00:07:50,960
Weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg, weg,

77
00:07:50,960 --> 00:07:58,840
weg, jawoll, zack, nochmal Update, ich mache jetzt, ich mache jetzt alle mal kurz die Update

78
00:07:58,840 --> 00:08:01,720
und dann starten wir neu und dann können wir uns das Ganze angucken.

79
00:08:01,720 --> 00:08:04,280
Wie?

80
00:08:04,280 --> 00:08:13,360
nichts, nichts beim Updaten, also den Krempel können wir auf jeden Fall alle schon mal entfernen.

81
00:08:13,360 --> 00:08:25,280
ne 3 1 keck wait alter so installieren wir das noch und dann machen wir reboot und dann

82
00:08:25,280 --> 00:08:39,560
gucken wir uns das mal an toolbox updates toolbox hat keine updates hat meine toolbox

83
00:08:39,560 --> 00:08:49,480
für es aktuell update update so pie charm community ich meine ich könnte ja

84
00:08:49,480 --> 00:08:53,640
professionell installieren weil ich habe eine all all desktop license

85
00:08:53,640 --> 00:09:04,200
ja immer schon kanalpunkte ausgeben umschlag umfrage vorgeschlagen minus 5000 beste umfrage

86
00:09:04,200 --> 00:09:18,080
ja also ich glaube die leute voten für dein voten in deinem sinne ja ja war im browser mit

87
00:09:18,080 --> 00:09:29,120
webgl das das klingt mir jetzt irgendwie nach nicht der besten idee desktop app ja du willst

88
00:09:29,120 --> 00:09:36,440
auch einen browser haben denke ich oder oder war das nicht sinn und zweck der sache was

89
00:09:36,440 --> 00:09:43,600
pipe nf die pippen mache ich chat ihr müsst mir ich habe da keine ahnung von was ist was ist

90
00:09:43,600 --> 00:09:56,800
pippen heißen pippen sacred marriage of pippfile pipp und virtual nf das nimmt ja fast schon

91
00:09:56,800 --> 00:10:01,880
auf ausmaße an wie bei irgendwelchen javascript libraries wurde keine ahnung mehr hast was

92
00:10:01,880 --> 00:10:13,840
alles brauchst was ist das development workflow for humans aber das andere nicht oder wie

93
00:10:13,840 --> 00:10:28,240
pipe nf tool aims best of packages und warum genau brauche ich das jetzt also was ist der sinn

94
00:10:34,240 --> 00:10:39,840
ok dass ich behalte ich behalte das mal im hinterkopf aber jetzt aber jetzt rebooten wir

95
00:10:39,840 --> 00:10:51,960
erst mal war er fertig mit installieren ich hoffe mal ich werde erst mal nichts mit pipp

96
00:10:51,960 --> 00:10:57,640
installieren ich werde erst mal standard library machen oder ist es web request zu machen in der

97
00:10:57,640 --> 00:11:02,320
peisen standard library immer noch so pence champ wie früher das geht auch bestimmt mittlerweile

98
00:11:02,320 --> 00:11:16,920
besser das ging im falschen fenster auf request get und auf geht's jawoll ist es standard library

99
00:11:16,920 --> 00:11:25,440
wie gesagt will start library für ein high charm das sind wir du hast wie bei npm logfiles ich

100
00:11:25,440 --> 00:11:28,400
weiß jetzt nicht ob ich das jetzt gut oder schlecht finden soll ehrlich gesagt dass man

101
00:11:28,400 --> 00:11:41,320
npm nachgebaut hat so auf geht's was haben wir denn für eine version installiert version 3 10.5 ok

102
00:11:41,320 --> 00:12:04,480
pleading edge version komm mal hier 26 heute release date heute danke für die ganzen subs

103
00:12:04,480 --> 00:12:14,360
leute ich habe mir die hälfte vergessen maxilbermann mehr selbst subscription hier schon neun monate so was ist neu in version 11 3.11 ok

104
00:12:14,360 --> 00:12:24,040
3.11 ist 6 es ist 10 bis 60 mal schneller denn bei wisst ihr was ich auch nicht verstehe was

105
00:12:24,040 --> 00:12:31,080
ist denn der unterschied zwischen sieb heißen peipai und und was es da nicht alles gibt das ist mir

106
00:12:31,080 --> 00:12:43,120
alles zu als als nichts heißen main ist es mir alles zu 6 hat sieb heißen kompiliert zu 10 ne das

107
00:12:43,120 --> 00:12:58,920
stimmt nicht oder sieb heißen ist die standard in der breiter implementierung in c aber was ist

108
00:12:58,920 --> 00:13:08,120
der unterschied zwischen peipai und sieb ich habe kein schimmer ok exception groups variating

109
00:13:08,120 --> 00:13:13,680
generics moment moment in piste gibt es generics was ist der sinn davon das ding ist dynamisch

110
00:13:13,680 --> 00:13:21,600
da brauchst du keine generics das ist das ist generic per design ok wahrscheinlich bin ich

111
00:13:21,600 --> 00:13:40,840
einfach zu low IQ dafür das zu verstehen typed dick dick ok nach dick dick required self type ok

112
00:13:40,840 --> 00:13:55,640
ich habe keinen platzen schimmer was da überhaupt sich getan hat in drei punkten gibt sogar ein

113
00:13:55,640 --> 00:14:13,040
int wait a minute was ist das seit wann schreibt man in pisen irgendwelche types type dictionary

114
00:14:13,040 --> 00:14:29,040
ist das so was wie javascript u int 8 array oder sowas return self ich sehe schon ich bin

115
00:14:29,040 --> 00:14:38,880
hoffnungslos outdated ich bin hoffnungslos outdated mit meinem pisen game genau aber

116
00:14:38,880 --> 00:14:48,000
komplett data class transforms ich dachte immer ein vorteil davon sollte dass das gut lesbar

117
00:14:48,000 --> 00:14:55,280
sein sein soll kann ich jetzt drüber kann ich jetzt über streiten ob das gut lesbar ist

118
00:14:55,280 --> 00:15:09,520
ok alles klar 6 hat time was ist ein guter pisen verse version manager was ist quasi das

119
00:15:09,520 --> 00:15:26,560
rust ab in pisen oder das oder das rbn von pisen also wie kann ich wie kann ich neue

120
00:15:26,560 --> 00:15:31,720
versionen installieren ohne mir mein system zu zerschießen oder ist das das was eben

121
00:15:31,720 --> 00:15:54,400
jemand gepostet hat das hier was konder ich habe chat ich habe kein nee das was anderes

122
00:15:54,400 --> 00:16:07,000
das was anderes monka es alter ich blicke da überhaupt nicht durch also bei ruby gab

123
00:16:07,000 --> 00:16:13,800
es rbn das der rbn gemacht konnte den ruby interpreter deiner wahl installieren poetry

124
00:16:13,800 --> 00:16:20,000
ich tippe das einfach nur ein weil ihr das sagt nicht dass ich irgendwie ahnung davon

125
00:16:20,000 --> 00:16:30,680
hätte man könnte das mit dem container machen ja das würde würde funktionieren was ist

126
00:16:30,680 --> 00:16:44,640
das packaging dependency manager nee das ist nichts mit ich würde sagen wir bleiben

127
00:16:44,640 --> 00:16:51,560
einfach bei dem der vor installiert ist ich weiß für meine zweck ist das doch eh erst

128
00:16:51,560 --> 00:17:10,280
mal egal erst mal den shell script ausführen ok vias code def container habe ich noch nie

129
00:17:10,280 --> 00:17:24,400
verwendet was ist das developing inside container six hat time also haben wir alles installiert

130
00:17:24,400 --> 00:17:35,560
ja ja ok lelux habe ich habe ich alles installiert ich habe auch dockerberechtigung remote developer

131
00:17:35,560 --> 00:17:40,280
extension pack muss ich installieren aber das ist vias code ich will vias code nicht

132
00:17:40,280 --> 00:17:47,440
verwenden ich habe keine ahnung was ich will ich wollte eigentlich nur die neust die allerneuste

133
00:17:47,440 --> 00:18:01,920
python beta version ausprobieren ich will dann vias code gar nicht verwenden achso ok

134
00:18:01,920 --> 00:18:10,440
das ist tatsächlich easy warte mal das probieren wir jetzt mal kurz aus ich mein jetzt habe

135
00:18:10,440 --> 00:18:22,760
ich das ganze z plus plus zeug hier offener wartet mal ein eigener ordner ja ich truste

136
00:18:22,760 --> 00:18:27,800
komplett so was muss ich installieren ich habe ich habe schon docker extensions installiert

137
00:18:27,800 --> 00:18:44,000
hier remote remote ok was muss ich installieren die jetzt jetzt jetzt finde ich nicht wo steht

138
00:18:44,000 --> 00:18:52,560
was ich installieren muss hier den krempel da remote development muss ich installieren

139
00:18:52,560 --> 00:18:58,880
webpack webpack habe ich immer in großen großen bogen drum gemacht remote development soll

140
00:18:58,880 --> 00:19:20,840
ich installieren alles klar ok so jetzt wird es jetzt wird es jetzt wird es gleich richtig

141
00:19:20,840 --> 00:19:30,520
zum einstieg mal advance hier restart vias code mache ich sofort so mark dann ja ja ja

142
00:19:30,520 --> 00:19:38,200
dann so und wie geht es jetzt weiter quick try development container the easiest way

143
00:19:38,200 --> 00:19:53,080
to get started the containers also sprich einfach einfach container oder was nee ok es

144
00:19:53,080 --> 00:20:08,920
remote containers docker ist installiert was ist das was ist das für ein massive ja ja

145
00:20:08,920 --> 00:20:16,520
habe ich alles moment das ist wieder was anderes habe ich das habe ich das noch nicht installiert

146
00:20:16,520 --> 00:20:30,160
jetzt ich habe alles installiert nee remote content doch doch tatsächlich jetzt schon

147
00:20:30,160 --> 00:20:34,200
bloatet ja wir brauchen erst mal docker dass wir passen soll ich machen können was restart

148
00:20:34,200 --> 00:20:42,640
schon wieder ok was mache ich jetzt sagt es mir chat wie wie funktioniert das hier check

149
00:20:42,640 --> 00:20:52,440
installation open folder in container attach running container was zum hier try a development

150
00:20:52,440 --> 00:21:01,760
container sample ok ok was auch immer try a try a development container example komm

151
00:21:01,760 --> 00:21:22,240
mal da gibt es sogar postchamp der lädt jetzt wahrscheinlich gerade runter oder ja warum

152
00:21:22,240 --> 00:21:49,920
installiert der npm what is happening bloatet erst mal die festplatte voll erst mal festplatte

153
00:21:49,920 --> 00:21:56,440
voll geblutet ja ich warte es auch nur weil der chat das geschrieben hat und wir wissen

154
00:21:56,440 --> 00:22:00,760
ja prinzipiell der chat hat mittlerweile ein IQ level erreicht da kannst du eigentlich

155
00:22:00,760 --> 00:22:21,920
nichts mehr dagegen sagen was macht das ding monka es ok press start es ist eine flask

156
00:22:21,920 --> 00:22:49,800
ich will keine flask app ja

157
00:22:49,800 --> 00:22:54,240
ich hatte ich eigentlich vor aber der chat mein visual studio code developer container

158
00:22:54,240 --> 00:23:17,960
sind massif geil so und nun installen was installiert er da so chat ohne über jeden zweifel haben

159
00:23:17,960 --> 00:23:35,240
natürlich was was ist aber was macht er denn da im hintergrund

160
00:23:35,240 --> 00:24:03,400
er macht dinger guck mal was macht er denn das würde ich auch immer machen was zum was

161
00:24:03,400 --> 00:24:13,000
installiert er mir da alles bloat bloat run any percent allah was ist das ich glaube ich

162
00:24:13,000 --> 00:24:17,600
muss danach mein visual studio ordner erstmal löschen weil die festplatte voll ist sondern

163
00:24:17,600 --> 00:24:29,040
hatte ich eben noch bei 42 gigabyte nie der installiert mir das gar nicht alles der hängt

164
00:24:29,040 --> 00:24:44,400
einfach so leh leh leute das ist mir jetzt zu zu zu six hätt ich das kann ich das mache

165
00:24:44,400 --> 00:24:53,320
ich jetzt nicht warum gibt es nicht ein stink normalen version manager ok lithium dann sag

166
00:24:53,320 --> 00:24:59,240
mir sag mir was ich machen soll ich habe jetzt einen eigenen ordner so eigene ordner guck

167
00:24:59,240 --> 00:25:04,600
mal beste so ich mache jetzt das damit auf da ist nix drinne in dem ordner ich habe

168
00:25:04,600 --> 00:25:15,080
das ups noch nie verwendet wie in github containers ein def container erstellen in dein projekt

169
00:25:15,080 --> 00:25:21,640
machst du def container geisen oder docker fall 3 ne das mache ich jetzt nicht das mache

170
00:25:21,640 --> 00:25:28,000
ich jetzt nicht das muss ich mir irgendwann mal auf stream angucken was hat er mir denn

171
00:25:28,000 --> 00:25:36,840
jetzt alles draufgehauen remote vs l remote edit man visual studio kohl flatter gehst

172
00:25:36,840 --> 00:25:44,600
weg so auf gehts pie entf ja pie entf ist auch das einzige wie ich habe pie entf sogar

173
00:25:44,600 --> 00:25:59,960
noch drauf wait a minute install gibt sowas wie update oder so install kann ich kann ich

174
00:25:59,960 --> 00:26:14,300
sagen 3.1 3.11 beta 3.11 beta 3 ne ah das das kennt er noch nicht die neueste beta version

175
00:26:14,300 --> 00:26:21,800
also richtig outdated jebaited so wir bleiben jetzt wir bleiben jetzt bei dem was ich installiert

176
00:26:21,800 --> 00:26:31,520
habe ich glaube das ist doch ganze ecke einfacher also neues projekt meinung zu commander krieger

177
00:26:31,520 --> 00:26:38,080
kommt jetzt etwas überraschend ja ich habe mir mit mit dem krieger seit 5 jahren nichts

178
00:26:38,080 --> 00:26:41,880
mal großartig zu tun gehabt gibt es irgendwie den anlass hat er irgendwas angestellt oder

179
00:26:41,880 --> 00:26:50,160
einfach nur so kommt jetzt sehr überraschend ja also virtual entf will auch standardmäßig

180
00:26:50,160 --> 00:26:58,440
ok er macht schon standardmäßig virtual entf der existiert ja die klage existiert

181
00:26:58,440 --> 00:27:03,480
auf dem fall manchmal sachen auf dem kopf habe ich gesehen im stream ich lasse jetzt

182
00:27:03,480 --> 00:27:09,800
einfach mal die defaults ich lasse jetzt einfach mal hier alles default ausgewählt

183
00:27:09,800 --> 00:27:17,760
ja wir gehen davon aus pajam weiß was es macht ich will nicht 3.11 b0 ich will 3.11

184
00:27:17,760 --> 00:27:41,120
b3 aber das gibt es hier nicht ok create ok warum ist da ein breakpoint drinne brauchen

185
00:27:41,120 --> 00:27:54,960
wir nicht die fort beste so terminal sind wir hier ok heißen main ok es läuft schon

186
00:27:54,960 --> 00:28:05,320
also print weg jawoll ok das funktioniert also so ist so was hat er hier dran auszusetzen

187
00:28:05,320 --> 00:28:13,840
no new line at end of file da ist aber pingelig ist aber ganz schön pingelig oder ok das

188
00:28:13,840 --> 00:28:18,880
funktioniert schon einmal also jetzt muss ich erst einmal gucken dass ich die schriftgröße

189
00:28:18,880 --> 00:28:32,960
irgendwie ordentlich einstelle weil das ist nix font font nicht jetblades mode hack auf

190
00:28:32,960 --> 00:28:41,880
16 18 bm jawoll das ist doch schon viel besser habt ihr irgendwelche sieben empfehlung ansonsten

191
00:28:41,880 --> 00:28:51,040
würde ich jetzt einfach mal gucken ob es nicht das rider das rider sieben einfach für pajam

192
00:28:51,040 --> 00:29:03,760
gibt hier nicht davon aus dass es gibt die haben das doch teilweise gradin toh was one dark da purple not

193
00:29:03,760 --> 00:29:13,160
es erinnert mich zu sehr an nord vpn material sieben wishel studio co dark plus kein bild was was

194
00:29:13,160 --> 00:29:25,960
ohne bild nehme ich nicht atom 1 rider ui ja ja please da weiß ich wenigstens wie es aussieht

195
00:29:25,960 --> 00:29:54,160
rider ui perfekt install ich also das default ist aber nicht das rider ui das war high contrast

196
00:29:54,160 --> 00:30:04,560
nee nicht heiko rider dark rider dark ist ok wo ist oder wo ist studio da meine augen

197
00:30:04,560 --> 00:30:15,200
oder wo ist studio da ist jetzt mein font wieder weg ich glaube ich glaube ich starte das noch

198
00:30:15,200 --> 00:30:31,080
mal neu das ist das glaube ich etwas abgekackt gerade nein ja ja ich got it always download ich

199
00:30:31,080 --> 00:30:49,120
weiß zwar nicht was aber always download visual studio sieben wishel studio rider rider dark oder

200
00:30:49,120 --> 00:30:57,560
wishel studio rider dark komm rider dark gut fertig alles klar wunderbar schriftgröße passt

201
00:30:57,560 --> 00:31:06,040
hat jetzt meine meine font size eigentlich umgestellt hack 18 alles gut ok auf geht's

202
00:31:06,040 --> 00:31:16,040
jetzt jetzt bin ich mal gespannt also wisst ihr was ich mir überlegt habe was zum üben ja ich

203
00:31:16,040 --> 00:31:24,280
weiß dass es schon tausendfach gibt aber zum üben einen download speed test also ich werde

204
00:31:24,280 --> 00:31:29,200
mir ich habe mir schon eine seite rausgesucht nämlich die hier guck mal wir werden jetzt einfach

205
00:31:29,200 --> 00:31:36,520
mal ganz dreist nicht speed champ kleinzeitig wir werden jetzt einfach mal ganz dreist ich

206
00:31:36,520 --> 00:31:45,680
habe nämlich eine speed test seite von hetzner gefunden und da kann man einfach downloaden

207
00:31:45,680 --> 00:31:53,800
zehn gigabyte datei das sollte zum speed zum speed testen reichen mein ziel ist ja eh dass

208
00:31:53,800 --> 00:32:00,760
ich das abbrechen kann dann nach irgendwie zwei sekunden wenn er gemessen hat wie schnell es

209
00:32:00,760 --> 00:32:22,720
maximal geht man ks musiker ok also dann dann mal der reihe nach lasst mal lasst mal kurz in

210
00:32:22,720 --> 00:32:29,320
mich gehen also im schluss machen wir das multithreaded das letzte mal wo ich mich mit

211
00:32:29,320 --> 00:32:33,920
multithreaded in python beschäftigt habe war vorbei das kann überhaupt nicht funktioniert

212
00:32:33,920 --> 00:32:39,100
gescheit das ist aber auch schon eine ganze weile her stimmt wir machen da keine semi

213
00:32:39,100 --> 00:32:44,760
cola uns hinten dran ja ich bin es einfach so gewöhnt semi cola hinten dran zu machen

214
00:32:44,760 --> 00:32:55,520
aber guckt mal das funktioniert anscheinend was sagt er denn trailing semi cola ok es

215
00:32:55,520 --> 00:33:02,080
funktioniert aber er will das nicht ok also mit was fangen wir an ich würde sagen wir

216
00:33:02,080 --> 00:33:09,800
fangen mit was ganz simplem an nämlich wie mache ich in htp request mit der standard

217
00:33:09,800 --> 00:33:16,480
library leute ich will noch keine packages mit der standard library htp get wie funktioniert

218
00:33:16,480 --> 00:33:27,520
das how to perform a ttp request bis pyson python part 1 standard library alles klar

219
00:33:27,520 --> 00:33:36,680
rom urlip request import url open das sieht relativ easy aus das will ich so will ich das haben

220
00:33:36,680 --> 00:33:52,040
so ach ja wie viele einrückungen macht man eigentlich ein vier oder zwei was ist denn

221
00:33:52,040 --> 00:33:58,960
so der etablierte standard also ich vermute ich glaube genauso ich glaube vier oder halt

222
00:33:58,960 --> 00:34:09,240
vier vier für den tab ein tab ich glaube da macht startmäßig spaces zu tabs ja vier

223
00:34:09,240 --> 00:34:16,200
spaces ist es chat ist sich uneinig der chat hat so einen hohen intelligenzquotient ist

224
00:34:16,200 --> 00:34:24,840
kein gewunder dass die sich uneinig sind da ist jeder fife hättiger als der andere also

225
00:34:24,840 --> 00:34:30,800
normalerweise mag ich ja zwei das kennt ihr von meinen anderen editor einstellungen normalerweise

226
00:34:30,800 --> 00:34:37,040
habe ich ja immer zwei spaces aber wir bleiben jetzt hier mal bei dem bei dem default so also

227
00:34:37,040 --> 00:34:51,200
warum kann ich das hier nicht verschieben weil die settings shortcuts manage shortcuts gibt es gibt

228
00:34:51,200 --> 00:34:58,840
es von jetframes jetframes irgendwie ne ide sync oder so also dass man die die einstellung von

229
00:34:58,840 --> 00:35:12,320
der ein ide in die andere sinken kann oh hier aha ne login mit dem account ja das ist mist das

230
00:35:12,320 --> 00:35:20,080
meine ich nicht share ide settings ne ich dachte dass ich meine rider keybindings da irgendwie

231
00:35:20,080 --> 00:35:36,080
verwenden kann ok line move line move wo ist move line move line ab

232
00:35:36,080 --> 00:35:49,400
add keyboard shortcut bamm ist zu irgendeinem anderen müll gebunden den keiner braucht keyboard

233
00:35:49,400 --> 00:36:14,520
shortcut down comment comment with line comment with block add keyboard shortcut oh ne das

234
00:36:14,520 --> 00:36:26,400
funktioniert so glaube ich nicht wie kann ich multi wie kann ich multi line binden nicht

235
00:36:26,400 --> 00:36:31,920
mulche wie will ich wie kann ich sagen dass ich kontrol c kontrol kontrol k kontrol c

236
00:36:31,920 --> 00:36:46,920
ne ne anscheinend ja dann kann dann muss es erst mal so reichen also so wir wollen nicht

237
00:36:46,920 --> 00:36:55,240
die nasa url ok wie macht man eine function funktion macht man glaube ich immer noch so

238
00:36:55,240 --> 00:37:05,200
oder def und dann irgendwie sowas wie irgendwie measure download speed in mbit url nach quatsch

239
00:37:05,200 --> 00:37:16,440
hängen geblieben aber brauchen keine klammern und wir brauchen kein simpel cola und wer so

240
00:37:16,440 --> 00:37:23,680
und jetzt den kram hier rein schauen wir mal so funktioniert was hat er denn hier für schmerzen

241
00:37:23,680 --> 00:37:42,720
damit eigentlich expected to blank new lines expected to obendrüber obendrüber ok da hat

242
00:37:42,720 --> 00:37:51,440
aber äußerst genaue vorstellungen wie das aussehen ist wie das auszusehen hat ja sharing

243
00:37:51,440 --> 00:37:57,440
your ide settings ist wie man die shared nicht wie man die zwischen eigenen ide shared oder

244
00:37:57,440 --> 00:38:04,680
das hatte ich eben kurz auf aber ich glaube das ist was komplett anderes

245
00:38:04,680 --> 00:38:09,440
between different instances of the same product ne das ist es ja nicht ich will ja quasi

246
00:38:09,440 --> 00:38:18,160
meine rider shortcuts nach pyjam importieren egal das funktioniert schon so was hat er

247
00:38:18,160 --> 00:38:22,960
denn jetzt für probleme mit url was hat er für probleme mit mbit typo in word mbit soll

248
00:38:22,960 --> 00:38:30,480
ich es allen jetzt megabit schreiben oder wie ok so url url name shadows from autos go

249
00:38:30,480 --> 00:38:40,480
ok ja ok verstehe measure download speed nicht dass ich wüsste was ich mache ich habe immer

250
00:38:40,480 --> 00:38:45,320
noch keine ahnung wie ich es denn dann machen will er unten drunter auch zwei haben acht

251
00:38:45,320 --> 00:38:57,640
er will über und unter den funktion immer zwei zwei sachen haben aha gut zu wissen warum

252
00:38:57,640 --> 00:39:10,920
auch immer so open ne url open s response response read ich will aber nicht response

253
00:39:10,920 --> 00:39:20,520
read ich brauche den download callback oder sowas oder oder ne wie lese ich denn ok heißt

254
00:39:20,520 --> 00:39:28,760
denn download will open chunks oder so stream large binary file with urlib urlib das klingt

255
00:39:28,760 --> 00:39:56,120
auch gut ist miss chunker ne response url open ach hier hatte die response ok also response

256
00:39:56,120 --> 00:40:10,200
read und dann die chunk size also 4096 und aber das muss ja nicht zwangsläufig 4096

257
00:40:10,200 --> 00:40:22,560
sein ok endlos schleifend time es ist weil eins oder ist es weil true ne es ist pysons

258
00:40:22,560 --> 00:40:28,640
es ist weil true mit dem großen t glaub ne wie heißt das programm das er nutzt um linux

259
00:40:28,640 --> 00:40:32,960
den windows zustand das hier ist vor immer workstation ich habe es nur im fullscreen

260
00:40:32,960 --> 00:40:37,120
auf dem zweiten desktop also guck ich hab das so du kannst hier unten mit windows 11

261
00:40:37,120 --> 00:40:41,840
geht das auch du kannst mehrere desktops aufmachen unter windows ich habe einen zweiten desktop

262
00:40:41,840 --> 00:40:46,040
da habe ich vor immer workstation im fullscreen fullscreen drauf laufen kam hier ober mich

263
00:40:46,040 --> 00:40:50,400
ausgestellt und es kann ich mit tastatur shortkarte rüber switchen auf windows und rüber switchen

264
00:40:50,400 --> 00:40:55,440
wieder auf die vm ist sehr praktisch weil die meisten sachen sind einfach pains champ

265
00:40:55,440 --> 00:41:05,520
unter windows zu erledigen ok ergibt das sinn was ich hier mache data response read ok print

266
00:41:05,520 --> 00:41:16,280
data ne moment länge sekunde länge len so ne ein bisschen ein bisschen ein bisschen

267
00:41:16,280 --> 00:41:22,520
es kann erinnern kann ich mich ja noch ok zeig mal her ich weiß dass es ne endlos schleife

268
00:41:22,520 --> 00:41:26,760
ist die aber wahrscheinlich jetzt das ganze ding kaputt machen aber ich will wissen was

269
00:41:26,760 --> 00:41:31,800
passiert denn wenn er fertig lesen ist aber das kann ich bei 10 gigabyte bei 10 gigabyte

270
00:41:31,800 --> 00:41:39,480
ja nicht ausprobieren ich glaube die hatten auch 100 mb datei bäm not found ok was 100

271
00:41:39,480 --> 00:41:51,960
mb excellent null ok null also sprich wenn ich null gelesen habe ist der input zu ende

272
00:41:51,960 --> 00:42:04,400
gibt es gibt es auch sowas wie response ok es gibt keinerlei autocomplete leute wie kriege

273
00:42:04,400 --> 00:42:14,760
ich da jetzt ein autocomplete für dass ich weiß was das ist wie kann ich den dazu überreden

274
00:42:14,760 --> 00:42:26,740
das zu autocompleten ich meine neue type annotation habe ich gelesen man kann glaube ich sowas

275
00:42:26,740 --> 00:42:32,060
machen gell oder str oder so das das geht glaube ich das habe ich letztens in dem video

276
00:42:32,060 --> 00:42:37,760
gesehen space before da ist aber äußerst pingelig so und return wert kann man irgendwie

277
00:42:37,760 --> 00:42:50,160
so machen das kenne ich das war der autocomplete response hat nur read ja da gibt es kein das

278
00:42:50,160 --> 00:43:11,160
hat überhaupt kein autocomplete ok heißen response muss man die hilfe gucken

279
00:43:11,160 --> 00:43:28,440
response rttp response

280
00:43:28,440 --> 00:43:50,920
response das jetzt response response objects also read haben wir zu bieten read into get

281
00:43:50,920 --> 00:44:04,560
header message url headers status na gut status ist 400 das gibt es nicht sowas wie end file

282
00:44:04,560 --> 00:44:34,120
end oder so status nee es gibt nur den status code den brauche ich keine ahnung ob das

283
00:44:34,120 --> 00:44:46,240
nach geht das stimmt stimmt ja ja ich könnte ich könnte tatsächlich if data was kann man

284
00:44:46,240 --> 00:45:07,400
if not data geht das auch ist null ist null not gucken wir mal hey 5 header alter ok das

285
00:45:07,400 --> 00:45:24,160
muss das muss man auch wissen if not gibt es gibt es ein paar sie du weil oder sowas

286
00:45:24,160 --> 00:45:28,520
ich glaube nicht ich glaube es gibt bloß vor und weil wenn ich das richtige erinnerung

287
00:45:28,520 --> 00:45:45,680
habe nee gibt es nicht ok also das das würde funktionieren data response read also in 4000

288
00:45:45,680 --> 00:45:56,760
ok wenn wenn response aber wisst ihr was funktioniert passt mal auf 6 hat heim if nee oder

289
00:45:56,760 --> 00:46:22,040
das wäre jetzt so schön wenn das funktioniert python weil running variable oder sowas es

290
00:46:22,040 --> 00:46:32,840
ein variable in while loop condition excellent while line gleich ja genau sowas will ich

291
00:46:32,840 --> 00:46:45,160
mache ah guck mal da doppelpunkt gleich das ist ja fast wie in goal ein bisschen doppelpunkt

292
00:46:45,160 --> 00:46:58,040
gleich so da können wir uns das nämlich sparen drin checken ob das auch funktioniert oder

293
00:46:58,040 --> 00:47:09,520
oder muss ich jetzt noch sowas wie das dahinter machen irgendwie schauen wir mal nee ok das

294
00:47:09,520 --> 00:47:15,800
ist das finde ich schick dass das finde ich ganz nice nice nice so das ist schon kurz

295
00:47:15,800 --> 00:47:30,640
und knackig das gefällt mir ok cool so ich retorne keinen int sagt er mir gut dann retorne

296
00:47:30,640 --> 00:47:39,440
ich jetzt mal testweise einen int du lernst sogar noch was ja siehst du ich ich weiß gar

297
00:47:39,440 --> 00:47:44,600
nicht wie es anders funktioniert das ist ein ganz neues feature siehst du leute ihr pleading

298
00:47:44,600 --> 00:47:51,160
edge hütonisiert alles die nennen sich python programmierer eigentlich die russleute rennen

299
00:47:51,160 --> 00:47:59,600
sich ja ganz ganz furchtbar cringe ich krass krass tachens oder so da muss ich immer auch

300
00:47:59,600 --> 00:48:04,080
mit den augen rollen wenn ich das höre dass das irgendjemand schreibt oder ich höre nicht

301
00:48:04,080 --> 00:48:07,360
dass es jemand schreibt wenn ich es höre dass das irgendjemand sagt beziehungsweise

302
00:48:07,360 --> 00:48:21,280
wenn ich lese dass es irgendjemand schreibt das ist sehr neu enterprise developer enterprise

303
00:48:21,280 --> 00:48:33,040
developer wäre angela und java ok also weiter lass mal lass lass mal fife hatten also leute

304
00:48:33,040 --> 00:48:38,280
das müssen wir unbedingt etablieren anstatt zu sagen lass mal nachdenken lass mal konzentrieren

305
00:48:38,280 --> 00:48:45,680
sagen wir ab jetzt immer lass mal fife hatten das ist auch sichergestellt dass es auf der

306
00:48:45,680 --> 00:48:57,160
welt genau eine handvoll leute versteht kann ich als sap was entwickler bestätigen ist

307
00:48:57,160 --> 00:49:03,560
das so lass mal fife hatten genau so wie kann ich jetzt überprüfen ok lass mal ich muss

308
00:49:03,560 --> 00:49:09,600
mal ich muss mal kurz in mich gehen leute also ich möchte ja so viel downloaden so viel

309
00:49:09,600 --> 00:49:16,000
wie geht und dann will ich abbrechen nach sagen wir drei sekunden oder so also ich muss

310
00:49:16,000 --> 00:49:34,680
mir die size jetzt merken ok also size gleich data länge ne das muss ich hier oben reinschreiben

311
00:49:34,680 --> 00:49:44,720
ne sei es sei es klar ich soße sei es gleich null so ah alter ich bin mal im semi kohle

312
00:49:44,720 --> 00:49:52,040
und man sei es gleich null so funktioniert jetzt wenigstens das hochzählen und im moment

313
00:49:52,040 --> 00:50:02,400
sei es plus plus kann man plus gleich machen ist plus gleich auch neu ich bilde mir ein

314
00:50:02,400 --> 00:50:11,680
früher musste man sei es plus sei es machen wie gesagt meine pausenkenntnisse halten

315
00:50:11,680 --> 00:50:21,280
sich in grenzen ok sei es das sollte doch jetzt funktionieren mit hochzählen oder ja

316
00:50:21,280 --> 00:50:34,560
funktioniert sei es plus plus geht nicht sei es plus plus geht tatsächlich nicht das

317
00:50:34,560 --> 00:50:42,040
das ist nicht pyson style genug anscheinend was macht man was macht man in pyson anstatt

318
00:50:42,040 --> 00:50:56,400
dessen plus gleich eins wahrscheinlich ne was alter boah der ist aber mal super pingelig

319
00:50:56,400 --> 00:51:05,120
der checker hier aber ist gar nicht schlecht eigentlich gar nicht so übel dann sieht das

320
00:51:05,120 --> 00:51:11,080
wenigstens halbwegs ordentlich aus warum ich diese einschreite weil ich das mir bescheuert

321
00:51:11,080 --> 00:51:18,880
weise angewöhnt habe ok also jetzt wissen wir unsere size davon so und von der idee

322
00:51:18,880 --> 00:51:25,440
her kriege ich ja meine download geschwindigkeit relativ einfach raus und zwar wenn ich irgendwie

323
00:51:25,440 --> 00:51:30,600
meine meine sagen wir mal time now ich weiß dass ich das so nicht geht aber nur mal von

324
00:51:30,600 --> 00:51:36,480
der idee her ja von der idee her würde ich sagen time now dann würde ich so was sagen

325
00:51:36,480 --> 00:51:48,120
wie elapsed elapsed oder sowas und dann irgendwie now minus start falls man das start so und

326
00:51:48,120 --> 00:51:54,640
dann würde ich einfach sei es geteilt durch dauer machen und dann hätte ich mein download

327
00:51:54,640 --> 00:52:05,960
geschwindigkeit so ungefähr aber das funktioniert wahrscheinlich nicht date time now date time

328
00:52:05,960 --> 00:52:19,400
now pyson format on safe ja können die bestimmt das ist eine gute idee format gucken wir mal

329
00:52:19,400 --> 00:52:24,840
ob der das ob der das checkt wenn ich das so mache und sag jetzt hier format document

330
00:52:24,840 --> 00:52:40,960
ja das checkter safe format on safe format safe actions on safe reformat code excellent

331
00:52:40,960 --> 00:53:03,080
nao date time now was kommt denn da raus wenn ich date da date time now benutze nein es

332
00:53:03,080 --> 00:53:20,880
ist ein eine raute ok was kommt denn da raus date time not defined ok import muss man importieren

333
00:53:20,880 --> 00:53:28,260
date time from date time da hätte ich auch selbst drauf kommen können ok und das kann

334
00:53:28,260 --> 00:53:39,360
man voneinander abziehen geht das ach so ja natürlich das ist klar dass das nicht funktioniert

335
00:53:39,360 --> 00:53:49,120
das ist das ist klar dass es nicht funktioniert ich muss quasi sowas hier machen start und

336
00:53:49,120 --> 00:54:01,520
dann date time now minus start ja das funktioniert easy ist das der ist das der pyson gedachte

337
00:54:01,520 --> 00:54:10,960
weg sowas so zu machen oder wir machen mal pyson time oder gibt es sowas wie stop stop

338
00:54:10,960 --> 00:54:18,040
watch oder sowas how to create a stopwatch nee dachte vielleicht in der standard library

339
00:54:18,040 --> 00:54:27,720
schon drinne ist es der pysonic way genau elapsed time how to measure elapsed time in

340
00:54:27,720 --> 00:54:38,800
pyson time it import time time another option science pyson 3. might be perfcounter was

341
00:54:38,800 --> 00:54:48,240
aber warum gibt es da 20 varianten warum gibt es date time now time time time perfcounter

342
00:54:48,240 --> 00:54:53,560
time process time da komme ich ja fast wie ein java script von mit sich in deprecated

343
00:54:53,560 --> 00:55:09,000
sachen perf perfcounter klingt so als wäre es super superschnell jetzt gibt es ein beispiel

344
00:55:09,000 --> 00:55:28,600
für import from time import perfcounter ok ich hasse das kann ich einfach sagen from

345
00:55:28,600 --> 00:55:36,760
time import time oder einfach nur import time und dann sagen time perfcounter doch

346
00:55:36,760 --> 00:56:01,440
viel besser so ok also achtung gucken wir mal perfcounter ahja obvious alles klar 2711

347
00:56:01,440 --> 00:56:27,840
das ist meine ab time wtf das ist meine ab time aha ok ok ich habe keine ahnung warum

348
00:56:27,840 --> 00:56:31,920
es da so viele varianten gibt aber ok wir nehmen jetzt den perfcounter das sieht moderner

349
00:56:31,920 --> 00:56:37,720
und und pfeilfertiger aus ach guck mal der kann sogar das eindrücken jetzt selber machen

350
00:56:37,720 --> 00:56:50,960
da gott sei danke ok also now ist dann time perfcounter bla bla bla read und jetzt ist

351
00:56:50,960 --> 00:57:19,080
die elapsed ist time perfcounter minus start und dann die size size durch elapsed ja wo

352
00:57:19,080 --> 00:57:24,280
da vorne war auch schon mal schneller aber das ist jetzt ja insgesamt über den gesamten

353
00:57:24,280 --> 00:57:34,160
download das passt zum das ist viel zu schnell ah moment moment moment lass mal kurz überlegen

354
00:57:34,160 --> 00:57:45,320
das ist jetzt ja auch in megabyte nee es ist nicht in byte das sind bytes in bytes pro

355
00:57:45,320 --> 00:57:53,200
sekunde was kommt denn da überhaupt raus pro sekunde oder was ist das ja pro sekunde

356
00:57:53,200 --> 00:58:08,200
seh ich das richtig also die einheit hier ist jetzt bytes pro sekunde also bytes pro

357
00:58:08,200 --> 00:58:15,120
sekunde also sprich irgendwie 50 mb das kann durchaus sein 400 mbit zu megabyte das sind

358
00:58:15,120 --> 00:58:23,120
irgendwie was um 15 doch gar nicht so schlecht das das kommt schon ungefähr natürlich ist

359
00:58:23,120 --> 00:58:30,400
das so wie ich das messe absolut hirn verbrannt aber von der idee her ist das glaube ich schon

360
00:58:30,400 --> 00:58:38,400
mal gar nicht verkehrt so so und wir messern wir messern da jetzt natürlich nicht das so

361
00:58:38,400 --> 00:58:48,560
sondern wir warten eine sekunde messern das einmal und dann resetten wir das und dann

362
00:58:48,560 --> 00:58:54,240
messern wir dreimal und nehmen dann irgendwie den höchsten wert oder sowas von würde ich

363
00:58:54,240 --> 00:59:02,560
sagen also lass mal überlegen ob das funktioniert was ich mir da so vorstelle also if elapsed

364
00:59:02,560 --> 00:59:15,680
größer gleich eins also eine sekunde dann bin ich das ok und dann resette ich sei es

365
00:59:15,680 --> 00:59:26,320
und resette ich elapsed auf neustart wert aber wir können uns ich habe eine idee was

366
00:59:26,320 --> 00:59:32,880
wir machen wir machen das objekt orientiert ich baue mir ich baue mir eine stoppur klasse

367
00:59:32,880 --> 00:59:45,240
dafür nicht weil sinnvoll ist sondern einfach das ist das miem zu teimet es gibt ein miem

368
00:59:45,240 --> 00:59:54,040
zu teimet was ihr alles gibt du musst schon start resetten das ist richtig muss start

369
00:59:54,040 --> 01:00:11,080
resetten nicht elapsed so Leute das funktioniert relativ gut ich meine der bricht zwischendrin

370
01:00:11,080 --> 01:00:27,040
mal

371
01:00:27,040 --> 01:00:34,440
ja zwischenzeitlich bricht er immer mal ein da hat der hetzer server kein bock mehr ordentlich

372
01:00:34,440 --> 01:00:44,720
zu antworten dann schwankt es schwankt ein bisschen ja muss die 10 gigabyte datei muss

373
01:00:44,720 --> 01:00:51,200
erstmal wieder bei hetzer in cash geladen werden kannst du bei mir einen kurs machen

374
01:00:51,200 --> 01:00:56,080
ja super ich bin als ich bin am besten um den kurs zu machen ja ich habe selbst keine

375
01:00:56,080 --> 01:01:00,240
ahnung wobei es gibt so viele leute die was verkaufen wovon sie keine ahnung haben da

376
01:01:00,240 --> 01:01:06,560
bin ich wäre ich eigentlich in bester gesellschaft stimmt der buffer ist ein bisschen klein vielleicht

377
01:01:06,560 --> 01:01:10,960
gell ja der buffer ist ein bisschen klein komm wir machen einfach mal das zehnfache

378
01:01:10,960 --> 01:01:18,720
ne ne ich war ich habe keine kurse dafür ist es auch viel zu verplant was ich mache da

379
01:01:18,720 --> 01:01:23,760
müsste ich ja auch mal strukturiert irgendwas ne ne sowas gibt es habe ich nicht aber ich

380
01:01:23,760 --> 01:01:35,760
habe gelesen dass twitter glorian wie heißt er irgendwie so algorithmen verstehen dass

381
01:01:35,760 --> 01:01:42,240
der gerade an einem pyson buch schreibt und ich glaube der hat ein plan davon wenn es

382
01:01:42,240 --> 01:01:50,520
was taugt dann ich denke mal das wird empfehlenswert aber ob es dann wirklich was taugt muss man

383
01:01:50,520 --> 01:02:07,360
mal gucken spuky spuky musik sie konnten leute schon mal kurz was zu essen abholen unten

384
01:02:07,360 --> 01:02:21,000
schicken

385
01:02:21,000 --> 01:02:23,000
Das war's für heute.

386
01:02:23,000 --> 01:02:25,000
Bis zum nächsten Mal.

387
01:02:25,000 --> 01:02:53,000
Das war's für heute.

388
01:02:53,000 --> 01:03:21,000
Das war's für heute.

389
01:03:21,000 --> 01:03:25,600
ist ja nirgends win. Also meine download-geschwindigkeit ist ziemlich am schwanken. Guck mal hier,

390
01:03:25,600 --> 01:03:32,280
wie die einbricht zwischendurch. Das könnte natürlich auch daran liegen, dass Vodafone

391
01:03:32,280 --> 01:03:40,480
sonntags abends irgendwie rumspackt. Was die Magic in Zeile 12 macht, das weiß, das hab

392
01:03:40,480 --> 01:03:44,120
ich auch gerade gelernt. Wie gesagt, ich hab keinen großen Plan davon, aber das hab ich

393
01:03:44,120 --> 01:03:50,200
mir auch gerade ergoogelt. Das nimmt die Variable, also das schreibt das hier in die Variable

394
01:03:50,200 --> 01:03:57,680
Data, sodass du Data in der Schleife verwenden kannst. Ansonsten hättest du es vorher deklarieren

395
01:03:57,680 --> 01:04:03,560
müssen und checkt auch gleichzeitig Data auf die Abbruchbedingungen, ob Data true ist.

396
01:04:03,560 --> 01:04:11,640
Das ist fast ein bisschen wie JavaScript, weil eigentlich kann ja ein Int, wobei das

397
01:04:11,640 --> 01:04:21,840
ist ja gar kein Int. Doch, nee, das ist ein Array oder sowas, was da zurückkommt. Eigentlich

398
01:04:21,840 --> 01:04:29,840
kann ein Array nie false sein, aber in Python und JavaScript geht das anscheinend. Das sind

399
01:04:29,840 --> 01:04:44,600
4 Kilobyte mal 10. Musst du nicht die Endzeit, Startzeit messen, bis die Datei fertig geladen

400
01:04:44,600 --> 01:04:53,720
ist? Nee, ich messe eine Sekunde lang. Guck mal, sobald eine Sekunde um ist, messe ich

401
01:04:53,720 --> 01:05:03,000
die Zeit und dann setze ich Startzeit und gemessene Size wieder auf Null und dann mach

402
01:05:03,000 --> 01:05:12,840
ich wieder von vorne. Also, das find ich nice. Also mein Downloadspeed schwankt ganz schön.

403
01:05:12,840 --> 01:05:17,080
Warum das am Anfang so schnell ist, liegt wahrscheinlich daran, weil der Kram irgendwo

404
01:05:17,080 --> 01:05:26,760
im Cache liegt. Entweder bei mir oder auf dem Server, beim Anbieter oder so, keine Ahnung.

405
01:05:26,760 --> 01:05:37,480
Du nimmst 10 Gigabyte an RAM auf? Nee, Quatsch. Also so blöd wird er nicht sein. Der wird

406
01:05:37,480 --> 01:05:46,200
da schon re-usen und garbage collecten zwischendurch. Das wäre ja bescheuert, wenn das mein RAM

407
01:05:46,200 --> 01:05:50,080
voll machen würde. Ich mein, das hier ist nicht mehr, das ist ja nicht mehr referenziert

408
01:05:50,080 --> 01:05:56,240
nach einem Durchlauf. Das wird er schon aufräumen. By the way Leute, wisst ihr, was ich gesehen

409
01:05:56,240 --> 01:06:02,280
hab? Hier auf dieser Hilfeseite vorhin zu response, es gibt doch sowas wie read into. Und jetzt

410
01:06:02,280 --> 01:06:07,640
mal eine blöde Frage, warum gibt es read und gibt es read into? Read into liest das

411
01:06:07,640 --> 01:06:14,680
in einen Buffer, den ich vorher bereitstellen muss. Ist das schneller, weil das hier jedes

412
01:06:14,680 --> 01:06:30,920
Mal dynamisch einen Buffer macht? Also wenn ich jetzt sage read into, also ja. Wie macht

413
01:06:30,920 --> 01:06:37,880
man eigentlich einen Buffer? Wie heißt das? Buffer fixed size. Float a game, Dankeschön

414
01:06:37,880 --> 01:06:52,280
für den Sub. Wie macht man denn Array? Wie macht man denn Array? Array, jawoll. Ich brauche

415
01:06:52,280 --> 01:07:14,240
einen Buffer mit einer festen, wie geht das? Fixed size. Fixed size, ok. Das kann doch

416
01:07:14,240 --> 01:07:23,200
nicht sein. Nee, nee, nee, nee, nee, nee. Wenn die in der Standard Library drinstehen

417
01:07:23,200 --> 01:07:36,840
haben, read into, da brauche ich dazu garantiert keine extra Library, dass es. Aber List gleich

418
01:07:36,840 --> 01:07:56,320
Null kann es ja alles sein. Memory View, what? Ok, Python Array, bytes. Byte, was? Byte Array

419
01:07:56,320 --> 01:08:05,560
message returns, a byte array object. Ich bin einfach nur am googeln, aber so ist das

420
01:08:05,560 --> 01:08:14,640
halt, wenn man was Neues lernt. Byte Array Syntax. Byte Array Source. Ich habe keine

421
01:08:14,640 --> 01:08:33,840
Ahnung, geht das? Buffer? Und was jetzt? Byte Array? Ok, Byte Array. Ja, example please.

422
01:08:33,840 --> 01:08:49,560
Byte Array Objects. Byte Array. Source encoding. Ah, zero filled instance with length 10. Also

423
01:08:49,560 --> 01:09:03,920
Byte Array 4096. Read into. Ich glaube der andere Weg ist schon der bessere, oder? Read

424
01:09:03,920 --> 01:09:11,280
into returns die Länge der gelesenen bytes. Also es ist nicht data, sondern es ist Länge.

425
01:09:11,280 --> 01:09:21,280
Und da muss ich gucken, ob Länge größer Null ist. Ok, Leute das andere ist aber schöner.

426
01:09:21,280 --> 01:09:26,320
Wobei ich dann hier direkt, wobei das muss ich nicht Länge numm, numm heißt das jetzt.

427
01:09:26,320 --> 01:09:42,320
Dann muss ich hier nämlich size. Und ist das jetzt? Nein. Was steht denn in numm drinnen?

428
01:09:42,320 --> 01:10:06,360
Was? Ah, Moment, der schreibt das da jetzt rein. Kann man das klammern? Aha, hey, das

429
01:10:06,360 --> 01:10:13,760
funktioniert. Das ist jetzt aber eher C-Style als Python-Style, oder? Ich glaube nicht,

430
01:10:13,760 --> 01:10:24,880
dass es so gedacht ist, das zu verwenden. Aber das funktioniert. Aber wirklich schneller

431
01:10:24,880 --> 01:10:37,560
ist es auch nicht. Aber das macht keinen Unterschied, guckt mal. Das macht überhaupt keinen Unterschied

432
01:10:37,560 --> 01:10:43,240
in der Geschwindigkeit. Ok, das mache ich wieder rückgängig, das ist ja komplett unsinnig

433
01:10:43,240 --> 01:10:55,200
so. Also es war vorher doch schon schöner. Das Byte Array kommt auch wieder weg. Read,

434
01:10:55,200 --> 01:11:00,240
ja. 4096 muss reichen. Das Internet wird auch... Ja, aber guckt mal, die ersten paar

435
01:11:00,240 --> 01:11:06,120
kommen aus irgendeinem Cache und es geht mega schnell. Und danach geht es wieder runter.

436
01:11:06,120 --> 01:11:14,400
Jetzt bleibt es länger oben. Nee, jetzt geht es wieder runter. Ok, jetzt rechnen wir das

437
01:11:14,400 --> 01:11:20,600
mal um. Jetzt Leute, jetzt rechnen, lass mal Fivehead sein. Also wir rechnen das jetzt

438
01:11:20,600 --> 01:11:29,080
um. Die... Nimm mal raid. Let raid gleich... Was mache ich denn hier, meine Güte. Raid,

439
01:11:29,080 --> 01:11:40,280
klar. Kein Semikolon, kein Let, kein War, nix. Nimm mal raid. Ja, ich bin ja noch zu

440
01:11:40,280 --> 01:11:50,720
hardcoded von anderen Sachen. Size durch elapsed ist die Raid. Ok. Raid... Leute, wir

441
01:11:50,720 --> 01:11:58,480
machen es in Bit, oder? Wir machen es in Megabit. Also es ist die Size mal 8, dann ist es dann

442
01:11:58,480 --> 01:12:15,640
in Bit und dann die Raid durch 1024 Kilobit durch 1024 Megabit. Ergibt das Sinn, was ich

443
01:12:15,640 --> 01:12:44,920
mache? Schauen wir mal. Nicht... Naja. Wobei das kann schon sein. Was ist noch ein Vorstellungsgespräch

444
01:12:44,920 --> 01:12:50,200
für Physiak? Ich dachte, du hast den Vertrag schon unterschrieben. Ja, kommt hin, oder?

445
01:12:50,200 --> 01:12:56,920
Ich meine, es müsste eigentlich 400 MBit sein. Nee, nicht das durch 8. Ich habe das

446
01:12:56,920 --> 01:13:03,360
hier mal 8 gemacht, dass ich es in Bit habe. Ich habe das ja schon in Bit. Dadurch habe

447
01:13:03,360 --> 01:13:14,120
ich das in Bit. Ich sag doch, die suchen Leute. Wie verrückt. Ok, passt, passt. 400 MBit,

448
01:13:14,120 --> 01:13:24,160
maximal. Leute, ich habe eine Idee. Wir traffic-shapen einfach mein Interface runter auf irgendwas

449
01:13:24,160 --> 01:13:30,520
und dann sehen wir, ob... Monkeys. Was ist das? No. Was habe ich gedrückt? Wir traffic-shapen

450
01:13:30,520 --> 01:13:42,600
jetzt mein Interface und dann sehen wir, ob das funktioniert oder nicht. Ich muss aber

451
01:13:42,600 --> 01:13:48,320
noch mal kurz in mich gehen. Also, das hier ist die Raid in MBit. Wir machen das anders.

452
01:13:48,320 --> 01:13:58,200
Wir machen jetzt noch was wie Max Raid. Hier unten returnen wir Max Raid. Problem ist nur,

453
01:13:58,200 --> 01:14:05,120
wenn es 0 ist, Leute. Da gibt es die Weit-durch-Null-Error. Wobei, nee. 0 durchgeht ja. Plus durch

454
01:14:05,120 --> 01:14:15,960
0 geht nicht. Also, Max Raid. Was hat er für Schmerzen jetzt? Expected Type-In, Gott, Float.

455
01:14:15,960 --> 01:14:22,160
Ja, dann stell dich nicht so an, dann Float. Nee, das muss so schon funktionieren. Ich

456
01:14:22,160 --> 01:14:33,920
will da keinen Exception Handling-Krobot machen. Raid. Und jetzt, und jetzt, passt mal auf,

457
01:14:33,920 --> 01:14:48,720
und jetzt machen wir es so. If Max Raid ist kleiner als Raid, nur dann setzen wir Max Raid

458
01:14:48,720 --> 01:14:52,920
auf Raid. Das heißt, so kriegen wir immer das Schnellste, weil was interessiert mich,

459
01:14:52,920 --> 01:14:56,600
wenn der Download zwischenzeitlich mal schwankt. Ich will einfach nur gucken, was das Schnellste

460
01:14:56,600 --> 01:15:07,240
ist, was durchging. Kann man sowas machen? Max Raid gleich Raid if kleiner Raid? Geht

461
01:15:07,240 --> 01:15:20,040
sowas? Nee. Ok, weil in Ruby würde das funktionieren. Aber das geht anscheinend nicht. Ja gut, else

462
01:15:20,040 --> 01:15:24,680
könnte ich hier machen, aber das ist... Ah, das geht tatsächlich, aber das ist nicht

463
01:15:24,680 --> 01:15:50,640
das, was ich haben will. So. Rind. Max Raid. Ja, am Anfang flutscht es mal. Wir brauchen

464
01:15:50,640 --> 01:15:58,440
noch mal einen anderen Server zum Speedtesten. Speedtest10gb. Gibt es da nicht noch irgendwelche...

465
01:15:58,440 --> 01:16:02,600
Hier, genau das gleiche habe ich gesucht im Hinterhalt. Dafür habe ich nämlich diesen

466
01:16:02,600 --> 01:16:21,960
Hetzner Speedtest Server gefunden mit 10gb. Belvispeed. Wunderbar. Das wollte ich auch

467
01:16:21,960 --> 01:16:40,560
machen. Ist doch ok. Mal gucken, wie sehr das runtergeht. Alter, warum bricht denn der

468
01:16:40,560 --> 01:16:52,360
Download immer so krass schnell ein? Guck mal, der Download ist total... Der startet

469
01:16:52,360 --> 01:17:00,320
mega schnell und dann wird es kacke. So als Traffic Shape mich Vodafone übelst runter.

470
01:17:00,320 --> 01:17:10,760
Der Download ist einfach nur halb so schnell, wie er sein könnte. Startet mega schnell,

471
01:17:10,760 --> 01:17:13,000
wahrscheinlich, weil es aus dem Web-Server Cache kommt oder so. Aber das sind ja eh

472
01:17:13,000 --> 01:17:23,760
nur Nullen wahrscheinlich. Guck mal, das ist richtig mies der Download zwischenzeitlich.

473
01:17:23,760 --> 01:17:28,680
Sind die ersten Biles nicht immer mega schnell? Ja, wahrscheinlich, weil sie aus dem Cache

474
01:17:28,680 --> 01:17:40,320
kommen. Ach, das ist random? Ja, trotzdem. Aber trotzdem Müll. Guck mal, wie lahm das

475
01:17:40,320 --> 01:17:49,000
ist. Also müsste ich theoretisch die ersten 10 Sekunden vom Download fast schon wegschmeißen.

476
01:17:49,000 --> 01:18:09,840
Ne, ne. Haben wir noch irgendwie einen schönen Test-Server? Speed X? Test File. Ok, ich

477
01:18:09,840 --> 01:18:37,120
nehm' das. Test File. Test Download. Bandwidth. Test. Vergleiche das mal mit Weget. Doch,

478
01:18:37,120 --> 01:18:40,880
ich könnte Speedtest CLI nehmen. Natürlich könnte ich das. Das ist aber nicht hin und

479
01:18:40,880 --> 01:18:51,760
zweck der Sache. So, ich Wegette das mal. Ja, ja. Guck mal. Also mein Speedtest ist

480
01:18:51,760 --> 01:18:57,560
relativ genau. Das geht einfach runter. Na gut, es ist Sonntagabend und es ist Vodafone.

481
01:18:57,560 --> 01:19:03,280
Aber wisst ihr, was wir machen könnten? Ja, zwischens. Ja, das ist genau das, was ich

482
01:19:03,280 --> 01:19:07,960
auch messe. Aber wisst ihr, was wir machen könnten? Wir könnten einfach einen parallelen

483
01:19:07,960 --> 01:19:13,800
Download machen. Guck mal, sowas hier. Aber machen wir nur 10G. ARIA 2C und dann Minus

484
01:19:13,800 --> 01:19:32,720
X oder so. X20? Ne. Das ist ein Kommandozeilen-Download-Manager, der Multithreaded downloaden kann. Minus X und dann

485
01:19:32,720 --> 01:19:44,560
irgendwie 16. Da flutscht's, wenn ich jetzt einfach 16 Verbindungen aufmache. Guck mal.

486
01:19:44,560 --> 01:19:48,320
Das bleibt am Limit. Leute, ich seh schon, wir müssen heute auch noch lernen, wie man

487
01:19:48,320 --> 01:19:57,160
Multithreading in Python macht, dass ich das nachbauen kann. Ich ahne Schlimmes. Guck,

488
01:19:57,160 --> 01:20:05,080
der bleibt immer auf einem Niveau, weil der eben zig, der macht 16 Verbindungen auf.

489
01:20:05,080 --> 01:20:10,760
Das ist kein Ding. Aber mit einer Verbindung, können wir noch mal ausprobieren, wie das

490
01:20:10,760 --> 01:20:18,160
mit einer Verbindung aussieht. Ja, jetzt ist es noch im cache und sobald es aus dem cache

491
01:20:18,160 --> 01:20:29,200
draußen ist, geht's runter. Guckt. Async ist angenehmer. Ich weiß aber nicht, ob mir Async

492
01:20:29,200 --> 01:20:41,320
was bringt. Ich brauch ja wirklich 10 gleichzeitige Downloads im Endeffekt. Ja, ok. Zumindest wissen

493
01:20:41,320 --> 01:20:58,080
wir schon mal, dass wir wissen schon mal, dass meine Download-Messungen relativ akkurat

494
01:20:58,080 --> 01:21:04,720
sind. Ich mein, exakt das gleiche passiert bei mir auch. Guck, das startet schnell.

495
01:21:04,720 --> 01:21:12,920
Trosselt der Server die Connections? Ganz ehrlich, ich glaube eher sogar, dass das Vodafone ist.

496
01:21:12,920 --> 01:21:25,000
Würde ich jetzt einfach mal vermuten, ja. Weil Sonntag Abend ist. Genau so ist das hier.

497
01:21:25,000 --> 01:21:32,120
So. Alles klar. Ok, Fivehead-Time. Lass mal, lass mal. Also das mit der Max-Rate, das lass

498
01:21:32,120 --> 01:21:48,400
ich mal, das lass ich mal weg. Ich mein, wir könnten auch sowas machen wie Bites to Mega-Bit.

499
01:21:48,400 --> 01:21:57,160
Oh Gott, man. Ich wusste, wer das... Ich hab mir einfach zu sehr Klammern und Simikolon

500
01:21:57,160 --> 01:22:04,440
angehört. Bites to Mega-Bit. So, und da machen wir jetzt einfach Return. Das durch 8 durch

501
01:22:04,440 --> 01:22:15,280
1024 durch 1024. Stimmt das, was ich da mache? Ihr seid sixheadiger als ich. Und wenn ich

502
01:22:15,280 --> 01:22:41,360
jetzt sage, Rate? Mal 8? Oh. Mal 8? Nee, Leute. Aber das muss man, das Klammern?

503
01:22:41,360 --> 01:23:04,200
Hä? Ach, der macht immer noch mal 8. Hier. Lull.

504
01:23:04,200 --> 01:23:16,520
Ja, ja. Das ist aber falsch, was ich mache. Moment. Moment, nicht die Rate, die Size.

505
01:23:16,520 --> 01:23:25,520
Die Size. Wartet mal. Ist zwar doch richtig, was ich gemacht hab am Anfang. Nee. Ah, Moment.

506
01:23:25,520 --> 01:23:31,120
Ich bin, ich bin, ich bin... Also jetzt ist es... Ah, man, Bites, Bit, Umreiche, please.

507
01:23:31,120 --> 01:24:00,080
Das ist jetzt die Rate Bites pro Sekunde. Ah. Okay, das sind jetzt Mega-Bites pro Sekunde.

508
01:24:00,080 --> 01:24:16,640
Und wenn ich das Ganze jetzt mal 8 rechne, dann stimmt's. Okay, gut. Alles klar. Das

509
01:24:16,640 --> 01:24:28,120
ist dann, können wir uns, können wir uns das sparen. Bites. Alles klar. So. Das ist jetzt

510
01:24:28,120 --> 01:24:34,200
vielleicht ein bisschen besser lesbar. Also, wie können wir das jetzt mit mehreren Connections

511
01:24:34,200 --> 01:24:44,160
machen? Multithreading ist einfach. Thread, threading, target, minor, target, arcs. Okay.

512
01:24:44,160 --> 01:24:54,200
Warum threads? Ja, was ist denn die Alternative? Ich lese in Chunks. Ja, aber ich mach nur eine

513
01:24:54,200 --> 01:25:07,920
Verbindung auf. Ich will mehrere Verbindungen haben. Ich will mehr, ich will das hier quasi

514
01:25:07,920 --> 01:25:12,400
mehrfach starten. Also von der Idee her, lasst mal überlegen, vielleicht sollten wir das

515
01:25:12,400 --> 01:25:29,480
hier erstmal ordentlich machen, sodass es gut funktioniert. Also, ich müsste jetzt ja

516
01:25:29,480 --> 01:25:46,440
von der Idee her, das sagen wir mal 10 mal starten und dann in allen Jobs, meine, oh

517
01:25:46,440 --> 01:26:00,120
nee, ach du Scheiße. Wie mach ich denn das jetzt gescheit? Ich müsste den Kram ja auch

518
01:26:00,120 --> 01:26:08,000
noch irgendwie synchronisieren, oder? Boah nee, das ist mir jetzt zu kompliziert. So,

519
01:26:08,000 --> 01:26:14,240
wenn ich einmal insgesamt durchlaufen lassen könnte, wäre das easy. Also, wenn ich einfach

520
01:26:14,240 --> 01:26:25,440
bis zum Ende durchlaufen lassen könnte und dann würde ich die Zeit, nee. Da muss ich

521
01:26:25,440 --> 01:26:29,440
mir jetzt erstmal Gedanken zu machen. Ich glaube, das schieben wir jetzt erstmal auf,

522
01:26:29,440 --> 01:26:35,360
bis ich ein bisschen mehr Basic Sachen gemacht habe. Genau, ich müsste aus allen Threads

523
01:26:35,360 --> 01:26:44,760
die Rate addieren, aber, wobei gleichzeitig ist egal, oder? Nee, wisst ihr was ich bräuchte?

524
01:26:44,760 --> 01:27:01,800
Ich bräuchte eine Liste, wo jeder Thread seine aktuelle Rate reinschreibt und dann

525
01:27:01,800 --> 01:27:07,720
bräuchte ich noch so eine Art Monitoring Thread, der dann die Rate einmal in einer Sekunde

526
01:27:07,720 --> 01:27:16,240
ausliest und zusammenrechnet. So was in der Richtung müsste man. Also quasi, ich schreibe

527
01:27:16,240 --> 01:27:23,080
es nur sinngemäß hin, dass man irgendwie eine Liste hat. So, das ist Rate 1, also keine

528
01:27:23,080 --> 01:27:29,120
Ahnung, das hier ist Thread 0, das hier ist Thread 1, das 2, 3, 4, 5, 7, 8. So, an jeder

529
01:27:29,120 --> 01:27:34,400
Stelle schreibt der Thread seine aktuelle Transferrate hin und dann würde ich noch einen

530
01:27:34,400 --> 01:27:40,720
Thread starten, der einmal in einer Sekunde nachguckt und das ausgibt, was da drin steht.

531
01:27:40,720 --> 01:27:49,040
MonkaS, Alter. Da bin ich mal gespannt, ob wir das gebacken kriegen. Aber von der Idee

532
01:27:49,040 --> 01:27:58,600
her funktioniert ja meine Messmethode so halbwegs. Wir sollten vielleicht nach 3 Sekunden, Leute,

533
01:27:58,600 --> 01:28:03,080
wir brechen, ich meine, das sind 100 GB, die lade ich nicht so schnell runter. Wir brechen

534
01:28:03,080 --> 01:28:12,680
ab, wir brechen ab nach 10 Lesendinger, irgendwie Counter gleich 0. Kann man eigentlich sowas

535
01:28:12,680 --> 01:28:37,520
hier machen? Was? Heißen Multi Initialization. Assign Values. Hä? Ich bin einer, ich will

536
01:28:37,520 --> 01:28:54,640
das gleiche Value haben. So. Okay, das ist doch unlesbar as fuck, oder? Das macht man

537
01:28:54,640 --> 01:29:01,600
doch nicht. Sag mal, Leute, wie würdet ihr das schreiben? So oder untereinander einfach?

538
01:29:01,600 --> 01:29:09,040
Untereinander ist die schönere Variante, oder? So, oder? Ich glaube, so ist doch die bessere,

539
01:29:09,040 --> 01:29:26,000
die bessere Variante. AndiProfis hat Python-Channels wie aus Go oder Rust? Naja. Jede Programmiersprache

540
01:29:26,000 --> 01:29:30,040
hat Channels in diesem Sinn, aber halt nicht Sündagstechnisch in die Sprache integriert

541
01:29:30,040 --> 01:29:37,520
wie Go. Es gibt in jeder x-beliebigen Sprache sowas wie Channels, aber halt nicht mit der

542
01:29:37,520 --> 01:29:55,200
schönen Sündags dazu. Warum überhaupt vor der Schleife Initialisieren? Äh. Naja,

543
01:29:55,200 --> 01:30:03,480
weil ich die Sachen brauche in der Schleife und das Ergebnis nach der Schleife dementsprechend

544
01:30:03,480 --> 01:30:07,360
kann ich es nicht in der Schleife machen, weil dann das Ergebnis nicht nach der Schleife

545
01:30:07,360 --> 01:30:16,600
da ist. Na, wenn ich start in die Schleife pack, funktioniert das Ganze ja nicht mehr.

546
01:30:16,600 --> 01:30:33,080
So, Counter. Machen wir mal hier, Counter. Wie war das jetzt? Plus gleich eins, ne? Genau.

547
01:30:33,080 --> 01:30:48,760
Und jetzt, if, Counter, größer oder, wir machen mal größer, gleich fünf und dann

548
01:30:48,760 --> 01:31:11,840
ausführen. Ja, funktioniert. In dem Fall ist es doch egal, ob das richtig echtes Multiswerding

549
01:31:11,840 --> 01:31:19,160
ist oder irgendwas, was automatisch lockt oder, oder irgendwie das JavaScript-mäßig

550
01:31:19,160 --> 01:31:25,320
Event-Loop queued. Wir warten doch eh hauptsächlich IO hier. Das sollte doch eigentlich keine

551
01:31:25,320 --> 01:31:33,440
großartigen Auswirkungen haben. Wenn ich die Schleife, deine Vorschleife ist in dem Fall

552
01:31:33,440 --> 01:31:39,240
tatsächlich blöd, weil ich mache hier diese Zuweisung drinnen. Ja, aber wahrscheinlich

553
01:31:39,240 --> 01:31:45,520
ist es tatsächlich besser in dem Fall. In dem Fall ist es tatsächlich, ne, ich will

554
01:31:45,520 --> 01:31:56,520
es ja laufen lassen. Fünf Mal oder bis es zu Ende gelesen ist. Das kann ja auch sein.

555
01:31:56,520 --> 01:32:03,760
Letztendlich macht es aber nicht viel Unterschied. Das ist eins, zwei, drei, vier, fünf, sondern

556
01:32:03,760 --> 01:32:22,040
beim sechsten Mal bricht es ab. Guck mal, größer, gleich fünf. Fünf, bumm. So. Wunderbar.

557
01:32:22,040 --> 01:32:29,280
Eine Sekunde. Alter, es ist la... What the fuck? Ja. Okay, funktioniert. Wunderbar. So und

558
01:32:29,280 --> 01:32:40,480
das jetzt Multithreaded. Das wird ja, das wird ja was. Eigentlich setzt man auch alles

559
01:32:40,480 --> 01:32:47,400
unnötige, was nicht im Rift drin ist, außerhalb wie die Variablen. Du meinst, kann ich das

560
01:32:47,400 --> 01:32:54,440
dann da drin gesche... Achso, ja. Meinst du so? Ja, ist auch deutlich sinniger, oder?

561
01:32:54,440 --> 01:33:01,640
Was anderes kann ich nicht, gibt es nicht? Da kommt doch ein Request zurück, oder? Kann

562
01:33:01,640 --> 01:33:15,760
ich nicht so machen? Request? Und dann das hier einfach weglassen? Ne. Warte mal. Einmal

563
01:33:15,760 --> 01:33:37,400
nicht Response. Response. Response. So. Muss auch gehen. Ach, jetzt close da das aber nicht

564
01:33:37,400 --> 01:33:46,120
automatisch, ne? Also müsste da ein Response close. Auf der anderen Seite, wenn es irgendeine

565
01:33:46,120 --> 01:33:51,160
Exception gibt, dann kackt es ab. Dieses Width gibt es doch eh nur für den Fall der

566
01:33:51,160 --> 01:33:55,680
Fälle, dass es dann finally Block drum macht, oder? Das ist schon, das ist ein bisschen

567
01:33:55,680 --> 01:34:02,000
wie wenn ich ein, ein, ein Using in C-Sharp mache, vermute ich jetzt einfach mal. Ne,

568
01:34:02,000 --> 01:34:13,560
dann ist das so schon sinniger. Was, while data gleich und re... Wie das funktioniert?

569
01:34:13,560 --> 01:34:32,200
Und? Range? Was zum? Das geht? Igitt? Was hab ich denn? Was ist das? Monka. S hoch,

570
01:34:32,200 --> 01:34:35,920
hoch 3, Alter. Und wie kann ich jetzt auf Range hier drinnen zugreifen? Ah ne, gar

571
01:34:35,920 --> 01:34:49,040
nicht, muss ich ja nicht. Nein. Funktioniert nicht. Chat. Funktioniert nicht, was ihr gesagt

572
01:34:49,040 --> 01:35:01,120
habt. Nope. No Pass. Das wäre ja aber auch hässlich für die Nacht. Das ist, ja der

573
01:35:01,120 --> 01:35:11,280
macht einen und. And? Ne, das, ich will doch keine logische, ich will doch hier keine logische,

574
01:35:11,280 --> 01:35:17,600
ne, ne, ne, ne. Da kommt jetzt hier als Datatyp True oder so wieder raus. Ne, ne, ne, ne,

575
01:35:17,600 --> 01:35:28,160
das will ich nicht. Hier soll ja, hier soll ja wirklich die, die, die, die Response drinnen

576
01:35:28,160 --> 01:35:32,040
stehen. Ne, ich bleib jetzt mal bei dem, was ich hier gemacht hab, man, das funktioniert

577
01:35:32,040 --> 01:35:41,040
ja ganz gut. So, das mach ich wieder weg. Alter, wie oft hab ich denn die eins bitte

578
01:35:41,040 --> 01:35:53,280
schon copy pasted? Was? Ok, wunderbar, Kunst. Ok, wie kriegt man das Multithreaded? Jetzt

579
01:35:53,280 --> 01:36:04,960
wird's, jetzt, jetzt wird's richtig advanced. Also, ok, Multithreaded. Python. Task. Coroutines

580
01:36:04,960 --> 01:36:22,920
and Tasks. Ok. Creating Tasks. For Range. Async IO. Create Tasks. Background. Oh, jetzt

581
01:36:22,920 --> 01:36:27,960
wird's, jetzt wird's aber pfeifert. Was war das andere, was jemand hier oben geschrieben

582
01:36:27,960 --> 01:36:32,680
hat? Threading Thread. Was ist denn da jetzt schon wieder der Unterschied? Warum gibt es

583
01:36:32,680 --> 01:36:58,480
da verschiedene Dinge? Wann verwende ich was? Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok.

584
01:36:58,480 --> 01:37:21,240
Wann verwende ich was? Ok, ich mach erst mal Threading Thread. Ok. Ok. Das, also, was

585
01:37:21,240 --> 01:37:33,120
machen wir da jetzt? Import? Ne. Threading? Einfach so? Ok, das muss ich jetzt, das muss

586
01:37:33,120 --> 01:37:39,360
ich jetzt mal kurz austest. Also, ich sag jetzt, was? Threading? Thread? Und dann? Hab

587
01:37:39,360 --> 01:37:49,160
ich kein Autocomplete? Das ist schonmal äußerst not Pog? Doch, ich hab Autocomplete. Group?

588
01:37:49,160 --> 01:38:12,080
Target. Alter, wie? Target. Also, Target ist dann Measure. Aber das, das, das braucht

589
01:38:12,080 --> 01:38:32,680
ja ein Argument. Ah, hier. Arcs. Arcs. Und das ist dann was? So? Und jetzt sag ich irgendwie,

590
01:38:32,680 --> 01:38:37,560
was kommt denn da jetzt zurück? Irgendwie ein Thread? Oder so? Und dann sag ich Threading

591
01:38:37,560 --> 01:38:59,120
Join? Ne. Hab ich kein Plan ab, was ich mache? Einfach so Join? Ne. T1 Join? Join? Ah. Run?

592
01:38:59,120 --> 01:39:09,520
Join? Start. Was ist denn da jetzt der Unterschied? Start. Also, muss ich erst jetzt noch sagen

593
01:39:09,520 --> 01:39:23,040
Start? Und dann Join? Oder wie? Oder wo? Ne. Wow, wow, wow. 33 were given? What? Jedes

594
01:39:23,040 --> 01:39:33,880
Character, oder? Wie übergebe ich denn da Arcs? Bei den Arcs musst du ein Komma hinter

595
01:39:33,880 --> 01:39:53,400
die Klammer machen, dass er Eck. Hinter die Klammer? So? Oder so? Alter, 5 Head. Da wär

596
01:39:53,400 --> 01:39:58,680
ich ja nie drauf gekommen. Kann ich nicht, warum kann ich nicht einfach sowas hier machen?

597
01:39:58,680 --> 01:40:13,440
Jetzt mal was anderes. Jetzt mal was bescheuertes. Wie ist denn die Lambda Syntax in Python?

598
01:40:13,440 --> 01:40:39,200
Wie sieht denn das aus? So? Also, kann ich nicht sowas hier machen? Ne. Aber wie? Was?

599
01:40:39,200 --> 01:40:54,560
Das check ich nicht. Das kapier ich nicht. Ach, man muss da einen Doppelpunkt dahinter

600
01:40:54,560 --> 01:41:09,160
machen, oder wie? So, so dachte ich mir das eigentlich jetzt. Ja. Da spar ich mir nämlich

601
01:41:09,160 --> 01:41:22,120
diesen ganzen Arc-Krempel. Ja, ok, nice. So, und jetzt starte ich das mehrfach. Ich copy

602
01:41:22,120 --> 01:41:43,520
paste das mal zum testen. Ja, das ist die T2. Ja. Punkt zioniert. Ok. Also, jetzt machen

603
01:41:43,520 --> 01:42:01,240
wir eine Schleife. Oh, wie sieht eine Vorloop aus? Ich weiß ja nicht mal, wie man eine publische

604
01:42:01,240 --> 01:42:17,520
Vorschleife macht. For range, range, range. Alles klar. Ok. For i in range. Das da. T1.

605
01:42:17,520 --> 01:42:30,000
T1 start. Und jetzt muss ich das in irgendeine Liste schreiben. Keine Ahnung. Threads. Ich

606
01:42:30,000 --> 01:42:35,720
hab keine Ahnung, ob das irgendwie Sinn ergibt. Und der Pythonic Way ist, was ich hier mache.

607
01:42:35,720 --> 01:42:48,080
Threads. Push. Add. Insert. Er pennt. Ja, meine Güte, Alter. Ich hätte fast alles

608
01:42:48,080 --> 01:43:02,880
durch gehabt. Ok. Und gibt es jetzt sowas wie threading weight auf eine Liste oder so?

609
01:43:02,880 --> 01:43:23,920
Threading weight. Python thread join list. Ja, auf die Idee wäre ich jetzt auch gekommen.

610
01:43:23,920 --> 01:43:32,840
Gibt es da nicht so, gibt es da nicht irgendwas fertiges? So alles in dieser Collection warten

611
01:43:32,840 --> 01:43:50,880
wir mal. Concurrent Futures. Was? Submit. Ah, boah, das ist also die Standard Library

612
01:43:50,880 --> 01:44:06,040
ist wirklich Sixhead. Da gibt es für alles 20 Varianten. Das Thread Pool Executor. Ok,

613
01:44:06,040 --> 01:44:12,520
das ist mir gerade zu high IQ. Wir machen jetzt einfach das gleiche noch mal. Aber jetzt

614
01:44:12,520 --> 01:44:22,160
kann ich so hier machen. Vor. In. Threads. Und dann kann ich sagen. E. Oh, guck mal, der

615
01:44:22,160 --> 01:44:37,080
erkennt, dass das ein Thread ist. Sixhead Time. Aha. Guck mal da. Funktioniert. Und

616
01:44:37,080 --> 01:44:43,960
was habt ihr eben gesagt? Soll ich jetzt List Com. Das kenne ich. Warum Threads und nicht

617
01:44:43,960 --> 01:44:48,280
S und I. Oh, weil ich keine Ahnung habe, was davon die Vorzüge sind und was besser und

618
01:44:48,280 --> 01:45:03,920
schlechter ist. Das erst mal ausprobieren muss. List Comprehension. X vor X in fruits,

619
01:45:03,920 --> 01:45:15,000
F, A in X. Massive. So muss das sein. Also sprich anstatt sowas. Wir machen mal die

620
01:45:15,000 --> 01:45:25,080
Kurzvariante von also. Nee Moment. Sagt mal gibt es gibt es nicht sowas wie Link, sowas

621
01:45:25,080 --> 01:45:40,840
wie Each oder so. Each nee sowas gibt es hier nicht. Gibt es. Weißen List. Ich. Das

622
01:45:40,840 --> 01:45:59,600
sowas. Okay, nee, ich glaube, ich lasse das einfach so. Aber das würde ich jetzt machen.

623
01:45:59,600 --> 01:46:16,040
S wie vor I in range 6. Das kann man. Das bringt mir doch hierfür gar nichts. Das bringt

624
01:46:16,040 --> 01:46:21,080
mir doch hierfür gar nichts. Hast du schon mal ein Replet ausprobiert? Weiß nicht,

625
01:46:21,080 --> 01:46:29,040
was das ist. Jetzt habe ich es gelöscht. Ich kann nur. Leute, das bleibt jetzt. Das

626
01:46:29,040 --> 01:46:46,080
bleibt jetzt so. Genug. Das reicht jetzt. Dann brauchst du die for each nicht? Moment,

627
01:46:46,080 --> 01:46:59,920
das geht. Wartet mal. Das geht. T join. T in. Ach ja. Ganz ehrlich Leute, da gefällt

628
01:46:59,920 --> 01:47:09,800
mir das untere aber besser. Da gefällt mir das untere aber besser als das obere. Kann

629
01:47:09,800 --> 01:47:16,680
man sich jetzt drüber streiten? Chat, was sagt ihr? Das da? Okay, wir machen Umfrage.

630
01:47:16,680 --> 01:47:35,040
Das interessiert mich jetzt. A oder B. Das oder das. Das oder das. Ob's, jetzt habe

631
01:47:35,040 --> 01:47:42,400
ich mich vercopy pastet. Okay Leute, das geht nicht. Ich kann. Okay, das hier ist A und

632
01:47:42,400 --> 01:48:00,840
das hier ist B. Also. Was findet ihr besser? A oder B? A oder B? A, B. Eine Minute Abstimmung.

633
01:48:00,840 --> 01:48:21,240
Umfrage beginnen. A oder B? 50, 50 ziemlich genau.

634
01:48:21,240 --> 01:48:49,720
Gleich ist der Paul vorbei. B? Ach so, ja, ja. Ich persönlich finde B auch schöner.

635
01:48:49,720 --> 01:48:55,600
Irgendwie finde ich das griffiger, aber wahrscheinlich ist das die Frage, wie viel Pausen man schon

636
01:48:55,600 --> 01:49:06,120
gemacht hat, ob man das schöner oder weniger schön findet. B. Ich kann aber, ich kann

637
01:49:06,120 --> 01:49:10,440
aber das Pro und Contra, also viel Unterschied gibt es ja nicht, aber ich kann es verstehen,

638
01:49:10,440 --> 01:49:21,640
wenn einer A mehr mag als B. Also, so will man das. Das erste als List-Completion schreiben

639
01:49:21,640 --> 01:49:27,200
ist Pain's Champ, oder? Das will man eher nicht. Also wir starten, okay, wir starten

640
01:49:27,200 --> 01:49:35,840
nur mal vier Threads, das sollte reichen. So. Ich bin mir immer noch unschlüssig, wie

641
01:49:35,840 --> 01:49:47,960
ich das jetzt gescheit mache. Ich muss ja das Ergebnis. Ich mache jetzt mal was ekliges

642
01:49:47,960 --> 01:49:55,600
Chat, weil ich nicht weiß, wie ich es besser machen soll. Ich weiß nicht, wie ich es besser

643
01:49:55,600 --> 01:50:09,280
machen soll. Das hier ist die Nummer und ich mache jetzt eine Liste mit vier, irgendwie

644
01:50:09,280 --> 01:50:19,440
keine Ahnung, Rates. Ihr könnt mir ja sagen, wie es besser geht. So, und das hier ist I.

645
01:50:19,440 --> 01:50:39,120
Fängt es auch bei Null an. So, und die Raid, die Raid, die kommt jetzt einfach in I. Raid.

646
01:50:39,120 --> 01:51:03,480
Warum geht das nicht? Unexpected Float? Hä? Ah, Moment. Hast du shadowed irgendwas? Warum

647
01:51:03,480 --> 01:51:14,400
shadowed das da irgendwas? Welches Outer Scope? Was will er von mir? Hä? Okay, keine Ahnung,

648
01:51:14,400 --> 01:51:36,840
ID. Das heißt jetzt einfach ID. Ah, das ist Build-In. Meine Güte. Keg W. Keg W. So.

649
01:51:36,840 --> 01:51:45,560
Und er sagte mir, es ist ein Float. Na, meinetwegen ist es halt ein Float, wenn es... Nee. Ja,

650
01:51:45,560 --> 01:51:55,480
was denn jetzt? Ach nee, Moment. Doch, hä? Du schreibst in eine externe... Ich weiß,

651
01:51:55,480 --> 01:52:05,560
ich weiß, aber wo ist das Problem? Wo ist denn das Problem? Unexpected Types. Warum?

652
01:52:05,560 --> 01:52:17,280
Moment, ich will ein Int. Int ist doch schon gut. Ich meine, das ist ein Index. Ach, das

653
01:52:17,280 --> 01:52:23,640
hier ist... Moment, das hier ist Unexpected, oder? Das hier ist Unexpected. Muss ich da

654
01:52:23,640 --> 01:52:34,840
F dahinter schreiben für ein Float oder muss ich 0,0 machen, dass das checkt? So? Ah,

655
01:52:34,840 --> 01:52:49,360
so besser. Okay, gut. Jetzt, jetzt, also... So, da schreibt es jetzt... Ich meine, mir

656
01:52:49,360 --> 01:52:58,560
fällt... Das ist wirklich eklig mit der globalen Liste, aber... Mir fällt gerade wirklich

657
01:52:58,560 --> 01:53:03,800
nichts anderes ein. So, und hier unten machen wir das jetzt folgendermaßen. Wir machen

658
01:53:03,800 --> 01:53:24,240
hier vor dem Join, wir machen eine Schleife. Vor E in Range 10, mir vollkommen egal. So,

659
01:53:24,240 --> 01:53:31,960
und jetzt Rind Ranges. Boah, das muss man doch schöner machen können. Wie rechne ich

660
01:53:31,960 --> 01:53:45,840
das jetzt alles zusammen? Gibt es sowas wie Zoom oder so? Ranges? Zoom? Nee. Zoom Ranges?

661
01:53:45,840 --> 01:54:03,560
Nee, geht nicht. Ach, Rates, nicht Ranges. So, und ob das jetzt... Hey! Wait a minute,

662
01:54:03,560 --> 01:54:28,400
wait a minute. Das Print muss weg. Threading? Sleep? Time? Sleep? Sleep? So, okay, und funktioniert

663
01:54:28,400 --> 01:54:41,640
das jetzt theoretisch? Leute, wir haben angeblich mehr Bandbreite, als meine Leitung überhaupt

664
01:54:41,640 --> 01:54:55,720
kann. So wirklich gut funktioniert es nicht, was ich hier gebastelt habe. Wo davon hast

665
01:54:55,720 --> 01:55:12,960
du diesen Trick? Kann es sein, dass du vergessen hast, durch die Anzahl der Threads zu teilen?

666
01:55:12,960 --> 01:55:22,400
Nee, ich will nicht durch die Anzahl der Threads teilen. Die Leitung soll ausgelastet sein.

667
01:55:22,400 --> 01:55:27,680
Die Threads können so viel machen, wie sie wollen. Ich glaube, ich weiß, warum das geht.

668
01:55:27,680 --> 01:55:32,520
Ich weiß, warum das nicht geht. Weil ich hier immer nur pro Sekunde reinschreibe und pro

669
01:55:32,520 --> 01:55:40,280
Sekunde ist halt viel zu lang. Da hat ein Thread mal viel gemacht, ein weniger. Nein,

670
01:55:40,280 --> 01:55:45,120
wo davon lässt er auch nicht kurzzeitig mehr Traffic zu? Das ist einfach miesgemessen,

671
01:55:45,120 --> 01:55:51,040
was ich da mache. Meine Einheiten sind falsch? Nee, meine Einheiten sind nicht falsch. Warum?

672
01:55:51,040 --> 01:55:59,040
Ah, meine Einheiten sind falsch. Weil es Raid ist. Und Raid ist, Moment, Moment, meine

673
01:55:59,040 --> 01:56:20,880
Einheiten sind tatsächlich falsch. Ich muss sowas hier machen. Bites to megabit. Ah,

674
01:56:20,880 --> 01:56:27,920
das ist doch, das ist gar nicht schlecht, Leute. Das ist ziemlich, das ist ziemlich gut. Das

675
01:56:27,920 --> 01:56:36,320
funktioniert. Zwar nicht so, nicht so nice, wie gedacht. Übrigens, das mit dem Join,

676
01:56:36,320 --> 01:56:40,880
das mit dem Join kann ich mir einfach mal komplett schenken. Das brauche ich nicht.

677
01:56:40,880 --> 01:56:48,680
Wir lassen es einfach 10 Sekunden laufen und wir schenken uns auch jeglichen, jeglichen

678
01:56:48,680 --> 01:57:02,920
Counter. Wofür das lieb? Naja, dass ich will nicht 100% CPU-Last verursachen. So. Ja,

679
01:57:02,920 --> 01:57:12,240
Funst. Du musst in der Raids-Liste den Wert wieder auf Null setzen, wenn ein Thread durch

680
01:57:12,240 --> 01:57:16,280
ist. Das ist richtig, aber die Threads sind nicht durch, weil die einen Terabyte runterladen.

681
01:57:16,280 --> 01:57:30,760
Aber du hast recht, das müsste ich. Aber bevor... Oh. Was ist jetzt? Ach so, da ist 10 Mal durchgelaufen.

682
01:57:30,760 --> 01:57:43,440
Okay. Warum beendet der sich nicht, wenn er 10 Mal durchgelaufen ist? Keck. Lass mal 5

683
01:57:43,440 --> 01:57:55,040
Mal durchlaufen. Warum beendet er sich jetzt hier nicht? Weil noch Threads offen sind?

684
01:57:55,040 --> 01:58:06,240
Sollte er das nicht checken? Und einfach sagen hier und Tschüss, Goodbye? Cancel gibt es

685
01:58:06,240 --> 01:58:20,040
nicht, oder? Schalt um auf Demon Threads. Kann ich die abschießen? T1? Wie schießt

686
01:58:20,040 --> 01:58:25,360
man Threads ab? Das sagt man ja eigentlich, dass man Threads nicht abschießt, sondern

687
01:58:25,360 --> 01:58:32,120
eigentlich sagt man Threads sollen sich ordnungsgemäß beenden. Was? List Clear? Nee, das bringt

688
01:58:32,120 --> 01:58:38,240
doch gar nichts. Du meinst Threads Clear, aber davon hören die doch jetzt auch nicht

689
01:58:38,240 --> 01:58:47,680
auf. Ich warte doch gar nicht. Ich warte aktuell. Doch. Nee, warum sollte Threads Clear

690
01:58:47,680 --> 01:58:56,640
irgendwas bewirken? Also wenn das funktioniert, würde mich äußerst wundern. Ich warte doch

691
01:58:56,640 --> 01:59:02,240
überhaupt nicht explizit da drauf. Ich mach nur die Liste leer, die Threads laufen immer

692
01:59:02,240 --> 01:59:11,680
noch. Nee guck, es hängt immer noch, sag ich doch. Aber wenn ich die in Demon Modus

693
01:59:11,680 --> 01:59:15,560
versetze, dann laufen die wahrscheinlich weiter im Hintergrund, selbst wenn mein Python Programm

694
01:59:15,560 --> 01:59:29,760
weg ist. Nee? Machen sie nicht? Oder ich sag, was war das? Kill? Gibt's nicht, oder?

695
01:59:29,760 --> 01:59:41,160
Python Thread Kill. Das ist hochgradig eklig, was ich hier mache, aber... Man kann das nicht

696
01:59:41,160 --> 01:59:53,920
killen. Der Multiprocess Thread, das könnte ich mal, da könnte ich den Prozess abschießen.

697
01:59:53,920 --> 02:00:00,080
Das, das ersitzt... Nee, ich will nicht joinen, ich will, das soll einfach, das soll einfach

698
02:00:00,080 --> 02:00:07,200
abbrechen am Ende. Ich würde es eh nie so machen. Das ist jetzt nur, weil ich gucken

699
02:00:07,200 --> 02:00:27,720
wollte, ob es funktioniert. Aber es funktioniert von der Idee her. BW? BTOP? Nee. Linux Bandwidth

700
02:00:27,720 --> 02:00:37,880
Monitor. Alter, jetzt wird rumgespammt, äh. Nee, nee, nee, nee. Was war das? EFTOP? Nee,

701
02:00:37,880 --> 02:00:43,200
nee, nee, nee. Nload, Nload, Nload war nice. Will einfach mal wissen, ob der das dann auch

702
02:00:43,200 --> 02:00:58,640
richtig beendet. Nload? Alter, wie viel haben wir denn hier jetzt, Mann? Nee, wie hieß der

703
02:00:58,640 --> 02:01:09,160
Kram? Nload? BMON meinte ich. Ah, das haben wir nämlich auch installiert. So, also macht

704
02:01:09,160 --> 02:01:30,560
der denn jetzt hier was? Bandbreite pro Sekunde. Zeig mal her. Ja. Das Funst, 50 MB. Das hier,

705
02:01:30,560 --> 02:01:41,320
ok. Wenn ich es beende, ist es alles weg. Ok, was hat der Chat gesagt? Ich soll heißen

706
02:01:41,320 --> 02:02:03,880
Demon Threads verwenden. Zeig her. Import, Threading, Import, Sternchen. Set Demon, true,

707
02:02:03,880 --> 02:02:24,960
null W, ok. Oh, soll man das nicht mal verwenden? Ist es Set? Attribute? Äh. Äh. Keine Ahnung,

708
02:02:24,960 --> 02:02:44,680
true. Ah, ich hab vorher schon gestartet. So. Ah, jetzt beendet sich alles am Ende.

709
02:02:44,680 --> 02:03:00,920
Aber aus irgendwelchen Gründen ist er jetzt langsamer als vorher. Muss ich T1? Ah, so?

710
02:03:00,920 --> 02:03:10,320
Warum ist er jetzt langsamer als vorher? What the f... Ach, ich starte das gar nicht

711
02:03:10,320 --> 02:03:30,080
mehr. Ah, nee, jetzt passt es. Ok, nach 10 Mal beendet er sich. Ok, nice. So, schön

712
02:03:30,080 --> 02:03:40,080
ist nun wirklich was anderes. Aber es funktioniert. Also, wir lesen das alle 10 Sekunden aus.

713
02:03:40,080 --> 02:03:45,960
So, und jetzt, und jetzt können wir das hier natürlich nochmal ne ganze Ecke, ne ganze

714
02:03:45,960 --> 02:03:51,280
Ecke schöner machen. Und zwar, wir können uns hier drinnen theoretisch sogar das mit

715
02:03:51,280 --> 02:03:57,760
dem Elapsed, Elapsed sparen. Mal gucken, mal gucken wie hoch dann die CPU-Auslastung wird.

716
02:03:57,760 --> 02:04:15,240
Mal gucken. Ach nee, Moment, das mit dem Reset. Warte mal, nee, nee, nee, nee. Wir

717
02:04:15,240 --> 02:04:28,200
aktualisieren das jetzt jede, jede, jede 100 Millisekunden. Wow. Ja, die erste Messung

718
02:04:28,200 --> 02:04:33,400
vielleicht nicht stimmt, kann ich, kann ich verstehen. Jetzt ist es ziemlich am Limit,

719
02:04:33,400 --> 02:04:38,880
ne? Jetzt ist es, jetzt ist die Leitung eigentlich komplett, komplett ausgelastet, wenn ich das

720
02:04:38,880 --> 02:04:58,520
so richtig sehe. Oh ja, bam, 50 MB, 52 MB. Ja, ich mein, das müsste man wahrscheinlich,

721
02:04:58,520 --> 02:05:03,840
wenn man das wirklich genau messen will, schon, man könnte das sicherlich noch deutlich

722
02:05:03,840 --> 02:05:10,160
besser machen. So, aber jetzt gucken wir uns mal was anderes an. Was ist denn jetzt der

723
02:05:10,160 --> 02:05:34,280
Unterschied zwischen, was ist denn jetzt der Unterschied zwischen dem hier? Ok, Python

724
02:05:34,280 --> 02:05:39,360
Threads versus AsyncIO. Jetzt Five-Header-Time, Alter. Wow, das ist mir deutlich zu lang.

725
02:05:39,360 --> 02:05:46,560
Ich brauche Stackoverflow-Antwort für, für Noobs. Alter, was sind das alles für Riesendinger?

726
02:05:46,560 --> 02:06:02,400
Yeah, gut, das ist, das kommt mir jetzt zugute, weil ansonsten hätte ich hier garantiert

727
02:06:02,400 --> 02:06:05,920
irgendwelche Exceptions, weil ich versucht habe, auf das gleiche Objekt gleichermaßen

728
02:06:05,920 --> 02:06:13,840
zuzugreifen. Twitch geht, klar. Download ist jetzt erstmal nicht so wichtig, denke ich.

729
02:06:13,840 --> 02:06:18,000
Ich kriege auch meinen vollen Upload nicht voll, dadurch, dass ich noch, äh, Download

730
02:06:18,000 --> 02:06:35,240
nicht voll, ich uploade. Async allows concurrency within a single thread. This gives you as

731
02:06:35,240 --> 02:06:53,280
much more control of the task switching. Moment. Jetzt blicke ich nicht mehr durch. Es gibt

732
02:06:53,280 --> 02:06:59,000
Python Threads, die ineffizient sind. Dann gibt es quasi so eine Art JavaScript Event

733
02:06:59,000 --> 02:07:06,480
Loop mit, mit Async Await oder sowas. Und dann gibt es Multiprocessing, wo er dann aber

734
02:07:06,480 --> 02:07:15,280
wirklich die komplette Hardware ausnutzen kann. Das heißt, der Fork dann den, das heißt,

735
02:07:15,280 --> 02:07:20,120
der Fork dann den Mainprozess irgendwie achtmal und braucht achtmal so viel Speicher oder

736
02:07:20,120 --> 02:07:36,280
wie oder was, hä? Python Multiprocessing Thread. Ich sehe es schon, das ist Sixheadiger, als

737
02:07:36,280 --> 02:07:51,600
ich das gedacht habe. Was from Multiprocessing Import Pool? Pool 5 SP. What?

738
02:08:06,280 --> 02:08:21,840
Und warum kommt hier eins, vier, neun raus? Ach so, weil er, weil er das irgendwie zusammen

739
02:08:21,840 --> 02:08:33,920
rechnet oder? Ach, keine Ahnung. Was hat's, was hat's hier mit, mit Pool auf sich? Über

740
02:08:33,920 --> 02:08:39,200
den Pool kann deine Mainfunktion, kann deine Funktion den Return Wert an die, an den Mainprozess

741
02:08:39,200 --> 02:08:49,080
zurückliefern. Aha. Lass mal kurz überlegen, wie würde ich da meist mal Threads oder Multiprocess

742
02:08:49,080 --> 02:08:54,440
außen vor, wie würde ich das denn jetzt sagen, sagen wir mal in, in, sagen wir mal in.NET,

743
02:08:54,440 --> 02:08:57,840
wie würde ich das denn jetzt ordentlich machen? Muss ich mal kurz, mal kurz in mich gehen.

744
02:08:57,840 --> 02:09:06,880
Ich meine, so global Ding kann man machen, aber die schönste Variante wäre eigentlich,

745
02:09:06,880 --> 02:09:15,440
wenn ich eine Klasse hätte, die, die ein Threadsafe Property hat, wobei ich mich ja

746
02:09:15,440 --> 02:09:21,600
in Python anscheinend um Threadsafe, Safety nicht kümmern muss und das lese ich dann

747
02:09:21,600 --> 02:09:27,280
aus. Dann bräuchte ich nämlich so global, global Ding hier nicht. Ok, dann fang mal

748
02:09:27,280 --> 02:09:38,080
an, wie macht man denn eine ordentliche Klasse in Python? Gibt's Logs? Ich hab keinen Plassen,

749
02:09:38,080 --> 02:09:45,720
schimmer, ob es Logs gibt. Weil anderweitig oder aber, was auch funktionieren würde ist,

750
02:09:45,720 --> 02:09:57,640
ne, würde nicht, würde nicht funktionieren. Also Klasse, gibt's da kein Makro für? Python

751
02:09:57,640 --> 02:10:10,200
Klasse, Example, Example ist immer gut. Klasse, My Klasse, x gleich fünf. Inlet ist so was

752
02:10:10,200 --> 02:10:15,960
wie ein Constructor, das kenne ich noch. Das kann ich mir noch dran erinnern. Also Public

753
02:10:15,960 --> 02:10:19,720
Klasse, wir nennen das hier jetzt einfach mal Speed Test. Mir fällt grad nichts anderes

754
02:10:19,720 --> 02:10:27,480
ein. Speed Test, wir brauchen global, gibt es sowas wie Public? Nee, Public muss man

755
02:10:27,480 --> 02:10:34,080
nicht. Warte mal Leute, wie war das in Python? Man muss, man macht das hier da vor, wenn

756
02:10:34,080 --> 02:10:42,800
man will, dass es private ist, gell? Aber das ist nur quasi ein Hint, dass es private

757
02:10:42,800 --> 02:10:51,280
ist und nicht wirklich private. Global, ne. Also würde ich jetzt quasi sagen sowas wie

758
02:10:51,280 --> 02:11:20,440
hier Don't Load Raid. Heck, muss ich das weglassen, wenn ich nichts übergebe? Ne. Gibt

759
02:11:20,440 --> 02:11:32,520
es, ach Self, Self muss man da immer über. Aha, Self ist quasi sowas wie This. Ok, gibt

760
02:11:32,520 --> 02:11:41,880
es irgendeine Schreibweise für Public, Public Properties? Sollte man die irgendwie groß

761
02:11:41,880 --> 02:11:55,400
schreiben oder nicht, oder ist das egal? Was heißt denn Public Property? Klein? Private

762
02:11:55,400 --> 02:12:16,000
und Public Attributes. Ach Attributes heißt was da, ok. Das ist eine bescheuerte Seite,

763
02:12:16,000 --> 02:12:29,640
die echt, does not have, ja. Add Property, was zum, ah das ist quasi so eine Getter,

764
02:12:29,640 --> 02:12:35,520
das ist quasi eine Getterfunktion oder sowas, gell? Würde ich jetzt einfach mal raten,

765
02:12:35,520 --> 02:12:41,120
wenn man da Add Property oben dran setzt. Warum sich überhaupt die Mühe machen, wir

766
02:12:41,120 --> 02:12:56,160
machen einfach Public Variable und gut ist. Obei. Warum nicht? Warum nicht? Warum nicht?

767
02:12:56,160 --> 02:13:03,680
Wisst ihr was wir machen? Ich hab ne Idee. Also wir machen sowas wie hier Self, ne. Warum

768
02:13:03,680 --> 02:13:29,920
ist das jetzt undingst Reference? Self sein? Ne. Äh, pff, keine Ahnung. Moment, das kann

769
02:13:29,920 --> 02:13:42,680
ich direkt zuweisen, das nicht. Ach ansonsten ist es statisch. Moment, wenn ich sowas hier

770
02:13:42,680 --> 02:13:51,080
mache bedeutet das, das ist Static, also ich könnte jetzt quasi, ach so, ach so, das will

771
02:13:51,080 --> 02:13:58,240
ich ja gar nicht, ich will das so haben, also irgendwie. Rate. So, Underscore, was ist der

772
02:13:58,240 --> 02:14:07,120
Unterschied zwischen Underscore und Underscore? Underscore, Underscore. So, Self, Rate, Rate.

773
02:14:07,120 --> 02:14:20,520
So, und das wollen wir aber nicht returnen, sondern, da wollen wir jetzt das mitmachen.

774
02:14:20,520 --> 02:14:46,840
Self, Rate, Exzellent, wo ist das Problem jetzt? End of Statement Expected. Ach ne,

775
02:14:46,840 --> 02:15:01,960
ich blick, hä? Was ist denn jetzt das für? Was hat er denn jetzt für Schmerzen? Rate,

776
02:15:01,960 --> 02:15:15,040
Rate. Ne, die Klammern sind doch richtig so. Ne, die Klammer ist zu viel. Kacknub, Alter,

777
02:15:15,040 --> 02:15:35,680
die Klammer ist zu viel. Und jetzt? Rate, Rate. Ne, das schreibe ich gar nicht hier hin

778
02:15:35,680 --> 02:15:42,880
oder was, das würde ich nur hier machen? Ach so, das muss ich gar nicht da oben hinschreiben,

779
02:15:42,880 --> 02:15:48,040
das würde ich einfach hier festlegen oder, aha, MonkaS, Alter, da muss ich jetzt erstmal

780
02:15:48,040 --> 02:16:05,880
drauf kommen. Okay, wir nähern uns, wir nähern uns. So, und jetzt packe ich im Prinzip dieses

781
02:16:05,880 --> 02:16:22,280
ganze Ding da rein. So, die ID brauche ich nimmer, cool, das hier brauche ich nimmer,

782
02:16:22,280 --> 02:16:36,680
das hier brauche ich im Prinzip auch nimmer. Rate. So, Self, Dot, Rate. Was hat er denn

783
02:16:36,680 --> 02:16:41,120
jetzt für Schmerzen? Unresolved Reference Self. Ach, weil ich Self hier davor wieder

784
02:16:41,120 --> 02:16:52,400
übergeben muss oder was, aha. Okay, das ist in der Tat äußerst gewöhnungsbedürftig,

785
02:16:52,400 --> 02:17:02,920
muss ich sagen. Glaubst du, Getter, Syntax ist anders als das? Okay, werden wir jetzt

786
02:17:02,920 --> 02:17:11,040
ja gleich sehen. Comment, aber das kommentieren wir das mal aus. Denken wir mal, ob das funktioniert.

787
02:17:11,040 --> 02:17:22,240
Der kommt nicht so ganz klar hier, oder? Print. So, das sollte doch jetzt soweit funktionieren,

788
02:17:22,240 --> 02:17:28,480
was ich gemacht habe. Der updated jetzt die Rate. Okay, ähm, let, nein nicht let, also

789
02:17:28,480 --> 02:17:42,000
speedtest gleich new speedtest, so? Ne, äh, da sollte ich die URL auch hier übergeben.

790
02:17:42,000 --> 02:17:54,760
Oh, einfach so? Schau mal, NeoWim ausbricht, klar, ich hab früher nur Wim verwendet, ich

791
02:17:54,760 --> 02:18:03,440
hatte irgendwie 800 Zeilen Wimrc und 500 Plugins drin. Einfach so, okay. Speedtest, Rate, da

792
02:18:03,440 --> 02:18:12,400
kann ich das, also jetzt würde ich hier das starten. Das ist nicht so schön, das wäre

793
02:18:12,400 --> 02:18:18,400
deutlich sinnvoller, wenn ich die URL im Konstruktor übergebe, weil dafür ist er ja letztendlich

794
02:18:18,400 --> 02:18:33,840
da. Self. Okay, das ist für mich echt gewöhnungsbedürftig, diese Schreibweise. So, und hier kommt die

795
02:18:33,840 --> 02:18:40,520
URL weg. Kann man, kann man das hier oben auch annotaten irgendwie, dass ich jetzt sage,

796
02:18:40,520 --> 02:18:52,480
self drill? Ey, tatsächlich, cool. Load. Park. URL open. Self? Warum eigentlich self, warum

797
02:18:52,480 --> 02:18:58,560
nicht this? Da könnt ich mich viel einfacher dran gewöhnen. Okay, measure download speed

798
02:18:58,560 --> 02:19:10,840
megabit. Gut, es scheint zu funktionieren, es macht was. Du kannst auch this importieren.

799
02:19:10,840 --> 02:19:34,480
Wirklich? Geht das? This? Kannste das? Echt? Geht das? This? Ey, oder? Wie kann ich das,

800
02:19:34,480 --> 02:19:43,240
aber ich benenne das nicht um. Ach, das hier kann ich nennen, wie ich will. Aber ich nenne

801
02:19:43,240 --> 02:19:54,360
das nicht um, das ist ja dann absolut nicht der Pythonic Way. Ne, ne, ne, das lasse ich

802
02:19:54,360 --> 02:20:00,000
so. So, jetzt haben wir hier eine Klasse. So, und von der Theorie her sollte das jetzt

803
02:20:00,000 --> 02:20:05,360
ja so funktionieren, wenn ich das Ding starte, und wir machen jetzt einfach mal, wo ist meine

804
02:20:05,360 --> 02:20:10,480
Endlosschleife hier unten? Oder meine, nicht wirklich Endlosschleife, meine 100 Sekunden

805
02:20:10,480 --> 02:20:18,320
Schleife. So, und ich könnte jetzt nur mal zum testen, ob das funktioniert. Print. Speed

806
02:20:18,320 --> 02:20:32,080
test. Achso, ich muss erst noch ein Thread starten. Ja, Raid. So. Du, du, du, du, du.

807
02:20:32,080 --> 02:20:41,280
Comment, oh, ups. Comment. Also, jetzt müssen wir den Krempel ja mehrfach, mehrfach starten.

808
02:20:41,280 --> 02:20:59,040
Speed test. Jetzt brauchen wir eine Liste. Threads. Gleich, so. Ne, nicht. Ja, so ungefähr.

809
02:20:59,040 --> 02:21:15,160
So, Speed test. Jetzt kann ich das weglassen, jetzt kann ich theoretisch das direkt so aufrufen

810
02:21:15,160 --> 02:21:30,160
wahrscheinlich, denke ich mal. Hoffe ich, dass das so geht. Start. So, und jetzt. For.

811
02:21:30,160 --> 02:21:55,040
Threads. T, Raid. Und dann Sleep. Na, ob das jetzt funzt? Nope. Nope, was? Warum nicht?

812
02:21:55,040 --> 02:22:11,920
Wo ist das Problem jetzt? Warum funktioniert das jetzt nicht? Ah, ja, natürlich. Threads

813
02:22:11,920 --> 02:22:36,280
append. Speed test. Achso, ich kann das muss weg. Ja, klar. Ok, nice. Ok, also und jetzt

814
02:22:36,280 --> 02:22:42,080
das gleiche Spiel wieder. Also, das will ich ja eigentlich gar nicht so machen. Ich will

815
02:22:42,080 --> 02:22:49,920
ja eigentlich Print. Threads. Ne, Summen, Summen. Das macht mich fertig. Das es so globale

816
02:22:49,920 --> 02:22:58,440
Magic Funktionen gibt. Threads. Ne. Wait a minute. Das kann ich jetzt gar nicht summen.

817
02:22:58,440 --> 02:23:07,640
Wie kann ich ihm denn sagen, was er da jetzt, wie er die Summe genau machen soll? Ja, in

818
02:23:07,640 --> 02:23:20,800
Dotnet würde ich jetzt einfach sagen Select. Sowas wie Select, aber. Ne, aber der weiß

819
02:23:20,800 --> 02:23:28,720
doch gar nicht, der weiß doch gar nicht, dass er das Raid Property nehmen soll, in Summe.

820
02:23:28,720 --> 02:23:56,320
So? Ne, oder? Also, wenn das funktioniert, das kann doch nicht funktionieren. Ne, das

821
02:23:56,320 --> 02:24:21,000
hätte mich auch sehr gewundert, wenn das funktioniert. Threads. Also quasi. Da drinne. Threads. Ok,

822
02:24:21,000 --> 02:24:28,040
das ist wirklich gewöhnungsbedürftig. Ne, funktioniert, ja. Wow, aber viel zu viel zwischzeitlich.

823
02:24:28,040 --> 02:24:53,640
Das geht auch ohne eckige Klammern. Wirklich? Ah, Sixhead Time. Ohne ist Deprecated. Ja,

824
02:24:53,640 --> 02:24:59,400
was denn jetzt? Ich find's auch so im ersten Blick besser. Da muss man sich aber wirklich

825
02:24:59,400 --> 02:25:07,760
erstmal reindenken. Das ist auf jeden Fall ein bisschen gehirnverknoten. Ja, ok, aber

826
02:25:07,760 --> 02:25:12,120
das ist jetzt schon deutlich besser lesbar als der andere Krämpel, den ich vorher gebastelt

827
02:25:12,120 --> 02:25:38,960
hab. Mach mal die Sekunden hoch auf eine Sekunde Messzeit. Was ist jetzt? Ah ja, jetzt. Hat

828
02:25:38,960 --> 02:25:45,800
Vodafone wieder gewodafoned zwischenzeitlich. Guck mal, ob das immer so ist. Es braucht

829
02:25:45,800 --> 02:25:51,880
alles? Nö. Das hat eben einfach nicht gewollt. Ruckelt übrigens das Stream, wenn ich hier

830
02:25:51,880 --> 02:26:00,480
volle Pulle Download mache, weil mein kompletter Download ist fertig. Ja, ist voll leer. Oder

831
02:26:00,480 --> 02:26:06,480
je nachdem, wie man das sieht. Also, die komplette Leitung ist voll. Mein Downloadvolumen ist

832
02:26:06,480 --> 02:26:25,680
leer sozusagen. Wir können ja mal kurz gucken, ob das irgendwie ruckelt. Aha, hier hat er

833
02:26:25,680 --> 02:26:33,800
Frames getroppt. Droppt er Frames? Massive Drop? Aha! Leute, der droppt richtig krass

834
02:26:33,800 --> 02:26:39,880
die Frames, wenn ich das hier anschmeiße. Lull. Guck mal. Die Downloadtests sind keine

835
02:26:39,880 --> 02:26:47,440
so gute Idee. Aber da sieht man, die Leitung ist voll. Jetzt testen wir mal was. Wir trosseln

836
02:26:47,440 --> 02:27:06,920
mal die Bandbreite. Wondershaper oder so hieß das, glaube ich. Ist schon installiert. Wondershaper,

837
02:27:06,920 --> 02:27:12,600
mein Interface. Wondershaper, hallo. Wondershaper minus Interface Download. Das betrifft jetzt

838
02:27:12,600 --> 02:27:16,840
ja nur meine Linux-VM, also keine Sorge, das ist für den Stream jetzt erstmal egal. So,

839
02:27:16,840 --> 02:27:41,480
wir limitieren den Download auf 4000 auf 4 MBit. Gucken, ob das funktioniert. Ja. Ja.

840
02:27:41,480 --> 02:27:47,600
Es kommt schon so ungefähr hin. Ich würde jetzt auch nicht drauf tippen, dass das so

841
02:27:47,600 --> 02:27:56,720
100% exakt ist. Aber im Großen und Ganzen. Ok, und jetzt machen wir mal ein Limit. Ich

842
02:27:56,720 --> 02:28:02,320
glaube, ich muss jetzt erstmal clearen das Ganze wieder, dass es funktioniert. Ne, hier.

843
02:28:02,320 --> 02:28:11,720
Jetzt gehen wir mal auf das Doppelte hoch. Ne, das Zehnfache hoch. Ich hab's geklärt.

844
02:28:11,720 --> 02:28:25,320
Sekunde runter. 40 haben wir jetzt, guck. 33, 37, 35. Also ich würde sagen, das funktioniert

845
02:28:25,320 --> 02:28:36,200
schon ganz ordentlich, ja. Man kann übrigens jetzt nicht so machen, weil man muss immer

846
02:28:36,200 --> 02:28:55,280
erst clearen zwischendurch. Ja. Wollen wir den Buffer größer machen? Wir können

847
02:28:55,280 --> 02:29:03,920
den Buffer auch größer machen. Was ist das? 8, 1, 2, 9? Die nächste größere. Macht

848
02:29:03,920 --> 02:29:10,920
keinen Unterschied. Jetzt aber auch sehr gewundert. Aber zu kleiner Buffer backt, glaube ich,

849
02:29:10,920 --> 02:29:25,880
8. Das sollte das ziemlich, ja. Das, na wobei, geht eigentlich. Aber wenn ich das nochmal

850
02:29:25,880 --> 02:29:38,080
cleare, der geht nicht auf 400mbit hoch mit so einem Mini-Buffer. Ne, guck. Der hängt

851
02:29:38,080 --> 02:29:45,520
hier bei irgendwie sonst was, ja. Ne, ein zu großer Buffer ist jetzt hier in dem Fall

852
02:29:45,520 --> 02:29:52,400
auch nicht so sinnvoll, weil umso seltener aktualisiert der. Ich finde 4096 schon ganz

853
02:29:52,400 --> 02:29:58,720
passend. Aber jetzt haben wir den Multithreaded-Test. Ach ne, Moment. Ich sollte es ja noch mit

854
02:29:58,720 --> 02:30:05,160
threading... Ich wollte ja eigentlich gucken, was denn jetzt der unter... So kann man das

855
02:30:05,160 --> 02:30:10,920
doch lassen, oder? Das ist doch durchaus okay. Würde man das jetzt in eine eigene Datei

856
02:30:10,920 --> 02:30:29,000
verschieben als guter Pytonic-Way? Du kannst runden. Ich will gar nicht runden. Bei der

857
02:30:29,000 --> 02:30:40,640
Länge nicht. Ne. Das finde ich aber so ganz schick. Das kann man jetzt wenigstens ordentlich

858
02:30:40,640 --> 02:30:57,840
lesen. So, ich sollte multiprozess noch ausprobieren. Vorm multiprozess import process. Okay, also

859
02:30:57,840 --> 02:31:05,760
nicht thread, sondern process. Und jetzt sage ich process target. Also im Prinzip exakt

860
02:31:05,760 --> 02:31:12,680
das gleiche, nur anstatt thread, process. Und das war's jetzt? Demon muss ich wahrscheinlich

861
02:31:12,680 --> 02:31:30,420
weglassen. Ha, hast du so gedacht, Keg-Wade. Funktioniert net. Kann es sein, dass es jetzt

862
02:31:30,420 --> 02:31:39,880
nicht funktioniert, daraus etwas auszulesen? Der bekommt nie mit, wenn hier was Neues gesetzt

863
02:31:39,880 --> 02:31:46,760
wird. Guck mal, der macht volle Pulle Download. Aber hier erkennt er nie, dass die Rate sich

864
02:31:46,760 --> 02:31:54,840
geändert hat. Was ist der technische Unterschied? Naja, ich vermute mal, bei dem einen ist es

865
02:31:54,840 --> 02:31:59,680
quasi in einem Prozess mehrere Threads und beim anderen folgt er das und macht mehrere

866
02:31:59,680 --> 02:32:08,360
Threads, was dann mehr RAM braucht. Aber ich kann jetzt aus multiprozess kann ich nicht

867
02:32:08,360 --> 02:32:15,160
mehr die Variablen auslesen, aus meinem Mainprozess von den Child-Prozessen. Das ist wahrscheinlich

868
02:32:15,160 --> 02:32:20,840
auch der Grund, warum es zwei verschiedene Sachen gibt. Genau, deswegen. Das hat schon

869
02:32:20,840 --> 02:32:27,080
sein Sinn, dass es da zwei verschiedene Sachen gibt. In dem Fall muss es tatsächlich das

870
02:32:27,080 --> 02:32:49,920
hier sein. Habe ich hier noch Traffic Shaping on oder so? Nö, es ist einfach langsam.

871
02:32:49,920 --> 02:32:57,920
Ah nee, jetzt geht es wieder hoch. Sollte vielleicht die Eins anstelle Spieltests ins

872
02:32:57,920 --> 02:33:26,560
Liste? Nö. Sollte nicht. Deswegen sollte es nicht Svets heißen, sondern irgendwie Speedtests.

873
02:33:26,560 --> 02:33:31,400
Ein Tupel in die Liste, man braucht ja auch Raid. Ja, Raid habe ich ja hier. Raid habe

874
02:33:31,400 --> 02:33:36,000
ich doch hier drüber. Was aber mit multiprozess nicht funktioniert, was hätte hier für Schmerzen?

875
02:33:36,000 --> 02:33:43,840
Taipo, überhaupt kein Taipo, lügt nicht. Ok, das funzt, ich bin begeistert. Ich muss

876
02:33:43,840 --> 02:34:00,120
aber einen Speed Limit machen, weil ansonsten... Spack da rum. Ja, 40mbit Speed Limit. Ich will

877
02:34:00,120 --> 02:34:05,600
nicht Join Call, nee. Der soll die automatisch beenden am Ende des Programms. Vollkommen

878
02:34:05,600 --> 02:34:11,960
in Ordnung. Scheiß auf Join. Die Dinger werden eh nicht fertig. Die laden einen Terabyte

879
02:34:11,960 --> 02:34:17,040
runter, die werden nicht so schnell fertig. Also nicht innerhalb von 2 Sekunden. So und

880
02:34:17,040 --> 02:34:21,480
von der Idee her ist es jetzt so, ich könnte das 5 Sekunden laufen lassen oder sagen wir

881
02:34:21,480 --> 02:34:31,400
mal, vielleicht nicht mal 5 Sekunden. Kann man 0.5 sleepen? Geht das? Hey. Ja, bringt

882
02:34:31,400 --> 02:34:38,200
ja nichts. Ich muss schon länger laufen lassen, dass das alles Rats überhaupt nennenswert

883
02:34:38,200 --> 02:34:58,480
was machen. Multiprocess Shared Memory. Oh, jetzt wird's. Oh, 5 Head Time. Shared Memory

884
02:34:58,480 --> 02:35:06,040
Size. Ok, das wird jetzt aber richtig Raw, oder? Jetzt wird's aber richtig Raw. Shared

885
02:35:06,040 --> 02:35:13,200
Memory Block. Bäh. Eigentlich fehlt ja noch die Main Methode, das stimmt. Das geht doch

886
02:35:13,200 --> 02:35:19,920
irgendwie in Pyres irgendwie so if Main oder irgendwie so, ne? Also ganz komisches Zeug.

887
02:35:19,920 --> 02:35:30,360
Ah guck mal, die können das schon. Ok, nice. Kann ich das jetzt einfach da drunter kopieren?

888
02:35:30,360 --> 02:35:47,280
Lul. Ah. Sehr schön, sehr schön. Ok, das gefällt mir. So, was kann man jetzt, was

889
02:35:47,280 --> 02:35:52,120
kann man denn sonst noch machen? Also die Speedtest Geschichte Multithreaded kann man

890
02:35:52,120 --> 02:35:58,960
sagen ist in Ordnung. Huf eine Methode Main auf und pack da alles rein. Ist das der Pythonische

891
02:35:58,960 --> 02:36:08,240
Way? So zu ach, oh man, ich krieg die Klammer nicht weg. Ich werde nie Klammern raus bekommen.

892
02:36:08,240 --> 02:36:32,760
Ja. Macht man, machen die coolen Leute das so, ja? Ok.

893
02:36:32,760 --> 02:36:45,160
Die coolen Leute, na das ist in jeder Sprache so, oder? Das erste was entsteht für jede

894
02:36:45,160 --> 02:36:50,960
x beliebige Sprache ist eine Library, die um Sprachen Sachen work aroundet. Überall.

895
02:36:50,960 --> 02:36:57,040
So, also das funktioniert mit dem Download Speed. Ich bin begeistert, wir können mehrere

896
02:36:57,040 --> 02:37:00,360
Threads verwenden. So, die eigentliche Sache, die ich mir jetzt aber noch angucken wollte,

897
02:37:00,360 --> 02:37:10,280
was genau ist hier der Unterschied? Async. Und was ist der Unterschied zwischen Concurrent

898
02:37:10,280 --> 02:37:35,880
Futures und Async.io? Gibt es da überhaupt einen? Ach komm, hier gibt es sogar ein Beispiel.

899
02:37:35,880 --> 02:38:01,600
Ok, das ist richtig Next Level Shit. Das hier ist quasi ein Await, oder? Seh ich das richtig?

900
02:38:01,600 --> 02:38:16,280
Ok, ne, das ist mir, das sieht aber um ein vielfaches komplizierter aus als das andere.

901
02:38:16,280 --> 02:38:36,360
Also, das hier, muss ich ehrlich sagen, das hier macht einen ziemlich einfachen Eindruck.

902
02:38:36,360 --> 02:38:42,800
Das ist jetzt nicht so viel anderes, wie ein Task starten in C Sharp. Wobei ein Task eigentlich

903
02:38:42,800 --> 02:38:50,760
Awaitable ist in C Sharp. Ne, das ist eher wie ein Thread starten direkt. Schreib mal

904
02:38:50,760 --> 02:39:15,360
zwischen den zwei Vorschleifen ein Sleep. Du meinst, dass er am Anfang nicht 0-0 macht?

905
02:39:15,360 --> 02:39:42,600
10 ist vielleicht jetzt ein bisschen viel gewesen. 2. Lass mal weg, wozu? Also was machen hier?

906
02:39:42,600 --> 02:40:05,440
Async, Def, Main, Await, Async.io, Sleep. Task. Ok, Task 1, Async.io, Create Task, After.

907
02:40:05,440 --> 02:40:19,760
Wir probieren das jetzt einfach mal aus. Also, anstatt Threading, Async.io. Und jetzt, was

908
02:40:19,760 --> 02:40:35,680
war das? Async.io, Create Task. So, das heißt im Endeffekt, anstatt den Kram, sage ich ihm,

909
02:40:35,680 --> 02:40:51,320
ne, mach ich nicht. Ach ne, hier füll ich das direkt drin aus? Oder wie, oder was? Ne.

910
02:40:51,320 --> 02:41:18,080
Ah, das muss eine Async Function sein. Ok. Alles klar. Da bin ich jetzt ja mal gespannt,

911
02:41:18,080 --> 02:41:33,320
ob das funzt. So. Jetzt einfach so? Ne. Bam. Was never awaited. Ja, ich will ja auch, dass

912
02:41:33,320 --> 02:41:41,480
du startest. Ich will nicht, dass es Await. Ich will das nicht Awaiten. Der soll das einfach

913
02:41:41,480 --> 02:41:50,520
starten. Das funktioniert glaube ich nicht so, wie ich mir das vorstelle, oder? Ich

914
02:41:50,520 --> 02:42:07,800
muss, ich muss den Krampel irgendwann Awaiten. Was, Async.io Run? Ah. Ne. Ah, ich hab das

915
02:42:07,800 --> 02:42:20,360
jetzt erpennt. Ne, jetzt hab ich das erpennt drinne. Hm. Muss ich hier die Klammern wegmachen?

916
02:42:20,360 --> 02:42:36,160
Ne. Macht das, macht das überhaupt jetzt Async technisch was? Ne, oder? Das hängt

917
02:42:36,160 --> 02:43:05,280
hier jetzt einfach. Ich muss Main auch Async starten? What? Jetzt. So? Und dann? So? Ok,

918
02:43:05,280 --> 02:43:20,480
das ist, das ist sehr feifertig. Ne. Seriously, das ist mir zu doof. Ich will nicht auf alle

919
02:43:20,480 --> 02:43:30,440
warten. Da ist mir, ne. Wisst ihr was? Scheiß drauf. Ich will da nichts Awaiten. Das soll

920
02:43:30,440 --> 02:43:43,240
einfach laufen und dann abgeschossen werden. Wenn es die scharpe hätte ich ihnen den Cancellation

921
02:43:43,240 --> 02:43:48,720
Token mitgegeben, was das abbricht. Und ich hätte gesagt, das Cancellation Token Throat

922
02:43:48,720 --> 02:44:02,200
einfachen Fehler. Ne, aber ich glaube, das ist mir so deutlich lieber. Ne, also, warum

923
02:44:02,200 --> 02:44:06,600
sollte ich kompliziert machen, wenn es noch so funktioniert? Ne, also damit bin ich, damit

924
02:44:06,600 --> 02:44:12,120
bin ich jetzt eigentlich ganz zufrieden. So. Was können wir da jetzt, was können wir da

925
02:44:12,120 --> 02:44:25,280
jetzt noch dran basteln? Also. Wir haben das mit Multithreaded ausprobiert. Ich hab sogar

926
02:44:25,280 --> 02:44:30,080
paar Type Annotations ausprobiert. Also ich würde sagen, heute habe ich einiges, einiges

927
02:44:30,080 --> 02:44:35,000
gelernt, was etwas moderneres Python Zeug angeht. Ich meine, ich hab da nicht wirklich

928
02:44:35,000 --> 02:44:38,680
Ahnung von gehabt. Ich hab die ein oder anderen kleinen Sachen damit schon gemacht, aber immer

929
02:44:38,680 --> 02:44:44,080
sehr unregelmäßig und nie wirklich was Großes. Das ist jetzt ja auch nichts Großes, aber

930
02:44:44,080 --> 02:44:49,000
zumindest mal sowas wie Multithreading habe ich noch nie gemacht. Ich gucke mir heute

931
02:44:49,000 --> 02:44:56,000
Abend den Webcast an. Python Async.io und lasst mir das mal erklären von irgendwie

932
02:44:56,000 --> 02:45:02,720
einem, der Ahnung hat. So. Ich glaube, ich muss jetzt mal was essen. Ich habe übelst

933
02:45:02,720 --> 02:45:16,360
Hunger. Überlegt gerade noch, können wir noch irgendwie. Das mit dem Performance-Counter

934
02:45:16,360 --> 02:45:27,920
ist vollkommen in Ordnung. Du kannst sagen, dass er nichts doppelt printen soll. Der printet

935
02:45:27,920 --> 02:45:35,520
doch nichts doppelt. Der printet, der printet immer nur eine Zeile, aber der printet hier

936
02:45:35,520 --> 02:45:40,040
halt alle 100 Millisekunden. Deswegen ist es besser, wenn ich auf eine Sekunde stelle.

937
02:45:40,040 --> 02:46:03,000
Ach nee, das ist, das ist. Ich weiß, dass es Speedtest-DLI gibt. Das war nicht Sinn

938
02:46:03,000 --> 02:46:06,840
und Zweck der Sache. Das ist, das weiß ich nicht. Könnte ich, easy, Speedtest-DLI. Ich

939
02:46:06,840 --> 02:46:11,080
könnte ja auch einfach einen Webcast machen und die Zeit stoppen oder so. Wobei das nicht

940
02:46:11,080 --> 02:46:18,880
ein Aria-Download-Manager Zeit stoppen oder so. Das wäre deutlich einfacher. Du könntest

941
02:46:18,880 --> 02:46:30,760
eine Que verwenden anstatt eine globale Liste. Wie soll denn das funktionieren? Wie soll

942
02:46:30,760 --> 02:46:39,080
mir eine Que helfen in dem Fall? Ich meine, die Klasse sagt, welche Downloadrate sie aktuell

943
02:46:39,080 --> 02:46:46,800
gemessen hat in ihrem jeweiligen Thread. Und das Ganze lese ich dann hier aus. Da bringt

944
02:46:46,800 --> 02:46:57,640
mir eine Que doch nichts. Weil ich will ja immer wieder die gleichen rauslesen. Ich

945
02:46:57,640 --> 02:47:08,360
will ja nicht etwa einmal auslesen und dann ist wieder gut. Das ist aber schwierig, sowas

946
02:47:08,360 --> 02:47:13,720
mit einer Que zu machen, weil dann hast du beispielsweise in der Que acht Werte stehen

947
02:47:13,720 --> 02:47:18,680
und dann müsstest du wissen, du darfst nur vier maximal auf einmal lesen und müsstest

948
02:47:18,680 --> 02:47:22,080
sie dann zusammenrechnen. Und was ist, wenn eins Thread hängt und der eine dann zweimal

949
02:47:22,080 --> 02:47:28,840
reingeschrieben hat? Ne, ich glaube mit einer Que macht es in dem Fall einfach noch komplizierter.

950
02:47:28,840 --> 02:47:33,520
Zumal, wenn ich es richtig verstanden habe, dadurch, dass wir Python Threads verwenden,

951
02:47:33,520 --> 02:47:37,720
muss ich mich ja überhaupt nicht um Locking oder sonst was kümmern. Das geht einfach.

952
02:47:37,720 --> 02:47:43,080
It just works. Würde Apple wahrscheinlich jetzt sagen. Es hat vielleicht nicht die

953
02:47:43,080 --> 02:47:49,920
mega Performance, wie das woanders wäre, aber für den Fall reicht es, Digga, aus.

954
02:47:49,920 --> 02:47:58,480
Ich finde das eigentlich ganz nice, so muss ich ehrlich sagen. Und es ist für sich genommen

955
02:47:58,480 --> 02:48:04,080
auch wirklich gut lesbar. Also man versteht alles, was passiert. Da kann sich C++ und

956
02:48:04,080 --> 02:48:08,160
sonstige Sachen echt noch eine Scheibe von abschneiden. In C++ hätte ich jetzt hier

957
02:48:08,160 --> 02:48:15,520
schon 50 Klammern mit sonstigen Dingern dazumachen müssen, dass das gültiges C++ ist und dann

958
02:48:15,520 --> 02:48:19,280
kommt eine Fehlermeldung, dass angeblich in Zeile 1 ein Schreibfehler ist, obwohl der

959
02:48:19,280 --> 02:48:23,840
eigentliche Fehler hier unten ist, weil ich falsche Zeichen habe. In C++ habe ich hier

960
02:48:23,840 --> 02:48:31,240
ein Semikolon vergessen und er sagt mir irgendwie, hier oben ist falsch. Das ist aber wirklich

961
02:48:31,240 --> 02:48:38,520
nicht schlecht, das kann man ganz gut lesen. Was ist der Sinn von AddProperty? Dumme Frage,

962
02:48:38,520 --> 02:48:55,720
das kann ich doch einfach wegmachen, das funktioniert immer noch. Warum funktioniert das jetzt nicht?

963
02:48:55,720 --> 02:49:11,240
Ah, dann müsste ich Raid so machen. Das finde ich gut, finde ich nice, dass es geht. Das

964
02:49:11,240 --> 02:49:19,560
finde ich gut. Das ist ein Getter. In C sharp wäre das, was du in einem Getter schreibst.

965
02:49:19,560 --> 02:49:42,360
Das finde ich gut, das ist ein schöner Sonntag, gefällt mir. Die wichtigste Frage ist, wie

966
02:49:42,360 --> 02:49:48,400
gut Cobolinterop funktioniert. Wahrscheinlich, wenn du deine Coboldinger mit C Interfaces

967
02:49:48,400 --> 02:49:57,000
exportieren kannst, funktioniert es wunderbar. Wie gut das in Cobol geht, weiß ich nicht.

968
02:49:57,000 --> 02:50:03,800
Und wenn es nicht geht, dann ist der Interop für ein Arsch. Ich habe aber von niemand

969
02:50:03,800 --> 02:50:31,560
gehört, der Cobol-Python-Interop. War natürlich klar. Ich glaube, Cobolinterop, das wollen

970
02:50:31,560 --> 02:50:39,560
wir uns jetzt an der Stelle eher nicht geben. Ja, zum Üben war das doch ganz nice. Leute,

971
02:50:39,560 --> 02:50:45,400
ich gehe jetzt was essen. Wir sehen uns im nächsten Stream. Macht es gut, bis dann.

972
02:50:45,400 --> 02:51:11,360
CO!

