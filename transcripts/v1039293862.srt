1
00:00:00,000 --> 00:00:03,240
Ah, der Sister facilities.

2
00:00:03,240 --> 00:00:05,500
Nonchalant, ist so 말isch wie vorhin.

3
00:00:05,560 --> 00:00:17,140
...Na, ich bin об das

4
00:00:17,140 --> 00:00:20,100
flavour.

5
00:00:20,100 --> 00:00:11,580
енерialerweise auch die

6
00:00:22,580 --> 00:00:25,400
στα Fantastic Combos,

7
00:00:25,400 --> 00:00:27,400
Das war's für heute.

8
00:00:27,400 --> 00:00:29,400
Vielen Dank für's Zuschauen.

9
00:00:29,400 --> 00:00:56,400
Das war's für heute.

10
00:00:56,400 --> 00:01:23,400
Das war's für heute.

11
00:01:23,400 --> 00:01:28,400
Leute, nicht so Pock!

12
00:01:28,400 --> 00:01:31,400
Meine Hed startsverlängerung ist verknotet.

13
00:01:31,400 --> 00:01:33,400
Not Pock

14
00:01:49,400 --> 00:01:51,400
Ok, jetzt wieder Pock.

15
00:01:51,400 --> 00:01:59,400
jetzt passt alles exzellent exquisite so twitch hat noch nicht gecheckt dass der stream on ist

16
00:01:59,400 --> 00:02:02,640
aber ihr habt schon gesehen das heißt ihr kommt wahrscheinlich höchstwahrscheinlich zumindest

17
00:02:02,640 --> 00:02:11,680
mal aus dem discord stimmts stimmts oder habe ich recht chat ach jetzt hat's twitch kapiert ok

18
00:02:11,680 --> 00:02:24,200
nice tapp immer auf 0 ah dann keck wait ihr müsst jetzt achtung leute hier müssen wir mal hier das

19
00:02:24,200 --> 00:02:30,800
richtige emote verwenden guck mal wir haben jetzt richtig richtig huge emote whoop arrive

20
00:02:30,800 --> 00:02:42,960
whoop arrive leute ja dann bis denn danke für den sub ich habe es gar nicht gesehen wer hat

21
00:02:42,960 --> 00:02:47,520
gesagt hier der captain sie hat gesagt 13 monate hyper subscription huge hyper subscription

22
00:02:47,520 --> 00:02:54,620
p İZL.

23
00:02:57,360 --> 00:02:58,460
wie sie lauert

24
00:02:58,460 --> 00:03:19,020
Ich glaube, ich kann bald die ganzen Mundschutz-Corona-Dinger wieder aus meinen Emotes entfernen.

25
00:03:19,020 --> 00:03:21,780
Das Ende ist nah.

26
00:03:21,780 --> 00:03:26,500
Naja, gut, man weiß ja nicht, aber es wird sich noch ein bisschen hinziehen.

27
00:03:26,500 --> 00:03:37,340
Wegen mir, ohne Scheiß, können die Auswirkungen, also nicht die Krankheit, aber die Auswirkungen

28
00:03:37,340 --> 00:03:41,460
von Corona können gerne für immer da bleiben, nämlich dass man dauer Homeoffice machen kann.

29
00:03:41,460 --> 00:03:48,020
Nee, bin ich noch nicht, mache ich aber sobald es geht.

30
00:03:48,020 --> 00:03:57,100
Was immer das jetzt einem genau sagen soll, aber ich glaube du hast mir einen Sub gegiftet.

31
00:03:57,100 --> 00:04:00,260
Nice, danke schön.

32
00:04:00,260 --> 00:04:03,060
Bin mir nicht so sicher, was Twitch mir damit sagen will.

33
00:04:03,060 --> 00:04:07,900
Jaja, ich lasse mich aber dann sobald ich kann.

34
00:04:07,900 --> 00:04:12,900
Ich habe mich ja angemeldet bei meinem Hausarzt und mein Hausarzt hat mich gefragt, ich glaube

35
00:04:12,900 --> 00:04:16,020
eigentlich, dass man das gar nicht, keine Ahnung ob man das darf oder nicht.

36
00:04:16,020 --> 00:04:20,980
Phoenix, danke schön, neunzehn Monate Alpersubscription, er hat mich gefragt, was ich für einen Impfstoff

37
00:04:20,980 --> 00:04:21,980
haben will.

38
00:04:21,980 --> 00:04:32,100
Und dann habe ich gesagt, wenn er mich so fragt, dann nehme ich Bio, wie spricht man die jetzt

39
00:04:32,100 --> 00:04:33,100
eigentlich aus?

40
00:04:33,100 --> 00:04:39,580
BioNTech, BioNTech, wie auch immer, ich habe nicht so Bock auf Gehirnplutung oder sowas,

41
00:04:39,580 --> 00:04:42,700
auch wenn es nur sehr gering ist, aber wenn ich schon gefragt werde, was ich nehme, dann

42
00:04:42,700 --> 00:04:43,700
nehme ich das.

43
00:04:43,700 --> 00:04:46,020
Ghost, ich hätte mir auch das andere geben lassen.

44
00:04:46,020 --> 00:04:48,940
Ghost 1, danke schön für den Prime Sub, huge subscription.

45
00:04:48,940 --> 00:04:59,580
Der Chebatrain Level 2 läuft, was gibt es denn hier?

46
00:04:59,580 --> 00:05:04,940
Ok, komische Hundeemotes, braucht kein Mensch, Catemotes, ja den brauchen wir, Leute, der

47
00:05:04,940 --> 00:05:10,460
Subtrain muss voll, wir brauchen ganz dringend mehr Katzenemotes, ne das brauchen wir nicht,

48
00:05:10,460 --> 00:05:11,460
das auch nicht.

49
00:05:11,460 --> 00:05:15,740
Das andere, was es da gibt, ja so viele Hundeemotes, ne das brauchen wir nicht, den machen wir,

50
00:05:15,740 --> 00:05:20,300
Leute, den müssen wir nicht voll machen, den müssen wir nicht voll machen, die Emotes

51
00:05:20,300 --> 00:05:24,900
bis auf das Katzenemote, das ist jetzt auch nicht so gut, das gefallen wir nicht.

52
00:05:24,900 --> 00:05:29,460
Dann, ne, das brauchen wir nicht, dann warten wir jetzt bis der Hype Train vorbei ist und

53
00:05:29,460 --> 00:05:34,900
dann könnt ihr alles haben, exzellent, dann kriegt ihr nichts für, aber ich kriege die

54
00:05:34,900 --> 00:05:35,900
Kohle.

55
00:05:35,900 --> 00:05:36,900
Sixhead Time.

56
00:05:36,900 --> 00:05:41,780
So, was wir uns heute angucken, ist folgendes, ups, ne, hat mit Franzosen eigentlich gar

57
00:05:41,780 --> 00:05:47,620
nichts zu tun, falsches Emote, Stonks, richtig stonkige Stonks heute.

58
00:05:47,620 --> 00:05:50,740
Ghost 1, danke schön für den Prime Sub, weiß nicht, ob ich es schon vorgelesen habe,

59
00:05:50,740 --> 00:05:51,740
aber huge.

60
00:05:51,740 --> 00:05:56,980
Kann ich endlich wieder was zu essen kaufen mit den ganzen Prime Subs.

61
00:05:56,980 --> 00:06:03,340
Ich habe jetzt vier Tage nicht gestreamt, ich muss ganz schön hungern ohne Prime Subs.

62
00:06:03,340 --> 00:06:07,260
Ich bin schon, ich sieht mich schon fast gar nicht mehr.

63
00:06:07,260 --> 00:06:19,140
Ich habe jetzt gelesen, in Hanau ist diese Corona-Wert, Inzidenzwert, glaube ich jetzt

64
00:06:19,140 --> 00:06:25,620
unter 50 oder rein, ne, mein Kind sich kreist unter 50, das heißt nächste Woche können

65
00:06:25,620 --> 00:06:32,700
die dann wieder aufmachen alles, kann ich endlich wieder Pepo-Fat-Pizza-Futter gehen.

66
00:06:32,700 --> 00:06:36,420
Es gibt jetzt die erste stabile Version von WinGet, oh, exzellent, das muss ich mir aufschreiben.

67
00:06:36,420 --> 00:06:37,420
Stream-Ideen.

68
00:06:37,420 --> 00:06:38,420
WinGet.

69
00:06:38,420 --> 00:06:45,340
Heute gucken wir uns ein bisschen Hacker-Mans heute an, es hat mich nämlich letztens einer

70
00:06:45,340 --> 00:06:48,340
gefragt, das habe ich schon gesehen, das habe ich schon gesehen, das ist lustig gewesen.

71
00:06:48,340 --> 00:06:56,980
Heute gucken wir uns für die krassen Hacker-Mans unter uns, also heute ist bisschen mehr Hardcore-Technik

72
00:06:56,980 --> 00:06:57,980
angesagt.

73
00:06:57,980 --> 00:07:06,700
Gucken wir uns dort net 6, Preview 4 an, ich brauche noch mal, ich brauche noch Windows,

74
00:07:06,700 --> 00:07:19,540
habe ich einen Windows vor allem am Start, Zack, Zack, Qt4M habe ich am Start, Windows

75
00:07:19,540 --> 00:07:29,940
XP habe ich am Start, warum, warum lösche ich denn immer die Windows-VMS, warum bin ich

76
00:07:29,940 --> 00:07:34,140
denn so bescheuert, warum lasse ich nicht meine Windows-VM da, ich muss jedes Mal, ich muss

77
00:07:34,140 --> 00:07:37,220
jedes Mal wenn wir was unter Windows machen, muss ich erst einmal eine Viertelstunde Windows

78
00:07:37,220 --> 00:07:38,220
installieren.

79
00:07:38,220 --> 00:07:48,300
Richtig hängen geblieben, na dann machen wir das jetzt, Download, Windows ISO, wir wissen

80
00:07:48,300 --> 00:07:56,700
jetzt ja wie das funktioniert, haben wir ja schon oft genug gemacht, zack, zack, zack,

81
00:07:56,700 --> 00:08:07,580
Mobile Ansicht, Refresh, Windows-Auswahl, Windows 10 bestätigen, die Microsoft Seite

82
00:08:07,580 --> 00:08:20,140
übrigens, huge, huge, big, Auswahl, English International bestätigen, 64bit, jawoll, GIF,

83
00:08:20,140 --> 00:08:24,860
ja wir brauchen eine Windows Version, oh, warte, wir brauchen eine Windows Version,

84
00:08:24,860 --> 00:08:31,300
na okay, geht jetzt schon, wir brauchen eine aktuelle Windows, weil wir müssen Visual Studio

85
00:08:31,300 --> 00:08:41,180
2019 preview installieren und das würde ich mir nur ungern auf mein Host-System hauen,

86
00:08:41,180 --> 00:08:48,220
wo ist die Twitch-Notification, ich weiß es nicht, Pause, Pause-Jump, Moment, ja,

87
00:08:48,220 --> 00:09:00,900
ich weiß es nicht, einfach Safari installieren brauchst du das nicht, das heißt, was brauche

88
00:09:00,900 --> 00:09:05,820
ich da nicht, ach die Windows, die Windows Download, oh das ist natürlich eine super

89
00:09:05,820 --> 00:09:10,460
Idee, ich installiere mir Safari nur, dass ich die Windows ISO einfacher downloaden kann,

90
00:09:10,460 --> 00:09:16,740
ah, yes, das ist wichtig, ich kann auch einfach meinen User-Agent ändern, dieser war die

91
00:09:16,740 --> 00:09:20,980
Notification schneller als bei Discord, ja, der Discord-Bot ist in den letzten Tagen ein

92
00:09:20,980 --> 00:09:27,940
bisschen langsam glaube ich, ja, das habe ich heute Morgen auch gelesen, ich dachte

93
00:09:27,940 --> 00:09:32,740
erst, warum ist das eine Meldung wert, bis dann im Laufe des Artikels rauskommt, die

94
00:09:32,740 --> 00:09:36,780
Typen haben den Strom illegal abgegriffen, ansonsten wäre das vollkommen legal gewesen,

95
00:09:36,780 --> 00:09:53,980
tja, Pech gehabt, so, warum ich darauf komme, also was wir uns heute angucken, wie gesagt

96
00:09:53,980 --> 00:09:57,300
heute ein bisschen mehr Hacker, Hacker mein Thema, was ich gesehen habe und was wir uns

97
00:09:57,300 --> 00:10:01,780
auch gleich noch, aber ich skippe da durch, heute machen wir das gar nicht, aber es war

98
00:10:01,780 --> 00:10:14,060
glaube ich noch kein Mod da, der das geändert hat, und zwar der riesige Betrug, das ist

99
00:10:14,060 --> 00:10:19,940
schon ein bisschen, immer ein bisschen sehr dramatisch die Videos, die der macht, so,

100
00:10:19,940 --> 00:10:24,860
was wir uns angucken müssen ist.NET MS Build, da gab es letztens erst einen Talk,

101
00:10:24,860 --> 00:10:32,340
wie Deep Dive oder so, ich vertreibe hier, das da, das gucken wir aber nicht, Leute,

102
00:10:32,340 --> 00:10:36,300
wir gucken das nicht komplett an, wir gucken nur mal so ein bisschen durch, was die unterschiedlichen

103
00:10:36,300 --> 00:10:40,300
Sachen sind, die mich interessieren, weiß ich, hat einer von euch Build Talks geguckt

104
00:10:40,300 --> 00:10:48,660
ein bisschen, Build ist ja so diese Microsoft Developer Conference, übrigens, was mich

105
00:10:48,660 --> 00:10:56,500
bei Build total irritiert hat wieder, also mal gucken, MS Build Day 1, das muss ich euch

106
00:10:56,500 --> 00:11:02,220
mal zeigen und ich, vielleicht versteht jemand, was da abgeht, vielleicht bin ich auch, ich

107
00:11:02,220 --> 00:11:06,380
weiß, ein kritisches Thema, vielleicht bin ich auch nicht, wie gesagt, so vogue genug

108
00:11:06,380 --> 00:11:11,300
das zu verstehen, aber das habe ich nicht kapiert, weil, okay Moment, das muss ich euch, das

109
00:11:11,300 --> 00:11:15,180
muss ich euch jetzt mal zeigen, warte mal, warte mal, also, wo geht dann, wo geht dann

110
00:11:15,180 --> 00:11:21,860
die Pre-Show los, wo geht die Pre-Show, hier geht die Pre-Show los, so, pass auf, jetzt

111
00:11:21,860 --> 00:11:27,780
wird es ein bisschen, jetzt wird es ein bisschen, bisschen cringe, also, okay, jetzt geht die

112
00:11:27,780 --> 00:11:31,300
Pre-Show los, also mir geht es gar nicht um den Inhalt, ich verstehe die Vorstellung

113
00:11:31,300 --> 00:11:48,900
nicht so genau, wartet mal, okay, ja, okay, irgendwann am Anfang kommt es jetzt gleich,

114
00:11:48,900 --> 00:12:11,020
ja, okay, ach, für, jetzt, Alter, ich habe nicht richtig zugehört, das ist für Leute,

115
00:12:11,020 --> 00:12:16,340
die, die sehr behindert sind, jetzt habe ich das verstanden, ich habe schon gedacht, was

116
00:12:16,340 --> 00:12:24,620
geht da ab, ich habe mir nämlich schon gedacht, warum erzählt der Typ, dass er ein 40-jähriger

117
00:12:24,620 --> 00:12:29,380
alter weißer Mann ist, ich meine, hallo, ich sehe das, das ist für Leute, die sehr behindert

118
00:12:29,380 --> 00:12:33,940
sind, jetzt, okay, jetzt ergibt das auch Sinn, ich wollte gerade sagen, jetzt treiben sie

119
00:12:33,940 --> 00:12:36,980
es aber ein bisschen zu weit, jetzt treiben sie es ein bisschen zu weit, okay, jetzt habe

120
00:12:36,980 --> 00:12:41,220
ich es verstanden, das haben die aber auch nur einmal gesagt, später kommt da noch eine,

121
00:12:41,220 --> 00:12:47,500
die erzählt, ich bin, ich bin eine, was weiß ich, 30-jährige Frau und Stamme vom Indianerstamm

122
00:12:47,500 --> 00:12:51,780
XY ab, habe ich gedacht, okay, ist ja gut, wir müssen es zwar nicht übertreiben, aber

123
00:12:51,780 --> 00:12:57,380
das ist für Leute, die sehr behindert sind, die quasi mit Audiodescription, mit Vorlesen

124
00:12:57,380 --> 00:13:01,540
zu hören, okay, dann verstehe ich es, alles klar, dann habe ich es verstanden, dann ist

125
00:13:01,540 --> 00:13:06,700
es doch nicht so cringe, wie ich gedacht habe, sonst habe ich mir gedacht, was ist da los,

126
00:13:06,700 --> 00:13:11,900
wen interessiert das, ja, Leute, die mit Audiodescription zuhören und wissen wollen, wer vor ihnen

127
00:13:11,900 --> 00:13:16,300
steht, wo auch immer, ich bin mir auch nicht so ganz sicher, warum das bei einer Technikkonferenz

128
00:13:16,300 --> 00:13:24,500
so wichtig ist, aber das ist halt der, soll man sagen, so der aktuelle Zeitgeist, ja,

129
00:13:24,500 --> 00:13:34,820
es gibt Schlimmeres, ja, sollen sie machen, es taunt wieder an, aber jetzt habe ich das

130
00:13:34,820 --> 00:13:38,660
wenigstens kapiert, dass es für Leute, die nicht richtig was sehen können, okay, dann

131
00:13:38,660 --> 00:13:43,740
ergibt das Sinn, so, ich weiß jetzt mal die Windows-Installation an, ja, Chandler, ich

132
00:13:43,740 --> 00:13:47,540
weiß es auch nicht so genau, das kann ich dir nicht erklären, das müssen die anderen

133
00:13:47,540 --> 00:13:50,860
erklären, ich verstehe es nicht so genau, aber es ergibt zumindest halbwegs Sinn, wenn

134
00:13:50,860 --> 00:13:55,500
es für Leute, wenn es an Leute gerichtet ist, die es nicht sehen können, als sonst, als

135
00:13:55,500 --> 00:13:58,900
ich das erste Mal nebenbei geguckt habe, habe ich gedacht, was, warum erzählt der mir das,

136
00:13:58,900 --> 00:14:05,420
ich sehe, dass das ein Kerl ist mit Cowboy-Hut auf, wobei, okay, okay, man weiß in der heutigen

137
00:14:05,420 --> 00:14:10,260
Zeit ja eh nicht so genau, ich meine, er kann ja auch nur aussehen wie ein weißer Kerl

138
00:14:10,260 --> 00:14:21,340
mit Cowboy-Hut und in Wirklichkeit, frag mich nicht, identifiziert er sich als, ähm, wie,

139
00:14:21,340 --> 00:14:25,460
was weiß ich, egal, was ich sage, was ich sage ist falsch, kann gegen mich verwendet

140
00:14:25,460 --> 00:14:37,700
werden, ich sage dazu gar nichts, so, Windows-Installer-Disc, Windows 64 detected, äh, ne, ne, ne,

141
00:14:37,700 --> 00:14:42,700
ne, ne, ne, das ist natürlich auch geil, habt ihr das gerade gelesen, Windows detected,

142
00:14:42,700 --> 00:14:50,300
vorgeschlagenes Guest Operating System DOS, natürlich, natürlich, klar, okay, wir müssen

143
00:14:50,300 --> 00:15:15,060
es aber nicht hier machen, wir müssen es auf D, auf, äh, ach, da ist es, oh Gott, Windows,

144
00:15:15,060 --> 00:15:20,500
Alter, warum steht hier unten einmal E und hier steht, ich blick's, ich blick's wieder,

145
00:15:20,500 --> 00:15:37,700
es ist mir wieder zu hoch, okay, Windows, so, äh, number of processors, einer, vier

146
00:15:37,700 --> 00:15:45,700
cores, soll ja auch flutschen, viertausend sechs, ach komm, acht, acht, g, RAM, wir haben

147
00:15:45,700 --> 00:15:49,260
genug, natt, weiter, weiter, ich mach jetzt nur den Installer an, keine Sorge, ihr müsst

148
00:15:49,260 --> 00:15:52,900
mir nicht zum hunderttausenden mal gucken, wie ich den Installer von Windows durchklicke,

149
00:15:52,900 --> 00:15:58,380
äh, in der Zwischenzeit können wir das Video anschauen aus den Teilen, wo es interessiert,

150
00:15:58,380 --> 00:16:14,340
finish, oh, bam, best, no, ach so, ich muss erstmal die CD einlegen, no, ah, nervt nicht

151
00:16:14,340 --> 00:16:23,860
rum, Settings, ISO Image, Windows, jawoll, jetzt aber, connect, Neustart, ich bin nicht

152
00:16:23,860 --> 00:16:29,580
in der Lage, gerade den Kram richtig zu bedienen, okay, CD, Windows, install, alles gut, also,

153
00:16:29,580 --> 00:16:34,580
ähm, wer es nicht mitbekommen hat, moin Michael, 50 Billiarden, mach einen Snapshot, wenn du

154
00:16:34,580 --> 00:16:38,420
die vor MNC lässt, das ist eine sehr gute Idee, das vergesse ich eh, das ist aber eine

155
00:16:38,420 --> 00:16:46,620
gute Idee, also, äh, wer es nicht mitbekommen hat, es war die letzte Woche MSBuild 2021,

156
00:16:46,620 --> 00:16:51,600
das ist so die größte Microsoft Entwicklerkonferenz und was mich wieder, was mich wieder richtig

157
00:16:51,600 --> 00:16:56,340
geschockt hat ist, wie unübersicht, genau, da sieht man auch schon die Seite, wie unübersichtlich

158
00:16:56,340 --> 00:17:04,500
mal wieder die, die, und aber ist das standardmäßig, ach, das ist standardmäßig schwarz, mein

159
00:17:04,500 --> 00:17:09,220
Gott, ist die Seite hässlich, die Seite ist so krass hässlich, das ist der Wahnsinn,

160
00:17:09,220 --> 00:17:15,660
ähm, ich mein, was, welcher Webdesigner war denn hier bei Microsoft wieder am Start,

161
00:17:15,660 --> 00:17:23,100
was die Emote soll ich machen, ok, Vogue und Bedge, kann man machen, das kann man für

162
00:17:23,100 --> 00:17:38,620
Boomer schlafen verwenden, ich hab's geadded, so, und, was findest du an, äh, was, wo,

163
00:17:38,620 --> 00:17:57,620
was, wo, hab ich irgendwelche Questions übersehen, äh, wen aus VM, genau, was, wie, also, das

164
00:17:57,620 --> 00:18:01,820
hab ich natürlich jetzt nicht gesehen, aber du kannst ja auch VM-Workstation kaufen, ich

165
00:18:01,820 --> 00:18:05,180
würd' da definitiv VM-Workstation kaufen, weil da kannst du Snapshots machen, Snapshots

166
00:18:05,180 --> 00:18:10,780
ist eines der wichtigsten Sachen überhaupt, wenn man VMs verwendet, ähm, Keys kannst

167
00:18:10,780 --> 00:18:15,860
du dir kaufen für 20€ das Stück bei irgendwelchen Keyshops, du musst keine illegalen Dinger

168
00:18:15,860 --> 00:18:21,460
machen dafür, ähm, so, und das ist wie gesagt die größte Microsoft Entwicklerkonferenz

169
00:18:21,460 --> 00:18:27,860
des Jahres, und die Seite ist so unglaublich unübersichtlich, ich hab geguckt, am irgendwie

170
00:18:27,860 --> 00:18:35,060
25.24 wollte ich gucken, hey, wo gibt es denn, kann man hier irgendwie gucken, was.net ist,

171
00:18:35,060 --> 00:18:40,540
man kann hier nach.net suchen, dann findet man aber irgendwie wieder viel zu viel und

172
00:18:40,540 --> 00:18:45,180
es ist, es ist wir, also ich find die Seite nicht gut, die sie hier designt haben für

173
00:18:45,180 --> 00:18:49,860
ehrlich gesagt, und was ich auch nicht verstehe ist, warum kann man den Kram nicht einfach

174
00:18:49,860 --> 00:18:54,180
auf Twitch und YouTube streamen, also auf YouTube haben sie's gestreamt mit deaktiviertem Chat,

175
00:18:54,180 --> 00:18:57,340
warum haben sie's nicht einfach auf Twitch gestreamt, da hätte man sich auch so austauschen

176
00:18:57,340 --> 00:19:04,500
können, also, das hat man, also, gerade das hier ist so der Inbegriff von kak Windows

177
00:19:04,500 --> 00:19:11,700
App Design jetzt auch im Browser, versteh ich nicht, was sie sich dabei gedacht haben

178
00:19:11,700 --> 00:19:17,380
bei der Seite, zumindest mittlerweile sind viele, warum sie die Kommentare ausschalten

179
00:19:17,380 --> 00:19:20,820
weiß ich nicht, gerade bei so neuen Sachen interessiert es mich ehrlich gesagt was die

180
00:19:20,820 --> 00:19:31,780
Leute in die Kommentare schreiben, was auch immer, man weiß es nicht, genau und das lief

181
00:19:31,780 --> 00:19:36,980
jetzt die letzten drei Tage oder vorletzten, vorletzten, am Donnerstag war es vorbei, also

182
00:19:36,980 --> 00:19:42,220
Dienstag, Mittwoch, Donnerstag und da gibt es immer Talks zu allem möglichen Zeug von

183
00:19:42,220 --> 00:19:49,220
Microsoft und ich hab mir die Keynote angeguckt, die Opening Ceremony oder was auch immer,

184
00:19:49,220 --> 00:19:54,300
die Keynote, hat jemand von euch die Keynote zur aktuellen Build gesehen, also ich muss

185
00:19:54,300 --> 00:20:02,780
sagen ich hab selten was langweiliges gesehen von Microsoft, ich fand das total, nicht

186
00:20:02,780 --> 00:20:10,300
dot net was mach ich denn, Build Keynote, also ich hab selten was langweiliges gesehen,

187
00:20:10,300 --> 00:20:20,740
das ist total pepega gewesen, wobei ich dem, wie spricht man eigentlich aus, Satya Nadella,

188
00:20:20,740 --> 00:20:24,940
ich hör dem immer ganz gern zu, wenn er was erzählt, ich find das ist irgendwie so recht,

189
00:20:24,940 --> 00:20:30,180
so meditative Art zu sprechen, keine Ahnung, aber das ist mega langweilig gewesen, huge

190
00:20:30,180 --> 00:20:34,660
langweilig, es gab nix, es gab wirklich nix interessantes außer das Microsoft mal wieder

191
00:20:34,660 --> 00:20:41,380
von ihrer komischen Virtual Reality Visionen gefaselt hat, die es nicht gibt, Microsoft

192
00:20:41,380 --> 00:20:45,420
labert, ich weiß nicht ob euch das mal aufgefallen ist, Microsoft labert die letzten drei Jahre

193
00:20:45,420 --> 00:20:52,060
die ganze Zeit schon über irgendwelche komischen Virtual Reality Workspaces, Virtual Reality

194
00:20:52,060 --> 00:21:01,740
Innovations und sonst wie was und davon, das juckt einfach in der realen Welt kaum ein,

195
00:21:01,740 --> 00:21:06,980
es gibt sicherlich Bereiche, da ist das anders, aber das meiste ist denen vollkommen egal,

196
00:21:06,980 --> 00:21:13,220
ja also mir zumindest, und ich hab jetzt noch nirgendswo den Kram jetzt so in the wild gespottet

197
00:21:13,220 --> 00:21:18,780
was Microsoft da macht, aber wenn Microsoft sagt hier VR augmented ganz toll, dann wird

198
00:21:18,780 --> 00:21:27,660
es wohl so sein, zumindest war das echt langweilig die Keynote, richtig, richtig resident sleeper,

199
00:21:27,660 --> 00:21:31,660
GitHub Codespaces aus dem Edge heraus, das hab ich noch nicht gesehen, wie gesagt das

200
00:21:31,660 --> 00:21:38,900
einzige was mich interessiert ist, wo ich ja schon ein bisschen was von geguckt hab, ist

201
00:21:38,900 --> 00:21:44,100
der.NET 6 Deep Dive, ich muss das mal kurz erklären, ich weiß dass wir viele krasse

202
00:21:44,100 --> 00:21:47,900
Hackermans hier haben, aber da ich auf YouTube zum größten halt anderen Content mach, weiß

203
00:21:47,900 --> 00:21:52,060
ich auch dass jetzt vielleicht hier nur die ein oder anderen interessierten Leute da sind,

204
00:21:52,060 --> 00:21:59,660
die sich damit aber nicht so sehr auskennen, deswegen erzähl ich jetzt mal ganz schnell

205
00:21:59,660 --> 00:22:09,300
was zu.NET und warum Microsoft auch da richtige, richtige Pepegas wieder sind, hallo ich bin

206
00:22:09,300 --> 00:22:19,420
German, warum stellst du das um da unten, alter Microsoft wenn sie mitdenken wollen, Microsoft

207
00:22:19,420 --> 00:22:27,940
mitdenken will dann ist vorbei, ok off Setup, komm an, nein ich hab, man muss ja Windows

208
00:22:27,940 --> 00:22:34,820
mittlerweile nicht mehr registrieren, kenn noch einer diese Windows 8 90 Keys, die fckw

209
00:22:34,820 --> 00:22:43,140
im Key hatten, das waren die ganzen hacked Keys, fckw also hat nichts mit diesem komischen,

210
00:22:43,140 --> 00:22:50,620
nichts mit Chemie zu tun oder so, Windows 8 90 Key, fckw sonst was, fckwk waren diese

211
00:22:50,620 --> 00:22:55,220
ganzen leaked Keys von Windows 8 90, ich weiß Boomer Clap Talk wieder ne.

212
00:22:55,220 --> 00:23:07,740
So gut jetzt installiert, alles klar, Windows 30 Tage nach Registrierung stimmt, die hatten

213
00:23:07,740 --> 00:23:13,900
ja mit Windows XP kannst du ja zumindest schon Demo Modus starten, also jetzt mal kurz,

214
00:23:13,900 --> 00:23:19,700
mal kurz eine Erklärung,.NET Download, also nochmal so die Unterschiede, um was es jetzt

215
00:23:19,700 --> 00:23:27,660
um was es geht, also wir gucken uns jetzt, was wir uns heute angucken sind in dem Video

216
00:23:27,660 --> 00:23:33,620
von Microsoft neue Features,.NET 6 und was wir uns dann angucken werden ist das Preview

217
00:23:33,620 --> 00:23:39,580
davon in das vierte Vorversion quasi und ich muss jetzt nochmal kurz erklären was

218
00:23:39,580 --> 00:23:43,820
das mit der ganzen Sache auf sich hat, weil ich weiß dass das Leute verwirrt und Microsoft

219
00:23:43,820 --> 00:23:48,380
hat es mit der Benamung auch schon mal wieder richtig verkackt, das sind wir von Microsoft

220
00:23:48,380 --> 00:23:54,300
gewohnt, Microsoft kann einfach nichts benamen, guckt euch die neue Xbox an, wo ich mir bis

221
00:23:54,300 --> 00:23:59,220
heute nicht merken kann wie die heißt, guckt euch Windows 10 an wo sie eine Version übersprungen

222
00:23:59,220 --> 00:24:05,460
haben und sicherlich noch zig andere Sachen wo mir gerade nichts einfällt, aber benamen

223
00:24:05,460 --> 00:24:11,780
ist nicht, oder wo sie Projekt Natal durch Kinect ersetzt haben und sowas, also Microsoft

224
00:24:11,780 --> 00:24:17,140
hat es nicht mit Benamen und schon gar nicht mit Versionsnummern, so wer installiert das

225
00:24:17,140 --> 00:24:23,380
bitte auf Linux, das ist total verbreitet und ohne Scheiß ich programmiere die letzten

226
00:24:23,380 --> 00:24:29,300
drei Jahre exklusiv unter Linux nur noch.NET, das hat nichts mit Windows Only mehr zu tun,

227
00:24:29,300 --> 00:24:33,580
das funktioniert mittlerweile würde ich fast sagen besser unter Linux als unter Windows,

228
00:24:33,580 --> 00:24:42,180
es sei denn man will Desktop Anwendungen programmieren, dann ist es was anderes, aber gerade Web Anwendungen

229
00:24:42,180 --> 00:24:47,020
ist mega, gerade mit Rider ist es super unter Linux, es gibt kaum was besseres, ich mache

230
00:24:47,020 --> 00:24:56,780
fast alles unter Linux mit.NET 5 mittlerweile und Rider, also kann man echt nichts sagen,

231
00:24:56,780 --> 00:25:03,900
zumindest folgendes, Microsoft hat es mit der Benamung nicht so, ja Mono hat ja auch ein

232
00:25:03,900 --> 00:25:08,060
bisschen gesackt, Mono braucht man ja auch nicht mehr, man kann jetzt ja auch.NET richtig

233
00:25:08,060 --> 00:25:12,380
sehen, also was ich sagen wollte, es gibt zwei Sachen die man wissen muss, also C-Sharp

234
00:25:12,380 --> 00:25:20,860
ist die Programmiersprache,.NET ist die Plattform, die Runtime unten drunter, also sprich wenn

235
00:25:20,860 --> 00:25:26,700
man.NET installiert, bekommt man ganz viele Sachen unter anderem den C-Sharp-Compiler,

236
00:25:26,700 --> 00:25:32,380
formal gesehen hat C-Sharp mit.NET nichts zu tun, praktisch gesehen, also formal gesehen

237
00:25:32,380 --> 00:25:36,380
ist C-Sharp die Programmiersprache und.NET die Runtime, aber in der Praxis hat es doch

238
00:25:36,380 --> 00:25:40,340
viel miteinander zu tun, weil Microsoft da eng miteinander zusammenarbeitet, also sprich

239
00:25:40,340 --> 00:25:47,100
C-Sharp benutzt neue Features aus.NET und umgedreht und auch die Releases sind synchronisiert,

240
00:25:47,100 --> 00:25:52,520
also im Prinzip ist das eine die Programmiersprache, das andere die Runtime, aber es ist trotzdem

241
00:25:52,520 --> 00:25:59,540
ziemlich eng gebundelt, also wenn wir von C-Sharp reden meint man meistens C-Sharp auf Basis

242
00:25:59,540 --> 00:26:05,460
von.NET, so und der größte Fail den Microsoft geschafft hat was die Benamung angeht, ist

243
00:26:05,460 --> 00:26:12,580
die Benamung von.NET selbst, weil ihr kennt doch bestimmt noch alle das.NET Framework

244
00:26:12,580 --> 00:26:16,820
4.8, das ist das, das muss man unter Windows ab und zu installieren oder wird manchmal

245
00:26:16,820 --> 00:26:22,020
in Steam noch automatisch installiert, wenn man ältere Games installiert, da poppt dann

246
00:26:22,020 --> 00:26:28,420
nebenbei ein Installer auf und erzählt.NET Framework 4.8 wird installiert oder sowas,

247
00:26:28,420 --> 00:26:37,580
da hat's Microsoft mega verschissen, Hände hoch im Chat wer glaubt, dass.NET 5.6, äh

248
00:26:37,580 --> 00:26:47,980
.NET 6 quasi zwei Versionen weiter ist als.NET Framework 4, ok Hände hoch kann man

249
00:26:47,980 --> 00:26:52,300
jetzt schlecht machen im Chat, aber ihr wisst was ich mein, rein rhetorische Frage und wenn

250
00:26:52,300 --> 00:26:57,700
ich so doof frage, kennt ihr wahrscheinlich auch die Antwort schon, denn es hat nichts

251
00:26:57,700 --> 00:27:06,540
miteinander zu tun, wer hätte das gedacht, es hat nichts miteinander zu tun, also folgendermaßen

252
00:27:06,540 --> 00:27:17,180
Microsoft hat die Benamung komplett verschissen, ursprünglich gab es mal.NET Framework,

253
00:27:17,180 --> 00:27:23,180
das war das einzige was es gab, also paar Kleinigkeiten außen vor, das einzige was

254
00:27:23,180 --> 00:27:31,060
es gab ursprünglich war.NET Framework und das ging bis Version 4.8, das war Windows

255
00:27:31,060 --> 00:27:40,580
Only, irgendwann hat sich Microsoft dann gedacht ach nee, das gefällt uns nicht mehr, wir

256
00:27:40,580 --> 00:27:48,580
schmeißen das weg und dann hat Microsoft.NET Core entwickelt,.NET Core kam dann raus,

257
00:27:48,580 --> 00:27:59,220
Cross Platform diesmal, nicht Windows Only, Mac, Linux, Windows, kam raus 1, 2, 2.1, 3.0

258
00:27:59,220 --> 00:28:10,260
und 3.1 glaube ich, also das letzte.NET Core war 3.1, so und mit 3.1,.NET Core 3.1 hat

259
00:28:10,260 --> 00:28:16,220
sich Microsoft dann gedacht, Moment, KegWade, die Leute haben sich jetzt zu sehr an den

260
00:28:16,220 --> 00:28:23,500
Namen gewöhnt, wir benennen das wieder um und jetzt haben sie quasi das Nachfolger Release

261
00:28:23,500 --> 00:28:31,500
von.NET Core 3.1, was wiederum wohlgemerkt nichts mit.NET Framework 4.8 zu tun hatte,

262
00:28:31,500 --> 00:28:44,020
unbenannt in.NET 5, also.NET 5 ist eigentlich der Nachfolger von.NET Core 3.1 und nicht

263
00:28:44,020 --> 00:28:55,140
etwa von.NET Framework 4.8, ich hoffe man hat das jetzt verstanden, so und dementsprechend

264
00:28:55,140 --> 00:29:02,700
ist.NET 6 der Nachfolger von.NET 5, also die Benahmung ist komplett pepega, was Microsoft

265
00:29:02,700 --> 00:29:10,820
sich da ausgedacht hat, das ist komplett wir, um die Sache jetzt noch besser zu machen,

266
00:29:10,820 --> 00:29:14,100
Set Pudding, Dankeschön für den Sub, um die Sache jetzt noch ein bisschen verrückter

267
00:29:14,100 --> 00:29:22,780
zu machen ist, das Web Framework,.NET Core gibt es nicht mehr,.NET 5 und.NET 6 ist

268
00:29:22,780 --> 00:29:27,580
jetzt das Richtige, das ist der Nachfolger von.NET Core 3.1,.NET Core gibt es nicht

269
00:29:27,580 --> 00:29:35,460
mehr, es gibt nur noch.NET, jetzt 5 und dann 6, so und um die Sache jetzt noch ein bisschen

270
00:29:35,460 --> 00:29:41,180
kaputt, noch ein bisschen verwirrender zu machen ist, in.NET sind viele Sachen mit

271
00:29:41,180 --> 00:29:47,260
dabei, zum Beispiel C-Sharp, F-Sharp, Visual Basic als Programmiersprache, wen es auch

272
00:29:47,260 --> 00:29:56,300
interessiert, unter anderem für Desktop Anwendung ist es ein Web Framework dabei, so und jetzt

273
00:29:56,300 --> 00:30:05,620
wird es noch verwirrender Leute, jetzt wird es noch verwirrender, das Web Framework in

274
00:30:05,620 --> 00:30:14,180
.NET 6, was wohlgemerkt der Nachfolger von.NET Core ist, heißt jetzt nicht mehr ASP.NET

275
00:30:14,180 --> 00:30:21,940
6, sondern ASP.NET Core, da haben sie das Core behalten, aber das Core in.NET haben

276
00:30:21,940 --> 00:30:27,300
sie rausgeschmissen, um die Sache weiter verwirrender zu machen, so und jetzt setzt Microsoft der

277
00:30:27,300 --> 00:30:37,060
ganzen Sache noch die Krone auf, jetzt gibt es.NET 6 mit dem Web Framework ASP.NET Core

278
00:30:37,060 --> 00:30:49,140
6, die man allerdings nicht verwechseln darf mit ASP.NET 6, ASP.NET 6 ist 10 Jahre alt,

279
00:30:49,140 --> 00:31:12,180
das ist die letzte, also ASP.NET ist die letzte Version für.NET Framework, also das versteht

280
00:31:12,180 --> 00:31:18,420
wirklich keiner mehr, das versteht wirklich keiner mehr, was Microsoft da macht, am besten

281
00:31:18,420 --> 00:31:33,100
ist, man ignoriert einfach alles und merkt sich,.NET 5 ist das aktuelle und.NET 6 ist

282
00:31:33,100 --> 00:31:43,940
das, was jetzt rauskommt demnächst. Logik, muss man nicht verstehen. Sollte eigentlich

283
00:31:43,940 --> 00:31:53,140
funktionieren jetzt. So, ich kann mir auch nicht merken, wie die neue Xbox heißt. Set

284
00:31:53,140 --> 00:31:59,940
Pudelinerische für den Sub, ja Microsoft bonnet Sachen, was ist.NET? Wie gesagt,.NET

285
00:31:59,940 --> 00:32:06,340
ist eine Plattform von Microsoft, die mehrere Sachen beinhaltet, zum Beispiel einen C-Sharp

286
00:32:06,340 --> 00:32:14,340
Compiler, einen F-Sharp Compiler, einen Visual Basic Compiler, wenn das noch einer braucht,

287
00:32:14,340 --> 00:32:20,660
Runtimes, ein Web Framework, Frameworks für Desktop Applications und sonst was..NET

288
00:32:20,660 --> 00:32:30,620
ist quasi eine gesamte Plattform und eine Runtime, für die man Software entwickeln

289
00:32:30,620 --> 00:32:35,660
kann und die die Sachen dann ausführt und Funktionen bereitstellt, mit denen man einfacher

290
00:32:35,660 --> 00:32:41,580
Software entwickeln kann. Ich weiß, gibt es noch jemand von euch, der Visual Basic verwendet?

291
00:32:41,580 --> 00:32:47,580
Das braucht man für C-Sharp Programme, genau. Das einfachste, wenn du C-Sharp programmieren

292
00:32:47,580 --> 00:32:55,700
willst, ist, du lädst den Installer runter für.NET und installierst den fertig, da

293
00:32:55,700 --> 00:32:59,620
ist nämlich C-Sharp schon mit dabei. Da ist ein C-Sharp Compiler dabei. Du brauchst da

294
00:32:59,620 --> 00:33:06,220
nur noch einen ordentlichen Editor. So, und unter Windows, und unter Windows würde ich

295
00:33:06,220 --> 00:33:11,940
empfehlen, wer mit.NET anfangen will, lädt sich hier die Community Version, die Community

296
00:33:11,940 --> 00:33:21,620
Edition runter. Wohlgemerkt, von Wishill Studio, nicht von Wishill Studio Code und die ist

297
00:33:21,620 --> 00:33:29,260
auch kostenlos. Könnt ihr damit basteln dann. Wishill Studio Code ist auch kostenlos, ist

298
00:33:29,260 --> 00:33:33,260
jetzt aber für C-Sharp-Entwicklung nicht unbedingt das Geilste. Das ist eher etwas

299
00:33:33,260 --> 00:33:37,180
für JavaScript und solche Geschichten, aber man kann damit auch C-Sharp machen, aber das

300
00:33:37,180 --> 00:33:41,620
ist ein deutscher Wishill Studio besser oder eben Rider, wenn es Cross-Plattform sein

301
00:33:41,620 --> 00:33:51,140
soll. Genau, so viel zum Thema.NET. So, während Windows jetzt installiert. Yes. Gucken wir

302
00:33:51,140 --> 00:33:56,540
uns mal an, was Microsoft sagt, was die neuesten Funktionen sind. Is this the right keyboard

303
00:33:56,540 --> 00:34:00,620
layout? Kann mir jemand mal erklären, was der Sinn davon ist, dass ich am Anfang des

304
00:34:00,620 --> 00:34:07,140
Installers auswähle, ich habe ein German Keyboard Layout und dass Microsoft das Keyboard Layout

305
00:34:07,140 --> 00:34:13,980
dann auf United Kingdom setzt. Was hältst du von Swift? Was ich bisher gesehen hab, echt

306
00:34:13,980 --> 00:34:18,700
cool, ich hab damit aber noch nichts gemacht. Ich hab eh, was Mac-Anwendung angeht, so gut

307
00:34:18,700 --> 00:34:24,820
wie nichts gemacht. Ich wollt noch eine andere Sache beantworten, aber ich find's jetzt grad

308
00:34:24,820 --> 00:34:30,660
nicht. Irgendwann hat was von Rider gefragt. Also hier der Stefan hat gefragt, welche Vorteile

309
00:34:30,660 --> 00:34:36,380
hat Rider gegenüber Wishill Studio? Der größte Vorteil von, das ist die beste Erklärung dafür,

310
00:34:36,380 --> 00:34:44,100
Rider ist geiler. Reicht als Begründung, oder? Swift ist iOS. Swift ist so Allzweckwaffe

311
00:34:44,100 --> 00:34:50,300
für Mac- und iOS-Anwendungen, ja. Der größte Vorteil gegenüber Wishill Studio ist, dass

312
00:34:50,300 --> 00:34:53,580
es Cross-Plattform ist und unter Windows, Mac und Linux läuft. Das heißt, wenn du

313
00:34:53,580 --> 00:34:58,940
unter Linux.net entwickeln willst, kommst du eigentlich gar nicht daran vorbei, Rider

314
00:34:58,940 --> 00:35:09,260
zu verwenden, wenn du dich nicht mit Wishill Studio Code rumschlagen willst. Und ansonsten

315
00:35:09,260 --> 00:35:12,460
ist das Handling einfach ein bisschen anders. Ich würd sagen, es nimmt sich jetzt nicht

316
00:35:12,460 --> 00:35:19,580
so viel. Ich find Rider mittlerweile angenehmer. Wishill Studio hat aber auch ein paar Vorteile.

317
00:35:19,580 --> 00:35:24,420
Zum Beispiel, wenn du Test-Versionen ausprobieren willst, da kannst du davon ausgehen, Rider

318
00:35:24,420 --> 00:35:28,380
hat, deswegen installieren wir jetzt auch eine Windows-VM, da kannst du davon ausgehen,

319
00:35:28,380 --> 00:35:35,500
Rider hat die neuen Funktionen noch nicht drin. Also Rider hat keine Test-Version für

320
00:35:35,500 --> 00:35:42,220
Vorschau-Versionen von Microsoft drin. Wieso sollte man eigentlich.net unter Linux entwickeln?

321
00:35:42,220 --> 00:35:50,220
Weil das super läuft unter Linux. Oh nee, ich hab mich verklickt. Das läuft mittlerweile

322
00:35:50,220 --> 00:35:55,340
richtig geil unter Linux. Ich programmiere drei Jahre, drei, vier Jahre schon exklusiv

323
00:35:55,340 --> 00:36:03,260
nur unter Linux. Und nachdem dort net halt auch lange schon nicht mehr nur für Windows-Anwendungen

324
00:36:03,260 --> 00:36:07,580
gedacht ist, für grafische Windows-Anwendungen ist eh alles verloren, da gibt es eh nix

325
00:36:07,580 --> 00:36:15,980
Scheiß. Offline-Account muss ich machen, genau. Und gerade was Cloud-Sachen angeht oder auch

326
00:36:15,980 --> 00:36:22,260
irgendwelche Web-Anwendungen oder so, das läuft eh zu 90% unter Linux. Jetzt mal ernsthaft,

327
00:36:22,260 --> 00:36:31,300
niemand lässt seine Anwendung unter nem IES laufen oder? Hat jemand von euch die... Nein,

328
00:36:31,300 --> 00:36:37,460
ich will das nicht, mich einloggen, Alter. Hat jemand die Ehre, IES-Anwendungen betreiben

329
00:36:37,460 --> 00:36:48,660
zu dürfen? Oh. Vertippt. Ihr habt noch IES für ältere Sachen. Oh, ich hab was gelernt,

330
00:36:48,660 --> 00:36:55,180
man soll das einfach leer lassen, dann wird man auch nicht gefragt. Ja, perfekt. EGIT-IES.

331
00:36:55,180 --> 00:37:12,780
Muss ja wieder den ganzen Crap anhaken. Ihr betreibt auch Cloud-Anwendungen auf Azure

332
00:37:12,780 --> 00:37:19,740
in Windows. Ja, so lustige Sachen machen wir auch. Not now. Aber die meisten Web-Anwendungen,

333
00:37:19,740 --> 00:37:24,940
also ich sag mal so, wenn was Windows braucht, dann kann man es ja unter Windows laufen lassen,

334
00:37:24,940 --> 00:37:31,340
oder wenn das irgendwas ist, was AD-Geschichten oder so macht, alles klar. Aber niemand, der

335
00:37:31,340 --> 00:37:36,140
die Auswahl hat, zumindest kenne ich keinen und ich wüsste auch nicht warum. Niemand,

336
00:37:36,140 --> 00:37:42,220
der die Auswahl hat, wenn er neue Anwendungen programmiert und hat die Auswahl, ich kann

337
00:37:42,220 --> 00:37:46,660
die easy unter Linux laufen lassen oder unter Windows, lässt die unter Windows laufen. Ja,

338
00:37:46,660 --> 00:37:50,140
wenn es eine Web-Anwendung ist. Warum sollte ich eine Web-Anwendung unter Windows laufen

339
00:37:50,140 --> 00:37:56,540
lassen, wenn sie nicht Windows-spezifische Funktionen braucht? Gibt überhaupt keinen

340
00:37:56,540 --> 00:38:03,900
Sinn. So, this may take several minutes. Wie gesagt, größte Vorteil von Rider ist,

341
00:38:03,900 --> 00:38:09,780
dass es cross-Plattform läuft und ansonsten nimmt sich das nicht allzu viel. Was ist das

342
00:38:09,780 --> 00:38:22,980
für ein Twitch-Standard-Emote? Hab ich noch nie gesehen. Keine Ahnung, was das ist. So.

343
00:38:22,980 --> 00:38:27,260
Was wäre so eine Windows-spezifische Funktion in der Web-Anwendung? Ja, vielleicht irgendwelche

344
00:38:27,260 --> 00:38:33,180
AD-Authentifizierung für User-Anmeldungen oder sowas. Keine Ahnung. Mir fällt als der

345
00:38:33,180 --> 00:38:36,560
ehrlich gesagt auch nicht so viel ein. Vielleicht irgendwelche Active Directory Geschichten

346
00:38:36,560 --> 00:38:43,340
oder so. Also mal angenommen, ich baue eine Web-Anwendung, die, wobei, älter abfragen

347
00:38:43,340 --> 00:38:47,100
kannst du auch unter Linux machen. Keine Ahnung. Will ich mir auch keine Gedanken darüber

348
00:38:47,100 --> 00:38:51,300
machen. Ich bin froh, dass ich das nicht machen muss. Gibt es bestimmt, gibt es bestimmt

349
00:38:51,300 --> 00:39:00,340
irgendwas. Aber mir fällt jetzt auch nichts Gutes ein, warum man das machen will. Also

350
00:39:00,340 --> 00:39:07,060
bei uns ist es so, wir sind ja auch gerade in der Firma, wo ich arbeite, sind ja auch

351
00:39:07,060 --> 00:39:11,420
ganz hart dabei, alles mögliche in die Cloud umzuziehen. Viele Sachen, was Cloud-Umzug

352
00:39:11,420 --> 00:39:16,660
ist, verstehen die auch darunter. Wir erstellen uns in Azure eine VM und kopieren einfach

353
00:39:16,660 --> 00:39:23,340
alles vom Rechenzentrum in die VM und dann sind wir in der Cloud. Das ist halt eigentlich

354
00:39:23,340 --> 00:39:28,740
genau der Weg, es nicht zu machen. Und wisst ihr eigentlich, wie teuer der Scheiß ist?

355
00:39:28,740 --> 00:39:34,740
Wisst ihr, wie teuer der Kram ist? Passt mal auf. Azure Calculator. Passt mal auf. Wir

356
00:39:34,740 --> 00:39:39,340
haben letztens, wir haben letztens mal, wir mussten letztens größere Sachen umziehen.

357
00:39:39,340 --> 00:39:44,660
Virtuelle Computer. Der hat jetzt ein bisschen Paintschamp die Anwendung, ja ja, anzeigen.

358
00:39:44,660 --> 00:39:50,020
Also, jetzt passt mal auf. So, West, wir machen mal Europe. Central Germany, gibt es auch

359
00:39:50,020 --> 00:39:58,100
da irgendwo, genau. So, Central Germany, Betriebssystem Linux, Ubuntu, ja, vollkommen okay. Ubuntu

360
00:39:58,100 --> 00:40:11,100
Advantage, was ist denn da der Unterschied? Kein Mensch. Standard, Kategorie. Oh fuck,

361
00:40:11,100 --> 00:40:15,420
keine Ahnung, was wir da haben. Instance. So, wir haben was richtig Fettes genommen.

362
00:40:15,420 --> 00:40:29,260
Richtig Fettes, irgendwie sowas hier. Moment, can't wait. Also 5 Euro die Stunde. Das ist

363
00:40:29,260 --> 00:40:35,700
deutsches Komma, also 5,2. Also wir haben was Fettes genommen. So, dann läuft das, dann

364
00:40:35,700 --> 00:40:46,420
läuft das einen ganzen Monat. Einen ganzen Monat. Und so, und jetzt kommt der Hit. Also

365
00:40:46,420 --> 00:41:06,620
Esser Steep. Moment, hab ich den, ich hab den Calculator kaputt gemacht jetzt. Ich hab

366
00:41:06,620 --> 00:41:19,900
nichts anderes mehr auswählen. Wait, wait a minute. Dann nehmen wir West, West Europe,

367
00:41:19,900 --> 00:41:37,220
West Europe. Warte mal, wo war's denn jetzt? West Europe. Okay, ich glaube wir haben sogar

368
00:41:37,220 --> 00:41:50,420
nur Esser Steep Standard genommen. So, und jetzt kommt der Hit. Also. Und wir brauchen

369
00:41:50,420 --> 00:42:09,420
eigentlich zwei Stück von, wir brauchen eigentlich zwei Stück von. Also, als Erklärung warum

370
00:42:09,420 --> 00:42:13,620
wir das machen müssen, folgendes. Ich muss nur gucken, dass ich das immer ein bisschen

371
00:42:13,620 --> 00:42:19,940
anonymisiere, dass man nicht weiß von welcher Bank ich rede. Also, folgendermaßen, warum

372
00:42:19,940 --> 00:42:24,140
will man so einen Scheiß überhaupt machen? Erst mal gesagt, eigentlich will man sowas

373
00:42:24,140 --> 00:42:29,340
nicht machen, gleich mal angemerkt. Es gibt deutlich bessere Sachen in Azure Speicherplatz

374
00:42:29,340 --> 00:42:38,180
zu kaufen, als eine VM mit 2x32T SSD. Es gibt Azure Files, das ist billiger, da kann

375
00:42:38,180 --> 00:42:44,700
man dann über eine Windows Freigabe, über einen Samba Share oder über NFS drauf zugreifen,

376
00:42:44,700 --> 00:42:48,740
ist alles besser. Man kann, wenn es lahm sein darf, Blob Storage verwenden, das ist alles

377
00:42:48,740 --> 00:42:54,300
billiger als das. So, jetzt kommt der Hit. Jetzt kommt der Hit. Also, um was es geht bei

378
00:42:54,300 --> 00:43:03,380
dem Umzug ist folgendes. Wir haben bei uns auf der Arbeit riesige, also wir sind ja verpflichtet,

379
00:43:03,380 --> 00:43:06,620
also man ist ja verpflichtet, ich weiß nicht, ob das nur für Banken gilt oder sonst wo,

380
00:43:06,620 --> 00:43:12,060
man muss ja den Verkehr, den E-Mailverkehr und sowas, den muss man ja rechtssicher irgendwie

381
00:43:12,060 --> 00:43:18,540
archivieren und dementsprechend haben wir ganz, ganz viele Mails von, frag mich nicht, den

382
00:43:18,540 --> 00:43:26,420
letzten 10 Jahren oder so. Also wir haben richtig viele Mails und irgendjemand kam auf die großartige

383
00:43:26,420 --> 00:43:32,660
Idee, ich nehme diese Mails, schmeiß die alle zusammen auf einen Server und installiere

384
00:43:32,660 --> 00:43:40,060
ein IMAP drauf. Also sprich, da liegen jetzt Mails von 10 Jahren in, ich glaube, Maledear

385
00:43:40,060 --> 00:43:47,140
Format rum und davor ist ein IMAP, also sprich, man kann ganz normal über IMAP darauf zugreifen.

386
00:43:47,140 --> 00:44:00,100
Das ist ja eigentlich ganz gut und offline ist das auch kein Problem, aber das sind bestimmt,

387
00:44:00,100 --> 00:44:08,460
ich weiß es gar nicht genau, der letzte Upload war 50TB groß, aber das reicht nicht. Ich

388
00:44:08,460 --> 00:44:14,940
sag mal, das sind 100TB oder so, Mails und Zeug und das sind aber auch nicht mal 10 Jahre,

389
00:44:14,940 --> 00:44:18,700
in Wirklichkeit sind es noch viel mehr. Also ich sag mal, 100TB, da reicht das hier auch

390
00:44:18,700 --> 00:44:32,860
gar nicht, Kegwaid, Moment. Ah ja, okay, wird immer besser. So irgendwie 100TB, an Mails

391
00:44:32,860 --> 00:44:39,260
und teilweise auch mit Mails anhängen und sowas. Also 100TB, so und wir wollten das

392
00:44:39,260 --> 00:44:42,140
eigentlich, also wir haben das nach Azure hochgeladen, das hat schonmal alles gecrashed

393
00:44:42,140 --> 00:44:49,260
auf dem Weg, ja unser Proxy ist abgeschmiert und alles bei dem Upload. Zumindest ist jetzt

394
00:44:49,260 --> 00:44:54,340
das Problem. Die ursprüngliche Idee, die wir hatten ist, hey, weißt du was, wir machen

395
00:44:54,340 --> 00:45:00,140
einfach eine VM in Azure, installieren da einen IMAP Server drauf und hängen halt über

396
00:45:00,140 --> 00:45:05,180
Azure Files den Storage dran. Das muss ja auch nicht so ultra schnell sein. So und jetzt

397
00:45:05,180 --> 00:45:15,540
kommt das Problem, jetzt kommt Big Brain, huge, huge Problem. Dofkort ist ein IMAP Server

398
00:45:15,540 --> 00:45:24,740
und wisst ihr was das Standard Trendzeichen ist, was Dofkort für, also das Standard Trendzeichen

399
00:45:24,740 --> 00:45:30,660
was Dofkort für Ordnerstrukturen in IMAP verwendet? Ich kann es euch sagen, es ist ein Doppelpunkt.

400
00:45:30,660 --> 00:45:41,980
Und wisst ihr was Microsoft nicht erlaubt als Sonderzeichen in der Teilnahme auf Azure

401
00:45:41,980 --> 00:46:11,460
Files? Ratet mal. Genau so sieht es aus. So, wir haben uns überlegt, wir können es

402
00:46:11,460 --> 00:46:15,460
umbenennen, wir können es umbenennen, wir können das umbenennen, ist gar kein Problem.

403
00:46:15,460 --> 00:46:24,580
Aber Dofkort, der IMAP Server, da musst du den Source Code patchen, dass er ein anderes

404
00:46:24,580 --> 00:46:33,500
Trendzeichen verwendet. Und das heißt, wir müssten bei jedem Dofkort Update eine Custom

405
00:46:33,500 --> 00:46:39,420
Dofkort Version bilden und mit Security Patches versorgen, dass sie ein extra Trendzeichen

406
00:46:39,420 --> 00:46:44,500
verwenden können. Das will im Prinzip auch keiner haben. So, jetzt sind wir, ich erzähle

407
00:46:44,500 --> 00:46:49,380
euch aber auch gleich meine Big Brain Idee, um das zu umgehen. Also, vielleicht hat aber

408
00:46:49,380 --> 00:46:53,500
auch einer von euch, vielleicht hat aber auch einer von euch Ideen, ich weiß es nicht.

409
00:46:53,500 --> 00:47:03,620
Wieso nicht Dofkort direkt anfragen? Ja, das ist eigentlich, fragt mich nicht. Zumindest

410
00:47:03,620 --> 00:47:09,780
ist jetzt das nächste. Auf die Idee, um diese gekommen sind, hey, wir nehmen einfach eine

411
00:47:09,780 --> 00:47:15,540
Azure-VM, hängen ja 100TB SSDs dran und lassen die laufen. Ich meine, es ist nicht so, dass

412
00:47:15,540 --> 00:47:26,300
wir pleite gehen davon. Das ist ein Multimillionen-Milliarden-Bank-Ding. Es geht davon, ich pleite. Aber ja, genau,

413
00:47:26,300 --> 00:47:31,820
ich programmiere mal nebenbei einen Patch für konfigurierbare Zeichen. Ach ja, übrigens,

414
00:47:31,820 --> 00:47:37,100
das Ganze muss natürlich bis Ende nächsten Monats umgezogen sein, ist ja klar. Ist jetzt

415
00:47:37,100 --> 00:47:46,420
nicht so, als hätten wir da Zeit für oder so. Das muss ja schnell gehen. So, und zumindest

416
00:47:46,420 --> 00:47:53,140
hatten sie jetzt die Idee, wir nehmen eine fette VM und hängen da einfach 100TB dran.

417
00:47:53,140 --> 00:48:02,820
Ihr seht, monatliche Kosten, 10.000€ ist ja richtiger Schnapper, würde ich sagen. Kann

418
00:48:02,820 --> 00:48:13,420
man mal machen. Kann man sich mal gönnen. Aber, jetzt, ich hatte Massive Big Brain Idee

419
00:48:13,420 --> 00:48:23,420
letzte Woche. Und zwar, was würden die Server denn kosten, wenn ihr sie selber kauft? Ich

420
00:48:23,420 --> 00:48:39,580
glaube, ein Server kostet uns um die 35.000-40.000€. Also, aber den haben wir ja schon. Naja, ich

421
00:48:39,580 --> 00:48:43,660
habe im Felix auch mal ein Video aus unserem AZ aufgenommen, wo wir uns so ein paar Kisten

422
00:48:43,660 --> 00:48:46,860
zeigen, aber ich habe bis jetzt irgendwie noch kein Video von gemacht. Zumindest, ich

423
00:48:46,860 --> 00:48:52,460
hatte jetzt eine Idee. Und zwar, wisst ihr, was man machen kann? Ich mach mal kurz meine

424
00:48:52,460 --> 00:48:58,820
Dreaming-VM an. Oder noch mal eine Idee, vielleicht kommt ja einer von euch auch auf die Idee.

425
00:48:58,820 --> 00:49:04,340
Also, wie gesagt, Doppelpunkt in Dateinamen sind das Problem. Vielleicht hat ja von euch

426
00:49:04,340 --> 00:49:09,540
auch einer eine gute Idee. Ich zeige euch gleich, was ich für eine Idee hatte. Vertrauliche

427
00:49:09,540 --> 00:49:19,620
Mails in der Cloud. Egal, wir vertrauen Microsoft. Vertraust du nicht Microsoft, also. Spars fallen

428
00:49:19,620 --> 00:49:26,680
da ein anderes Dateisystem drauf. Die Idee ist gar nicht schlecht. Das ist so die Vorstufe

429
00:49:26,680 --> 00:49:37,220
von der Idee, die ich hatte. Ja, ja, finde ich, ist eine gute Idee. Hätte auch den Vorteil,

430
00:49:37,220 --> 00:49:41,100
dass man ein Dateisystem nehmen könnte, was quasi langsam wächst und man nicht so viel

431
00:49:41,100 --> 00:49:47,220
auf einmal bezahlen müsste. Nee, was ich mir jetzt überlegt habe, ist folgendes. Ich nehme

432
00:49:47,220 --> 00:49:57,660
einfach eCryptFS dazwischen. Das ist ein File-System, so ein Overlay-File-System unter Linux. Das

433
00:49:57,660 --> 00:50:03,380
kann Dateinamen verschlüsseln. Wir wollen zwar nicht wirklich, dass Dateinamen verschlüsselt

434
00:50:03,380 --> 00:50:11,700
werden, aber wir wollen, dass Dateinamen rauskommen, die keine Doppelpunkte enthalten. Also mache

435
00:50:11,700 --> 00:50:20,260
ich da einfach einen eCryptFS dazwischen und dann hast du auf der einen Seite einen Ordner

436
00:50:20,260 --> 00:50:26,820
unter Linux, wo Doppelpunkte erlaubt sind und auf der anderen Seite die, die auf dem Azure

437
00:50:26,820 --> 00:50:32,740
Files Backend liegt, die hat zwar verschlüsselte Dateinamen, aber diese verschlüsselten Dateinamen

438
00:50:32,740 --> 00:50:41,220
enthalten keine Doppelpunkte. Einziges Problem ist, wir müssen 100TB nochmal umkopieren.

439
00:50:41,220 --> 00:50:47,540
Also wir müssen ja ein eCryptFS anlegen und dann muss ich quasi von die 100TB dort rein

440
00:50:47,540 --> 00:50:54,940
kopieren, dass die einmal encryptet werden. Leider, leider kann man in eCryptFS Encryption

441
00:50:54,940 --> 00:50:59,180
nicht ausschalten. Also was halt richtig geil wäre, vielleicht kennt da jemand von euch

442
00:50:59,180 --> 00:51:04,140
aus, was halt richtig geil wäre, wenn es die Möglichkeit hätte nur die Dateinamen zu Opfos

443
00:51:04,140 --> 00:51:11,620
scaten und den Inhalt gleichzulassen. Wie lange dauert das Rumkopieren bei euch? Ich

444
00:51:11,620 --> 00:51:18,860
glaube eine Woche oder so hat das kopiert. Azure to Azure Copy, naja Azure to Azure Copy

445
00:51:18,860 --> 00:51:22,780
ist ja glaube ich nur, wenn du von einem Azure Service auf einen anderen Azure Service kopieren

446
00:51:22,780 --> 00:51:29,900
willst. Also korrigiere mich, wenn ich falsch liege, aber wir wollen ja quasi von einem

447
00:51:29,900 --> 00:51:37,980
Azure Storage in eine VM dort in ein gemountetes Filesystem und auf der anderen Seite in Azure

448
00:51:37,980 --> 00:51:45,380
wieder raus. Doch doch, wir haben die Datei, doch in Azure Blob Storage kannst du Doppelpunkte

449
00:51:45,380 --> 00:51:53,860
hochladen, das ist kein Problem. Du kannst nur nicht in Azure Files einen Windows oder

450
00:51:53,860 --> 00:52:08,100
Linux Share anlegen und auf Dateien mit Doppelpunkt zugreifen. Das geht nicht. Die liegen schon

451
00:52:08,100 --> 00:52:16,900
in Azure. Aber ihr seht, es gibt teilweise Probleme, von denen man gar nicht denkt, dass

452
00:52:16,900 --> 00:52:26,620
die existieren. So, das probieren wir dann nächste Woche mal aus. Übrigens, es gibt

453
00:52:26,620 --> 00:52:30,940
noch was, um das noch teurer zu machen und hier habe ich den Calculator schon zugemacht,

454
00:52:30,940 --> 00:52:37,860
ist es noch da? Ist es noch da? Ja, exzellent. Es gibt nämlich noch die Möglichkeit, pass

455
00:52:37,860 --> 00:52:42,980
mal auf, es gibt, Moment, warum gibt es hier keine Ultra? Es gibt nämlich noch mehr, es

456
00:52:42,980 --> 00:52:55,180
gibt Azure, SSD, SSD Ultra gibt es da noch. Und die sind noch teurer. Wir würden es bestimmt

457
00:52:55,180 --> 00:53:12,860
schaffen, dass ich irgendwie auf 50k im Monat komme für einen Server. Disk Storage Ultra,

458
00:53:12,860 --> 00:53:30,380
ich glaube, da stehen die Preise gar nicht drauf. Und wer glaubt, dass es sonderlich

459
00:53:30,380 --> 00:53:37,180
schnell ist in Azure alles, der täuscht sich. Also wir haben, das hier stimmt übrigens

460
00:53:37,180 --> 00:53:45,220
hinten und vorne nicht, ne? Das stimmt hinten und vorne nicht. Also wir haben eine SSD dran

461
00:53:45,220 --> 00:53:57,020
gemacht zum testen mit 500G und dort haben wir maximal 140 MB durchbekommen. Also jede

462
00:53:57,020 --> 00:54:16,300
Samsung SSD, jede SATA Samsung SSD ist schneller als die Azure SSDs. Ja, guck, hier steht es

463
00:54:16,300 --> 00:54:25,580
25 MB, 150 MB die Sekunde maximal. Man muss schon die Fette nehmen, dass man überhaupt

464
00:54:25,580 --> 00:54:32,380
sequenziell noch viel durchkriegt. Ist nicht ohne, ist nicht ohne. Aber ich finde meine

465
00:54:32,380 --> 00:54:38,060
Idee mit dem E-Crypt FS ehrlich gesagt ganz nice. Deswegen probieren wir das nächste

466
00:54:38,060 --> 00:54:43,540
Woche mal aus. Bin ich mal gespannt. Ja, aber was ich eine gute Idee finde, der Chat hat

467
00:54:43,540 --> 00:54:48,300
gerade vorgeschlagen, man könnte ja mal bei Dovecord anfragen, ob die das einem rein

468
00:54:48,300 --> 00:54:52,500
programmieren, Custom Separator. Das ist keine schlechte Idee, ist aber bis zu Ende,

469
00:54:52,500 --> 00:54:56,220
dass der Zeitplan ist nicht umsetzbar. Aber die Idee finde ich tatsächlich nicht schlecht.

470
00:54:56,220 --> 00:55:02,700
Da soll unsere Sales, was auch immer, Stonks Abteilung das einfach mal probieren. Und man

471
00:55:02,700 --> 00:55:16,180
kann sich da bestimmt support auch... Warum ist da das Zertifikat abgelaufen? Naja. Oder

472
00:55:16,180 --> 00:55:20,260
alternativ, man könnte doch einfach mal gucken, ob man nicht den anderen iMap nimmt, wo das

473
00:55:20,260 --> 00:55:30,700
konfigurierbar ist. Aber wäre auch noch eine Möglichkeit. So, aber nachdem Windows jetzt

474
00:55:30,700 --> 00:55:35,700
installiert ist... Moment, wo ist es? Jetzt können wir uns erstmal den Neuigkeiten von

475
00:55:35,700 --> 00:55:45,020
.NET 6 widmen. Mal schnell mal die Vmware Tools hier draufkloppen. Vmware Tools, install,

476
00:55:45,020 --> 00:55:54,380
maybe later. Zum Edge kann ich jetzt an der Stelle bloß nochmal sagen. Nimmt Exchange.

477
00:55:54,380 --> 00:56:05,020
Wir haben in Microsoft Asher, wie heißen die? MVP? Oder so? Hatten wir mal in irgendeiner

478
00:56:05,020 --> 00:56:13,380
Schulung, den haben wir gefragt, was er machen würde. Und er hat gesagt, Scheiß auf Linux

479
00:56:13,380 --> 00:56:22,060
und iMap nehmen Exchange. Ist kein Witz. Natürlich, was erwartest du von einem Microsoft MVP?

480
00:56:22,060 --> 00:56:25,340
Wahrscheinlich ist die Idee gar nicht so schlecht, wenn man es in Asher hosten will. Ernsthaft,

481
00:56:25,340 --> 00:56:36,340
ja? Aber das macht man halt nicht bis Ende des Monats. Bisschen fail. So, fullscreen,

482
00:56:36,340 --> 00:56:39,980
jawoll, passt. Okay, dann schauen wir uns mal ganz... Wie gesagt, wir gucken uns nicht das

483
00:56:39,980 --> 00:56:43,780
komplette Video an. Ich skippe bloß durch, wo die interessanten Parts sind. Schauen wir

484
00:56:43,780 --> 00:56:50,420
uns mal die neuesten Features an von.NET 6 und C Sharp 10 ist es, glaube ich. Und was

485
00:56:50,420 --> 00:57:00,020
die sonst noch so haben. Ihr kennt mich, ich muss zwischendrin immer Stopp machen, um ein

486
00:57:00,020 --> 00:57:04,980
paar Sachen loszuwerden, was ich dazu zu sagen habe. Einmal mal gucken, was es Neues gibt.

487
00:57:04,980 --> 00:57:08,420
Ich vermute mal, wenn die Präsentation so läuft wie immer, ich habe ja in Anfang schon

488
00:57:08,420 --> 00:57:16,420
geguckt, ist erstmal Intro zu.NET vom.NET... Wie heißt der Typ? Projektmanager, Direktor,

489
00:57:16,420 --> 00:57:21,500
was auch immer. Keine Timestamps, ja, richtig fail. Und danach kommt C Sharp Language Features

490
00:57:21,500 --> 00:57:30,540
und länger gucken wir nicht. Und wir gucken auch eh nicht alles. Also, schieß los. Er

491
00:57:30,540 --> 00:57:34,220
ist Direktor of Program Management, aber ein gescheiter Mikrofon hat er nicht.

492
00:57:34,220 --> 00:57:55,660
Okay, so, das überspringe mal schon mal alles, weil ich glaube, das müssen wir uns jetzt

493
00:57:55,660 --> 00:58:02,020
nicht angucken, dass Microsoft.NET anpreist. Okay, das finde ich tatsächlich immer ganz

494
00:58:02,020 --> 00:58:06,660
interessant, wenn sie solche Statistiken zeigen. Natürlich pickt sich Microsoft an der Stelle,

495
00:58:06,660 --> 00:58:12,860
ich mach mal ein bisschen, ich lass mal ein bisschen Hintergrundmusik laufen. Natürlich

496
00:58:12,860 --> 00:58:19,140
pickt sich Microsoft da Statistiken raus, die sie geil finden, ist ja klar. Aber das

497
00:58:19,140 --> 00:58:23,820
wird nicht, ich glaube nicht, dass das gelogen ist. Wie die allerdings auf Most Loved Framework

498
00:58:23,820 --> 00:58:28,300
kommen, verstehe ich nicht. Das ist eine Stack-Aufwaffelumfrage, ich habe diese Stack-Aufwaffelumfrage aber

499
00:58:28,300 --> 00:58:36,980
nie gefunden, wo das Most Loved Framework ist. Ich kenne die Umfragen, was ist eure Lieblingsprogrammiersprache,

500
00:58:36,980 --> 00:58:40,900
mit welcher Programmiersprache würdet ihr mehr arbeiten. Zumindest ist mir das noch nie

501
00:58:40,900 --> 00:58:47,420
so wissentlich aufgefallen, dass die Most Loved Framework sind. Sie sind aber mittlerweile

502
00:58:47,420 --> 00:58:52,460
Top 5 Languages auf GitHub, das stimmt. Man darf nicht vergessen, wovon Microsoft kommt.

503
00:58:52,460 --> 00:58:59,300
Echt, da steht das drin, das haben wir uns sogar hier im Stream angeguckt, da ist mir

504
00:58:59,300 --> 00:59:03,380
das nicht drin aufgefallen. Aber ich glaube es ihm, wie gesagt, ich glaube ja nicht, dass

505
00:59:03,380 --> 00:59:15,020
es fake ist. Wir können ja mal gucken. GitHub, Most Loved, Reddit, Survey, Survey, ich sprühe

506
00:59:15,020 --> 00:59:32,620
das aus, Survey, Survey..NET Core. Wo sind die Most Loved Framework? Ach hier! Ach ASP.NET

507
00:59:32,620 --> 00:59:38,380
Core ist Most Loved Framework. Ach nee, hier auch, ok. Ich glaube soweit runter habe ich

508
00:59:38,380 --> 00:59:45,780
da nie gescrollt, deswegen ist mir das nicht aufgefallen. Aber das passt schon. Ich muss

509
00:59:45,780 --> 00:59:51,100
euch ehrlich sagen, ich bin ja auch.NET Fan. Also ich mache alles in C-Sharp, wenn es

510
00:59:51,100 --> 01:00:01,140
keinen guten Grund dagegen gibt. Ok, dann passt das. Sagt ob ich die Musik ausmachen

511
01:00:01,140 --> 01:00:06,300
soll, laufen lassen soll, ansonsten vielleicht ein bisschen langweilig. Das hier finde ich

512
01:00:06,300 --> 01:00:11,500
auch wirklich beachtlich, weil Microsoft, also man muss sich ja überlegen von wo Microsoft

513
01:00:11,500 --> 01:00:18,100
kommt..NET Core Release war ja glaube ich vor 5 Jahren oder so. Und davor war.NET eine

514
01:00:18,100 --> 01:00:23,620
mehr oder weniger Windows Only Sache, bis in Unity vielleicht, boah ich weiß ja gar

515
01:00:23,620 --> 01:00:30,340
nicht ob es so lang, doch gibt es schon länger. Und die haben auf einen Schlag Top 5 Language

516
01:00:30,340 --> 01:00:35,300
auf GitHub. Bissle mono, genau. Aber was auch dazu kommt und das spricht jetzt wieder gegen

517
01:00:35,300 --> 01:00:40,100
Microsoft, dass das halt doch nicht so geil ist die Aussage. Microsoft hat halt selbst

518
01:00:40,100 --> 01:00:44,900
sehr viel Open Source auf GitHub und die haben halt Millionen Code Zeilen Open Source. Das

519
01:00:44,900 --> 01:00:49,780
heißt, wenn jemand hingeht und Open Source einfach Millionen von Code Zeilen, bist du

520
01:00:49,780 --> 01:00:56,140
halt instant in den Top 10 Languages. Das geht halt gar nicht anders. Aber trotzdem,

521
01:00:56,140 --> 01:01:00,220
nicht dass du trotzdem sagst, ich bin.NET Fan, ich mache alles in.NET, sofern nicht

522
01:01:00,220 --> 01:01:04,260
was dagegen spricht oder in einer anderen Sprache sich das einfacher umsetzen lässt.

523
01:01:04,260 --> 01:01:08,980
Ich bin der Meinung, Javascript ist zwar die beste Einsteiger-Programmiersprache aktuell,

524
01:01:08,980 --> 01:01:12,980
weil du an Frontend Sachen eh nicht vorbei kommst, aber.NET fürs Backend ist eine super

525
01:01:12,980 --> 01:01:18,180
Geschichte und gibt ja noch mehr. Sowohl Go als auch Python sind auch super zum Einsteigen

526
01:01:18,180 --> 01:01:22,260
oder C für Microcontroller kommst ja auch nicht vorbei. Alternativ kann man natürlich

527
01:01:22,260 --> 01:01:33,260
auch ABAP machen, wenn man auf SAP steht. Oder Cobol, Cobol geht immer, ja. Ok. Ok,

528
01:01:33,260 --> 01:01:40,340
das müssen wir uns nicht angucken. Äh, sechs Monate Downloads, ja gut, das hat auch nichts

529
01:01:40,340 --> 01:01:50,260
zu sagen. Also, why.NET 5? Flexible Deployment Unparalleled Performance. Das ist im Prinzip

530
01:01:50,260 --> 01:01:56,820
jetzt aber auch nichts Neues. Reduced Infrastructure, Hosting Cost, Modern Info, ok, bla, bla, bla,

531
01:01:56,820 --> 01:01:59,780
bla, bla, bla. Das können wir alles überspringen. Sagt doch, so ein 10 Minuten, so ein Stundenvideo

532
01:01:59,780 --> 01:02:06,740
geht schnell rum. Upgrade Assistant juckt mich auch nicht. So, 1.NET 6, ja, genau, die größte

533
01:02:06,740 --> 01:02:12,940
Neuerung in.NET 6 ist, dass sie jetzt ein Cross-Platform GUI-Framework machen. Aber

534
01:02:12,940 --> 01:02:20,060
meine Prediction ist, Microsoft macht viele Sachen gut. UI-Frameworks macht Microsoft

535
01:02:20,060 --> 01:02:25,540
nicht gut. Oder selten, selten gut. Wann hat Microsoft mal UI-Frameworks gut gemacht?

536
01:02:25,540 --> 01:02:34,460
Gibt's da was? Windows Forms war für seine Zeit ganz ok für Einsteiger, ähm, weil's

537
01:02:34,460 --> 01:02:40,540
deutlich einfacher war als Windows API-Geschichten direkt zu machen. WPF ist halt irgendwie dead

538
01:02:40,540 --> 01:02:46,380
und kann moderne Sachen nicht. Was gab's denn an WPF auszusetzen? Also, das erste was es

539
01:02:46,380 --> 01:02:51,300
an WPF auszusetzen gab, bis heute ist das Font-Rendering, was sagt, dass du moderne

540
01:02:51,300 --> 01:02:56,940
Sachen wie, sagen wir mal, jetzt mal ein ganz plakatives Emoji-Support nicht hast, weil

541
01:02:56,940 --> 01:03:02,900
der Kram halt so alt ist, und dass du in WPF, ich sag nicht, ich sag nicht, dass es gar

542
01:03:02,900 --> 01:03:08,300
nicht geht, aber nur ganz schön schwer 3D-beschleunigte Sachen reinrendern kannst. Also, render dann

543
01:03:08,300 --> 01:03:14,100
mal DirectX oder Direct3D direkt in WPF. Das geht so nicht. Du musst dich erst um quasi

544
01:03:14,100 --> 01:03:20,020
so eine Interop-Schicht mit WPF kümmern und dann bist du auch gecapped bei 60 FPS. Also,

545
01:03:20,020 --> 01:03:25,660
WPF ist cool, wie es ist, aber es ist auch nicht so absolut top-notch, wie man das gerne

546
01:03:25,660 --> 01:03:31,660
hätte. Ist WPF selbst nicht DirectX-beschleunigt? Doch. Aber dadurch, dass WPF quasi da oben

547
01:03:31,660 --> 01:03:36,420
drauf aufsetzt und eine ganz genaue Vorstellung hat, wann, wie, wo was gerendert wird, und

548
01:03:36,420 --> 01:03:40,620
glaube ich auch capped bei 60 FPS, kannst du nicht einfach hergehen und sagen, hey,

549
01:03:40,620 --> 01:03:44,620
ich render jetzt was in das WPF-Fenster. Das geht nicht. Na, bei Windows-Form ging das

550
01:03:44,620 --> 01:03:53,820
ja schon. Bei WPF und bei OVP, bei OVP ist es ja genauso, da musst du Umwege machen

551
01:03:53,820 --> 01:03:59,260
über, ich rendere offscreen und kopiere das dann irgendwie rein und sünke das mit dem

552
01:03:59,260 --> 01:04:05,460
Vsync von WPF und OVP und das ist scheiße. Ja gut, Rotina, du hast gefragt, was die Nachteile

553
01:04:05,460 --> 01:04:10,460
von WPF sind. Ich meine, dass es dafür nicht verwendet wird, ist klar, weil es sich dafür

554
01:04:10,460 --> 01:04:14,700
auch nicht eignet, aber man sieht halt, WPF ist auch nicht dabei, das ist der Schluss,

555
01:04:14,700 --> 01:04:21,140
OVP ist auch ziemlich verkackt, man kann bis heute beispielsweise in OVP keine Screen-Captures

556
01:04:21,140 --> 01:04:32,220
richtig machen und ihre große Chance, das mit WinUI 3 so zu bauen, dass man OVP für

557
01:04:32,220 --> 01:04:37,100
alles verwenden kann, also nein, das stimmt nicht, dass man die UI-Technologie von OVP

558
01:04:37,100 --> 01:04:41,500
für alles verwenden kann, haben sie auch nicht geschafft, weil sie gesagt haben, wen interessieren

559
01:04:41,500 --> 01:04:52,220
native Windows Anwendungen. Also sprich, auch mit WinUI 3 brauchst du immer noch ein Codesigning-Zertifikat

560
01:04:52,220 --> 01:05:01,700
für 150 Euro im Jahr, dass du überhaupt dich erreisten darfst, Windows Anwendungen

561
01:05:01,700 --> 01:05:06,060
zu programmieren. Deswegen krebsen so viele Leute heutzutage noch mit Windows Forms rum

562
01:05:06,060 --> 01:05:10,980
oder nehmen gleich so Sachen wie Qt oder direkt Electron. Das meine ich, warum es so viele

563
01:05:10,980 --> 01:05:15,300
Electron-Anwendungen gibt unter Windows, weil Microsoft es verschissen hat mit UI unter

564
01:05:15,300 --> 01:05:19,940
Windows. Von Linux gar nicht zu reden, da ist das nicht wirklich besser, die einzigen,

565
01:05:19,940 --> 01:05:24,540
die das ein bisschen besser machen, ist tatsächlich Apple in dem Fall, meiner Ansicht nach. Flutter

566
01:05:24,540 --> 01:05:27,460
wird auch nochmal ein großes Ding, habe ich euch auch schon ein paarmal erzählt, bin ich

567
01:05:27,460 --> 01:05:34,820
der Meinung, UI-Technisch ist Flutter richtig nice, was ich bisher gesehen habe und Flutter

568
01:05:34,820 --> 01:05:42,300
hat auch den richtigen Ansatz, sie malen die Steuerelemente in ihren UIs selbst mit der

569
01:05:42,300 --> 01:05:48,660
jeweils besten Technologie auf der Plattform. Das ist das einzige Wahre, meiner Ansicht

570
01:05:48,660 --> 01:05:56,500
nach und das machen die jetzt halt nicht, um jetzt mal wieder den Bogen zu.net zu bekommen.

571
01:05:56,500 --> 01:06:01,380
Die größte Neuerung ist, dass sie einen Cross-Plattform-UI anbieten wollen. Der ist aber schon der

572
01:06:01,380 --> 01:06:08,020
erste Punkt. Cross-Plattform-UI heißt bei Microsoft nicht wirklich Cross-Plattform-UI.

573
01:06:08,020 --> 01:06:16,420
Wenn man sich das hier zum Beispiel mal anguckt. Linux wollen sie nicht supporten. Natürlich,

574
01:06:16,420 --> 01:06:23,540
ich kenne die Argumente, dass die Leute sagen, hey, ist doch egal, wer braucht das schon

575
01:06:23,540 --> 01:06:27,300
und das ist wahrscheinlich auch das, was sich Microsoft gedacht hat und es ist sicherlich

576
01:06:27,300 --> 01:06:32,100
auch nicht einfach, gerade UI-Sachen Linux zu supporten, weil was die Jungs da unter

577
01:06:32,100 --> 01:06:39,380
Linux fabrizieren, geht ja auch, wie sagt man schon, auf keine Kuhhaut mehr. X ist direkt

578
01:06:39,380 --> 01:06:49,780
aus der Hölle, Wayland aus etwas kühleren Regionen der Hölle und dann hast du das Problem,

579
01:06:49,780 --> 01:06:54,700
dass Grafik-Tankentreiber teilweise übelst vernachlässigt werden unter Linux, dass GTK

580
01:06:54,700 --> 01:06:59,020
laufend kaputt geht, weil Gnome sich gedacht hat, haben wir keinen Bock mehr, haben wir

581
01:06:59,020 --> 01:07:04,460
jetzt kaputt. Also, UI unter Linux zu supporten ist sicherlich nicht ohne, das will man eigentlich

582
01:07:04,460 --> 01:07:11,260
auch nicht wirklich. Aber ich finde, man kann nicht sagen, man hat einen Cross-Plattform-UI-Framework,

583
01:07:11,260 --> 01:07:19,940
wenn Linux nicht unterstützt wird. Es gab ja hier auch richtig viele Diskussionen

584
01:07:19,940 --> 01:07:23,900
drüber und Microsoft möchte Linux anscheinend nicht supporten. Was ich persönlich ein bisschen

585
01:07:23,900 --> 01:07:31,580
doof finde, weil für mich ist wichtig, wenn ich mal wirklich Cross-Plattform-GUI-Sachen

586
01:07:31,580 --> 01:07:37,980
machen würde, dann wäre das halt irgendwelche Technik-Grams oder irgendwelche Admin-Tools

587
01:07:37,980 --> 01:07:43,820
oder was auch immer und da wäre für mich Linux-Support wichtig, neben Windows-Support.

588
01:07:43,820 --> 01:07:48,340
Auf den Mac-Support kann ich scheißen, den brauche ich in dem Fall nicht. Das wäre natürlich

589
01:07:48,340 --> 01:07:57,700
nicht schlecht. Das heißt, was bleibt, irgendwann mal Flutter und Dart, Qt oder halt allseits

590
01:07:57,700 --> 01:08:05,620
beliebt Electron für 500 MB pro Fenster. Aber so ist es halt. Gibt richtig lange Diskussionen

591
01:08:05,620 --> 01:08:10,700
und die Leute flippen wieder richtig aus hier drinnen. Leute, ihr müsst euch mal manche

592
01:08:10,700 --> 01:08:15,420
Diskussionen auf GitHub durchlesen. Das sind teilweise übelste Spasten am Start. Ich weiß

593
01:08:15,420 --> 01:08:22,180
gar nicht, was mit den Leuten los ist. Ihr müsst hier mal den Kram durchlesen, wie die

594
01:08:22,180 --> 01:08:34,780
teilweise hier abgehen. Es ist der Witz. Der Typ wird dann auch irgendwann gebannt. Ja,

595
01:08:34,780 --> 01:08:41,140
den Typ haben sie gebannt zwischendurch, weil er so am Eskalieren ist. Also eigentlich

596
01:08:41,140 --> 01:08:46,020
eine richtig coole Geschichte von Microsoft in den UI-Framework jetzt einbauen zu wollen

597
01:08:46,020 --> 01:08:50,860
in.NET. Aber ich fürchte, dass das wieder komplett nach hinten losgehen wird. Desktop-Apps

598
01:08:50,860 --> 01:08:55,740
sind dead. Desktop-Apps sind meiner Meinung nach hauptsächlich dead, weil es Microsoft

599
01:08:55,740 --> 01:09:03,420
10 Jahre lang verkackt hat, UI-Entwicklung auf Windows angenehm und zeitgemäß zu machen.

600
01:09:03,420 --> 01:09:11,140
Ansonsten ist Windows halt die Plattform, die du unterstützen musst. Deswegen krebsen

601
01:09:11,140 --> 01:09:14,100
da ja auch so viel mit eigenen Lösungen rum, weil es Microsoft letzten 10 Jahren nicht

602
01:09:14,100 --> 01:09:18,980
hinbekommen hat. WPF war das letzte Benutzbare, was Microsoft produziert hat und das ist auch

603
01:09:18,980 --> 01:09:25,780
schon uralt. UWP lassen wir mal außen vor. So, also das finde ich ist eine geile Idee,

604
01:09:25,780 --> 01:09:32,060
aber solange Linux-Support fehlt, ist das für mich keine Cross-Plattform-Native-UI.

605
01:09:32,060 --> 01:09:38,620
Cross-Plattform-Web-UI, da meinen die glaube ich Blazor damit. Da bin ich auch skeptisch,

606
01:09:38,620 --> 01:09:48,140
ob Blazor sich jetzt so wahnsinnig durchsetzen wird. Ich finde es von der Idee her cool,

607
01:09:48,140 --> 01:10:02,940
aber ansonsten, naja. Ich muss es ein bisschen leiser machen. Es geht auf einmal viel lauter.

608
01:10:02,940 --> 01:10:16,100
Nein, nein, nein, das erzählt ihr schon seit.NET 5 und es funktioniert nicht. Das ist

609
01:10:16,100 --> 01:10:22,660
nicht gut. Das wird wieder nicht funktionieren, ich sage es euch. Die haben es mit.NET 5

610
01:10:22,660 --> 01:10:28,180
und WinUI probiert und du kannst immer noch keine neuen Windows-Anwendungen machen, die

611
01:10:28,180 --> 01:10:32,140
kein Codesigning-Zertifikat verwenden, es sei denn du greifst auf WPF oder Windows Forms

612
01:10:32,140 --> 01:10:37,500
zurück, was halt bescheuert ist. Wer möchte sich ein Codesigning-Zertifikat kaufen, wenn

613
01:10:37,500 --> 01:10:42,940
er privat mal irgendwelche Dinge programmiert? Und viele nützliche Tools, die es so gibt,

614
01:10:42,940 --> 01:10:46,940
sind halt nun mal nicht von Leuten, die bei irgendeiner Million-Company arbeiten, sondern

615
01:10:46,940 --> 01:10:53,700
so welche wie ich oder der Chat. Und wir kaufen uns kein 150 Euro Codesigning-Zertifikat

616
01:10:53,700 --> 01:10:57,260
im Jahr und ich sehe es auch überhaupt nicht ein. Die sollen gefällig dafür sorgen, dass

617
01:10:57,260 --> 01:11:01,380
ich normale Windows-Anwendungen entwickeln kann. Aber das kriegen sie nicht richtig gebacken.

618
01:11:01,380 --> 01:11:09,020
Auch das Integrieren. Jaja, du, Qualen der Chain-Lore-Assistin, das komme ich an hier

619
01:11:09,020 --> 01:11:16,460
gerade. Was wollte ich jetzt sagen? Auch das Integrieren in Windows Forms und WPF klappt

620
01:11:16,460 --> 01:11:20,660
ja auch nicht richtig mit dem UWP-Zeug. Es gibt da zwar Möglichkeiten, aber es ist alles

621
01:11:20,660 --> 01:11:23,940
nicht schön. Also das glaube ich erst, wenn ich sehe, dass da wirklich alles integriert

622
01:11:23,940 --> 01:11:38,380
ist. Ihr habt's gehört, Linux fehlt. Und so Single ist die Codebase gar nicht. Ich hab

623
01:11:38,380 --> 01:11:43,140
eine Demo-Anwendung gesehen. Das erste, was ich gesehen habe in der Demo-Anwendung ist

624
01:11:43,140 --> 01:12:08,980
if-platform-gleich-daven. Das erste, was ich gesehen habe. If-define-platform-gleich-daven.

625
01:12:08,980 --> 01:12:20,460
Das machen die auch immer gut. Das muss man ihnen echt mal zugutehalten. Also wie gesagt,

626
01:12:20,460 --> 01:12:27,020
ich bin ja.NET-Fan, aber ich glaube nicht, jeden Scheiß den Microsoft erzählt. Das machen

627
01:12:27,020 --> 01:12:33,700
sie aber wirklich gut, wenn man sich die Performance-Entwicklung anguckt, sowohl von der Runtime an sich, als

628
01:12:33,700 --> 01:12:39,820
auch gerade von ASP.NET Core für Web-Anwendung. Das hat sich die letzten 3-4 Versionen wirklich

629
01:12:39,820 --> 01:12:46,540
brutal geändert. Also die sind in Standard-Workloads. Also wenn du einfach nur guckst, dass du viele

630
01:12:46,540 --> 01:12:54,340
kleine Request-Diesekunden und sowas durchkriegst, das sind die mittlerweile meilenweit vor Node.js,

631
01:12:54,340 --> 01:13:03,020
sogar vor Java. Und die sind da, ich glaube teilweise auch vor Go. Die sind da wirklich

632
01:13:03,020 --> 01:13:06,740
ganz oben mit dabei. Es ist wirklich hart. Also Performance-Optimierung können sie gut.

633
01:13:06,740 --> 01:13:23,580
Okay. Ist laut genug, oder soll ich den wieder ein Stückchen lauter machen? Ja, es reicht

634
01:13:23,580 --> 01:13:32,940
glaube ich. Ja, das will ich mir jetzt angucken. Ich weiß, dass sie eine Demo zeigen,

635
01:13:32,940 --> 01:13:46,700
von C-Sharp 10 Features. Da bin ich echt mal gespannt drauf. Außer Linux? Außer Linux?

636
01:13:46,700 --> 01:13:57,180
Habe ich mal eine Zweifel, was das so bringt? Minimal Web APIs for Cloud-Native-Apps. Okay,

637
01:13:57,180 --> 01:14:01,140
da kann ich mir jetzt nicht allzu viel drunter vorstellen, wenn ich ehrlich bin. Was soll

638
01:14:01,140 --> 01:14:22,660
das heißen? Ah, das ist gut. Müssen sie ja auch. Windows Forms und WPF auf ARM64,

639
01:14:22,660 --> 01:14:28,100
aber nur auf ARM64, wo Windows läuft, ne? Ich kann mir nicht vorstellen, dass Windows

640
01:14:28,100 --> 01:14:34,060
Forms auf einmal auf der Linux funktioniert oder auf dem Raspberry Pi. Dass die die neuen

641
01:14:34,060 --> 01:14:39,900
Apple, dass sie die neue Apple-CPU unterstützen, ist wirklich pork. Aber die sind ja auch,

642
01:14:39,900 --> 01:14:46,100
was Cross-Platform angeht, sind die wirklich gut dabei. Halt, der Linux-Support lässt

643
01:14:46,100 --> 01:15:05,180
was Grafik, was GUI angeht, zu wünschen übrig, aber naja. Okay. Man sieht hier übrigens

644
01:15:05,180 --> 01:15:09,780
das Entity-Framework, haben sie noch das Core hintendran, obwohl sie.NET Core in.NET

645
01:15:09,780 --> 01:15:18,620
6 umbenannt haben. Programmierst du eigentlich immer in deiner Linux-VM zu 90%, ja? Pff,

646
01:15:18,620 --> 01:15:38,140
was auch immer. Okay, das heißt Datenbank-Stellz geht schneller? Ah, das ist gut. Okay,

647
01:15:38,140 --> 01:15:45,740
hast du mal Linux mit Windows 10 KVM probiert? Mit was? Was? Linux? Hast du mal Linux mit

648
01:15:45,740 --> 01:15:51,660
Windows 10 KVM probiert? Ah, ob ich mal Windows 10 in KVM unter Linux probiert hab. Äh ja,

649
01:15:51,660 --> 01:16:03,140
ja, hab ich probiert. Ist nicht so geil. Also man virtualisiert deutlich besser Linux unter

650
01:16:03,140 --> 01:16:27,100
Windows als Windows unter Linux. Okay. Was ist das?

651
01:16:27,100 --> 01:16:36,540
Was zum?

652
01:16:36,540 --> 01:17:05,340
Hä? Also, INIT, das gab's ja schon mit C Sharp 9. INIT ist quasi das, was man früher

653
01:17:05,340 --> 01:17:10,940
in einem Constructor gemacht hat zum Zuweisen von einem Feld, kann man jetzt komplett ohne

654
01:17:10,940 --> 01:17:15,500
Constructor machen. Also sprich, ich kann, wenn ich jetzt hier Person anlege, kann ich

655
01:17:15,500 --> 01:17:21,300
einmalig das hier setzen, Name setzen und danach nie wieder. Dafür wird INIT verwendet.

656
01:17:21,300 --> 01:17:26,940
Es gibt GET, SET, INIT. GET ist Wert abrufen, SET ist Wert setzen. Und wenn ich GET und INIT

657
01:17:26,940 --> 01:17:31,040
nehme heißt das, ich kann den Wert immer abrufen, aber ich kann den Wert nur einmalig

658
01:17:31,040 --> 01:17:36,740
setzen. Und das hier ist so eine Art Lambda für, ah, FIELD ist ein neues Schlüsselwort

659
01:17:36,740 --> 01:17:43,620
dann. Das heißt, initial weise ich einmal Value drin. Wo kommt denn Value her? Ach,

660
01:17:43,620 --> 01:17:49,060
der Value, der gesetzt wird. Okay. Das heißt, ich kann einmalig den Value, den ich setze

661
01:17:49,060 --> 01:17:53,820
modifizieren und dann nie wieder. Okay, das ist eigentlich ganz nice. Geht das Team heute

662
01:17:53,820 --> 01:18:05,500
bis 22 Uhr? Weiß ich doch jetzt noch nicht. Warum? Warum? Oh, das ist cool. Das ist cool.

663
01:18:05,500 --> 01:18:09,540
Fällt mir jetzt erst auf. Namespace Model. Es erinnert mich ein bisschen an Pains Champion

664
01:18:09,540 --> 01:18:15,180
C++ Dinger, aber normalerweise muss man Namespace hier immer noch drumherum schreiben. Normalerweise

665
01:18:15,180 --> 01:18:19,820
hast du gesagt Namespace Model und dann musstest du Klammer aufmachen, Klammer zu, sodass du

666
01:18:19,820 --> 01:18:23,780
im Endeffekt mit Namespace deinen kompletten Code alles einmal eingerückt hast, komplett

667
01:18:23,780 --> 01:18:33,900
sinnloserweise. Das ist cool. Okay, wir gucken uns gleich den C-Sharp-Teil an. Das ist nice,

668
01:18:33,900 --> 01:18:40,620
das ist cool. Also, das muss man dem wirklich, also, das muss man dem, dem, äh, wie heißt

669
01:18:40,620 --> 01:18:49,980
er, Mets, Mets Torxon oder so, der C-Sharp Lead Designer, das muss man den C-Sharp-Leuten

670
01:18:49,980 --> 01:18:56,300
echt lassen. Die sind, die schaffen das immer wieder, obwohl die Sprache jetzt im Kern her

671
01:18:56,300 --> 01:19:02,780
auch jetzt nicht die jüngste ist, immer wieder wirklich sinnvolle, brauchbare und gut integrierte

672
01:19:02,780 --> 01:19:10,060
Features abzuliefern. Also, genau das Gegenteil von dem, was C++ macht. Also, C++ ist exakt

673
01:19:10,060 --> 01:19:16,060
das Negativbeispiel davon. C++ führt viel Scheiße ein, die unglaublich wir integriert

674
01:19:16,060 --> 01:19:25,500
ist und jeder macht was anderes und die C-Sharp-Team macht sinnvolle Sachen. Was macht Global Using?

675
01:19:25,500 --> 01:19:34,680
Ich, ich rate mal, ich rate mal, das ist neu. Ich vermute mal, dass du Using nur noch in

676
01:19:34,680 --> 01:19:46,220
einer Datei schreiben musst und nicht mehr in jeder. Chandler sagt, du Fanboy, wie hieß

677
01:19:46,220 --> 01:19:51,340
das in diesem einen, in diesem einen Video, zieh erstmal deinen Rucksack ab. Gab's da

678
01:19:51,340 --> 01:19:55,220
nicht mal, es gab doch mal irgend so ein Video, wo irgendwie einer auch was erzählt hat von

679
01:19:55,220 --> 01:19:59,180
Fanboy und dann kam dann einer an, zieh erstmal den Rucksack ab. Was war das denn? Das ist

680
01:19:59,180 --> 01:20:02,500
auch schon ein paar Jahre her, ich krieg's immer richtig zusammen. Zieh den Rucksack

681
01:20:02,500 --> 01:20:08,300
aus oder irgendwie sowas. Ach, keine Ahnung. Irgendwelche uralte Memes, an die ich eh keiner

682
01:20:08,300 --> 01:20:13,780
mehr erinnern kann. War das nicht ein Song? Kann auch sein. Zieh mal den Rucksack, ich

683
01:20:13,780 --> 01:20:25,220
weiß nicht mal. Zieh den Rucksack aus, wenn du mit mir redest, genau. Was mit Farid Bang?

684
01:20:25,220 --> 01:20:31,860
Ja, das kann sein. Ich hör kein Deutschrap, deswegen hab ich mir das wahrscheinlich nicht

685
01:20:31,860 --> 01:21:00,100
gemerkt. Was denn das? Public Records Struct? Das heißt, es gibt jetzt nicht nur Classes,

686
01:21:00,100 --> 01:21:08,100
sondern Structs, aber Structs sind ja eigentlich schon... Wir warten mal den C-Sharp-Teil ab.

687
01:21:08,100 --> 01:21:22,740
Mads, den mein ich. Mads Torgerson, den mein ich, den Typ. Das ist der C-Sharp-Lead-Chef-Architekt.

688
01:21:22,740 --> 01:21:27,900
Okay, jetzt kriegen wir die C-Sharp-Demo. Im Prinzip das, worauf ich das gewartet habe.

689
01:21:27,900 --> 01:21:36,820
Das ist Dustin Mads, um euch die neuen C-Sharp-Features in Aktion zu zeigen. Hey, wieder. Hallo.

690
01:21:36,820 --> 01:21:41,820
Wieder einmal, ich bin hier mit dir, Dustin. Ja, ich bin hier mit dir, Mads. Und ein anderes

691
01:21:41,820 --> 01:21:48,540
Set von C-Sharp-Features. Heute schauen wir uns an den C-Sharp 10 an. Wild-Theme, Leute,

692
01:21:48,540 --> 01:21:52,260
das ist aber nicht der Hacker-Man-Mode, der hier aktiviert ist. Und wir beginnen von

693
01:21:52,260 --> 01:21:59,060
wo wir losgegangen sind. Warte, die Katze verdeckt es. Soll ich den Chat raus machen? Na, man sieht doch überhaupt nicht. Wollt ihr die Typen sehen?

694
01:22:09,060 --> 01:22:11,060
Okay, gucken wir so.

695
01:22:16,060 --> 01:22:20,060
Der ist jetzt viel leiser. Nee, geht eigentlich.

696
01:22:20,060 --> 01:22:31,700
Also von der Haareanzahl stimmt es tatsächlich. Also, naja, ein bisschen mehr Haare habe ich

697
01:22:31,700 --> 01:22:41,180
schon noch, aber es geht in die Richtung. Man muss sagen, ich sehe wirklich ziemlich

698
01:22:41,180 --> 01:22:50,180
ähnlich aus wie Dan's Gaming. Also gerade auch seitdem er weniger Haare hat.

699
01:23:11,180 --> 01:23:16,500
Das haben sie ja mit C-Sharp 9 schon eingeführt. Ich muss euch ehrlich sagen, ich habe das

700
01:23:16,500 --> 01:23:22,540
noch nie verwendet. Ich finde es cool, ich habe es noch nie verwendet. Jemand von euch

701
01:23:22,540 --> 01:23:30,700
schon mal dieses Feature benutzt? Ich finde es cool, aber ich hatte noch keinen Anwendungszweck

702
01:23:30,700 --> 01:23:45,780
für... Guck, hier sieht man es. Hier sieht man das, was ich vorhin gemeint habe. Also,

703
01:23:45,780 --> 01:23:50,820
die haben hier eine Klasse, das ist ja eine Klasse, Rekord ist ja eine Klasse. Die haben

704
01:23:50,820 --> 01:23:58,820
hier eine Klasse, die zwei Properties hat, hier FirstName, LastName und man kann das

705
01:23:58,820 --> 01:24:03,060
immer auslesen, aber man kann es nur einmalig setzen, also sprich, nachdem er hier Scott

706
01:24:03,060 --> 01:24:12,060
und Hunter gesetzt hat, kann er es danach nicht wieder ändern. Wenn er es ändern will,

707
01:24:12,060 --> 01:24:18,060
dann muss er eine neue Instanz erzeugen mit dieser Syntax. Also, kann man jetzt quasi

708
01:24:18,060 --> 01:24:24,300
diese Person nehmen und einmalig sagen, okay, LastName ändern, aber dann kommt eine neue

709
01:24:24,300 --> 01:24:42,220
Person nochmal raus. Also, das hier ist nicht gleich, gleich das hier. Init ist wie Private

710
01:24:42,220 --> 01:24:55,940
Static Zeugs, nee. Private Static Zeugs ist ja quasi komplett über alle Instanzen dann

711
01:24:55,940 --> 01:25:09,420
Static und das ist es ja hier nicht. Das ist im Prinzip einfach nur Read-Only. Ach ja und

712
01:25:09,420 --> 01:25:14,220
der Unterschied hier, warum man Rekord nimmt anstatt Klasse, wie gesagt, ich kenne das

713
01:25:14,220 --> 01:25:18,260
Feature, ich habe es selbst noch nicht verwendet, ich hatte da noch keinen Anwendungszweck für,

714
01:25:18,260 --> 01:25:27,060
der Vorteil anstatt Rekord zu nehmen anstatt Klasse ist, dass du das quasi benutzen kannst,

715
01:25:27,060 --> 01:25:32,420
wie Werte, obwohl es eine Klasse ist. Also sprich, wenn du jetzt sagst, Person gleich

716
01:25:32,420 --> 01:25:37,300
gleich Other Person, dann guckt er nicht, es ist die gleiche Instanz im Speicher, also

717
01:25:37,300 --> 01:25:42,220
zeigt es auf den gleichen Speicheradresse, so wie es bei einer Klasse ist, sondern er

718
01:25:42,220 --> 01:25:47,780
guckt sind die Werte gleich, also Person gleich gleich Other Person wäre nur true, wenn halt

719
01:25:47,780 --> 01:26:02,180
auch die Felder stimmen. Genau. Bei Rekord ist es auch so, dass die Qualität des Rekords

720
01:26:02,180 --> 01:26:09,380
auch wertgemäß ist. Genau. Wann fangen wir an dort net zu testen? Wir haben ja indirekt

721
01:26:09,380 --> 01:26:28,100
schon, wir gucken uns an, was Neues gibt. Ja, das ist nichts Neues. Das geht ja alles

722
01:26:28,100 --> 01:26:35,740
jetzt schon. Ja, und diese funktionieren, weil Person und Original Person die gleiche

723
01:26:35,740 --> 01:26:41,420
Instanz haben. Sie haben beide diese zwei Werte, weil wir Original Person und Other Person

724
01:26:41,420 --> 01:26:45,700
gebrauchen und die Name zurück verändern. Also diese werden tatsächlich True, um sie auf

725
01:26:45,700 --> 01:26:51,380
der Klasse zu verbreiten. Differente Objekte, gleiche Instanz. Ja. Du hast die Idee, aber

726
01:26:51,380 --> 01:26:56,780
wir wollen noch mehr mit Rekord machen, also der erste und vielleicht wichtigste Feature,

727
01:26:56,780 --> 01:27:02,380
das wir in C-Sharp 10 hinbekommen haben, ist, dass du jetzt Rekord Class Person bekommst.

728
01:27:02,380 --> 01:27:08,500
Und was das bedeutet, ist... Hä? Das ist doch genau das gleiche, wie vorher. Rekords waren

729
01:27:08,500 --> 01:27:15,260
doch schon immer Classes. Genau das gleiche wie vorher. Ah, okay, okay. Ich wollte gerade

730
01:27:15,260 --> 01:27:20,260
sagen, das ist doch genau das gleiche, er sagt es aber auch. Das bietet nichts mehr. Es

731
01:27:20,260 --> 01:27:26,700
bietet nichts mehr, als was du in C-Sharp expressionen kannst. Also der Punkt, den du erlauben

732
01:27:26,700 --> 01:27:31,620
kannst, ist wirklich, dass du natürlich etwas anderes anstatt Klasse verwendest. Du kannst

733
01:27:31,620 --> 01:27:35,580
jetzt sagen, dass ein Rekord Struckt ist. Bei Default wird es eine Klasse, aber wenn du

734
01:27:35,580 --> 01:27:41,060
Struckt verwendest, bekommst du ein Rekord Struckt. Warum? Ich meine, ich kann auch so ein Struckt

735
01:27:41,060 --> 01:27:47,460
verwenden, das ist doch schon mehr oder weniger genau das Kla... Hä? Warum, warum? Und das

736
01:27:47,460 --> 01:27:52,180
bedeutet, dass all das genau das gleiche wie vorher funktioniert, aber jetzt ist es nicht

737
01:27:52,180 --> 01:28:02,540
Heap Allocated. Hä? Und eine Sache, die sehr interessant ist, ist, dass viele der Dinge,

738
01:28:02,540 --> 01:28:08,260
die du mit einem Rekord machst, sind wertgemäß, aber so auch Struckte generell. Ja, genau.

739
01:28:08,260 --> 01:28:13,780
Und also... Warum brauche ich das? Struckte haben keinen Equality Operator. Echt nicht?

740
01:28:13,780 --> 01:28:23,820
Aber alle Struckte sind wertgemäß. Moment. Haben sie nicht? Kann man nicht Struck, Blag,

741
01:28:23,820 --> 01:28:29,340
Gleich, Gleich, Anderes Struckt schreiben? Geht das wirklich nicht? Ihh, was ist hier

742
01:28:29,340 --> 01:28:37,460
los? Warum hängt das? Ah, jetzt. Kann man das? Kann man das nicht? Wirklich nicht? Moment.

743
01:28:37,460 --> 01:28:41,740
Das muss ich jetzt ausprobieren. Das ist mir noch nie aufgefallen. Das muss ich ausprobieren.

744
01:28:41,740 --> 01:28:55,060
Geht das echt nicht? Das... Moment, Moment. Das muss ich jetzt testen. Ehh, Console App,

745
01:28:55,060 --> 01:29:01,060
ja perfekt. Genau die brauchen wir. Diese Console App und nicht irgendeine andere. Genau

746
01:29:01,060 --> 01:29:07,940
diese. Was auch immer das für eine ist. Ihh, was ist das für eine Schriftart? Monka! What

747
01:29:07,940 --> 01:29:26,820
was habe ich denn hier? Was hat man da gemacht? Victor Mono. Okay, ist mal weg. Ahh, yes.

748
01:29:26,820 --> 01:29:34,180
Gleich, gleich viel besser so. Was hat man hier? Alles Crap. Alles, alles weg. Brauchen

749
01:29:34,180 --> 01:29:42,740
wir mal alles weg. Alles weg. Alles weg. So, also was geht jetzt angeblich nicht? Guck

750
01:29:42,740 --> 01:30:10,540
mal mal, Strucked. Stopp, Stopp, Stopp, Stop... Was, hallo, please? Was macht der da? Ich

751
01:30:10,540 --> 01:30:12,540
Was macht der da?

752
01:30:15,940 --> 01:30:18,140
Ist der irgendwie pepo slow kann das sein?

753
01:30:30,900 --> 01:30:32,900
Was macht der denn da?

754
01:30:32,900 --> 01:30:38,900
Okay, ich weiß ich glaube ich habe irgendwas kaputt gemacht

755
01:30:42,100 --> 01:30:44,100
Kein Quaid

756
01:30:45,140 --> 01:30:47,140
Da

757
01:30:48,180 --> 01:30:50,180
Was

758
01:30:50,180 --> 01:31:05,180
Ich habe keine Ahnung was der für Schmerzen hat. Reboot

759
01:31:05,180 --> 01:31:15,180
Ich weiß nicht was der für Schmerzen hatte, aber welche die mir nicht gefallen

760
01:31:22,940 --> 01:31:24,940
Okay

761
01:31:24,940 --> 01:31:35,220
Da ist dort nicht installiert. Ah, na gut länger brauchen wir es eh nicht

762
01:31:35,220 --> 01:31:51,060
Sag mal habe ich irgendwas kaputt gemacht mit dem update

763
01:31:51,060 --> 01:31:59,860
Habe ich mit dem update irgendwas kaputt gemacht?

764
01:31:59,860 --> 01:32:07,100
Ah, es ist ein aktuelles Turnett alles gut

765
01:32:09,100 --> 01:32:15,740
Das habe ich noch nie gehabt. Wo ist das Problem jetzt?

766
01:32:15,740 --> 01:32:26,060
Wo ist das Problem? Was ist das hier? Ist das jetzt Crashed oder?

767
01:32:26,060 --> 01:32:33,420
Ich kann ja auch den bestehenden nicht öffnen irgendwas ist da kaputt

768
01:32:33,420 --> 01:32:43,900
Okay, kill all, kill all rider gibt es ja nicht. Oh da muss ich jetzt dieses

769
01:32:43,900 --> 01:32:52,540
Chatbrains Zeugs ist, wobei wir können es anders machen. X kill, bam, schreckt

770
01:32:54,700 --> 01:33:04,740
Okay, was hat der für Schmerzen gerade? Mal configure, settings

771
01:33:04,740 --> 01:33:12,980
Ihh, Snap, das liegt bestimmt am f***ing Snap, alter

772
01:33:19,980 --> 01:33:29,860
Snap, wer will denn sowas haben? User share.net viel besser save und jetzt kann

773
01:33:29,860 --> 01:33:40,300
ich es bestimmt aufmachen. Ah, siehste, Snap, Snapshit, alter, okay

774
01:33:40,300 --> 01:33:54,460
Strucked, Strucked, Qt, Chat, kann ich schreiben, Drop, String, egal hier, Name

775
01:33:54,460 --> 01:34:06,220
So, und das soll jetzt nicht gehen. Chat, Chat1, Qt, Chat

776
01:34:08,540 --> 01:34:18,420
If, Chat1, gleich, gleich, Chat2. Das ist mir noch nie aufgefallen

777
01:34:18,420 --> 01:34:24,420
Das ist mir noch nie aufgefallen, dass man das nicht machen kann. Was ja aber

778
01:34:24,420 --> 01:34:30,420
eigentlich logisch ist, weil wenn standardmäßig gleich, gleich, Reference

779
01:34:30,420 --> 01:34:35,700
überprüft, also wenn Reference equals ist, dann ergibt es keinen Sinn bei

780
01:34:35,700 --> 01:34:39,700
Strucked, weil Strucked kannst du nicht per Reference comparen, sondern nur per

781
01:34:39,700 --> 01:34:44,380
Value. Das heißt, du musst dann sowas machen.

782
01:34:44,380 --> 01:34:50,500
Und nachdem du wahrscheinlich keine Operator gescheit überladen kannst, für Strucked,

783
01:34:50,500 --> 01:34:54,500
weiß ich gar nicht, wenn ich ehrlich bin, kannst du Operator überladen in Strucked?

784
01:34:54,500 --> 01:35:17,940
Dann geht das. Interessant, siehste, wusste ich net. Man lernt ihn ja aus.

785
01:35:17,940 --> 01:35:38,420
Okay, das Einzige, was also quasi ein RecordStrucked macht, ist

786
01:35:38,420 --> 01:35:49,740
EqualsOperator überschreiben. Ist okay, kann man, kann man machen. Wie war mein Tag, was

787
01:35:49,740 --> 01:36:05,420
hast du gemacht? Ich habe Videos aufgenommen. Morgen gibt es ein Video wahrscheinlich.

788
01:36:05,420 --> 01:36:11,500
Collaboration, mit Algorithmen verstehen. Und ich weiß, dass es wahrscheinlich jetzt

789
01:36:11,500 --> 01:36:16,660
nicht wirklich alle ansprechen wird zum Thema, aber für die Hackermans ist das bestimmt

790
01:36:16,660 --> 01:36:40,780
so. Ja, Tieranzeigen kommt danach. Ja, aufkommt mal zu Punkt, Jungs.

791
01:36:40,780 --> 01:37:08,180
Also, die hätten auch eine bessere Demo machen können, oder? Die Demo ist nicht sonderlich

792
01:37:08,180 --> 01:37:30,580
bestrukturiert irgendwie. Ja, okay. Das stimmt, wenn ich das weglasse, ist FirstName

793
01:37:30,580 --> 01:37:32,380
null und ich kann es danach nicht mehr setzen.

794
01:37:32,380 --> 01:37:53,740
Okay. So lasst mich mal überlegen, was halte ich, was halte ich nicht, was halte ich nicht.

795
01:37:53,740 --> 01:38:07,740
So lasst mich mal überlegen, was halte ich denn von sowas. Eigentlich eine coole Idee,

796
01:38:07,740 --> 01:38:12,860
was ich nicht genau verstehe ist, warum kann ich nicht einfach einen Constructor machen,

797
01:38:12,860 --> 01:38:32,820
wo ich erfordere, dass das muss übergeben sein. Also, ist nicht genau dafür ein Constructor

798
01:38:32,820 --> 01:38:40,140
eigentlich da, dass ich so Sachen dann Pflicht machen kann. Aber gut, warum nicht? Also,

799
01:38:40,140 --> 01:38:44,220
es schadet auf jeden Fall nicht sowas. Das ist jetzt sicherlich nicht das Feature, wo

800
01:38:44,220 --> 01:39:12,060
die Welt drauf gewartet hat, aber das ist in Ordnung, ja.

801
01:39:12,060 --> 01:39:32,780
Es geht um Millimeter, ja. Ja, wahrscheinlich. Ja, ChooseMyName hat Recht. In C++ hätten

802
01:39:32,780 --> 01:39:40,380
sie das garantiert nicht in Required genannt. In C++ hätten sie wahrscheinlich irgendwie

803
01:39:40,380 --> 01:39:45,660
template syntax erweitert, dass man sowas machen kann, dass es möglichst obstrus und

804
01:39:45,660 --> 01:39:52,460
kompliziert ist, sowas zu verwenden. Es hätte aber auch sein können, was sie bei C++ natürlich

805
01:39:52,460 --> 01:39:57,700
auch mögen, ist Spitzeklammer auf, zu oder halt größer, kleiner Zeichen, je nachdem

806
01:39:57,700 --> 01:40:02,100
wie man es jetzt nennen mag. Also, es hätte mir vorstellen können, dass C++ dann sowas

807
01:40:02,100 --> 01:40:09,340
macht wie public, Spitzeklammer auf, Spitzeklammer zu, dass das quasi dann sowas wie Required

808
01:40:09,340 --> 01:40:13,820
bedeutet. Das wäre typischer C++ Style gewesen. Möglichst kompliziert alles machen.

809
01:40:13,820 --> 01:40:39,620
Chain-Lore, Standard-Skin. Diamond-Operator, sowas. Ernsthaft? Du meinst das hier?

810
01:40:39,620 --> 01:41:02,580
Äh, das heißt Diamond-Operator? Ja, das wäre typisch C++. Ach so. Aber, aber, aber

811
01:41:02,580 --> 01:41:27,460
ich glaube C++ wird es eher so machen, weil das sonst nirgendwo verwendet wird. So, jetzt

812
01:41:27,460 --> 01:41:48,540
kommt das, was er vorher geteased hat. Das ist aber ziemlich magic. Das ist aber ziemlich

813
01:41:48,540 --> 01:41:55,300
magic. So field ist quasi so ne Art neues Schlüsselwort. Value gibt's ja schon immer.

814
01:41:55,300 --> 01:42:01,580
Value ist quasi immer der magic wert. Das, was man der Property zuweist im Setter. Das

815
01:42:01,580 --> 01:42:05,780
gibt's schon die ganze Zeit, aber field ist dann neu an der Stelle. Das heißt field ist

816
01:42:05,780 --> 01:42:12,740
quasi so ne, so ne, so ne, so ne, so ne Keyword für die Referenz auf das Feld, was der Compiler

817
01:42:12,740 --> 01:42:20,740
dann eigentlich für dich anlegt. Ich find das gut. Ich find das auch gut. Das hat was.

818
01:42:20,740 --> 01:42:26,020
Es ist ziemlich magic, aber es ist auf jeden Fall praktisch. Ich hasse das auch, wenn man

819
01:42:26,020 --> 01:42:36,820
nicht Auto-Property nehmen kann, sondern den Cramster reinwürsten muss. Ne, ich mag das.

820
01:42:36,820 --> 01:42:44,060
Ja, ich kann's verstehen, wenn du sagst, hier magic, aber das ist ja ne relativ gut definierte

821
01:42:44,060 --> 01:42:54,140
magic und du weißt eigentlich genau, was passiert. Jetzt nicht irgendwie so wie C++ Templates

822
01:42:54,140 --> 01:43:07,020
oder so. Was würde jetzt eigentlich passieren, wenn ich da jetzt noch set reinschreibe? Da

823
01:43:07,020 --> 01:43:24,020
wird er wahrscheinlich sagen, geht nicht, oder? Ich kann bestimmt nicht get, init und set.

824
01:43:24,020 --> 01:43:30,900
Warum schreibe ich eigentlich required dahin und nicht required for das init? Wäre es sich

825
01:43:30,900 --> 01:43:39,620
nicht so ne Taktik schöner, wenn required init dastehen würde oder init oder noch besser

826
01:43:39,620 --> 01:43:49,340
init required? Das wär noch cool, oder? Aber die haben sich das sicherlich überlegt,

827
01:43:49,340 --> 01:44:07,140
weil es so wahrscheinlich einfacher zu implementieren ist. Cool, es ist besser zu lesen, das stimmt,

828
01:44:07,140 --> 01:44:10,660
dann steht das überall an der gleichen Stelle. Das stimmt, ja.

829
01:44:10,660 --> 01:44:31,220
Find ich jetzt ne gute Sache. Würdet ihr hier ne newline dazwischen machen oder nicht?

830
01:44:31,220 --> 01:44:36,540
Also würdet ihr get auf ne Zeile schreiben und init auf ne Zeile schreiben oder würdet

831
01:44:36,540 --> 01:44:41,220
ihr alles in eine Zeile machen? Also ich glaube, ich würde bei der Länge alles auf eine Zeile

832
01:44:41,220 --> 01:44:52,660
machen. Wenn sie bisschen länger ist, wahrscheinlich zwei. Du hast deine Physi Prüfung bestanden,

833
01:44:52,660 --> 01:45:00,900
74 Punkte, excellent, oops, falsches, excellent, sehr gut. Massive big brain. Dazu kann man

834
01:45:00,900 --> 01:45:21,540
nur sagen, wo auch immer mein Emote ist. Wo ist mein big brain Emote? Genau. Hast du

835
01:45:21,540 --> 01:45:38,620
schon deine Präsentation gemacht?

836
01:45:38,620 --> 01:46:03,220
Ja, okay, das macht man öfters, ja. Also was er jetzt meint ist, wenn man diese Funktion

837
01:46:03,220 --> 01:46:08,740
so programmiert, muss man eigentlich immer checken, ob File Pass Null ist. Das stimmt,

838
01:46:08,740 --> 01:46:11,700
das ist nervig. Wisst ihr, was ich mache? Ich lasse den Check einfach weg, wenn ich

839
01:46:11,700 --> 01:46:18,260
es nur intern verwende. Wozu? Ich werde ja meinen eigenen Code schon nicht verkehrt aufrufen,

840
01:46:18,260 --> 01:46:20,500
oder? Wer macht denn sowas? KegWade.

841
01:46:20,500 --> 01:46:44,220
Umut, Präsentation ist easy, wenn du weißt, wovon du redest. Oh, jetzt kommt's. Postchamp.

842
01:46:44,220 --> 01:47:08,180
Das ist cool, das ist richtig gut. Ja, Evoli, ich hab da wahrscheinlich auch so meine Schmerzen

843
01:47:08,180 --> 01:47:13,420
mir das zu merken, aber nachdem er das fünfmal verwendet hat, weiß man das. Das ist nice,

844
01:47:13,420 --> 01:47:20,340
das ist wirklich cool. Also, so wie ich das jetzt verstanden hab, was das hier macht ist,

845
01:47:20,340 --> 01:47:28,820
das macht Magic quasi noch einen If-Null-Check. Also im Prinzip ist das hier erst nach dem

846
01:47:28,820 --> 01:47:38,340
If-Null-Check ausgeführt. Warum macht man nicht auch Required davor? Warum benutzen

847
01:47:38,340 --> 01:47:45,220
die jetzt nicht das Required-Keyword hierfür? Das wäre doch eigentlich viel cooler, oder?

848
01:47:45,220 --> 01:47:59,420
Warum nennt man nicht Required? Das hat aber alles seinen Sinn. Also bei C++ würde ich

849
01:47:59,420 --> 01:48:11,260
jetzt sagen, ja, weil es C++ ist und sich keiner Gedanken gemacht hat, aber, ja. Weil

850
01:48:11,260 --> 01:48:16,500
sie Sharp haben, die sich Gedanken gemacht. Stimmt, stimmt, ich weiß warum. Ich weiß warum.

851
01:48:16,500 --> 01:48:22,260
Ich kann Null hier übergeben, das ist vollkommen okay, der wirft dann einfach Runtime-Exception.

852
01:48:22,260 --> 01:48:36,500
Required würde ja, wobei Null ist bei Required ja auch in Ordnung, ne? Genau, dementsprechend

853
01:48:36,500 --> 01:48:50,420
würde das in dem Fall nicht passen. Ja, okay, das ergibt Sinn. Stimmt, Stimmt. Stimmt,

854
01:48:50,420 --> 01:48:55,380
Null als Null wäre valider Wert für Required, ja, würde ich auch sagen. Bloß, dass das

855
01:48:55,380 --> 01:49:00,420
hier halt checkt, während das, ja, das stimmt schon, chat, während der Compile-Time-Check,

856
01:49:00,420 --> 01:49:07,260
ob alle Felder zu was zugewiesen sind. Da könnte man mit Required quasi auch nur checken, ruf

857
01:49:07,260 --> 01:49:12,700
ich das hier auf. Der weiß ja zur Compile-Zeit gar nicht, ob das Null ist. Null ist ja auch

858
01:49:12,700 --> 01:49:18,900
okay, ist damit aufzurufen. Aber man kann nicht sagen, Required ist einmal ein Compile-Time-Check,

859
01:49:18,900 --> 01:49:25,820
ob alles überhaupt was zugewiesen bekommt, ob es initialisiert wird und dann es zu einem

860
01:49:25,820 --> 01:49:34,340
Runtime-Null-Check umfunktioniert. Das ist ja okay, das ergibt Sinn. Also, ja, das,

861
01:49:34,340 --> 01:49:55,780
kann man machen. Stimmt, Ausrufezeichen heißt ja, ich will, ich erlaube Null, oder? Nee,

862
01:49:55,780 --> 01:50:05,460
oder? Nee, nee, Ausrufezeichen heißt, es darf kein Null sein. Oder was war das nochmal?

863
01:50:05,460 --> 01:50:09,580
Nee, Ausrufezeichen heißt, es darf Null sein. Beziehungsweise, es darf ja auch so immer

864
01:50:09,580 --> 01:50:16,700
Null sein, aber es gibt da eine Warning. Und Ausrufezeichen, Ausrufezeichen heißt, es

865
01:50:16,700 --> 01:50:45,620
wird gecheckt, ob es Null ist. Joa. Okay, okay, passt. Also, ich glaube, das ist ein

866
01:50:45,620 --> 01:50:51,500
Null. Ich finde es halt immer blöd, wenn man für ein einzelnes Feature quasi neuen Operator

867
01:50:51,500 --> 01:50:57,180
oder wie auch immer man das jetzt denn mag einführt. Ob man da nicht irgendwas wie Required

868
01:50:57,180 --> 01:51:01,860
noch verwenden könnte oder so. Aber es passt schon. Ich finde es auf jeden Fall eine coole

869
01:51:01,860 --> 01:51:06,580
Geschichte. Und daran sieht man, die bei Microsoft machen sich, wenn es um C-Sharp-Erweiterungen

870
01:51:06,580 --> 01:51:12,540
geht, wirklich Gedanken. Ist das zur Compile-Zeit? Nein, das ist nicht zur Compile-Zeit. Das

871
01:51:12,540 --> 01:51:22,660
ist Runtime. Das ist im Prinzip nichts anderes, wie if FilePass gleich Null, Throw New Argument

872
01:51:22,660 --> 01:51:33,020
Null Exceptions. Fick dich. So. Ist das Gleiche. Oder das Coolste ist ja, man schreibt ja nicht

873
01:51:33,020 --> 01:51:37,460
so böse Sachen wie Fick dich in seine Exceptions rein. Man würde dann glaube ich reinschreiben,

874
01:51:37,460 --> 01:51:47,620
wenn die richtige Exception-Code wäre. Name of FilePass cannot be null oder sowas. Ja,

875
01:51:47,620 --> 01:51:55,340
Compile-Time Null-Checks gehen in C-Sharp nicht. Das ist mal tatsächlich was, wo C++ besser

876
01:51:55,340 --> 01:52:17,500
ist. Aber auch ganz wilde Syntax. Stimmt. Das ist auch neu in C-Sharp. Wer das noch nicht

877
01:52:17,500 --> 01:52:23,820
gesehen hat, man kann mittlerweile seine Main-Methode komplett schreiben ohne Main. Weiß nicht,

878
01:52:23,820 --> 01:52:31,100
ob euch das aufgefallen ist. Also hier musste ich ja sowas hier machen. Class Program Static

879
01:52:31,100 --> 01:52:36,380
Main als Einstiegspunkt in das Programm. Das braucht man seit C-Sharp 9 nicht mehr.

880
01:52:36,380 --> 01:52:41,260
Guck mal, ich kann das alles wegschmeißen. Kein Problem. Ich kann einfach, Moment, das

881
01:52:41,260 --> 01:52:50,260
sollte ich vielleicht da lassen. Ich kann einfach sowas hier machen. Das ist jetzt valid

882
01:52:50,260 --> 01:52:58,940
seit C-Sharp 9, was eigentlich ganz cool ist. Geht inzwischen Async Main, ja. Das macht

883
01:52:58,940 --> 01:53:04,300
er hier übrigens auch automatisch. Das sieht dann ein bisschen, ein bisschen, Python, JavaScripten

884
01:53:04,300 --> 01:53:09,300
mäßiger aus oder so. Funktioniert aber unter der Haube, by the way, ist das genau das Gleiche

885
01:53:09,300 --> 01:53:15,460
wie vorher. Der macht einfach nur eine Main-Methode drumherum. Deswegen kann man auch nicht zwei

886
01:53:15,460 --> 01:53:21,900
Dateien anlegen, die sowas enthalten, weil er dann nicht weiß, was er als Main verwenden

887
01:53:21,900 --> 01:53:25,860
soll. Ist aber eine coole Geschichte und das geht schon seit C-Sharp 9. Das ist das, was

888
01:53:25,860 --> 01:53:26,860
ich hier nochmal zeige.

889
01:53:26,860 --> 01:53:48,140
Muss ich euch mal fragen, macht ihr auch One Type per File? Also ich mach auch prinzipiell

890
01:53:48,140 --> 01:53:53,980
One Type per File, aber es gibt eine Sache, wo ich dagegen verstoße. Das ist, wenn ich

891
01:53:53,980 --> 01:54:08,540
beispielsweise irgendeinen Type hab, der einen Enum als Property-Typ hat. Keine Ahnung. Ich

892
01:54:08,540 --> 01:54:17,060
hab ne Klasse Recording und ich hab da drin einen Enum, Manual Recording, Motion Detection

893
01:54:17,060 --> 01:54:27,540
Recording oder Timer Recording. Dann mach ich das in die gleiche Datei rein. Aber ansonsten

894
01:54:27,540 --> 01:54:37,460
mach ich auch One Class per File. Ja gut, wenn das ein Enum ist mit 200 Einträgen,

895
01:54:37,460 --> 01:54:47,420
dann nicht. Aber meine Erinnerungen haben 5 oder so. Viel mehr kommt da meistens nicht

896
01:54:47,420 --> 01:54:53,260
zusammen. Ok, ich sehe der Chat ist sich da zum größten Teil Big Brain technisch wieder

897
01:54:53,260 --> 01:54:59,340
einer Meinung. Ups, falsch ist die Mode. Was auch immer das jetzt damit zu tun hat.

898
01:54:59,340 --> 01:55:15,620
Hat er dem grad das Shortcut von Visual Studio gesagt? Hab ich das richtig gehört? Ach

899
01:55:15,620 --> 01:55:22,900
nee, Good Choice hat er gesagt. Ich hab gedacht, er hat ihm den Shortcut gesagt, so nach dem

900
01:55:22,900 --> 01:55:40,020
Motto, du Kacknoob, drück den Shortcut, um das anzulegen. Nee, hat er nicht. Ja, das

901
01:55:40,020 --> 01:55:52,820
ist nervig. Jetzt stimmen die Imports nicht. Oder die Usings, wir sind jetzt nicht scharf.

902
01:55:52,820 --> 01:56:17,660
Ok, jetzt machen sie aber ganz schön viel Intro dafür. Wir wissen doch jetzt alle schon

903
01:56:17,660 --> 01:56:23,100
was passiert. Die schreiben Global davor. In Rider geht das übrigens einfacher, in Rider

904
01:56:23,100 --> 01:56:26,980
kann ich hier drauf gehen und Visual Studio btw auch. Nee, Rider macht das nicht automatisch,

905
01:56:26,980 --> 01:56:30,340
vielleicht kann man das einstellen. Aber man kann draufklicken, man kann draufklicken

906
01:56:30,340 --> 01:56:35,340
mit Alt Enter und dann macht das Rider oder Visual Studio das automatisch. Es ist aber

907
01:56:35,340 --> 01:56:39,380
trotzdem ein bisschen nervig und die Dateien werden auf jeden Fall kürzer, wenn ich das

908
01:56:39,380 --> 01:56:44,620
Global importen kann. Also sie werden uns jetzt Global Imports zeigen, weil das stand schon

909
01:56:44,620 --> 01:57:05,020
im Beispiel vorher drin. Nee, manchmal will ich Usings auslassen, wenn sich das widerspricht.

910
01:57:05,020 --> 01:57:12,540
Je nachdem was für Kacklibraries ich verwenden muss, gibt es dort Typen drin, die eben den

911
01:57:12,540 --> 01:57:19,340
gleichen Namen haben. Gerade Direct3D ist da ganz schlimm, was weiß ich wie viele Surfaces

912
01:57:19,340 --> 01:57:24,220
und Hassen nicht gesehenes da gibt, das überschneidet sich da teilweise. Ich hab nicht viel in DirectX

913
01:57:24,220 --> 01:57:28,860
gemacht bisher muss ich sagen, aber es hat mir schon gereicht. Oder ich verwende irgendeine

914
01:57:28,860 --> 01:57:35,140
Library, die nen Typ drin hat, irgendwie HTTP Header oder so und das ist auch 5 mal definiert.

915
01:57:35,140 --> 01:57:41,660
Also es gibt denke ich schon Punkte wo es sinnvoll ist nicht Global Usings zu machen. Aber kann

916
01:57:41,660 --> 01:58:01,500
man ja dann. Boah, huge Multiple Cursor. Das ist cool, ich finde es ist eine gute Idee.

917
01:58:01,500 --> 01:58:10,420
Geht jetzt, du bringst es noch nicht. Das ist auf jeden Fall ein ganz neues C-Shop 10 Feature,

918
01:58:10,420 --> 01:58:21,060
ist doch nicht. Ist aber eine coole Geschichte, magisch. Das gefällt mir. Zu doppelt im Portemonnaie,

919
01:58:21,060 --> 01:58:29,980
ja. Das finde ich cool. Ich würde aber kein extra File machen, ganz ehrlich, ich würde

920
01:58:29,980 --> 01:58:35,380
kein extra File machen. Ich würde mein Main, ich würde mein Main, kann man eigentlich

921
01:58:35,380 --> 01:58:45,380
Multiple Cursors in Rider machen? Geht das? Hab ich, ah so genau, so ging das, ja so ging

922
01:58:45,380 --> 01:58:59,060
das. Ah hier unten hab ich schon. Das wäre cool, das würde ich einfach als Main benutzen,

923
01:58:59,060 --> 01:59:03,380
dort kommt alles rein, da kommt dann irgendwie so ein bisschen Startup Kram und das war's.

924
01:59:03,380 --> 01:59:19,860
Das ist eigentlich eine echt coole Geschichte, das gefällt mir. Das ist nice, guck mal wie

925
01:59:19,860 --> 01:59:26,660
kurz und knackig das ist. Guck mal wie kurz und knackig das ist, das finde ich cool, das

926
01:59:26,660 --> 01:59:31,920
hat was. Das ist übrigens so ein Unding, was ich auch schon in vielen C-Shop Trainingsvideos

927
01:59:31,920 --> 01:59:37,380
gesehen hab, dass die Ride Line, alias ein global, dass du nicht mehr Console Ride Line

928
01:59:37,380 --> 01:59:41,700
schreiben musst. Das finde ich total unintuitiv, weil ich hab mich mittlerweile so sehr an Console

929
01:59:41,700 --> 01:59:47,300
Ride Line gewöhnt und außerdem, wer keinen Bock hat Console Ride Line zu schreiben, der

930
01:59:47,300 --> 01:59:53,860
kann auch einfach CW schreiben und Tab drücken, das ist in Visual Studio auch so drin. Und

931
01:59:53,860 --> 02:00:04,060
ich find's lesbarer Console Ride Line als nur Ride Line. Guck hier, hier hat er das Included.

932
02:00:04,060 --> 02:00:12,860
Er hat hier Global Using Static System Console, das heißt, dass der quasi die Methoden von

933
02:00:12,860 --> 02:00:21,340
System Console verwenden kann, ohne Console. Das ist mein Fall ist es nicht. System Output

934
02:00:21,340 --> 02:00:37,140
prindeln, das sieht sehr nach Java aus. Gibt es eigentlich auch System Out Print Füllen,

935
02:00:37,140 --> 02:01:03,140
mit Äffeln. Das ist aber echt ein cooles Feature, das mag ich auch an das C-Shop Entwicklung,

936
02:01:03,140 --> 02:01:09,420
die machen sinnvolle Sachen einfach da rein. Manche Sachen sind vielleicht bisschen Nische,

937
02:01:09,420 --> 02:01:15,300
dieses ganze Pattern Matching Zeug ist schon cool, aber die ganz abgedrehte Pattern Matching

938
02:01:15,300 --> 02:01:19,020
Sachen wurde dann irgendwie dreimal Pattern Nested oder so, verwendet glaube ich kaum

939
02:01:19,020 --> 02:01:25,420
einer regelmäßig, aber die machen schon coole Sachen. Im Vergleich zu C++ kann man

940
02:01:25,420 --> 02:01:35,060
sich oft genug flamen. Echt hast du Pattern Matching schon so viel verwendet? Also ich

941
02:01:35,060 --> 02:01:39,620
verwendet die Light Form davon. Also was ich beispielsweise ganz oft verwende ist, dass

942
02:01:39,620 --> 02:01:43,980
du in einem If dann direkt checkst, ob das ein gewisser Typ ist und gleich die Variabel

943
02:01:43,980 --> 02:01:56,860
dafür anlegst und sowas. Aber jetzt irgendwelche Cases mit zig geschachtelten Wens drinne,

944
02:01:56,860 --> 02:02:10,540
habe ich selten. Mario XTB, Dankeschön für den Sub.

945
02:02:10,540 --> 02:02:20,980
Oh, das ist auch cool, das ist wirklich praktisch, da sparst du dir einmal Eindrückungstiefe.

946
02:02:20,980 --> 02:02:36,980
Ricky OMFG hat auch gesagt, habe ich nicht gesehen, Dankeschön für den Huge Massive

947
02:02:36,980 --> 02:03:02,820
Subscription hier. Ist ne coole Sache. Hat was, hat was. Ich mein, das sind jetzt sicherlich

948
02:03:02,820 --> 02:03:06,980
keine bahnbrechenden Dinge, aber die sind halt einfach angenehm. Das mag ich auch an

949
02:03:06,980 --> 02:03:11,500
der C-Sharp Entwicklung. Die machen da nicht auf Teufel, kommen raus jetzt irgendwie sonstige

950
02:03:11,500 --> 02:03:15,220
Dinge. Die machen auch vieles, was einfach angenehm ist. Also das kannst du dich echt

951
02:03:15,220 --> 02:03:20,340
nicht beschweren. Und wisst ihr eigentlich, was wirklich mein Lieblingsfeature an C-Sharp

952
02:03:20,340 --> 02:03:25,980
ist? Der Kram funktioniert einfach zum größten Teil so, wie man es erwartet. Das ist für

953
02:03:25,980 --> 02:03:35,340
mich echt ein Punkt. Da ist wenig, da ist wenig Verwirrendes dran. Die meisten Sachen

954
02:03:35,340 --> 02:03:41,980
heißen so wie das, was sie machen. Die meisten Sachen haben einen ordentlichen Dock dazu,

955
02:03:41,980 --> 02:03:48,620
dass du gucken kannst, Parameter in, out beschrieben. Das ist einfach nur angenehm zu benutzen,

956
02:03:48,620 --> 02:03:54,020
weil das halt das macht, was du erwartest. Ich mein, mein Lieblingsbeispiel ist ja folgendes,

957
02:03:54,020 --> 02:04:02,740
das muss ich euch jetzt mal zeigen. Alter Rider, come on. Puh, nerv nicht. So, ich zeige euch

958
02:04:02,740 --> 02:04:12,820
jetzt mal den besten Vergleich, warum C-Sharp einfach nur angenehm ist und C++ nervig ist.

959
02:04:12,820 --> 02:04:20,620
Also, wenn man in C++, oder wir machen erstmal den C-Sharp-Teil, weil da weiß ich, wie er

960
02:04:20,620 --> 02:04:34,140
aussieht. So, also, wir haben eine Liste. Keine Ahnung. Liste, new, list. Darf man das mittlerweile

961
02:04:34,140 --> 02:04:40,340
machen ohne was dahinter zu schreiben? Ich glaube nicht, oder? 1, 2, 3, 4, 5, 5, 5,

962
02:04:40,340 --> 02:04:48,420
5, 7, 8, 9. Nee, ich glaube das geht nicht. Okay, int. So, wir haben eine Liste mit diesen

963
02:04:48,420 --> 02:04:54,220
Zahlen drin. Mal angenommen, ich möchte diese Liste jetzt filtern, dass alle Fünfer, alle

964
02:04:54,220 --> 02:05:05,500
Fünfer rauswerfen. Dann mache ich in C-Sharp sowas, list, list, remove all, gleich 5. Fertig.

965
02:05:05,500 --> 02:05:16,300
Und was jetzt passiert ist, der geht durch die Liste durch und droppt alles, was 5 ist.

966
02:05:16,300 --> 02:05:25,500
Also, das ist, finde ich, easy as fuck zu lesen. Liste, remove, also entferne alle Elemente,

967
02:05:25,500 --> 02:05:30,220
die gleich 5 sind. Total einfach. So, und jetzt passt mal auf, wie das in C++ aussehen

968
02:05:30,220 --> 02:05:47,060
würde. In C++ müsste ich machen, list, remove, remove, standard, remove, nee, Moment, Moment,

969
02:05:47,060 --> 02:06:06,180
remove, list, begin, list, end, ich glaube irgendwie so, 5, list, end, irgendwie so wäre

970
02:06:06,180 --> 02:06:11,700
die Sündachs das gleiche zu machen in C++. Ich meine, was hat das Gremium geraucht davor,

971
02:06:11,700 --> 02:06:16,740
als die sich sowas ausgedacht haben? Was ist denn das? Das ist hässlich wie die Nacht,

972
02:06:16,740 --> 02:06:23,860
warum? Warum C++? Guck mal, es kann so einfach sein. Es kann so einfach sein. Aber die haben

973
02:06:23,860 --> 02:06:31,580
sich gedacht, nope, remove all ist kein Ding. Nee, es ist nicht. Remove all ist Methode

974
02:06:31,580 --> 02:06:47,860
aus list oder aus I-List oder fragt mir nicht. Aber ich meine, was ist einfacher zu lesen?

975
02:06:47,860 --> 02:06:53,980
Jetzt mal ernsthaft. Das oder das? Ich bin mir übrigens bei der Sündachs nicht ganz

976
02:06:53,980 --> 02:07:02,940
sicher, aber mehr oder weniger so sieht das in C++ aus. Ja, mein Beileid, mein Beileid.

977
02:07:02,940 --> 02:07:13,900
Na gut, in Link ist das auch relativ einfach. In Link könnte ich sagen, select, aber da

978
02:07:13,900 --> 02:07:21,500
kriege ich halt eine neue Liste. Ich könnte sagen, select alles, was nicht 5 ist, könnte

979
02:07:21,500 --> 02:07:33,800
ich zum Beispiel machen. Sowas könnte ich machen mit Link. Buhl? Wait a minute, bin

980
02:07:33,800 --> 02:07:47,340
ich jetzt... Ach nee, where? Where? Nicht select. Cack wait. Ja. Genau, ich meine, das

981
02:07:47,340 --> 02:07:52,420
könnte ich auch machen. Wobei, dass das cooler ist, weil das direkt auf der Liste operated,

982
02:07:52,420 --> 02:07:57,740
die ich hier habe. Aber es ist auf jeden Fall alles und es ist alles mal besser als das.

983
02:07:57,740 --> 02:08:15,060
Moin. QP, Face Ante QP. Excellent. Oh, Massive, Massive eigene Emotes hier. So, guck mal

984
02:08:15,060 --> 02:08:29,020
den Kram mal weiter. Okay, Demo ist fertig. Ich glaube, wir können den Rest... Alter,

985
02:08:29,020 --> 02:08:44,500
jetzt macht er einen Krach. HC++, eigentlich sowas wie Yield. Ja, aber...

986
02:08:44,500 --> 02:08:57,820
Okay, ich erkläre beides. Also, erstmal dazu was gesagt. C++ hat mittlerweile sowas. C

987
02:08:57,820 --> 02:09:09,460
Sharp hat zwei Sachen. C Sharp hat Yield und Async und das Asynchron, beides. Und C++

988
02:09:09,460 --> 02:09:15,620
hat ein ganz krudes Iterator Pattern, was ich bis heute nicht gecheckt habe. Aber, jetzt

989
02:09:15,620 --> 02:09:31,220
kommt der Hit. C++20 hat Coroutines mit Yield. Aber, aber, jetzt kommt der Hit. Keiner der

990
02:09:31,220 --> 02:09:42,220
eingebauten Sachen im Standard Framework hat das. Also, es ist total wir. Also, die haben

991
02:09:42,220 --> 02:10:00,540
quasi was eingebaut, was du gar nicht direkt verwenden kannst. Es ist C++. So. Was programmierst

992
02:10:00,540 --> 02:10:05,660
du? Wir gucken uns die neuen Sachen von.NET 6 an. Ich meine, guckt euch diese hässliche

993
02:10:05,660 --> 02:10:18,140
Geschichte hier schon mal an. Und... Genau. Der Witz ist, dass es ist nichts implementiert

994
02:10:18,140 --> 02:10:26,900
in der Standard Library von C++, was das kann. Also, es ist einfach wieder C++. Man muss

995
02:10:26,900 --> 02:10:43,220
es nicht verstehen. Oh, was kommt denn da jetzt? Was ist das hier? Was ist das? Das

996
02:10:43,220 --> 02:10:57,580
sieht cool aus. Oh, das probieren wir aus. Das probieren wir gleich aus. Muss man aufschreiben.

997
02:10:57,580 --> 02:11:02,460
Minimal Web API. Das ist cool. Wisst ihr wofür das cool ist? Wenn ich einfach eine Web...

998
02:11:02,460 --> 02:11:06,220
Mal genommen, ich habe eine Konsolenanwendung gemacht. Oder irgendwas und will einfach

999
02:11:06,220 --> 02:11:13,620
nur... Keine Ahnung. Trigger meine Anwendung über irgendwie einen Webrequest. Das heißt,

1000
02:11:13,620 --> 02:11:18,860
ich brauche kein komplettes ASP.NET Core Projekt, sondern kann das einfach überall

1001
02:11:18,860 --> 02:11:23,100
reinhauen. Das probieren wir gleich aus. Da bin ich gespannt. Und das ist ein bisschen

1002
02:11:23,100 --> 02:11:27,660
so wie... Ja, genau. So ein bisschen wie Flask oder Express oder ich würde sagen Sinatra

1003
02:11:27,660 --> 02:11:42,500
so als alter Ruby Fan. Kannst du bei dem Parameter angeben... Das hängt davon ab, wie MapGet

1004
02:11:42,500 --> 02:11:45,300
definiert ist. Übrigens, ich wollte noch eine andere Sache beantworten. Habe ich ja

1005
02:11:45,300 --> 02:11:50,740
ganz vergessen. Ich habe gesagt, ich beantworte beides. Und zwar wollte ich noch beantworten,

1006
02:11:50,740 --> 02:11:58,580
was macht Yield? Okay, das ist ein bisschen schwieriger zu erklären. Yield ist eine

1007
02:11:58,580 --> 02:12:05,580
Möglichkeit, einen Iterator zu programmieren. Also mal angenommen... Oh fuck, wie erkläre

1008
02:12:05,580 --> 02:12:10,860
ich das jetzt? Wie erkläre ich das? Also mal angenommen, du hast eine Methode, die unendlich

1009
02:12:10,860 --> 02:12:18,980
viele Zeichen generiert. Also zum Beispiel... Wir machen das jetzt einfach mal. Void Generate.

1010
02:12:18,980 --> 02:12:29,260
Jo, immer. Also wir haben eine Methode, die unendlich viele Inns generiert. Und das macht

1011
02:12:29,260 --> 02:12:33,940
die folgendermaßen... Oder was heißt unendlich? Okay, wir nehmen es wörtlich. Wir haben eine

1012
02:12:33,940 --> 02:12:42,700
Methode, die unendlich viele Inns generiert. Return... Keine Ahnung, hier. Count gleich

1013
02:12:42,700 --> 02:12:50,140
null. Return count plus plus. So. Jetzt... Ach so, ja, Moment, das funktioniert ja noch

1014
02:12:50,140 --> 02:12:56,660
nicht. Ja, klar. Aber worauf ich raus will. Also du hast eine Methode, die unendlich viele

1015
02:12:56,660 --> 02:13:03,180
Inns zurückgibt. Jetzt hast du das Problem, wenn du die aufrufst, wäre das ja eine Endlosschleife.

1016
02:13:03,180 --> 02:13:07,480
Und du willst zwar potenziell unendlich viele Inns haben, aber die willst du ja nicht auf

1017
02:13:07,480 --> 02:13:14,940
einmal. Du willst immer ein Int, ein Int auf einmal haben. So und dann sagst du einfach

1018
02:13:14,940 --> 02:13:24,220
Yield Return. Und dann machts das. Yield Return ist, du rufst Generate auf. Du runnst bis

1019
02:13:24,220 --> 02:13:31,980
zum ersten Return und machst weiter. So und wer mir jetzt nicht glaubt, dass das funktioniert,

1020
02:13:31,980 --> 02:13:44,540
ich zeig's euch. Ja, Generate. Wo ist mein Terminal? Terminal? Die Terminal ist off.

1021
02:13:44,540 --> 02:13:51,060
Dann mach ich halt so ein Terminal auf. Rider. Wie heißt das Ding? Console App. Console

1022
02:13:51,060 --> 02:14:10,300
App zwei. Console App zwei. Dot net run. So. Genau. So. I. Okay, das ist jetzt ein doofes

1023
02:14:10,300 --> 02:14:14,300
Beispiel. Aber Moment, ich zeig dir, ich zeig dir, dass es funktioniert. Wir machen das

1024
02:14:14,300 --> 02:14:24,060
ganz, wir machen das ganz einfach. Return Count oder Print Count. So. Moment, hab ich

1025
02:14:24,060 --> 02:14:38,180
was falsch gemacht, Leute? Hab ich was falsch gemacht? Du returns in der Schleife, das ist

1026
02:14:38,180 --> 02:15:01,140
okay. Hab ich was falsch gemacht? Moment. Nein, nein, nein, ich muss nicht Yield, ich

1027
02:15:01,140 --> 02:15:25,980
muss Yield Return machen. Ah. Muss ich das so machen? Nee, oder? So muss ich das machen,

1028
02:15:25,980 --> 02:15:36,380
oder? Ah, ja, ja, okay, jetzt kommen wir da schon näher. Okay. Okay, das, das, das, so

1029
02:15:36,380 --> 02:15:45,180
würde das, so würde das funktionieren. Ähm, ja. Äh, wie gesagt, man sieht, ich verwende

1030
02:15:45,180 --> 02:15:58,060
das nicht allzu oft. Aber ich könnte wahrscheinlich sowas hier machen. Und jetzt Value oder sowas,

1031
02:15:58,060 --> 02:16:04,700
Current. Nee, Toolist kann ich nicht machen, wenn ich Toolist machen würde, wäre ja eine

1032
02:16:04,700 --> 02:16:11,900
Endlosschleife. So, guck, und du siehst jetzt, ich ruf das hier drei, viermal auf. Und da,

1033
02:16:11,900 --> 02:16:16,940
ne, das funktioniert so nicht. Okay, Leute, ich bin lost. Ach, Quatsch, natürlich, ich

1034
02:16:16,940 --> 02:16:21,180
bin richtig lost. Ist ja Schwachsinn, was ich machen würde. Ich muss mir den Iterator speichern.

1035
02:16:21,180 --> 02:16:35,220
Mega lost. E, Current, Saw, und jetzt muss ich immer sagen Next dazwischen. Ja, genau.

1036
02:16:35,220 --> 02:16:45,940
Ja, wenn ich das so richtig schreiben könnte. So. Jetzt funktioniert's. Okay, alles klar.

1037
02:16:45,940 --> 02:16:58,660
Also sprich, ähm, Moment. Ach so, ja, gut. Oder eine For Each. Ja, mit For Each hatte

1038
02:16:58,660 --> 02:17:01,620
ich's ja eben schon. Aber ich wollte halt auch zeigen, dass es einzeln funktioniert.

1039
02:17:01,620 --> 02:17:08,020
Also sprich, du hast ja eigentlich eine Endlosschleife, aber du kannst trotzdem reingehen, laufen

1040
02:17:08,020 --> 02:17:13,100
lassen bis zum ersten Yield-Return und dann weitermachen mit deinem normalen Programm.

1041
02:17:13,100 --> 02:17:22,020
So, aber, wohlgemerkt, das ist alles synchron. Ähm, wenn du hier drin asynchronen Kram machen

1042
02:17:22,020 --> 02:17:25,740
willst, wird's ein bisschen schwieriger, aber mittlerweile, und dann, wie sieht man

1043
02:17:25,740 --> 02:17:34,260
wir über ein Thema, die.NET-Leute machen sinnvolle Sachen. Es gibt ein I async enumerable

1044
02:17:34,260 --> 02:17:45,900
int. So, dann kann ich das async machen. Oder auch nicht. Moment, async muss vorne hin.

1045
02:17:45,900 --> 02:17:55,580
Dann kann ich das async machen und es funktioniert trotzdem. So, jetzt funktioniert es natürlich

1046
02:17:55,580 --> 02:18:00,380
nicht mehr auf die synchrone Art und Weise. Jetzt kann ich ne Vorschleife machen da drüber

1047
02:18:00,380 --> 02:18:12,260
und sage, ähm, what, das machen wir weg. Generate. Äh, und jetzt muss ich Await sagen. Await.

1048
02:18:12,260 --> 02:18:31,980
Ne, Moment, oh, wie war das jetzt nochmal? Äh, Await hier vor? Ne. Ach ne, Await muss

1049
02:18:31,980 --> 02:18:39,060
vorne hin, ne? Ah, so muss das. So war das. Ja, das, ähm, genau. Und jetzt kann man das

1050
02:18:39,060 --> 02:18:42,260
asynchronen machen. Wenn ich hier drin jetzt asynchronen irgendwas aufrufen will, dann

1051
02:18:42,260 --> 02:18:47,180
funktioniert das. Also mal angenommen, ich mach hier ne HTTP-Request drinnen und dann

1052
02:18:47,180 --> 02:18:52,380
mach ich ne Yield-Return. Dann würde das jetzt folgendermaßen funktionieren. Der geht hier

1053
02:18:52,380 --> 02:18:59,060
rein, macht ne, macht, fängt mit an mit der Schleife zu laufen, dann macht er den Web-Request,

1054
02:18:59,060 --> 02:19:07,660
das ist asynchronen, dann springt er wieder raus, wartet, bis der, also macht im aufrufenden

1055
02:19:07,660 --> 02:19:14,980
Thread weiter, ähm, wartet, bis der HTTP-Request fertig ist, dann returnt er das und dann läuft

1056
02:19:14,980 --> 02:19:19,860
die Schleife einmal durch. Das ist richtig big brain, ja. Also ich könnte genau, sowas

1057
02:19:19,860 --> 02:19:26,740
hier könnte ich machen hier. Genau. Await, Task, Delay, eine Sekunde. Sowas könnte ich

1058
02:19:26,740 --> 02:19:36,820
machen. So. Und jetzt ist das komplett asynchron, was heißt, ähm, hätte ich da jetzt ne GUI

1059
02:19:36,820 --> 02:19:51,940
so in dem das läuft, dann würde das GUI auch nicht blocken. Das ist richtig cool. So und

1060
02:19:51,940 --> 02:19:58,220
sowas in C++ zu machen ist cancer pur und macht keiner freiwillig. So, das ist, das

1061
02:19:58,220 --> 02:20:07,420
ist, was Yield macht. Chat, heute ist richtig, müsst ihr zugeben, heute ist richtig educational

1062
02:20:07,420 --> 02:20:23,580
Content, oder? Aber asynch wird immer noch alles auf einem Thread ausgeführt. Ne, nicht

1063
02:20:23,580 --> 02:20:29,620
unbedingt. Das entscheidet sich, das kann sein, dass ich da jetzt falsch liege, aber

1064
02:20:29,620 --> 02:20:35,020
ich glaube, das stimmt, was ich sag. Äh, das entscheidet sich an dieser Stelle, was

1065
02:20:35,020 --> 02:20:42,700
passiert. Also, das asynch hier oben sagt ja nur erstmal, dass ich so Sachen wie Await

1066
02:20:42,700 --> 02:20:50,900
hier drin verwenden darf. So. Und hier an der Stelle wird entschieden, ob das ein extra

1067
02:20:50,900 --> 02:20:56,940
Thread gibt oder ob das AsyncIO was auch immer macht. Da müsste ich mir jetzt mal ein bisschen

1068
02:20:56,940 --> 02:21:01,980
tiefgreifender Gedanken machen, aber letztendlich der auf, der Code, der hier aufgerufen wird,

1069
02:21:01,980 --> 02:21:13,780
entscheidet, wie es das Asynchrone umsetzt. Das kann ein extra Thread sein. Das kann wahrscheinlich

1070
02:21:13,780 --> 02:21:18,140
irgendwie ein Value-Task sein. Fragt mich nicht. Es ist nicht so, das ist nicht so easy

1071
02:21:18,140 --> 02:21:25,660
an der Stelle. Es entscheidet sich aber zumindest hier, was das ist. Und ich geh mal davon aus,

1072
02:21:25,660 --> 02:21:36,940
dass Task Delay wahrscheinlich ein eigener Thread ist, im Threadpool, der dann einfach

1073
02:21:36,940 --> 02:21:51,940
dort wartet. Ich hab keine Ahnung. Ich hab keine Ahnung, ehrlich gesagt. Es gibt ja

1074
02:21:51,940 --> 02:21:55,860
auch, man kann ja auch noch hier auswählen, das kommt ja auch noch dazu, man kann ihm

1075
02:21:55,860 --> 02:22:06,780
sagen, an der Stelle, ob man, Moment. Nee, das will ich gar nicht machen. Man kann ihm

1076
02:22:06,780 --> 02:22:16,420
auch sagen, ähm, sprich, ob man sich merken will, aus welchem Thread man aufruft, aufgerufen

1077
02:22:16,420 --> 02:22:21,420
wird oder nicht. Und das ist wirklich, das ist dann richtig Big Brain Geschichte. Das

1078
02:22:21,420 --> 02:22:26,300
Gute ist, und das ist auch wieder ein Vorteil, wie sie das gemacht haben in.NET, meistens

1079
02:22:26,300 --> 02:22:31,540
braucht man diesen ganzen Krempel, nicht? Und es ist alles relativ selbst erklären,

1080
02:22:31,540 --> 02:22:41,220
aber wenn man was einstellen muss, dann kann man's machen. Also, Configure Await brauchst

1081
02:22:41,220 --> 02:22:47,420
du zum Beispiel, wenn du in der GUI-Anwendung bist und vermeiden willst, dass du dich irgendwie

1082
02:22:47,420 --> 02:22:53,700
in manchen Edge-Cases deadlockst selber, dann manchmal braucht man das. Aber wisst ihr,

1083
02:22:53,700 --> 02:22:58,100
wann ich das verwende? Ich verwende das immer dann, wenn ich danach gegoogelt hab, weil

1084
02:22:58,100 --> 02:23:04,460
ich ein Problem hab und Stack Overflow sagt, ich soll das verwenden. Ganz einfach, so wie

1085
02:23:04,460 --> 02:23:18,140
es jeder macht. Wenn Stack Overflow sagt, das ist richtig, dann muss das stimmen. So,

1086
02:23:18,140 --> 02:23:23,500
no repeat, mein. Okay, die Demo will ich mir noch angucken, das sieht wirklich nice aus,

1087
02:23:23,500 --> 02:23:31,620
das probieren wir auch gleich aus. Das ist wirklich cool, das gefällt mir, das ist das

1088
02:23:31,620 --> 02:23:35,900
erste, was wir gleich ausprobieren. By the way, werden wir das wieder gucken, ich installier

1089
02:23:35,900 --> 02:23:43,420
hier schon mal, ich installier hier schon mal die Visual Studio, test was. Wait a minute,

1090
02:23:43,420 --> 02:24:06,060
wo ist meine VM? Wie hier? Sign in, jawoll, okay. Download Visual Studio, geh weg Microsoft,

1091
02:24:06,060 --> 02:24:26,180
geh weg. Download Visual Studio Preview, Snapshot der Windows VM. Ja, excellent, big brain chat.

1092
02:24:26,180 --> 02:24:36,180
Das ist auch noch Bing standardmäßig, ja. Download.NET 6 Preview, das geht schnell,

1093
02:24:36,180 --> 02:24:45,260
aber Visual Studio Preview muss ich jetzt anschmeißen, das dauert immer lang. Bringen

1094
02:24:45,260 --> 02:25:05,660
den Chat back, wir sind nicht fertig mit Videokucken. Was? Ja, continue. Download.NET 6, Visual

1095
02:25:05,660 --> 02:25:12,300
Studio. Ach guck mal, man kann, wait a minute, man kann 16. Warte mal, ich kann das, ich

1096
02:25:12,300 --> 02:25:18,500
brauch gar kein Visual Studio Preview. Visual Studio, download, ich kann die normale 6.11,

1097
02:25:18,500 --> 02:25:37,740
16.11 verwenden. Guck mal da. Wait a minute, wo ist es denn? Ermächtigen, ermächtigen?

1098
02:25:37,740 --> 02:25:44,660
Wer ermächtigt denn da irgendjemand? Sag mal, warum findet fucking Bing nicht mal Visual

1099
02:25:44,660 --> 02:26:04,220
Studio Download selbst? 16.9, okay, ja. Doch, ich muss doch Preview runterladen. Ja, was

1100
02:26:04,220 --> 02:26:19,180
denn jetzt? Ist es jetzt Preview oder nicht? Check's nicht. 16.11 Preview, okay, dann habe

1101
02:26:19,180 --> 02:26:31,900
ich doch richtig gemacht. Also doch den hier. Yes, yes. Brauchst du nicht einfach nur das

1102
02:26:31,900 --> 02:26:36,700
neue SDK? Das brauche ich auch, aber ich brauche erstmal Visual Studio, was das neue Zeug

1103
02:26:36,700 --> 02:26:48,500
kann. Äh, ja, ja, macht hier mal. Äh, wo ist hier Desktop Development C Sharp? 9G,

1104
02:26:48,500 --> 02:27:05,420
ich wollte mich veräppeln. Moment, wo war denn der Kram jetzt hier nochmal? Oder ist

1105
02:27:05,420 --> 02:27:19,300
nicht denn hier den, na komm, machen wir den.NET Desktop Workload. Äh, ich mach den da,

1106
02:27:19,300 --> 02:27:36,220
ja. Ist, meinst du, es ist standardmäßig drin? Individual Components. Man muss kein

1107
02:27:36,220 --> 02:27:43,500
.NET Workload mehr installieren. Schau mal, wie lange ich den Kram schon immer installiert

1108
02:27:43,500 --> 02:27:50,460
habe. Ne, standardmäßig ist da glaube ich auch gar nicht, gar nix drin. Weißt du was,

1109
02:27:50,460 --> 02:27:53,500
ich installiere jetzt einfach das hier und gut, da ist, da ist auf jeden Fall alles dabei.

1110
02:27:53,500 --> 02:27:58,300
So, es geht schnell. Da können wir jetzt nämlich noch den Kram, ja, guck mal, das interessiert

1111
02:27:58,300 --> 02:28:13,420
mich wirklich, was da passiert. Das erinnert mich wirklich an Sinatra

1112
02:28:13,420 --> 02:28:23,940
aus Ruby. Das probiere ich mal gleich aus. 24 MB in die Sekunde, das flutscht Leute, das

1113
02:28:23,940 --> 02:28:38,860
flutscht. Steffen, nicht Steven, Steffen. Okay, das ist, ah, hier geht's los.

1114
02:28:38,860 --> 02:29:03,300
Warum ist das so klein? Whyte theme, whyte theme, Leute, warum whyte theme, Alter? Warum

1115
02:29:03,300 --> 02:29:17,940
haben die alle light theme? Warum, warum? Ich sehe nix. Flashbang. Okay, das ist echt

1116
02:29:17,940 --> 02:29:22,080
cool. Das finde ich nice. So, was hat denn der jetzt da installiert? Was mich jetzt interessieren

1117
02:29:22,080 --> 02:29:25,580
würde, ist das ein Webprojekt oder kann es auch eine Konsolenanwendung sein?

1118
02:29:25,580 --> 02:29:44,140
Weil, wenn es schon eine Webanwendung sein muss, dann ist es fail. Ich glaube, das ist,

1119
02:29:44,140 --> 02:29:53,420
ich glaube, das ist eine Webanwendung. Okay, hier können wir durchskippen, das müssen

1120
02:29:53,420 --> 02:30:07,060
wir uns dann angucken. Oh nein, das hat noch nie jemand programmiert. Das ist JavaScript

1121
02:30:07,060 --> 02:30:18,140
jetzt, oder? Ah, das ist jetzt JavaScript. Warum? Kegwayt, was hat es damit zu tun? Ach,

1122
02:30:18,140 --> 02:30:32,180
ich glaube, der will einfach nur zeigen, wie ähnlich das zu JavaScript aussieht. Ach,

1123
02:30:32,180 --> 02:30:36,860
der hat, guck, der hat es jetzt nachprogrammiert. Okay, okay, das ist jetzt die.NET-Variante

1124
02:30:36,860 --> 02:30:45,420
davon. Also, das heißt, das ist, das ist, glaube ich, ein Webprojekt. Das ist fail,

1125
02:30:45,420 --> 02:30:51,660
weil man das nicht einfach in einer Konsolenanwendung machen kann. Okay, das sieht irgendwie hässlich

1126
02:30:51,660 --> 02:31:00,140
aus. Ich kann mir da nicht helfen, aber irgendwie sieht das Paynes-Champ aus. Gerade so was

1127
02:31:00,140 --> 02:31:19,380
hier. Wir probieren das gleich mal aus. Azure haben sie es deployed. Okay, das interessiert

1128
02:31:19,380 --> 02:31:30,780
mich nicht. Das ist für mich keine Großplattform, wenn er Linux fehlt. Das interessiert mich

1129
02:31:30,780 --> 02:31:35,740
nicht. Hey, krasser Dude, der hat mal ein gescheites Setup. Guckt euch, okay, er hat

1130
02:31:35,740 --> 02:31:41,060
Light-Theme, ja, das ist schon mal fail. Aber guckt euch mal an, der hat ein gescheites

1131
02:31:41,060 --> 02:31:49,180
Mikro. Der macht Livestreams, Leute. Wenn der Typ macht Livestreams normalerweise, wir

1132
02:31:49,180 --> 02:32:09,060
gucken mal, wie der heißt. David Ortinau, okay. Ortinau. Ist der das? Twitter, YouTube,

1133
02:32:09,060 --> 02:32:13,300
ah, okay, er macht Livestreams vielleicht. Ich habe jetzt eigentlich gedacht, dass der

1134
02:32:13,300 --> 02:32:27,220
auch auf Twitch ist. Sag ich doch, der Dude Livestreamt, bei dem Setup. Ich sag doch,

1135
02:32:27,220 --> 02:32:42,660
der Typ Livestreamt, das sieht man sofort. Ja, das erkennst du sofort am Setup, ob der

1136
02:32:42,660 --> 02:32:49,620
Typ Livestreams macht oder nicht. So, das interessiert mich aber trotzdem nicht. Der

1137
02:32:49,620 --> 02:32:58,420
hat ein gutes Setup, aber ja, das interessiert mich nicht. Ja, Mobile Apps, Stellskram. So,

1138
02:32:58,420 --> 02:33:03,020
was haben wir jetzt? Blazer Features jucken mich auch nicht. Das ist auch Blazer, juckt

1139
02:33:03,020 --> 02:33:15,340
mich null. Warum machen die immer Wetter-Apps? Das ist immer noch Blazer. So, Paints-Champ.

1140
02:33:15,340 --> 02:33:27,540
Fluent Tree-Item. Meine Güte. Nee, nee, nee, nee. Was ist so schlimm an JavaScript im Frontend?

1141
02:33:27,540 --> 02:33:34,340
Ich weiß es nicht. Okay, jetzt kriegen wir Minimal APIs nochmal gezeigt, das haben wir

1142
02:33:34,340 --> 02:33:55,300
ja gerade schon gesehen. Was hat der hier? Oh, jetzt macht er Huge Benchmarks. Jetzt

1143
02:33:55,300 --> 02:34:24,580
zeigt er uns seine krassen Benchmarks. Anzeige ist raus. Die Hälfte. Also, wäre schon immer

1144
02:34:24,580 --> 02:34:41,020
mal nur ein 5-Euro-Server wollte bei 10.000 Web-Socket-Verbindungen. Easy.net 6. Blazer?

1145
02:34:41,020 --> 02:34:45,780
Leute, ist irgendjemand von euch besonders scharf auf Blazer? Ich fand's am Anfang mal geil,

1146
02:34:45,780 --> 02:34:49,580
die Idee, sie scharf im Browser programmieren zu können, aber als ich das mal ausprobiert

1147
02:34:49,580 --> 02:34:55,140
habe, die Web-Assembly-Variante, ist mir aufgefallen, du brauchst eh nach wie vor JavaScript. Spätestens

1148
02:34:55,140 --> 02:35:00,740
wenn du Sachen machen willst, die halt so Interaktionen brauchen von Hand irgendwie Dom-Geschichten

1149
02:35:00,740 --> 02:35:07,380
und ganz ehrlich, so schlimm finde ich JavaScript gar nicht. Also vor allem mit Vue.js oder

1150
02:35:07,380 --> 02:35:20,380
sowas zusammen ist es schon in Ordnung. Ich kann Rider das nicht? Developer Productivity,

1151
02:35:20,380 --> 02:35:32,660
ok, Build-Time-Performance ist immer gut. Blazer-Server juckt mich so gar nicht. Was zeigt der uns

1152
02:35:32,660 --> 02:35:41,380
jetzt? Hot-Reload juckt mich auch nicht. Was ist eigentlich aus dem Samarin-Monotyp geworden,

1153
02:35:41,380 --> 02:35:47,820
dem Spanier? Ist der nicht mal bei Microsoft? Die haben den eingekauft und haben dann gesagt,

1154
02:35:47,820 --> 02:35:56,220
hau ab. So, ml.net, ja gut. Gut, sind wir durch. Interessant, also das mit der Web-App hier

1155
02:35:56,220 --> 02:36:00,300
war eine coole Sache, das gucken wir uns jetzt gleich an. No account, nein ich hab kein Account,

1156
02:36:00,300 --> 02:36:08,540
maybe later. Color Scheme, natürlich Dark. Start, starte das verdammte Spiel. Wieso der

1157
02:36:08,540 --> 02:36:20,300
Blazer-Server, hey du gar nicht. Ich verstehe den Vorteil bloß nicht. Doch ich verstehe

1158
02:36:20,300 --> 02:36:28,980
den Vorteil, insofern wenn man viel sharen will zwischen Backend und Frontend an die Sharp-Klassen

1159
02:36:28,980 --> 02:36:35,460
oder so. Aber ansonsten, weiß nicht. Du mein, du musst jegliche Frontend-Änderung über

1160
02:36:35,460 --> 02:36:41,220
irgendeine Websocket-Verbindung schicken, das ist allein schon vom Design her irgendwie

1161
02:36:41,220 --> 02:36:48,220
weiß nicht fragwürdig. So, also, ach wir müssen das.net-Framework noch installieren.

1162
02:36:48,220 --> 02:36:54,740
Noch mal zumachen. Funktioniert vor allem auf Fullscreen auch mit mehreren Monitoren,

1163
02:36:54,740 --> 02:36:59,500
da das funktioniert. Was dann bloß ganz gut ist, wenn man Exclusive-Mode anmacht, dass

1164
02:36:59,500 --> 02:37:10,300
man hier nicht irgendwelche GUI-Einblendungen bekommt. Also, Windows-Installer x86 x64.

1165
02:37:10,300 --> 02:37:25,580
Let's go. Warum startet Microsoft eigentlich immer mit Punkt 100 hinten? Das ist ja laut

1166
02:37:25,580 --> 02:37:30,340
Versionen quasi die Hotfix-Nummer. Die werden ja wohl kaum bei 100 Hotfixes sein schon.

1167
02:37:30,340 --> 02:37:54,260
So, Installer, Windows, ja. Gut, jetzt können wir Visual Studio aufmachen, denke ich. Jeder

1168
02:37:54,260 --> 02:38:00,460
kommt eine neue Version, ne, glaube ich nicht. Dann wäre 100 ziemlich glatt, das wird dann

1169
02:38:00,460 --> 02:38:28,100
eher so aussehen hier. Auf installieren. Meinung zu WinGet 1.0, ich hab's noch nicht

1170
02:38:28,100 --> 02:38:33,380
ausprobiert. Ich habe aber meine Zweifel, dass es was taugt, weil es wohl Software nur

1171
02:38:33,380 --> 02:38:37,900
unter gewissen Umständen deinstallieren kann. Also, wenn es das passende Package-Format

1172
02:38:37,900 --> 02:38:44,980
irgendwie hat. Naja. Ich werde es mir aber auf jeden Fall anschauen in den nächsten

1173
02:38:44,980 --> 02:38:53,940
Streams. So, also, continue without code. Ich will create new project machen. So, jetzt

1174
02:38:53,940 --> 02:38:58,300
geht's mir. Jetzt müssen wir mal schauen, ob Minimal API, ob das da irgendwie drin steht.

1175
02:38:58,300 --> 02:39:06,740
Mini? Nein. Visual Basic Console Application. Nein, nein, nein, nein, nein, nein. Machen

1176
02:39:06,740 --> 02:39:13,940
wir nicht, wir haben eine Console Application. Warum steht da überhaupt noch.NET Core

1177
02:39:13,940 --> 02:39:18,060
drin? Da müsste da nicht einfach nur.NET drinstehen. Die sind selbst inkonsequent bei

1178
02:39:18,060 --> 02:39:39,780
ihrer Benahmung. Console Applications. Next. Target Framework 6.0 Preview. Ach, muss man

1179
02:39:39,780 --> 02:39:45,220
das über die Kommandozeile erstellen? Ja, Moment, ich würde das aber gerne, ich würde

1180
02:39:45,220 --> 02:39:52,300
das aber gerne über unserer Console Anwendung raus erstellen. Also. Download Chrome. Das

1181
02:39:52,300 --> 02:39:56,700
muss jetzt mal sein. Ich kriege Anfälle, wenn ich umso länger den Müll hier verwenden

1182
02:39:56,700 --> 02:40:06,300
muss. Ich, dass ich Chrome jetzt irgendwie super hypen will, aber Edge ist einfach Paintschamp,

1183
02:40:06,300 --> 02:40:11,180
Alter. Eigentlich muss ich Firefox installieren. Naja, egal. Ich muss jetzt nicht ranten über

1184
02:40:11,180 --> 02:40:16,460
Firefox. Ich verwende ja Firefox immer noch als Main Browser. Aber sie sorgen schon hart

1185
02:40:16,460 --> 02:40:22,860
dafür, dass ich das nicht mehr machen will. Die letzten Versionen, die letzten zwei Jahre.

1186
02:40:22,860 --> 02:40:31,980
Installing. Ja, mach. Was stört sich an Firefox denn zum Beispiel, dass das UI so nach Tablet

1187
02:40:31,980 --> 02:40:43,660
Bedienung aussieht mittlerweile? Was war an diesen Menüs so schlimm? Also Google. Naja,

1188
02:40:43,660 --> 02:41:00,540
Stimme zu. Dotnet 6 Minimal API. Das da? Block. Na, jetzt habe ich den lau gemacht. Wartet

1189
02:41:00,540 --> 02:41:10,500
mal, ich habe mir doch irgendwo einen Block Beitrag kopiert für Minimal API. Ja. Also

1190
02:41:10,500 --> 02:41:31,100
Introducing Minimal API. To try out create a Minimal API. Aber muss das wohl damit machen?

1191
02:41:31,100 --> 02:41:36,580
Aber Moment, kann ich das nicht einfach so so inkluden? Weil das wenn ich was das für

1192
02:41:36,580 --> 02:41:43,300
eine Minischrift wenn ich das natürlich extra. In der Web Anwendung machen wusste, da kann

1193
02:41:43,300 --> 02:41:51,380
ich auch gleich eine Minimal Web Web API Asp.net Core Applikation machen. Web Applikation.

1194
02:41:51,380 --> 02:42:07,500
Nee, gibt's nicht. Ja, das ist ja dumm. Das ist ja dumm. Okay, dann probieren wir das jetzt

1195
02:42:07,500 --> 02:42:14,860
noch mal aus. Dotnet. New. Web. Ja, das ist ja dumm. Dann ist es schon dann ist es schon

1196
02:42:14,860 --> 02:42:31,220
noch mal halb so geil. In die API. So, noch mal öffnen wir das mal. Ja, wir gucken gleich

1197
02:42:31,220 --> 02:42:35,140
mal. Also das müsste also wenn das nicht in der Console Applikation läuft, ist es dumm,

1198
02:42:35,140 --> 02:42:40,460
weil du fängst meistens mit einer Console Applikation an und sagst, na okay, lass es

1199
02:42:40,460 --> 02:42:44,060
doch einfach mal Endlosschleife laufen und triggern über ein Web Request oder sowas.

1200
02:42:44,060 --> 02:42:51,220
Bescheuers. Ich fange ja bestimmt nicht standardmäßig mit einem Mini API Projekt an. Okay, Open

1201
02:42:51,220 --> 02:43:08,860
Open Solution. X to Solution. Wo habe ich das jetzt erstellt da? Mini App. Genau, man

1202
02:43:08,860 --> 02:43:15,420
muss nämlich dann das ASP.NET SDK im Projekt file erweitern. Genau, was ich doof finde,

1203
02:43:15,420 --> 02:43:22,740
das nervt mich eh schon, dass es unterschiedliche Projekte sind. Typen. So, was haben wir denn

1204
02:43:22,740 --> 02:43:49,780
hier? Alter, die Preview-Version ist laggy as fuck. Geht das hier schon? What the f...

1205
02:43:49,780 --> 02:44:19,540
Okay. Wow. Restart. Kacken und waiten. Genau. Okay, nochmal. Okay, ich bin jetzt schon mal

1206
02:44:19,540 --> 02:44:35,060
da. Nochmal. Erstmal direkt ragen auf GitHub. Ist Visual Studio immer so laggy? Nee. Erstens

1207
02:44:35,060 --> 02:44:39,940
ist das eine VM und zweitens ist das eine Preview-Version. Ich finde Visual Studio läuft durchaus

1208
02:44:39,940 --> 02:44:43,620
in Ordnung. Aber ich muss dir auch ehrlich sagen, großen Unterschied zu JetBrains erkenne

1209
02:44:43,620 --> 02:45:04,220
ich nicht. JetBrains ist auch laggy. Geht das jetzt? Warum markiert er das? Warum ist

1210
02:45:04,220 --> 02:45:23,100
das grün? Ah, okay. Okay, es ist wieder kaputt, RIP. Ich fürchte, mit angucken wird es so nichts,

1211
02:45:23,100 --> 02:45:35,660
aber es ist wieder kaputt. Ja gut, Eclipse ist ja kein Vergleich. Eclipse ist ja... Es

1212
02:45:35,660 --> 02:45:44,540
ist halt Eclipse. Ich habe Eclipse zuletzt verwendet in meiner Ausbildung 2007. Kein

1213
02:45:44,540 --> 02:45:49,420
Witz, danach hat es das nie wieder auf. Will ich auch gar nicht. Echt, ich habe da überhaupt

1214
02:45:49,420 --> 02:45:56,900
keinen Bedarf für. Ja, was mache ich denn jetzt, wenn Visual Studio crashet? Haben

1215
02:45:56,900 --> 02:46:03,460
die deswegen Light-Theme? Ist das Dark-Theme kaputt? Moment, das müssen wir jetzt überprüfen.

1216
02:46:03,460 --> 02:46:19,380
Wartet mal, wir stellen mal um auf Light-Theme. Continue without code, okay. Wo stellt man

1217
02:46:19,380 --> 02:46:46,660
das um? Ah, hier. Light, Achtung Leute, Augen zu. Okay, es ist... Hast du in Visual Studio

1218
02:46:46,660 --> 02:46:52,380
auch das Web-Entwicklungs-Dings installiert? Nee, ich habe den Desktop-Workload installiert,

1219
02:46:52,380 --> 02:47:09,900
aber das ist jetzt dafür egal. Was macht das da? Warum highlightet es das da immer?

1220
02:47:09,900 --> 02:47:27,820
Kann ich das jetzt ausführen? Jaja, machen wir... Ja, wir trusten alles, gar kein Thema.

1221
02:47:27,820 --> 02:47:37,620
Okay, das scheint jetzt zu funktionieren mit Light-Theme. Mal gucken, ob ich auch im Editor

1222
02:47:37,620 --> 02:47:43,420
etwas anklicken kann. Wäre es denn, dass es wieder abkackt, wenn ich hier reinklicke

1223
02:47:43,420 --> 02:47:54,860
und das zu mache? Ja, es ist wieder abgekackt. Forever next, danke schön für die Zeit.

1224
02:47:54,860 --> 02:48:05,660
Leute, wir können es nicht angucken, es ist kaputt, es ist broken. Super, perfekt. Tja,

1225
02:48:05,660 --> 02:48:10,900
das war jetzt natürlich nicht so dolle. Ryder? Nein, Ryder kann ich wohl noch schlechter

1226
02:48:10,900 --> 02:48:19,740
verwenden. Ryder hat ja gar keinen Support für experimentelles Zeug. Ich muss aber mal

1227
02:48:19,740 --> 02:48:28,500
was gucken. Meinetwegen mit Notepad ist mir egal. SDK? Guck, es muss Microsoft-Net SDK-Web

1228
02:48:28,500 --> 02:48:35,140
sein. Das ist ziemlich dumm. Da kann ich nicht einfach mit einer Konsolenanwendung starten

1229
02:48:35,140 --> 02:48:41,580
und Minimal-API machen. Auf der anderen Seite, was spricht dagegen, eine Minimal-API mit

1230
02:48:41,580 --> 02:48:53,300
Konsole zu machen? Eigentlich auch nichts. Echt? Aber Ryder sollte doch überhaupt keine

1231
02:48:53,300 --> 02:48:59,260
experimentellen Funktionen davon drin haben. Okay, wir downloaden Ryder, gibt's ja. Testversion,

1232
02:48:59,260 --> 02:49:08,660
runterladen. Kann man das auch auf Englisch machen? Englisch blitz? Ja? Ah nee, continue

1233
02:49:08,660 --> 02:49:20,620
muss ich machen. Download. Mach. Es hat manchmal doch seinen Vorteil, halbwegs schnelle Leitung

1234
02:49:20,620 --> 02:49:38,220
zu haben. Ich agree zu allem JetBrains, ist gut. Detekte der D6er Preview-Version? Müssen

1235
02:49:38,220 --> 02:49:42,780
wir mal schauen. Also installieren wir Ryder, probieren das damit aus, ob es besser funktioniert.

1236
02:49:42,780 --> 02:49:55,300
Next. Next. 466 Bitlauncher? Keine Ahnung. Ja? Nein? Ich weiß es nicht, ich lasse alles.

1237
02:49:55,300 --> 02:50:09,660
Was ist denn der JetBrains EET-EETW-Service? Updates? Oder was ist das? Was ist EETW?

1238
02:50:09,660 --> 02:50:35,380
Advanced Excellent Technology. Keine Ahnung, was EETW ist. Massive Speed. Residenz Leaper.

1239
02:50:35,380 --> 02:51:05,220
Ach, wie schön es ist, das Unterwindhaus auf Installer zu warten. Düdü. So viele Java

1240
02:51:05,220 --> 02:51:16,980
Sachen, die man entpacken muss für eine.NET Entwicklungsumgebung. Schneller als Azure

1241
02:51:16,980 --> 02:51:26,180
SSDs, ja, das ist auch keine Kunst. Vor allem bei vielen kleinen Dateien. Naja, es ist in

1242
02:51:26,180 --> 02:51:30,340
der VM, aber ich meine, das ist auf einer SSD, ne? Also das ist jetzt nicht so, dass

1243
02:51:30,340 --> 02:51:35,420
es IO-technisch irgendwie super schlecht Performance hätte. Die VM ist auch gut ausgestattet. Guckt

1244
02:51:35,420 --> 02:51:41,860
euch das mal an, ich meine, die ist... Die hat 8G RAM und 4 CPU Kerne, das sollte reichen.

1245
02:51:41,860 --> 02:52:04,820
Run JetBrains Rider. Dann reiten wir mal los. So, startet es jetzt? Oder hat es keinen...

1246
02:52:04,820 --> 02:52:26,540
Hat sich doch gedacht, kein Bock. Ah, jetzt. Nonsent. Dark, Nexts, Virtual Studio Dark,

1247
02:52:26,540 --> 02:52:38,820
Nexts, Nexts. Ach guck mal, er erkennt es tatsächlich cool. Nexts, Nexts, Nexts. Ja,

1248
02:52:38,820 --> 02:52:47,860
das ist äußerst nice. Da kann man nur sagen, dass er das automatisch erkennt. Da ist hier

1249
02:52:47,860 --> 02:52:55,980
Hut ab. Hätte ich nicht gedacht. Ansonsten sind sie immer was Preview-Versionen und vor

1250
02:52:55,980 --> 02:53:01,620
allem Preview- also Language-Features angeht, sind, wobei die haben wir jetzt ja hier nicht,

1251
02:53:01,620 --> 02:53:09,740
sind sie immer relativ zurückhaltend. So. Wisst ihr, was mich auch immer richtig triggert

1252
02:53:09,740 --> 02:53:24,820
bei Windows? Dass mein Heimatverzeichnis nicht in Quick Access drin ist. Jaja, ich

1253
02:53:24,820 --> 02:53:33,700
truste Microsoft natürlich. Ihr nicht? So, mal schauen, ob es in Rider funktioniert.

1254
02:53:33,700 --> 02:54:02,220
PauseChamp. PauseChamp. Mal groß machen. Okay, Rider funktioniert. Schonmal geil.

1255
02:54:02,220 --> 02:54:18,460
Windows Defender, Windows Defender, fuck mich schnell ab, Alter. Jaja, mach mal. Der Elevator,

1256
02:54:18,460 --> 02:54:25,220
der fährt uns jetzt hoch. Ihr müsst euch mal vorstellen, wie viele Hex die da einbauen

1257
02:54:25,220 --> 02:54:30,020
müssen. Hex für Windows, Hex für Linux, Hex für Mac. So, das ist wohl anscheinend

1258
02:54:30,020 --> 02:54:46,740
jetzt die Standardgeschichte. Das heißt, wenn ich das jetzt runne,.net run, dann läuft

1259
02:54:46,740 --> 02:54:54,660
hier auf Local Host Port 5000 ein Hello World. Okay, nice. Das ist schon cool, wie kurz und

1260
02:54:54,660 --> 02:54:58,620
knackig das ist. Da kann man sich wirklich nicht beschweren. Was mich jetzt natürlich

1261
02:54:58,620 --> 02:55:04,700
noch interessieren würde, ist... Also, es spricht doch eigentlich überhaupt nichts

1262
02:55:04,700 --> 02:55:11,140
dagegen, meine nächste Konsolenanwendung einfach, anstatt eine Console-Application, einfach

1263
02:55:11,140 --> 02:55:18,900
eine Minimal-AP-Application zu machen. Oh nein, IP-Leak. Can I also jetzt hier auch

1264
02:55:18,900 --> 02:55:28,300
sagen, App, use RTTPS Redirection? Nee, macht er ja schon. Wollte das eigentlich disablen?

1265
02:55:28,300 --> 02:55:45,780
Weiß gar nicht, wie das geht. Ach, hier hat man diesen Kram. App-Settings, Launch-Settings.

1266
02:55:45,780 --> 02:55:55,700
Ja, nice. Aber das heißt, ich kann theoretisch den Kram hier nehmen. Das hier ist mein Main.

1267
02:55:55,700 --> 02:56:03,820
Warte mal, await, up. Moment, wenn ich jetzt parallel dazu was machen will, dann kann ich

1268
02:56:03,820 --> 02:56:08,700
das jetzt nicht einfach starten. Wenn ich hier was mach, dann führte das ja nie aus. Weil

1269
02:56:08,700 --> 02:56:15,460
da wartet ja hier, bis das beendet ist. Geht das gleiche auch auf Linux? Ja, ja. Das müssen

1270
02:56:15,460 --> 02:56:20,860
wir nicht aufbauen, dass das geht. Das geht, auf jeden Fall. Das heißt, wenn ich jetzt

1271
02:56:20,860 --> 02:56:24,980
mal angenommen, ich hab jetzt eine Konsolenanwendung oder noch, machen wir es doch mal umgedreht.

1272
02:56:24,980 --> 02:56:36,980
Machen wir es doch mal umgedreht. Ich nehme dieses ganze Ding hier. Das müsste doch eigentlich

1273
02:56:36,980 --> 02:56:41,860
funktionieren. Also das hier ist mein Main. Wir machen jetzt mal eine extra Datei. Probieren

1274
02:56:41,860 --> 02:56:51,340
wir das mal aus. Add New File, Server, CS. So, dann kopieren wir den ganzen Crap hier

1275
02:56:51,340 --> 02:57:12,900
rein. Äh, ja gut, das machen wir vielleicht nicht hier. Keine Ahnung, machen wir hier

1276
02:57:12,900 --> 02:57:33,940
mal. Public Async Task Run. Wo kommen denn die Arcs her? Wo kommt denn das her? Ach,

1277
02:57:33,940 --> 02:57:42,940
das ist Standard, das ist Main. Ah, ja, ja. Äh, Arcs ist ein String Array, glaubt ne?

1278
02:57:42,940 --> 02:57:49,500
Ok, das heißt, wir können jetzt im Endeffekt sowas hier machen. Task Run. Hallo? Task?

1279
02:57:49,500 --> 02:58:08,500
Task Run? Äh, ups. Nein, was mach ich denn da? Server? Irgendwie sowas, machen wir Static.

1280
02:58:08,500 --> 02:58:25,420
Run? Arcs. So. Sowas hier in die Richtung muss ich schon machen. So, und jetzt könnte

1281
02:58:25,420 --> 02:58:36,020
ich hier mal eine Konsolenanwendung programmieren. Wenn ich das so richtig sehe, ne? Dann würde

1282
02:58:36,020 --> 02:58:41,340
ich einfach hier den Server starten. Async. Und hier unten könnte ich jetzt meine Konsolenanwendung

1283
02:58:41,340 --> 02:58:55,940
machen. Ah, ja gut, ne. Ich muss hier unten dann warten drauf. Aber von der Idee her funktioniert

1284
02:58:55,940 --> 02:59:00,020
das, ja. Von der Idee her funktioniert das. Vielleicht will ich da auch gar nicht drauf

1285
02:59:00,020 --> 02:59:05,940
warten und will das bloß so lange laufen haben, bis meine Konsolenanwendung fertig

1286
02:59:05,940 --> 02:59:12,140
ist. Ne, ansonsten müsste ich halt irgendwie sowas hier sagen. Konnte man nicht irgendwie...

1287
02:59:12,140 --> 02:59:21,460
Ach ne, Moment, das war Using. Ne, jetzt wieder was anderes. Kann man, kann man ein Task Using

1288
02:59:21,460 --> 02:59:33,380
machen? Ernsthaft? Ne, oder? Das hätte mich jetzt auch schon, das hätte mich jetzt stark

1289
02:59:33,380 --> 02:59:39,940
gewundert, Alter, wenn das so funktioniert. Wobei doch, das funktioniert. Aber der wollte

1290
02:59:39,940 --> 02:59:49,740
den ich disposen, weil der noch runnt. Ja, sowas müsste ich jetzt hier machen, quasi.

1291
02:59:49,740 --> 02:59:55,620
Genau. Das ist tatsächlich äußerst nice, muss ich sagen. Jetzt kann ich hier meinen

1292
02:59:55,620 --> 03:00:03,180
Konsolen-Shit machen. Was auch immer ich da machen will. Und nebenbei habe ich einen Web-Server

1293
03:00:03,180 --> 03:00:08,940
laufen, wo ich dann beispielsweise irgendwelche Requests draus bekommen kann. Ich finde das,

1294
03:00:08,940 --> 03:00:14,380
ich finde das cool. Vor allem ist das halt wirklich übersichtlich, ne? Im Vergleich

1295
03:00:14,380 --> 03:00:19,820
zu einem kompletten ASP.NET Core Projekt ist das hier halt nix. Und ihr müsst zugeben,

1296
03:00:19,820 --> 03:00:27,380
das hier sieht ziemlich nach irgendeiner Express.js oder irgendwie Sinatra, Flask, was auch immer,

1297
03:00:27,380 --> 03:00:36,380
so ein minimalen Web-Server-Ding aus. Der ist schon nice. Das gefällt mir, das hat was.

1298
03:00:36,380 --> 03:00:43,500
So, und jetzt kann ich hier meinen Konsolen-Anwendung-Shit machen. Und selbst wenn ich einen Endlosschleifer

1299
03:00:43,500 --> 03:00:51,220
fabriziere in meiner Konsolen-Anwendung, so richtig mit blocken, nicht mit Asyncrate,

1300
03:00:51,220 --> 03:00:58,940
also richtig blocken, sekundenweise sollte eigentlich doch mein Web-Server immer noch

1301
03:00:58,940 --> 03:01:14,700
weiterlaufen, weil er in einem separaten Thread läuft. Guck, funktioniert. Ist cool, ist cool.

1302
03:01:14,700 --> 03:01:22,420
Ich progge es, gefällt mir. Leute, ich muss mal kurz Licht anschalten, muss ich mal kurz

1303
03:01:22,420 --> 03:01:28,340
in meine Heimautomatisierung gehen auf den zweiten Bildschirm. Fenster, Decke, ja Licht

1304
03:01:28,340 --> 03:01:45,500
an. Ja, nice, also das finde ich cool. Das soll uns auf jeden Fall da lassen. Licht an, Flashbang.

1305
03:01:45,500 --> 03:01:51,220
Wie könnte man das jetzt cancelen? Ach nee, Moment, ich muss die Schleife hier cancelen,

1306
03:01:51,220 --> 03:01:57,660
das ist ja woran, wo es wirklich hängt. Sehr gut, gefällt mir, nice. Jetzt nicht unbedingt

1307
03:01:57,660 --> 03:02:01,260
zu das Killer-Feature, wo ich gesagt habe, das hätte ich schon immer gebraucht, aber

1308
03:02:01,260 --> 03:02:04,940
das finde ich cool, weil es kommt doch total oft vor, dass man sagt, hey ich probiere mal

1309
03:02:04,940 --> 03:02:10,820
was aus, da machst du eine Konsolen-Anwendung mit irgendwie zwanzig Zeilen, das funktioniert

1310
03:02:10,820 --> 03:02:16,780
und dann, keine Ahnung, guckst du ob du die Daten nicht irgendwie abgerufen kriegst, irgendwas,

1311
03:02:16,780 --> 03:02:23,780
es ist auf jeden Fall nice, dass man easy eine Web-AP adden kann. Ja, Moment, könnte ich

1312
03:02:23,780 --> 03:02:30,580
das jetzt auch, Moment, könnte ich das jetzt auch aus einer Windows-Forms-Anwendung machen?

1313
03:02:30,580 --> 03:02:39,100
Geht das Ganze auf Linux via.NET Core? Ja. Mal angenommen, ich möchte jetzt eine Web-Anwendung,

1314
03:02:39,100 --> 03:02:46,180
eine Windows-Forms-Anwendung machen, die einen Web-Server laufen hat. Das geht nicht, ne?

1315
03:02:46,180 --> 03:03:10,700
Kann ich eine Forms adden hier? Ich glaube nicht. Ich weiß nicht wie. Kann man mit Rider

1316
03:03:10,700 --> 03:03:26,980
eine Windows-Forms-Anwendung machen? Könnte nur gehen, wenn Pandora... Hat sogar Designer

1317
03:03:26,980 --> 03:03:45,060
Poggers. Warum empty solution? Er singt, was auch immer er sich singt. Könnte ich jetzt

1318
03:03:45,060 --> 03:03:55,260
hier sowas sagen? Wie geht denn das mit Windows-Forms, Alter? Application? Ne, da muss ich erstmal

1319
03:03:55,260 --> 03:04:07,980
die Referenz hinzufügen. Fuck, wie geht denn das jetzt? Ich hab keine Ahnung. Forms? Wie

1320
03:04:07,980 --> 03:04:20,260
funktioniert das? Was brauche ich für Packages für Windows-Forms? Das SDK muss das Richtige

1321
03:04:20,260 --> 03:04:28,020
sein. Ja, aber das ist dumm, wenn ich das SDK umstellen muss. Ich brauche ja das Web-SDK,

1322
03:04:28,020 --> 03:04:51,220
das die Minimal-API machen kann. Okay, wir machen eine neue Windows-Forms..NET,.NET,

1323
03:04:51,220 --> 03:05:05,180
was gibt's denn da? New? WinForms. WinForms-O. Forms. Excellent. Forms. Alter, wir sind ja

1324
03:05:05,180 --> 03:05:28,900
unter Windows. Open. Forms. Trust. New Window. So, jetzt mach hinne. Oh, die haben echt einen

1325
03:05:28,900 --> 03:05:35,340
Designer in Rider? Ich muss euch ehrlich sagen, ich hab Rider unter Windows noch nie verwendet

1326
03:05:35,340 --> 03:05:46,620
und schon gar nicht für Windows-Forms gedönnt. Form 1. Ne, die haben keinen Designer. Ach

1327
03:05:46,620 --> 03:06:00,140
doch, Open Designer. Guckt euch das mal. Exclude directory ist alles weg. Project Reference

1328
03:06:00,140 --> 03:06:08,740
are missing. Okay, ich glaube, das funktioniert nicht so ganz, wie man sich das vorstellt.

1329
03:06:08,740 --> 03:06:21,420
Oder? Pausierungs-Champ. Guckt da. Sogar mit Windows-Forms-Designer. Windows-Forms in all

1330
03:06:21,420 --> 03:06:30,420
seine Hässlichkeit. Okay, was muss man hier alles für Usings einbinden und Packages? Das

1331
03:06:30,420 --> 03:06:41,620
probiere ich jetzt aus. Using System Windows-Forms. Exquisite. Das brauchen wir jetzt. Probieren

1332
03:06:41,620 --> 03:06:52,060
wir jetzt, das andere einzubinden. Windows-Forms gibt's nicht. No. Wie, wie, wie, wie? Ja,

1333
03:06:52,060 --> 03:06:58,060
da muss ich echt das SDK umstellen. Aber wenn ich das SDK umstelle, dann gibt's Windows-Forms

1334
03:06:58,060 --> 03:07:11,180
nicht mehr. Wenn Windows-Forms trotzdem läuft, muss ich das aber im Nachhinein hinkriegen.

1335
03:07:11,180 --> 03:07:32,860
Wartet mal. Unload? Unload? Wie editiere ich hier edit? Ah, hier. Microsoft.net SDK. Brauche

1336
03:07:32,860 --> 03:07:46,100
Windows-Forms-True. Kann ich das beim anderen auch einfach reinschreiben? Hack-Wait. Moment.

1337
03:07:46,100 --> 03:07:52,260
Kann ich das beim anderen auch einfach reinschreiben? Jetzt wird's, jetzt wird's echt Hack-Hack-Hack-Hacker-Mans.

1338
03:07:52,260 --> 03:08:19,660
Unload? Geht das? Using by including Windows? Target Platform must be set to Windows. Was?

1339
03:08:19,660 --> 03:08:32,780
Oh. Jetzt hab ich's, jetzt hab ich's ge, ge, ge, gebraked, Alter. Jetzt hab ich's gebraked.

1340
03:08:32,780 --> 03:08:44,100
Okay, dann unloaden wir das jetzt nochmal. Wo ist denn dieser Unload-Knopf? Das ist so

1341
03:08:44,100 --> 03:08:49,460
klein hier. Und machen einfach das da in das andere rein und gucken dann, ob's funktioniert.

1342
03:08:49,460 --> 03:09:18,260
So. Reload. Okay, das funktioniert jetzt noch. Okay, warum auch immer. So, das heißt, ich

1343
03:09:18,260 --> 03:09:26,900
kann jetzt einfach den Kram rüber kopieren. What the fuck? Jaja, ich bin noch wach, warum

1344
03:09:26,900 --> 03:09:31,460
nicht? Das heißt, ich kann den ganzen Mist hier einfach rüber kopieren. Das sollte jetzt

1345
03:09:31,460 --> 03:09:57,060
funktionieren, oder wie? Da bin ich jetzt mal gespannt. Ah, HTML, wait. Ja, anscheinend

1346
03:09:57,060 --> 03:10:10,700
funktioniert das tatsächlich. Anscheinend geht das. Na gut, jetzt hab ich ja halt mein

1347
03:10:10,700 --> 03:10:36,940
Main, aber ist doch egal. Anscheinend funktioniert das wirklich. Ja, anscheinend geht das echt.

1348
03:10:36,940 --> 03:10:44,300
Ach so, Moment, wenn ich jetzt Wild True mache, starten natürlich das Windows nicht, das ist

1349
03:10:44,300 --> 03:11:07,180
ja logisch. Lul. Ähm, also klar. Das klappt echt? Das klappt? Ich hab ne Windows Forms-Anwendung

1350
03:11:07,180 --> 03:11:18,020
mit dem Webseuer laufen im Hintergrund. Ja, das ist cool. Ja, das ist wirklich nice. Das

1351
03:11:18,020 --> 03:11:21,940
ist wirklich nice. Wisst ihr, was man da jetzt machen kann? Wisst ihr, was man da jetzt machen

1352
03:11:21,940 --> 03:11:26,300
kann? Das probier ich jetzt. Das probieren wir jetzt mal aus, ob das funktioniert. Das

1353
03:11:26,300 --> 03:11:31,500
heißt, ich könnte jetzt zum Beispiel über den Web-AP-Aufruf triggern, dass der, keine

1354
03:11:31,500 --> 03:11:38,260
Ahnung, dass der Hintergrund ändert oder irgendwas, ja. Warum soll das nicht klappen? Weil das

1355
03:11:38,260 --> 03:11:43,860
früher ziemlich kompliziert war, ASP.NET und Windows Forms in einem Projekt zu verwenden.

1356
03:11:43,860 --> 03:11:54,300
Das ist, das ist cool. So, wie kriege ich, Moment, wie kriege ich das jetzt verbunden?

1357
03:11:54,300 --> 03:12:02,300
Ähm, komm, wir machen das. Wir machen jetzt einfach einen Event, was der aufruft. Ähm,

1358
03:12:02,300 --> 03:12:14,700
public event, keine Ahnung, clicked, nee, keine Ahnung, on request, ich auch immer.

1359
03:12:14,700 --> 03:12:20,340
So, äh, und das rufen wir jetzt hier drinnen auf. Wir müssen das ein bisschen größer

1360
03:12:20,340 --> 03:12:26,580
machen übrigens, ein bisschen, bisschen klein, das Ganze. Komm mal, das mag ich übrigens

1361
03:12:26,580 --> 03:12:33,500
an Ryder auch, dass der den Kram hier so schön klammert, obwohl ich nur eine Klammer gemacht

1362
03:12:33,500 --> 03:12:44,940
hab und sowas. Invoke. Was hat er für Schmerzen? Was mag er, was mag er nicht? Cannot access,

1363
03:12:44,940 --> 03:12:50,540
ja, das ist klar. Public static event, das ist zwar nicht so die schöne englische Art,

1364
03:12:50,540 --> 03:12:55,260
das zu machen. Sagt man das überhaupt? Nein. Ähm, okay, jetzt, jetzt kriege ich quasi

1365
03:12:55,260 --> 03:13:00,900
dieses Event gefeuert für jedes, für jede Seite, für jedes Mal, wenn ich die Seite

1366
03:13:00,900 --> 03:13:06,460
hier aufrufe. Und jetzt kann ich in meinen Windows Forms gehen, wenn das, wenn das so

1367
03:13:06,460 --> 03:13:10,700
alles klappt, wie ich mir das vorstelle. Dann machen wir diesen hässlichen Designer

1368
03:13:10,700 --> 03:13:18,420
auf. Und, äh, wie macht man da jetzt überhaupt Buttons und so rein? Sieht, sieht ja noch

1369
03:13:18,420 --> 03:13:22,980
aus wie Windows XP. Wie mache ich da jetzt einen Button rein? Hier, das ist der Windows

1370
03:13:22,980 --> 03:13:36,100
Forms Button. Button. Oh. Huge, massive Button kommt da hin. Oh. Und wie kann man hier die

1371
03:13:36,100 --> 03:13:39,460
einstellen? Sag mal, ist das nicht komplett falsch rum wie in Visual Studio? In Visual

1372
03:13:39,460 --> 03:13:46,980
Studio ist das rechts, links und das hier links, rechts. Hm. So. Button Text, was ist

1373
03:13:46,980 --> 03:13:55,900
Button Standard Text? Button Standard Text ist Null. So. Jetzt gehen wir da rein und

1374
03:13:55,900 --> 03:14:10,100
subscriben das. Äh. Open Code. So. Form 1 Initialize. So. Und da gehen wir jetzt hin.

1375
03:14:10,100 --> 03:14:21,340
Mein Mauszeiger ist weg. Mein Mauszeiger ist weg. Mein Mauszeiger ist weg. Und ich kann

1376
03:14:21,340 --> 03:14:26,220
nicht schreiben da drin. Mach ich das verkehrt? Hat jemand eine Ahnung, warum ich da nicht

1377
03:14:26,220 --> 03:14:45,060
editieren kann drin? Es ist, es ist RIP, oder? Okay, müssen wir neu starten. Open. Forms.

1378
03:14:45,060 --> 03:14:51,900
Jawoll. New Window. Okay, das Ding hier können wir schließen. Brauchen wir nicht mehr. So.

1379
03:14:51,900 --> 03:14:55,340
Mal gucken, mal gucken, ob ich jetzt noch editieren darf. Ah, jetzt darf ich wieder editieren.

1380
03:14:55,340 --> 03:15:06,780
Okay, alles klar. Also gehen wir da mal rein. Oh. Ey. Ah, jetzt, jetzt darf ich auch editieren.

1381
03:15:06,780 --> 03:15:20,380
So. Und jetzt sagen wir hier Server. What the fuck? Ah, jetzt hat er es. Server. On Request.

1382
03:15:20,380 --> 03:15:32,300
Oh. Und jetzt zählen wir für jeden Request eins hoch. This invoke. Äh. Oh. Wie, wie?

1383
03:15:32,300 --> 03:15:39,100
Och, fuck, das habe ich schon so lange nicht mal verwendet. Wie ging das jetzt so? Invoke.

1384
03:15:39,100 --> 03:15:54,380
Button. Text. Gleich. Jetzt brauchen wir einen, einen, einen Counter oder so. Private. Int.

1385
03:15:54,380 --> 03:16:06,140
Das ist natürlich wahnsinnig, wahnsinnig multithread safe und alles, ne? Counter plus plus.

1386
03:16:06,140 --> 03:16:22,060
Achso, da kann man kein insetzen. Äh. Warte mal. Nee, das, das funktioniert. Aber was

1387
03:16:22,060 --> 03:16:29,660
ist das hier für, für, für ein Ding? Warum kann er das Invoke nicht machen? Ja, genau,

1388
03:16:29,660 --> 03:16:36,420
Counter to String. So, so. Richtig. Äh, was hat er für Schmerzen mit dem, mit dem Invoke?

1389
03:16:36,420 --> 03:17:00,940
When forms this invoke. Äh. Warum geht das nicht? New Action. Alles klar. So. Ah, yes.

1390
03:17:00,940 --> 03:17:05,580
Excellent. Big brain tactics, ja. So. Also, wenn ich das jetzt starte und die Seite mehrfach

1391
03:17:05,580 --> 03:17:10,180
aufrufe, sollte ich, also passiert gar nichts und wenn ich die Seite aufrufe, zählt der

1392
03:17:10,180 --> 03:17:22,620
Button hoch. Nein. Doch. Oh, ist das big brain, Alter. Guckt euch das mal an hier. When

1393
03:17:22,620 --> 03:17:38,860
aus Forms mit Web API Server. Das ist richtig nice. Stimmt. Counter plus plus Counter hast

1394
03:17:38,860 --> 03:17:43,100
du recht. Das ist cool. Ich mein nicht, dass ich jetzt schon immer mal Windows Forms Button

1395
03:17:43,100 --> 03:17:49,700
haben wollte, den ich per Web Request hochzählen kann. Hey, ne coole Sache ist es auf jeden

1396
03:17:49,700 --> 03:18:00,340
Fall. Nicht, wie gesagt, nicht, dass man es groß brauchen würde oder so, aber es ist

1397
03:18:00,340 --> 03:18:07,340
nice. Das gefällt mir. Es hörte übrigens auch nie auf. Deswegen sollte ich vielleicht

1398
03:18:07,340 --> 03:18:12,100
hier mal dieses await task einfach schlicht und ergreifend sein lassen, dass es sich beendet.

1399
03:18:12,100 --> 03:18:22,740
Das kann ich weglassen. Ja, wirklich sehr, sehr nice. Nein, nein, nein, nicht erwarten,

1400
03:18:22,740 --> 03:18:34,340
Alter. Auf jeden Fall eine äußerst coole Geschichte. Mehr können wir jetzt nicht machen.

1401
03:18:34,340 --> 03:18:39,180
Ging das vorher nicht auch schon? Es war vorher gar nicht so einfach, einen Web Server in

1402
03:18:39,180 --> 03:18:45,300
eine Windows Forms Anwendung zu bekommen. Und dann musstest du ja irgendwie gucken,

1403
03:18:45,300 --> 03:18:52,420
dass du dein Routing hinbekommst, also sprich, dass unter Slash die Route gemapt wird und

1404
03:18:52,420 --> 03:19:11,060
sowas. Jaja, das ging alles irgendwie früher auch schon, aber nicht so. Es ist nice, das

1405
03:19:11,060 --> 03:19:19,540
finde ich cool. Ja, also das Testen hat sich echt gelohnt. Was ist eine Windows Forms Anwendung,

1406
03:19:19,540 --> 03:19:24,260
was so alt ist, das musst du eigentlich gar nicht kennen. Das ist so das Oldschool Windows

1407
03:19:24,260 --> 03:19:32,340
UI, das hier. Das, was man von Windows XP noch kennt und Windows 2000. Das, was man

1408
03:19:32,340 --> 03:19:46,020
quasi so seit Windows 2000 kennt und teilweise 1998 noch. So richtig Oldschool Windows GUI.

1409
03:19:46,020 --> 03:19:55,940
Das ist cool. Das gefällt mir. Das gefällt mir echt, das hat was. Easy Web API auch in

1410
03:19:55,940 --> 03:20:01,340
einer GUI Anwendung. Hätte Microsoft jetzt nur noch eine gescheite GUI Anwendung, ist

1411
03:20:01,340 --> 03:20:15,540
Windows Forms DPI aware? Windows Forms ist quasi von nix aware. Windows Forms kann nicht

1412
03:20:15,540 --> 03:20:25,220
mal Emojis in einem Text Control, das was sonst alle können. Deswegen kann man ja auch,

1413
03:20:25,220 --> 03:20:29,420
was ein Unding ist in der heutigen Zeit, deswegen kann ich mir jetzt ja auch hier mal ein paar

1414
03:20:29,420 --> 03:20:35,780
Emojis kopieren und gehe in Node Patternstelle fest, es gibt keine farbigen Emojis und ich

1415
03:20:35,780 --> 03:20:40,420
gehe in Word Patternstelle fest, es gibt keine farbigen Emojis und ich gehe in irgendein

1416
03:20:40,420 --> 03:20:45,940
x-beliebiges anderes Programm, was in Windows dabei ist und es gibt keine farbigen Emojis.

1417
03:20:45,940 --> 03:20:52,580
Es gibt nur farbige Emojis in neueren Programmen, die eben den Kram unterstützen mit dem neuen

1418
03:20:52,580 --> 03:20:58,300
Windows Font Renderer und da sind die Windows eigenen Programme schlicht und ergreifend

1419
03:20:58,300 --> 03:21:04,980
einfach zu schlecht für. Ich habe übrigens keine Ahnung, kann Word das? Wie sieht das

1420
03:21:04,980 --> 03:21:14,420
mit Word aus? Wir installieren uns jetzt Word aus dem Store, ich sag's euch. Word, irgendeine

1421
03:21:14,420 --> 03:21:41,900
Trial Version gibt's das? For one person. Lul. Jaja, ist klar. Ob das das originale

1422
03:21:41,900 --> 03:21:52,140
Word ist? Ich bezweifel's ja. Ach nee. Mein Gott, der Store ist so dermaßen crap. Okay,

1423
03:21:52,140 --> 03:21:57,820
gut, also Word und Steadiness nicht. Hat Windows irgendein? Moment, das ist, das ist. Hab ich

1424
03:21:57,820 --> 03:22:04,220
gerade den Windows Store aufgemacht auf meinem Host? Moment, ich wollte natürlich den Windows

1425
03:22:04,220 --> 03:22:10,260
Store nicht auf meinem Host aufmachen, ich wollte den Windows Store natürlich. Ich hätte

1426
03:22:10,260 --> 03:22:21,380
mir fast auf meinem Host Office installiert, Alter. Probier mal den Visual Studio Editor,

1427
03:22:21,380 --> 03:22:29,500
der kann das auch nicht. Aber was es kann ist via Scout. Visual Studio Code kann das.

1428
03:22:29,500 --> 03:22:48,300
Warum? Weil's auf Chrome basiert. Lul. Ich weiß gar nicht, ob Visual Studio Emoji variablen

1429
03:22:48,300 --> 03:22:58,020
kann. Ich glaube nicht. Die tun sich doch mit Unicode Zeichen schwer in variablen Namen.

1430
03:22:58,020 --> 03:23:04,500
Ich hab übrigens einen 20-Euro-Gutschein im Microsoft Store gewonnen, weil ich gefragt

1431
03:23:04,500 --> 03:23:14,740
habe, wann sie Emoji Support in C Sharp einbauen. Letztes Jahr schon oder so. Ich hab irgendwie

1432
03:23:14,740 --> 03:23:19,060
eine richtig dumme Frage gestellt, weil ich wollte, dass sie das drannehmen. Da hab ich

1433
03:23:19,060 --> 03:23:25,100
auf Twitter gefragt, so, when will Emoji Support edit to C Sharp, irgendwie sowas in

1434
03:23:25,100 --> 03:23:31,500
der Richtung. Und da haben sie das dran genommen und haben kurz drüber gelacht und danach hat

1435
03:23:31,500 --> 03:23:36,540
mich irgendeine Supportfrau von Microsoft angeschrieben, die übrigens Singleton hieß,

1436
03:23:36,540 --> 03:23:47,260
lustigerweise. Passt ja. Dass ich einen Microsoft Store Gutschein gewonnen hab. Guck, Visual

1437
03:23:47,260 --> 03:24:03,100
Studio Code kann das. Visual Studio Code kann das. Was? OneNote kann das auch? OneNote?

1438
03:24:03,100 --> 03:24:07,900
Warum findet man OneNote nicht, wenn man nach Notes sucht? Warum ist Windows so scheiße

1439
03:24:07,900 --> 03:24:13,820
in manchen Belangen? Warum finde ich, wenn ich nach Notes suche, nicht OneNote? Warum

1440
03:24:13,820 --> 03:24:23,180
muss ich OneNote eingeben, dass es das startet? Kann ich das offline verwenden? Ist das möglich?

1441
03:24:23,180 --> 03:24:30,540
Es geht nicht. Ich kann das nicht offline verwenden, ne? Mein Gott, diese Anwendungen

1442
03:24:30,540 --> 03:24:42,820
sind so beschissen, Alter. Das Login-Feld kann das. So kacke. Ich mein, die Suche kann

1443
03:24:42,820 --> 03:24:50,620
wenigstens Color Emojis, ja? Windows ist so Paints-Champ in manchen Sachen. Das heißt

1444
03:24:50,620 --> 03:24:55,700
nicht, dass andere wirklich viel besser sind, aber es ist halt nur mal das, was ich jetzt

1445
03:24:55,700 --> 03:25:02,860
verwende. Iiih, warum ist da... Fuck. Moment, was macht der da? Installiert der gerade

1446
03:25:02,860 --> 03:25:21,100
Xing nach, weil ich da das erste Mal drauf geklickt hab? Warum ist das so schlecht? Und

1447
03:25:21,100 --> 03:25:33,180
warum ist da Word drauf? Ha! Wie sie einen verarschen wollen, Alter! Chebated! Warum

1448
03:25:33,180 --> 03:25:49,340
Xing? Ja... Was ist das denn? Das kann sie ja nur mal installieren hier. Oh! Oh! Es

1449
03:25:49,340 --> 03:25:59,140
ist wirklich lächerlich, ne? Wirklich lächerlich, ja. Office. Welcome! Sign in! Warum kann ich

1450
03:25:59,140 --> 03:26:06,660
eigentlich mein PC nicht einfach benutzen, ohne 30.000 Sachen nachinstallieren zu müssen,

1451
03:26:06,660 --> 03:26:10,780
wofür ich irgendwelche Online-Zugänge und Cloud-Sachen brauche? Einfach nur verwenden.

1452
03:26:10,780 --> 03:26:20,780
Microsoft To Do geht auch nicht. Öffnet sich eigentlich standardmäßig irgendwas? Trading

1453
03:26:20,780 --> 03:26:30,020
Account? What? Ich kann auch kein Emoji-Support. Kein Emoji-Support, alles kein Emoji-Support.

1454
03:26:30,020 --> 03:26:35,340
Ah, das hat jetzt... Guck mal, da siehst du das nur UWP-Anwendung. Das hat Emoji-Support.

1455
03:26:35,340 --> 03:26:43,340
Moment, ich kann nicht mal To Do's machen offline. Ich will To Do's anlegen auf meinem

1456
03:26:43,340 --> 03:26:50,380
Rechner. Das geht nur mit Account. Warum ist das alles so schlecht? Warum ist das so unglaublich

1457
03:26:50,380 --> 03:27:00,540
schlecht unter Windows? Krasser Scheiß, ey. Das kannst du jetzt sein. Feedback Hub. Guck

1458
03:27:00,540 --> 03:27:07,180
mal, ob wenigstens der Feedback Hub Emojis kann. Jawoll. Report. Summarize your Feedback,

1459
03:27:07,180 --> 03:27:20,380
keqwe, next. Ja, scheiß drauf. Oh, leaked. Leaked. Kennst du To Do-Txt? Ja, das habe

1460
03:27:20,380 --> 03:27:25,660
ich vor 10 Jahren mal verwendet. Mal gucken ob Paint 3D. Paint 3D sollte doch Emojis können.

1461
03:27:25,660 --> 03:27:42,060
Das ist doch Bleeding Edge Shit. Endlich mal was, was Emoji-Support hat. Aber guck mal,

1462
03:27:42,060 --> 03:27:47,900
das ist so der krasse Rückschritt in den neueren Anwendungen. Das ist so der krasse

1463
03:27:47,900 --> 03:27:54,020
Rückschritt. Ich kann nicht einfach die Schriftgröße auswählen, die ich haben will. Nein, ich muss

1464
03:27:54,020 --> 03:27:58,460
die vorgefertigte Schriftgröße von Microsoft verwenden. Früher konnte ich immer in diese

1465
03:27:58,460 --> 03:28:03,700
Felder reinklicken und eine Zahl einstellen. Aber nein, das geht jetzt nicht. Willst du

1466
03:28:03,700 --> 03:28:08,540
nicht mit dieser scheiß Tablet-Bedienung vorgefertigten Größen leben, dann verwende andere Software.

1467
03:28:08,540 --> 03:28:24,380
Das ist so kaputt. Nicht auszuschließen, dass es nicht doch irgendwie funktioniert.

1468
03:28:24,380 --> 03:28:31,420
Hast du das neue Firefox UI gesehen? Nope. Zeig mal her. Wahrscheinlich wird gepaintschämt

1469
03:28:31,420 --> 03:28:40,060
gleich, wenn ich das sehe. Testen Sie die Zukunft. Okay Leute, wir testen jetzt die Zukunft.

1470
03:28:40,060 --> 03:28:46,980
Wie sieht es eigentlich mit Paint aus und Emoji-Support? Das sollte eigentlich nicht

1471
03:28:46,980 --> 03:29:06,940
gehen. Das muss irgendwie Copy-Paste, sonst mag er das nicht. Das geht nicht. Text. Nein,

1472
03:29:06,940 --> 03:29:15,660
natürlich nicht. Das ist doch noch Oldschool-Windows-Shit. In OBS geht es auch nicht. OBS ist cute. Ich

1473
03:29:15,660 --> 03:29:22,980
glaube, die haben einfach eine ältere zu alte Version. Ich habe es ja schon mal in einem

1474
03:29:22,980 --> 03:29:30,700
Video erzählt. Emoji-Rendering ist komplizierter, als man denkt. Man muss erst mal gucken,

1475
03:29:30,700 --> 03:29:37,260
welchen Emoji-Standard man verwendet. Dann, dass man einen Emoji-Font hat. Dann, welcher

1476
03:29:37,260 --> 03:29:44,820
zugrundeliegenden Betriebssystem man ist, welchen Fond-Renderer man verwendet. Das ist

1477
03:29:44,820 --> 03:29:49,380
nicht so einfach, farbige Emojis auf den Bildschirm zu bekommen. Es gibt ja alleine vier Standards

1478
03:29:49,380 --> 03:29:54,020
für farbige Emojis. Es gibt den Apple-Standard, den Microsoft-Standard, den Adobe- und, ich

1479
03:29:54,020 --> 03:30:01,020
glaube, den Google-Standard. Alles unterschiedliche Dinge. Die einen speichern transparente PLGs,

1480
03:30:01,020 --> 03:30:07,260
die anderen speichern direkt Farbwerte, die anderen machen auch... Was auch immer. Total

1481
03:30:07,260 --> 03:30:23,860
bescheuert. Die Zukunft ist hier, Firefox. Passt auf. Wir sehen jetzt die Zukunft. Jetzt

1482
03:30:23,860 --> 03:30:37,820
kommt die Zukunft hier. Ich bin in der VM, ja. Sonst würde ich den ganzen Mist installieren.

1483
03:30:37,820 --> 03:30:53,980
Okay, schon mal hoch agil hier mit dem... Was ist das für ein Werkzeug? Ist das Edge

1484
03:30:53,980 --> 03:31:21,820
oder Firefox? Das ist Firefox. Flex. Ja. Warum genau hat man das jetzt gebraucht?

1485
03:31:21,820 --> 03:31:48,340
Das Geld ist weg. Guter Titel, oder? Vor sieben Stunden und jetzt erst. Habe ich nicht so

1486
03:31:48,340 --> 03:31:56,460
viele Kommentare geschrieben heute. Boah, da finden... Okay, okay. Das ist vom Kontrast

1487
03:31:56,460 --> 03:32:02,180
der Panes-Champ. Da weißt du ja gar nicht, wo du hin sollst. Okay, wo hier Einstellungen?

1488
03:32:02,180 --> 03:32:11,060
Okay. Alles noch das Gleiche. Das ist doch im Prinzip genau das Alte, nur dass es jetzt

1489
03:32:11,060 --> 03:32:26,860
schwarz auf weiß ist anstatt schwarz auf grau, oder? Mach mal Dark. Wo geht denn das? Hier.

1490
03:32:26,860 --> 03:32:40,860
Oh. Es ist in Ordnung. Ich meine, es ist ja kaum ein Unterschied zum aktuellen Firefox.

1491
03:32:40,860 --> 03:32:48,100
Es ist halt das gleiche nervige UI. Du hast hier beispielsweise immer noch, dass du immer

1492
03:32:48,100 --> 03:32:53,500
die Sachen antippen musst und so was. Was soll denn dieser Kack hier? Wozu brauche ich

1493
03:32:53,500 --> 03:32:58,620
diese dumme Tablet-Bedienung hier drauf? Das ist so ein Krampf, das hier aufzumachen

1494
03:32:58,620 --> 03:33:03,680
mittlerweile. Das ist der Wahnsinn. Aber ansonsten ist es doch eigentlich kein Unterschied zu

1495
03:33:03,680 --> 03:33:10,900
vorher. Außer, dass es ein bisschen anders hier oben in der Bar aussieht. Ich sehe da

1496
03:33:10,900 --> 03:33:19,980
jetzt keinen großen Unterschied, wenn ich ehrlich bin. Ah, man kann keine Shortcuts

1497
03:33:19,980 --> 03:33:29,220
mehr verwenden. Okay, das ist dumm. Es ist noch ein bisschen mehr Touch. Na ja, ist eigentlich...

1498
03:33:29,220 --> 03:33:35,940
Mich nervt ehrlich gesagt diese Vertouchifisierung von Desktop-Anwendungen. Das siehst du ja

1499
03:33:35,940 --> 03:33:41,380
zum Beispiel schon. Ich kann es jetzt nicht aufmachen, weil ich keinen Account habe. Das

1500
03:33:41,380 --> 03:33:50,420
siehst du ja allein schon hier. Das Ding kann weniger als zu seiner Zeit noch Outlook Express

1501
03:33:50,420 --> 03:33:57,780
und das war auch schon Mist. Aber ansonsten ist da ja kaum ein Unterschied. Auch die Adress-Liste

1502
03:33:57,780 --> 03:34:11,620
und so sieht alles noch mehr oder weniger genauso aus. Sehe ich jetzt ehrlich gesagt

1503
03:34:11,620 --> 03:34:24,380
kein Problem drin. Ich werde Firefox weiter verwenden. Übrigens, das hier machen wir

1504
03:34:24,380 --> 03:34:32,300
mal was anderes. Da mache ich jetzt nicht Standby. Hallo? Hat sich das jetzt aufgehängt?

1505
03:34:32,300 --> 03:34:37,700
Da mache ich jetzt nicht Standby, sondern ich mache aus, sobald ich mal ausmachen kann.

1506
03:34:37,700 --> 03:34:59,860
Leute, wen hosten wir denn? Zeig mal her, ist irgendjemand on? MontanaBlack, ja der hat

1507
03:34:59,860 --> 03:35:08,300
das bestimmt nötig, dass wir ihn hosten. Vermisst du das alte UI des Firefox? Nicht

1508
03:35:08,300 --> 03:35:12,460
unbedingt. Ich vermisse Desktop-Anwendungen, die sich wie Desktop-Anwendungen anfühlen.

1509
03:35:12,460 --> 03:35:29,940
Ich glaube ich keine on gerade. Äh Moment, den können wir nicht hosten. Ist der nicht

1510
03:35:29,940 --> 03:35:47,020
der TempleOS Typ? Den können wir nicht hosten. Der ist live? Hä, ist der nicht gestorben?

1511
03:35:47,020 --> 03:36:09,180
Wie kann der live sein? Ah, schief. Voll krass, wie kann der? Meine Güte. Okay Leute, wir

1512
03:36:09,180 --> 03:36:25,140
sehen uns, bis dann, machts gut, see you.

