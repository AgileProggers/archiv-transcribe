ich bin wieder da wir machen jetzt da weiter wo wir gestern aufgehört haben aber ohne kuemo
da habe ich kein nerv drauf
ich muss mich in github einloggen ich hab grad ich war grad so bescheuert und hab die
hab die cookies gelöscht das heißt im endeffekt jetzt muss ich das streben sie noch nicht an so
wie nicht so richtig die kunde dürfte jetzt nicht zugucken
so please sms github
excellent okay da bin ich wieder soll diesen krempel von gestern machen wir mal zu das kann
ich heute das halte ich heute noch mal aus kuemo dockerfeige schiss das ist mir das war
mir gestern so anstrengend wir konzentrieren uns heute mal ein bisschen auf github actions und
dann müssen wir erstmal ein bisschen ausprobieren mal kurz noch ein bisschen package updates machen
ja gar nicht twitch ist dazu da live zu gucken was ist denn hier alles drauf warum also ok warum
python 2 und was zum teufel ist uranium war das nicht mal in den pokemon klon und was ist arkus
habe ich da alles installieren ok was ist das 3d drucker zeug 3d drucker zeug
kann ich mal deinstallieren deswegen hat er wahrscheinlich auch python 2 zeug drauf
und jetzt wird es weniger hängt da hat er gar keinen bock mehr aber python 2
alle warum habe ich denn das drauf was ist komplett unsinnig weg weg jetzt
aber wir machen mal kurz docker docker system alles weg ja das darfste updaten gut ist alle
images weg aufräumen volumes weg sollte er eigentlich jetzt gemacht haben aber man weiß ja nicht
ok gut wunderbar ja wir machen weiter wo wir gestern stehen geblieben sind allerdings heute
mit github actions und nicht mit kuemo und docker falls doch erfalls ja aber nicht kuemo
docker falls also das ziel ist ja nach wie fair nach wie vor dass ich meinen home assistant
addon bauen kann für x86 und für arm über github actions so dass es auf raspberry pi
läuft und halt auf einem normalen rechner und es gestaltet sich schwieriger als gedacht mit
dem emulator sagt heute machen wir die nupe variante ohne emulator ich muss nicht rebooten
ich habe kein kernel update gemacht das ist ja nur wenn du kernel update machst dass du
rebooten musst aber wir können tatsächlich wir können trotzdem rebooten man weiß ja
nie ich leg mal ein neues repo für für heute an keckel test das schmeißen aber nachher
wieder weg description omega keckel ich habe gar wobei wer weiß was das aber kein description
public dotnet haben die haben die den dotnet ignore file sp gibt es nicht was sie schab
oder wie heißt denn das macht das normalerweise selbst weil das relativ easy ist bin rein
objekt dran anscheinend nicht na gut license ja create doch doch doch musst du muss du
dich zwingt keiner den restart zu machen aber wenn du den neuen kernel laden willst musst
du restarten und wenn du sachen haben wenn du sachen weiter verwenden willst die irgendwelche
kernel module verwenden muss auch neu starten weil dann hast du die kleinen software die
verwendet irgendwelche neuen kernel module die nicht laden kann sowie docker der macht
sagt er doch nee geht nicht ja es gibt so es gibt so ein paar dinger was beispielsweise
bei ubuntu mittlerweile am start ist dass du manche sachen auch nicht alle manche sachen
kannst du machen ohne neustart aber auch nicht alles ok was willst du machen dann erklär
mal dann erzähl mal wenn du kernel update gemacht hast und du willst das ohne neustart
komplett neu laden dann erzähl mal beziehungsweise dass auch alle kleinen software funktioniert
da bin ich ja mal gespannt drauf jetzt das kackele wer ist wer ist ein kegel oder kackele
ja wir haben ein neues repo wunderbar ja und ich sag dir es geht nicht kackele geil
es geht nicht also was die dir erzählt haben ist wahrscheinlich diese geschichte die unter
anderem auch ubuntu macht dass du manche dinger ohne nen reboot updaten kannst kernel aber
auch nicht alles auch nicht alles aber ganz im ernst das verbenutzt eigentlich kaum einer
meistens wird trotzdem bei nem kernel update rebooted was auch so ziemlich die einzige
sache ist wo du rebooten musst na also den da benutze ich auch seit jahren schon den da
nicht den nicht das meine aber den da ist es so standard hier der da ich meine es zwingt
dich natürlich keiner zu rebooten ja du kannst das ding weiter benutzen das läuft ja weiter
auch ohne reboot aber dann hast du keinen neuen kernel geladen beziehungsweise hast
probleme wenn du halt software hast die irgendwelche neuen modulversion erwartet dann geht das
nicht aha ich hab ja nie gehört kackele kackele kurz was trinken laute das kenne ich noch
nicht das ist sicher nicht was man im laufenden betrieb mit seinen produktiven surfern machen
will jetzt die musik wird auf einmal zu leise kann sich wieder nicht entscheiden muss man
eine andere playlist machen erstens ist mir die deutlich zu entspannend ja beach holiday
das brauchen wir jetzt wie gesagt kernel updates ist so ziemlich das größte was du
unter linux machen kannst da musst du neu starten wie gesagt manche teile gehen ohne
aber ansonsten willst du das eigentlich nicht machen so also wo sind verstehen geblieben
genau wir haben komische docker files gebaut wir haben neues repo ich klone mal kurz mal
neues repo ein 1p ssh cd repos git clone zack appear to have clone in empty repository
das geht aber gar nicht wie viele kackels hab ich denn hier jetzt eigentlich kackel test
bin punkt geht ignore ich bin jetzt habe ich jetzt richtig geschrieben geht ignore das erste
was wir brauchen ist dass ich meine ganzen dotnet bills nicht mit einchecke zeigt mal
kurz her wir klauen uns einfach die geht ignore von hier sehr schön die will ich haben excellent
git add zack git commit a minus m init git push origin master so und jetzt sollte was
im repo drin sein nämlich ein leeres git ignore file excellent so jetzt können wir anfangen
also wie gesagt ich versuche das noch mal zusammenzufassen was der plan ist und zwar
ich habe ein home assistant addon gebaut wo man unter anderem sachen aus einem fiat aus
einem auto auslesen kann hat er eigentlich noch mal auf das issue geantwortet andere
du nee und dieses addon gibt es für raspberry pi und für x86 aus stimmt leute meine güte
jetzt sind bestimmt wieder die die github göttler sind getriggert dass ich master branch
genannt habe oh nein jetzt ist vorbei leute instant instant ban und blog zwar es war eine
eine super zeit leute es ist es ist vorbei gleich bin ich weg übrigens ich kann euch
zeigen wie einfach das ist es um zu benennen das ist tatsächlich relativ simpel ja man
kann mir einfach sagen git branch minus m minus m und dann kann man das main nennen
und das war's ups mehr muss man nicht machen jetzt kann man das ganze noch mal so pushen
so fertig und jetzt haben wir ein master und eine main branch da ups das ist der vier
champ da jetzt haben wir einen master und haben einen main branch und jetzt kann ich kann
ich zum beispiel sagen git push origin minus minus delete master also master aber weil
ich initial einmal master gepusht habe und refused das habe ich tatsächlich gut als
unbenennt ist einfach aber ansonsten hat irgendwelche schmerzen mir egal wir bleiben jetzt immer
master kann ich mir einfach ermerken so lange man nicht gepusht hat ist es einfach so also
wie gesagt ich habe hier das addon erstellt das soll gebaut werden für github über github
actions für arm und für x86 bisher war es einfach da wurde es auf dem jeweiligen zielrechner
gebaut was natürlich dann immer automatisch die richtige plattform war in zukunft will
ich aber prebuild images anbieten was ich schon mache hier guck prebuild images aber
die sind aktuell nicht sonderlich schön gebaut die baue ich lokal bei mir mit dem lokal installierten
dotnet mit meinem lokalen docker und upload die dann also ob das so reproduzierbar ist
bezweifle ich sondern was ich mal ausprobieren will wie kriege ich über github actions in
image gebaut ein container image für arm und für x86 und vorher die anwendung kompilieren
auf x86 und armen mit ku emu habe ich gestern probiert also quasi eine arm cpu auf desktop
emulieren das geht theoretisch aber dotnet ist verbackt das funktioniert nicht das heißt
wir werden das jetzt in folgen wir werden es jetzt folgendermaßen versuchen so habe
ich mir das zumindest überlegt wir machen eine github action wo wir zuerst mal das dotnet
zeug bilden und das kopieren wir dann jeweils in den armen container und in ein x86 container
ohne irgendwas zu bilden mal gucken mal gucken das funktioniert ich sollte erstmal vielleicht
ein testprojekt anlegen dass das funktioniert oder so ein test addon ich kopiere mir einfach
mal den kram hier easy wir machen einfach so ein fake fake addon was was leer ist wo
nix drin steht also hier mk dir test addon da drinnen brauchen wir das das muss euch
jetzt nicht zu sehr interessieren das ist das ist homosystem spezifisch dass das dass
das funktioniert aber ich leg das jetzt auch mal so an wie es wie es in dem anderen repo
drinne ist ich kann mir das ich kann mir das einfach von hier kopieren konfig jammel zack
zack so also das da brauchen wir alles nicht das brauchen wir auch nicht wir wollen das
erstellen für arm die 64 und arm vor sieben jahre so nein neues image test champ version
ja gut standardmäßig starten wir mal mal 0.0.1 brauchen wir nicht brauchen wir nicht
0.0.1 wie habe ich das repo genannt kackeltest aber glaube gar nicht test addon das müsste
reichen gut was brauchen wir denn sonst noch in docker file brauchen wir noch kopiere ich
mal standardmäßig rein im docker file da können wir anfangen mit github actions zu
basteln das kommt weg ran brauchen wir nicht ran brauchen wir auch nicht ja und das da
garantiert auch nicht so sonst noch irgendwas ich glaube das war es zum testen sollte das
reichach so ja natürlich wir brauchen zum test noch ein noch ein dotnet dotnet konsolenanwendung
zwar mk dir ab new console das sollte reichen habe ich noch irgendwas vergessen war das
liegt jetzt unter ab das heißt im endeffekt auch wir wollen was von ab bild rüber kopieren
ja ok das muss jetzt aber echt gewesen sein als vorbereitung ok wunderbar komm mit lul
oder nur lu lu pass startet noch ja wir starten wir starten ja gar nichts es geht mir um das
bild was man machen kann lu lu in it so jetzt haben wir den kram vorbereitet jetzt würde
ich sagen jetzt gucken wir uns mal ein paar github actions an also von der idee her müsste
der ablauf folgendes sein ich war dann mal gucken ob ich das hier ob ich das so grob
das ist ganz schön blutet standardmäßig also wir müssen ok also wir brauchen einen
job der die anwendung auscheckt baut mit dotnet
dann das gebildete wahrscheinlich zwischenspeichert dann in arm image macht das gebildete reinkopiert
für arm das image upload und dann das image nee leute was viel besseres leute six head
time wisst ihr was wir verwenden github actions strategy matrix das machen die github pros
die verwenden strategy matrix ich wusste bis vor kurzem gar nicht dass das überhaupt
existiert aber wisst ihr was man machen kann man kann einen job in github actions mit mehreren
parametern stand starten lassen dass das ist dafür glaube ich genau richtig aber wir testen
den bild erstmal also on push branches master so wollen wir eine ubuntu vm in github actions
starten klingt richtig pfeifert standardmäßig kann github actions glaube ich drei verschiedene
vm typen das sind das einmal ubuntu das einmal mac und einmal windows mehr gibt es nicht
wenn man irgendwelche speziellen sachen machen will wie machen will wie lpein linux und sonst
was dann muss man sich in docker container starten mit lpein oder in container starten
mit lpein die da der dann auf dieser ubuntu vm eben läuft eigentlich richtig six head
wie schnell die das hinbekommen haben bei github oder ich meine die buten die innerhalb
von von drei sekunden eine komplette neue ubuntu vm gut das ist ja eigentlich auch kein
großes ding wenn du wenn du alles lokal fertig gebaut liegen hast und nur noch quasi ein
image an kvm dran hängen musst du kannst auch eine strategy matrix dynamisch aus jason
generieren oh jetzt jetzt wird jetzt wird es advanced da musst du mir mal ein beispiel
irgendwo linken da habe ich das weiß ich wir testen jetzt erstmal ob so ganz primitive
sachen wie wir bilden unsere anwendung überhaupt funktioniert ja ok also wir wollen dort jetzt
sieben haben für die anwendung genau erster schritt ist das geht repo aus checken was
ich immer ganz gerne mache ich schreibe immer einmal name dabei also check out finde das
kann man dann auch besser sehen in der übersicht ich meine gut die check out action check out
nennen ist ziemlich bescheuert aber ich mache das eigentlich ganz gerne dass ich überall
immer noch ein name davor schreibt so set up können wir meinetwegen sogar set up nennen
restore brauchen wir nicht bild brauchen wir auch nicht das einzige was wir brauchen
ist dotnet publish das da brauchen wir ja ok noch mit dem statischen identifier so
bild release nennen wir das ding so speichern wir mal und was jetzt theoretisch passieren
müsste wenn ich was pushe dann sollte er automatisch dieses dieses kript ausführen
oder diese action ausführen was man auch sieht funktioniert der hat das repo ausgecheckt
automatisch wohlgemerkt bei jedem pusch der hat das repo ausgecheckt da jetzt auch monka
ist ich bin im falschen verzeichnis kann das sein notz notz specified github changelog
ok was new from jason method in expressions oh das ist next level shit
äußerst äußerst lesbare syntax an dieser stelle findet ihr nicht auch gut es ist halt
escape des jason aber obvius was hier passiert cringe cringe wer es nicht versteht also was
machen die dann hier matrix depp setman ah die generieren sich das aus irgendeinem jason
oh das ist aber next level ja und dann hast du in deinem repo irgendein ein jason feil
was dann die die eigentlichen jobs definiert oder wie oh das ist das ist das ist mir zu
advanced aber wir gucken uns das wir gucken uns das mal an chat ich habe jetzt viel geschwätzt
ich habe jetzt 20 minuten durchgelabert versteht überhaupt irgendjemand was ich vor hab zu
machen konnte mir irgendjemand folgen ich habe nämlich das gefühl ich glaube es checkt
gerade keiner was ich will das dachte ich wäre null ok dann versuche ich das dann versuche
ich das noch mal kurz zu erklären fünf minuten wir müssen uns ja nicht gar so sehr hetzen
haben ja zeit richtig genau das an image also ich hab was programmiert es ist egal was
es macht das soll am ende auf dem raspberry pi laufen was welche eine armen cpu hat und
es soll ganz normal auf desktop rechner laufen können oder halt auf server laufen mit intel
und amd cpus also x86 64 so das soll unterstützt werden das heißt wir müssen das programm
einmal kompilieren als x86 version und einmal als armen version so und damit das dann auf
dem zielsystem läuft muss das ganze noch in den image eingebettet werden dass die software
die das addon ausführt nur noch dieses image starten muss so nachdem man die software einmal
braucht für armen cpus und einmal für x86 cpus braucht man das image auch einmal für
armen cpus und einmal für x86 cpus was man braucht diesen schritt doppelt man braucht
ein image für die jeweilige zielarchitektur und man braucht die software logischerweise
für die jeweilige zielarchitektur von der idee her ist das einfach man könnte es mit
docker bild x machen die unterstützen das die emulieren das ja genau genau genau so
was gibt's man kann beispielsweise bild x verwenden mit multiarch images und wenn man
dann koemu installiert dann kann er beispielsweise auf einem desktop rechner ein raspberry pi
emulieren oder eine armen cpu emulieren das funktioniert normalerweise auch ziemlich gut
also beziehungsweise mir ist eigentlich nix bekannt wo es nicht funktioniert außer für
dotnet dotnet ist verbackt mit koemo das haben wir gestern drei stunden lang oder vier stunden
probiert und das funktioniert nicht deswegen müssen wir das anders machen sonst wäre
das ein docker file mit drei zeilen und fertig wofür braucht man dann docker docker brauchst
du zum erstellen des images weil dieses addon das ist ein addon für home assistant os und
was die machen ist alle addons werden dort in einem eigenen docker container gestartet
einfach dass es besser isoliert ist und den addon nicht den host kaputt machen kann das
heißt du musst ein image zur verfügung stellen für die jeweilige zielarchitektur wo deine
software drin ist kompiliert für die jeweilige zielarchitektur docker ist nicht written in
rust alda docker ist älter als okay nicht älter als vielleicht doch älter als rust
auf jeden fall ein docker ist nicht written in rust docker ist glaube ich in go zum größten
teil oder jaja es war nicht rust das ist go blazingly fast written in go geht aber auch
egal blazingly fast und das allerwichtigste den hier der muss immer dabei rakete blazingly
fast so hat man jetzt verstanden oder so das ding ist halt ich brauche jetzt irgendwie
eine angenehme art und weise wie ich bei einer neuen version von meinem addon eben dieses
image erzeugen kann dafür gibt es zwei varianten das das addon image zu erzeugen entweder man
lässt das auf dem zielsystem bauen von home assistant dann ist automatisch alles immer
in der richtigen architektur weil der lädt sich das docker file runter und baut das docker
file quasi dann auf seinem raspberry pi das problem ist nur dass es langsam und es verbraucht
ziemlich viel ram gerade für das für das kompilieren von dem programm und ich hatte
jetzt ein paar issues bei mir im im projekt ja zum beispiel zum beispiel die hier die hatten
ein problem die haben den raspberry pi mit 2 gigabyte ram und von dem 2 gigabyte ram
ist 1,3 gigabyte schon weg für in home assistant und der rest ist vielleicht von anderen addons
blockiert also dass mein addon im bild einfach mal 600 mp ram frisst ging halt nicht die konnten
das nicht ausführen und es ist eh besser ein prebuilt image bereitzustellen anstatt
das selbst alles machen zu lassen auf dem zielsystem
Leute ich mache gleich ich wollte sagen ich mache gleich issues aus aber das ist natürlich
ein sehr guter hinweis ich weiß nicht ob ihr es wusste leute aber er hat recht twitch prime
ist kostenlos zumindest wenn ihr amazon prime habt also ganz kostenlos ist es auch nicht
das muss man gleich mal taggen dieses issue ja das wir erstmal label als gut gut first
issue und enhancement alles klar und und und moment moment so jetzt haben wir es richtig
gemacht any primers gut ja weiter geht es so sieht es aus fix fail fix fail fix und irgendwann
geht es vielleicht genau und das und das probieren wir heute so und am liebsten hätte
ich halt dass es bei einem push von einer neuen version automatisch eben diese images
erzeugt und das kann man zum beispiel über so was automatisches machen wie mit github
actions wo man dann das programm aus check also den source code aus checken kann bauen
kann und im endeffekt auch das image veröffentlichen kann
das frage ich mich auch github actions azure devops und sonst wie ich habe ehrlich gesagt
außer in der microsoft schulungen die ich war vor einer weile gemacht habe nie was von
azure devops gesehen bei uns auf der arbeit ist alles komplett github und entweder mit
github actions oder eben manche haben halt noch einen eigenen build server oder jenkins
oder sonst was kannst du irgendwo dein jammel hinlegen ich will das nicht kopieren ich will
das selbst machen ja stimmt ja github github gehört microsoft ja seit drei jahren oder
so das ist schon eine weile her und die haben es nicht verkackt die haben immer mal wieder
so ein paar krumme also atom wurde eingestellt ja aber wer hat wirklich atom hat jemand von
euch ernsthaft atom benutzt sie haben so ein paar komische ja so ein paar komische dinger
manchmal so wie wollen die trends abschaffen und sowas da weiß ich immer nicht was mit
microsoft abgeht aber wir sind im falschen verzeichnis gewesen wir müssen nach cd wie
habe ich denn das genannt cd test addon test addon app da wollen wir hin und dann wollen
wir das publish machen so zeigt mal ob es jetzt funktioniert actions zeige ich mal her
start das verdammte spiel ich will nicht dass es lebt mal schauen ob es jetzt funktioniert
also mit den parzeilen jammel machte schon relativ viel das haben die schon gut gemacht
also ich mein guck mal der start in ubuntu vm in der cloud das klicke ich jetzt nicht
an wer weiß was man damit anfangen kann dann checkt er mal github repo aus dann installiert
der dotnet dann macht ein dotnet bild und dann räumt er wieder auf ist eigentlich ziemlich
cool der big tasty bewährter da kann ich mich nicht mehr dran erinnern wer das ist
so also es hat funktioniert so unsere dotnet anwendung ist gebaut easy fertig so einfach
ist es leider nicht kurz aus copy pasten von woanders sack hallo max bin schon lange abonnent
von dir seitdem ich glaube 16 bin ja da bist du nicht der einzige es gibt total viele die
erzählen früher war ich irgendwie kleiner kleines cod kind und jetzt bin ich keine ahnung
fachinformatiker anwendungsentwicklung und sowas habe ich gelernt oder gerade ausbilden
jetzt total viele das finde ich immer cool ich hätte gar nicht gedacht leute damals
als ich die videos aufgenommen habe dass ich so viele leute quasi influence fachinformatiker
zu werden das war noch zeit bevor influencer influencer hieß ich habe das einfach gemacht
weil ich denke das thema interessiert die leute und ich denke mal das hat auch viele
interessiert die eben gerade in dem alter waren wo man nach einer ausbildung sucht oder
mit der schule fertig wird und sowas ja ist aber schön dass du den weg her gefunden hast
so zu sagen haben wir das die mode überhaupt noch haben so viele poge modes ja haben wir
noch oder poc poc u ist es also playlisten wo die sounds unterschiedlich laut sind die
ok also jetzt wo ich mal in mich gehen wie könnten wir das ganze machen also ich will
die software einmal bauen für genau also ich will meine software einmal bauen für
linux x86 allerdings für lpein und dann ist es so und ich will die software einmal bauen
wie macht man multi multi multi line run irgendwie irgendwie irgendwie so oder so wie ging das
bei jamal jamal hat so eine ganz abartige sonntags für multiline war das so das ist
wirklich immer so ein ding wo man sich denkt was was hat die leute geritten daraus multiline
ach war das war das so nee nee war anscheinend schon richtig jamal und github actions multiline
nee nee nee nee nee nee♡ folded style ach einfach nur den einfach nur
den fail oder wie ok so also ich will das zweimal bilden einmal für x86 & einmal armbd
und einmal ARMv7 Schauen wir mal ob das so weit funktioniert
Der jetzt zwei Sachen baut Kann man kein YAML Array verwenden?
Ne, das ist ja Shell, Shell Befehle, da bringt ja ein YAML Array nichts
Mal gucken ob das Bild funktioniert Massive Build, Broken Build
So funktioniert das schonmal, warum?
Ah, der führt nicht mehrere Befehle nacheinander aus
Sondern der will das alles in einem ausführen
Wie ist denn da die richtige Söntagsführung?
Ok, GitHub, Actions, Run, Multiple Commands
Wenn man das jetzt noch richtig, Alter Ach doch, Pipe
Alter, wer denkt sich denn bitte schön diese Söntags aus, Mann?
YAML hat wirklich Pains Champ Söntags
Ganz ehrlich, der einzige Vorteil den ich für mich persönlich in YAML vs. Jason sehe
ist, dass du Kommentare machen kannst Der Rest ist mir tatsächlich in Jason lieber
Ok, geht mal ein Bild jetzt Ja, wo ist das Problem, was hat er denn?
Warum ist das, warum geht das nicht?
No such file or directory Wie, vorhin ging es doch auch
Ach so, ich habe es zweimal kopiert, lull
Ja, und nachdem es jetzt Multi-Line ist, kann ich es auch einfach so machen
So, jetzt wird es aber funktionieren Kennst du Jackal, ja, das ist irgendein CMS-Gedöns
Ja, das nutzt auch YAML Ja, ganz vieles nutzt YAML
Oder wenn man in der Rust-Welt unterwegs ist, dann Tommel
Weil die Rust-Leute sich gedacht haben, YAML ist zu bloated und nicht Blazingly fast
Written in Rust, dann muss es Tommel sein Hey, meine Builds funktionieren
Also, es gibt jetzt quasi einmal das Ding per Es gibt die Software einmal für AMD V7
und einmal für AMD 64, sehr schön Moin, Open-Source Likku
Inifald sind Painschamp Ok, besser als XML
Ja gut, wenn es darum geht, man findet immer was, was schlechter ist
Man findet auch garantiert was, ja, CSV-Lateien zum Beispiel
Da kann man sich jetzt drüber streiten Leute, was ist schlimmer, CSV oder XML?
Es ist beides eklig Wir machen mal ne Umfrage
Was, was ist schlimmer Schlimmer
XML, CSV, YAML, JSON Was haben wir sonst noch zur Auswahl
XML, CSV, YAML, JSON Oder was ist das Schlimmste davon
Wir sind gerade dabei, wir sind gerade dabei
Was gibt's?
Soap, nee Soap war ja XML, das zählt nicht
Inni, Inni, genau, Inni Zeigt mal her, jetzt bin ich gespannt
Also ich finde CSV auch eklig, aber XML ist natürlich auch schonmal ne ganz andere Hausnummer
Ich glaube, die Vorliebe des Chats für XML ist eindeutig
XML-Chat, GIGA-Chat Ich glaube, die Umfrage müssen wir fast gar
nicht fertig laufen lassen Also XML hat mit riesem Abstand gewonnen
JSON finde ich auch toll, YAML ist okay Ich hab auch manche Sachen, die mich bei
YAML nerven, aber Alles ist nice im Vergleich zu XML
CSV ist auch kacke, aber XML ist wirklich der Gipfel
So und dann kommt Microsoft auf die Idee und macht bei WPF quasi ein XML-Dialekt für GUI-Layouts
Wo ich mich auch frage, was zum Teufel ist bei Microsoft los gewesen damals
Nee, das ist der hauptsächliche Grund, warum ich WPF nie richtig mochte
Ergibt das Chat, das ergibt überhaupt keinen Sinn
Warum sagt keiner was, was ich hier mache Das ist komplett entgegen dem, was ich ursprünglich
gesagt habe, was ich hier gerade mache Und zwar habe ich gesagt, ich will Bildmatrix
verwenden Das sieht nämlich so aus
Hier guckt, so Ich will nämlich diesen Job einmal starten
pro Image Und das sieht dann folgendermaßen aus
Ich hoffe, das stimmt, was ich hier mache unter dem Job
Strategy Matrix-Versions Ersetzen wir durch das, was wir machen wollen
Wir wollen einmal eine ARMv7-Version und einmal eine AMD64-Version
XML ist einfach Teufel Ich mags gar nicht, ich weiß gar nicht, warum
auch Leute sich heute überhaupt noch irgendwie Ja, weiß ich, es gibt Leute, die finden es
einfach toll Es gibt ja auch Leute, die finden Maui toll,
was ich nicht verstehen kann Avalonia ist okay, ich weiß zwar auch Sammeln,
aber immerhin eine sinnvolle Implementierung Nicht so ein Crap wie Maui
Aber ansonsten Die haben ja bei Encute gibt es QML, weiß
ich, ob ihr das schon mal gesehen habt Die haben auch mit so einem Bullshit angefangen
Nur, dass QML tatsächlich deutlich angenehmer ist als XML
Das hat ein bisschen was von Flutter Das finde ich in Ordnung, das geht
Ja, Vinui wird ja nicht fertig, Cap Vinui klappt ja bis heute nicht richtig
Und dann ist natürlich auch WPF Style So, also, was ich eigentlich machen will ist
nicht das, was da steht Guckt mal, ich will kein einzelnes Bild machen
und mit zwei Bildes hintereinander Ich will diesen ganzen Job zweimal ausfüllen
und zwar einmal für AMV7 und einmal für AMD64 So, Output Bild
Ich brauche das hier, die Argumente dafür So und jetzt kann man das hier irgendwie
als Variable einsetzen So, GitHub Variable Expansion
Irgendwie so Und jetzt hört es bei mir auf
Ich glaube Matrix Ja, keine Ahnung
Einfach so, gell Einfach Matrix mal
Wobei wir nicht Versch damit wollten wir denn das Target
Oder Achtsch Ich glaube, so ist richtig
So, und wenn das jetzt funktioniert, wie ich mir das gedacht habe
Dann startet er diesen Job jetzt komplett zweimal
Einmal dafür und einmal dafür Wahrscheinlich habe ich aber irgendeinen
Mittagsfehler produziert Schauen wir mal
Nee, guck mal, der startet das ganze zweimal
Einmal ein Bild für ARM CPUs und einmal ein Bild für AMD CPUs
First try, easy Guck mal, und es funktioniert einfach
Einmal ein Bild für ARM CPUs, einmal ein Bild für X64
Wobei noch ist ja nur die halbe Miet Wir haben ja noch kein Image gebaut
Wir haben ja noch kein Image gebaut Bei Docker Files waren wir auch noch nicht
So, okay Lass mal überlegen
Wie geht es denn jetzt weiter Also wir haben den Kram kompiliert
Jetzt müsste ich ein Image bauen Jetzt müsste ich mit dem Home Assistant Image
Builder ein Image bauen Wo ich damit hin will
Nirgends wohin, ich will innerhalb von dieser VM bleiben
Und dann ein Image draus bauen Ich will jetzt ein Docker Image draus bauen
und das zur GitHub Container Registry pushen So, und es gibt nämlich GitHub Home Assistant
Builder, es gibt nämlich schon für Leute, die Home Assistant Addons bauen wollen
Eine fertige GitHub Action, die das übernimmt, das Image bauen
Sieht dann so aus Wobei wir da noch ein bisschen was anpassen
müssen Das wird so garantiert nicht funktionieren
Also damit habe ich auch die aktuellen Images erstellt
So, das hier heißt dann Create Image Man darf übrigens Leerzeichen machen, so ist
es nicht erlaubt So, also, Add Master, nee
Nicht Add Master, was für Text hat das Ding Ich habe nämlich keinen Bock, dass auf einmal
meine Action kaputt geht So, also, man muss das aufrufen
So, Minus Minus Test ist gut Minus Minus All ist nicht gut
Weil wir wollen ja nur für eine Plattform bauen Addon-Folder, Docker Hub Username
Oh, ich muss mich noch einloggen bei Docker vorher, dass ich das pushen kann
Aber wir bauen erst mal das Image, alles der Reihe nach
Also nicht bei Docker, ich muss die GitHub Container Registry verwenden
So, Test Minus Minus All wollen wir nicht haben
Wir wollen nur für eine Plattform bauen in diesem Step
Okay, es ist Minus Minus AMV7 und Minus Minus AMD64
Das ist natürlich doof Wie?
Okay Kostet die GitHub Container Registry nicht
ordentlich Kohle, nee Die kannst du kostenlos verwenden
Ich weiß nicht ab wann die was kostet Keine Ahnung
About Billing for GitHub Packages Ah, zeig mal her
Was macht das Husting anders als das hier Ah, das ist die Standard Action
Der guckt zum Beispiel in der Config, im Yammel Config-File nach
welche Versionsnummer dein Addon hat und tagt das dementsprechend
Der schreibt glaube ich das Repo rein und so ein paar Sachen, die halt fürs Homo Assistant
Addon wichtig sind Der nennt das auch so
Der nennt den Kram auch richtig, dass Homo Assistant das erkennt, dass das
das richtige Image ist Moin Patrick
Ich glaube 2000 Minuten Free pro Monat Moment, wir reden nicht von Actions
Wir reden von GitHub, von den GitHub Packages Ich weiß nicht was das kostet
Hier also Storage Data Transfer Resets Every Month
While Storage Usage Ach Private Packages
Du kannst anscheinend so viel machen wie du willst
Solang das Public ist das Package Anscheinend kein Ding
Ah Leute ich hab jetzt was anderes Ich weiß nicht wie ich das gescheit machen
soll GitHub hat eine eigene Container Registry
Ja das haben die relativ schnell angekündigt nachdem Docker das limitiert hat
Die Docker Registry wurde ja ziemlich stark reglementiert vor einem Jahr oder so oder
vor zwei Jahren Und dann hat GitHub irgendwie zwei Wochen
später gesagt Ach Übrigens wir haben jetzt auch eine Container Registry
Gibt es eigentlich Docker Haben die diese Limits noch
Haben die das noch Weil Docker hat die
Die Angewohnheit sich selbst ins Knie zu schießen mit Aktionen
Hier Free Users 100 Pulls pro 6 6 Hours Das ist halt nix, das ist viel zu wenig
Hier ist immer noch, ist immer noch so So haben wir pro 24 Stunden
Vielleicht haben sie es wieder ein bisschen gelockert Aber die haben sich mal wieder richtig
selbst ins Knie geschossen Ja gut deswegen verwenden die Leute jetzt
halt GitHub da kannst du so viel pullen wie du willst
Ich hab beispielsweise öfters mal am Limit gekratzt
Weil die ganzen Integrations und Addons in Home Assistant sind alles
Nee nicht die Integrations, die Addons und die
Nee eigentlich nur die Addons Zumindest hat er beim Refresh bei mir
immer immer Probleme gemacht Ich hab's dann runtergestellt
Auf aktualisieren halt noch einmal am Tag und so dann ging's
Aber ganz im Ernst, dann verwende ich halt GitHub
Und es sind halt ganz viel auf GitHub geswitcht Also Docker hat sich insofern schon öfters
ins Knie geschossen die letzten Jahre über Einfach dass die ja vielleicht nachvollziehbare
Sachen gemacht haben Weil das kostet was
Aber sie haben sich damit immer weiter so ins Aus befördert
Als vom ursprünglich mal eigentlich so das Tool und die Anlaufstelle für Container schlechthin
Zu immer mehr eins unter vielen Ich mein Docker an sich wird nicht weggehen
Und es wird weiter das meist benutzte Containerisierungstool auf dem Desktop bleiben
Aber trotzdem Die haben da nicht so viel draus gemacht
Die haben sich öfters mal ins Bein geschossen
So Test Target Folder ist dann Test Addon
So Docker Hub brauchen wir nicht So jetzt hab ich ein Problem
Jetzt hab ich ein Problem Und zwar ich hab hier meine Variablen definiert
in dieser Art und Weise Und ich brauch aber noch ne Variabel nämlich
amd64 Jetzt könnte man ja auf die Idee kommen
Dass man einfach ein zweites Paar von Arrays machen kann
Das geht aber nicht Das geht aber nicht
Was ist Muzel Das ist eine C-Library eine Minimal C-Library
die Alpine Linux unter anderem verwendet Lip Muzel
Das andere ist den zu GNU Das wollen sie nicht
So nachdem mein fertiges Addon unter Alpine läuft
muss ich das damit übersetzen Warum geht ein zweites Array nicht
Genau also Das kann ich euch zeigen
Man könnte jetzt davon ausgehen, davon vermuten
dass man zum Beispiel sowas hier machen kann So und dass der dann eben einmal das damit
füllt Man würde jetzt denken der macht zwei Durchgänge
So Target ist beim einen Durchgang eben das und das
Nee Target ist das Arch ist das und am nächsten Durchgang ist es das und das
Ist aber nicht so Matrix macht genau das was der Name sagt
Dieser Job wird jetzt ausgeführt für jede mögliche Kombination aus diesen Werten
Also sprich das wird ausgeführt damit und einmal damit
damit und einmal damit damit und einmal damit und damit und einmal damit
Also viermal Was natürlich bescheuert ist
Weil ich will ja kein X86 AMV7 Build Brain dead
So jetzt ist die Frage kann man irgendwie sowas hier machen
Oh keine Ahnung
Nee ne Das mag er nicht
Matrix Options must only contain Primitive Failures
Ja
Sixhead Time
Irgendjemand hat auch vorhin was geschickt mit Jason Arrays
Wartet mal Irgendjemand hat auch vorhin was mit Jason Arrays
geschickt Wo ist es
Da
What Brom Jason
Ok jetzt wird es eklig was Ok
Github Matrix von Jason
Wie gehts der Karts der gehts gut die liegt glaube ich noch im Kühlschrank drüben
Oh big big font
Was machen die da für Dinger
Also könnte man jetzt eventuell sowas hier machen
Ok machen wir mal machen wir big big big brain time
Geht wir testen das mal geht denn sowas
Dass wir jetzt sagen ok das ist ein komplettes Jason
Jason String Nee ja
Invalid type font Array
But String was font
Kann man da einen Jason String reinhauen Ok
Also das funktioniert ich kann zum Beispiel sagen hier das
Aber jetzt muss wir inline Jason machen ok das ist aber ganz schön abartig
Und dann könnte ich sagen hier Arch ist
Arm V7 Ok und und und nu
From from ach du ok ok
Warte mal und jetzt from Jason Matrix Target
Und und dann so das sieht aber wirklich abartig aus
Und hier machen wir dann an der Stelle anstatt
Amd64 Arch
Leute das versteht doch keiner oder
Also lesbar lesbar ist was anderes aber schauen wir mal ob das jetzt funktioniert
Machst du das einfach per include
Ahja
Es ist schon mal kein Syntax Fehler das ist schon mal nice
Lesen kann man das nicht
Das dritte Punkt bei Matrix include
Was
Das ist mir zu high IQ was
Green
Jetzt ich checke es nicht was was macht das
Include also was schreiben die
Achso
Achso
Das heißt ich brauche eigentlich nur include oder
Ich brauche nur include gar nichts ekliges Jason
Hätte denn oh oh es ist broken Leute es ist broken
Oh template is not valid invalid character
F
Ich hab's ich hab's zerstört
Ok machen wir das mal lieber mit include das klingt mir irgendwie sinniger
Also da machen wir sowas hier ok wir machen arch
Einfach ein leeres oops einfach ein leeres Array
Oh leeres Array
Ach das geht nicht oder was
Include nee wie ist das
Wie machen die das Moment ich check die Syntax nicht
Achso
Auf der Höhe auf der Höhe von
Ahja ok und jetzt kann ich sagen include
Du brauchst das Array für den einen Wert
Kann ich nicht sagen arch nee Moment wie wie
war das jetzt
Alles mit so
Kann ich nicht sagen arch ist
V7
Und ja das andere ist dann Linux
Ah und dann würde ich hier sagen
Matrix Punkt
Links und hier
Arch
Das ist bestimmt bestimmt komplett broken jetzt
Aha ok ok ist immerhin es läuft es läuft schon mal los
Was nicht heißt Moment
Nee jetzt macht er für je
Das ist falsch das soll er nicht machen
Doch ich hab da plötzlich im Moment das ist doch klar dass er das macht wartet mal
Ich muss es so machen oder so
So amd64
Muss ich das so machen
Start komm mit
Ok postchamp postchamp
Aha aha
Ok
Das sieht ja prinzipiell schon mal nicht so verkehrt aus
Das ist natürlich deutlich ordentlicher als dieses komische Jason rumkopiere
Oh
Jetzt hätte ich fast meine Credentials geleakt hier guckt mal
Aber es ist alles es ist alles auskommentiert
So ich bin mal gespannt ob der Bild jetzt funktioniert
CD
Ah
Hey das sieht gut aus
Das sieht gut aus das funktioniert
Und create image
Wo steht was er ausführt
Wow hab ich irgendwas geleakt
Nee anscheinend nicht alles gut
Das funst
Das funst
Easy
Dockerfile wird gebaut
Fertig easy
Ja das ist ja nice
Da kann man sich das oben mit dem Array sparen
Was wird gemacht
Wir bauen ein Raspberry Pi Image und ein Desktop Image für ein Home Assistant Addon automatisch
Bei jedem Push
Was heißt bei jedem Push
Wahrscheinlich bei jedem Tag oder so nur
Weil aktuell mach ich das lokal und viel zu umständlich
Das ist natürlich nice
Das heißt im Endeffekt so kann man die Sachen kopieren
Und lässt auch nur in dieser Kombination laufen
Amd64 und hier das Programm x6 und hier am v7 und hier am cpu
Nice genauso soll das sein
So und hier baut er ein Image für
Hier baut er ein Image nur für amv7
Und hier baut er ein Image nur für amd64
Ja easy genau so soll das sein
Das ist einfach
Da muss man keine komischen JSON Syntax bauen
Ja das ist gut das gefällt mir
Excellent excellent
So sehr schön sehr schön
Jetzt müssen wir das Image noch pushen
Dazu brauchen wir ein Login bei github
Haben die hier vielleicht auch irgendwie ein Beispiel
Token
Ja
So was hier github token
Login to github genau so was will ich machen
Login to github container registry
Ja
Oder kann man das irgendwie anders angeben
Direkt bei dem addon
User
Dockerhub username or space name was
Ach ne hier haben sie ja sogar das Beispiel
Ja
So nur mit dem Unterschied wir müssen das über github machen
Also muss man das so machen
Die haben das bei Actions mittlerweile relativ feifertig gemacht
Man muss sich gar kein token für Actions mehr generieren
Da kann sich während die Action läuft einfach weil das alles intern ist bei github
Mittlerweile die temporäre Credentials für die eigene Container Registry
Selbst ausstellen
Früher musste es dir das mit irgendeinem User Token machen
Wo du kompletten Account zugreifen konntest
Das war nicht so nicht so nice
Docker login login Action v2 github repository owner
Github token
Normalerweise muss man ja die Secrets hier unter settings hinterlegen
Aber dieses github token ist irgendwie so magic variable
Die ihr automatisch ausstellt
So
Und jetzt sollte das funktionieren wenn ich das Test rausnehme
Wir probieren es noch einmal aus ob das login funktioniert
Oh safe
Schauen wir mal
Ja
Also guck mal der lässt sogar die Jobs parallel laufen
Das ist sogar noch schneller als hätte ich es am Anfang normal von Hand nacheinander
gemacht
Ich muss für meine Masterarbeit mit Docker eine Microservice Architektur bauen
Die was für Objekte
Die Geo Objekte bearbeitet und am Ende in einem bestimmten Format ausspuckt
Compose wirklich alles in einem einzelnen Container sind dann bestimmt 200 Container
am Ende
Wenn du alles in einem Container machst sind doch keine 200 Container
Oder
Dann ist es ein Container
Oder du meinst dieser Container 200 mal gestartet dann oder
Ja also kann man durchaus machen es kommt ja darauf an wie kompliziert das ganze ist
In der Regel sagt man im Container soll halt ein Programm gestartet werden fertig aus
Soweit
Er hat die reine Lehre aber vielleicht macht die ja nicht immer Sinn
Kannst du auch im Container mehrere Sachen starten
Musst ja halt nur überlegen wie du das machst
Du hast halt nur einen Einstiegspunkt
So Leute wir haben Docker login gemacht
Wie es funktioniert einfach
Wie es einfach funktioniert
repo auschecken.net installieren
Programm bilden lassen für die Zielplattform
Docker login image createn
Und jetzt Image pushen da bin ich mal gespannt
Das funktioniert tatsächlich zu gut ja
Jetzt bin ich gespannt also wenn ich jetzt hier das Minus Minus Test raus nehme
Sollte der die Images in meine private Container Registry hochladen
Also die Image mit nichts drinne aber also außer einem Hello World Programm aber immerhin
Zeig mal
Jetzt bin ich gespannt
Ja Candy for Girls
Ich kann dir da schon was zu sagen ein bisschen im Detail müsstest du das erklären also
Sprich was willst du alles in einem Container laufen lassen
Streamer Bonus ja
Bill Gates persönlich sitzt gerade sitzt gerade auf der anderen Seite der Welt
Und Hacker man das bei mir funktioniert
Bill Gates baut händisch mein Docker Image jetzt verrat doch nicht alles
So Image wird gebaut Start Upload Start Upload Start nicht Start Upload Start Upload
Das Image Image ARMv7 TestChamp 00 Upload succeeded easy
Easy as fuck Es sollten wir zwei Images haben
Packages Easy Image ist da
Einfach Images am Stahl
Jetzt natürlich die Frage ob die funktionieren Das weiß ich jetzt natürlich nicht
Es können wir aber ausprobieren ob die Images funktionieren
Na gut Ich bräuchte einen Raspberry Pi auf dem ich
das ausprobiere aber ich hab gerade keinen Raspberry Pi auf dem ich das ausprobieren
kann
Doch ich kann einfach meinen Raspberry Pi anstöpseln
Easy Ich stöpsel mal kurz an
Da müssen wir halt auf dem Raspberry Pi Docker installieren und gucken ob ich das Image pullen
kann von Hand
Ich muss mal kurz im DHCP schauen
Was der Raspberry Pi liest ist
Pi hier
Pi add Der wirds wahrscheinlich sein hier oder
Ping wir den mal und hoffen dass der irgendwann hochkommt
Schreib doch ne Action die die Images pullt und runnt
Das könnte man auch machen
Aber ich brauch was was auf ARM Basis ist und die GitHub Runners sind alle nicht auf
ARM Basis
Dann müssen wir wieder mit QEMO anfangen und wir wissen ja QEMO und.NET hat so seine
Probleme
Ey wir lassen es jetzt auf dem Raspberry Pi laufen easy
Starten könnte er aber mal
Macht er noch was er blinkt er blinkt wie verrückt
Blink kurz also es müsste die richtige IP von dem Raspberry Pi sein
Blinke blinkge
Es hat sich gerade bei mir ein Server eine neue IP geholt der Eierjahr heißt
Weiß nicht so genau welcher das ist aber anscheinend habe ich den mal so genannt
Der Raspberry Pi blinkt immer noch ganz wild
Also der braucht ganz schön lang zum starten
Ich sehe jetzt hier auch nichts
Moment Moment das ist doch falsch
Pi add ist doch Blödsinn
Der muss doch eine andere kriegen
Das kann doch gar nicht im Internet sein
Hier 1.55 ist gerade hochgekommen 1.155
Ping schonmal nicht auch nice ggeeds
Wer weiß was das ist
Hat sich auf jeden Fall gerade eine IP gezogen
Hier 1.13
Das müsste er sein
SSH Pi add
Die haben ja kein Default Passwort mehr
Was ist so eine dumme Idee von denen gewesen das Default Passwort rauszumachen
Jetzt kann man das Image einfach nicht mehr flashen auf die SD Karte und dann sich drauf
verlassen dass es funktioniert
Das ist so dumm gewesen was soll der Scheiß warum ist das Standard Passwort weg
Das wird jetzt nichts jetzt muss ich neu flashen
Was weiß ich denn was das für ein Passwort
Der hat ja standardmäßig gar kein Passwort mehr
Keine Ahnung
Ach das ist so dumm dass es kein Standard Passwort mehr
Das ist einfach absoluter Kackmove von denen
Ich muss mal kurz mal kurz mal nen Switch anschließen
Da ist die Netzwege
So Switch anschließen
Abstöpseln
Pi abstöpseln
Flashen wir den Kram halt neu
Flashen wir nochmal neu
Pi imager
Jawoll
Choose OS was wollen wir haben Raspberry Pi
2 und 3 spitt meinetwegen True Storage
Moment
Moment Leute Moment
Also
Pi und ich mach jetzt 1 2 3 4 5 6 Massive Passwort kommt niemand drauf
WLAN brauchen wir nicht
Muss ich das jetzt noch irgendwie aktivieren oder checkt er das jetzt
Ja es ist egal ob 32 oder 64
Wisst ihr wo ist wurscht läuft beides
Und die Software also das Image ist ja ein 32 32 Bit das muss das muss da drauf laufen
Ich hab kein x64 Image
Ich hab nen x
Ich hab nen arm v7 32 Bit Image
Und AMD 64 Image das AMD 64 Image läuft da logischerweise eh nie drauf
Auf gib alles
SD Kartenschreiber
Auf verifying
Keck braucht denn sowas
Ja continue
Ja was denn sonst soll er verifyen
Ups drunter gefallen
Alles klar dann starten wir den Raspberry Pi nochmal
In der Hoffnung das es jetzt funktioniert
Wie rum kommt denn die SD Karte ich machs immer falsch rum
Ich mach die SD Karte jedes Mal falsch rum rein
Strom
So und jetzt ist er im internen Netzwerk
Das heißt er sollte eigentlich die hier bekommen gleich
Schauen wir mal ob das funktioniert
Der muss jetzt erstmal seine SD Karte resiessen und
3 mal booten oder so bis er bis er initial hoch kommt aber es sollte funktionieren
Pizza Hawaii
Ich verstehe diese ganze Diskussion nicht ob Ananas oder keine Ananas
Ja ich gette das Meme da drum herum
Aber warum nicht einfach jeder worauf er Bock hat
Ist ja nicht so als sterbender Leute für dass da einer davon außer vielleicht Ananas
Leute
Die habe ich noch nicht gesehen
Du stirbst an cringe
Das kommt mir auch öfters vor
Kann ich eine C Sharp Entwicklungs Umgebung in docker mit docker umsetzen
Ne Entwicklungs Umgebung ist ein grafisches Programm
Ich meine ja ok Du kannst theoretisch den X Server in docker
starten
Oder X Forwarding machen
Das geht schon
Geschwindigkeit dürfte aber was anderes sein
Achja stimmt
Ich habe gar nicht mehr gesehen was er geantwortet hat
Das ist ja die Frage
Der Professor meint dass ein Service genau eine Sache macht
Also zum Beispiel nehme ein Geos JSON-File aus einem Storage und mach daraus ein C Sharp
Objekt
Und übergebe das Objekt an einen anderen Service
Da kommt er am Ende laut meiner eigenen Ablauf die er kam
Naja also das würde ich nicht machen
Es ist die Frage in dem Fall eher
Was will der denn eigentlich genau sehen von dir
Also ganz im Ernst
Für eine einfache Sache
Also man muss nicht jede einzelne
Gehen einzelne Funktionen Funktionsaufrufe in einen Container packen
Also man muss es nicht übertreiben
Also das würde ich so nicht machen
Aber wenn er das natürlich so sehen will ist das wieder was anderes
Eins Lukas Dankeschön für den Sub
Übrigens Leute ich weiß nicht ob ich es schon erwähnt habe
Aber nur für den Fall der Fälle dass ich es noch nicht mitbekommen habe
Aber Rich Prime ist kostenlos
Kann man durchaus als Enhancement sehen
Also das würde ich nicht machen
Ich würde das so weit zusammenfassen wie es sinnvoll ist
Also wenn du Sachen in.NET programmierst
Da würde ich halt da mehrere Sachen
Verarbeitungsschritte in einem Programm teil machen
Man kann ja durchaus sowas wie
Das abrufen von irgendwo
Dann das posten es kommt ja auch auf die richtige Architektur an
Jetzt jede Funktion in einen Container packen ist das eine
Theoretisch müsstest du die Daten dann irgendwo abrufen
Dann müssten die Daten in irgendeine Message Queue
Dann brauchst du irgendwo einen anderen Service
Der diese Message Queue ausliest
Dann irgendeine Verarbeitung laufen lässt und Daten dann irgendwo hin pusht
Also das ist mit einem Docker Compose
Also
Der Sinn von Microservices ist ja nicht dass du quasi den Programmablauf in 200 Container
aufsplittest
Und dann anfängst bei Container 1 aufhörst bei Container 200 das alles wieder runter
fährst
Also so nach dem Motto
Starte die Verarbeitung erster Container startet übergibt es an zweiten übergibt
es an dritten übergibt es an vierten
Und dann wenn er wieder am Ende durch ist dann dann fährt er wieder alles runter
Also das ist ja kein
Man muss ja kein Programm einfach aufsplitten um das aufsplitten willens
An den Stellen wo es sinnvoll ist ja kann man das natürlich benutzen
Wie gesagt du hast irgendwie den Service der Daten abruft
Der postet das in irgendeine Message Queue
Die muss permanent laufen
Das ist dann wieder was anderes aber einfach nur das aufsplitten
Na guck mal da ist der Raspberry Pi
Das aufsplitten willens
Würde ich jetzt auch nicht unbedingt machen
Und so ich hab gesagt 1,2,3,4,5,6 geht easy
Update
Und das lässt sich natürlich ohne Probleme mit Docker Compose umsetzen
Da brauchst du kein Kubernetes Cluster auch wenn der Chat das sagt
Nimmst du irgendwie RapidMQ oder sowas als Message Ding
Im Endeffekt würde ich sagen gibt es am Ende vielleicht
Naja wenn es 10 Container sind dann ist es wahrscheinlich sogar schon viel
Irgendwo was was abruft
Dann es in die Message Queue schickt
Dein Geodaten Umformatierungs Ding liest das aus der Message Queue und schreibt es irgendwo
wieder rein
Weiß nicht was am Ende mit den Daten passieren soll
Es sei denn euer Professor will das so haben dass ihr am Ende 200 einzelne Container habt
für quasi für jedes Printline einen eigenen Container
Was aber mit der Realität da nicht so viel zu tun hat
So Packages
Arm4Sieben Testchamp
Da müssen wir jetzt erst einmal einstellen Package Settings
Der Arm4Sieben Testchamp
Der ist Public
Yes ich understande die Konsequences
Und jetzt kann ich hier nämlich nicht Docker pullen
Ne wir haben kein 200 Mikroservices Geodaten Ding
Dann lassen wir das Image mal laufen und gucken ob das funktioniert
Container De
Ja das brauchen wir gleich
Kekel größer Keck weh
Ja könnte ich mitgehen
Allerdings Lulwe ist immer noch eindeutig das bessere Emote
Ja würde ich auch nichts erwähnen
Was willst du sagen
Ich habe im Twitch Chat gefragt und die Leute haben mir random Zeugs erzählt
Ne ne würde ich auch nicht erwähnen Lul
So docker run
Auf gehts und zwar docker run
Mal schauen ob mein Image funktioniert
Ok downloadbar ist das Image schonmal
Startbar ist das Image auch
So und jetzt wo habe ich das hin kopiert
Bild App
Hello World funktioniert
Image hat getan Image Bild
Ja wir sind auf einer AMD CPU
Wir sind auf dem Raspberry Pi und haben das Image inklusive unserem Testprogramm ausgeführt
was wir in GitHub erstellt haben
Das läuft für tatsächlich zu gut
Ich glaube das AMD Image müssen wir nicht wirklich ausprobieren das wird auch so funktionieren
Das haben wir gemacht für den Fiat Champ genau
Dass ich automatisch neue Releases pushen kann und dann ein Image gebaut wird
Wobei ich mir gar nicht so sicher bin
Wollen wir mal gucken wie viel RAM es braucht
Ja nachdem es einfach nur in Hello World es sollte jetzt eigentlich so gut wie nix brauchen
Aber schauen wir mal
Schauen wir mal
Machen wir mal hier unten auf
Es braucht gar nix
Das erscheint mir tatsächlich ein bisschen wenig
Ich glaube der Raspberry Pi kann das nicht die Limits richtig auslesen oder
Weil irgendwas scheint da nicht zu funktionieren
Ich meine 0% RAM
Es läuft zumindest eine Bash allein schon die sollte nicht null Byte haben
Wir können mal ein bisschen
Bisschen Rechenlast generieren
Ok CPU Auslastung checkt da aber Memory Usage checkt da nicht
Ne also die Anzeige ist irgendwie broken
Was ist das für eine Docker Version
Lass uns mal kurz was checken
Docker minus minus Version 20.10
Das ist glaube ich relativ aktuell
Guck mal was die aktuelle Docker Version ist
20.10.18
Und was ist das 20.10.5
Docker
Ja von von 2013 ja da könnte man vielleicht
Docker Stats das sind Schaumärmel
Wahrscheinlich ist die Docker Version noch verbackt die beim Raspberry Pi dabei ist
Ich bin aber ich bin nicht auf ARM 64
Ich bin auf ARM 32
Wobei das wahrscheinlich er ist auch so
Yes looking like
What the hell was muss man da hinzufügen
Ok heute lernen wir wieder was
Boot
CMD
Wie kein Wim installiert Grinch
Chat ist wieder am Backseiten ja aber in dem Fall mal ordentliches Backseiten
Effektives Backseiten
Jaja ist gut Ups
Da habe ich einmal zu viel Enter gedrückt
Boot CMD Line
Mal gucken ob der überhaupt noch bootet
Crap neu generieren muss man beim Raspberry Pi ja nicht da sollte das ja auch so alles
fressen oder
Pi change CMD
Da muss man nix machen oder muss man Crap Update machen
Wird schon funktionieren Reboot
Das Bild oben
Was auch immer
Was hat es mit Kekwe und Kekkel auf sich wie jetzt
Da sind Emotes guck das hier ist Kekwe
Das hier ist Kekkel
Ja das sind Emotes
So und warum das so beliebt ist Lulwe ist eh das beste warum das so beliebt ist
Das ich weiß kennst du das Original davon
Mr. Phil
Oder ist das auch noch eine große Internet Meme Lücke
Wenn wenn ja müssen wir die unbedingt jetzt beheben
Und zwar das Original ist YouTube el risitas
El risitas
Oh Mann, es geht immer noch nach 100 Jahren gefühlt.
Ok, der Raspberry Pi ist wieder da.
Docker Stats, achso es läuft kein Container, 0, Run, hey es funktioniert, Memory Usage 3,785
MB, Omg, und wenn ich.NET starte, haben wir 1,2 MB mehr Usage, richtig bloated.
Was ist MIB, Mibibyte, ne Mibibyte, das ist eingeführt worden, weil die Leute sich nicht
darauf einigen konnten, ob es 1000 oder 1024 ist, ich meine streng genommen ist es 1000,
aber im Dezimalsystem bietet sich ja 1024 mehr an, also rein vom Wort her ist es 1000,
weil Mega ist 1000, also quasi 2 hoch die Stellen, da ist es dann aber 1024, das heißt
man konnte sich nie so richtig drauf einigen, manche haben es so gesagt, manche haben es
so gesagt, Pinnair, Pinnair System, Dual kann man glaube ich auch sagen, und deswegen
ist man auf die Idee gekommen, man könnte jetzt ja Mibibyte einführen, was definiert
1024 ist und Megabyte halt 1000 machen, nur mit dem Unterschied, dass eigentlich das
nicht wirklich was gebracht hat und irgendwie so gut wie jeder immer noch 1024 für Megasachs
und ach Pff, scheiß drauf, zum Glück ist das ja meistens nicht so wirklich relevant,
weil der Unterschied nicht so groß ist, allerdings muss man sagen, gerade bei Festplatten in
Zeiten wo wir bei 16, 18TB Platten angekommen sind, da macht es ja wohl den Unterschied,
ob es 1000Bytes sind oder 1024Bytes, ja stimmt, es ist natürlich plötzlich ein Kilobyte,
1024, mit Kilo hast du das gleiche, da gibt es dann Kibi dafür, warte mal, es gibt Kibi-Byte
oder?
Ne, warte mal, es ist Kibi-Byte, Mibibyte, Gibibyte, ach du Scheiße, ganz ehrlich, Kilobyte,
Megabyte, Gigabyte, Terabyte, reicht, voll und ganz.
Ja ok, wir haben unseren Raspberry Pi gefixt, nice, easy, easy as fuck, kann man dazu nur
sagen, alles gut, so es funktioniert, jetzt können wir den Raspberry Pi eigentlich wieder
aufpowern, wobei, wir lassen mal an, vielleicht brauchen wir ihn noch, vielleicht brauchen
wir ihn noch, gut, so, wir sind aber wahrscheinlich, mein Automatisierungs-DevOps2, das ich sage,
das ist so aber noch nicht gut, alleine, weil, auf was für einen Push, wollen wir eigentlich
reagieren, Push auf Master, wahrscheinlich nicht, weil, die Sache ist die, nur mal so
für den Fall der Fälle, mir fällt da nämlich schon ein, dass es nicht richtig funktioniert,
und zwar, wenn ich die Images generiere, nach einem Push auf Master, besteht die Chance,
dass das Upgrade bei Leuten kaputt geht, on tech, ja wahrscheinlich ist das wirklich
am besten, weil, nur mal so als Erklärung, also, die Addons funktionieren folgendermaßen,
die Addons fügt man bei seiner Installation hier über die Url hinzu, und jedes Addon
Repo hat hier so eine Config-Yaml, und in der Config-Yaml steht eine Versionsnummer,
das heißt, wenn ich die Versionsnummer jetzt hochzähle, und das pushe, dann sehen die
Leute quasi instant, dass es ein neues Addon gibt, aber, das Image-Build läuft noch, also
sprich, es wird schon ein Update-Button angezeigt, obwohl das Image noch nicht fertig gebildet
ist, das heißt, wer ultra schnell ist, und Upgraded innerhalb von diesen 5 Minuten, hat
vielleicht bei einem Klick auf Update ein paar Fehler noch, ist nicht schlimm, das alte
Addon läuft ja noch weiter, und 5 Minuten später geht's dann, was man machen könnte,
ist, man könnte pushen, man könnte das, kannst du bitte das, das ist die Katze, oder?
Das ist diese Katze, die so guckt, das ist ein 7TV-Emote, ich glaub, weiß gar nicht,
ob es das woanders gibt, ach, ist das, ist das die Schildkröte, ich kenn das nur mit
der Katze, Alter, 7TV ist einfach, teilweise echt schon ziemlich, ziemlich harter Cringe-Faktor,
es gibt 5000 Versionen, ich kenn das, ich kenn das mit der Katze, das da, genau, genau
das, das mein ich, FFZ, nee, ich will die Katze haben, wenn ihr die irgendwo findet,
mach ich die rein, so, was wir jetzt haben, wie gesagt, eine Sache, die mir jetzt noch
einfällt, auf was will ich pushen, ich will ja auf jeden Fall nicht Master pushen, entweder
macht man einen Release Branch, in dem man das pusht, wartet bis die Image fertig sind
und dann schiebt man es nach Master oder man sagt On Tag, das würde auch funktionieren,
kann man sogar noch einen Filter einbauen, Tag, komm mal ein Beispiel für, ja, gar nicht
und Master pushen, On Tag Version, oh, jetzt brauchen wir, jetzt brauchen wir 6 Head Regex,
Moment, Moment, das haben doch bestimmt andere Leute schon für mich gebaut, ah, yes, obviously,
so, wie, das geht nicht, Invalid Character Range, easy, ok, dann machen wir die Lite
Version, also V, 0-9, beliebig oft, Punkt, 0-9, beliebig oft, Punkt, 0-9, beliebig, nee,
kein Punkt, fertig, so, Massive, so, wenn ich jetzt einen Tag pushe, dann läuft das
Ganze erst, ich weiß nicht, ob ich es schon erwähnt habe, aber Twitch Prime ist kostenlos,
bestes Issue, Start Commit, so, jetzt sollte er das nicht mehr automatisch ausführen,
wenn ich pushe, ja, Regex geht ja anscheinend, das mag er ja, da hat er nicht gemeckert,
so, und jetzt bräuchte ich theoretisch so eine Art Release Script, was für mich den
neuen Tag macht, Tag pusht, guckt, dass alles committed ist, aber wir müssen es ja nicht
übertreiben heute, ja, das ist glaube ich sinnvoll, das so zu machen, weil, ja die Katze
ist hinzugefügt Leute, jawoll, sehr gut, exellent, das Emote meine ich, das da, das da, ha ha,
ihr müsst den Chat erst reloaden, dass es funktioniert, und die Emotes brauchen teilweise
ein paar Minuten, bis sie funktionieren, so, und jetzt sollte es eigentlich klappen, wenn
ich das jetzt tagge, naja, wir pullen mal, ging direkt, ok, nice, so, also wenn ich jetzt
hier irgendwas drin ändere, sagen wir jetzt zum Beispiel, keine Ahnung, Test Addon, ja,
ich wollte jetzt unbedingt das Docker File unten die Zeile löschen, ja, das ist genau
was ich machen wollte, git commit, 0, so, und jetzt kann ich sagen git tag, sagen wir
v1.0.0, oder v0.0.1, oder sowas, 0.0.1, ja, Release, so, v0.0.1, tag, git push origin
minus minus tags, und jetzt sollte es eigentlich gecheckt haben, ja, geht, nice, ich hab's
wieder geedit, ich hab's gar nicht rausgeworfen, anscheinend wurde es gelöscht, so, und jetzt
gibt's nen Tag, und er baut das neue Image, das ist äußerst nice, so, und jetzt zeig
ich euch mal was, der taggt das sogar jetzt richtig, das Image, guckt mal, gehen wir nochmal
auf den Raspberry Pi, und eben hatten wir ja gesagt, Docker run, pass mal auf, Docker
run, bla bla bla, Latest hatten wir eben gesagt, so, Latest ist es jetzt nicht, es ist v0.0.1,
wenn das Bild fertig ist, warte jetzt mal ab, das mit dem taggen müsste jetzt eigentlich
genau, ach nee, ich bin ja doof, meine Versionsdatei hat sich ja nicht geändert, wobei das ist
egal für in dem Fall, mal kurz warten bis der fertig ist und das Image gepusht hat,
das kann, nee, Moment, der checkt das mit dem tag nicht, weil meine Versionsdatei vom
addon noch nicht funktioniert, mal kurz warten bis der fertig gebildet hat, so, create image,
tag, er hat das gepusht unter, er hat's gecheckt, er hat es gecheckt, 0.0.1 war es davor auch,
ah, ok, dann testen wir es doch gleich mal, ob das, ob das geht, ich mach mal ein zweites
tab, so, tag, 0.0.2, also das sollte jetzt eigentlich nicht gehen, ich brauch da noch
einen zweiten Schritt, push, nee, nee, nee, hab ich nicht, deswegen, das wird nicht, ich
denke nicht, dass es funktionieren wird, aber das will ich ja auch gar nicht, ich will,
dass das über das tag kommt von dem addon config file, das heißt, ich muss da wirklich
noch mehr als eine Sache machen, will man nicht die release datei in der pipeline generieren,
also sprich, nachdem wir container bauen, schreibt der automatici version ins file, nee, da müsste
ich ja in der github actions commit machen im branche, nee, das finde ich eigentlich
nicht so toll, schauen wir mal, wie weit der jetzt ist, da würde ich mir lieber ein release
script basteln, was das die schritte der reihe nach macht, sonst bin ich mal gespannt, was
er jetzt baut, wahrscheinlich baut er weiterhin mit 0.0.1, jetzt habe ich genug emotes geedet,
reicht für heute, so, create image, was hat er jetzt gebaut, er hat gebaut, 0.0.1, ok,
der tag interessiert ihn überhaupt nicht, ok, push, das heißt, wenn ich ein neues release
machen will, muss ich folgendes machen, ich muss in die config datei gehen, da zum beispiel
reinschreiben keine ahnung 0.5, dann muss ich das commiten, dann muss ich den tag machen,
so hier, das muss man echt mit dem script machen, sonst vergisst man die hälfte, dann
den tag, dann push ich das tag, so, dann läuft das bild an, push das image, doch ich habs
gerade wieder aktiviert für den chat, weiß auch nicht warum das gelöscht wurde, willst
du nicht erst den commit pushen, nein, will ich gerade nicht, weil das image da sein soll,
das heißt, leute das neue addon sehen, sobald ich das pushe, sehen leute das neue addon
und ich will bevor leute das neue addon sehen, erst das image generieren, so rum ist das
schon sinnvoller.
So, jetzt bau mal, gogo, ah guck mal, 0.05, sehr schön, start uploading image, nachdem
es von github zu github uploadet, ist es auch kein großes ding, nice, so und jetzt kann
ich euch was zeigen, man kann jetzt nämlich nicht einfach nur sagen docker run, sondern
der tag das automatisch, ich kann jetzt sagen, ich will version 0.0.5 von diesem image runnen.
Wo ist das problem, ach einfach nur 0.0.5, weil v, ja das muss ich anders machen, das
ist ja ekeliger, da muss ich mir wirklich irgendeinen script bauen, so 0.0.5 und zack
läuft das image, mit dieser versionsnummer, das ist nice, ich könnte jetzt quasi was
hier machen, release.sh und mir das irgendwie mal kurz zusammenscriptoren, was ich machen
will, weiß nicht, ob ich mir das heute geben will, aber so, aber das könnte man, könnte
man tatsächlich machen, das wäre vielleicht, wäre vielleicht gar nicht so blöd.
Du kannst das docker image beim bauen mit der version von github taggen, nee kann ich
nicht, weil ich es nicht selber baue, sondern ich das mit dem home assistant addon builder
mache, der die versionsnummer nimmt aus dem addon config file, was auch sinnvoll ist in
dem fall, aber ich könnte mir irgendwie sowas hier zusammenscripten auf die schnelle,
also wir könnten irgendwie sagen, so hier echo last tag, git describe, wenn ich mal
schreiben könnte, so irgendwie echo, enter next release tag, irgendwie read, ja und speichern
wir uns das irgendwie zwischen, wobei nee glaubt, glaubt, es ging einfach so, reply,
wie heißt das, sieht falsch aus, reply, so, glaub so, glaub so ist die richtung, ja fife
shell script, den kommt jetzt, so next tag, dann sagen wir git tag, minus a, minus m, ja,
dollar next tag, wir sollten es noch checken, ob es leer ist, release tag, sowas in der
richtung, könnten wir machen, wim, warum nicht wim, why not, ich weiß ja im vergleich
zu anderen, wie man aus wim wieder rauskommt, so git tag, dann könnten wir das taggen,
dann müssen wir, oh jetzt kommt zet magic leute, zet, wir müssen die versionsnummer
in der datei ändern, zet, so, wir wollen version ersetzen durch version doppelpunkt,
cluster, und dann next tag, ups, und jetzt die datei angeben, konfig, ja, funktioniert,
funktioniert, massive, ich will das übrigens im hauptverzeichnis liegen haben, so, ich
will, so, minus i, dass er die datei ändert, so, danach, ergibt das sinn an der stelle,
da müsste ich es noch committen, git commit, und den tag, den tag machen wir logischer
weise später, jetzt bastel ich mir doch irgendein komisches release skip, was ich eigentlich
nicht machen wollte, so, das müsste funktionieren, und jetzt schreiben wir da noch folgendes
drunter, irgendwie echo, und link zu den builds, wunderbar, wait for build to complete before
pushing, bastel, irgendwie sowas, echo, zack, so, und wenn ich das jetzt mache, dann sollte
eigentlich alles klappen, ich hoffe, dass, ich hoffe, dass ergibt sinn, was ich hier gebaut
habe, also, release, latest tag, enter next release tag, v0.0.6, das ging jetzt aber ganz
schön schnell, actions, ah, habe ich den push vergessen, ich glaube, ich habe den push vergessen,
ah, das sollte ich vielleicht auch noch machen, git push origin, minus, minus tags, release
v0.0.7, jawoll, es läuft jetzt für beide tags, ist natürlich in dem fall ein bisschen
overkill, aber normalerweise pushst du immer einen tag, ja, es funktioniert, so, und wenn
ich das jetzt, ah, guckt mal, ist natürlich doof, ich hätte, ich hätte, ich müsste vorher
eigentlich noch ein ordentliches commit machen, so, jetzt läuft das durch, und wenn das durchgelaufen
ist, dann kann ich master pushen und das neue addon ist da, also im endeffekt, ich kann
jetzt auch unten auf meinem raspberry pi, das dann starten mit 0.0.7, nein, das ist
wirklich die, wir bauen release absolute lite variante, aber so kann man weniger vergessen,
und ich habe ja heute morgen schon gesagt, ich bin ein fan von simplen sachen mit bash
zu machen, ja zwei builds parallel ist glaube ich das kostenlose github, nicht so, nicht
so schnell, ok, jetzt auf, mach hin, gib ihm, ok, es sind schon zwei jobs completed, er
braucht einfach ein bisschen, so, das ist fertig, das müsste jetzt auch gleich fertig sein,
aber es geht eigentlich, ich meine, die images sind in ungefähr zwei bis drei minuten gebaut,
das ist, das ist in ordnung, so, und jetzt kann ich einfach 0.0.7 starten und es, es
punktiert nicht, na geil, warum denn nicht, was hab ich verkehrt gemacht, nee, da ist
kein v, da ist es kein v, create image, ach jetzt ist es v, ah, jetzt ist es v, doch doch
jetzt ist es v, klar, weil jetzt schreibe ich ja auch den tag da rein, ich glaube das
sollte ich nicht machen, weil ich vermute, ich vermute, das addon hat probleme damit,
wenn dort pow drinne steht, also, muss man das anders machen und zwar, den tag, bei dem
tag kommt das v davor, aber bei der datei kommt es nicht davor, als dem endeffekt, ok,
1.0.0, massive versionssprung, ok, warten wir noch mal bis das build fertig ist, resident
sleeper, aber wenn es eins läuft, ist es auch halbwegs schnell, so, und dann sollte
es theoretisch das ganze funktionieren mit 1.0.0 und dann bin ich zufrieden, dann kann
der fiat champ so gebildet werden, warum tagst du den release nicht mit einer github
action, ja, weil ich auf irgendwas ja mein build triggern muss, und wenn ich master pushe,
dann zeigt die home assistant schon an, dass es ein neues release gibt, oder aber ich müsste
dann noch ein set oder so in der github action machen, was die datei ändert, weil der tag
alleine reicht nicht, jedes addon hat so eine datei hier, und anhand dieser versionsnummer
entscheidet das ding, ob es dem user anzeigt, dass es addons gibt oder nicht, das heißt
ich muss zuerst die image bauen, die image bauen, bevor ich den master pushe, weil wenn
ich den master pushe, dann sehen die leute, dass es updates gibt, wenn ich master zuerst
pushe, dann drückt einer vielleicht gleich auf updaten, das image ist noch nicht fertig
gebaut, so das sollte jetzt funktionieren, jawoll, huge version 1 am start, warum yaml
datei für die configs, das muss man so machen, dass home assistant das addon als addon erkennt,
also das ist das ist pflicht, das kannst du nicht anders machen, der erwartet, dass
dort eine config yaml liegt mit so einem inhalt, ansonsten zeigt er den leuten nicht an, dass
es ein gültiges addon ist, was halt sagt, weil man will es ja als addon verwenden, so
die app funktioniert immer noch, wunderbar, excellent, also du musst die yaml datei da
liegen haben, anders geht es nicht, ja aber es funktioniert, alles gut, nice, so und jetzt
hat er das image gebaut, jetzt kann ich auch das hier in master pushen und dann kriegen
es die user angezeigt, wenn das da ist, nice, sehr schön, so dann werde ich die image mal
wieder löschen, weil die sind komplett überflüssig, die braucht niemand, äh nicht der 4a champ,
der test champ muss gelöscht werden, package settings, package settings, delete this package,
test champ weg, delete this package, armv7 test champ weg, sehr schön, so und wisst ihr,
was jetzt passiert mit diesem repo leute, nachdem ich jetzt weiß, dass es funktioniert,
das repo fliegt auch wieder weg, also falls ich irgendjemand noch was raus kopieren will
oder nochmal darauf hinweisen möchte, dass twitch prime kostenlos ist, muss ich das jetzt
raus kopieren, weil das repo ist jetzt gleich wieder weg, äh nee wo ist das nochmal, hier
in den settings, hier unten, delete, warte monkaS, sichere dir zuvor die action, hab
ich doch hier, hab ich doch lokal, machen wir eigentlich bald was mit java, nein machen
wir nicht, delete this repo, bam, github will nicht, dass ich das repo lösche, ok ich will
nicht, dass meine nummer hier irgendwie revealed wird oder so, deswegen mach ich mal kurz weg,
send sms, alles klar, nee wird nicht revealed, so sms ist gesendet, ok repo ist weg, exellent,
so muss es sein, so da sind wir wieder leute, das war heute ein erfolgreicher stream, es
hat alles funktioniert, das hätt ich jetzt nach gestern gar nicht gedacht, nachdem wir
uns da mit koemo einen abgemüht haben, hab ich eigentlich package updates vorhin fertig
gemacht, ja sieht so aus, was haben wir hier noch, elektron, weg damit, was hab ich da
eigentlich noch installiert, was edger is missing, ach es heißt jetzt belena edger,
ok ok, das brauch ich eigentlich auch gar nicht mehr, ich benutze jetzt eigentlich immer
den pie imager, edger, weg, nee die bezahle ich nicht, die ersten 3 jahre sind kostenlos
und danach kostet es was, ja da bin ich auch nicht scharf drauf, aber gut, mal gucken,
ja wenn mal was funktioniert ist das ziemlich pog, mal gucken ob ich das dann verlänger,
manjarofirmware, sollte man das wirklich löschen, ist das so eine gute idee, moment leute, das
muss ich mal kurz einen samshot machen bevor ich das lösche, weiß nicht genau was ich
da ehrlich gesagt lösche, aber ich lösche das einfach mal, ok, vielleicht können wir
auch noch einen neuen kernel machen bei der gelegenheit gerade, gib ihm, nee wir haben
den lts kernel, da bin ich zufrieden mit reboot, gucken ob es auch funktioniert, also kernel
löschen, firmware löschen und so, da weiß ich immer nicht so genau, nicht dass der doch,
letztens war ja bei artscheinungs auch krupp kaputt, wobei ich hier glaube gar keinen krupp
verwende sondern systemd bootd, weißt du was man nach den 3 jahren zahlen muss, nee 30
euro im jahr oder so, wie hast du das mit dem snapshot gemacht, hab auf snapshot machen
geklickt, so nachdem der, nein nein nicht matt, max123456 massive password, password leak
by the way, so anscheinend funktioniert noch alles, weiß nicht, kann den snapshot löschen,
exellent, also das ist der funktion die ist in fireworkstation eingebaut, dass du snapshots
machen kannst, eines der praktischsten funktionen, die es da so gibt, wenn man nicht so genau
weiß ob das alles ordentlich funktioniert was man jetzt vorhat, Leute das wars, es hat
funktioniert, fertig und ich hab heute auch lang genug gestreamt, wir waren heute morgen
4 stunden und heute Abend noch 2 stunden, es gibt ja leute die streamen irgendwie 8 stunden,
8,5 stunden am tag, ich weiß nicht wie die das schaffen, das sind wahrscheinlich alles
kleine zoomer, jaja vm snapshot, ja, unter ledungs gibt es verschiedenste varianten snapshots
zu machen, so einen nice snapshot wie mit fireworkstation kannst du ja nicht machen,
das höchste der gefühle ist, dass du was weiß ich in btrfs oder zfs snapshot von einer
disk machst, aber snapshots inklusive ram ist natürlich schwierig bei einem rechner
rebootet so, wobei, also theoretisch müsste es gehen, aber ich glaube das hat noch keiner
probiert, richtig, genau, also ich hab ein home assistant addon mit unter anderem software
in c sharp, daraus ein, also ich hab aus meiner software, aus meiner c sharp software ein home
assistant addon gebaut, was github mir quasi kompiliert und so ein docker image draus
baut und das wichtigste ist ein docker image baut, das auf dem raspberry pi läuft und
das auf dem desktop läuft, chainlaw was ist da wieder los, ich reload jetzt mal den chat,
dass ich das auch sehe, nochmal leute, jawoll
jetzt wird ganz schön gekackt chatted, giga cute chat
gut leute, wir sehen uns im nächsten stream, machts gut, bis dann, see you
