Das war's für heute und wir sehen uns beim nächsten Mal wieder, bis dahin, tschüss, tschüss, tschüss, tschüss.
Das war's für heute und wir sehen uns beim nächsten Mal wieder, tschüss.
Das war's für heute und wir sehen uns beim nächsten Mal wieder, tschüss, tschüss, tschüss.
Das war's für heute und wir sehen uns beim nächsten Mal wieder, tschüss, tschüss.
Hi IQ, ich zeige euch die krassen Hacks-Videos, ich hab selbst wenig Ahnung von.
Moin, übrigens heute das Allerwichtigste, das Allerwichtigste, was ihr euch jetzt alle angucken müsst, ist,
das muss ich ein paar Mal im Stream heute noch bewerben, es gibt jetzt Hi IQ Kicks-Emotes auch auf YouTube, guckt mal.
Wenn man jetzt hier auf joinen...
Okay, ich kann das nicht anzeigen, weil ich nicht eingeloggt bin.
Es gibt jetzt Kicks-Emotes, aber ich kann euch Community-Posts zeigen, guckt mal.
Es gibt jetzt Hi IQ Kicks-Emotes auch endlich auf YouTube.
Es gibt zwei Tiers auf YouTube, es gibt das Classic Classic Kicks Tier.
Es gibt zwei Tiers auf YouTube, es gibt das Classic Classic Kicks Tier, enthält vier Badges jeweils nach Monaten und aktuell vier Emotes.
Ich kriege ja noch mehr Emote-Slots, das ist wie bei Twitch, man kriegt mehr Emote-Slots, wenn man Subs hat.
Ich könnte aber jetzt schon, glaube ich, das nächste hochladen.
Für das erste braucht man zwei Subs, für das nächste vier oder irgendwie so.
Ich könnte jetzt eigentlich schon eure Müsse machen, mache ich nachher gleich, nach dem Stream.
Gleich mal aufschreiben, noch weitere Emotes für YouTube.
Gleich raufladen, ich habe ja noch welche, die haben wir auch hier.
So, kann man jetzt auf YouTube machen.
Und ihr könnt allerdings auch das 7,99 Euro Tier nennen.
Aber da bekommt ihr genau das gleiche wie beim 2,99 Tier.
Also wer 7,99 Euro ausgibt, der sorgt einfach nur dafür, dass ich mehr Geld kriege.
Der bekommt nicht mehr dafür, das ist für den Gönnerkicks unter euch.
Er lernt's Welt, ja mal gucken, wie weit wir kommen.
Ich will mal zumindest mal so einen kleinen Überblick verschaffen darüber heute.
Der Java-Mage, wo wir gerade dabei sind, ich muss gerade kurz mal eine VM starten.
Eine VM, die coolen Leute das sagen.
Preseriff, ist das eine Schriftart?
Hört sich irgendwie so an.
Das habe ich auch von den Fans, höre ich das auch immer.
Deswegen musste ich mir das mal angucken.
Was zeichnet Svelte aus?
Also, ich habe da keine große Ahnung von, aber soweit ich das verstanden habe, ist das folgendermaßen.
Der Unterschied zwischen Svelte und so etwas wie Vue.js oder Angular oder React ist,
dass Vue, Angular und React das sind Frontend-Frameworks.
Das heißt, du schreibst irgendwie dein JavaScript-Zeug und wenn die Seite lädt,
dann muss das Framework auch geladen werden, damit deine Seite funktioniert.
Bei Svelte ist das wohl anders.
Svelte ist quasi komplett ohne Runtime-Overhead.
Das verschwindet quasi nach der Entwicklung und übrig bleibt optimiertes JavaScript.
Also quasi Svelte kompiliert dein High-Level-Zeug runter zu Vanilla JavaScript,
was dann ohne zusätzliche Downloads und Abhängigkeiten läuft.
Ob das jetzt komplizierter ist als Vue oder einfacher oder sonst wie, muss man mal sehen.
Keine Ahnung.
Ich habe das noch nicht ausprobiert.
Und dann gibt es noch, ich habe keine Ahnung, ich habe das noch nicht ausprobiert.
Ich weiß es doch nicht.
Was meinst du, warum der Titel so ist?
Ich habe keinen blassen Schimmer.
Und dann ist wohl der Unterschied.
Es gibt Svelte und SvelteKit.
Anscheinend ist Svelte zu dieser JavaScript-Kompiler.
SvelteKit ist quasi ein Library-Package,
was dir Sachen einfacher macht, in Svelte zu programmieren.
Zum Beispiel kannst du dann Kleinzeit-Routing machen im Browser.
Das geht dann wohl einfacher damit.
Das müssen wir uns heute mal angucken, weil ich habe keinen Plan davon, keinen Schimmer.
Schöner hast du deinen Vue hergefahren, das hier 100 Milliarden.
Alter, richtig krass.
Big stonks hier jetzt.
Ja genau, das habe ich auch gelesen.
Dass das einfach ein bisschen zu spät war.
Also ich habe gestern ein Video, warum ich mir das angucke.
Ich habe da schon ein paar Videos zugeguckt.
Aber ich habe gestern ein Video geguckt, ich weiß aber wirklich nicht mehr von wem.
Der meinte, Svelte ist quasi das beste Frontend-Framework,
was es gibt, ohne wirklich ein Framework zu sein.
Aber es war 1-2 Jahre zu spät.
Während es 1-2 Jahre früher gewesen, hat er gesagt,
geht er davon aus, dass es heute mit React das Größte wäre.
Mal gucken, ob das stimmt.
Mein Fanboys sind Fanboys.
Aber mal schauen, ob da was dran ist.
Das muss ich mir noch mal angucken.
Spenni, danke für den Sub. Wer hat denn was gekriegt? Sun Red Poggers.
Da bin ich ja froh.
Was macht SvelteKit?
SvelteKit ist wohl anscheinend so ein zusätzliches Library-Package oder sowas,
wo du Klein-Side-Rooting mitmachen kannst und sonstige Dinge. Keine Ahnung.
So, aber jetzt muss ich glaube ich erstmal meine VM updaten.
Erstmal gucken.
Ach ja, und Klein-Side-Rendering kannst du damit wohl auch machen.
Nicht Klein-Side, Server-Side-Rendering kannst du wohl, genau, kannst du wohl damit auch machen.
Die Sache ist plus die, dass ich das wahrscheinlich nicht machen werde,
weil meine Backends ja immer mit, zum größten Teil zumindest mit.NET laufen.
Ich weiß nicht, wie ich SvelteKit im Backend mit.NET verheiraten soll.
Wahrscheinlich geht das gar nicht.
Es geht wahrscheinlich nur mit Node und Express oder so.
So.
Richtig weihnachtlicher Hintergrund heute. Bing Image of the Day.
Ich muss erstmal kurz ein Betriebssystem,
nee, nicht wirklich ein Betriebssystem, ein Update machen.
Ich glaube, das haben wir schon eine Weile nicht mehr gemacht. Ja, fam.
Neues Manjaro Release. Wo ist denn der so lahm? Na gut, ach, der B die Sekunde ist, ich kann nicht so langsam.
Ist das Arch? Ja, das ist Manjaro.
Arch, by the way, habe ich schon mal gesagt, dass ich Arch verwende?
Aber ich verwende schon lange Arch Linux.
Ich halte Arch Linux auch für das Beste.
Arch Linux muss man ja immer den Leuten mitteilen, dass man es verwendet.
Man kann es nicht einfach so fehlen, einfach so verwenden.
Also, by the way, das ist Arch Linux.
Wer es noch nicht mitbekommen hat, das ist Manjaro.
Das ist quasi ein Abarch Abkömmling.
Aber es ist Arch Linux, by the way.
Wie heißt der Gramm, wo man sich nochmal so einen Login Prompt anzeigen lassen kann?
Ich vergesse das immer, ich verwende das nicht.
Ich verwende das immer nur, wenn die Leute im Stream fragen,
wo man sich so einen Konsolenübersicht anzeigen lassen kann, was man installiert hat.
Wie ging das? Nee, und NeoFetch?
Ah ja, hier gucken wir mal nach.
NeoFetch.
Manjaro, Arch Linux, by the way.
Gibt es den Befehl Arch, by the way?
Wahrscheinlich nicht, aber ich könnte mir fast vorstellen, das hat schon...
Was?
Das ist eine ziemliche Marktlücke, dass es das nicht gibt.
Moment.
Das muss es doch, das gibt es auf GitHub, Arch, by the way.
Das ist...
Tatsächlich...
Das hätte ich jetzt nicht gedacht, dass es da nichts gibt.
Also, ich hätte gedacht, dass es zumindest mal irgendwie so
ein Kommando-Zeilen-Tool gibt, Arch, by the way.
Ja, und was ihr daran seht, ist natürlich das läuft auf GitHub,
und es gibt dann die
Zeilen Tool gibt Arch by the way
Ja und was ihr daran seht ist natürlich das läuft in einer Vm sieht man ja auch hier
Vm
16G RAM und halt Standard Vm wäre Geschiss
Hast du ein Dashpot für deine Heizung?
Du weißt ja dass ich eins habe aber das funktioniert nicht mehr ich habe das mittlerweile durch den
Durch den Heizchamp abgelöst den wir zusammen im stream teilweise programmiert haben
Der Heizchamp der Akte der exportiert hat alles immer ein Home Assistant ich verwende das Heizungsdashpot nicht mehr
Also das Heizungsdashport wo wir gerade dabei waren das war das hier
Aber ihr seht das hat schon lange keine Daten mehr ich gehe mal kurz hier las letzten zwei Jahre
So sah mein Heizungsdashport aus das hat im Chat immer so gut gefallen
Dass der Chat einmal am Tag mein Heizungsdashpot sehen wollte
Aber das verwende ich nicht mehr
Da konnte man Sachen wie Heizungsabgase sehen pumpen aktivität brennertemperatur kesseltemperatur wassertemperatur
Das ist ein Grafana aber ich glaube kein aktuelles
Ich habe mein lokales Containerzeug schon eine ganze Weile nicht mehr aktualisiert
Was soll hier heißen pumpen aktivität oder Dachibas
Offerlein 12 Monate zum ersten mal den Gold Keks dazu kann man ja bloß sagen
Was soll hier heißen
Massive Subscription hier
Also Leute ich muss sagen mein Hals es wird immer besser
Aber ist immer noch nicht gut richtig deswegen muss schon wieder mal eine Runde bonbons lutschen
Warum kein CLI weiß ich mehr CLI kann man doch eigentlich kaum offen haben
Ich kann auch ein paar Terminal starten wenn ihr das lieber ist so so weiß ich ob das so besser
So noch mal alles updaten bevor wir hier loslegen jawoll mach mal alles alles aktualisieren
Alles aktualisieren gebe ihm
Hollywood auf man ist eine gute Idee
Okay genug Terminal Arch by the way
Ich benutze übrigens Archlinux
Das müsste man echt so als Running Gag immer mal so bringen alle 10 minuten weil eben bei einwerfen
Wobei das garantiert nach einem stream euch übelst auf den sack gehen wird
Real Renax Dankeschön Mottke
Pongas Mottke Archief Mottke noch nicht einfach nur Mottke sondern Archief Archief Upload Mottke
So das ist doch schon mal das doch schon mal nice Hackermann Shit hier
Wo ist der Sebaro eigentlich? Hat irgendjemand mal den Sebaro gesehen in letzter Zeit?
Das ist Gnome Terminal ja, ne warum dann nicht. Achja warum i3 weil ich noch x drunter habe
Und jedes mal wenn ich Wayland ausprobieren stelle ich fest dass es zumindest unter vm nicht wahnsinnig gut läuft
Und das letzte mal ich gebe zu das ist schon ein bisschen her aber das letzte mal nicht mal Fenster richtig skaliert bei mir
also die haben also
Was weiß ich wenn man irgendwie ein File Manager
So wenn man den größer und kleiner macht dann skaliert die Anwendung ja intern weil sie weiß wie groß sie ist
Das letzte mal als ich als ich Fenster geöffnet habe unter Wayland dann ist der Inhalt
skaliert also das
Das was ich gesehen hat hat sich nicht geändert sondern das hier ist einfach nur rangezoomt und größer geworden
Also das war ganz wir das habe ich mir okay ich lasse Wayland noch mal vorneweg zehn Jahre Zeit und dann geht es vielleicht
Was ist das für ein Hackermann Programm das ist Hollywood
Das der brauchte
Das macht dann so Hacker scheißbar die auf der Konsole und das sieht richtig Pro aus
Da muss ich jetzt an der Stelle noch mal die Recycle Story erzählen für alle die sie noch nicht kennen
Es hat sich mal bei uns der Chef der der Oberultra Chef angekündigt
Und da haben die extra
Leute hingesetzt weil nicht so viel an dem Tag drinne waren im Büro dass es das super beschäftigt aussieht
Und
Da haben wir dann so dinger hier gestartet dass es wichtig aussieht
Und der der der sitzt der sitzt nachbar der sitzt nachbar von mir der hatte der hatte so so Hacker krams hier laufen
Und ich hatte den browser auf dann ist an der ober ober chef da durch das büro gelaufen hat hat so gemeint
Oh, was ist denn hier schon wieder los
Also so auch spaß und was denn hier schon wieder das verstehe ich ja gar nicht
Da hat er so rüber geguckt zu mir auf meinen browser und hat gemeint so aber das verstehe ich wenigstens
Also, so sah das bei mir dann aus hier
Ich hatte irgendwas irgendwas browser auf da meint also hier das verstehe ich wenigstens habe ich dann am moment normalerweise sieht es bei mir so aus
Habe ich rüber gespitzt darauf so und dann kam eines der
Merkmaligste Momente die ich da so je in einer mit ober ober chef
Ähm kommunikation hatte muss jetzt mal gucken dass ich das richtig zusammen kriege
Wie gesagt er hat irgendwie sowas dann wieder dass er davon versteht dann von davon versteht er gar nichts das gar nicht mehr richtig zusammen
Überlegen
Genau und irgendwie haben wir dann so auch spaß als ich krieg den genauen dialog nicht mehr hin wir haben dann irgendwie auch spaß
da drauf geantwortet
So sinngemäß ja wir haben das ja auch nur aufgemacht weil wir wussten dass sie gleich vorbeikommen
Haben wir alle gelacht und ich glaube und ich bin was ich glaube ich bin mir relativ sicher der kerne ist nicht blöd
Der weiß dass das eigentlich kein witz war
Aber wir beide haben es als witz gesagt
Also dass das das hat er 100 pro kapiert
Wir haben das nur aufgemacht weil wir wussten sie kommen gleich vorbei dem war das genauso klar wie uns
dass das wahrscheinlich
dass das wahrscheinlich stimmt
Wahrscheinlich stimmt haben beide gelacht in wirklichkeit ist er wahrscheinlich dann gleich zu meinem abteilungsleiter gesagt
In Wirklichkeit ist er wahrscheinlich dann gleich zu meinem abteilungsleiter gesagt ey komm an dann machste was mit dem los
ey komm an dann machste was mit dem los
ey komm an dann machste was mit dem los
der verdient wohl zu viel
So hat es jetzt eigentlich geupdatet
Ja ok wir haben geupdatet alles klar ok ich starte noch mal kurz neu
Ich hoffe dass das poggers weihnachts hintergrund immer noch da ist nicht dass es ein anderes bing image of the day ist als gestern
Bing by the way
Oh das habe ich genau im moment wo er das hintergrund bild aktualisiert hat
Bildschirm
Auflösung geswitcht das war jetzt nicht sehr clever da könnte ich mein start mein start skript noch aktualisieren
Das ist das checked das ist das im hintergrund mann ich weiß gar nicht was ich dafür verwende
den report
Skript
Habt ihr jetzt nicht gesehen get wallpaper ist es glaube ich
Ah ja das ist alles klar
Jetzt ist alles wieder poggers
Warum ist rufi jetzt wieder broken ah einmal downcrame
Einmal downcrame das ist broken weil ich immer noch zu dumm war die config anzupassen
Leute das machen wir jetzt mal schnell ich passe jetzt mal schnell die config an
Was ok github das sollte ja nur fünf minuten dauern
Ok wie muss denn jetzt die config wie muss denn jetzt die richtige config aussehen
config C nein
config
config
config
config
config
also
config
config
config
Ich glaube ich glaube die haben irgendwas an der config geändert
Okay ich mein überschreiben tue ich sie ja nicht, die heißt ja eindeutig anders.
So.
Profi Dump.
Wow!
Monkeys!
Was ist da los?
Warum ist da so viel Zeug?
Und jetzt?
Okay, gibt es Profi?
Es gibt doch auch sowas wie Steam.
Steamselektor Okay, was sehen wir denn da?
Alt A, Preview by Enter, okay sieht kacke aus, sieht kacke aus, kacke aus, kacke aus,
kacke aus.
Wow!
Monkeys!
Wow!
Guck mal!
Fancy!
Alter!
Das sieht ja mal alles nicht, nicht...
Seriously!
Nein!
Schildkröre!
Was hatte ich denn da vor für ein Theme?
Okay das hier geht eigentlich.
Das hier ist eigentlich doch ganz cool mit der Sidebar.
Ich hätte halt gern was was zu meinem Hintergrund passt.
Viel gibt es da nicht.
Sowas in der Richtung hatte ich da vor, ne?
Alt A, Accept New.
Ja, guck mal da!
Ich meine die Farben sind ein bisschen broken im Vergleich zu vorher.
Aber, groß und groß funktioniert das ja.
Gut, updaten wir den anderen Kempel nochmal.
Update, Gibi, Toolbox auch updaten, alles updaten.
So, ich lese nochmal kurz Chat, während das alles updatet.
Homo Assistant empfehlenswert, ja!
Homo Assistant finde ich, dass es das einfachste ist zum Einstieg und eigentlich brauchst du
auch nie was anderes.
Klar, du hast noch ein bisschen komplizierter Dinge, sowas wie IO, Broker und so, wo du
eventuell Integrationen findest, die du bei Homo Assistant nicht findest und umgedreht.
Aber ich finde Homo Assistant ist die beste Kombination aus easy Einstieg und gute Optik,
dass es auch jemand anderes außer dir selbst verwenden kann.
Also, ich finde mit Homo Assistant kann man nichts falsch machen.
Ich glaube, ich habe das App Image, weil ich bin mir nicht mehr ganz sicher, entweder hatte
die aus dem Repo die Version, ein Bug mit dem Tray-Icon oder die aus dem Repo hat sich
jedes Mal selbst kompiliert und das hat mir zu lange gedauert oder beides.
Wirst du dich jemals zeigen, wenn das für irgendwas unumgänglich ist?
Ja, aber ich sehe den, wüsste nicht, warum ich das jetzt auf einmal machen sollte.
Der eigentliche Grund, warum ich das mache, ist, weil ich keinen Bock habe, dass mich
Leute in Real Life erkennen.
Ganz einfach.
Ich will im Zug sitzen und halb pennend nach Frankfurt und zurück fahren, ich habe keine
Lust, dass mich jemand erkennt.
Und ich weiß, wie oft der Fabian heute noch erkannt wird, was teilweise echt krass ist.
Wenn der schon oft erkannt wird, immer noch auch vor allem.
Wo ist die passende Copypasta dazu?
By the way, it's called GNU-Linux.
Da gibt's noch so eine tolle Copypasta zu, die brauchen wir jetzt.
Ne, ich update mein Betriebssystem nebenbei, was soll ich denn machen?
Genau das mein ich, das ist das beste Copypasta.
Das brauchen wir, das brauchen wir.
Excellent, I've had high IQ Copypasta hier.
So, ich glaube, wir haben fertig geupdatet, jetzt können wir, nein, das war so nicht geplant.
Wie kriegt man bei VMW eigentlich diese dumme Leiste hier oben weg?
Ich will die Leiste einfach nie haben.
Man kann nicht ausspenden, aber auch diesen Kack da.
Es gab mal in den alten Versionen einen Hack mit, ne, ne, ne, aber wenn der Pin weg ist,
ich kenne das, dann hast du hier oben oft mal die Anzeige, das blendet sich wieder ein.
Es gab in der alten Version mal einen Hack, den du machen konntest, mit Hacks Editor,
den das Ding ausschalten oben, aber das geht nicht mehr.
Okay, ich glaube, wir haben alles geupdatet.
Jawoll, sehr gut.
Können wir loslegen.
Also, wir gucken mal, was die selbst dazu sagen.
Sie sagen Cybernetically, das kann ich schon wieder nicht aussprechen, das ist schon wieder
we are all sitting in one boat, Cybernetically Enhanced Web Apps, warum auch immer die Cybernetically
Enhanced sind, keine Ahnung, aber wir können ja mal kurz gucken, was Wikipedia dazu sagt.
Sie sagen, es ist ein Open Source Web Framework, das es erlaubt, mit Hilfe deklarativer Komponenten,
reaktive Single Page Web, Single Page Web Anwendungen zu erstellen.
Alles klar, anders als andere, kleinseitige Web Frameworks, fungiert Svelte als Compiler,
der den Quellcode in imperativen JavaScript Code umwandelt.
Somit verzichtet das Framework auf das Konzept des Virtual Dom und weist eine hohe Effizienz
zur Laufzeit auf.
So, ich hoffe, das habt ihr jetzt alle verstanden und jetzt kann ich mir das restliche Video
sparen, oder das restliche Stream sparen, was es ist.
Sollte jetzt ja komplett Obvious sein, oder?
Obviously easy, eigentlich komplett easy zu verstehen.
Macht Angular das nicht genau so?
Ich glaube nicht, ich glaube, Angular brauchst du zur Laufzeit noch.
So, exellent, jetzt haben wir uns das angeguckt.
So, und jetzt gucken wir uns die Erklärung an, was SvelteKit ist.
SvelteKit ist wiederum fastest way to build Svelte Apps.
Das liegt am Dark Reader, dass die Seite so broken ist.
Read the Docs, da fangen wir jetzt an.
What is SvelteKit?
Lassen wir uns dann den mal erklären, welche Programmiersprachen beherrschst du, Chet?
Ich hab extra mal eine Liste gemacht, weil diese Frage öfters kommt und ich suche, was
ist das?
Und ich suche jedes Mal, suche ich danach.
Das ist bestimmt noch in der alten VM.
Das war irgendein Markdown, ich glaube, ich glaube in der alten VM, ich glaube in der
alten VM war das.
Pack die doch mal auf GitHub, das wäre tatsächlich eine sinnvolle Idee.
Also, bevor ich mir das nämlich neu ausdenke, suche ich lieber erst mal 15 Minuten nach
dem Textdokument.
Oh ne, es war noch nicht mal Max, was hatte ich denn, war das Test noch in der alten VM?
Test, alles klar.
Ok, Vim.
Das ist was anderes.
Keine Ahnung, wo ich das habe.
Progas, da ist es doch, direkt auf dem Desktop, obviously hier in der Mitte ist es.
Das ist aber nicht das Dokument, was ich suche, das ist nicht das Dokument, was ich suche.
Egal, also das kommt aber ungefähr hin, also ich kann C-Sharp und Dotnet relativ gut,
ich kann Ruby auch, also es ist eigentlich die mit Abstand beste Programmiersprache von
meinen Skills.
Also, C-Sharp und Dotnet kann ich relativ gut, Ruby kann ich relativ gut, Python kann ich
ganz brauchbar, Bash kann ich aufgrund meiner Turnschuhe-Admin-Zeit auch ziemlich gut, C
und C++ ganz ehrlich, ich glaube, ich habe damit schon relativ viel gemacht im Vergleich
zu den meisten, aber gerade C++ ist einfach so eine pepega Low-IQ-Sprache, die kann man
gar nicht können.
Ich habe jetzt ein bisschen Assembler gemacht, ich kann auch ganz brauchbar Javascript, HTML,
CSS geschissen, Ruby kann ich auch ganz gut, da habe ich auf der Arbeit mal was größeres
gebastelt, ein bisschen PowerShell, ein bisschen Rust und ein bisschen PHP.
Siehste, das ist so alt, da steht Go gar nicht drinne, so alt ist das, weil Go kann ich mittlerweile
auch ganz gut.
Richtig Oldschool-Shit, ja das ist nicht das, was ich gesucht habe, aber gut, zumindest
geht das ungefähr in die richtige Richtung.
Cobol, ich meine Cobol haben wir immerhin im Stream schonmal gemacht, das heißt ich
habe mehr Cobol-Erfahrung als wahrscheinlich 99,9er der Weltbevölkerung.
Also wir waren gerade dabei, was jetzt nun SvelteKit ist, wollen wir uns gerade angucken.
Also SvelteKit ist ein Framework für Extremely High Performance Web App, alles klar.
Best Practices sind sonst ganz böse kompliziert mit allen anderen Tools, aber mit SvelteKit
anscheinend nicht.
Ok, ich habe keine Ahnung, was es jetzt genau ist, das ist doch etwas unklar, aber ich glaube,
es ist ein Framework ums Weltrumme rum, wo Sachen einfacher gemacht sind, wie z.B.
Routing zwischen Seiten und solche Geschichten, wir probieren das jetzt einfach mal aus.
Oh, jetzt muss ich erstmal was machen, NPM Update, wie macht man Update von globalen
NPM Packages, Sekunde, Sekunde, NPM, Disable Scripts, das muss ich jetzt erstmal nochmal
kurz machen, Disable Post Install Scripts, das wollen wir haben.
Disable Post Install Scripts, das muss man immer machen, das da, sehr gut, das NPM Sicherheitslücken
nicht so sehr reinhauen, ist es jetzt global, ist es jetzt global oder nur in dem Verzeichnis?
Ne, für All, ok, so wie, NPM minus G Update oder wie ging das, alle installierten NPM Packages
zu updaten, ne, ne minus G, Alter, warum ist das JavaScript Zeug so kompliziert, NPM Update
All, die ganzen CLI Tools, die ich über NPM installiert habe, wie updaten wir den gerade,
das habe ich aber schon gemacht, und dann sagte er, er braucht irgendwelche globalen
Dinger, ok, was auch immer, Zeug drauf, wir machen jetzt einfach das, was da steht, also,
Repos, hier, Swelte, Swelte, das kann, also es lässt sich schonmal schwer schreiben, das
ist ein Test, ok, BAM, NPM in it, Swelte add next, warum add next, warum add next, wahrscheinlich
weil es noch keine finale Version gibt, äh, Moment, Question, was, mit welchen Tools könnte
ich automatisiert mit GitHub Actions auf meinen lokalen Server Apps updaten, ähm, was willst
du denn genau machen, mein GitHub, das, mit lokal updaten und GitHub Actions ist halt
obvies das Problem, dass du halt nicht direkt dich connecten kannst von aus nach innen, du
könntest lokal immer pollen lassen, ob es irgendwas neues gibt, aber, du könntest auch
deine Container in irgendeine Registry pushen als GitHub Action, und äh, dann regelmäßig
bei dir lokal deine Container aktualisieren, also das könntest du machen, du könntest,
du könntest in deinen GitHub Actions quasi immer neue Container Images bauen lassen,
und dann regelmäßig lokal, mit sowas zum Beispiel wie Watchtower, ähm, lokal alle
keine Ahnung, Viertelstunde nachgucken lassen, ob es neue Images gibt, und das dann neu bauen,
also neu, neu erstellen lassen, deine lokalen Container, das geht, das ist mit Watchtower
tatsächlich auch relativ easy, es gibt zwei verschiedene Sachen, es gibt Watchtower und
noch irgendwas anderes, was kein Mensch aussprechen kann, Watchtower ist auch umgezogen, ich weiß
nicht, ob das das aktuelle Repo davon ist, ja, two days ago wird das aktuelle Repo sein,
das ist tatsächlich relativ, relativ nice, weil mit Watchtower kannst du quasi andere
Docker Container updaten lassen automatisch, dann hast du noch, ich hatte gerade eine ähnliche
Idee, dann hast du noch die Möglichkeit, du kannst aber, du kannst auch irgendwelche
Webhooks triggern lassen, dann bräuchtest du aber irgendwie außen was, was du triggern
kannst, du könntest dir auch ne Mail schicken lassen, auf die du dann reagierst, die old
school Variante, also gibt es einige Möglichkeiten, so, also weiter, need to install following
packages creates, well next, yes, this is beta software, wir nehmen mal das, wir nehmen
mal die Demo App, dass ich irgendwie so mal grob das zu fassen kriege, was da überhaupt
passiert, Demo App, use TypeScript Chat, kein Plan von TypeScript, ich hab TypeScript mal
ein bisschen verwendet als es noch relativ neu war, ja, also ich kann das lesen, ich
kann das auch schreiben, aber ich hab jetzt, wenn es Fehler gibt, da keine Ahnung wie man
sie fixen kann, ok, wenn der Chat sagt, yes, nein, linting, alter, wer braucht denn sowas,
null, prettier, null, wer braucht sowas, wobei, ich benutze die in VS Code eingebaut sind,
brauchen wir auch nicht, ja, wisst ihr was das witzige ist, besseres Menü als Battlefield
2042, stimmt wirklich, du erkennst wenigstens was aktiviert ist und was nicht, so, stuck,
step pro, I'm stuck, also wir haben es, achso, ich hätte es vielleicht nicht My App nennen
sollen, sondern, ok, wir löschen das jetzt nochmal, wir nennen es nicht My App, sondern
Cute Chat App, Demo App, yes, no, no, ok, wir haben es, also was müssen wir jetzt machen,
CD, Cute Chat App, NPM install, ja gut, das ist um die ganzen Packages nachzuladen, NPM
install ist immer eine gefährliche Geschichte, weil NPM install ja prinzipiell das halbe
Internet nachlädt, das ist halt bei JavaScript so, ich sag nur is odd und is even, NPM Packages,
wer auch immer sich gedacht hat, dass es eine gute Idee ist, dass es da für Packages gibt,
es ist ja nicht so, als wenn ich quasi schon in die Sprache einen Operator eingebaut, mit
dem man is odd und is even checken kann, Leute, das ging jetzt aber, was nur 102 Packages
sind, das ist aber für NPM und für JavaScript äußerst wenig, wie groß ist man Note Modules,
ah nur 111 MB, immerhin, immerhin, immerhin mehr als 100 MB, ja, aber das ist erstaunlich
leicht gewichtig, ja, so, jetzt haben wir den Kram am Start, so was sollen wir jetzt
machen zum, das da, das ist die Demo App, welcome, sieht ja mal richtig fancy aus, Alter,
die Demo App, guckt euch die mal an, aber die Demo App ruckelt, wenn man To Do's aufmacht,
oder ist das Absicht, oh, Massive Animations, huge, guck mal hier, Scroll, Scroll Animation,
aus irgendwelchen Gründen fällt mir da grad wieder ein, wollen wir wetten, dass die Leute
wieder getriggert sind von VLC, überlegt mal, woran könnte es liegen, wegen was könnten
die Leute wieder getriggert sein bei VLC, genau, VLC hat nämlich wieder ein Weihnachtsmann-Hütchen,
da muss ich, ich muss gerade mal, ich weiß, es hat damit nicht viel zu tun, aber ich muss
einfach mal gucken, VLC Forum, Christmas Hat, ob sich da wieder einer aufgeregt hat,
Suchfilter, dieses Jahr, ok, anscheinend ist das dieses Jahr kein großes Thema, ja, aber
es gibt Leute, die sind mega getriggert wegen dieser Mütze in VLC, wie konnte man nochmal
ranzoomen, in Windows, wie ging ranzoomen nochmal, Windows-Taste plus oder sowas, oh, Alter,
was ist denn das, vor allem, wie kriege ich denn das wieder kleiner, Windows-Minus, ah,
guck mal hier, kein Wunder, dass die Leute getriggert sind, Santa Hat, ok, aber ich muss
sagen, das sieht schon mal relativ fancy aus, das Ding sieht schon mal relativ fancy aus,
so, about, ah, to do's, natürlich, to do-App, was sonst, überall bist du schon, ich hab
die Demo-App gerade gestartet, das wars, tap to do, null, enter, die ruckelt die Demo-App,
das ist aber kein guter erster Eindruck, warum ruckelt meine Demo-App, vielleicht liegt
es auch an meinem Browser, jetzt hab ich ihn da für den Müll, alles installiert, remove,
ruckelt immer noch, ah, guck mal, und sie haben Dings nicht deaktiviert, das hätte
man auch machen müssen, autocomplete, deaktivieren für to do, Formularfelder, und das kann man
jetzt abhaken, massive to do-App, gucken wir mal, ob es im Firefox auch ruckelt, ja, im
Firefox ruckelt es auch, warum, also es ist vielleicht keine so clevere Idee, die Demo-App
ruckelig zu machen, oder, also selbst wenn, und ich gehe mal davon aus, dass das tatsächlich
relativ gut ist, weil ich hab nur Gutes, bis ihr davon gehört, aber selbst wenn jetzt
das eigentliche, absolut performanstechnisch, das krasseste auf der Welt ist, die Demo-App
sollte man vielleicht nicht ruckelig machen, ja, die Demo-App ist tatsächlich ruckelig,
guck mal, ich kann immer noch, das ist sprocken, die Demo-App ist sprocken, na, das ist schon
mal geil, machs doch besser, wir machen das, wir bauen jetzt eine, Leute, wir bauen jetzt
eine to do-App gleich als erstes Projekt, easy, glaub ich hab die Demo-App gekillt, ah, jetzt
gehts wieder, ne, immer noch nicht, ja, sehe ich, was ist mit der Demo-App komisch, vielleicht
sollten wir die Demo-App auch wieder löschen, aber, ich, mal gucken, wie das ganze aussieht,
also öffnen wir das mal in Visual Studio Code, gucken wir uns das an, yes, ich truste allen
hier, gar kein Problem, hyper trust, die Plattform IOIDE, genau, ich brauch jetzt Arduino Zeug,
unbedingt, ganz furchtbar wichtig, reload, haben wirs jetzt, ok, also, machen wir das
mal auf, Static, ok, das sind irgendwelche Icons, sonst war Source, müsste es ja sein,
wo sind denn die Sachen, lib, ach hier, guck mal, counter, roots, to dos, layout, about,
index, ok, machen wir mal index auf, do you want to install recommended extensions for
Svelte, install, pre-serif meinst du die, taugt die, was Svelte now contains typescript enabling
it will provide intelligence for Svelte from, would you like to enable it, alles klar, gib
ihm, reload, ok, das sind wir in der Index-Seite, also, was bin ich sehend, lass mal gucken,
es sieht ein bisschen aus wie eine View Single File Component, hier unten ein bisschen CSS
gedöns, da oben ein bisschen HTML gedöns, und, oh, was auch immer das hier ist, und
hier oben drüben irgendwelche Script Tags, der Twitch Automod schlägt wieder zu, const
pre-render, das hab ich in dem Video auf YouTube gesehen, das ist für Server-Side-Rendering,
das hat, Twitch hat es geblockt, weil, offensichtlich, weil da eine Racist-Anspielung auf Japaner
drinne vorgekommen ist, 100%, ich wette mit euch, deswegen hat Twitch das geblockt, weil
Twitch denkt, das ist Japaner gedissed, leider ist das in Deutsch halt Zustimmung, und, ich
denke auch mal, dass Twitch es checken wird, wenn du es jetzt einmal erlaubt hast, dass
es das nächste Mal nicht mehr so streng klingt, ja, so, warum gibt es da mehrere Script Tags,
das eine, wo Counterimport, warum, warum brauche ich da zwei Script Tags für, warum kann ich
das nicht einfach so machen, das ist wahrscheinlich irgendwie so eine Convention, so nach dem
Motto, hier oben, ich glaube, das hier oben ist Config für Svelte, ich rate jetzt einfach
mal, ja, das hier ist, das ist Config von Svelte, und das ist für die Seite der Script
Tag, also hier würde ich jegliche Logik für die Seite reinmachen, hier mache ich irgendwie
das Svelte Config oder so, ich, Leute, ich generiere das Projekt noch mal ohne TypeScript
Support, ich habe den Eindruck, das sind manche Sachen nur weil TypeScript, dann blicke
ich besser durch, wenn es was Neues ist, ich muss ja nicht 50.000 Sachen gleichzeitig
machen, so, gleich noch mal Bombe reinhauen, so, the about page, what, we don't need any
just, hm, hm, nein, das sieht jetzt alles ja noch relativ übersichtlich aus, warum gibt
es dieses Svelte Head hier noch mal, und warum kommt das nicht in das HTML rein, und ich
vermute mal, muss das diff Content haben als Class, wahrscheinlich nicht, welche Kinofilme,
das weiß ich noch nicht, wahrscheinlich gar keine, weil wieder nur Schrott rauskommt,
kein Trimmer, so, und Layout ist wahrscheinlich so ein globales Ding, was überall eingebunden
wird, ja, ok, Main, Slot, Slot vermute ich mal, das hier ist quasi die Seite, und jeweils
auf welcher Route ich bin, wird dann quasi about in Slot reingeschrieben oder Index
in Slot reingeschrieben oder sonst was in der Richtung, vermute ich jetzt einfach mal,
was das so ist, to do's, AP, oh, was ist das, äh, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ja, hier, das sind irgendwelche Sachen zum Server schicken oder, Return API?
Warum ist ein Server Request machen so kompliziert?
Oder ist das irgendeine TypeScript Geschichte?
Warum machen die nicht einfach einen Fetch?
Oder ist das nur für TypeScript, dass man, wenn man das verwendet, quasi Static Types
hat an der Stelle?
Weil mein Fetch hat ja, nun kann ich ja alles mitmachen mit irgendeiner JSON-Response.
Danke für den Sub.
Okay, das habe ich nicht so ganz gecheckt bis jetzt.
Counter!
Okay, das habe ich, den Counter, den habe ich, der Counter ist das hier.
Ich mache das jetzt mal parallel auf.
Der Counter ist der Spaß hier.
Genau, gut.
Dann gucken wir uns doch mal die Counter-Component an.
Wir machen gleich ein neues Projekt damit auf, oh, jetzt habe ich es neu formatieren
lassen.
Wir machen gleich ein neues Projekt damit auf und lassen das alles weg und machen quasi
mal ein empty Projekt generieren.
Import Sprits, die haben standardmäßig Animationen dabei, aha, das hier ist nichts, was die extra
gebaut haben, das ist in der Standard-Library wohl drinne.
Das finde ich schon mal cool, dass Animationen standardmäßig dabei sind.
Wahrscheinlich sind da bloß eine Handvoll Animationen dabei, aber es reicht ja in der
Regel.
Das finde ich schon mal nice, ja und die Logik hier ist ja auch relativ übersichtlich.
Also, es ist hier ein bisschen HTML mit einem Button, wo man drauf, also im Prinzip ist
das, ich versuche das gerade mal zuzuahnen, man hat einen Button, das ist der Button,
das ist, wo ist der andere Button, das ist der Button, also sprich, das hier ist der
Plus-Button, das hier ist der Minus-Button, das hier ist die Anzeige von der Zahl und
das da unten ist CSS und das war's im Prinzip.
Kann ich da jetzt eigentlich live drin editieren?
Also, zum Beispiel, wenn ich jetzt sage, Count 5, ey, guck mal da, Hot Reload, Poggers Hot
Reload, das ist nice, habe ich dafür eine bescheuerte Standard-Config in Visual Studio
drinne, das ist das Umbrich nach 55 Dingern, was ist das, Igitt?
Okay, das ist aber schon mal ganz nice, so, das heißt, ich könnte jetzt auch sowas hier
machen, wie zum Beispiel, Plus 2 erhöhen, immer beim Klicken auf Plus, ja guckt, funktioniert,
oder immer Plus 69 erhöhen, funktioniert, also wer schon immer mal Vielfache von 69
wissen wollte, der 69 Calculator, so brauchen wir das, bei Minus ist immer nur 1 weg, okay,
haben wir auch nicht geändert, also verstehe, verstehe, okay, Hot Reload, der auch CSS changes,
also sagen wir mal zum Beispiel, wir wollen den Border von 5 um den Button, guck mal da,
das ist ja richtig responsive hier, ne, wie heißt denn das, reactive, keine Ahnung, das
ist ja richtig zackig, du änderst hier was, speicherst und zack ist es im Frontend refreshed,
agil ist das, das ist gut, das gefällt mir, da ist man sehr zackig, mit dem ausprobieren,
ja gut, der Counter ist tatsächlich ziemlich simpel, muss ich sagen, die Logik des Counters,
oh was sind denn hier diese komischen Frage, äh, die variablen Dinger, Kunst Display Count
Spring, gut, Spring kommt wahrscheinlich hierher, Display Count, wo kommt Display Count her,
was sind Reactive Statements, hä, Display Count Set, woher kommt, achso Display Count
ist hier oben, aber was ist, warum ist da denn, doll, das ist jetzt kein TypeScript Zeug,
das ist irgendein Svelteing, das macht, dass die Variable live geupdatet wird, aha, warum
hat man nicht sowas gemacht, äh, keine Ahnung, irgendwie sowas oder so, ach gut, warum, aber
ist das, ist das gültige JavaScript Syntax hier oder ist das nur Sveltechnisch jetzt,
irgendein Ding, also wäre das gültiges JavaScript, ok, ich lerne nicht aus, ich wusste nicht,
dass ein JavaScript Statement mit Dollar Doppelpunkt anfangen kann, aber ok, aha, ok, von der Idee
her checke ich das, das hier ist quasi so eine Art Init Funktion, oder, das hier ist quasi
so eine Art Init, wird einmal beim Starten ausgeführt, können wir ausprobieren, wir
machen einfach mal ein Log Statement rein, Log, 1, 2, 3, ja, wird einmal beim Start ausgeführt,
also das ist quasi Init hier oben, sowas in der Richtung, ok, der Rest ist aber eigentlich
ganz gut verständlich, das ist Runden, ja, quasi, Runden auf das nächste tolle Int,
warum verwendest du nicht Types, ich mache gar nichts, das ist das Beispiel Projekt, ok,
also so ganz schlau daraus geworden bin ich noch nicht, aber ich glaube wir müssen einfach
mal ein leeres Projekt machen und ich muss mich da ein bisschen austoben, das heißt
Label, Label heißt das quasi, das ist die Vorstufe von Go To, ok, das ist die Indexseite,
da ist ja nichts dabei, ok, also soweit ich das checke ist, eine Svelte Komponente bestellt
aus globalen Svelte Settings und einem Logik Block, so einem Init Setup Logik Block und
halt HTML und CSS, ok, hier haben sie globale Styles, hier haben sie das standardmäßige,
wozu braucht man das, App HTML, ah, das ist wo was Injected wird oder sowas, ok, warum
gibt es kein App, App.Svelte, wo das drinnen ist, warum ist das App.HTML, Static Zeug, ok,
ich bin jetzt ja nicht so wirklich schlaus daraus geworden, das einzige was ich gecheckt
habe ist, die Routen sind unterhalb von Routes und werden automatisch geroutet quasi anhand
der Seitennamen, so wie es aussieht, Index, About heißt die Seite, ich wette mit euch
wenn ich die umbenenne, geht es nicht mehr, genau, dachte ich mir, aber wenn ich jetzt
sage, ah, About, dann geht es wieder, genau, das ist schonmal sehr cool, das Kleinzeit
Routing, wie es die coolen Leute sagen würde, einfach funktioniert, je nachdem wie die Seite
im Ordner heißt, das ist relativ easy, ich würde auch sagen, App HTML ist so eine Art
Entry Point, aber warum ist es kein App.Svelte, guck mal kurz in den Chat, was habe ich wieder
übersehen habe, ne ne, aber es ist doch immer wichtig, dass man durchblickt, was gerade
so aktuell angesagt ist, das heißt Label und ist valid JavaScript, ok, kein Plan, JavaScript
hat kein Go To Statement, warum denn nicht, es gibt nichts schnelleres für Schleifen
als Go To, alles andere ist Plouted, ich brauch keine Ifs, ich brauch keine Schleifen, ich
brauch nur Labels und Go To, easy, was ist ein guter Web Dove Klein, dein Browser, die
haben doch alle mehr oder weniger Web Dove, ich glaube sogar der Windows Explorer kann
Web Dove, das heißt wenn du, achso, ok Big Brain, Sekunde, das muss ich jetzt mal ausprobieren,
also wenn ich jetzt in den Counter gehe und dort mache, Count Lock, dann wird immer, wenn
ich zähle das, aha, ach du Scheiße, das verknotet mir aber den Kopf, wie haben sie das gemacht,
wie kriegen die das denn raus, ich mein Vue macht ja auch so Dinger unter der Haube, aber
da ist es eigentlich eher umgedreht, du machst da ne Schleife über irgendeine Reactive Variable
und die reflechst sich dann automatisch und sowas, ok das ist Big Brain Time, also wenn
ich in Vue sowas machen hätte wollen, dann hätte ich quasi Watch machen müssen, irgendwie
Watch, ich weiß gerade die Syntax aus dem Kopf nicht, Watch, Count und dann hier irgendwie
Lock, irgendwie sowas, das ist wahrscheinlich das gleiche, ok Big Brain Time auf jeden Fall
hier, Massive Fivehead, also eigentlich habe ich bloß verstanden, dass die Routen so heißen
wie die Seiten, gut, jetzt habe ich nicht gecheckt, aber Leute, wir machen jetzt einfach mal eine
eigene Swap, gucken uns das mal an, so, gehen wir mal wieder eins hoch, sagt Next, nicht
die Cute Chat App, sondern die Poggers App, einfach weil es geht, weil es irgendwie heißen
muss, also Skeleton Project, die Bros, Skeleton Project, nein kein Typescript, kein Linting,
kein Prettier, was passiert denn wenn ich sage Yes, Poggers App und Visual Studio Code
aufmachen, yes ich truste allen, Index, oh das ist nicht gültig, warum, was ist denn
jetzt hier dran so böse, H1 ist nicht gültig, H1 Element Represents Section Heading, ja,
Error, ah ich habe NPM Install vergessen vorher, wir müssen eben das halbe Internet
nachladen, ich vergaß, wir sind ja im JavaScript Land, so jetzt sollte es aber funktionieren,
mache ich noch mal auf und Pause Champ, jawoll jetzt funktioniert es, ok und dann noch Open,
das heißt das ist jetzt einfach nur die Standard, welcome Swap Kit, ok leeres Projekt, alles
klar, so und da können wir jetzt Dinger machen, gut jetzt müsste man natürlich Ahnung von
Svelte haben, dass man weiß wie das funktioniert, warum gibt es einen globald.ts wenn ich gesagt
habe ohne Typescript, also was ich mit Routen jetzt schon mal verstanden habe ist, wenn
ich jetzt index.swelt habe, dann geht das auf quasi Slash, wenn ich jetzt sowas anlege
wie QtChat.swelt und da irgendwie einen Diff drinne mache und sage aja ja und ich gehe
jetzt hier auf die Route QtChat, dann greift das automatisch auf Feilebene die Routen ab,
das finde ich gut, so das heißt wir müssen uns jetzt tatsächlich ein Svelte Tutorial
durchlesen mal, weil ich habe ja gar keinen blassen Schimmer was ich mache, ok mal kurz
hier drüber, pages, routing, endpoints, was endpoints are modules written, js or ts, filenet,
exports, functions, ah ok da kann ich meine api nochmal extra wrappen oder so, warum sollte
ich das machen, warum sollte ich meine api nochmal extra wrappen anstatt ein Fetch irgendwie
inline zu verwenden?
Ach das ist für server side rendering oder sowas, ok advanced, also zeig mal her, es
gibt ein interactive tutorial, das müssen wir uns jetzt mal angucken, hello world das
ist immer gut, use this tutorial next, das ist mir jetzt zu großartig ein tutorial durchzuklicken
aber first add a script tag to your component and declare a variable name, ok das ist schon
mal gut auszuprobieren, also wir machen einfach ein script tag auf unsere Seite und das kann
man da jetzt ausgeben, also löschen wir den Mist mal und sagen irgendwie p und dann kann
man mit geschweiften Klammern auf die Variable zugreifen, ok das ist doch schon mal ok, das
ist doch ziemlich standard, so wahrscheinlich kann man auch so art two way binding machen,
also machen wir mal irgendwie sowas wie, nee input, input, input, text, lull, id, lull,
also bei view würde ich jetzt sowas hier machen, vmodel und dann was angeben, das geht
ja bei as world wahrscheinlich nicht, es ist der keks, ja richtig, so jetzt habe ich mich
gefragt wie würde ich jetzt da two way binding machen, du machst bei as world einfach bind
variable, ok hat man sowas wie autocomplete hier, ohhh guck mal da, aber nicht value sondern
bind name, ach nee nee nee bind value und dann name, ah das muss in klammern ok, ach
ja guck mal, two way data binding, ok nice, ok ich glaube so langsam aber sicher habe
ich zumindest so einen minimalsten hauch davon wie die sich das so vorstellen, examples hello
world basics, ja das gucken wir uns ja gerade an, das machen wir ja gerade, ok verstehe
next, ach hier machen sie ja quasi binding, ok verstehe, was, ah wenn variable name das
gleiche ist wie das attribut, das heißt ich könnte quasi sowas hier machen jetzt, value,
oh guck mal der ist ja richtig clever, der checkt sogar das es name nicht gibt oder was
auch immer, nee ich könnte sagen value und dann hier einfach nur value, boah das ist
big brain time, das ist zwar nicht sonderlich lesbar aber das ist schon ziemlich high iq
muss ich sagen, ach das funktioniert aber nicht, das funktioniert aber nicht, das ist
da nicht two way gebindet das ist nur one way, ok das heißt two way binding geht da
nur so, ok das ist natürlich sehr verwirrend wenn das dann dreifach value heißt, aber
ich kann so machen bind, ach verstehe, das bind ist abhängig davon was es für attribute
auf dem html element gibt, also ich könnte zum beispiel auch sowas machen wie bind name
oder sowas oder bind offset width oder sowas, achso also sprich ein input hat andere bind
options als zum beispiel ein tif oder sowas, verstehe, ok, ok das ist schonmal wirklich
ziemlich clever gemacht muss ich sagen, das finde ich nice, next, ja wir müssen die leute
wir müssen die welt edukaten was twitch chat und emotes angeht, ich sag so sachen auch
manchmal auf der arbeit, es hat mal einer irgendeine präsentation gemacht, irgendeine
präsentation für, was war das, azure cloud geschichten war das und da hat einer slido
kennt ihr slido, also das ist kein hip hop typ sondern das ist so eine umfrage seite
da kann man umfragen starten und da hat einer gefragt auf der arbeit, was ist das erste
bei dem sie, also irgendwie das erste was sie denken beim wort cloud und da hab ich
reingepostet poggers und das geile ist der typ hat es vorgelesen, da hat er dann so gesagt
ach ich sehe hier kommt schon die ersten antworten rein ja poggers ist dabei und ich bin mir
nicht sicher, ich bin mir nicht sicher ob der wusste was er da vorliest oder ob er einfach
nur vorgelesen hat weil halt das einzige als antwort schon drin stand, ach ja ich sehe
poggers ist dabei, also das war das erste mal das ich einen twitch emote gehört hab
im kontext von irgendeiner führungs abteilungs präsentation auf der arbeit, ok das habe
ich verstanden style, oh jetzt wird big brain css stels gemacht, ok das heißt wenn ich
mein cute chat, cute mod jetzt kann man einstellen wer heute der cute mod des tages ist, was
wollte ich jetzt machen, das heißt wenn ich das jetzt stylen will sage ich einfach hier
unten styl, kann ich hier oben sowas angeben wie language oder sowas, kann ich zum beispiel
sagen sass oder scss checkt er das dann, dazu müsste ich erstmal aus dem kopf scss hinkriegen,
also h1, jetzt kann man einen super krassen css skills walten lassen, h1, color, red,
blue, wahnsinn, sieht aus wie 1995, ok font, family ist es ja glaube ich, das sieht auch
aus wie 1995, aber egal, was ist so ein schönes grau, ok 3b, 3b, 3b, ok, 3b, 3b, 3b, so, ok
wunderbar, alles da jetzt haben wir es gestyled, man kann doch sicherlich auch, das muss ich
jetzt an der stelle gerade mal ausbringen, man kann doch sicherlich auch sowas hier machen,
das weiß ich, gut, also css klasse, die man normalerweise so applyen muss, achso ich bin
beim falschen null, die kann man doch bestimmt auch binden oder, klasse, ne, ok das funktioniert
nicht, also dass ich sagen würde bind und dann sowas wie eins gleich gleich eins, dann
ist es die klasse cute und ansonsten, ist es die klasse kekwe, ne, enclosed in curly
brackets, ok, ok so advanced ist es noch nicht, aber ich könnte mir vorstellen das funktioniert,
ich mache es bloß falsch, warten wir mal ab, das kommt bestimmt noch im tutorial gleich,
schauen wir mal weiter, also styles habe ich gecheckt, ahhh man macht es, man bindet das
nicht, sondern man sagt dann direkt klasse oder was, ok, das gucken wir uns gleich im
tutorial an, also was kommt jetzt als nächstes, kann man das vielleicht ein bisschen, nicht
ganz so, ja ok, haben die denn dark theme standardmäßig schon hier drin, wenn nicht las ich das jetzt
einfach so, ok, was jetzt, jetzt hab ichs geprägt, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
haben die es auch doppelt ach so ich dachte das ist irgendwas was
standardmäßig dabei ist naja gut das muss ich nicht machen also wenn ich das
brauche dann komme ich selbst darauf dass ich das importieren muss
was kommt jetzt? Guck mal hier haben sie doch App-Punkt-Welt und nicht html
but sometimes you need to render html directly ok wenn ich direkt html rendern
will dann mache ich das in geschweiflung mit einem etab will ich nicht
was macht zwelt jetzt anders zwelt hat zur laufzeit keinerlei abhängigkeiten
also wenn du view hast dann musst du ja immer noch zur laufzeit view haben was
das im hintergrund managt alles und zwelt kompiliert runter zu vanilla java
script das heißt du hast dann am ende das was rauskommt ist eigentlich nichts
mehr von zwelt drin was angeblich dazu führt dass es schneller ist und vor
allem dass es kleiner ist so habe ich das verstanden und
nachdem ich gestern ein video gesehen habe wo einer zwelt mega gelobt hat und
hat gesagt wäre das vor zwei jahren rausgekommen wäre das heute quasi mit
das beliebteste ui frame was habe ich denn mit ui das beliebteste frontend
framework ich wollte mir das jetzt einfach mal angucken
ich bin halt aktuell noch relativ planlos aber tutorial ist schon mal ganz gut hier
writing components
ja gut das macht ja das das macht ja das projekt für mich für mich schon
ok jetzt jetzt kriegen wir beigebracht wie man eine zwelt component erstellen
also button click ok das kriege ich das kriege ich auch ohne tutorial hin also
button button so und jetzt wie man das bind click fack ich hab schon vergessen on click
und ab also on ist quasi das gegenstück zu add by view also on was und play
ach nee das ist quasi was aufgerufen werden soll wenn das event auftritt
also on click so da muss jetzt irgendwas angeben was ich wahrscheinlich hier oben
anlege also on click und click das heißt hier oben lege ich dann so was an wie
let on click gleich event so was da lock e alles immer in geschweiften klammern
ok aha text value lull quatsch das ist ein button button muss button muss das
doch hier dazwischen stehen oder funktionieren
ok das funktioniert
wenn ich das hier einfach nur click nenne nur mal gucken ob ich jetzt richtig
verstanden habe wenn ich das einfach nur click nenne kann ich den rest
weglassen oder nee warum kann ich das da weglassen ok dann ich
by the way was ist denn die die javascriptische variante so das da oder das da
das ist besser das da oder das da
nico ich persönlich würde sagen fangen mit view an view finde ich es zum
einsteigen relativ easy zumal du auch komplett ohne irgendwelche build tools
und sonst was auskommt du kannst ja quasi wie früher jquery view mit
einfach eine html seite anfangen ohne ohne weitere dinge und für view gibt es
halt total viele tutorials und kurse und talks zu dem thema also ich will mit
view anfangen
ok also ihr sagt so ist besser also sowas da dann ok wenn der chat das sagt
dann wissen wir das ist so weil prinzipiell wann hatte der chat schon
jemals nicht recht
kommt eigentlich nicht vor
so ok das habe ich verstanden was machen wir jetzt hier sonst noch in der
ja gut increment ok ok was ich jetzt verstanden habe die machen sowas hier
anstatt dass hier cute mod sebaro drin steht wird jetzt hier noch irgendwas
angehängt also könnte man quasi sagen value plus gleich irgendwie punkt oder
so und dann würde bei jedem klick dass sie baro einen punkt hinten dran
bekommen ok verstehe alles klar habe ich kapiert
das hier ist auch noch cool aber eigentlich logisch dass das funktioniert
also sprich man kann in line jetzt hier noch schreiben quasi von dem von dem von
dem value aber das ist ja klar das haben wir da schon gebunden und das hier in
drinnen ist ja quasi wie heißt das tinerie tinerie tinerien wie auch immer
operator den gibt es ja auch in c und in c sharp und ziemlich jeder
programmiersprache tinerie nur der unterscheid in java script weil java
script weird champ ist es gleich gleich gleich anstatt gleich gleich
komm mal achso go hat kein ternier ternier ok na go ist eh komisch go hat
auch keine gescheite schleife für oder was das schleife kein gescheites filter
oder map für listen sondern go sagt mach einfach eine schleife
heifert just loop vorher oh jetzt jetzt kriegen wir den scheiß erklärt mit mit
double mit mit label reactive aha ok
12 automatically updates dom when your component state changes
das ist so was wie computed ist das so was wie computed in view ok reactive
declarations ich glaube jetzt habe ich das verstanden jedes mal wenn sich value
ändert errechnet er das hier automatisch ist so was wie computed in view so ich
weiß gar nicht ob man das string mal zwei schreiben kann in java script keine
ahnung gute frage nächste frage not a number ja wie verdoppelt man am besten
ein string in java script irgendwann eine glorreiche idee
achso ja plus plus einfach so einfach so logisch eigentlich bescheuert
3 hat time ja guck mal funktioniert er verdoppelt das jetzt einfach ok das ist
so was wie das ist so was wie computed in view ich glaube jetzt habe ich es
kapiert was gibt string repeat sowas gibt es nicht string repeat gibt es nicht
array repeat gibt es auch nicht java script one hat
achso das ist du meinst wenn ich ich brauche den array dass ich das achso
value repeat
hey funst alter der chat wieder massive hoher intelligenzquotient hier was der
chat alles weiß immer exquisite exquisite richtig schlauer chat übrigens wenn
ihr noch höheren IQ haben wollt könnt ihr mir einfach einen prime sub dalassen
weil wir wissen ja was ein prime sub für expanding brain für alle im chat
auslöst dass die leute hier so schlau sind liegt nur an den vergangenen
prime subs hannes 18 danke für den sub jawoll so muss es sein
kill anus 777 danke für den primes ab ein ziemlich gatchi bass lastiger name
das ist ein i kein l was ja dann ist es killy anus ach killianus ok das stellt
sich jetzt doch schon etwas anders da als kill anus na gut
das war keine absicht ich kenne aber halt twitch namen und es gibt oft genug
leute die so komische namen auf twitch haben
lull trotz der danken für den primes ab
also weiter geht's gut soweit habe ich das glaube ich kapiert
ja das finde ich natürlich dafür eine echt interessante sache wenn du mit
loggen willst wenn sich was ändert das ist ehrlich gesagt ziemlich clever da
kannst du jetzt mit loggen lassen wenn sich wenn sich was am import tut das ist
schon nice man das kannst mit computer in view auch aber das ist eine gute idee
in dem fall hier ok also das muss ich mir merken das ist quasi so was wie
computed in view das ist wichtig weil da kann ich mir das halbwegs merken was
was das was macht das was macht die sekunde
warum hat er eben gerade die lampe am start gehabt das ist ja normalerweise so
vorschläge ok weiter ok kapiert das ist echt mich würde
mal interessieren wie sie das gecheckt haben also wie sie das checken welche
variablen da drin benutzt werden da müssen sie analysen machen dass das
funktioniert also sprich ich kann alles automatisch neu ausführen lassen in
so eine also ich kann so einen blog automatisch neu ausführen lassen wenn
sich irgendeine abhängigkeit hier drin ändert das ist wirklich expanded brain
das kann man an total vielen stellen verwenden
ok next
ok verstehe verstehe das heißt wenn ich jetzt so was hier mache
was will er hier ok das heißt wenn ich jetzt so was hier mache wir müssen wir
müssen mal kurz wir müssen mal kurz was was umstellen wenn ich jetzt so was hier
mache dollar doppelpunkt also quasi computed property oder watch oder so
was console lock auf value so dann haben wir mitbekommen das funktioniert jedes
mal wenn ich da drauf klicke lockte das aber nur wenn ich was es sein wenn ich
was wenn ich was insert in an array oder so dann anscheinend nicht so da machen
wir aus dem value jetzt mal hier den array oder sie baro ist da drin und dann
haben wir noch den
aber unsere ponger smots drin und das funktioniert jetzt natürlich hier an
der stelle nicht ok gehe weg
jetzt sollte es aber doch klappen
genauso und jetzt muss ich hier aber nicht value dingsmann sondern value was
ist das push in java script push keine ahnung irgendwie ein punkt oder so
genau und das check das ding jetzt nicht weil es ein array insert ist anstatt
ein ein assignment das kapiert er jetzt nicht also sprich das hier wird nicht
neu zu gewesen deswegen rennen er das nicht neu also wenn ich jetzt so was
machen würde wie value gleich jetzt so was
geht so was oder das ist kaputt checkt er so was das kapiert er jetzt guckt das
geht jetzt das muss ein assignment sein ok und die das tutorial erklärt uns jetzt
was man dagegen machen kann ach ja hier unten kommt mal hier
what
moment was
ok jetzt ist java script time angesagt
5 hat java script das ist irgendwie so ein destructor oder sowas ne was das
genau macht habe ich keine ahnung das setzt hier wahrscheinlich einfach die
werte als argumente ein oder sowas keine ahnung java script just just java script
things da hinten braucht man gar nicht in dem fall ja funktioniert das ist
irgendwie big brain java script zeug also in wirklichkeit würde ich das an
nämlich auch einfach so schreiben anstatt das push verstehe ok das muss man
wissen das haben sie in view das war in view 2 glaube ich auch so aber in view
3 haben sie das jetzt hingekriegt also ich kann mich noch daran erinnern dass ich
manchmal auch das problem hatte in die view 2 dass dies reactiv die zeug nicht
getriggert wurde bei insert und deletes aus arrays was genau macht das denn
das macht im prinzip hier raus eine argumentenliste oder also das ist dann
quasi erstes element wird argument 1 zweites element wird argument 2
das ist ein bisschen was wie params in c-sharp aber nicht wirklich aber wenn
du wenn du params in c-sharp verwendest kannst du auch ja an den array reinstecken
als als parameter oder oder oder, getrennte oder, getrennte
parameter ja ok das ist das ist schon mal was das finde ich cooler wieder was
gelernt also das funktioniert schon mal verstehe gut also die wollten uns also
erklären dass das nur bei assignments triggert die reactivity und nicht bei
wenn man container ändert ok habe ich verstanden
you can use simile patterns to replace pop, shift, unshift und splice wenn die
dinge jetzt auch noch irgendwie intuitiv benannt werden in java script ich kann
mir immer nur push merken
alter was ist das für monkaS musik
ok country
ok hier zeigen sie uns quasi was man machen kann
wenn man probleme hat dass das reactivity zeug getriggert wird ich
glaube das merke ich wenn ich das problem habe da kann ich einfach noch mal
nachgucken
so next internal state was kommt jetzt
in any real application you need to pass data from one component down to its
children das ist wirklich so was wie props ja
export let answer gut dann müssen wir jetzt aber anstatt dass ich hier
irgendwie in meinem
index rum bastle müssen wir in in die cute chat component und das hier rein
copy pasten und dann feststellen dass es
also ok so das können wir nämlich hier so lassen wie es ist
und dann feststellen dass es
also ok
das kann man nämlich hier so lassen wie es ist
und dann sagen wir hier script
script
import
was war das jetzt noch mal
import
huge chat from
was
so und jetzt kann ich hier drin als
komponent cute chat verwenden
sehr gut
guck mal
wir haben es geschafft
wir haben eine cute chat component
so und da kann ich jetzt
argumente über
übergeben
zum beispiel
sowas hier
also dass wir zum beispiel sagen können
keine ahnung
mod
so das ist unser unser unser start mod unser start cute mod quasi
und damit ich
diese parameter hier rein bekomme brauche ich das so wie es aussieht ok
export let
also kann ich das hier einfach so oben reinschreiben in die komponente
sowas hier
ok es ist schon mal nicht kaputt
es ist geht es geht dadurch schon mal nicht kaputt
ja gut es ist anjuist achso das habe ich auch mod genannt mod
es ist überhaupt nicht anjuist achso ich benutze das da drin nicht ok
jetzt ist natürlich die frage ist das gesetzt sobald der rest hier von läuft
ja ist
also könnte ich jetzt quasi sowas sagen wie der erste mod ist dann der hier
ok nice nice nice
so das heißt jetzt wenn jetzt wenn wir jetzt einen neuen mod hätten neuer mod
dann würde es nicht mehr dass sie baro drin stehen sondern hier neuer mod als
erstes alles klar ok das habe ich glaube ich kapiert
ja chat das stimmt schon javascript hat so seine hat so seine dinger aber man
muss mal sagen javascript ist wirklich weit gekommen jetzt mal den unterschied
da muss ich einfach nur mal den unterschied angucken jetzt javascript c plus
plus von der entwicklung her beides sprachen die in ihre ursprungsvariante
an ekligkeit kaum zu überbieten waren so guckt man sich c plus plus heute an was
das c plus plus gremium die letzten keine ahnung 20 jahre getrieben hat ist
c plus plus immer noch eine sprache die quasi an ekligkeiten kaum zu
überbieten ist aber javascript muss man sagen hat sich doch gemacht
klar du hast immer noch so ganz merkwürdige dinger wie dass es so was
wie gleich gleich und gleich gleich gleich und so was nach wie vor geben muss
und dinger die nicht sonderlich intuitiv sind aber im großen und ganzen ist
javascript mittlerweile ganz gut ganz gut
wenn ich die auswahl habe irgendwie den kommando zeilen tool oder sowas sagen
wir mal mit go oder c sharp oder sowas zu basteln da würde ich auch nicht auf
note und javascript zurückgreifen aber nachdem es im browser ja nichts
anderes gibt und jetzt kommt mir keiner mit web assembly das ist ja für dom
manipulation und seiten erstmal nix nachdem javascript war die einzige
sprache im browser ist und mal eh nichts anderes übrig also es bleibt ja
wenigstens übrig als die zu verwenden dafür ist sie wirklich ganz ok also ich
muss sagen die haben richtig viele schlaue dinger gemacht auch dass die
damals die essen geschichte von dort nett geklaut haben war richtig clever
also das ist ja in javascript nennt sich das ja quasi war er erst mal
promises da und dann kam erst in unter weit das ist schon eigentlich gar nicht
so übel javascript
nähe eigentlich nicht also gerade wenn du irgendwie so microcontroller von
esps bis aduinus guckst ist das wirklich leider leider konkurrenzlos das macht
es aber nicht besser ja auf rust hoffe ich auch ein
bisschen aber das dauert noch
ich kann an meinen ganz einfach change du kannst keine webseite machen mit web
assembly
das geht nicht kannst keine webseite machen mit web assembly
du kannst mit web assembly vielleicht irgendwelche teile der webseite machen
aber spätestens wenn es um die eigentliche webseite machen geht mit
einem button mit und einem click event und sowas dann ist mit web assembly
vorbei
ne ne das funktioniert anders du hast einige sachen die kompilieren zu web
assembly aber für die für die grafischen dinger ist das unter der
haube immer noch javascript was drum herum gestrickt werden muss rein mit
web assembly kannst du keine dom manipulation und sowas machen muss immer
irgendwelche javascript dinger durchschleifen und so macht das flatter
unter der haube garantiert auch
oder blazer oder was was nicht sonst noch alles gibt
wie soll wie sollen die sonst gui elemente in browser kriegen das geht
mit web assembly nicht zumindest stand vor einem jahren ich denke es geht immer
noch nicht
ach ja und und was noch mal javascript man glaubt das gar nicht wie schnell das
mittlerweile ist das mag jetzt vielleicht nicht irgendwie so mit mit hand
optimiertem sampler zu vergleichen sein oder mit irgendwie was super
feifert optimiertem rast oder c oder meinetwegen c plus plus und ich denke mal
auch eine gut optimierte net anwendung wird das oder java anwendung wird das
wird das schon in schatten stellen aber alles in allem ist javascript ziemlich
schnell und das haben wir zum größten teil vor acht von google zu verdanken
es gibt ein paar talks auf youtube wo sich die engineers da von google und
vor acht hinstellen und ein paar performance optimierung in vor acht
erklären also vor wenn ich weiß was vor acht ist vor acht ist javascript engine
von chrome alter das ist richtig next level big brain was sie da für dinger
treiben so mit analyse wie lang läuft eine schleife und das dann quasi im
hintergrund noch mal optimiert neu kompilieren damit das dann beim nächsten
durchlauf schneller läuft und dann wird predikte dass die schleife maximal nur
bis 108 laufen kann und das kann man schon im vorfeld ausrechnen weil sind
nicht so viel alle das ist wirklich absolut abgedrehter scheiß was sie da
treiben mittlerweile das javascript im browser so schnell läuft und es läuft
ja nun mal schnell ich glaube facebook das ist so immer mein
lieblings negativ beispiel ich glaube facebook lädt keine ahnung 25 mb oder so
javascript runter wenn du die seite ohne cash lädst dass der shit überhaupt mit
mehr als einem fps läuft ist schon bewundernswert ja
und javascript javascript ist ja schon lange davon raus einfach nur so in
richtung richtung jquery damals wir schreiben mal drei zahlen damit man
irgendwie ein paar schriftzeilen blinken lassen kann oder so das ist schon
richtig richtig clever mittlerweile also ich bin auch kein alle wahnsinnig
riesen javascript fern oder so ist es mir geht wünsche alles in dort net
programmieren aber für das was javascript ist im
aktuellen zustand aktuellen browser ist das durchaus brauchbar so das meine
ansicht dazu aber sind wir nicht stehen geblieben also wir haben eine eigene
cute chat component entworfen ja wir können ab an der sebar und wir können
auch den serious max zum beispiel reinschreiben
punktiert auch ok das sind props das habe ich verstanden
findest du ts ist der nächste schritt naja ts ist ja keine sprache die direkt
im browser läuft dass das wird immer erst in javascript übersetzt achso nee
ganz ehrlich ich glaube es wird nach wie vor noch genug leute geben die auch
gerade bei kleinen simple dingern die da nix mit type script machen sondern
einfach direkt javascript
wobei sich halt tatsächlich type script die letzten jahre über sehr
durchgesetzt spätestens mit view 3 und dem besseren type script support es hat
sich an vielen stellen deutlich verbessert also type script ist heute sehr
verbreitet aber trotzdem ich glaube nicht dass type script jemals das javascript
in dem sinn ablösen wird dass alles quasi in type script programmiert wird
und javascript war sie nur noch als muss halt brauche halt weil im browser laufen
wird ne das glaube ich nicht es sei denn es sei denn
prom und firefox bauen einen bauenden type script compiler oder sowas direkt in
den browser ein so dass du quasi vom webserver type script mit ausliefern
kannst oder dass du in deinem html oder wo immer type script direkt mit
ausliefern kannst dann vielleicht aber dazu besteht ja eigentlich gar kein
grund weil jeder type script verwenden will der haut der javascript im
bildprozess raus
ne glaube ich nicht dass es das wirklich komplett ablösen wird so jetzt haben
wir das hier gemacht also das sind props und jemand hat geschrieben export ist
vielleicht etwas misleading ja das stimmt wenn export ist jetzt hier
vielleicht auch nicht das griffigste irgendwie props oder so wie in wie in
view vielleicht ein bisschen lesbare aber muss man sich dran gewöhnen export gut
ist
Was ist Javascript?
Okay, zeig her.
No!
Aber dann können die keine Webseite bauen damit, wenn sie kein Javascript verwenden.
Die rennen an Skill.
Ja, okay, wie machen die das dann?
Haben die dann einfach einfach ein Canvas, wo sie alles selbst malen oder so?
Gut, das funktioniert.
Dann kann man das aber nicht wirklich Webseite nennen.
Das ist quasi dann bloß noch ein großes, wahrscheinlich nicht sonderlich gut optimiertes Canvas.
Also keine Webseite mehr.
Das heißt, wenn du in Flutter HTML rendern willst, müsstest du dann erstmal HTML rendern,
irgendwie intern in Flutter, um es dann in ein Canvas in deinem Browser über Skia zu malen.
What the fuck?
Ich weiß ja nicht, ob das so die Big Brain Idee ist.
Flutter auf Mobile ist aber auch bestimmt kein Canvas in einem Browser.
Flutter auf Mobile ist wahrscheinlich, fragt mich nicht, von OpenGL bis irgendwas,
was da unter der Haube ist, wo dann direkt native reingerendert wird in irgendeinen Buffer.
Das ist dann schnell.
Aber wenn du Flutter zu WebAssembly bastelst, dann muss das ja irgendwas sein,
was dich im Browser malen lässt.
Also kann ja im Endeffekt nur in irgendein Canvas sein.
Das kannst du dir dann kaum noch Webseite nennen.
Naja, ist halt alles.
Ja, das stimmt, aber hier um ist es ja so.
Ja gut, stimmt, du hast recht.
Ich sehe das hier quasi als Art Parameter, aber man könnte aber auch sagen,
man exportiert die Variable, dass ich sie von außen füllen kann.
Ja, ja, kann man auch so sehen, das stimmt.
Ok, das haben wir jetzt gecheckt, next.
Ah, das heißt, unser QtMod ist immer der Sebaro, es sei denn, also wenn wir nichts angeben,
ist unser QtMod der Sebaro und wenn wir irgendwas angeben, wird er überschrieben.
Ok, das ist gut, das finde ich, das finde ich, das muss ich sagen,
das ist syntaktisch aber durchaus schick gemacht, BuzzFeld.
Ich finde das denn schlecht.
Als ich das, als ich das, ich habe mir gestern so ein Video zu Svelte angeguckt habe,
als ich da so Dinge hier drin gesehen habe, habe ich mir gedacht,
ah so super griffig ist das nicht, aber ich finde, das ist doch gut gelöst.
Na, das ist jetzt quasi optional.
Also ich kann entweder einen Mod angeben, dann steht er hier vorne drinnen
oder ich kann es weglassen, dann ist die folgende ich der Sebaro drin.
Wunderbar, so, next.
Na gut, das dachte ich mir, das ist ja das gleiche wie bei dem Array.
Ach nee.
Oh, das ist ja nochmal, das ist ja auch big brain.
Also mal angenommen, ich hätte jetzt hier mehrere Variablen,
ich hätte den Mod und ein Chat, keine Ahnung, oder ein Chat, 0W, keine Ahnung, irgendwas.
Und ich möchte, ich möchte das jetzt, ich möchte das jetzt füllen,
dann könnte ich das entweder so machen oder wenn ich ein Objekt habe,
könnte ich das auch so befüllen, also
ach Doppelpunkt, wir sind ja JavaScript.
Und dann könnte ich jetzt sagen, anstatt jedes einzelne anzugeben,
könnte ich jetzt sagen Punkt Punkt Punkt Options oder so.
Guckt hier, funktioniert auch.
Ok, das ist natürlich schon big brain time.
Aber das ist jetzt halt nicht sonderlich lesbar,
es sieht aus wie ein Fisch, sieht aus wie ein Fisch von der Seite so ein bisschen.
Vielleicht noch sowas hinten dran oder so.
Fisch, Flosse oder?
Ok, das ist ganz nice, aber ich glaube, da verwirre ich mich selbst,
wenn ich sowas verwende.
Ja, Flutter ist nice, da habe ich ja gar nichts gegen.
Ich habe es mir auch schon mal angeguckt ein bisschen letztes Jahr.
Könnt ihr euch noch dran erinnern?
Wer weiß noch, was wir in Flutter programmiert haben?
Kann sich da noch einer dran erinnern?
Weiß ich, habe ich die Flutter App hier noch?
Flutter Bild.
CD Flutter da.
My App Flutter.
Bild.
Moment Bild.
Wie starte ich denn die Linux App nochmal?
Release.
My App.
Flutter GTK habe ich nicht.
Warum?
Meine Flutter App geht nicht mehr.
Das ist kein Ubuntu, das ist Arch, ich benutze Archlinux.
Habe ich euch schon erzählt, dass ich Archlinux verwende?
Ich benutze mal Jarot, das ist ein Archlinux Abkömmling.
Wer es genau wissen will, hier meine Neofetch Ausgabe.
Archlinux beste.
Archlinux by the way.
Warum geht meine Flutter App nicht?
So.
Flutter Bild Linux.
Ich habe Flutter nicht mehr installiert.
Habe ich das mal gelöscht?
Export Path Flutter.
Flutter.
Hier.
Flutter.
Jetzt aber.
Bild.
Building Linux App.
Was passiert denn jetzt?
Jawoll.
Da sind wir.
Flutter App ist am Start.
Eigentlich sollte der den Sound abspielen.
Sekunde.
Beste.
Also wenn das nicht die beste Flutter App aller Zeiten ist, dann weiß ich auch nicht.
Okay, aus ist.
Sound wieder aus.
Ja, ich kann mich noch daran erinnern, das haben wir mal Flutter App gepastelt.
Wo sind wir hier stehen geblieben beim Cute Chat und den Mods?
Okay, das habe ich verstanden.
You can do so by accessing Dollar Dollar Props.
Was?
Dollar Dollar Props.
Okay, das geben wir jetzt mal hier aus.
Gucken wir uns mal an.
Block Dollar Dollar Props.
Hier, da kriege ich quasi ein Objekt mit allem drinne.
Chat ist 123, Mod ist 456.
Okay.
Verstanden.
Okay, nächstes Tutorial.
Zeig her.
Die Flutter App ruckelt nicht.
Das Flutter ist übrigens auch noch uralt.
Wie kann man sich die Flutter Version anzeigen lassen?
Flutter Bin Flutter Version.
Minus V.
Warum ist das eigentlich immer so ein Akt,
rauszufinden, was man für eine Version ist?
Jeder macht was anderes.
Minus Minus Version, Minus V.
Macht das jetzt was?
Okay.
Guck mal hier.
Von April.
Das ist das Ami Datum.
Warte mal.
Keine Ahnung.
Ich sag mal von April 2011.
2000 ist schon ein bisschen her,
wo man das Flutter Zeug hier runtergeladen haben.
Was ist denn die aktuelle Version?
Was ist das hier, Mann?
Wahrscheinlich schon drei oder so.
So, jetzt wird es etwas.
Conditional Render Blocks.
Ja, natürlich, sowas braucht man auch.
If user logged in, if not user logged in.
Das machen wir jetzt anders.
If.
Okay.
Das probieren wir jetzt aus.
If.
Moment, die Musik ist aus.
281.
Okay, Chat, ich glaube es euch.
Sie haben so viel das Gleiche geschrieben.
If mod.
Gleich, gleich.
Sebaro.
Dann.
Wird das hier H1 gerendert?
Else.
Wie macht man denn Else?
So?
So?
Nee.
Else im If Block.
So?
So?
So.
Okay, die Sündachs ist ein bisschen gewöhnungsbedürftig.
Jetzt in H2.
Oh.
Okay.
Wenn der Cute Mod Sebaro ist, dann H1.
Und wenn es nicht Sebaro ist, dann H2.
Funktioniert nicht.
Ach so, klein.
Hier habe ich ja groß geschrieben.
Ah.
Kann ich dann für den Fall der Fälle sowas machen?
Mod to lower case.
Für den Fall der Fälle.
Dass ich zu blöd bin für Groß- und Kleinschreibung.
Ja, das funktioniert.
Okay.
Das ist wahrscheinlich nicht die schönste Variante hier.
Aber das ist wirklich so eine Art Init-Funktion hier, die einmal am Anfang ausgeführt wird.
Ich finde das cool, das hat was.
Okay, also.
Das passt.
Ich habe jetzt gecheckt, wie man so conditional Sachen rendert.
Okay, next.
Ja, gut.
Das kriege ich auch so hin.
Each.
Aha.
Jetzt lernen wir, wie man eine Schleife macht.
Each.
Each Mod in LU.
Hört sich jetzt vielleicht ein bisschen falsch an.
Ich muss das mal umbenennen.
Ach so.
Haben wir eigentlich sowas wie Refactor hier?
Geht das?
Refactor in irgendeiner Art und Weise?
Kann es das?
Nee.
2 zu 1.
Geht nicht.
Nee.
Der nimmt alles, wo Value drin steht.
Aber gerade bei Value muss es nicht das Richtige sein.
Egal.
Each Mod as.
Nee, Moment.
Each Mod as Value.
Each Value.
As Mod.
Hier ist die For Each Schleife umgedreht.
Mod.
Okay, funktioniert aber.
Übergeben wir hier mal einen anderen Mod.
Ja, klappt.
Okay.
Schön ist was anderes, aber es klappt.
Ach, weil Z-Chat gerade von Staubsauger-Robotern hat.
Mein Robo-Rock hat sich letztens wieder gesettet.
Aber ich glaube, ich hatte noch nicht die allerneueste Version drauf, die das endgültig behoben hat.
Ich glaube, das ist von vor vor einem Jahr oder so noch.
Das ist ja mittlerweile glaubt gefixt.
Ja, ich werde ihn noch mal updaten mit dem neuesten.
Auch so ein Ding, was keine Ahnung, was die Chinesen bei den Dingern wieder gedacht haben.
Geil, schnell mal.
Okay, das habe ich auch kapiert hier.
So macht man eine Schleife.
Alles klar.
If you prefer, you can use destructing.
Nee, destructuring.
Each cat's SID name.
Ach so.
Das ist, weil man verschiedene Objekte trainert.
Das habe ich ja nicht. Bei mir ist ja einfach nur Text.
Ich muss den Staubsauger updaten.
Das sind doch hier komplett normale Sachen, die hier öfters fallen.
Werden Volumes bei Hetzler auch stündlich abgerechnet?
Das ist eine gute Frage.
Ich vermute mal stündlich.
Ausrufezeichen Hetzler im Chat.
Genau, ich wollte es gerade sagen.
Storage Volumes.
Hier, Billing on hourly basis.
Aber ich denke, was du nicht machen kannst, ist
2TB hinlegen, resizing für eine Minute, löschen und resizing.
Und dann hoffen, du bezahlst das nicht für die Stunde.
Ich denke, falls man überhaupt resizing kann, keine Ahnung, ob das geht.
Ich denke mal, du wirst für die Stunde das Höchste bezahlen,
was eingestellt war für diese Stunde.
Würde ich jetzt mal raten.
Also ich glaube nicht, dass sie sich jebaiten lassen.
Was kommt jetzt?
If you need to loop over nested lists, use an each block.
Ach, den Index kann ich auch dabei kriegen.
Das ist praktisch.
Each value as mod E.
Und das heißt, hier kriege ich jetzt nochmal den Index.
Okay, das ist tatsächlich sehr praktisch.
Alles klar, das kriege ich hin.
Das ist nichts Großartiges, Kompliziertes.
Oh, jetzt kommen Emojis.
Jetzt kann da nichts mehr schiefgehen.
Ach so, du willst noch ein paar Stunden Daten auslagern?
Ja, dafür ist, denke ich, das eine super Geschichte.
Was?
Was möchten die mir hier jetzt sagen?
Hä?
Click remove things button.
Ja, ist doch alles okay.
Was ist das Problem?
Und weiter?
Ah, das laggt kurz oder was, oder wie, was meint er?
Hä?
Das checke ich jetzt nicht, was sie uns damit sagen wollen.
Ach, du meinst, dass das sich jedes Mal alles neu rendert, sondern nur das, was sich geändert hat, oder wie?
Name ist anscheinend so ein Ding.
So was.
Und ist Name was, was quasi so ein sweltinternes Ding ist?
Keine Ahnung, ich glaube, wenn ich das Problem habe, werde ich es merken.
Wenn ich es entferne, passt das Emoji nicht mehr.
Apfel, was ist das?
Banane, Karotte.
Apfel, Banane, Karotte.
Ah, das Emoji ist Karotte.
Ach so.
Ach so, jetzt habe ich es verstanden.
Weil die ID falsch ist, oder was?
Thing.id
Ach, hier hinten kannst du ihm sagen, woran er die Dinge einzigartig identifizieren kann.
Das heißt, ich könnte dann sowas schreiben wie hier.
Ja gut, eigentlich sind die Dinge ja schon einzigartig.
Es ist ja einfach ein Text.
Na, E gibt es jetzt nicht mehr.
Ich glaube, das brauche ich in dem Fall gar nicht.
Das geht darum, wenn irgendwelche Objekte sind, woran ich weiß, welcher Key quasi jetzt der
oder welches Property er als Key verwenden soll.
Okay, ja, habe ich verstanden.
Most web applications have to deal with async data, ja.
Aha, ach guck mal, das kann direkt Await benutzen im HTML oder was?
Okay, das ist natürlich feifett.
Das ist natürlich feifett.
In Vue musstest du da immer sowas machen wie du hast in deinem Setup hast du dann gesagt
hier Await bla bla bla, API call und dann musstest du in Vue immer entweder du konntest
quasi sowas wie checken wie ist loading, falls es sowas gab, oder du musstest quasi gucken
if result gleich gleich null, dann das und ansonsten das.
Das ist im Prinzip hier ähnlich, nur dass du hier direkt Await machen kannst wohl irgendwie
im HTML.
Okay, das weiß ich, wenn ich es brauche, wenn ich es brauche.
Listen Events, das habe ich schon gecheckt, wie es funktioniert.
Die Event Handlers inline, das habe ich auch schon gecheckt.
On click once, das ist quasi das gleiche wie in Vue, wenn du Punkt Stop dahinter schreibst
und sowas.
Also once ist in dem Fall Remove Handler after the first runs.
Okay, das braucht man selten, aber das kommt durchaus mal vor.
Das braucht man zum Beispiel, wenn man irgendwie ein Event hat in einem Child Item und will
nicht, dass es quasi da drüber auch noch gehandelt wird, beispielsweise ein Click oder
sowas.
Ja, okay, verstehe ich, das weiß ich auch, ob ich es brauche, wenn ich es brauche.
Components can also dispatch Events, but do so they must create an Event Dispatcher.
Oh, jetzt wird es aber next level shit.
Jetzt sind wir schon bei ein bisschen, ach so, ja gut, das ist quasi eigene Events im Endeffekt.
Das ist doch nicht so Stickshead.
Das sind eigene Events, das kriege ich auch noch hin.
Das klingt auch noch irgendwie naheliegend, ja.
Ja, also man kann, du kannst quasi hier ein Event abonnieren aus der äußeren Komponente,
was deine Innere wirft.
Das werde ich wahrscheinlich nicht so oft brauchen, aber das ist auch so typisch, wenn
ich es brauche, dass ich, also ich weiß, wenn ich es brauche, wenn ich es brauche, Dispatch
Message Text, das ist wie Emit, Emit in View ist das.
Nur, dass es hier Dispatch heißt.
In Java wäre es natürlich Event Dispatcher Factory Generator, wenn das mal reicht, weil
also die Event Dispatcher Factory Generator braucht auf jeden Fall noch einen Manager
und dieser Manager sollte schon als Singleton implementiert sein, dass man den nicht mehrfach
instanzieren kann.
Also quasi bräuchte man einen Event Dispatcher Factory Manager Singleton.
Das wäre Java Style.
Wahrscheinlich Adapter, Adapter brauchen wir auch noch.
Event Dispatcher Factory Generator Adapter Manager Singleton.
Das klingt gut.
Und ein ganzes Überlog vor Jloggen.
Unlike, was Dom Events, Component Events, Don't Bubble.
Das hätte ich jetzt eigene Bubble Events in View?
Glaube nicht.
Nur, da wo du Subscribed hast, direkt dazu.
Ah, wenn ich das Subscribe ohne Event, dann passt das das weiter zur Komponente oben drüber.
Alles klar.
Ok.
Das werde ich so gut wie nie brauchen.
Alles klar.
Ok.
Das sind jetzt schon richtige Feinheiten, wo wir hier dabei sind.
Hat das jetzt überhaupt irgendjemand verstanden, was ich gesagt habe?
Hat jemand eine Ahnung, was gemeint ist mit Events Bubblen oder Bubble nicht?
Ich glaube, das sollte ich vielleicht noch mal ein bisschen etwas ausführlicher erklären.
Wie mache ich das jetzt am besten?
Also, machen wir mal Paint.
Oder machen wir Brown Car Paint.
Wir machen HTML.
Wir machen, wir machen HTML.
So.
Also mal angenommen, man hat hier einen Diff und da drinnen, keine Ahnung, noch einen Diff
und da drinnen einen Button.
So.
Und jetzt ist halt die Frage, wenn ich möchte, dass dieses Diff mitbekommt, dass jemand hier
innen drinnen den Button geklickt hat oder umgedreht, ich möchte nicht, dass dieses Diff mit,
und wir machen das anders.
Wir machen, wir machen anstatt zum Button mal einfach noch einen Diff.
So.
Das hier ist Outer.
Das hier ist, keine Ahnung, Klaas.
Inner.
Und das hier ist, Alter, ich kann ja mal richtig schreiben.
So.
Und da.
Nein.
So.
Und das hier ist Klaas.
Ist egal.
So.
Wenn ich hier sowas machen will wie onClick, so.
Dann ist halt die Sache, ich kann jetzt entweder wollen, dass das äußere Element mitbekommt,
dass ich blub angeklickt habe oder im umgekehrten Fall könnte es auch sein, dass ich will,
dass das äußere Element ignoriert, dass es nicht denkt, es wurde geklickt, wenn ich das
innere Element anklicke.
Das ist immer so ein bisschen die Frage, wie das UI technisch implementiert ist.
Normalerweise würde ich eigentlich von ausgehen, ein Click-Event geht durch die UI-Elemente
durch.
Also wenn ich das hier anklicke, dann geht der Click zuerst da drauf, der Click geht da
drauf, der Click geht da drauf.
Und der stellt fest, ah, ich bin das letzte Element in der Reihe, ich muss wohl gemeint
sein.
So.
Und umgedreht kann es ja dann auch sein, ich klick das an, das geht von da wieder hoch.
Und jetzt kann man sagen, hey, ich möchte nicht, dass diese Events, dass die äußeren
Elemente das mitbekommen, wenn das innere Element geklickt wurde.
So und dieses weitergeben, das nennt man babbeln.
Also sprich, wenn ich hier einen Click-Event auslöse und dieses Click-Element babbelt
quasi die Hierarchie weiter nach oben, wie so die Blase im Wasser.
Hier wird das ausgelöst und die Blase steigt dann quasi auf durch die Element-Hierarchie,
das nennt man babbeln.
Und ein Bubblesort hat damit ja nichts zu tun.
Und ich krieg noch nicht, ich bin so noobig, ich krieg nicht immer den Bubblesort aus dem
Kopf hin, dabei sind das 5 Zeilen oder so.
Aber ich kann den Binary Tree inverten.
Das heißt Propagate, das ist in dem Fall das gleiche.
Es mag da im Detail vielleicht noch irgendwelche Detailimplementierungen geben, dass du sagen
könntest, ja, babbeln wäre, wenn das automatisch im Hintergrund händelt, dass es automatisch
passiert.
Wenn du es nicht abstellst und propagaten, kannst du sagen, ok, dass das passiert, muss
ich es explizit einschalten oder so.
Aber im Prinzip ist es das gleiche.
Und das ist bei den meisten UI-Frameworks so, also bei WPF ist es glaube ich auch so,
dass Events hoch babbeln und dann musst du dann auch sagen stopp oder so irgendwann.
Wobei ich nie viel mit WPF gemacht habe, WPF ist auch so ein absolutes Painz-Champ-Ding.
Da hat sich mir auf die glorreiche Idee gekommen, das XML dafür zu nehmen, na egal.
So was haben wir als nächstes noch?
Bei View kann man am Element Event stopp schreiben, genau, das geht ins Feld auch, da kannst du
sowas hier schreiben.
Zum Beispiel, oder, oder, oder, oder sowas, macht das, das ist im Prinzip das gleiche.
Was ist ein Binary-Tree, das ist ein Baum mit nur zwei, wie heißt das, Blättern?
Also an jedem Node nur maximal zwei Blätter, oder Äste, sind es Äste, keine Ahnung, Zweige,
sind es Zweige, also das ist sowas hier im Endeffekt, wenn du eine Datenstruktur hast
du in dieser Richtung, oh, das ist dein Node und da hast du zwei Äste drunter, da hast
du die nächsten Node, da hast du wieder zwei Äste drunter, da hast du zwei Äste drunter,
da hast du, du hast immer nur zwei, du hast immer nur zwei und deswegen ist es ein Binary-Tree,
so, ja.
Blätter sind die letzten Kinder, ach so war das.
So, jetzt haben wir, jetzt haben wir ins Feld auch gelernt, wie das mit Click-Events funktioniert,
Momocopter, Dankeschön für den Sub, Bind Value Name, das haben wir auch schon gelernt,
guck mal hier, wir haben das, wir haben, also heute, also muss ich sagen, also das Tutorial
ist wirklich gut gemacht, Bind Value Sveltex Care Of It For You, was Bind Value, dachte
das ist Two-Way Binding vielleicht, ok, das testen wir jetzt nochmal, ich muss mal die
Qt-Mods hier kurz raus, wobei wir machen einfach einen neuen Input, Input, Number, egal wie
der Kram heißt, zack, so, was ist denn das, Range, nicht Number, Range oder, ah das da,
das da meine ich, Range, ok, und da kann ich jetzt sagen, zum Beispiel, keine Ahnung, Let,
Let, na Value ist jetzt schon besetzt, Value ist natürlich blöd, Range gleich Null, Range
gleich Null, dann würde ich hier quasi sagen, Bind, ne Bind, Value gleich, und jetzt eckige,
jetzt geschweifte Klammern, war das so, Range, ok, ok, das scheint schonmal zu funktionieren,
und das heißt, hier oben drüber, könnte ich jetzt quasi Range schreiben, oh es laggt,
oh, oh, es laggt, Leute ich hab irgendwas falsch gemacht, das laggt as fuck, was hab ich falsch
gemacht, aber das wusste ich doch schon, ach das ist glaube ich, weil sich die Seitenbreite
ändert, kann das sein, ah jetzt geht alles, das ist weil sich die Seitenbreite geändert
hat, das hat es durcheinander gebracht, guck mal, jetzt funktioniert es ruckelfrei, Imagine
verwenden BR in 2021, ok, verstanden, so, Checkboxes, Bind, Check, ja das kriege ich
alles, das kriege ich alles gebacken, Radio Buttons, das kriege ich alles hin, das ist
kein Ding, das habe ich, wenn ich bei meinen Grundlagen verstanden hat, dann passt das,
nicht agil genug, ja, eindeutig, Text Area Bind, Bind Value Selected, On Change, gut,
wenn ich es brauche, ach das kriege ich schon hin, Multiples, auch egal, Inner HTML, ok,
das braucht man wahrscheinlich so gut wie nie, ah, oh das ist cool, ich bilde mir ein,
das geht in Vue nicht so einfach, weil ja die Dinger nicht standardmäßig Reaktiv sind,
es kann auch sein, dass ich jetzt falsch liege, das ist natürlich praktisch, wenn du irgendwelche
random JavaScript Objekte hast und kannst dort dann die Properties verwenden für Data Binding,
wobei doch, natürlich geht das in Vue, du kannst das Ding einfach als Vue Model setzen,
klar funktioniert das, ich erzähle euch für ein Mist, doch, easy funktioniert das, aber
das ist natürlich praktisch, Audio, Video Element, ja, kriegen wir hin, kriegen wir
auch hin, sieht man irgendwie die Chapters, ah, danach wird es wieder interessant, also
das habe ich jetzt glaube ich, hier, Lifecycle, On Mount, jetzt kommen vielleicht noch ein
paar interessante Dinger, jetzt kommen noch ein paar interessante Dinger, weil das ist
immer so ein Ding, was oftmals, wenn man die jeweiligen Frameworks nicht kennt, schwierig
ist, man möchte ja manchmal Sachen nur einmal machen, oder nur machen, wenn Bedingung xy
eingetroffen ist, aber jetzt nichts, was man irgendwie intern im JavaScripten seiner Seite
abfackeln könnte, zum Beispiel das erste Mal, wenn diese Komponente benutzt wird, stellt
euch mal vor, wir verwenden diese QtChat Komponente 500 mal auf unserer Seite, aber wir wollen
nur einmal initial was machen, oder so, und nicht jedes Mal, beim Anzeigen der Komponenten,
oder vielleicht müssen wir was aufräumen, wenn ich die Seite wechsle, zum Beispiel ich
habe einen Timer gestartet, der alle Sekunde irgendwas checkt, und ich wechsle die Seite
und ich muss den Timer noch stoppen, dafür braucht man irgendwelche Lifecycle Hooks,
das hat man in Vue auch und anscheinend gibt es das in Svelte auch. Schlimmer wie die
Otto Seite, ja die Otto Seite war ganz grausam, die im Sekundentakt irgendwie 20 MB Bilder
nachgeladen hat, immer wieder die gleichen. Import on mount from Svelte, ok, das machen
wir jetzt, in unsere QtChat Komponent, Import, machen wir wahrscheinlich vor allem, import
on mount from Svelte und jetzt können wir einfach sagen, on mount, nee nee nee, das
machen wir jetzt nicht, on mount, gut ist jetzt egal, mounted, ja, und das wird jetzt
nur einmal, nur einmalig ausgeführt, jetzt ist die Frage, wird das einmal ausgeführt
pro Komponente, ja logisch, sobald die Komponente in die Seite eingebunden wird quasi. Die Musik
ist irgendwie nicht so Action reich gerade, hier noch eine Runde, Cat Jam, so weiter,
Leute es ist fast 18 Uhr, ich muss mal langsam Food Ge machen, Abendessen Ge, on mounted,
was haben wir denn noch für Lives, on destroy, das ist wahrscheinlich wenn es unloaded wird,
ja, verstehe, before update, after update, das ist quasi sowas wie, bevor es gerendert
wird und nachdem es gerendert wurde, ja das wird man wahrscheinlich nicht so oft brauchen,
aber wenn man es braucht dann ist es gut, dass es da ist, tick, ja das gibt es in Vue
auch, in Vue kannst du sagen on next tick oder solche Geschichten, das ist dann zum
Beispiel ganz praktisch, wenn du irgendwie irgendwelche AP Dinge abrufst und möchtest
die rendern, aber deine Logik läuft erst nachdem es schon gerendert ist und wann es
wieder rendert weißt du nicht und dann sagst du einfach next tick, dann machst du es da
drin, hier verstehe, jetzt kommen die advanced Topics, ich glaube die gebe ich mir heute
immer, Store, Ride Stores, ist das State Management oder sowas, ich will mir mal die Animationsgeschichten
noch angucken, die haben doch noch irgendwelche Animationen drinne, ok das sind irgendwelche
State Geschichten, die Autosubscrib, das muss ich mir mal in Ruhe angucken, das ist jetzt
nichts was ich erstmal hier jetzt für so kleine kleine Geschichten brauche, ich will
mir das mit Animationen nochmal angucken, hier Motion, Motion, wo ist die Motion, boah
guckt es euch mal an, huge animation, das muss ich mir nochmal angucken wie das jetzt
funktioniert, Import Tweet, Import Cubic Out, alles klar, das ist nice, dass das standardmäßig
drinne ist sowas, das muss ich sagen, das ist sehr, sehr nice, das ist wirklich, wobei
das machen wir jetzt mal einfach hier drin, das ist cool, hier Procress, wo ist mein Procress
Balken, hier, nee, Procress, gibt es sowas wie Beautify fürs Welt, keine Ahnung, ich würde
drauf tippen bestimmt, so wir machen mal ein paar Zeilen und Brüche rein, so, also jetzt
können wir das Style, Procress, Width, 100 View, nee, BV, VW, ach nee, nee einfach nur
100%, gut, wir benutzen fast alle Tailwind, ich finde Tailwind gar nicht, ich finde Tailwind
gar nicht zu übel, also für mich als CSS Snoop ist Tailwind gar nicht mal schlecht,
weil das manche Sachen irgendwie logischer macht, zum Beispiel dass du Ring verwenden
kannst, anstatt dass du dich mit Outline und Border und so rumschlägst, was Tailwind genau
ist, boah, wie würde ich das denn in einem Satz zusammen basteln, Tailwind ist eigentlich
nur eine riesengroße Ansammlung an vorgefertigten Klassen, die du an HTML Elemente dran packen
kannst, aber saumäßig viele, ja es ist ähnlich zu Inline CSS, nur dass du es halt bei Class
hinschreibst, du hast dann sowas wie, keine Ahnung, was vorgefertigt ist, das heißt dann
glaube ich sowas wie, keine Ahnung, Red 500 oder so, das ist irgendeine Klasse, die Tailwind
halt für dich angelegt hat und die haben halt auch relativ clevere Geschichten gemacht,
was aufeinander aufbaut, also du kannst zum Beispiel sagen dann bei einem Button sowas
wie Ring 5 oder so, ich glaube das war es, ich bin mir jetzt aus dem Kopf nicht ganz
sicher und dann sorgt er dafür, dass sowohl Outline richtig gesetzt wird, Border richtig
gesetzt wird und wenn du hoverst, dann quasi, wie war das, wenn der Border dann ein bisschen
in den Button reingeht, dass das dann quasi automatisch vom Outline abgezogen wird und
sowas, das ist relativ clever gemacht, aber im Prinzip sind es einfach nur massig viele
vorgefertigte CSS Klassen, gut am Ende, wenn du es bildest, bleiben nur die CSS Klassen
drinnen, die du auch benutzt, während der Entwicklung ist glaube ich alles geladen,
es könnte aber sein, dass es seit den neuesten Tailwind besser ist, weil die da ja ihren
komischen Tailwind on the fly Compiler haben, das habe ich aber auch nur am Rande verfolgt,
probieren wir mal aus das hier mit dem progress Balken, also progress mal gucken, ob ich das
jetzt verstanden habe, also wir nennen das Ding jetzt mal script let value gleich 20
zum Beispiel, dann können wir jetzt sagen bind value, noch mal falsch, ach nee progress
hat was anderes, ja wie jetzt, wobei nein, ich muss es ja gar nicht binden, ich will
es ja nicht, ich will es ja nicht two way binden, weil progress ist ja klar, progress
kann ja kein Input liefern, progress zeigt ja nur an, kann ich einfach sowas hier machen,
flexes dann auch automatisch, also dann muss man mal so, progress, zack zack, so hä, wait
a minute, warum ist das jetzt auf 100, ach weil das ist das Komma, ach du große 9, ok
dann min ist 0, max ist 100, ok default value ist keine Ahnung 10, gut das funktioniert,
so und jetzt die Animation, hier progress, ok das copy paste ich mir mal, keine Ahnung
wie das funktionieren soll, ah nee im Moment, progress gibt es schon, n heißt es jetzt
einfach, so und wie kriege ich das und das jetzt miteinander verbunden, button, progress
set, das checke ich noch nicht so genau, wie ist das denn jetzt miteinander verbunden,
ach so, ach nee die verwenden, die verwenden das hier als pro, ach so, ok, ach jetzt verstehe
ich das, hey das ist ja richtig clever gemacht, ja gut jetzt habe ich noch nichts gesetzt,
jetzt hast du quasi eine endlos, endlos progress lade, lade, dings, aber ok, hat es ein default
value vielleicht, nee, progress set 0, das ist default, was, äh was, was genau, ok
die Animation lag nicht, das ist normal so, äh was willst du von mir, äh warum muss
man denn da jetzt einen dollar davor machen, warum muss denn da jetzt einen dollar davor,
das ist ein store, bei stores muss man dollar davor machen, ok, das ist also quasi so ein
klassischer fall von man muss es einfach wissen, dass es so ist in dem fall, sonst hat man
gelitten, ok die fall value ist gesetzt, so dann machen wir mal einen button, ja das ergibt
schon nen sinn warum die motion, warum die stores davor waren, ja das button, aha, so
und jetzt machen wir set random, oh nee random in javascript, lull, random, run, math random,
random, aha, returns between 0 and 1, das ist sehr schön, genau das will ich haben,
guckt es euch an, guck mal, also das finde ich cool, dass animationen standardmäßig
drin sind, guck mal, das animiert das jetzt, so duration können wir zum beispiel mal richtig
hochschrauben, dass man es sieht, ah, hier duration, 10 sekunden, blup, das animiert
das jetzt, das finde ich sehr nice, was passiert dann, wenn ich hier schneller klicke, das
finde ich cool, dass das drinne ist, easing, cubic out, woher weiß ich was es da alles
gibt, weiß man nicht, es ist halt einfach so, gibt es hier auto complete für, achja back
in out, cubic out, elastic, elastic out will ich haben, elastic out, gachi best, ne, achso
vielleicht sollte ich das auch so schreiben, boah guck mal, seht ihr wie elastic das jetzt
ist, richter banger, huge elastic, ist zwar vielleicht für ne progress balken ein ziemlich
hängengebliebene animation, aber es ist cool, dass sowas eingebaut ist, spani, dankeschön
für den sub, wer hat das gekriegt, der murkser, das finde ich eine sehr schöne sache, dass
dort animation und so, wahrscheinlich sind es ja nicht mal super viele oder so, es gibt
nur 2, guck mal es gibt sogar nur 2, oder, ja es gibt sogar nur 2, spring, spring und
tween, ok und das ist jetzt spring, ist die animation jetzt javascript, ich würde sagen
dies javascript, das finde ich aber trotzdem cool, dass sowas dabei ist, das sind immer
so kleinigkeiten, wo man dann irgendwelche zusatzdinger braucht und es reicht ja auch
komplett, dass da nur 2 verschiedene animationen dabei sind, warum sollte da mehr drin sein,
aha transitions gibt es auch noch, ah transitions, ok da gibt es noch mehr, das werde ich aber
hier nicht verwenden können, oder kann ich auch hier transitions verwenden, ok import,
from transitions, crossfade, ne das wird so nicht funktionen, das muss man anders verwenden,
aber ich finde es trotzdem nice, dass so basic animationen drin sind, das ist wirklich plus
punkt, das finde ich sehr gut gemacht, aber gut habe ich jetzt kapiert wie es funktioniert,
hier spring, transitions, jetzt kommt die advanced geschichte, import fade transitions, ok, ok
ah, das sind transitions, wenn elemente ein und ausgeblendet werden, was du musst in der
component transition crossfade machen, also hier drinnen, ne, also das kann man hier verwenden
wenn man, ach hier transition, ja gut das ist, das ist wenn ich elemente ein und ausblenden
lasse sowas, ja, das ist aber auf jeden fall nice, achso das ist in und out, ok, ok, ok,
ok, ok, ok, ok, das ist, das ist cool, das gefällt mir.
Warum heißt du nicht mehr Max FPS? Ich hab ich ich hieß hier noch nie Max FPS. Ich hieß hier schon immer Wupploch's
Transitions, okay das gucken wir uns jetzt nicht mehr an. Das wird ja richtig noch richtig abgedreht hier
Actions
Okay, ich würde sagen das braucht noch mal eine zweite Runde für für mehr mehr Svelte lernen
Aber wir haben heute schon einiges gelernt. Also ich bin jetzt deutlich schlauer und ich muss sagen das macht echt einen guten Eindruck bis jetzt
Also das das wirkt durchdacht
Das ist schon mal. Ich meine das ist ja das beste was man darüber sagen kann im Endeffekt
Es wirkt es wirkt durchdacht und es wirkt nachvollziehbar und ich
Glaube wenn man sich mit ein bisschen mit ein paar anderen Frontend Frameworks aus kennt kommt man da
tatsächlich ganz gut rein
Ob ich das jetzt verwenden werde
Anstatt view erstmal keine ahnung
In view kenne ich mich
mittlerweile ganz gut aus
Und ich habe eigentlich keinen grund da jetzt was anderes großartig zu verwenden aber mir juckt es doch schon in den fingern damit
Irgendetwas zu basteln mal
Planst du eigentlich neben den stellen reviews auch code reviews auch ich glaube das ist für youtube zu harte koste da blicken die meisten nicht durch
Und ich auch nicht je nachdem was es für projekte sind
In view hat auch animation groups ja aber in view musst du die animations mit css selber machen und keyframes
Und hier ist der kram schon fertig drinne
Obwohl ich glaube weil ich glaube das stimmt nicht glaube fade in fade out ist bei view glaube ich auch standardmäßig mit darunter
Obwohl ich glaube weil ich glaube das stimmt nicht glaube fade in fade out ist bei view glaube ich auch standardmäßig mit dabei
Nächstes mal dann das ruckelfreie to do ab ja das machen wir als nächstes leute
Wir bauen da muss ich mir aufschreiben wir bauen wir bauen an
Ich meine wenn man nicht weiß was man bauen soll nicht projekte ideen
Stream stream stream
Stream ideen
Ja wenn man keine ahnung hat was man machen soll dann baut man eine to do app
Ne
Was wird programmiert wir sind schon fertig ich habe mir das welt angeguckt ich hatte davon keine ahnung davor
Und ich muss sagen ich finde es wirklich nice also alles was ich jetzt gesehen habe ist schlüssig
ein bisschen gewöhnungsbedürftig manche sachen wie diese
dollar dollar punktsyntax und dass man manchmal ein dollar zeichen braucht und manchmal nicht
Aber ich glaube das ist ein typischer fall von man muss halt einfach wissen was man macht
Was kommt an weihnachten wieder cobalt nee weiß ich noch nicht was da kommt ob da überhaupt was kommt keine ahnung
Leute ich gehe jetzt was essen pepo fett time
Wir sehen uns im nächsten stream
Bis dann und für alle die sich mitgekriegt haben ihr könnt jetzt auch subscriben auf youtube
Wer auf youtube high iq kekse und subscriber batches verwenden will
Ihr könnt jetzt joinen auf youtube
Für 2.99 im monat
Kriegt ihr aktuell ich mache direkt nach dem stream das fünfte emote rein weil ich habe mittlerweile emote slots
Was gibt ihr mehr geld kommt ungefähr aufs gleiche raus bei youtube kriege ich 70 prozent bei twitch kriege ich 50 prozent
Deswegen ist es bei youtube billiger
Deswegen kostet bei youtube auch noch 2.99
Ihr bekommt loyalty batches auf youtube und ihr kriegt keks emote die keks emote könnt ihr global auf youtube verwenden überall
Die loyalty batches gibt es natürlich dann eben nur bei mir wo das angezeigt wird weil ihr könnt ja theoretisch
auch anderen channel noch subscriben
Aber die emote könnt ihr global soweit ich weiß auf youtube verwenden
Also leute wir sehen uns bis denn. C U
