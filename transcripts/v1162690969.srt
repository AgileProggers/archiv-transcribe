1
00:00:00,000 --> 00:00:05,000
Das war's für heute, bis zum nächsten Mal, bis zum nächsten Mal, bis zum nächsten Mal, bis zum nächsten Mal.

2
00:00:30,000 --> 00:00:35,000
Das war's für heute, bis zum nächsten Mal, bis zum nächsten Mal.

3
00:01:00,000 --> 00:01:10,000
Das war's für heute, bis zum nächsten Mal, bis zum nächsten Mal.

4
00:01:30,000 --> 00:01:35,000
Das war's für heute, bis zum nächsten Mal.

5
00:02:00,000 --> 00:02:05,000
Das war's für heute, bis zum nächsten Mal, bis zum nächsten Mal.

6
00:02:30,000 --> 00:02:35,000
Das war's für heute, bis zum nächsten Mal.

7
00:03:00,000 --> 00:03:05,000
Das war's für heute, bis zum nächsten Mal.

8
00:03:30,000 --> 00:03:35,000
Das war's für heute, bis zum nächsten Mal.

9
00:04:00,000 --> 00:04:05,000
Das war's für heute, bis zum nächsten Mal.

10
00:04:30,000 --> 00:04:35,000
Das war's für heute, bis zum nächsten Mal.

11
00:05:00,000 --> 00:05:05,000
Das war's für heute, bis zum nächsten Mal.

12
00:05:30,000 --> 00:05:35,000
Das war's für heute, bis zum nächsten Mal.

13
00:05:35,000 --> 00:05:40,000
Das war's für heute, bis zum nächsten Mal.

14
00:06:05,000 --> 00:06:10,000
Das war's für heute, bis zum nächsten Mal.

15
00:06:35,000 --> 00:06:40,000
Das war's für heute, bis zum nächsten Mal.

16
00:07:05,000 --> 00:07:10,000
Das war's für heute, bis zum nächsten Mal.

17
00:07:35,000 --> 00:07:40,000
Das war's für heute, bis zum nächsten Mal.

18
00:08:05,000 --> 00:08:10,000
Das war's für heute, bis zum nächsten Mal.

19
00:08:35,000 --> 00:08:40,000
Das Problem ist nur, dass die Sub-Batches in kleinskaliert kacke aussehen.

20
00:08:40,000 --> 00:08:43,000
Die sehen wirklich nicht gut aus.

21
00:08:43,000 --> 00:08:48,000
Die sehen viel zu kleinteilig aus.

22
00:08:48,000 --> 00:08:55,000
Das ist aber nicht schlimm, weil die Designerin hat das schon angepasst.

23
00:08:55,000 --> 00:08:58,000
Also die ist gerade dabei, das anzupassen.

24
00:08:58,000 --> 00:09:02,000
Wir machen einfach den Ausschnitt größer und machen hier das Gesicht ein bisschen anders.

25
00:09:02,000 --> 00:09:06,000
Dass dann quasi weniger Details auf so eine kleine Fläche kommen.

26
00:09:06,000 --> 00:09:12,000
Ich dürfte nicht vergessen, ich glaube, die kleinen Emotes sind 16 mal 16 oder so.

27
00:09:12,000 --> 00:09:14,000
Der goldene Kick sieht böse high aus.

28
00:09:14,000 --> 00:09:18,000
Ja.

29
00:09:18,000 --> 00:09:25,000
Stimmt.

30
00:09:25,000 --> 00:09:27,000
Vape Nation.

31
00:09:27,000 --> 00:09:30,000
Leute, soll ich auch sagen, mein Halsbeer ist besser.

32
00:09:30,000 --> 00:09:33,000
Und es ist immer noch kein Corona.

33
00:09:33,000 --> 00:09:35,000
Zum Glück.

34
00:09:35,000 --> 00:09:38,000
Es hat sich jetzt ja so angehört, als warte ich endlich drauf.

35
00:09:38,000 --> 00:09:42,000
So nach dem Motto, fuck, es ist immer noch kein Corona, Alter.

36
00:09:42,000 --> 00:09:45,000
Aber es wird eh schwierig mit Corona bei mir.

37
00:09:45,000 --> 00:09:47,000
Ich bin jetzt doppelt geimpft seit einem Monat.

38
00:09:47,000 --> 00:09:50,000
Oder zwei Monate, eine Weile schon.

39
00:09:50,000 --> 00:09:52,000
Die Antenne am Arm ist immer noch da.

40
00:09:52,000 --> 00:09:54,000
Und ich habe einen Test gemacht, der war negativ.

41
00:09:54,000 --> 00:10:03,000
Das heißt also, dass das Corona ist, ist deutlich. Es ist wirklich sehr unwahrscheinlich.

42
00:10:03,000 --> 00:10:06,000
Kann ich gleich mal zu sagen, ich muss hier vorher nochmal nochmal was was wir heute machen.

43
00:10:06,000 --> 00:10:09,000
Also ihr seht ja, es wird langsam kühl.

44
00:10:09,000 --> 00:10:12,000
Und ich muss jetzt mal meine Heizung, meine Heizung steuern können.

45
00:10:12,000 --> 00:10:16,000
Und ich hatte Big Brain Idee, was ich machen könnte.

46
00:10:16,000 --> 00:10:20,000
Wenn die Steuerung von meiner Heizung funktioniert über mein Home Assistant,

47
00:10:20,000 --> 00:10:26,000
dann kann ich übrigens mal anschalten nebenbei.

48
00:10:26,000 --> 00:10:29,000
Das ist jetzt, dass der ganze Krempel mal hochfährt.

49
00:10:29,000 --> 00:10:31,000
Hier Home Assistant vm.

50
00:10:31,000 --> 00:10:34,000
Nein, nicht die Cute vm, die Home Assistant vm.

51
00:10:34,000 --> 00:10:37,000
Cute vm brauchen wir jetzt nicht.

52
00:10:37,000 --> 00:10:40,000
Und die Stream vm.

53
00:10:40,000 --> 00:10:43,000
Mein Ace, Dankeschön für den Sub.

54
00:10:43,000 --> 00:10:45,000
So, und ich habe mir folgendes überlegt.

55
00:10:45,000 --> 00:10:50,000
Ich könnte eigentlich, nachdem ich überall Temperatursensoren habe,

56
00:10:50,000 --> 00:10:55,000
könnte ich eigentlich die Heizung komplett automatisch machen.

57
00:10:55,000 --> 00:11:00,000
Ich könnte nämlich einfach sagen, hey, sagen wir mal, wenn es im Flur unter 18 Grad wird

58
00:11:00,000 --> 00:11:05,000
und es nicht Sommer ist, dann mach einfach die Heizung an.

59
00:11:05,000 --> 00:11:12,000
Und wenn du die Heizung eingeschaltet hast, dann schalte die, dann schalte den Status für einen weiteren Tag nicht um.

60
00:11:12,000 --> 00:11:16,000
Weil man muss da immer so eine kleine Security Feature,

61
00:11:16,000 --> 00:11:18,000
der Security Feature ist ein doofes Begriff.

62
00:11:18,000 --> 00:11:25,000
Man muss da immer so eine kleine Sperre einbauen,

63
00:11:25,000 --> 00:11:30,000
dass es nicht im Zweifelsfall sich fünfmal pro Sekunde an- und ausschaltet.

64
00:11:30,000 --> 00:11:35,000
So ein Cooldown, ja, genau.

65
00:11:35,000 --> 00:11:38,000
Global Cooldown.

66
00:11:38,000 --> 00:11:40,000
Aber auf offene Fenster achten.

67
00:11:40,000 --> 00:11:43,000
Ja, das Schöne ist, ich habe ja auch Fenstersensoren.

68
00:11:43,000 --> 00:11:45,000
Ich weiß auch, ob die Fenster auf sind.

69
00:11:45,000 --> 00:11:49,000
Aber das ist kein Problem, weil er das eh nicht macht.

70
00:11:49,000 --> 00:11:56,000
Da gibt es bestimmt eine coole Variante für, wie man das machen kann.

71
00:11:56,000 --> 00:11:58,000
Ja, und ihr seht, es wird kalt.

72
00:11:58,000 --> 00:12:03,000
Deswegen muss jetzt wirklich endlich mal die Heizungssteuerung gebaut werden.

73
00:12:03,000 --> 00:12:08,000
Und ich habe mir jetzt überlegt, wir machen es gleich richtig advanced, richtig advanced.

74
00:12:08,000 --> 00:12:11,000
Home, Assistant, Thermostat.

75
00:12:11,000 --> 00:12:14,000
Wir machen es richtig advanced, Leute.

76
00:12:14,000 --> 00:12:16,000
Wir machen nicht einfach mit Button zum Heizung an- und ausschalten.

77
00:12:16,000 --> 00:12:18,000
Wir machen sowas.

78
00:12:18,000 --> 00:12:19,000
Habt ihr kein Bild?

79
00:12:19,000 --> 00:12:22,000
Okay, Demo, Home Assistant.

80
00:12:22,000 --> 00:12:24,000
Guck mal, ob da was drin ist.

81
00:12:24,000 --> 00:12:25,000
Wir machen es gleich richtig advanced.

82
00:12:25,000 --> 00:12:29,000
Wir machen sowas hier, guck mal.

83
00:12:29,000 --> 00:12:32,000
Wobei das nicht das Richtige ist, was wir machen.

84
00:12:32,000 --> 00:12:33,000
Sowas in der Richtung.

85
00:12:33,000 --> 00:12:38,000
Guck, wir machen sowas hier.

86
00:12:38,000 --> 00:12:40,000
Wobei das das das Fail ist.

87
00:12:40,000 --> 00:12:41,000
Das mache ich nicht so.

88
00:12:41,000 --> 00:12:43,000
Ich mache einfach nur Heating und an- und aus.

89
00:12:43,000 --> 00:12:52,000
Wir machen so ein richtiges Thermostat, wo ich einstellen kann.

90
00:12:52,000 --> 00:12:57,000
Ich bin gespannt, wie man das dem beibringen kann, dass er das automatisch anlegen soll.

91
00:12:57,000 --> 00:13:01,000
Tja, aber kommen wir mal hier zum Chat, mal schnell.

92
00:13:01,000 --> 00:13:03,000
Hey Max, wie ist deine Meinung zu SAP?

93
00:13:03,000 --> 00:13:06,000
Glaubst du, das ist wirklich ein Top-Arbeitgeber oder mehr Scheinheit?

94
00:13:06,000 --> 00:13:09,000
Das kann ich nicht einschätzen bei SAP, aber man darf nicht vergessen,

95
00:13:09,000 --> 00:13:15,000
SAP schafft es seit bestimmt 15 Jahren oder so.

96
00:13:15,000 --> 00:13:20,000
Softwaretechnisch weltweit vorne mitzumischen, also so schlecht können die nicht sein.

97
00:13:20,000 --> 00:13:22,000
Schau dir mal ein simple Thermostat an.

98
00:13:22,000 --> 00:13:26,000
Wobei, großer Laden an sich natürlich auch kein Garant ist.

99
00:13:26,000 --> 00:13:30,000
Amazon hat nur auch nicht den besten Huf und Amazon, da flutscht eigentlich normalerweise alles.

100
00:13:30,000 --> 00:13:31,000
Was soll ich mal angucken?

101
00:13:31,000 --> 00:13:34,000
Home Assistant, simple HA.

102
00:13:34,000 --> 00:13:35,000
Nee, nicht simple.

103
00:13:35,000 --> 00:13:36,000
Was?

104
00:13:36,000 --> 00:13:39,000
Simple Thermostat.

105
00:13:39,000 --> 00:13:42,000
Das da?

106
00:13:42,000 --> 00:13:44,000
Das hier auf GitHub?

107
00:13:44,000 --> 00:13:46,000
ABAP-Stream, sowas werde ich nicht machen.

108
00:13:46,000 --> 00:13:48,000
ABAP-Streamer.

109
00:13:48,000 --> 00:13:53,000
Kommt als nächstes Fortran oder?

110
00:13:53,000 --> 00:13:55,000
Nee, ich weiß, was wir als nächstes machen.

111
00:13:55,000 --> 00:13:59,000
Als nächstes, wir haben letztes, wir haben letzten Weihnachten Kobold gemacht.

112
00:13:59,000 --> 00:14:01,000
Kobold, wir haben letzten Weihnachten Kobold gemacht.

113
00:14:01,000 --> 00:14:04,000
Wir machen dieses Mal Kobold in JavaScript.

114
00:14:04,000 --> 00:14:11,000
Es gibt, es gibt Kobold, habe ich letztes gesehen, es gibt einen Kobold zu JavaScript-Compiler,

115
00:14:11,000 --> 00:14:14,000
dass du Kobold im Browser verwenden kannst.

116
00:14:14,000 --> 00:14:16,000
Nein, das stimmt nicht, nicht Kobold.

117
00:14:16,000 --> 00:14:19,000
Einen Kobold zu JavaScript-Transpiler oder sowas.

118
00:14:19,000 --> 00:14:24,000
Da kannst du quasi Kobold, deine Webseite in Kobold programmieren.

119
00:14:24,000 --> 00:14:27,000
Rust, ja Rust müssen wir echt mal machen.

120
00:14:27,000 --> 00:14:28,000
Ohne Mist.

121
00:14:28,000 --> 00:14:34,000
Ich habe Rust, ich habe Rust ganz am Anfang verwendet, als es noch keine und nicht mal eine stable Version hatte.

122
00:14:34,000 --> 00:14:37,000
Ähnlich, eigentlich lustigerweise, wie bei TypeScript.

123
00:14:37,000 --> 00:14:43,000
Ich habe die meisten Hype-Sachen gemacht, bevor sie Hype waren, dann habe ich sie irgendwie sein lassen.

124
00:14:43,000 --> 00:14:45,000
Und wir machen echt mal wieder Rust.

125
00:14:45,000 --> 00:14:49,000
Ich habe ganz lange nichts mehr in Rust gemacht.

126
00:14:49,000 --> 00:14:53,000
Es hat mich damals aber schon teilweise echt nerven gekostet,

127
00:14:53,000 --> 00:15:01,000
weil Rust hat so eine Syntax, so eine Syntax, die ich wirklich äußerst Big Brain finde.

128
00:15:01,000 --> 00:15:07,000
Rust, muss ich euch mal zeigen, Rust Lifetime Syntax.

129
00:15:07,000 --> 00:15:10,000
Die ist echt...

130
00:15:13,000 --> 00:15:16,000
Gib mir mal ein schönes Beispiel.

131
00:15:18,000 --> 00:15:20,000
Ja, sowas hier zum Beispiel.

132
00:15:20,000 --> 00:15:24,000
Also die Rust, die Syntax ist echt Big Brain.

133
00:15:31,000 --> 00:15:32,000
Guckt euch das...

134
00:15:32,000 --> 00:15:35,000
Also die Rust Syntax ist wirklich Massive Sixhead.

135
00:15:35,000 --> 00:15:37,000
Das hier zum Beispiel, guck.

136
00:15:37,000 --> 00:15:41,000
Sowas hier, das ist echt Next Level Shit.

137
00:15:41,000 --> 00:15:44,000
Noch schlimmer wird es mit Return Types, die dann so...

138
00:15:44,000 --> 00:15:46,000
Genau, sowas hier, sowas meine ich.

139
00:15:46,000 --> 00:15:55,000
Also ich weiß nicht, ob sich die Rust Affinder mit so komischen Dingern dann gefallen getan haben.

140
00:15:55,000 --> 00:15:59,000
Auf der anderen Seite muss man sagen, das was ich bisher von Rust gesehen habe ist,

141
00:15:59,000 --> 00:16:02,000
das ist schon relativ konsistent, muss man sagen.

142
00:16:02,000 --> 00:16:05,000
Also wie gesagt, ich habe das relativ am Anfang verwendet.

143
00:16:05,000 --> 00:16:08,000
Da ist bestimmt ganz viel Neues mittlerweile dabei.

144
00:16:09,000 --> 00:16:12,000
Vieles Alte macht man so gar nicht mehr.

145
00:16:12,000 --> 00:16:17,000
Das ist schon ziemlich konsistent gewesen,

146
00:16:17,000 --> 00:16:20,000
wenn aber auch nicht so eingängig von der Syntax.

147
00:16:23,000 --> 00:16:24,000
Was ist da ein guter Package Manager?

148
00:16:24,000 --> 00:16:29,000
Ja, da sieht man, was man machen kann, wenn man sich was ordentliches überlegt.

149
00:16:29,000 --> 00:16:32,000
Nicht so wie bei C++.

150
00:16:35,000 --> 00:16:37,000
Ja, wie gesagt, mehr kann ich...

151
00:16:37,000 --> 00:16:40,000
Also was ich eben schon gesagt habe, mehr kann ich zuerst am Peer nicht sagen.

152
00:16:40,000 --> 00:16:45,000
Also muss ja schon einen Grund haben, warum die sich so lang vorne halten

153
00:16:45,000 --> 00:16:51,000
und warum ihr Kram immer noch in so vielen Unternehmen exklusiv eingesetzt wird.

154
00:16:51,000 --> 00:16:54,000
Wie es da ist, kann ich dir nicht sagen, keine Ahnung.

155
00:16:54,000 --> 00:16:59,000
In der Regel kann man aber sagen, das Gras ist auf der anderen Seite immer grüner,

156
00:16:59,000 --> 00:17:00,000
wie es so schön heißt.

157
00:17:00,000 --> 00:17:03,000
Also ich kenne das von vielen Leuten bei uns

158
00:17:03,000 --> 00:17:06,000
und mir geht es auch manchmal so, dass denkt man sich so,

159
00:17:06,000 --> 00:17:12,000
ah, bei uns läuft das kacke und bei XY läuft das bestimmt viel besser.

160
00:17:12,000 --> 00:17:15,000
Aber alles, was ich dann immer von Leuten höre, die woanders arbeiten,

161
00:17:15,000 --> 00:17:17,000
ist, dass es da auch nicht besser läuft.

162
00:17:17,000 --> 00:17:19,000
Also das Gras ist auf der anderen Seite immer grüner,

163
00:17:19,000 --> 00:17:21,000
denkst du immer toller, wie es ist?

164
00:17:21,000 --> 00:17:24,000
Und wenn wir Services den ganzen Tag verwenden, wenn wir YouTube verwenden,

165
00:17:24,000 --> 00:17:27,000
wenn wir Twitch oder Google oder sonst was verwenden,

166
00:17:27,000 --> 00:17:30,000
ihr könnt davon ausgehen, dass das im Backend, im Hintergrund,

167
00:17:30,000 --> 00:17:33,000
was da alles läuft, auch nicht alles rosig ist.

168
00:17:33,000 --> 00:17:36,000
Da kriegen wir bloß nichts von mit.

169
00:17:36,000 --> 00:17:40,000
Deswegen darf man auch nicht den Fehler machen zu denken,

170
00:17:40,000 --> 00:17:42,000
die machen das alle besser.

171
00:17:42,000 --> 00:17:44,000
Die machen das alle nicht besser.

172
00:17:47,000 --> 00:17:49,000
Du weißt nur nicht, was sie schlecht machen.

173
00:17:49,000 --> 00:17:53,000
Deswegen denkst du, ja, ja, das passt schon, das kann nicht passieren.

174
00:17:53,000 --> 00:17:58,000
Wenn man dann aber teilweise sieht, wenn dann mal irgendwelche Sicherheitslücken rauskommen

175
00:17:58,000 --> 00:18:03,000
und man dann sieht, dass irgendwelche Hersteller eins, zwei, drei, vier, fünf, sechs

176
00:18:03,000 --> 00:18:05,000
als Datenbank Passport haben und sowas in der Richtung,

177
00:18:05,000 --> 00:18:08,000
da sieht man wieder, das ist im Prinzip stimmt, was ich sage,

178
00:18:08,000 --> 00:18:12,000
dass die auch alle nur mit Wasser kochen im Endeffekt.

179
00:18:14,000 --> 00:18:16,000
Man weiß es bloß normalerweise nicht.

180
00:18:16,000 --> 00:18:19,000
Und natürlich sagen die immer in ihrem, also alle in ihrem Marketingmaterial

181
00:18:19,000 --> 00:18:23,000
und wenn sie dann irgendwie Werbung machen, so ja, bei uns Sicherheit,

182
00:18:23,000 --> 00:18:26,000
das höchste Ziel und bla und hier und da.

183
00:18:26,000 --> 00:18:29,000
Aber im Endeffekt ist das alles der gleiche Scheiß.

184
00:18:32,000 --> 00:18:33,000
So.

185
00:18:34,000 --> 00:18:36,000
Dein Arm ist nicht explodiert, das soll doch am 10.9.

186
00:18:36,000 --> 00:18:39,000
Warum sollte mein Arm am 10.9. explodieren?

187
00:18:39,000 --> 00:18:44,000
Ach du, ach du, du meinst, weil, äh, Dingsda, der, der, ne, ne, ne,

188
00:18:44,000 --> 00:18:49,000
nicht Xavier, nein, du, Attila Hildmann, das bei sich auf Telegram geschrieben hat.

189
00:18:49,000 --> 00:18:51,000
Ja gut, das ist klar, ja.

190
00:18:51,000 --> 00:18:54,000
Wenn der das schreibt, dann muss das ja eigentlich auch,

191
00:18:54,000 --> 00:18:57,000
ach, der Wendler war, ach, der Wendler war es, ach ja,

192
00:18:57,000 --> 00:18:59,000
hab ich jetzt durcheinander gebracht.

193
00:18:59,000 --> 00:19:02,000
Das, sorry Leute, das hab ich, das hab ich,

194
00:19:02,000 --> 00:19:06,000
wie kann man, wie kann man das auch nur durcheinander bringen, ja.

195
00:19:06,000 --> 00:19:10,000
Wenn der das schreibt, dann ist natürlich schon ganz, ganz bedenklich,

196
00:19:10,000 --> 00:19:14,000
dass das nicht, wenn das nicht eingetreten ist, kann eigentlich gar nicht sein.

197
00:19:14,000 --> 00:19:18,000
Ich mein, ist schon jemals, ist schon jemals,

198
00:19:18,000 --> 00:19:21,000
was, was jemand von den Erzählern nicht eingetreten,

199
00:19:21,000 --> 00:19:23,000
kann eigentlich gar nicht sein.

200
00:19:29,000 --> 00:19:34,000
Also, äh, wenn dein, ist nix, guter Witz,

201
00:19:34,000 --> 00:19:36,000
von dem Typ hab ich nix mal gelesen bis jetzt.

202
00:19:36,000 --> 00:19:43,000
So, was Meinung zu Lasten heften, ja, BWL, Stonks, Oldschool Software, Projekte Style,

203
00:19:43,000 --> 00:19:49,000
hab ich nix zu sagen, findest du das, Meinung zu Lasten heften, was soll ich sagen?

204
00:19:49,000 --> 00:19:52,000
Das ist wie, wenn, wie, wenn, wenn mich einer fragt,

205
00:19:52,000 --> 00:19:56,000
Meinung zu Wasser heen, so, kommt dann Wasser raus.

206
00:19:56,000 --> 00:20:00,000
Und weil ich hab wahrscheinlich zu Wasser heen noch mehr Meinung als zu Lasten heften.

207
00:20:00,000 --> 00:20:06,000
MinAce, oder MineA, ja, MinAce, doch richtig.

208
00:20:06,000 --> 00:20:10,000
141, oh, das ein, ein Oldschool Call of Duty Fan,

209
00:20:10,000 --> 00:20:14,000
bilde ich mir ein aus diesem Username rauszulesen.

210
00:20:14,000 --> 00:20:17,000
Kann aber auch Zufall sein, danke schön für den Prime Sub.

211
00:20:24,000 --> 00:20:29,000
Ach ja, Security By Design, ich muss euch was Lustiges von der Arbeit erzählen gleich, wartet mal.

212
00:20:33,000 --> 00:20:36,000
Vielleicht könnte das für euch auch relevant sein, falls ich es noch nicht mitgekriegt hab,

213
00:20:36,000 --> 00:20:40,000
weil morgen, morgen, morgen, wisst ihr was morgen?

214
00:20:40,000 --> 00:20:45,000
Chat, Frage an die Big Brain IT Spezialisten hier.

215
00:20:45,000 --> 00:20:49,000
Was ist morgen 16.01?

216
00:20:49,000 --> 00:20:56,000
Was relativ wichtiges für das weltweite Internet.

217
00:20:56,000 --> 00:20:58,000
Feierabend, nein.

218
00:20:58,000 --> 00:21:01,000
Was ist morgen 16.01?

219
00:21:01,000 --> 00:21:03,000
Wenn ihr es nicht wisst, habt ihr es vielleicht noch nicht mitgekriegt

220
00:21:03,000 --> 00:21:06,000
und vielleicht solltet ihr es besser mitkriegen.

221
00:21:06,000 --> 00:21:10,000
ByteStrike, das ist schon mal fast, fast richtig zu 99%.

222
00:21:10,000 --> 00:21:12,000
Let's Encrypt, richtig.

223
00:21:12,000 --> 00:21:14,000
Richtig.

224
00:21:14,000 --> 00:21:15,000
Der Chat weiß es.

225
00:21:15,000 --> 00:21:17,000
Da muss ich nämlich gleich was zu erzählen.

226
00:21:17,000 --> 00:21:19,000
Also ich guck noch mal kurz den Chat durch.

227
00:21:19,000 --> 00:21:23,000
Ach ja, Simple Thermostat sollten wir anschauen.

228
00:21:23,000 --> 00:21:26,000
Boah, meine Augen, Alter.

229
00:21:26,000 --> 00:21:32,000
Ah, jetzt.

230
00:21:32,000 --> 00:21:36,000
Was ist an dem besser?

231
00:21:36,000 --> 00:21:43,000
Was ist an dem Thermostat besser als an dem?

232
00:21:43,000 --> 00:21:44,000
Ja, gut, das gedreht.

233
00:21:44,000 --> 00:21:46,000
Das hier ist kacke zu bedienen per Touch.

234
00:21:46,000 --> 00:21:53,000
Das stimmt schon irgendwo.

235
00:21:53,000 --> 00:21:58,000
Können wir nachher mal ausprobieren, wenn ich das Thermostat da drin hab.

236
00:21:58,000 --> 00:22:00,000
Machen wir dann gleich.

237
00:22:00,000 --> 00:22:03,000
So, noch mal kurz den Chat durchgehen.

238
00:22:03,000 --> 00:22:06,000
Ihh.

239
00:22:06,000 --> 00:22:10,000
Ihh.

240
00:22:10,000 --> 00:22:14,000
Wenn ich Dialog lese, ich hab was richtig Cooles auf dem

241
00:22:14,000 --> 00:22:18,000
C Sharp Subreddit gefunden.

242
00:22:18,000 --> 00:22:20,000
Und zwar, oh, Alter.

243
00:22:20,000 --> 00:22:23,000
Meine Augen, ey.

244
00:22:23,000 --> 00:22:24,000
Button.

245
00:22:24,000 --> 00:22:26,000
Ich weiß gar nicht, wo es ist.

246
00:22:26,000 --> 00:22:30,000
Warte mal, ich guck mal, wenn ich das jetzt nicht finde innerhalb der ersten.

247
00:22:30,000 --> 00:22:32,000
Warum ist Reddits, warum ist das so sackig?

248
00:22:32,000 --> 00:22:36,000
Warum kann das nicht einfach mal die ordentliche Ansicht haben?

249
00:22:36,000 --> 00:22:37,000
Button, Button, Button, Button.

250
00:22:37,000 --> 00:22:38,000
Nope.

251
00:22:38,000 --> 00:22:39,000
Endless Scroll.

252
00:22:39,000 --> 00:22:40,000
Shit.

253
00:22:40,000 --> 00:22:41,000
Button.

254
00:22:41,000 --> 00:22:48,000
Hier, guck mal.

255
00:22:48,000 --> 00:22:50,000
Ich zeig's dir einfach auf GitHub.

256
00:22:50,000 --> 00:22:52,000
Ihh.

257
00:22:52,000 --> 00:22:57,000
Es hat einer, Windows Only, aber Windows Only.

258
00:22:57,000 --> 00:23:00,000
Es hat einer eine Library programmiert, wo man.

259
00:23:00,000 --> 00:23:02,000
Super, jetzt hat er nicht mal ein Bild.

260
00:23:02,000 --> 00:23:04,000
The fuck.

261
00:23:04,000 --> 00:23:08,000
Wo man in der Windows Konsole Buttons erzeugen kann, die man klicken kann.

262
00:23:08,000 --> 00:23:12,000
Das ist, das ist, das ist irgendein, das ist irgendein MonkaS Windows Shit.

263
00:23:12,000 --> 00:23:13,000
Guckt euch das mal an.

264
00:23:13,000 --> 00:23:15,000
Terminal aufmachen.

265
00:23:15,000 --> 00:23:17,000
Guck mal, Windows Terminal.

266
00:23:17,000 --> 00:23:28,000
Windows Terminal mit Buttons zum Anklicken.

267
00:23:28,000 --> 00:23:33,000
Es ist Windows Only, ich hab keine Ahnung, wie es funktioniert.

268
00:23:33,000 --> 00:23:37,000
Das ist bestimmt Legacy NT 3.1 Zeug, ja kann sein.

269
00:23:37,000 --> 00:23:41,000
Aber ich find's irgendwie cool.

270
00:23:41,000 --> 00:23:50,000
Ich werd wahrscheinlich aber sonst keiner benutzen.

271
00:23:50,000 --> 00:23:56,000
Amazing111, Dankeschön ins Sub.

272
00:23:56,000 --> 00:24:01,000
Warum sollte man sich das antun, falls sich das auf Rust bezogen hat?

273
00:24:01,000 --> 00:24:07,000
Weil Rust ein ziemlich cooles Konzept hat, als Programmiersprache.

274
00:24:07,000 --> 00:24:12,000
Rust hat nämlich keinen Runtime-Overhead für Sicherheitschecks,

275
00:24:12,000 --> 00:24:16,000
aber hat einen ziemlich cleveren Compiler,

276
00:24:16,000 --> 00:24:22,000
der zu Compile-Zeit schon, sag mal, 99% der üblichen Fehler,

277
00:24:22,000 --> 00:24:24,000
die man sich so einfängt, abfängt.

278
00:24:24,000 --> 00:24:29,000
Zum Beispiel, wenn du eine Variable anlegst und die out of scope geht

279
00:24:29,000 --> 00:24:32,000
und du danach drauf zugreifst und solche Sachen.

280
00:24:32,000 --> 00:24:34,000
Das lässt Rust gar nicht erst kompilieren.

281
00:24:34,000 --> 00:24:38,000
Das ist abfuck hoch 10, weil du es nicht gewöhnt bist,

282
00:24:38,000 --> 00:24:41,000
dass der Compiler dich wegen jedem Scheiß anmeckert.

283
00:24:41,000 --> 00:24:43,000
Aber in der Regel kann man sagen,

284
00:24:43,000 --> 00:24:46,000
also das hab ich damals auch als ich ein bisschen Rust programmiert hab gemerkt,

285
00:24:46,000 --> 00:24:50,000
in der Regel kann man mehr als bei jeder anderen Programmiersprache sagen,

286
00:24:50,000 --> 00:24:54,000
dass wenn es in Rust kompiliert, dass es funktioniert.

287
00:24:54,000 --> 00:24:57,000
Das kann dich natürlich nicht davor schützen,

288
00:24:57,000 --> 00:25:00,000
dass du selbst Logikfehler gemacht hast, das ist klar.

289
00:25:00,000 --> 00:25:02,000
Das kann ja Rust nicht wissen.

290
00:25:02,000 --> 00:25:08,000
Aber unabhängig von deinen Logikfehlern funktioniert das.

291
00:25:08,000 --> 00:25:11,000
Also es macht exakt das, was da steht.

292
00:25:11,000 --> 00:25:15,000
Und das Ganze ohne irgendwelche runtime checks.

293
00:25:15,000 --> 00:25:18,000
Dementsprechend ist es quasi so schnell wie C,

294
00:25:18,000 --> 00:25:20,000
was es auch in Benchmarks wirklich ist.

295
00:25:20,000 --> 00:25:22,000
Das ist nicht nur Gelaber wie bei anderen Sprachen,

296
00:25:22,000 --> 00:25:25,000
das ist wirklich super Rust.

297
00:25:25,000 --> 00:25:30,000
Und ist aber nicht anfällig für die Probleme, die du teilweise mit C hast.

298
00:25:30,000 --> 00:25:36,000
Dafür hast du eine Syntax, die wirklich nur für 150 IQ plus geeignet ist.

299
00:25:42,000 --> 00:25:47,000
Memory Leaks in Rust produzieren sind sicherlich möglich.

300
00:25:47,000 --> 00:25:51,000
Du kannst bestimmt Sachen anlegen und irgendwie trickreich.

301
00:25:51,000 --> 00:25:55,000
Du kannst eine Liste machen und immer nur Sachen reinschreiben

302
00:25:55,000 --> 00:25:57,000
und nie wieder was löschen.

303
00:25:57,000 --> 00:26:00,000
Ja klar, das kannst du fabrizieren.

304
00:26:00,000 --> 00:26:04,000
Das ist aber kein Fehler in dem Sinn.

305
00:26:09,000 --> 00:26:12,000
So, gucken wir mal kurz weiter.

306
00:26:12,000 --> 00:26:15,000
Vielleicht werden das noch emerged noch.

307
00:26:15,000 --> 00:26:17,000
Das kann doch richtig sein.

308
00:26:23,000 --> 00:26:27,000
Hat noch. Danke schön für den ή.

309
00:26:27,000 --> 00:26:41,000
Warum ist das Deleted? Kann man das anklicken, ohne dass man...

310
00:26:41,000 --> 00:26:47,000
Was kommt denn da? Ich traue mich das jetzt an.

311
00:26:47,000 --> 00:26:50,000
Magst du... Das ist auch noch so was Belangloses, Alter.

312
00:26:50,000 --> 00:27:01,000
Das ist auch so ein Jep-Cock-Message.

313
00:27:01,000 --> 00:27:09,000
Das ist schön zu hören, dass es auch noch andere so sehen.

314
00:27:09,000 --> 00:27:12,000
Jaja, stimmt, stimmt, sollte auch sein.

315
00:27:12,000 --> 00:27:15,000
Man macht so ein bisschen was in Go, können wir tatsächlich auch machen.

316
00:27:15,000 --> 00:27:19,000
Ich hasse Go nicht, das stimmt überhaupt nicht.

317
00:27:19,000 --> 00:27:25,000
Ich bin nicht der riesen Fan von einigen Sonntagsentscheidungen und Sprachentscheidungen,

318
00:27:25,000 --> 00:27:31,000
die Go Designer getroffen haben, aber ich finde Go schon in Ordnung.

319
00:27:31,000 --> 00:27:34,000
Go ist jetzt vielleicht nicht meine Lieblingssprache,

320
00:27:34,000 --> 00:27:37,000
aber wenn ich mich entscheiden müsste, zwischen was in Go oder in C++ zu programmieren,

321
00:27:37,000 --> 00:27:40,000
dann wisst ihr genau, was ich nehmen würde.

322
00:27:40,000 --> 00:27:51,000
C-Sharp. Nee, dann würde ich 1.0 in Go nehmen.

323
00:27:51,000 --> 00:27:55,000
Aber nicht wieder die Windows Defender auf Linux Story.

324
00:27:55,000 --> 00:27:58,000
Wenn doch, was müsste man dann schreiben?

325
00:27:58,000 --> 00:28:02,000
Chat, ihr wisst genau, Recycle Story.

326
00:28:02,000 --> 00:28:05,000
Da muss der Chain-Lore erstmal da sein für Feierabend.

327
00:28:05,000 --> 00:28:08,000
Genau, jetzt sind wir beim eigentlichen Thema.

328
00:28:08,000 --> 00:28:10,000
Jetzt Encrypt. Morgen.

329
00:28:10,000 --> 00:28:13,000
Ich glaube, Heise hatte da einen ganz guten Artikel zu.

330
00:28:13,000 --> 00:28:16,000
Encrypt. Die ist ja schon wieder weg.

331
00:28:16,000 --> 00:28:22,000
News Tigger. Wo ist der News Tigger?

332
00:28:22,000 --> 00:28:25,000
Was ist mit dem Führerschein?

333
00:28:25,000 --> 00:28:27,000
Digital. Moment, das muss ich mir jetzt mal angucken.

334
00:28:27,000 --> 00:28:30,000
Das habe ich natürlich gar nicht gelesen.

335
00:28:30,000 --> 00:28:34,000
Ja, das da.

336
00:28:34,000 --> 00:28:38,000
Also, morgen.

337
00:28:38,000 --> 00:28:40,000
Der Rüpel, Dankeschön für eine 18 Monate Hyper-Subscription.

338
00:28:40,000 --> 00:28:44,000
Morgen um 30. September um 16.01.

339
00:28:44,000 --> 00:28:46,000
Wenn ich das richtige Erinnerung habe.

340
00:28:46,000 --> 00:28:50,000
Also 14.14.GMT.

341
00:28:50,000 --> 00:28:52,000
16.

342
00:28:52,000 --> 00:28:55,000
Heißt Heise irgendwie auch mal die Uhrzeit?

343
00:28:55,000 --> 00:28:57,000
Äh, nein.

344
00:28:57,000 --> 00:28:59,000
Ja, genau.

345
00:28:59,000 --> 00:29:04,000
14.01.GMT. Das ist glaube ich 16.01. bei uns.

346
00:29:04,000 --> 00:29:10,000
Läuft das RU-Zertifikat von Netz Encrypt aus?

347
00:29:10,000 --> 00:29:13,000
Das sollte man sich vielleicht mal überlegen,

348
00:29:13,000 --> 00:29:17,000
ob das Auswirkungen auf einen hat.

349
00:29:17,000 --> 00:29:22,000
Diesmal ist es aber witzigerweise umgedreht.

350
00:29:22,000 --> 00:29:25,000
Es sind die Server-Anbieter,

351
00:29:25,000 --> 00:29:28,000
die Service-Anbieter gar nicht so sehr betroffen,

352
00:29:28,000 --> 00:29:31,000
sondern die Clients.

353
00:29:31,000 --> 00:29:34,000
Also, ich muss das jetzt mal ein bisschen erklären.

354
00:29:34,000 --> 00:29:37,000
Also, Netz Encrypt ist eine Zertifizierungsstelle,

355
00:29:37,000 --> 00:29:40,000
wo man sich kostenlos Zertifikate ausstellen kann.

356
00:29:40,000 --> 00:29:42,000
Zertifikate sind sowas, was man hier braucht,

357
00:29:42,000 --> 00:29:45,000
dass die Seite über HTTPS ordentlich funktioniert,

358
00:29:45,000 --> 00:29:48,000
dass man hier so ein Häkchen kriegt.

359
00:29:48,000 --> 00:29:50,000
Man braucht Zertifikate auch noch für vieles andere,

360
00:29:50,000 --> 00:29:53,000
aber das ist wohl das meistverwendete.

361
00:29:53,000 --> 00:29:55,000
Früher war das so, man muss Geld ausgeben,

362
00:29:55,000 --> 00:29:58,000
man musste zu Komodo gehen.

363
00:29:58,000 --> 00:29:59,000
Ich sage jetzt absichtlich die,

364
00:29:59,000 --> 00:30:01,000
die es auch schon richtig verschissen haben in der Vergangenheit.

365
00:30:01,000 --> 00:30:04,000
Zu Komodo oder was ist noch in Symantec

366
00:30:04,000 --> 00:30:08,000
oder was ist noch alles an Geo Trusts,

367
00:30:08,000 --> 00:30:13,000
was ist noch alles gibt an Zertifizierungsstellen.

368
00:30:13,000 --> 00:30:14,000
Musste da hingehen,

369
00:30:14,000 --> 00:30:16,000
musste ein Zertifizierungsprozess durchlaufen

370
00:30:16,000 --> 00:30:18,000
und hat eine Zertifikate gekriegt.

371
00:30:18,000 --> 00:30:21,000
Das ist glücklicherweise mittlerweile kostenlos möglich

372
00:30:21,000 --> 00:30:23,000
mit Netz Encrypt.

373
00:30:23,000 --> 00:30:25,000
Bei Netz Encrypt musst du nur noch belegen,

374
00:30:25,000 --> 00:30:26,000
dass dir die Domain gehört.

375
00:30:26,000 --> 00:30:28,000
Das geht über ein automatisches Verfahren.

376
00:30:28,000 --> 00:30:30,000
Und dann kriegst du kostenlos Zertifikate.

377
00:30:30,000 --> 00:30:33,000
Zertifikate, und das ist das Wichtige,

378
00:30:33,000 --> 00:30:35,000
die von jedem Browser trusted sind.

379
00:30:35,000 --> 00:30:38,000
Also jeder Browser vertraut Netz Encrypt.

380
00:30:38,000 --> 00:30:41,000
Dementsprechend, wenn ihr Netz Encrypt Zertifikat habt,

381
00:30:41,000 --> 00:30:43,000
kriegt ihr auch im Browser hier das Häkchen oben

382
00:30:43,000 --> 00:30:44,000
oder das Schloss oben und sagt,

383
00:30:44,000 --> 00:30:46,000
euer Connection ist secure.

384
00:30:46,000 --> 00:30:49,000
Wenn ihr zum Beispiel auf meine Seite hier geht,

385
00:30:49,000 --> 00:30:53,000
auf Dark Theme und guckt da hin, dann werdet ihr sehen,

386
00:30:53,000 --> 00:30:56,000
Aha, Zertifikat Connection ist secure.

387
00:30:56,000 --> 00:30:59,000
Valid, und zwar mein Netz Encrypt Zertifikat

388
00:30:59,000 --> 00:31:01,000
ist valid vom...

389
00:31:01,000 --> 00:31:02,000
Ah nee, ist Cloudflare.

390
00:31:02,000 --> 00:31:03,000
Fuck, ich hab nix gesagt.

391
00:31:03,000 --> 00:31:05,000
Das ist ja hinter Cloudflare.

392
00:31:05,000 --> 00:31:07,000
Aber da würde normalerweise Netz Encrypt stehen,

393
00:31:07,000 --> 00:31:09,000
wenn ich es über Netz Encrypt machen würde.

394
00:31:09,000 --> 00:31:12,000
So, es lohnt, die kann ich gleich mal zu sagen,

395
00:31:12,000 --> 00:31:14,000
aber ich muss das jetzt erstmal fertig machen.

396
00:31:14,000 --> 00:31:16,000
So, und was morgen passiert ist,

397
00:31:16,000 --> 00:31:21,000
das alte Root Zertifikat von Netz Encrypt läuft ab.

398
00:31:21,000 --> 00:31:25,000
Das ist für Serverbetreiber überhaupt nicht schlimm,

399
00:31:25,000 --> 00:31:28,000
weil euer Zertifikat bleibt weiterhin gültig.

400
00:31:28,000 --> 00:31:31,000
Die haben Big Brain Move gemacht bei Netz Encrypt.

401
00:31:31,000 --> 00:31:32,000
Ich glaube, hier sieht man es auch irgendwie.

402
00:31:32,000 --> 00:31:34,000
Die haben ein bisschen mehr Zertifikat.

403
00:31:34,000 --> 00:31:36,000
Die haben ein bisschen mehr Zertifikat.

404
00:31:36,000 --> 00:31:38,000
Die haben ein bisschen mehr Zertifikat.

405
00:31:38,000 --> 00:31:43,000
Ich habe es persönlich selbst nicht hundertprozentig verstanden,

406
00:31:43,000 --> 00:31:46,000
aber die haben es irgendwie so gemacht,

407
00:31:46,000 --> 00:31:48,000
die haben ihr neues Root Zertifikat

408
00:31:48,000 --> 00:31:51,000
irgendwie abgeleitet vom alten Root Zertifikat,

409
00:31:51,000 --> 00:31:53,000
als es noch gültig war.

410
00:31:53,000 --> 00:31:56,000
Und die neuen Intermedia Zertifikate,

411
00:31:56,000 --> 00:32:00,000
wogegen dann quasi auch die Zertifikat für euch ausgestellt werden,

412
00:32:00,000 --> 00:32:02,000
die funktionieren weiterhin.

413
00:32:02,000 --> 00:32:04,000
Also als Serverbetreiber ist das kein Problem.

414
00:32:04,000 --> 00:32:06,000
Ich hoffe, ich habe jetzt kein Mist erzählt.

415
00:32:06,000 --> 00:32:08,000
Es ist nicht so einfach, dieses Thema.

416
00:32:08,000 --> 00:32:09,000
Die bleiben weiterhin gültig.

417
00:32:09,000 --> 00:32:11,000
Das ist überhaupt nicht das Problem.

418
00:32:11,000 --> 00:32:12,000
Das funktioniert.

419
00:32:12,000 --> 00:32:14,000
Also das ist hier wirklich Big Brain, was die gemacht haben.

420
00:32:14,000 --> 00:32:18,000
Die haben auch hier ein sonderes Workaround für Android gebaut.

421
00:32:18,000 --> 00:32:19,000
Also das ist wirklich nicht schlecht.

422
00:32:19,000 --> 00:32:23,000
Also das alte, das hier, das Root Zertifikat.

423
00:32:23,000 --> 00:32:25,000
Warum hinter Cloudflare Angst vor DDoS beim Preischamp?

424
00:32:25,000 --> 00:32:26,000
Was heißt das?

425
00:32:26,000 --> 00:32:27,000
Ich habe Angst vor DDoS.

426
00:32:27,000 --> 00:32:29,000
Das Erste, was passiert ist,

427
00:32:29,000 --> 00:32:32,000
dass irgendwelche Leute den Preischamp GDDoS haben.

428
00:32:32,000 --> 00:32:35,000
Es ist nicht so, dass ich mir das einrede oder so.

429
00:32:35,000 --> 00:32:37,000
Das ist das Erste, das ist das Erste,

430
00:32:37,000 --> 00:32:40,000
was noch während dem Programmieren des Preischamps passiert ist.

431
00:32:46,000 --> 00:32:48,000
Also.

432
00:32:48,000 --> 00:32:49,000
So.

433
00:32:49,000 --> 00:32:53,000
Das hier ist das alte Root Zertifikat, was ausläuft.

434
00:32:53,000 --> 00:32:56,000
Eure Zertifikate gehen im Endeffekt hier gegen die Chain.

435
00:32:56,000 --> 00:32:57,000
Das ist kein Ding.

436
00:32:57,000 --> 00:32:58,000
So.

437
00:32:58,000 --> 00:33:00,000
Also das für Serverbetreiber kein Problem.

438
00:33:00,000 --> 00:33:02,000
Aber so wie hier es steht,

439
00:33:02,000 --> 00:33:04,000
alte Clients können die Verbindung verlieren.

440
00:33:04,000 --> 00:33:06,000
Das heißt.

441
00:33:06,000 --> 00:33:10,000
Wenn ihr z.B.

442
00:33:10,000 --> 00:33:14,000
Euren Chrome 5 Jahre nicht geupdatet habt und auf einen Web Server zugreift

443
00:33:14,000 --> 00:33:17,000
versus mit dem letzten Crypt Zertifikat,

444
00:33:17,000 --> 00:33:19,000
dann ist es auf einmal nicht mehr gültig.

445
00:33:19,000 --> 00:33:20,000
Das ist aber nicht das Problem.

446
00:33:20,000 --> 00:33:22,000
Keiner hat einen 3, 4, 5 Jahre alt.

447
00:33:22,000 --> 00:33:23,000
Was? Ich fand das da reingekommen.

448
00:33:23,000 --> 00:33:24,000
Ich sage jetzt einfach irgendwas.

449
00:33:24,000 --> 00:33:25,000
Alte Chrome.

450
00:33:25,000 --> 00:33:27,000
Das ist nicht das Problem.

451
00:33:27,000 --> 00:33:29,000
Aber und jetzt kommt das eigentliche Problem,

452
00:33:29,000 --> 00:33:32,000
weshalb ihr vielleicht, wenn ihr so IT-mäßig irgendwo arbeitet,

453
00:33:32,000 --> 00:33:34,000
auch mal überlegen solltet,

454
00:33:34,000 --> 00:33:39,000
ob das nicht auch ein Problem ist.

455
00:33:39,000 --> 00:33:41,000
As Serious Max, du musst mal wirklich gucken,

456
00:33:41,000 --> 00:33:43,000
ob der Issuer das ist.

457
00:33:43,000 --> 00:33:45,000
Das ist eigentlich nicht schlimm.

458
00:33:45,000 --> 00:33:49,000
Das kann sein, dass das nur angezeigt wird bei dir,

459
00:33:49,000 --> 00:33:54,000
weil das allerletzte Client in der Trust Chain

460
00:33:54,000 --> 00:33:56,000
noch dieses DST-Root ist.

461
00:33:56,000 --> 00:34:00,000
Ich würde wetten, du nimmst schon das Aktuelle mit dem Zertifikat,

462
00:34:00,000 --> 00:34:02,000
weil die stellen, glaube ich, gar keine mehr aus,

463
00:34:02,000 --> 00:34:04,000
wo das hier nicht drin ist.

464
00:34:04,000 --> 00:34:07,000
So, aber jetzt kommt der eigentliche Knackpunkt,

465
00:34:07,000 --> 00:34:09,000
warum es Probleme geben könnte

466
00:34:09,000 --> 00:34:11,000
und sich jeder mal Gedanken machen sollte.

467
00:34:11,000 --> 00:34:13,000
Es geht in dem Fall nicht um Server-Anbieter,

468
00:34:13,000 --> 00:34:15,000
wo die Zertifikate nicht mehr gültig sind,

469
00:34:15,000 --> 00:34:17,000
sondern es geht um Clients.

470
00:34:17,000 --> 00:34:19,000
Und was können Clients sein?

471
00:34:19,000 --> 00:34:22,000
Naja, zum Beispiel, wenn ihr den Linux-Server habt,

472
00:34:22,000 --> 00:34:26,000
mit CentOS, zum Beispiel CentOS 7.

473
00:34:26,000 --> 00:34:35,000
CentOS 7 ist das letzte so richtige CentOS,

474
00:34:35,000 --> 00:34:40,000
was es geben wird in dieser Linie.

475
00:34:40,000 --> 00:34:44,000
Und CentOS 7 ist ziemlich alt.

476
00:34:44,000 --> 00:34:47,000
Und wenn ihr das nicht auf dem aktuellen Stand habt

477
00:34:47,000 --> 00:34:50,000
und dort auf irgendwelche Dienste zugreift,

478
00:34:50,000 --> 00:34:52,000
dann wird das am Morgen nicht mal richtig funktionieren.

479
00:34:52,000 --> 00:34:55,000
So, und jetzt komme ich zu der Story von mir auf der Arbeit.

480
00:34:55,000 --> 00:34:58,000
Wir haben nämlich auch CentOS 7.

481
00:34:58,000 --> 00:35:00,000
So, und wir greifen zum Beispiel auf jede Menge

482
00:35:00,000 --> 00:35:03,000
Let's Encrypt-Zertifikate zu.

483
00:35:03,000 --> 00:35:07,000
Unsere ganzen Cloud-Services haben Let's Encrypt-Zertifikate.

484
00:35:07,000 --> 00:35:10,000
Und wir dachten eigentlich die ganze Zeit...

485
00:35:10,000 --> 00:35:11,000
Also was heißt wir dachten?

486
00:35:11,000 --> 00:35:13,000
Wir dachten eigentlich gar nichts.

487
00:35:13,000 --> 00:35:16,000
Es hat im Prinzip gar keiner mitbekommen.

488
00:35:16,000 --> 00:35:18,000
Ich habe es am Dienstag zufälligerweise mitbekommen

489
00:35:18,000 --> 00:35:20,000
und noch ein Kollege hat es mitbekommen.

490
00:35:20,000 --> 00:35:23,000
Ich bin draufgekommen, weil ich einen Heiser-Artikel gelesen habe.

491
00:35:23,000 --> 00:35:30,000
Und dann habe ich in einer Wartungsarbeitenrunde gehört,

492
00:35:30,000 --> 00:35:31,000
dass da was ist.

493
00:35:31,000 --> 00:35:34,000
Und da habe ich mich wieder dran erinnert.

494
00:35:34,000 --> 00:35:36,000
Da ist doch was.

495
00:35:36,000 --> 00:35:40,000
So, und jetzt kommt der Hit bei CentOS 7.

496
00:35:40,000 --> 00:35:46,000
Also, die haben schon lange vor, fragt mich nicht,

497
00:35:46,000 --> 00:35:48,000
zwei Jahren oder so,

498
00:35:48,000 --> 00:35:51,000
haben die das neue Zertifikat verteilt von Let's Encrypt

499
00:35:51,000 --> 00:35:53,000
in den Trust Store.

500
00:35:53,000 --> 00:35:55,000
Also ich zeige euch mal, wie das aussieht.

501
00:35:55,000 --> 00:35:58,000
Jede Linux-Distribution hat hier sowas.

502
00:35:58,000 --> 00:36:00,000
Ich hoffe unter Arch Linux ist es auch da.

503
00:36:00,000 --> 00:36:01,000
Ich bin mir gar nicht so sicher.

504
00:36:01,000 --> 00:36:05,000
Hier, da, guckt.

505
00:36:05,000 --> 00:36:07,000
Hier, das ist quasi der Trust Store.

506
00:36:07,000 --> 00:36:10,000
Das bedeutet, dort liegen die Zertifikate drin

507
00:36:10,000 --> 00:36:15,000
von den Stellen, die weitere Zertifikate ausstellen.

508
00:36:15,000 --> 00:36:17,000
Also sprich, alle Zertifikate,

509
00:36:17,000 --> 00:36:19,000
die von einem dieser Stellen hier ausgestellt wurden,

510
00:36:19,000 --> 00:36:21,000
vertraut euer System.

511
00:36:21,000 --> 00:36:23,000
So, da sind dann zum Beispiel auch so Sachen drin,

512
00:36:23,000 --> 00:36:26,000
wie CREP X3.

513
00:36:26,000 --> 00:36:29,000
So, das ist das alte Root-Zertifikat von Let's Encrypt.

514
00:36:29,000 --> 00:36:31,000
Und das neue, boah, wie ist das?

515
00:36:31,000 --> 00:36:39,000
IS, ISGR, nee, ISRG, ist da auch drinne.

516
00:36:39,000 --> 00:36:43,000
Also, in meinem lokalen Trust Store ist alles drin.

517
00:36:43,000 --> 00:36:45,000
Das funktioniert wunderbar, ist kein Problem.

518
00:36:45,000 --> 00:36:49,000
Aber genau das haben die unter CentOS 7 auch gemacht,

519
00:36:49,000 --> 00:36:51,000
mit einem Patch ausgeliefert.

520
00:36:51,000 --> 00:36:53,000
Es gibt plus ein Problem.

521
00:36:53,000 --> 00:36:55,000
Und das versuche ich euch jetzt mal zu zeigen.

522
00:36:55,000 --> 00:36:59,000
Also sprich, wenn ihr Server administriert mit CentOS 7

523
00:36:59,000 --> 00:37:03,000
und nicht innerhalb der letzten paar Tage Patches eingespielt habt,

524
00:37:03,000 --> 00:37:05,000
dann habt ihr wahrscheinlich am Morgen ein Problem,

525
00:37:05,000 --> 00:37:07,000
wenn ihr auf Let's Encrypt-Services zugreift.

526
00:37:07,000 --> 00:37:09,000
Das wird dann einfach nicht mehr gescheit funktionieren.

527
00:37:09,000 --> 00:37:13,000
Denn die haben zwar das Zertifikat verteilt

528
00:37:13,000 --> 00:37:18,000
bei CentOS 7, also das neue.

529
00:37:18,000 --> 00:37:23,000
Aber die haben eine verbackte OpenSSL-Version unter CentOS 7.

530
00:37:23,000 --> 00:37:26,000
Und das wusste ich bis gestern Mittag auch nicht.

531
00:37:26,000 --> 00:37:33,000
So, CentOS 7, Let's Encrypt, OpenSSL.

532
00:37:33,000 --> 00:37:37,000
Ich muss hier mal kurz suchen.

533
00:37:37,000 --> 00:37:39,000
Ich weiß nicht, ob ich das jetzt direkt finde.

534
00:37:39,000 --> 00:37:46,000
Ob hier irgendwas steht.

535
00:37:46,000 --> 00:37:48,000
Genau.

536
00:37:48,000 --> 00:37:54,000
OpenSSL-Version auf CentOS 7 hat nämlich noch OpenSSL 1.0.2.

537
00:37:54,000 --> 00:37:59,000
Und OpenSSL 1.0.2 hat einen Bug.

538
00:37:59,000 --> 00:38:04,000
Wenn im Trust Store, also hier,

539
00:38:04,000 --> 00:38:11,000
wenn unter CentOS 7 im Trust Store das neue Zertifikat

540
00:38:11,000 --> 00:38:14,000
und das alte Zertifikat liegen,

541
00:38:14,000 --> 00:38:16,000
dann gibt es bei OpenSSL einen Bug,

542
00:38:16,000 --> 00:38:21,000
dass wenn er quasi zwei Zertifikate für die Trust-Chain findet

543
00:38:21,000 --> 00:38:25,000
und eins davon ist ungültig, dann ist es immer ungültig.

544
00:38:25,000 --> 00:38:26,000
Das ist ein Bug.

545
00:38:26,000 --> 00:38:29,000
Oder weiß ich, ob es ein Bug ist oder ein Feature zu damaligen Zeiten.

546
00:38:29,000 --> 00:38:33,000
Zumindest CentOS 7 ist das OpenSSL verbackt.

547
00:38:33,000 --> 00:38:38,000
Und das OpenSSL ist 1.0.2.

548
00:38:38,000 --> 00:38:45,000
Es gibt keine neuere Version als 1.0.2 für CentOS 7.

549
00:38:45,000 --> 00:38:48,000
Das heißt, wenn ihr CentOS 7 habt

550
00:38:48,000 --> 00:38:53,000
und wollt ab morgen Mittag 16.02 auf Let's Encrypt Surfaces zugreifen,

551
00:38:53,000 --> 00:38:57,000
gibt es den Fehler, dass die Verbindung nicht mehr secure ist.

552
00:38:57,000 --> 00:38:59,000
Es sei denn, ihr habt den neuesten Patch eingespielt.

553
00:38:59,000 --> 00:39:02,000
Der kam aber auch erst vor ein paar Tagen.

554
00:39:02,000 --> 00:39:04,000
Äh...

555
00:39:13,000 --> 00:39:15,000
RPM.

556
00:39:19,000 --> 00:39:21,000
Genau.

557
00:39:21,000 --> 00:39:23,000
Diesen Package muss man aktualisieren,

558
00:39:23,000 --> 00:39:26,000
nur mit dem Unterschied, dass die irgendwie...

559
00:39:26,000 --> 00:39:32,000
Hä?

560
00:39:34,000 --> 00:39:36,000
Da gab es vor zwei Tagen einen...

561
00:39:36,000 --> 00:39:39,000
Ach so, ist es vielleicht hier eins davon.

562
00:39:39,000 --> 00:39:45,000
What the fuck, wo bin ich denn hier gelandet überhaupt?

563
00:39:45,000 --> 00:39:49,000
Ja, hier das da.

564
00:39:49,000 --> 00:39:52,000
Guckt, es gab am 14.09. einen Patch.

565
00:39:52,000 --> 00:39:56,000
Sieg ist ein bisschen laut.

566
00:40:02,000 --> 00:40:06,000
Es gab einen Patch vor einer Woche,

567
00:40:06,000 --> 00:40:09,000
die den Bug folgendermaßen löst,

568
00:40:09,000 --> 00:40:13,000
indem sie einfach das alte Gut-Zertifikat rausschmeißt.

569
00:40:13,000 --> 00:40:16,000
Das heißt, wenn ihr diesen Patch nicht eingespielt habt,

570
00:40:16,000 --> 00:40:23,000
dann wird ab morgen eure Verbindung von CentOS 7-Systemen nicht funktionieren.

571
00:40:23,000 --> 00:40:27,000
Nur mal so, nebenbei angemerkt.

572
00:40:27,000 --> 00:40:29,000
Hi, haben Dankeschön für den Sub.

573
00:40:29,000 --> 00:40:35,000
Ah nee, Timeout, Massive.

574
00:40:35,000 --> 00:40:39,000
Ja, danke für den Sub.

575
00:40:39,000 --> 00:40:47,000
Hat noch. Moin, Wedges.

576
00:41:01,000 --> 00:41:07,000
Vinny, danke für den Sub. Sechs Monate hier, Massive.

577
00:41:07,000 --> 00:41:12,000
Vinny, danke Prime Sub, heute geht es hier Schlag auf Schlag.

578
00:41:26,000 --> 00:41:29,000
So, gehst du eigentlich in New World rein?

579
00:41:29,000 --> 00:41:32,000
Habt deine Meinung dazu nicht mehr richtig in Ungen?

580
00:41:32,000 --> 00:41:35,000
Nee, erst mal nicht.

581
00:41:35,000 --> 00:41:40,000
Garantiert werde ich nicht spielen.

582
00:41:40,000 --> 00:41:43,000
Ja, bei uns ist das witzig.

583
00:41:43,000 --> 00:41:47,000
Bei uns hat man sich überlegt, also wir haben CentOS 7.

584
00:41:47,000 --> 00:41:49,000
Und bei uns hat man sich überlegt,

585
00:41:49,000 --> 00:41:52,000
ach, bis der CentOS 7-Support ausläuft,

586
00:41:52,000 --> 00:41:57,000
haben wir eh alles in der Cloud.

587
00:41:57,000 --> 00:42:04,000
Ich postchampe da jedes Mal bei dieser Aussage.

588
00:42:04,000 --> 00:42:10,000
Bin mir da nicht so sicher, ob das wirklich der Fall sein wird.

589
00:42:10,000 --> 00:42:13,000
Welche Thermostate benutzt du?

590
00:42:13,000 --> 00:42:17,000
Ich benutze, du meinst an den Heizkörpern,

591
00:42:17,000 --> 00:42:19,000
an den Heizkörpern habe ich tatsächlich

592
00:42:19,000 --> 00:42:22,000
die Fritz Deck Thermostate mittlerweile.

593
00:42:22,000 --> 00:42:25,000
Ich habe ein paar ausprobiert, auch Zigbee Thermostate.

594
00:42:25,000 --> 00:42:27,000
Insgesamt muss ich ehrlich sagen,

595
00:42:27,000 --> 00:42:30,000
das ist das Einzige, was ich Fritz Deck habe,

596
00:42:30,000 --> 00:42:32,000
aber die Dinger funktionieren von allen Dinger,

597
00:42:32,000 --> 00:42:37,000
also von allen Thermostaten, die ich ausprobiert habe am besten.

598
00:42:37,000 --> 00:42:39,000
Die machen auch einen robusten, ordentlichen Eindruck,

599
00:42:39,000 --> 00:42:40,000
ohne dass die gleich auseinanderfallen,

600
00:42:40,000 --> 00:42:44,000
wie manche Zigbee, China, Chinesen Zeug.

601
00:42:44,000 --> 00:42:45,000
Kein Ding.

602
00:42:45,000 --> 00:42:49,000
Also das Einzige, was ich da im Einsatz habe,

603
00:42:49,000 --> 00:42:52,000
Fritz Deck Home Automation,

604
00:42:52,000 --> 00:42:54,000
aber die Dinger sind tatsächlich gar nicht schlecht.

605
00:42:54,000 --> 00:42:57,000
Und die gibt es manchmal auch im Angebot,

606
00:42:57,000 --> 00:43:02,000
da sind die Zweier Pack gar nicht mal so teuer.

607
00:43:02,000 --> 00:43:06,000
Dafür würde ich das auch nicht kaufen.

608
00:43:06,000 --> 00:43:09,000
Manchmal gibt es Angebote,

609
00:43:09,000 --> 00:43:14,000
wo es dann irgendwie Zweier, Dreier, Vierer Pack oder so gibt.

610
00:43:14,000 --> 00:43:18,000
Das lohnt sich aktuell nicht, also 45 Euro für einen Thermostate.

611
00:43:18,000 --> 00:43:22,000
Vielleicht beim nächsten Prime Day, Black Friday,

612
00:43:22,000 --> 00:43:26,000
Black Friday Week, Prime Week, September Special Week,

613
00:43:26,000 --> 00:43:29,000
was auch immer es da bei Amazon alles gibt,

614
00:43:29,000 --> 00:43:32,000
hat man vielleicht Glück.

615
00:43:32,000 --> 00:43:35,000
Aber die finde ich wirklich nicht verkehrt.

616
00:43:35,000 --> 00:43:40,000
So was genau ist denn jetzt schon wieder der digitale Führerschein?

617
00:43:40,000 --> 00:43:42,000
Was soll das denn jetzt eigentlich schon wieder sein?

618
00:43:42,000 --> 00:43:44,000
Chano, du hast deinen Einsatz schon verpasst.

619
00:43:44,000 --> 00:43:46,000
Recycle Story.

620
00:43:46,000 --> 00:43:48,000
Und du warst nicht da.

621
00:43:48,000 --> 00:43:53,000
So was, die Bundesregierung hat den Start eines weiteren E-Government-Projekts.

622
00:43:53,000 --> 00:43:55,000
Wer hätte das gedacht?

623
00:43:55,000 --> 00:43:57,000
Also komm, das kann ja nicht sein.

624
00:43:57,000 --> 00:43:59,000
Das kann nicht sein.

625
00:43:59,000 --> 00:44:02,000
Also als wäre schon jemals,

626
00:44:02,000 --> 00:44:07,000
als wäre schon jemals irgendein IT-Projekt unserer Regierung gescheitert.

627
00:44:07,000 --> 00:44:09,000
Das können wir mir noch nicht erzählen.

628
00:44:09,000 --> 00:44:11,000
Es ist noch nie was in die Hose gegangen.

629
00:44:11,000 --> 00:44:13,000
Das glaube ich nicht, dass das in die Hose geht.

630
00:44:13,000 --> 00:44:18,000
Noch nie.

631
00:44:18,000 --> 00:44:21,000
Wir haben auch 50 MBit für jeden bis 2018.

632
00:44:21,000 --> 00:44:23,000
Alles hat alles geklappt.

633
00:44:23,000 --> 00:44:24,000
D-Mail.

634
00:44:24,000 --> 00:44:26,000
Riesen Erfolg, Alter.

635
00:44:26,000 --> 00:44:28,000
Jetzt erzähl doch mal nix.

636
00:44:28,000 --> 00:44:30,000
Ich kenne sogar einen, der für D-Mail...

637
00:44:30,000 --> 00:44:32,000
Nee, D-Mail oder was?

638
00:44:32,000 --> 00:44:33,000
Wie ist das andere?

639
00:44:33,000 --> 00:44:34,000
E-Post?

640
00:44:34,000 --> 00:44:35,000
Nee.

641
00:44:35,000 --> 00:44:38,000
Wie hießen die Konkurrenz zu D-Mail?

642
00:44:38,000 --> 00:44:43,000
Ich bin mir jetzt nicht sicher, ob der für D-Mail oder die Konkurrenz gearbeitet hat.

643
00:44:47,000 --> 00:44:48,000
E-Post-Brief.

644
00:44:48,000 --> 00:44:49,000
Da war es doch E-Post-Brief.

645
00:44:49,000 --> 00:44:51,000
Ich glaube E-Post-Brief.

646
00:44:58,000 --> 00:44:59,000
Was wollen die?

647
00:44:59,000 --> 00:45:04,000
Was die offizielle App der Bunde für den digitalen Führerschein ist eine Woche lang.

648
00:45:04,000 --> 00:45:09,000
Was war denn überhaupt das?

649
00:45:09,000 --> 00:45:11,000
Wenn ich den Kerl schon sehe, Alter.

650
00:45:11,000 --> 00:45:13,000
Was war denn überhaupt das Sinn davon?

651
00:45:19,000 --> 00:45:22,000
Digital Enabling GmbH.

652
00:45:22,000 --> 00:45:23,000
Okay, Moment.

653
00:45:23,000 --> 00:45:25,000
Die muss ich jetzt mal googeln.

654
00:45:25,000 --> 00:45:27,000
Wer ist das?

655
00:45:27,000 --> 00:45:33,000
Die Webseite sieht ja schon wirklich absurpleding edge aus.

656
00:45:33,000 --> 00:45:54,000
Wie sie hier geschickt umschreiben, dass es verkackt haben.

657
00:45:54,000 --> 00:45:55,000
Okay, Moment.

658
00:45:55,000 --> 00:45:56,000
Ihr müsst stark sein.

659
00:45:56,000 --> 00:45:58,000
Wie sieht denn die Webseite im Original aus?

660
00:45:58,000 --> 00:46:03,000
Na ja.

661
00:46:03,000 --> 00:46:04,000
Das geht aber schöner.

662
00:46:04,000 --> 00:46:06,000
Das sind doch Stock-Fotos, oder?

663
00:46:06,000 --> 00:46:08,000
Das ist doch so ein...

664
00:46:08,000 --> 00:46:09,000
Moment, das kenne ich doch.

665
00:46:09,000 --> 00:46:11,000
Das ist doch so ein Bilderset.

666
00:46:11,000 --> 00:46:12,000
Das kenne ich.

667
00:46:12,000 --> 00:46:13,000
Das habe ich schon gesehen.

668
00:46:13,000 --> 00:46:16,000
Das ist doch so ein fertig designtes Bilderset.

669
00:46:16,000 --> 00:46:20,000
Also wenn es das nicht ist, haben sie was gemacht, was der jetzt noch nicht hat.

670
00:46:20,000 --> 00:46:23,000
Das ist doch so ein fertig designtes Bilderset.

671
00:46:23,000 --> 00:46:27,000
Also wenn es das nicht ist, haben sie was gemacht, was der jetzt noch nicht hat.

672
00:46:27,000 --> 00:46:30,000
Also wenn es das nicht ist, haben sie was gemacht, was der jetzt noch nicht hat.

673
00:46:30,000 --> 00:46:33,000
Das ist doch so ein fertig designtes Bilderset.

674
00:46:33,000 --> 00:46:36,000
Das ist doch so ein fertig designtes Bilderset.

675
00:46:36,000 --> 00:46:38,000
Was auch immer.

676
00:46:38,000 --> 00:46:46,000
Die ID-Wallet.

677
00:46:46,000 --> 00:46:54,000
Die Brieftasche für digitale Identitäten.

678
00:46:54,000 --> 00:47:00,480
mein Corona Zeug in der Corona App einscannen, da einscannen, dann gibt es ja noch ganz

679
00:47:00,480 --> 00:47:05,440
verrückte Leute, die die Luca App am Start haben oder was auch immer, wobei, da muss

680
00:47:05,440 --> 00:47:06,440
man ja nichts einscannen.

681
00:47:06,440 --> 00:47:11,360
So, also zeig mal kurz her, was war denn das Problem?

682
00:47:11,360 --> 00:47:20,520
AppStore nicht entfernen, man geht nun Sicherheitshinweise nach und legt das System auf höhere Nutzlasten

683
00:47:20,520 --> 00:47:21,520
aus.

684
00:47:21,520 --> 00:47:25,880
Wir hätten auch damit rechnen können, das ist ja fast wie bei Blizzard, wir hätten

685
00:47:25,880 --> 00:47:29,560
nun damit rechnen können, dass die Leute es auch benutzen wollen, wenn es live geschaltet

686
00:47:29,560 --> 00:47:30,560
wird.

687
00:47:30,560 --> 00:47:34,800
Mal ganz davon abgesehen, wissen wir alle, in der heutigen Zeit ist das einfach Schwachsinn

688
00:47:34,800 --> 00:47:37,840
und architekturtechnisch nicht richtig gemacht.

689
00:47:37,840 --> 00:47:42,040
Wir haben schon bei KLS gelernt, dass man einzig das wichtigste ist, dass man skaliert.

690
00:47:42,040 --> 00:47:48,560
Und die haben nicht richtig skaliert, das war das eigentliche Problem.

691
00:47:48,560 --> 00:47:53,080
Hätten die nämlich richtig skaliert, dann hätten die ihre Services skalieren können,

692
00:47:53,080 --> 00:47:57,360
das meine ich jetzt tatsächlich ernst, blöder Spruch zum Einstieg, aber das meine ich jetzt

693
00:47:57,360 --> 00:47:58,360
ernst.

694
00:47:58,360 --> 00:48:01,760
Also gerade so einen Service, denke ich, kann man super skalieren.

695
00:48:01,760 --> 00:48:10,240
Selbst gehostet haben die das garantiert eh nicht, sowas kann man mit Sicherheit, wenn

696
00:48:10,240 --> 00:48:21,040
es von der Architektur unten drunter gut gemacht ist, super, ähm, scalen.

697
00:48:21,040 --> 00:48:25,120
In einer, ok, was ist denn das Problem sicherheitstechnisch eigentlich gewesen?

698
00:48:25,120 --> 00:48:31,960
Da wurde nicht diagonal ins Endgame skaliert, so siehts aus, ja.

699
00:48:31,960 --> 00:48:38,160
Außerdem haben die kein Blockchain gemacht, ohne Blockchain, und also die hatten kein AI

700
00:48:38,160 --> 00:48:42,480
und kein Blockchain, ohne das müssen wir ja, gehts eh schon aktuell nicht mehr.

701
00:48:42,480 --> 00:48:54,880
Und bis, bis SAC DEF OBS Leute, brauchen die auch, Pull Stack, Pull Stack bis DEF SAC OBS,

702
00:48:54,880 --> 00:48:55,880
mit Blockchain.

703
00:48:55,880 --> 00:49:04,720
Hier die Stockfotos, Shane, ich bin mir nicht so sicher, ob ich das aufmachen soll.

704
00:49:04,720 --> 00:49:12,640
Ah ja, tatsächlich, genau, das sind die Stockfotos, die ich meine, ja, genau das, was der Chainlord

705
00:49:12,640 --> 00:49:13,640
gepostet hat.

706
00:49:13,640 --> 00:49:18,720
Ja, ich wusste doch, dass mir die Stockfotos bekannt vorkommen.

707
00:49:18,720 --> 00:49:26,360
Ok, also was gibt es denn sonst noch, Alter was ist das denn für Spooky Spoda Musik?

708
00:49:26,360 --> 00:49:45,360
Wo sind wir denn stehen geblieben, hier, zeig mal, das ist passend zum Thema, das stimmt.

709
00:49:45,360 --> 00:49:49,480
Also, die ersten technischen Probleme mit der App traten bald nach dem Start am 23.

710
00:49:49,480 --> 00:49:54,120
September auf, viele Nutzer konnten kein digitalen Wettbewerb, blablabla, ich will, was sind,

711
00:49:54,120 --> 00:49:56,560
das waren dann die Security Bedenken.

712
00:49:56,560 --> 00:50:02,480
Ok, was sagt der CCC, in den folgenden Tagen kritisieren auch Sicherheitsexperten die Anwendung,

713
00:50:02,480 --> 00:50:06,200
man habe Grund zur Annahme, dass die Infrastruktur hinter der App und die zugrundlegende Block-

714
00:50:06,200 --> 00:50:19,480
Ich habe nichts gesagt, Blockchain ist natürlich mit am Start, was sonst, natürlich, warum

715
00:50:19,480 --> 00:50:27,280
auch immer man für so eine App irgendwas mit Blockchain braucht, will man da irgendwelche,

716
00:50:27,280 --> 00:50:33,320
will da irgendwie einer Transaktion machen von seinem Ausweis zu einer anderen Person

717
00:50:33,320 --> 00:50:34,320
oder was?

718
00:50:34,320 --> 00:50:48,920
Schau da einen Twitter-Link an, welchen Moment, Twitter-Link, hier, Sekunde, ok, ok, ok,

719
00:50:48,920 --> 00:50:52,560
ok, ok, gut.

720
00:50:52,560 --> 00:51:04,960
Ich zähle 9 Blockchains, wat, was bin ich hier sehend, haben die da irgendwelche Testing

721
00:51:04,960 --> 00:51:06,620
Sachen nicht entfernt oder was?

722
00:51:06,620 --> 00:51:30,940
Ist das für Personalausweis-Dealer oder was, dass du die Transaktionen dann besser absichern

723
00:51:30,940 --> 00:51:31,940
kannst oder wie?

724
00:51:31,940 --> 00:51:38,620
Ja, wahrscheinlich hat irgendjemand von den Typen, die das beauftragt haben, gesagt,

725
00:51:38,620 --> 00:51:43,660
aber, aber Leute, hier, mach das mit Blockchain, aber lass mal, lass mal weiterlesen.

726
00:51:43,660 --> 00:51:49,340
Und ich so, okay, beim Einsatz der ID-Ballet-App dient eine Blockchain beziehungsweise ein

727
00:51:49,340 --> 00:51:56,940
dezentrales Netzwerk, Distributed Ledger, als Vertrauensanker die Aussteller von Nachweisen

728
00:51:56,940 --> 00:52:02,900
wie im Fall des Führerscheins, was sollen in dem Netzwerk Prüfdaten hinterlegen, Prüfer

729
00:52:02,900 --> 00:52:08,020
zum Beispiel, oder, sollen die Daten einsetzen, steht aber immer noch nicht genau, wozu man

730
00:52:08,020 --> 00:52:09,780
da jetzt eine Blockchain braucht.

731
00:52:09,780 --> 00:52:14,620
Sind für sowas nicht genau Zertifikate erfunden worden?

732
00:52:14,620 --> 00:52:24,940
Ist das nicht genau das, wofür beispielsweise eine, also wir hatten es doch gerade von CAs,

733
00:52:24,940 --> 00:52:25,940
ja.

734
00:52:25,940 --> 00:52:33,660
Ich kann auch nachvollziehen, ob eine Zertifizierungsstelle, eine gültige Zertifizierung, egal, vielleicht

735
00:52:33,660 --> 00:52:38,940
muss man das im Detail kennen, sich wozu man eine Blockchain braucht.

736
00:52:38,940 --> 00:52:48,980
Personsbeziehungen sollen ausschließlich auf dem Smartphone des Benutzers geben, weshalb

737
00:52:48,980 --> 00:52:58,500
die Bundesländer auch selbst, das kann ja nicht einmal aussprechen, nicht für Polizeikontrollen,

738
00:52:58,500 --> 00:53:06,940
als offizieller Nachweis da, Fahrerlaubnis zum Beispiel, Polizei kann, achso, achja gut,

739
00:53:06,940 --> 00:53:11,140
der ist so krass geil durch Blockchain geschützt, dass er schon mal für offizielle Zwecken nicht

740
00:53:11,140 --> 00:53:12,140
gültig ist.

741
00:53:12,140 --> 00:53:13,140
Na geil.

742
00:53:13,140 --> 00:53:29,740
Ja, wer hätte auch damit rechnen können, dass ein IT-Projekt von unserer Regierung

743
00:53:29,740 --> 00:53:30,740
in die Hose geht?

744
00:53:30,740 --> 00:53:35,620
Also ich, ich bin wieder zutiefst überrascht, also mich wunderts jedes, also es ist ja noch

745
00:53:35,620 --> 00:53:36,620
nie passiert.

746
00:53:36,620 --> 00:53:40,740
Wie hätte man damit nur rechnen können?

747
00:53:40,740 --> 00:53:47,500
Wer hat das angeschossener Scheuer, keine Ahnung, lässt sich aber anscheinend gerne

748
00:53:47,500 --> 00:53:48,500
mitfotografieren.

749
00:53:48,500 --> 00:54:02,780
Sekunde Leute, ich muss mal kurz meine Lizenz eingeben.

750
00:54:02,780 --> 00:54:23,940
Oh nee, wo habe ich denn meine Lizenz?

751
00:54:23,940 --> 00:54:49,820
Ach da, da ist ja meine Lizenz, hab sie gefunden, alles klar, ja, passt, kann ich das starten?

752
00:54:49,820 --> 00:54:57,620
Zwar ohne Scheißleute, ich hab wirklich eine Lizenz, kann ich euch sogar beweisen, dass

753
00:54:57,620 --> 00:55:01,620
ich eine Lizenz hab?

754
00:55:01,620 --> 00:55:04,620
Guckt.

755
00:55:04,620 --> 00:55:26,180
Ich hab wirklich eine Lizenz, wer hat's erzählt hier, ich würde irgendwelche Pirate-Sachen

756
00:55:26,180 --> 00:55:27,180
verwenden oder so?

757
00:55:27,180 --> 00:55:42,260
Nachnamen-Leak, Bup, Leak, Eats-Twitch-Money-Regel, ja was hat denn das gekostet, ich glaub 100,

758
00:55:42,260 --> 00:55:48,860
das war das 149 Euro im Jahr oder so, ich hab das komplette Desktop-Package, also ich

759
00:55:48,860 --> 00:55:57,100
hab das JetBrains Desktop-Package, ich weiß gar nicht wie das heißt, All-Product-Package,

760
00:55:57,100 --> 00:56:23,340
genau, 189 Euro oder so, kaufen, nee nee, nee nee das hab ich nicht, hä, ich bin jetzt

761
00:56:23,340 --> 00:56:33,660
komplett hängen geblieben, das hab ich doch nicht gekauft, ach für persönliche Nutzung,

762
00:56:33,660 --> 00:56:40,620
ah, ja, ja, ja, ja, genau, hier, das hab ich, genau, ich wollt grad sagen, so viel hab

763
00:56:40,620 --> 00:56:47,460
ich noch nicht bezahlt, 249 Euro, genau, und dann wird's bisschen billiger jedes Jahr,

764
00:56:47,460 --> 00:56:51,020
das Package hab ich mir geholt, da ist alles von denen drinne, also ich finde die kann

765
00:56:51,020 --> 00:56:55,980
man wirklich unterstützen und die machen auch gute Sachen, nachdem ich von denen im Prinzip

766
00:56:55,980 --> 00:57:02,580
Rider verwende, Golan verwende und das die CEDE manchmal oder die CEC++EDE manchmal

767
00:57:02,580 --> 00:57:11,580
verwende, dachte ich mir so, ey, warum nicht, ja, die Preise sind echt gut, ja, ist echt,

768
00:57:11,580 --> 00:57:16,500
ist wirklich so, kannst du dich, da kannst du dich wirklich nicht beschweren, hä, also

769
00:57:16,500 --> 00:57:20,180
die zwei verwende ich regelmäßig, C-Line verwende ich auch öfters, hab ich jetzt hier

770
00:57:20,180 --> 00:57:23,820
nicht installiert, wozu, haben wir ja kaum was, äh, die anderen Sachen verwende ich

771
00:57:23,820 --> 00:57:28,980
ehrlich gesagt nicht, PyCharm hab ich installiert, für alle Schaltjahre mal ein bisschen was

772
00:57:28,980 --> 00:57:32,780
machen in der Richtung, aber eigentlich, eigentlich so gut wie nie, Webstorm bin ich bis jetzt

773
00:57:32,780 --> 00:57:36,380
nicht richtig warm geworden mit und das andere brauch ich, Rubymine brauch ich zum Glück

774
00:57:36,380 --> 00:57:43,100
auch nicht mehr, IntelliJ und so kannst du ja alles kostenlos verwenden, so, ähm, würd

775
00:57:43,100 --> 00:57:47,060
sagen, wir fangen jetzt mal an, wir machen jetzt mal was, komm jetzt nochmal kurz in

776
00:57:47,060 --> 00:57:57,980
den Chat, ich dachte ich irgendwas übersehen hab, da, ich, also ganz ehrlich, du kannst

777
00:57:57,980 --> 00:58:05,940
.NET programmieren mit Wishlist Studio Code, ich hab das auch ne Weile gemacht unter Linux

778
00:58:05,940 --> 00:58:15,820
mit Wishlist Studio Code, also ich fand's viel hakelicher als mit Rider, allein schon

779
00:58:15,820 --> 00:58:26,660
die ganzen Refactorings in Rider, mehr Hilfen, wenn du was hast, das automatische Importieren,

780
00:58:26,660 --> 00:58:33,180
was besser funktioniert als in Wishlist Studio und in Wishlist Studio Code, ähm, die Anzeige

781
00:58:33,180 --> 00:58:44,780
von Parametern und, also insgesamt, insgesamt ist das eine viel rundere Experience, Poetologe,

782
00:58:44,780 --> 00:58:52,140
langische für den Primes Up, aber man kann natürlich damit anfangen, das ist kein Ding,

783
00:58:52,140 --> 00:58:56,340
ja, besser als MonoDevelop oder sowas, ich weiß nicht, ob jemand von euch mal MonoDevelop

784
00:58:56,340 --> 00:59:07,860
verwendet hat, muss ich mich früher mit rumschlagen, das sollte sich aber mittlerweile wegen LSP

785
00:59:07,860 --> 00:59:14,460
verwendet haben, naja, Rider macht eigenes Zeug, Wishlist Studio kann höchstens so gut

786
00:59:14,460 --> 00:59:21,060
werden mit LSP wie, sag mal mal, Wishlist Studio selbst, was die verwenden, die Budget

787
00:59:21,060 --> 00:59:26,340
Plans haben ja für alles noch eigeneres Tooling dabei, also beispielsweise auch wenn du, wenn

788
00:59:26,340 --> 00:59:30,700
man Go Land verwendet, die verwenden ja auch nicht die offiziellen und nicht nur die offiziellen

789
00:59:30,700 --> 00:59:37,540
Go Tools, die machen ja auch viele Analysen selbst, das heißt, Go Land ist viel besser

790
00:59:37,540 --> 00:59:43,660
in Go was Autocomplete und solche Sachen angeht als, sagen wir mal, Go mit Wishlist Studio

791
00:59:43,660 --> 01:00:03,980
Code, so, mal gucken, ob ich irgendwas übersehen habe, Mist, leaked, du hast keine Blockchain

792
01:00:03,980 --> 01:00:11,420
für Rider, ich glaube, ich mache mal einen Feature Request auf bei JetBrains, das ist

793
01:00:11,420 --> 01:00:17,180
übrigens auch eine geile Aussage gewesen, wir haben einen Anbieter bei uns auf der Arbeit,

794
01:00:17,180 --> 01:00:25,980
der E-Mails-Spam-Filter macht für uns und was bei uns etwas merkwürdiges Verfahren

795
01:00:25,980 --> 01:00:31,180
ist, aber das ist Absicht, wir filtern unsere eigenen Mails, also normalerweise würde man

796
01:00:31,180 --> 01:00:35,820
ja sagen, wir haben einen Spam-Anbieter, der eingehende Mails filtert, aber wir filtern

797
01:00:35,820 --> 01:00:41,980
auch ausgehende Mails, also Mails, die quasi unsere Außendienstmitarbeiter schreiben,

798
01:00:41,980 --> 01:00:49,060
die werden gefiltert durch den Spam-Filter, warum, weil schlicht und ergreifend Leute

799
01:00:49,060 --> 01:00:55,700
Spam verschicken von denen und weil unsere Reputation schon öfters mal, also zwischen

800
01:00:55,700 --> 01:00:59,580
E-Mails-Server, schon öfters mal ziemlich gelitten hat wegen irgendwelchen Rumspammern,

801
01:00:59,580 --> 01:01:03,500
wir hatten sogar Leute, die haben irgendwelche raubkopierten Isos mal verschickt und sowas,

802
01:01:03,500 --> 01:01:09,780
als E-Mail-Anhang, 600 MB und die haben dann sogar bei der Hotline angerufen und sich beschwert,

803
01:01:09,780 --> 01:01:12,460
warum kann ich meine E-Mail nicht verschicken, ja weil du gerade versucht hast eine Iso zu

804
01:01:12,460 --> 01:01:24,740
verschicken über ihren offiziellen E-Mail-Account, naja gut und dieser Anbieter, der blockt natürlich

805
01:01:24,740 --> 01:01:31,820
auch ab und zu mal falsche Mails und ich habe was programmiert, was diese falschen Mails,

806
01:01:31,820 --> 01:01:38,820
ich habe was programmiert, was automatisch die E-Mails frei gibt, die im Spam-Ordner

807
01:01:38,820 --> 01:01:45,140
landen, die ausgehend sind, das ist relativ simpel, ich nehme einfach einen Chrome und

808
01:01:45,140 --> 01:01:49,540
mache mit Papetier Fernsteuerung, ich klicke quasi das, was man von Hand im Web-Interface

809
01:01:49,540 --> 01:01:57,940
macht durch automatisch im Hintergrund und das funktioniert eigentlich auch ganz gut,

810
01:01:57,940 --> 01:02:02,260
aber bevor ich das gemacht habe, haben wir den Anbieter, unseren Spam-Filter-Anbieter

811
01:02:02,260 --> 01:02:07,180
angefragt und haben gesagt, sag mal, habt ihr nicht irgendwie eine API für E-Mails frei

812
01:02:07,180 --> 01:02:08,180
zu geben?

813
01:02:08,180 --> 01:02:14,060
Ich meine, das ist im Jahr 2021, warum geht das nur über ein komisches uraltes Web-Interface,

814
01:02:14,060 --> 01:02:17,460
warum kann man nicht einfach sagen, hier wir authentifizieren uns mit einem API-Talk und

815
01:02:17,460 --> 01:02:23,580
geben dem Kram eine API frei und da haben die geschrieben, nee, API gibt es nicht, gibt

816
01:02:23,580 --> 01:02:29,100
es nicht, aber sie haben dazu schon einen internen Feature-Request eröffnet.

817
01:02:29,100 --> 01:02:38,420
Ich habe auch gedacht, wow, das ist ja toll, da habe ich jetzt richtig viel von, da bin

818
01:02:38,420 --> 01:02:43,980
ich ja froh, dass ihr einen internen Feature-Request eröffnet habt, natürlich gibt es das bis

819
01:02:43,980 --> 01:02:54,940
heute nicht, so Leute, falls ihr irgendwas übersehen habt, schreibt es nochmal in den

820
01:02:54,940 --> 01:03:05,580
Chat, glaube ich habe ein paar Dinge vorhin übersehen, haben wir doch gemacht, das war

821
01:03:05,580 --> 01:03:13,260
legit der letzte Hetzner Server-Stream, wo wir sowas gemacht haben, skalierbare Server-Anwendung,

822
01:03:13,260 --> 01:03:18,740
das war der letzte Hetzner-Sponsor-Stream, wo wir sowas gemacht haben, das ist zwei Wochen

823
01:03:18,740 --> 01:03:25,940
her oder so, da haben wir die manuelle Variante gemacht, mit Loadbalancer davor, gibt es

824
01:03:25,940 --> 01:03:26,940
ein Wort?

825
01:03:26,940 --> 01:03:35,700
Ja, gibt es bestimmt noch ein Wort, ok, Wort, wo bloß, TV, Archiv, hier geht es zur Übersicht,

826
01:03:35,700 --> 01:03:45,260
Google Drive 2021, ja, du musst jetzt den Titel erstmal raussuchen, den Titel findest du,

827
01:03:45,260 --> 01:03:54,500
hier Loadbalancer, das ist es doch, Loadbalancer, GitHub, GitHub Actions, Hetzner, CACW as

828
01:03:54,500 --> 01:03:58,620
a microservice, ja, die Vorschau ist gerade broken bei mir im Browser, weiß ich nicht,

829
01:03:58,620 --> 01:04:07,060
du kannst ja runterladen, das funktioniert, da haben wir das gemacht im Stream, ja, guck,

830
01:04:07,060 --> 01:04:11,820
jetzt bin ich wieder am Start, ich bin wieder am Start, oh, huge quality, hier sehe ich

831
01:04:11,820 --> 01:04:21,380
schon gerade, tja, das Archiv ist ein bisschen, bisschen viel Traffic auf Google vielleicht,

832
01:04:21,380 --> 01:04:27,180
von einem User, also für ein User-Account, übrigens meine YouTube-Empfehlungen sind

833
01:04:27,180 --> 01:04:34,140
kaputt, seht ihr das, normalerweise kriegen wir immer noch halbwegs sinnvolle Sachen empfohlen,

834
01:04:34,140 --> 01:04:43,220
heute ist einfach komplett random, komplett random resettet, als wäre ich nie eingeloggt

835
01:04:43,220 --> 01:04:51,940
gewesen bei YouTube, nicht eingeloggt, also als hätte ich nie, hätte ich das nie verwendet,

836
01:04:51,940 --> 01:05:00,860
ich habe meinen Cash nicht gelehrt, ne, ne, ist alles noch da, ist alles noch da, ich

837
01:05:00,860 --> 01:05:04,820
weiß, dass ich nicht eingeloggt bin, ich meine ja auch nicht eingeloggt, ne, ich habe keine

838
01:05:04,820 --> 01:05:11,340
Cookies gelöscht, das geht, das ist wahrscheinlich gerade broken, wie viel Cloud Storage, ein

839
01:05:11,340 --> 01:05:26,420
paar Terabyte ist das, ist das schon, so.

840
01:05:26,420 --> 01:05:50,260
Also, dann fangen wir mal an, basteln wir heute mal ein bisschen was.

841
01:05:50,260 --> 01:06:07,700
Also, ich sag euch jetzt mal wie es ist, Realtalk Leute, die beste Variante Git zu verwenden

842
01:06:07,700 --> 01:06:14,060
oder auch Shit ist über die Kommandozeile, jeder der Git nicht über die Kommandozeile

843
01:06:14,060 --> 01:06:24,460
bedient ist ein Kacknoob, so, jetzt ist es raus, hey Max, was hältst du von Net, was

844
01:06:24,460 --> 01:06:34,700
für einem Ding, Network Optics IP NX, Professional Video Management, kein Schimmer, kannst du

845
01:06:34,700 --> 01:06:40,260
mal Git Share Replic erklären, ja, da bräuchte ich ein Beispiel für, du nimmst halt ein

846
01:06:40,260 --> 01:06:46,300
Comet und schiebst es woanders hin, beziehungsweise stimmt nicht, stimmt nicht, das ist falsch,

847
01:06:46,300 --> 01:06:51,060
das ist eigentlich komplett falsch, was ich gerade gesagt habe, Git Share Replic, guckt

848
01:06:51,060 --> 01:06:59,940
sich das Diff an, von dem Comet, was du angibst, applied das Diff dort wo du gerade bist in

849
01:06:59,940 --> 01:07:12,260
dem Branch und mach dann ein neues Comet oben drauf, mit dem gleichen Inhalt, was Outdoor

850
01:07:12,260 --> 01:07:35,020
sonst was angeht vom Original Comet, jetzt habe ich desktop, ne ne, Leute ich mach seit,

851
01:07:35,020 --> 01:07:37,820
ich weiß das ist jetzt nicht wirklich ein gutes Argument, aber da sieht man, dass es

852
01:07:37,820 --> 01:07:44,660
auf jeden Fall funktioniert, ich mach seit ein paar Jahren, wirklich zum größten Teil

853
01:07:44,660 --> 01:07:52,060
lese ich Comets und Pull und Merchrequests von anderen Leuten und kümmere mich darum,

854
01:07:52,060 --> 01:07:58,300
dass das rechtzeitig reinkommt, also ich würde sagen, mal locker 50% von meinem täglichen

855
01:07:58,300 --> 01:08:05,180
To Do auf der Arbeit sind irgendwelche Git, Repo, Release Management Geschichten und ich

856
01:08:05,180 --> 01:08:11,420
habe noch nie, jetzt ernsthaft, kein Witz, ich habe noch nie ein anderes Tool als die

857
01:08:11,420 --> 01:08:21,340
Git Kommando Zeile verwendet, außer für Diffs, beziehungsweise Merch Konflikt Diffs, das

858
01:08:21,340 --> 01:08:29,020
ist das einzige wozu ich ab und zu mal ein externes Tool verwende, wenn man keinen Bock

859
01:08:29,020 --> 01:08:38,620
hat in Wim komische Zeilen zu suchen, die anfangen mit so und so und so, nutzt ihr ein

860
01:08:38,620 --> 01:08:44,420
eigenes Git Lab, wir hatten Git Lab, das habe ich damals eingeführt, hatten sie aber keinen

861
01:08:44,420 --> 01:08:53,220
Bock mehr drauf und haben jetzt Bitbucket für alle, seitdem funktionieren meine Git

862
01:08:53,220 --> 01:09:01,100
Talks nicht mehr, richtig, das ist richtig, dafür kann ich es verstehen, wenn Leute das

863
01:09:01,100 --> 01:09:14,060
verwenden, also wenn man, ich habe vergessen wie das heißt, wenn man einzelne Zeilen nur

864
01:09:14,060 --> 01:09:20,420
edit anstatt ganze Dateien und sowas, dann kann ich es verstehen, wenn man Hilfstools

865
01:09:20,420 --> 01:09:33,180
verwendet, aber das mache ich eigentlich nie, Gangstate, genau, korrekt, ja so heißt das,

866
01:09:33,180 --> 01:09:39,300
ja, ich weiß, man kann glaube ich sogar mittlerweile Interactive adden und sowas, aber das brauche

867
01:09:39,300 --> 01:09:44,380
ich nicht, ich mache Changes, auch wenn es drei Dateien sind, sage ich dann Bam, neues

868
01:09:44,380 --> 01:09:50,660
Git, das kriegt dann eh die besten Comet Messages aller Zeiten immer, so temp und blub und sonst

869
01:09:50,660 --> 01:09:57,020
was und am Ende mache ich dann meistens ein Comet raus und fasse das zusammen, das wird

870
01:09:57,020 --> 01:10:00,740
heute nichts, doch wir fangen jetzt an, wir fangen jetzt an, ihr verwendet intern SVN

871
01:10:00,740 --> 01:10:12,700
und kein JIT, das ist aber ziemlich fail, ich sage nichts über Wim, der einzige wahre

872
01:10:12,700 --> 01:10:19,700
Konsolen Editor, kommt mir keiner mit Nano oder Emacs oder sowas jetzt an, also Merch

873
01:10:19,700 --> 01:10:26,220
Konflikte lösen mit Wim auf der Konsole je nach Umfang, es gibt übersichtlichere Sachen,

874
01:10:26,220 --> 01:10:38,300
es ist alles bloated, wir machen nur noch Seed, ich mache immer init, ich mache init,

875
01:10:38,300 --> 01:10:50,940
obwohl ich irgendwann habe ich 30 init Messages, was keinen Sinn ergibt, oder temp oder egal,

876
01:10:50,940 --> 01:10:56,660
doch das kenne ich, das ist ein SVN Klein für Windows, kenne ich, das habe ich ganz

877
01:10:56,660 --> 01:11:04,300
ganz früh auch mal verwendet, so also auf gehts, wir machen jetzt mal was sinnvolles,

878
01:11:04,300 --> 01:11:11,940
wo sind wir denn stehen geblieben, also, ich habe meine Home Assistant Test Installation

879
01:11:11,940 --> 01:11:20,100
hier irgendwie, ich mache den Kram hier mal zu, was haben wir hier alles auf, ich habe

880
01:11:20,100 --> 01:11:30,260
meine Home Assistant Test Installation hier irgendwo, da guck mal, hier, das ist meine

881
01:11:30,260 --> 01:11:35,620
Home Assistant Test Installation, so einen Knopf für die Heizung haben wir auch schon,

882
01:11:35,620 --> 01:11:42,540
das haben wir das letzte Mal gemacht, da kann ich mich dran erinnern, die kann man sogar

883
01:11:42,540 --> 01:11:52,140
drücken, aber dann passiert nichts, weil irgendwas kaputt ist, und hier haben wir ein Device,

884
01:11:52,140 --> 01:12:00,900
nämlich den Heizchamp, der einen Button hat, der einen Switch hat für an und aus, ok,

885
01:12:00,900 --> 01:12:04,500
da kann ich mich dran erinnern, genau das haben wir das letzte Mal gemacht, da sind

886
01:12:04,500 --> 01:12:12,180
wir stehen geblieben, so, und heute ist mein Ziel, dass ich nicht einfach einen Switch

887
01:12:12,180 --> 01:12:18,020
kriege, sondern einen Thermostat in meinem Home Assistant für die Heizung, irgendjemand

888
01:12:18,020 --> 01:12:24,620
schreibt mir was auf dem Handy, warte mal kurz, jetzt kriege ich Nachrichten aus irgendeiner

889
01:12:24,620 --> 01:12:36,460
Teams Gruppe, wo Leute schreiben, Pause bis 21 Uhr, ich bin seit 16 Uhr weg, mir ist

890
01:12:36,460 --> 01:12:41,340
das jetzt ehrlich gesagt ziemlich wurscht, ob die Leute Pause bis 21 Uhr machen oder

891
01:12:41,340 --> 01:12:59,020
nicht, warum kriege ich denn jetzt noch Benachrichtigungen, na gut, so, und so soll das dann am Ende aussehen,

892
01:12:59,020 --> 01:13:04,100
ich will so einen Thermostat machen, das heißt, ich muss jetzt irgendwie gucken, wie ich

893
01:13:04,100 --> 01:13:11,700
über die MQTT Schnittstelle, so wie wir den Kram hier auch reingekriegt haben, einen Thermostat

894
01:13:11,700 --> 01:13:19,420
anlegen kann, so, wie haben wir denn hier aufgehört, blub, was ist das hier alles, Crap, den wir

895
01:13:19,420 --> 01:13:25,180
nicht brauchen, achso, Moment, das war das, was wir hier getestet haben, ich muss das

896
01:13:25,180 --> 01:13:30,300
nochmal kurz auskommandieren, wo sind wir denn stehen, was haben wir denn hier gebaut,

897
01:13:30,300 --> 01:13:35,700
ok, das hier war noch überhaupt nicht funktionsfähig, das hat überhaupt nicht funktioniert, was

898
01:13:35,700 --> 01:13:39,220
wir da gemacht haben, ich kommentiere den Kram mal kurz wieder ein und gucke, ob das

899
01:13:39,220 --> 01:13:45,380
noch funktioniert, was ich da gebaut habe, also, wow, nö, warum funktioniert das jetzt

900
01:13:45,380 --> 01:13:57,980
nicht, ok, ich habe ehrlich gesagt keine Ahnung, wo wir stehen geblieben sind, deswegen ignore

901
01:13:57,980 --> 01:14:02,620
ich das jetzt einfach mal und wir versuchen einen Thermostat zu bauen, dazu muss ich erstmal

902
01:14:02,620 --> 01:14:08,420
wissen, wie ich einen Thermostat anlege, deswegen suchen wir mal Home Assistant MQTT, da haben

903
01:14:08,420 --> 01:14:13,820
die nämlich Discovery, da habe ich nämlich ein schönes Beispiel für, wo die Hälfte

904
01:14:13,820 --> 01:14:22,940
nicht drin steht, das haben wir auch schon festgestellt, genau, hier haben sie ein Beispiel

905
01:14:22,940 --> 01:14:28,420
für einen Thermostat, also, wenn ich möchte, dass Home Assistant mein Gerät als Thermostat

906
01:14:28,420 --> 01:14:33,460
erkennt, muss ich eine MQTT Message mit diesem JSON Payload schicken, wenn ich das richtig

907
01:14:33,460 --> 01:14:41,380
sehe, was mir hier erstmal auffällt ist, dass sie unglaublich auf Abkürzungen stehen, ich

908
01:14:41,380 --> 01:14:52,340
meine, guckt euch das mal an, kur-temp-tüppel oder temp-stet-ti, das soll wahrscheinlich

909
01:14:52,340 --> 01:15:05,180
Topic heißen, wo das drauf lauscht oder so, welche Idee, das ist Ryder, ja, ja, warum

910
01:15:05,180 --> 01:15:12,220
ist MQTT so Paynes-Champ, ist das gar nicht, das ist, das ist die JSON, das ist das JSON

911
01:15:12,220 --> 01:15:16,940
Payload, der Paynes-Champ ist, ok, dann probieren wir das doch mal anzulegen, wir legen jetzt

912
01:15:16,940 --> 01:15:22,780
mal ein Thermostat in Home Assistant an, das probieren wir mal aus, so, bevor ich da irgendwie

913
01:15:22,780 --> 01:15:26,780
eine eigene Klasse oder sonst was zu bau, wir machen das mal wirklich, wir machen das

914
01:15:26,780 --> 01:15:30,940
mal so wie das letzte Mal, wir legen dieses JSON Ding mal von Hand an und gucken, ob das

915
01:15:30,940 --> 01:15:42,820
dann funktioniert, so, hier Publish, Subscribe, das brauchen wir nicht, ja, mal Debug-Ausgabe,

916
01:15:42,820 --> 01:15:48,180
was wir da haben ist vielleicht nicht verkehrt, so, jetzt mal schauen, also was brauchen wir

917
01:15:48,180 --> 01:15:57,060
denn hier, Name, Name wird auf jeden Fall, Name wird auf jeden Fall, aber Heizung, ist

918
01:15:57,060 --> 01:16:04,380
doch egal, wie ich das nenne, so, Device-Info, wo wir das haben, Device-Info ist bei Home

919
01:16:04,380 --> 01:16:07,980
Assistant, das ist eine richtig coole Sache, die sie sich hier ausgedacht haben und zwar,

920
01:16:07,980 --> 01:16:16,140
Leute, ich hab keinen Bock da so geplägt, ok, hier funktioniert der Darkreader nicht

921
01:16:16,140 --> 01:16:25,020
so wirklich gut, aber ich glaube, die haben einen Darkseal mittlerweile, lass mal kurz

922
01:16:25,020 --> 01:16:40,740
gucken, ja, gleich viel besser, so, was ganz cool ist, man kann bei Home Assistant, also

923
01:16:40,740 --> 01:16:47,180
Geräte können sich automatisch dort eintragen lassen, man muss nicht mehr alle Geräte in

924
01:16:47,180 --> 01:16:52,420
die Config eintragen, das geht aber nur, wenn das Gerät quasi weiß, dass man Home

925
01:16:52,420 --> 01:16:57,140
Assistant verwendet bzw. eine Option hat, es in einem Home Assistant-kompatiblen Format

926
01:16:57,140 --> 01:17:02,340
zu annoucen, so, und da kann man jetzt sagen, man legt ein Gerät an, das ist dann das hier

927
01:17:02,340 --> 01:17:08,860
in dem Fall, kann man sagen, hier, ich bin ein Raspberry Pi, hergestellt vom Twitch-Chat,

928
01:17:08,860 --> 01:17:13,940
Hostname ist der hier und Version-Number ist der hier, ziemlich bescheute Version-Number,

929
01:17:13,940 --> 01:17:19,580
by the way, und da legt er das hier so als Device an und alle Sensoren, die man jetzt

930
01:17:19,580 --> 01:17:24,580
anlegt, unten drunter, ja, von Schaltern bis Temperatursensoren und sonst was, die kommen

931
01:17:24,580 --> 01:17:31,220
als Einträge unter diesem Device, das heißt, man hat jetzt nicht 20 unabhängig voneinander

932
01:17:31,220 --> 01:17:35,300
angelegte Sensoren, sondern alle Sensoren gehören zu einem Gerät, so, und jetzt versuche

933
01:17:35,300 --> 01:17:41,260
ich mal einen Thermostat anzulegen, da muss ich jetzt mal gucken, wie wir das machen,

934
01:17:41,260 --> 01:17:48,300
also, State-Topic, wir müssen das mal zusammenbauen, ich copy-paste mir mal das Beispiel, also

935
01:17:48,300 --> 01:17:52,180
das da müssen wir jetzt, das müssen wir jetzt anlegen und gucken, ob da dann ein Thermostat

936
01:17:52,180 --> 01:17:56,460
im Web-Interface bei rauskommt, ich hab da so meine Zweifel, dass das auf Anhieb funktioniert,

937
01:17:56,460 --> 01:18:01,300
aber, aber, schauen wir mal, schauen wir mal, also, State-Topic ist dann, bauen wir das

938
01:18:01,300 --> 01:18:14,260
mal, bauen wir das mal so zusammen, zack, äh, Name, wie heißt das, Heizung, ich hab,

939
01:18:14,260 --> 01:18:23,700
hier ist Heiz-Champ, Heizung, so, Sensor, Name, so, ID, braucht irgendwas, irgendwas

940
01:18:23,700 --> 01:18:35,220
random meistes, aber ist jetzt zum Testen eigentlich egal, was, wie ist eigentlich das

941
01:18:35,220 --> 01:18:39,420
Auferlay von Home Assistant, also bezüglich auf dem Tablet und zum Steuern, ja, das ist

942
01:18:39,420 --> 01:18:45,820
alles das gleiche, das ist immer das hier, guck, das ist ziemlich, das ist ziemlich,

943
01:18:45,820 --> 01:18:54,660
wie sagt man, responsive, das Web-Interface von denen, das kannst du ohne Probleme auf

944
01:18:54,660 --> 01:19:02,620
dem Tablet verwenden, huge responsiveness hier, das haben die wirklich gut gemacht,

945
01:19:02,620 --> 01:19:08,740
das Web-Interface, du kannst das ohne Probleme gut, gut scale, also du kannst das auf dem

946
01:19:08,740 --> 01:19:12,740
Tablet, du kannst genau das gleiche Interface auf dem Tablet verwenden, wenn wir jetzt hier

947
01:19:12,740 --> 01:19:17,180
unsere Test-Home Assistant-Installation nehmen, du kannst ja hier oben verschiedene Tabs,

948
01:19:17,180 --> 01:19:21,700
also wenn du beispielsweise ne, ne, ne Ansicht haben willst, wo die nur die fünf wichtigsten

949
01:19:21,700 --> 01:19:25,460
Sachen drauf sind, kannst du dir das als Tab machen und das hier dann als Bookmark speichern

950
01:19:25,460 --> 01:19:33,620
oder so, das geht, aber du verwendest das gleiche Interface wie auf dem Desktop, ja,

951
01:19:33,620 --> 01:19:40,340
die App ist ja im Prinzip das Web-Interface als App gepackt, das ist ja quasi nen Browser

952
01:19:40,340 --> 01:19:46,420
mit, mit native Funktionen für das jeweilige Device dabei, ja, aber das Web-Interface ist

953
01:19:46,420 --> 01:20:00,220
jetzt quasi so ne Web-View, so, Name, Name, Name, so, ID, wir brauchen mal ne ID, irgendeine

954
01:20:00,220 --> 01:20:09,260
random ID, ich würd sagen, die ID ist random genug, oder, bam, huge ID, alles klar, Command

955
01:20:09,260 --> 01:20:14,620
Topic, also was muss ich denn jetzt anlegen, damit ich einen Thermostat im Home Assistant

956
01:20:14,620 --> 01:20:24,380
bekomme, Name, Name haben wir schon, Mode Command, also ich werf mal alles raus, was aus meiner

957
01:20:24,380 --> 01:20:30,260
Sicht nicht sinnvoll aussieht, Templates, brauchen wir nicht, Online, Offline, ist immer

958
01:20:30,260 --> 01:20:37,540
online, brauchen wir nicht, Templates rauswerfen, also, meine Heizung kann nur an und ausgeschaltet

959
01:20:37,540 --> 01:20:43,540
beziehungsweise, ne, das stimmt nicht, meine Heizung, also das Thermostat, was der anlegt,

960
01:20:43,540 --> 01:20:48,740
kann die Heizung nur aus oder auf Heizen schalten, was sinnvoll ist, was anderes kann meine Heizung

961
01:20:48,740 --> 01:20:55,260
eh nicht, Temperature Steps 0,5 machen wir nicht, Temperature Steps 1, Minimal Temperatur

962
01:20:55,260 --> 01:21:05,020
ist, keine Ahnung, 5 Maximal Temperatur ist 35, reicht, ok, Current Temp Topic, das heißt

963
01:21:05,020 --> 01:21:11,380
doch bestimmt Topic, oder, soll ich irgendeine Abkürzung für, ach doch, hier, guck mal,

964
01:21:11,380 --> 01:21:16,660
ok, anstatt Current Temp T kann ich auch Current Temperature Topic schreiben, ist halt die Frage,

965
01:21:16,660 --> 01:21:23,060
will ich das ausschreiben, will ich das abkürzen, ach das ist mir egal, all die wolltest du auf

966
01:21:23,060 --> 01:21:29,540
die Mac Adresse setzen, ja will ich auch, haben wir auch hier schon programmiert, aber ich

967
01:21:29,540 --> 01:21:35,500
will jetzt erstmal ein leeres Thermostat anlegen im Home Assistant Web Interface, um zu gucken,

968
01:21:35,500 --> 01:21:40,100
ob das überhaupt funktioniert, was ich hier mache, dann kann man da ja auch was sinnvolles

969
01:21:40,100 --> 01:21:57,260
reinschreiben, kann die Heizung nicht aus warm Wasser, warm Wasser und Heizung doch,

970
01:21:57,260 --> 01:22:00,740
aber das ist nicht, was ich in so einem Thermostat einstellen will, in dem Thermostat will ich

971
01:22:00,740 --> 01:22:04,660
nur Temperatur einstellen und Heizung an und aus, das warm Wasser würde ich gar nicht

972
01:22:04,660 --> 01:22:09,460
in dieses Thermostat reinpacken, das würde ich als extra Button machen, deswegen wir

973
01:22:09,460 --> 01:22:14,860
brauchen als Sensoren, wir brauchen als Sensoren, also sprich als Geräte, die in Home Assistant

974
01:22:14,860 --> 01:22:21,420
auftauchen brauchen wir am Ende, wir brauchen hier ein Thermostat Sensor, wir brauchen

975
01:22:21,420 --> 01:22:27,100
einen Switch, zum Beispiel warm Wasser umschalten und so was in der Richtung und wir brauchen

976
01:22:27,100 --> 01:22:36,540
sicherlich noch ein paar Sensors für irgendwelche Infos, von Inventarnummer bis Brennertemperatur

977
01:22:36,540 --> 01:22:41,740
und sonstige Geschichten, also die drei Sachen müssen wir dann anlegen, sodass Home Assistant

978
01:22:41,740 --> 01:22:42,740
das versteht.

979
01:22:42,740 --> 01:22:46,260
Ich will jetzt erstmal ein Thermostat anlegen und gucken, ob das funktioniert, also Name

980
01:22:46,260 --> 01:22:57,300
State Topic, Command Topic, okay fangen wir mal oben an, Mode, CMD, Topic, WTF, okay,

981
01:22:57,300 --> 01:23:01,780
wir machen das jetzt, wir Copy Pasten das jetzt einfach mal sinnlos und gucken, ob dann irgendwas

982
01:23:01,780 --> 01:23:10,260
rauskommt, was aussieht wie ein Thermostat im Web Interface, also Command Topic brauchen

983
01:23:10,260 --> 01:23:15,500
wir nicht, wir ersetzen das jetzt einfach mal zu irgendwas Sinnvollem, dass es dem entspricht,

984
01:23:15,500 --> 01:23:23,020
was da oben drin steht, also wir brauchen einen Command Topic und das ist in dem Fall Home

985
01:23:23,020 --> 01:23:26,620
Assistant, ach Climate, guck mal ich hab hier noch Switch drinstehen, das kann ja gar nicht

986
01:23:26,620 --> 01:23:37,580
funktionieren, so, Home Assistant, Climate, ID, Name, State, okay, das ist aber falsch,

987
01:23:37,580 --> 01:23:44,900
ich will Thermostat Mode CMD haben, ich vermute mal, dass es irgendeinen Magic Eintrag, dass

988
01:23:44,900 --> 01:23:51,420
das nur so funktioniert, welche Distro verwendet das, das ist Manjaro mit I3WM, ja korrekt,

989
01:23:51,420 --> 01:23:59,860
das was der Bot auch schon geschrieben hat, so also Thermostat, Mode Stat, State, wunderbar,

990
01:23:59,860 --> 01:24:13,100
State lassen wir einfach so, Aff, Aff, Aff, was für ein Ding, Afti T, Afti, was, was

991
01:24:13,100 --> 01:24:22,420
für ein Ding, Availability Topic, wer hat denn das abgekürzt, es gibt doch die I3Config

992
01:24:22,420 --> 01:24:29,500
auf GitHub, das stimmt, ich hab mal irgendwann so eine Minimalversion von meinen Config Files

993
01:24:29,500 --> 01:24:43,620
auf GitHub hochgeladen, das ist nicht so wirklich, was, warum, warum schreib ich da.NET in.Files,

994
01:24:43,620 --> 01:24:49,900
alter, ja, so eine Minimalconfig von meinem Kram hochgeladen, das ist nicht wirklich alles

995
01:24:49,900 --> 01:24:54,740
und das ist auch nicht so wahnsinnig aktuell, das ist schon 2 Jahre her, aber für das meiste

996
01:24:54,740 --> 01:25:00,380
reicht es, ja da kannst du zum Beispiel, dass du dich von der Wim-Config bis, hier ist nicht

997
01:25:00,380 --> 01:25:14,340
viel drin, bis zur I3-Config von mir das Zeug angucken, Wim oder Neo-Wim, ach das was dir

998
01:25:14,340 --> 01:25:25,060
am liebsten ist, ich glaube ich hab, was hab ich denn, ich glaube ich hab normalen Wim,

999
01:25:25,060 --> 01:25:32,100
kein N-Wim, was denn, Neo-Wim, ne ich hab, Aff, also das was, ich verwende das ja nur

1000
01:25:32,100 --> 01:25:38,540
auf der Kommandozeile um Sachen schnell zu editieren, ich, also mir ist das ziemlich

1001
01:25:38,540 --> 01:25:44,860
egal, ich hab, ich hab auch mal eine Weile Neo-Wim verwendet, das war so, als ich auf

1002
01:25:44,860 --> 01:25:49,620
dem Trip war, ich will mein Wim zu einer IDE umbauen, ich hab damals sogar, ich hab damals

1003
01:25:49,620 --> 01:25:54,660
sogar ein eigenes Wim Autocomplete, äh, nicht Autocomplete, stimmt nicht, File Search Plugin

1004
01:25:54,660 --> 01:26:01,700
gebastelt, mit Ruby zu C-Bindings, ganz abgedrehter Shit, toller Müll eigentlich im Nachhinein

1005
01:26:01,700 --> 01:26:06,660
betrachtet, aber das war, das was es gab, war mir damals zu langsam und als ich festgestellt

1006
01:26:06,660 --> 01:26:11,620
hab, ich muss anfangen, das war so der Anfang vom Ende, wo ich versucht hab mein Wim zu,

1007
01:26:11,620 --> 01:26:16,140
umzubauen zu als, zur alsback Waffe, aber als ich festgestellt hab, ich muss eigene

1008
01:26:16,140 --> 01:26:20,940
Sachen programmieren, dass ich so basic Sachen, äh, wie File Search schnell genug hin bekomme,

1009
01:26:20,940 --> 01:26:25,220
ich weiß, da gibt's mittlerweile bestimmt bessere Sachen, hab ich mir gedacht, warum

1010
01:26:25,220 --> 01:26:30,780
willst du eigentlich dein Wim umbauen in was, was du für alles verwenden kannst, und

1011
01:26:30,780 --> 01:26:38,740
dann hab ich angefangen einfach die passenden Tools für den passenden Einsatzzweck zu verwenden,

1012
01:26:38,740 --> 01:26:48,060
ja, sei es Visual Studio unter Windows, Visual Studio Code für, ähm, für Frontend, Arduino

1013
01:26:48,060 --> 01:26:52,260
Zeug, also für Frontend Zeug, für Arduino Zeug, für irgendwelchen Kram, Rider für

1014
01:26:52,260 --> 01:26:59,020
.NET unter Linux, Go Land für Go, äh, ich hab einfach, ich nehm jetzt einfach die passenden

1015
01:26:59,020 --> 01:27:05,980
Tools dafür, und ich hab lang genug an meiner Wim-Konfig rumgeschraubt, und versucht das

1016
01:27:05,980 --> 01:27:10,140
zu einer alsback Waffe zu machen, ich hab alles weggeschmissen mittlerweile, hab basic

1017
01:27:10,140 --> 01:27:20,580
Wim-Settings und fertig, ja, ok, machen wir mal weiter, also Thermostat-CMD, Visual Studio

1018
01:27:20,580 --> 01:27:29,820
Code ist ziemlich nice, also gerade Platform I.O. für, äh, für Arduino-kompatibles Zeug

1019
01:27:29,820 --> 01:27:34,180
ist wirklich nice, und auch was an Plugins gibt, also man kann eigentlich über Visual

1020
01:27:34,180 --> 01:27:41,460
Studio Code kaum was schlechtes sagen, vielleicht dass es ein JavaScript-Programm ist, aber

1021
01:27:41,460 --> 01:27:43,780
ansonsten ist Visual Studio Code doch echt nicht schlecht.

1022
01:27:43,780 --> 01:27:53,220
Was sagt ihr Leute? WebStorm, WebStorm oder Visual Studio Code für Frontend Zeug? Ich

1023
01:27:53,220 --> 01:27:56,540
hab WebStorm nie richtig verwendet, wird mich mal interessieren, falls einer von euch beides

1024
01:27:56,540 --> 01:28:05,060
ausprobiert hat. WebStorm oder Visual Studio Code? Ich mein, Visual Studio Code hat eindeutig

1025
01:28:05,060 --> 01:28:16,580
die Plugin-Welt auf seiner Seite. Deswegen kann man gar nicht sagen, dass es, ich hab

1026
01:28:16,580 --> 01:28:20,220
zwar gerade gesagt, das ist ein Nachteil für mich, dass es ein JavaScript-Programm ist,

1027
01:28:20,220 --> 01:28:24,900
aber mal ganz ehrlich, Visual Studio Code ist nur so erfolgreich, weil es ein JavaScript-Programm

1028
01:28:24,900 --> 01:28:33,700
ist. Sonst gibt's da gar nicht so viel Zeug für. So, also, äh, Mode-CMD-Topic, bla bla

1029
01:28:33,700 --> 01:28:41,300
bla, haben wir gemacht. Mode-Stat, okay, lassen wir das so. Valiability brauchen wir nicht.

1030
01:28:41,300 --> 01:28:46,940
Jetzt haben wir was? Temp-CMD-T, meine Güte, was haben die sich denn da wieder ausgedacht?

1031
01:28:46,940 --> 01:28:58,140
Temp-CMD-T, das kriegt Target Temp-CMD. Ich copypaste das jetzt einfach nur. So, dann

1032
01:28:58,140 --> 01:29:06,020
haben wir als nächstes wieder irgendein Stat-Topic, das kriegt das gleiche wie oben. So, dann haben

1033
01:29:06,020 --> 01:29:18,580
wir Current Temp-Topic, das ist anscheinend auch das gleiche wie oben. So, dann brauchen

1034
01:29:18,580 --> 01:29:30,540
wir Min-Temp. Gut, Min-Temp habe ich halt 5. Ups, gleich, sehr richtig. Was? Hast du

1035
01:29:30,540 --> 01:29:40,340
Vim-Control? Nein, habe ich nicht. Äh, habe ich nicht. Ich stehe total auf diese Vim-Bedien-Language,

1036
01:29:40,340 --> 01:29:45,020
ja. Also, ich finde das nice, wenn du mit F und T irgendwie hinspringen kannst, mit

1037
01:29:45,020 --> 01:29:51,460
N hoch und runter suchen, äh, äh, großes D ab da, Zeile löschen, äh, X drunter

1038
01:29:51,460 --> 01:29:56,860
schreibe. Ich finde die Vim-Language an sich zum Ende richtig geil, aber ich komme damit

1039
01:29:56,860 --> 01:30:02,540
im Kopf nicht klar, wenn ich nicht in der Konsole und nicht in Vim bin, Vim-Keys zu

1040
01:30:02,540 --> 01:30:06,860
verwenden. Sobald ich irgendwie so einen Editor wie hier habe, dann bin ich in meinem Kopf

1041
01:30:06,860 --> 01:30:11,340
in Maus-Bedienung. Ich kann das nicht erklären. Wenn ich das hier jetzt aufmache, gar kein

1042
01:30:11,340 --> 01:30:15,460
Problem, da bin ich in Tastatur-Bedienung. Da muss ich überhaupt nachdenken, aber sobald

1043
01:30:15,460 --> 01:30:20,340
ich sowas hier vor mir habe, da bin ich in meinem Kopf in Maus-Bedienung. Ich meine,

1044
01:30:20,340 --> 01:30:30,500
ich benutze ein paar Sachen, ja. Hier sowas wie zum Beispiel Zeilen verschieben, was aus

1045
01:30:30,500 --> 01:30:38,700
irgendwelchen Gründen nicht geht. Also manche Shortcuts verwende ich hier drin auch, aber

1046
01:30:38,700 --> 01:30:54,140
ich bin hier im Maus-Bedienungsmodus, ich komme damit nicht klar. CMD-T ist wahrscheinlich

1047
01:30:54,140 --> 01:31:00,740
ein Shortcut für CMD-Topic. Ja, jaja, mit Sicherheit. Command-Topic ausgeschrieben

1048
01:31:00,740 --> 01:31:03,860
wahrscheinlich sogar. Wahrscheinlich, wie gesagt, wahrscheinlich ist die volle Schreibweise

1049
01:31:03,860 --> 01:31:12,460
so. Mode-Command-Topic. So, Maximal-Temperatur. So, Steps, Steps lassen wir weg. Steps ist

1050
01:31:12,460 --> 01:31:24,460
standardmäßig bestimmt 1. So, Mode. Ah ja, Modes. Ok, da, oh, wir gucken, ob das jetzt

1051
01:31:24,460 --> 01:31:36,060
serialisiert kriegt, so eine Pring-Array. Gleich new JSON. Ah, da kann das. Ah ja, nice.

1052
01:31:36,060 --> 01:31:46,140
Kann der sowas hier machen? Hey, cool. Off. By the way, das was ihr hier seht ist übrigens

1053
01:31:46,140 --> 01:31:56,900
nicht newtonsoftjson.net oder sowas. Das ist die neue.NET 6 JSON API, die sie oben drauf

1054
01:31:56,900 --> 01:32:03,220
gebaut haben auf, wie heißt es, System Text JSON. Die haben doch vor einer Weile newtonsoftjson

1055
01:32:03,220 --> 01:32:08,580
rausgeschmissen aus asp.net.com und haben ihr eigenen Krempel drauf gemacht. So, darauf

1056
01:32:08,580 --> 01:32:12,660
hin haben die Leute gesagt, Microsoft seid ihr bescheuert, euer neuen Kram der Markt

1057
01:32:12,660 --> 01:32:18,260
zwar schnell sein, aber KaiSau kann den bedienen. Und jetzt hat Microsoft gesagt, ah ja gut,

1058
01:32:18,260 --> 01:32:23,380
dann machen wir halt mit.NET 6 da noch was oben drauf, was man besser bedienen kann.

1059
01:32:23,380 --> 01:32:34,420
So, und das ist das. Und soweit ich weiß, arbeitet daran auch der ehemalige Entwickler

1060
01:32:34,420 --> 01:32:40,580
federführend vor newtonsoftjson.net. Also sprich, Microsoft hat den Typ quasi eingekauft,

1061
01:32:40,580 --> 01:32:52,700
der die bekannteste JSON Library für.NET hergestellt hat. Naja, ich persönlich verwende

1062
01:32:52,700 --> 01:32:58,740
eigentlich immer noch am liebsten newtonsoftjson.net, einfach weil ich mich dran gewöhnt habe. Und

1063
01:32:58,740 --> 01:33:05,780
dieser, was weiß ich, wahnsinnige Performance Overhead bisher bei mir noch nie Probleme

1064
01:33:05,780 --> 01:33:10,620
gemacht hat, aber ich kann mir vorstellen, dass man wirklich Probleme bekommt, wenn man

1065
01:33:10,620 --> 01:33:20,340
da Millionen Requests hat. Ja, aber das haben meine Anwendungen in der Regel nicht. Ist

1066
01:33:20,340 --> 01:33:28,620
newtonsoftjson.net das gleiche wie newtonsoftjson.net? Ja, ja, das ist das gleiche. Das ist so Object

1067
01:33:28,620 --> 01:33:32,820
Initializer Sonntags. Das ist das gleiche. Guck, der sagt ja auch hier, du kannst das

1068
01:33:32,820 --> 01:33:40,540
weglassen. Das finde ich übrigens auch cool an Rider, ne, by the way, so Dinger. Dass

1069
01:33:40,540 --> 01:33:46,380
die dir das anzeigen, ist eigentlich nicht erforderlich. Teilweise machen sie das im

1070
01:33:46,380 --> 01:33:53,060
Ritual Studio aber mittlerweile auch schon. So, und jetzt gucken wir mal, ob der jetzt

1071
01:33:53,060 --> 01:33:55,820
einen Thermostat anlegt. Also ich würde mir ja echt den Arsch weisen, wenn das jetzt

1072
01:33:55,820 --> 01:34:03,100
einfach funktioniert. Mode of on. Publish, nee nee, Publish ist schonmal falsch. Wir

1073
01:34:03,100 --> 01:34:09,940
wollen auch auf climate publishen. Config, richtig, json message. Gut, schauen wir mal,

1074
01:34:09,940 --> 01:34:17,140
was der ausgibt. String, schauen wir mal, was der ausgibt, ob da irgendwas Sinnvolles

1075
01:34:17,140 --> 01:34:30,660
bei rumkommt. Run. Wo war es denn jetzt schon wieder? Moment, das hatten wir doch schonmal.

1076
01:34:30,660 --> 01:34:40,140
Export. Ah, jetzt gehts. Das ist weil ich dort net 6 Preview Versionen entzielt habe.

1077
01:34:40,140 --> 01:34:45,260
Ok, also das kommt hier serialisiert raus bei am Ende. Das macht er aus diesem Objekt,

1078
01:34:45,260 --> 01:34:52,100
was ich angelegen habe. Name, Unique ID, das Device, mouse CMD. Das sieht jetzt erstmal

1079
01:34:52,100 --> 01:35:04,020
ganz gut aus. Mal gucken, was da im Home Assistant rausgekommen ist jetzt. Nichts. Ja, das ist

1080
01:35:04,020 --> 01:35:10,700
schonmal gut. Das hat schonmal net funktioniert. Das ist schonmal nice. Hat einfach gar nichts

1081
01:35:10,700 --> 01:35:18,060
gemacht. Ich lösche das noch mal. Gucken, ob da irgendwas anliegt. Hat einfach nicht

1082
01:35:18,060 --> 01:35:27,420
funktioniert. Na gut. Console, Readline. Ich bin mir nicht ganz sicher, ob der schon alles

1083
01:35:27,420 --> 01:35:31,300
fertig abgeschickt hat. Sollte er eigentlich. Deswegen mach ich einen await davor, man weiß

1084
01:35:31,300 --> 01:35:44,460
ja nie. Nope, da liegt nichts an. Ok, RIP. Was mache ich falsch? Was mache ich falsch

1085
01:35:44,460 --> 01:36:02,780
hier? Modes off. Sieht gut aus. Sieht gut aus. Sieht gut aus. Unique ID. Sieht eigentlich

1086
01:36:02,780 --> 01:36:10,660
alles relativ nice aus. Warum das jetzt nicht funktioniert, verstehe ich nicht. Jetzt ist

1087
01:36:10,660 --> 01:36:15,020
der Big Brain Chat gefragt. Ja Chat, sag mir, woran es liegt. Wir gucken mal in das Log.

1088
01:36:15,020 --> 01:36:21,980
Wir gucken mal in das Log rein, ob der irgendwelche Probleme hat beim Serialisieren. Ohje, ohje.

1089
01:36:21,980 --> 01:36:33,660
Was? Wow. Error. Was? Async Discovery. Ja genau, das will ich verwenden. Und was ist

1090
01:36:33,660 --> 01:36:45,780
jetzt die Fehlermeldung genau? Multiple invalid extra keys not allowed. Hä? Habe ich irgendwas

1091
01:36:45,780 --> 01:37:05,980
falsch gemacht? Habe ich irgendwo? Ich habe doch bestimmt irgendwo was ganz offensichtlich

1092
01:37:05,980 --> 01:37:20,500
ist falsch geschrieben. Moment, der schreibt das groß. Könnte das das Problem sein, weil

1093
01:37:20,500 --> 01:37:36,940
das groß geschrieben ist? Könnte das wirklich drin sein, ist das Problem? Wäre er natürlich

1094
01:37:36,940 --> 01:37:43,100
bescheuert, aber ich mache das jetzt einfach so. Äh, Moment, wie sage ich ihm das denn

1095
01:37:43,100 --> 01:37:48,420
jetzt, dass er das bitte schön anders serialisieren soll? Wobei ich glaube, das hatten wir schon

1096
01:37:48,420 --> 01:37:54,420
mal, das hat das hat doch das hat doch funktioniert. Ich meine, ich kann jetzt da was Jason Property

1097
01:37:54,420 --> 01:38:00,820
oder so drüber schreiben und ihm sagen, das soll gefällig Manufakturer heißen und dann

1098
01:38:00,820 --> 01:38:08,300
sollte er das kleinschreiben. Das ist natürlich die ekliche Variante. Aber das funktioniert.

1099
01:38:08,300 --> 01:38:18,540
Man kann dem serialisieren garantiert sagen, bitte serialisieren. Alles klein, Jason Note

1100
01:38:18,540 --> 01:38:25,820
Options. Ja, das geht bestimmt. Wir kann ihm bestimmt sagen, der soll mal. Gucke mal, da

1101
01:38:25,820 --> 01:38:35,620
ist es doch direkt. Also ich muss echt mal sagen, das mag ich an am ganzen Dotnet Framework,

1102
01:38:35,620 --> 01:38:42,540
das ist logisch aufgebaut. Das ergibt meist meistens Sinn, was die sich da überlegt haben,

1103
01:38:42,540 --> 01:38:48,300
wo da was steht. Nicht immer, aber meistens. Deswegen findet man den Kram auch so schnell.

1104
01:38:48,300 --> 01:39:12,100
Mal gucken, ob das jetzt funktioniert. Dazu kann ich nur sagen. Also anscheinend funktioniert

1105
01:39:12,100 --> 01:39:18,220
das nicht, obwohl ich die Property Options angegeben habe. Ich habe gesagt Property Name

1106
01:39:18,220 --> 01:39:30,780
Case Insensitive. True. Und es juckt dir nicht. Was ist denn? Was ist denn die Fault? Irgendwie

1107
01:39:30,780 --> 01:39:42,700
was die Fault ist. Was passiert denn, wenn ich Fault sage? Ist mir egal. Okay, das funktioniert

1108
01:39:42,700 --> 01:39:58,020
nicht so, wie ich mir das gedacht habe. Ist das ein Bug vielleicht? Microsoft Hilfe Seiten

1109
01:39:58,020 --> 01:40:17,580
sind mal wieder richtiger Paints Champ wahrscheinlich. Alter Deutsch, please, warte mal auf Englisch.

1110
01:40:17,580 --> 01:40:31,540
Null. Moment, to compare Property Names? Ach Moment, das hat mit Serialisieren überhaupt

1111
01:40:31,540 --> 01:40:37,820
nichts zu tun oder was? Ja geil. Das ist ja überhaupt nicht missverständlich wofür das

1112
01:40:37,820 --> 01:40:45,740
da ist. Na gut, komm, dann schreibe ich das jetzt hier einfach oben drüber. Jason Property

1113
01:40:45,740 --> 01:40:50,500
Name. Einfach mal nur, um zu gucken, ob der Kram wirklich an Case Sensitive oder nicht

1114
01:40:50,500 --> 01:41:08,020
liegt. So das, das, das. Da haben wir hier Name. Name. Model. Version. Line. Line. Line.

1115
01:41:08,020 --> 01:41:12,300
Und jetzt brauchen wir noch Identifiers. Aber das glaubt nicht, dass das da dran liegt.

1116
01:41:12,300 --> 01:41:16,540
Das wäre richtig hängen geblieben, wenn der Kram Case Sensitive wäre. Das kann ich mir

1117
01:41:16,540 --> 01:41:25,020
eigentlich nicht vorstellen. So. Jetzt macht er alles klein. Jetzt schauen wir mal, wie

1118
01:41:25,020 --> 01:41:37,340
es hier ausschaut. Ne, Grip. Extra Key Not Allowed. Device Version. Tja, das ist aber

1119
01:41:37,340 --> 01:41:44,140
richtig. Irgendwas ist hier anerweilig kaputt. Das ist richtig. Ich weiß, dass das richtig

1120
01:41:44,140 --> 01:41:55,820
ist, weil es hat genau eins zu eins das letzte Mal funktioniert. Das ist aber ein neuer Fehler.

1121
01:41:55,820 --> 01:42:05,660
Ja, jetzt ist es Version. Ja. Aber im Prinzip ist es das gleiche. Was hat er denn für Schmerzen?

1122
01:42:05,660 --> 01:42:10,700
Plus, dann ist das Problem. So, ich mach mal kurz, ich mach jetzt die Vice einfach mal

1123
01:42:10,700 --> 01:42:23,900
weg. Was eigentlich keinen Unterschied machen sollte, dann legt das halt ohne an. Äh, hat

1124
01:42:23,900 --> 01:42:35,180
wieder nicht funktioniert, ne? Ne, doch. Identifiers. Moment, hat das jetzt funktioniert? Schauen

1125
01:42:35,180 --> 01:42:48,900
wir mal. Wo ist das? Developer Tools. Climate. Heizung. Das hat jetzt funktioniert? Was hat

1126
01:42:48,900 --> 01:43:03,100
er denn für ein Problem mit dem Device? Was hat er denn damit für ein Problem? Nimm SW

1127
01:43:03,100 --> 01:43:10,060
Version. Ja, natürlich. Das Problem hatten wir doch das letzte Mal schon. Es ist SW Version,

1128
01:43:10,060 --> 01:43:13,460
nicht Version. Das Problem hatten wir doch das letzte Mal schon. Und das hatte ich hier

1129
01:43:13,460 --> 01:43:19,140
auch gefixt, aber ich hab das nicht hier drinnen angepasst, als wir da ne extra Klasse draus

1130
01:43:19,140 --> 01:43:22,940
gemacht haben. Ja, es ist SW Version. Genau, das gleiche Problem hatten wir doch das letzte

1131
01:43:22,940 --> 01:43:38,020
Mal schon. Okay. Wie krieg ich denn das jetzt gelöscht? Configuration. Ne. Oh ne. Devices.

1132
01:43:38,020 --> 01:43:49,340
Devices. Entities. Wo ist die Heizung? Da. Delete. Geht ne. Ich muss das über MQTT wieder

1133
01:43:49,340 --> 01:43:56,620
löschen. Derselbe vielleicht, aber der Chat merkt es erst jetzt. Da brauchen wir eindeutig

1134
01:43:56,620 --> 01:44:02,220
mehr Prime-Subs, dass der Chat mehr IQ-Punkte kriegt und das früher merkt. Okay, dann machen

1135
01:44:02,220 --> 01:44:11,500
wir jetzt Hub. Click. Ja, Config. Den Kram löschen wieder. Config. Man musste einfach

1136
01:44:11,500 --> 01:44:19,540
ne leere Config-Message, glaub ich, schicken. Dann löscht das wieder. So, und zwar auf

1137
01:44:19,540 --> 01:44:27,460
Climate. Auf wo müssen wir hin? Home Assistant Climate. Config. Ich hoffe, der löscht das

1138
01:44:27,460 --> 01:44:43,700
wieder. Config. Oh, Mist. Was jetzt? Ah, ein Quot zu viel. Sack. Ah, und weg ist es.

1139
01:44:43,700 --> 01:44:50,500
Weg ist es. So, und jetzt können wir gucken, ob er das richtig anlegt wieder. So, Device

1140
01:44:50,500 --> 01:44:57,660
gleich Jason Device und jetzt haben wir ihm gesagt, er soll es serialisieren als SW-Version.

1141
01:44:57,660 --> 01:45:17,420
Okay, aber die Fehlermeldung konnte wirklich ein bisschen besser sein. SW-Version. Ob das

1142
01:45:17,420 --> 01:45:25,100
jetzt funktioniert hat. Integrations Device. Da ist es, der Heizchamp. Bäm, Heizung. Jawoll.

1143
01:45:25,100 --> 01:45:32,860
GGEats. Sollen jetzt mal gucken, ob wir das als Thermostat anlegen können. Ah ja, not

1144
01:45:32,860 --> 01:45:42,020
available ist gut. So. Schmeißen wir das mal weg. Delete Card und sagen jetzt, wir

1145
01:45:42,020 --> 01:45:54,180
wollen ein Thermostat haben. Thermostat. Ja, da ist es. Nur, dass irgendwie nichts stimmt.

1146
01:45:54,180 --> 01:46:00,100
Dass da nichts an Werten drin steht. Na gut, aber wir haben zumindest schon mal einen Thermostat,

1147
01:46:00,100 --> 01:46:08,340
was äußerst useless ist gerade. Aber er hat es angelegt als Climate Komponente, dass

1148
01:46:08,340 --> 01:46:13,260
ich einen Thermostat machen kann. Das ist doch schon mal was. So, Developer Tools. Gucken

1149
01:46:13,260 --> 01:46:20,260
wir mal, was der hier sagt. Climate Heizung ist Ministemperatur 5, Max Temperatur 35 Tage,

1150
01:46:20,260 --> 01:46:24,340
Temperature Step. Ah, okay. Current Temperature und Temperature sind nicht gesetzt. Das müssen

1151
01:46:24,340 --> 01:46:30,340
wir jetzt noch machen. So. Genau, ich habe nämlich noch gar nichts gesetzt. Ich habe

1152
01:46:30,340 --> 01:46:33,780
nämlich noch gar nichts gesetzt. So, dann müssen wir in die Hilfe gucken, wie das weitergeht.

1153
01:46:33,780 --> 01:46:45,620
Thermostat. Da. Also, man legt das an, so wie ich das angelegt habe. Und dann braucht

1154
01:46:45,620 --> 01:46:55,180
man ein State Payload, wo man Sachen reinschreibt, was gerade Sache ist. Okay. Dann machen wir

1155
01:46:55,180 --> 01:47:05,380
das doch jetzt. Hier legt er an. Jetzt setzen wir einen State Payload. Also brauchen wir

1156
01:47:05,380 --> 01:47:27,980
wieder das Topic. Okay, also MQTT Client Publish auf dieses Topic. So, da müssen wir jetzt

1157
01:47:27,980 --> 01:47:33,860
ein Objekt für anlegen. Mal gucken, wie das mit dem... Lass mal ein Thermostat anhand

1158
01:47:33,860 --> 01:47:45,380
des Devices anzeigen. Was meinste? Du meinst, wenn ich hier drauf klicke, dann passiert...

1159
01:47:45,380 --> 01:47:52,900
Ja. Thermostat. Operation Heat On Off. Guck mal, das hat er auch gecheckt. Und Target Temperature

1160
01:47:52,900 --> 01:47:56,940
kennt er nicht. Aber man sieht, dass er das genommen hat, weil ich sage ihm ja explizit,

1161
01:47:56,940 --> 01:48:01,220
das kann nur heizen oder ausgeschalten. Also, es kann nur Prinzip an- oder ausgeschaltet

1162
01:48:01,220 --> 01:48:08,380
werden. Ja, das funktioniert. Was ist das eigentlich für ein Symbol? Das sieht aus

1163
01:48:08,380 --> 01:48:15,500
wie ein durchgestrichener User. Aber das war... Sieht das... Sieht dieses Symbol irgendwie

1164
01:48:15,500 --> 01:48:24,460
nach Klimaanlage aus? Ach nee, das ist so ein Tacho hier. Jetzt erkenne ich das. Finden

1165
01:48:24,460 --> 01:48:28,540
die nicht auch, dass das aussieht wie ein durchgestrichener User? Das hier ist der User

1166
01:48:28,540 --> 01:48:33,860
hier unten. Und das ist ein durchgestrichener User. Ja, ich weiß, das ist ein Thermostat.

1167
01:48:33,860 --> 01:48:39,420
Aber sag doch mal, das sieht aus wie ein durchgestrichener User. Das sieht aus wie ein User-Symbol. Guck,

1168
01:48:39,420 --> 01:48:45,580
das hier ist der Kopf. Das hier ist so der... Das ist der Körper vom User. Und der hat quasi

1169
01:48:45,580 --> 01:48:56,060
so was im Kopf stecken. Ich hab da ein User erkannt. Durchgestrichener User. Das sieht

1170
01:48:56,060 --> 01:49:10,180
auch wirklich so aus. Jetzt erzählt mir nix. Finden die nicht, dass das so aussieht? Na,

1171
01:49:10,180 --> 01:49:20,300
was willst du da machen? Du siehst es auch. Ja, hab ich schon mal Glück gehabt. Ok, never

1172
01:49:20,300 --> 01:49:27,460
state message gleich. Kann der was anonymes serialisieren? Das probieren wir jetzt gleich

1173
01:49:27,460 --> 01:49:35,580
mal aus, ob der irgendwelche anonymen Typen serialisieren kann. Mode gleich off. Target

1174
01:49:35,580 --> 01:49:50,620
temp gleich... Was ist denn das hier? 21,5. Current temp gleich 23,60. Ah nee, Moment,

1175
01:49:50,620 --> 01:49:58,300
Punkt. Kona-Style. So, und jetzt sagen wir hier, wie serialisiert man hier nochmal was?

1176
01:49:58,300 --> 01:50:10,100
Moment, wie serialisiert man hier überhaupt ein einzelnes Objekt? Ah doch, serialize.

1177
01:50:10,100 --> 01:50:20,060
State message. Das klappt? Nee, das wird nicht funktionieren. Ich geb das mal kurz

1178
01:50:20,060 --> 01:50:27,760
noch serialisiert oben drüber aus. Mal gucken, was da rauskommt. Naja doch, das sieht eigentlich

1179
01:50:27,760 --> 01:50:33,580
ganz gut aus. Das ist ne ordentliche JSON-Message. Ok, was ist da jetzt rausgekommen bei? Da

1180
01:50:33,580 --> 01:50:47,380
ist rausgekommen, dass es nicht funktioniert hat, weil keine Temperature gesetzt. Da kann's

1181
01:50:47,380 --> 01:50:53,020
bestimmt nicht parsen. Wieso parsst du den Float als String? Weil das Beispiel bei Home

1182
01:50:53,020 --> 01:51:03,540
Assistant mir das so sagt, dass das so geht. Guck. Warum? Weiß ich nicht. Weil, weil. Wie

1183
01:51:03,540 --> 01:51:11,780
überzeugt bist du von C-Sharp? Beste Sprache. Ohne Scheiß, meine mit Abstand Lieblingsprogrammiersprache.

1184
01:51:11,780 --> 01:51:20,780
Das ist, C-Sharp ist ne Programmiersprache, um alltägliche Probleme zu lösen, ohne einem

1185
01:51:20,780 --> 01:51:27,020
Kurs in die Quere zu kommen. Mit richtig guter Standard-Library alles dabei, ganz gute Paketauswahl,

1186
01:51:27,020 --> 01:51:37,740
Cross-Plattform für alles, was man so braucht. Kannst du zwei positive Eigenschaften von

1187
01:51:37,740 --> 01:52:01,180
C++ sagen? Naja, es ist schnell und es wird mit den neuen Versionen in manchen Punkten

1188
01:52:01,180 --> 01:52:12,340
weniger Scheiße, aber insgesamt kommt eigentlich immer nur mehr Mist obendrauf. Was hältst du

1189
01:52:12,340 --> 01:52:16,340
von Rust? Aber das hatten wir vorhin schon relativ ausführlich. Ich finde Rust ist richtig

1190
01:52:16,340 --> 01:52:28,060
poggers. Leider ist Rust richtig Massive Brain mit solcher Sündtags. Also mit dieser krassen

1191
01:52:28,060 --> 01:52:34,020
Rust-Lifetime-Sündtags. Also da brauchst du wirklich mindestens 20 Prime-Subs, dass du

1192
01:52:34,020 --> 01:52:41,780
das verstehst. Vorher ist dein Kopf einfach nicht groß genug und es erweitert ja jeder

1193
01:52:41,780 --> 01:52:47,940
Prime-Sub bekanntlichermassen den Intelligenzquotient. Aber ich finde Rust richtig nice. Ich habe

1194
01:52:47,940 --> 01:52:52,620
Rust benutzt, als es noch Beta war, als es ganz frisch war. Habe ich richtig viel damit

1195
01:52:52,620 --> 01:52:56,740
gemacht, so zum ausprobieren. Ich fand das richtig nice und ich finde Rust auch immer

1196
01:52:56,740 --> 01:53:03,500
noch richtig nice. Aber es ist, finde ich, keine Sprache, die man startet, um mal schnell

1197
01:53:03,500 --> 01:53:10,620
was auszuprobieren. Da ist es auf jeden Fall nicht das Richtige. Wie findest du die Ruby

1198
01:53:10,620 --> 01:53:18,860
Sündtags? Top. Ich persönlich muss sagen, es war ja lange Zeit so ein bisschen so bei,

1199
01:53:18,860 --> 01:53:23,940
so ein bisschen unter Linux, so ein bisschen Sprachenkrieg zwischen Ruby und Python. Ja,

1200
01:53:23,940 --> 01:53:31,020
die einen haben gesagt, ah ja, hier Ruby, gerade auch als Ruby on Rails so voll angesagt

1201
01:53:31,020 --> 01:53:38,740
war. Nekorock, 25 Monate, huge subscription, jetzt geht es aber richtig los hier. Chillfreak

1202
01:53:38,740 --> 01:53:46,660
auch, 5 Monate, massive subscriptions hier, alle beide. Und dabei war so ein bisschen

1203
01:53:46,660 --> 01:53:51,820
Sprachenkrieg angesagt, so Python, Ruby, sonst was. Aber heute kann man eindeutig sagen,

1204
01:53:51,820 --> 01:53:56,900
Ruby on Rails ist nicht mehr von Bedeutung. Auf jeden Fall nicht für neue Projekte und

1205
01:53:56,900 --> 01:54:04,700
insgesamt auch eigentlich kaum noch von Bedeutung. Und Python hat einfach gewonnen, was das angeht.

1206
01:54:04,700 --> 01:54:10,300
Gerade durch die ganze Machine Learning AI Geschichte ist, das ist einfach ganz weit

1207
01:54:10,300 --> 01:54:19,300
vorne. Auch zurecht, aber ich muss sagen, mir persönlich gefällt die Ruby Sündtags

1208
01:54:19,300 --> 01:54:28,500
besser. Das heißt nicht, dass ich Python hässlich finde. Das kann man auch wunderbar lesen und

1209
01:54:28,500 --> 01:54:31,460
jedes Mal, wenn ich damit was mache, was nicht so oft ist, aber jedes Mal, wenn ich damit

1210
01:54:31,460 --> 01:54:36,380
was mache, bin ich begeistert von, wie einfach man die meisten Sachen machen kann, gerade

1211
01:54:36,380 --> 01:54:44,100
weil die Python Standard Library mittlerweile richtig cool ist. Von CSV-Parser bis IP-Calculator

1212
01:54:44,100 --> 01:54:48,980
ist alles in der Python Standard Library drin. Und mal ehrlich, die wenigsten Standard Libraries

1213
01:54:48,980 --> 01:54:55,220
haben einen CSV-Parser mit drin. Ich glaube, Go hat einen, aber viel mehr fallen mir da

1214
01:54:55,220 --> 01:55:05,260
jetzt nicht ein. Ich glaube, Go hat einen CSV-Parser. PHP, ja gut, PHP wundert mich

1215
01:55:05,260 --> 01:55:11,300
nichts mehr. Aber die meisten Programmiersprachen werden in ihrer Standard Library keinen CSV-Parser

1216
01:55:11,300 --> 01:55:19,780
haben und Python hat einen. Ich muss sagen, das finde ich nice, dass da so viel drin ist

1217
01:55:19,780 --> 01:55:24,740
und auch die Sündtags ist schon cool. Und jedes Mal, wenn ich damit was mache, bin ich

1218
01:55:24,740 --> 01:55:30,860
immer begeistert, wie gut das funktioniert, ja.

1219
01:55:30,860 --> 01:55:44,940
Java ist nicht mein Fall. Was habt ihr gegen PHP? Nix Wirksames. Doch, PHP ist gerade mit

1220
01:55:44,940 --> 01:55:56,980
Laravel oder sowas gar nicht so verkehrt. Ich finde es geht. PHP, ich habe es schon öfters

1221
01:55:56,980 --> 01:56:11,340
im Stream gesagt, PHP ist eigentlich besser als ein Ruf. PHP ist keine scheiß Sprache

1222
01:56:11,340 --> 01:56:16,820
mehr so wie früher mit dem richtigen Framework. Also, PHP geht. Also, wenn ich die Auswahl

1223
01:56:16,820 --> 01:56:27,140
hätte, eine Web-Anwendung mit C++ machen zu müssen oder PHP, ja, im Backend, da weiß

1224
01:56:27,140 --> 01:56:40,140
ich auf jeden Fall, was ich verwenden würde. Ja. So, was? Weil der Frage, würde hier eine

1225
01:56:40,140 --> 01:56:49,660
Art Kartenspiel, was Domain Triffen? Ach nee, Dungeons and Dragons. Okay. Zu viele Abkürzungen.

1226
01:56:49,660 --> 01:56:54,940
In Python mit Klassen oder mit? Hä? Das eine hat mit dem andere noch überhaupt nichts

1227
01:56:54,940 --> 01:57:02,820
zu tun. Das sind zwei komplett, das sind doch zwei komplett unterschiedliche Paar Schuhe.

1228
01:57:02,820 --> 01:57:19,500
Deine Karten musst du als Klassen anlegen, wenn du es objektorientiert machen willst.

1229
01:57:19,500 --> 01:57:26,180
Ja, dann hast du irgendeine Base-Kart-Klasse und erbst dann da irgendwas von, wie auch immer,

1230
01:57:26,180 --> 01:57:31,980
gibt es da zig Varianten, wie man das machen kann. Aber vergess den, die Singleton-Management,

1231
01:57:31,980 --> 01:57:37,580
Singleton-Management-Factory-Repository-Pattern nicht. Ohne das kannst du garantiert kein

1232
01:57:37,580 --> 01:57:45,140
Kommando-Zeilen-Spiel programmieren. So, würde zumindest der Java-Programmierer sagen.

1233
01:57:45,140 --> 01:57:54,700
Aber, also du legst die Karten als Klassen an und dann hast du halt am Ende eventuell

1234
01:57:54,700 --> 01:58:00,580
für jeden Spieler eine Dictionary mit Karten, die sie haben. Was du auch machen kannst,

1235
01:58:00,580 --> 01:58:09,900
weil die Karten können ja nicht doppelt vorkommen. Oder kannst du sogar ein Dictionary nehmen,

1236
01:58:09,900 --> 01:58:15,700
mit irgendwie Name von der Karte vorne drin oder was auch immer. Ich verstehe nur Bahnhof,

1237
01:58:15,700 --> 01:58:24,900
ich talke nur Netzwerk, Lel. Dann, ne, das machen wir das nächste Mal. Ich wollte jetzt

1238
01:58:24,900 --> 01:58:34,700
wieder ein bisschen über Leute ranten, die auf YouTube was erzählen, dass Layer-3-Switch-Router

1239
01:58:34,700 --> 01:58:40,980
sind und umgedreht und sowas. Aber, lass ich bleiben. Ich hab wieder dumme Comments gelesen

1240
01:58:40,980 --> 01:58:54,420
in YouTube und hab mich aufgeregt. Also wenn du was wissen willst, frag, aber wenn

1241
01:58:54,420 --> 01:58:59,980
das natürlich überhaupt nicht deine Welt ist, ist es schwierig mit fragen. Ich würde

1242
01:58:59,980 --> 01:59:11,020
es tatsächlich auch nicht übertreiben. Karten ist ein sehr beliebtes Beispiel, um Objektorientierung

1243
01:59:11,020 --> 01:59:17,260
quasi zu üben, auch in Schulen und sowas. Man muss es nicht übertreiben. Also mit Karten

1244
01:59:17,260 --> 01:59:24,860
kann man es wirklich krass übertreiben, mit 85 Milliarden Klassen. Man muss es aber nicht.

1245
01:59:24,860 --> 01:59:36,020
Ich würde es auch nicht zu sehr übertreiben. Ja, das stimmt, Dungeons & Dragons ist kein

1246
01:59:36,020 --> 01:59:42,460
Kartenspiel. Es gibt noch nicht mal Karten. Es gibt Character-Sheets, aber das sind ja

1247
01:59:42,460 --> 01:59:52,020
keine Karten. Du könntest aber dann früher oder später in das Rechteck-Quadrat-Problem

1248
01:59:52,020 --> 01:59:58,420
laufen, je nachdem, wie du deine Klassenhierarchie machst. Kennt ihr das Rechteck-Quadrat-Problem

1249
01:59:58,420 --> 02:00:06,860
bzw. das Ellipse-Kreis-Problem bei Objektorientierung? Ich hoffe, ich krieg das jetzt aus dem Kopf

1250
02:00:06,860 --> 02:00:14,500
noch richtig hin, was das ist. Also, wie würdet ihr eine Klassenhierarchie aufbauen? Mal ein

1251
02:00:14,500 --> 02:00:24,980
Beispiel hier. MyClass. Würdet ihr sagen, also mal angenommen, ihr wollt eine Klasse

1252
02:00:24,980 --> 02:00:30,940
abbilden, Rectangle, schreibt man das so, und ihr wollt eine Klasse abbilden, irgendwie

1253
02:00:30,940 --> 02:00:46,260
Square. Das ist der Deadly Diamond. Wer erbt von was? Ist Rectangle die Base-Klasse von

1254
02:00:46,260 --> 02:00:54,820
Square oder ist Square die Base-Klasse von Rectangle? Oder machen wir es mit Kreis. Machen

1255
02:00:54,820 --> 02:01:07,940
wir hier was, was ich. Also, instinktiv würde man ja eigentlich sagen, so, ne? Ja, instinktiv

1256
02:01:07,940 --> 02:01:16,020
würde man dann eigentlich sagen, so. Aber man bekommt dann Probleme, wenn man da jetzt

1257
02:01:16,020 --> 02:01:26,260
irgendwelche, irgendwelche Properties anlegen will. Weil, zum Beispiel bei Rectangle kannst

1258
02:01:26,260 --> 02:01:38,180
du sagen, x und x und y oder so. Und das ergibt ja bei Square jetzt gar nicht so viel Sinn,

1259
02:01:38,180 --> 02:01:42,260
weil da ist alles gleich. Ich mein, klar, kannst du in dem Fall auch machen. Ich muss

1260
02:01:42,260 --> 02:01:48,660
mir mal ein Beispiel dazu angucken, was? Ich weiß gar nicht mehr genau, nicht dass ich

1261
02:01:48,660 --> 02:02:00,620
jetzt Mist erzähle. Kreis-Elypse-Problem, genau. So. Haben wir ein gescheites Beispiel

1262
02:02:00,620 --> 02:02:12,620
für... Naja, gibt's da nicht, gibt's da nicht irgendeinen... Alter, ich übertreib's mal.

1263
02:02:12,620 --> 02:02:23,380
Ist das Lisp? Oder was ist das? MonkaS? Kreis-Elypse war was anderes wie Square-Rectangle. Ja, du

1264
02:02:23,380 --> 02:02:27,860
hast recht. Du hast, du hast, du hast recht. Man muss das mit Kreis-Elypse machen. Ich

1265
02:02:27,860 --> 02:02:39,020
glaub, dann versteht man's besser. What the hell? Was zum... Ja, also, machen wir's mal

1266
02:02:39,020 --> 02:02:43,220
so. Also normalerweise würd's jetzt sagen, was weiß ich, was heißt denn Elypse? So,

1267
02:02:43,220 --> 02:02:54,100
hier, machen wir so. Elypse? Du machst das doch auf Deutsch, Alter. Kreis, Kreis. So.

1268
02:02:54,100 --> 02:02:58,740
Normalerweise, oder wie können das, sag mal so, wie könnten das auch, wie könnten das,

1269
02:02:58,740 --> 02:03:03,060
wie könnten das auch mit Square-Elypse machen? Jetzt hast du halt das Problem, dass du beim

1270
02:03:03,060 --> 02:03:10,820
Kreis jetzt quasi... Ach, ich krieg nicht mal, ich krieg's nicht mal zusammen, wie das jetzt

1271
02:03:10,820 --> 02:03:14,860
genau war. Es ergibt zumindest keinen Sinn, weil du bei dem einen was brauchst, was beim

1272
02:03:14,860 --> 02:03:21,220
anderen drin ist und umgedreht auch nicht. Bei wem ist das noch nicht so lange her? Wer

1273
02:03:21,220 --> 02:03:38,740
weiß das noch? Kreis ist ein Spezialfall der Elypse. Ja, mathematisch gesehen, schon programmiertechnisch

1274
02:03:38,740 --> 02:03:48,460
funktioniert das nicht. Einerseits ist ein Kreis eindeutig eine Elypse, genau. Was dafür

1275
02:03:48,460 --> 02:03:53,700
sprich, dass es wiederum ein Subtyp der Elypse handelt, genau. Das funktioniert aber nicht,

1276
02:03:53,700 --> 02:03:57,420
das funktioniert aber nicht. Andererseits führt die Unterstützung einer nachträglichen

1277
02:03:57,420 --> 02:04:04,540
unabhängigen Veränderung der Länge, die für die Elypse sind, genau, genau. Das ist deswegen,

1278
02:04:04,540 --> 02:04:10,800
das kann man durchaus auch mit Square-Rectangle machen. So, hier hast du jetzt das Problem,

1279
02:04:10,800 --> 02:04:16,380
dass du in der Base-Klasse erlaubst X und Y zu setzen. Genau, jetzt ist es mir wieder

1280
02:04:16,380 --> 02:04:25,980
eingefallen. Das Problem ist jetzt, dass du damit den Square kaputt machst. So, deswegen

1281
02:04:25,980 --> 02:04:30,660
funktioniert das nicht. Also sprich, ich habe jetzt den Kram angelegt und wenn ich jetzt

1282
02:04:30,660 --> 02:04:41,900
den Square anlege, wenn ich jetzt den Square anlege, dann kann ich jetzt immer noch X und

1283
02:04:41,900 --> 02:04:49,340
Y setzen, was keinen Sinn ergibt. Weil ich könnte sagen, X ist 4 und Y ist 2, dann ist

1284
02:04:49,340 --> 02:04:55,740
das aber kein Square mehr. Ja, ja, dann kann man natürlich drum herumwursten. Du kannst

1285
02:04:55,740 --> 02:05:02,140
zum Beispiel sagen, ok, das hier ist Abstract oder irgendwie sowas oder Virtual, da muss

1286
02:05:02,140 --> 02:05:07,020
man es überschreiben, aber man kriegt es immer noch nicht weg. Man kriegt es immer

1287
02:05:07,020 --> 02:05:14,700
noch nicht weg. Also es ist auf jeden Fall da. Also du kannst das heiden vielleicht irgendwie.

1288
02:05:14,700 --> 02:05:30,300
Aber ich glaube, man sieht schon halbwegs das Problem. Ne, das funktioniert nie. Wir

1289
02:05:30,300 --> 02:05:32,780
können es mal anders machen. Wir müssen es nicht mit Properties machen. Wir können auch

1290
02:05:32,780 --> 02:05:37,100
sagen, ok, wir haben jetzt irgendwie einen Rectangle und da kannst du jetzt sagen, keine

1291
02:05:37,100 --> 02:05:53,580
Ahnung, void set X, oh, irgendwie void set Y. So, das ist jetzt da drin. Und das erbt

1292
02:05:53,580 --> 02:05:58,140
jetzt Square automatisch, ergibt aber keinen Sinn. Ich meine, was ich machen könnte ist

1293
02:05:58,140 --> 02:06:03,340
natürlich, ich könnte sagen, ok, die Dinger sind Virtual. Also was man zum Beispiel, also

1294
02:06:03,340 --> 02:06:08,620
eine Lösung, was man machen könnte, ich könnte sagen, die Dinger sind Virtual, zum Beispiel,

1295
02:06:08,620 --> 02:06:18,260
bin ich jetzt total verwirrt? Ach so, cannot be private, ja, ja. Also ich könnte zum Beispiel

1296
02:06:18,260 --> 02:06:24,220
irgendwie Virtual, dann kann ich sagen, dass ich die überschreibe, aber dann habe ich erstens

1297
02:06:24,220 --> 02:06:31,580
immer noch sinnlose Benamungen drinne bei einem Square, set X, set Y. So, und die Frage,

1298
02:06:31,580 --> 02:06:39,980
wie verwende ich das jetzt? Set X ergibt keinen Sinn, set Y ergibt eigentlich auch keinen

1299
02:06:39,980 --> 02:06:48,700
Sinn. Also müsste ich theoretisch dann sowas hier machen. Ich setze jetzt einfach nur public

1300
02:06:48,700 --> 02:06:55,700
set X, keine Ahnung. Also ich müsste quasi eine neue Set Methode machen für Square,

1301
02:06:55,700 --> 02:07:02,980
was beides setzt und dann müsste ich den anderen Kram überschreiben und darin eine

1302
02:07:02,980 --> 02:07:13,700
Exception werfen oder sowas, was auch bescheuert ist. Ja, also was man daran nur sieht ist,

1303
02:07:13,700 --> 02:07:18,340
nur weil die Sache logisch ist von der Vererbung her, heißt das nicht, dass es auch praktisch

1304
02:07:18,340 --> 02:07:35,020
gesehen Sinn ergibt. Es gibt noch ein Problem, mit C++ dank der Mehrfachverärmung. Ja,

1305
02:07:35,020 --> 02:07:39,380
das hast du auch. So, übrigens, es gibt da ein paar Ansätze für, wie man das lösen

1306
02:07:39,380 --> 02:07:46,540
könnte, dieses Problem. Allerdings nicht so, nicht mit dieser klassischen, wir machen

1307
02:07:46,540 --> 02:07:52,500
so eine Vererbungshierarchie. Umgekehrt, genau, lustigerweise umgekehrt würde das funktionieren

1308
02:07:52,500 --> 02:07:58,540
in dem Fall. Ja, du hast recht, umgekehrt würde es funktionieren, aber dann hast du

1309
02:07:58,540 --> 02:08:05,100
das Problem, dass du da eine Vererbungshierarchie hast, wo Rectangle, wo quasi ein Rechteck

1310
02:08:05,100 --> 02:08:15,620
von einem Quadrat erbt, was rein logisch gesehen irgendwie nicht intuitiv ist. Das würde in

1311
02:08:15,620 --> 02:08:21,980
dem Fall tatsächlich funktionieren. Du müsstest sagen, Square ist die Base-Klasse und Rectangle

1312
02:08:21,980 --> 02:08:28,580
ist quasi das abgeleitet davon. Das ergibt auch so keinen Sinn. Das ist das Problem.

1313
02:08:28,580 --> 02:08:34,340
Das hier mag vielleicht mathematisch richtig sein, ist aber objektorientierungstechnisch

1314
02:08:34,340 --> 02:08:41,340
Schwachsinn und umgedreht ergibt das ganze logisch keinen Sinn. Also, man könnte versuchen,

1315
02:08:41,340 --> 02:08:49,580
sowas hier zu lösen, zum Beispiel, wenn man jetzt sagt, Glass-Rectangle und ich bastel

1316
02:08:49,580 --> 02:08:56,380
jetzt mal beispielshaft was zusammen, das muss jetzt keinen großen Sinn ergeben, da

1317
02:08:56,380 --> 02:09:01,460
kann man nicht, man könnte es zum Beispiel mit Interfaces machen. Man könnte zum Beispiel

1318
02:09:01,460 --> 02:09:09,900
sagen, was weiß ich, musst du erstmal ein gescheites Beispiel dazu einfangen, benutzt

1319
02:09:09,900 --> 02:09:15,260
du eigentlich Wim? Ja, oft. Man könnte zum Beispiel sowas machen wie ein Interface,

1320
02:09:15,260 --> 02:09:27,420
wie, ich fände jetzt echt nichts Sinnvolles ein. Zumindest würde man diese Methoden in

1321
02:09:27,420 --> 02:09:36,900
das Interface auslagern und dann würde man halt noch ein Interface machen und dann könnte

1322
02:09:36,900 --> 02:09:44,220
man das quasi zusammenstücken aus Interfaces, was man haben will. Also, quasi mehr Composition

1323
02:09:44,220 --> 02:09:55,100
als Vererbung. Ja, sowas Dummes habe ich auch gedacht, Alter. Eirektangle, Apple oder so

1324
02:09:55,100 --> 02:10:01,700
ein Style ist aber nicht. Das könnte man sicherlich irgendwie zusammen basteln. Also,

1325
02:10:01,700 --> 02:10:07,900
in dem Fall würde ich sagen, ist es eindeutig, also anstatt sowas hier zu machen, sowas kann

1326
02:10:07,900 --> 02:10:15,340
man besser machen, da müsste ich mir im Vorfeld ein paar sinnvolle Beispiele für überlegen.

1327
02:10:15,340 --> 02:10:19,580
In dem Fall wäre es besser, tatsächlich, man macht hier nichts großartig mit Vererbung,

1328
02:10:19,580 --> 02:10:26,300
man könnte zum Beispiel eine Base-Klasse machen, Shape oder sowas, wo man dann zum Beispiel

1329
02:10:26,300 --> 02:10:33,340
sowas macht wie Public, Void, Draw oder sowas drin hat, was für alle Shapes gilt, aber

1330
02:10:33,340 --> 02:10:43,260
dass man die eigentlichen Eigenschaften dann irgendwie über Interfaces macht. Kann man

1331
02:10:43,260 --> 02:10:49,620
sich unterschiedliche Sachen mitmachen, also dass man mehr Composition macht als Vererbung,

1332
02:10:49,620 --> 02:11:06,780
aber das ist Big-Brain-Fragen. Shape würde ich wahrscheinlich Abstract machen. Das stimmt,

1333
02:11:06,780 --> 02:11:14,700
das stimmt, das ist jetzt wirklich zu Big-Brain. Kannst du die Funktion nicht privat machen

1334
02:11:14,700 --> 02:11:19,860
bei der ärmenden Klasse? Nein, das geht nicht. Das zeige ich jetzt noch ganz kurz, dann mache

1335
02:11:19,860 --> 02:11:22,340
ich noch mal schnell weiter, wir haben hier schon ein, zwei, drei, vier, das zeige ich

1336
02:11:22,340 --> 02:11:29,460
noch mal kurz. Das eigentliche Problem ist, dass du nicht was wegwerfen kannst, was in

1337
02:11:29,460 --> 02:11:36,940
der Base-Klasse drin ist. Ich müsste eigentlich sagen, Rectangle hat diese Methoden, aber

1338
02:11:36,940 --> 02:11:45,380
ich möchte nur eine der beiden haben in Square. Was leider nicht funktioniert ist, Override

1339
02:11:45,380 --> 02:11:53,940
Y und dann zu sagen Private. Das geht nicht, weil die Base-Klasse ja explizit sagt Public.

1340
02:11:53,940 --> 02:11:57,780
Es ist aber auch ganz logisch, dass das nicht funktioniert. Also wenn das in irgendwelchen

1341
02:11:57,780 --> 02:12:05,820
Programmiersprachen funktioniert, ergibt das logisch gesehen keinen Sinn, weil du kannst

1342
02:12:05,820 --> 02:12:11,540
den hier immer zur Base-Klasse casten und hättest dann wieder Zugriff drauf. Also wenn

1343
02:12:11,540 --> 02:12:14,700
das in irgendeine Programmiersprache erlaubt, ergibt es keinen Sinn. Selbst wenn das hier

1344
02:12:14,700 --> 02:12:19,260
Private erlaubt werde, würde ich Square, würde ich zu Rectangle casten, wäre es wieder Public.

1345
02:12:19,260 --> 02:12:23,620
Gibt keinen Sinn. Warum nicht die Verarbeitung umdreht? Ja, das ist in dem Fall tatsächlich

1346
02:12:23,620 --> 02:12:30,340
die Lösung, die ergibt aber aus mathematischer Sicht keinen Sinn. Dann würdest du nämlich

1347
02:12:30,340 --> 02:12:43,340
sagen, quasi ein Rechteck ist ein Quadrat, aber ein Rechteck ist kein Quadrat. Ja, man

1348
02:12:43,340 --> 02:12:46,940
kann den C++ tatsächlich noch ein bisschen tricksen. Ich könnte jetzt zum Beispiel sagen,

1349
02:12:46,940 --> 02:12:56,540
wie das jetzt funktioniert, New? Genau, ich könnte sagen Public Newvoid, dann würde es

1350
02:12:56,540 --> 02:13:02,540
das alte Heiben, das heißt aber nicht, dass es dann weg ist. Und sobald ich zur Base-Klasse

1351
02:13:02,540 --> 02:13:05,780
caste, ist es auch wieder weg. Vergesst es einfach Leute, vollkommen, vollkommen egal

1352
02:13:05,780 --> 02:13:14,340
für die Uhrzeit. Ihr habt recht, das ist für die Uhrzeit zu big brain time. Ja, das

1353
02:13:14,340 --> 02:13:20,540
würde auch Probleme sachen. Aber ich glaube, man hat es jetzt halbwegs verstanden. Wie

1354
02:13:20,540 --> 02:13:23,380
ich jetzt da drauf gekommen bin, ist eine gute Frage. Ich glaube, weil irgendjemand

1355
02:13:23,380 --> 02:13:27,820
gefragt hat, genau, es hat jemand gefragt, ob er, wie er ein Kartenspiel mit Klassen

1356
02:13:27,820 --> 02:13:32,580
implementieren würde. Und da kannst du, denke ich mal, relativ schnell in solche Probleme

1357
02:13:32,580 --> 02:13:45,020
laufen. Wir definieren das einfach um. Welches Tool zum Dokumentieren von Code würdest du

1358
02:13:45,020 --> 02:13:50,380
empfehlen? Gar keins. Guter Code dokumentiert sich selbst. Brauchen wir nicht. Overrated,

1359
02:13:50,380 --> 02:13:58,260
debated, outdated. Komplett useless. Und Tests kann man auch gleich weglassen. Api-Dokumentation

1360
02:13:58,260 --> 02:14:03,900
braucht auch keiner. Einfach richtig programmieren, ohne Fehler und schon ist das Problem gelöst.

1361
02:14:03,900 --> 02:14:16,700
Aber ernsthaft, alles immutable, genau. Nee, aber ernsthaft, das ist eine Frage, die ich

1362
02:14:16,700 --> 02:14:24,740
mir auch stelle, was da ein guter Mittelweg ist. Für viele Sachen, die wir auf der Arbeit

1363
02:14:24,740 --> 02:14:29,460
machen, haben wir einen Confluence, wo so Sachen drinstehen, wie zum Beispiel, warum

1364
02:14:29,460 --> 02:14:35,500
welche Technologie ausgewählt wurde oder sowas in der Richtung. Das ist aber auch nicht

1365
02:14:35,500 --> 02:14:39,580
der Weisheitsletzter Schluss, weil das quasi schon ab dem Abspeicher in der Seite veraltet

1366
02:14:39,580 --> 02:14:49,620
ist. Ich habe da keine gute Empfehlung. Das finde ich übrigens eine gute Taktik. Einfach

1367
02:14:49,620 --> 02:14:59,300
alles immutable. Leute, das ist so ein typischer Ausdruck. Ich würde mich nicht wundern, wenn

1368
02:14:59,300 --> 02:15:04,460
in ein, zwei Jahren das der neue Trend ist, dass das irgendwelche Super Big Brain Consultants

1369
02:15:04,460 --> 02:15:09,860
dann den Leuten verkaufen würden. Das heißt natürlich dann nicht einfach immutable machen,

1370
02:15:09,860 --> 02:15:16,220
das heißt dann entweder immutable design oder das ist eigentlich auch schon zu low level,

1371
02:15:16,220 --> 02:15:23,540
das braucht einen richtig, richtig Big Brain Name. Und dann kommen in ein, zwei Jahren

1372
02:15:23,540 --> 02:15:32,860
die ganzen Hyper Consultants und Conference Talker und sagen einfach alles immutable machen

1373
02:15:32,860 --> 02:15:39,940
und machen da ganze große Wissenschaft drum herum auf. Ja, das ist richtig, das ist richtig,

1374
02:15:39,940 --> 02:15:46,860
aber das ist ja damit nicht gemeint. Immutable by design, da müsste es, da müsste es, da

1375
02:15:46,860 --> 02:15:53,180
braucht es ein richtig gutes Passwort für, dass das funktioniert. Irgendwie mein Cloud,

1376
02:15:53,180 --> 02:16:02,780
sowas in Richtung Cloud Native, nur für immutable by design. Oder eine gute Abkürzung. Ja,

1377
02:16:02,780 --> 02:16:13,300
aber immutable by design ist zu immutable blockchain technology, was weiß ich, oder es

1378
02:16:13,300 --> 02:16:16,420
muss ja auch mit blockchain auch nichts zu tun haben, also kann der blockchain einfach

1379
02:16:16,420 --> 02:16:27,420
im Namen haben. Native immutability. Und dann müssen wir noch irgendeine Zertifizierung

1380
02:16:27,420 --> 02:16:35,180
uns dafür ausdenken. Ich weiß, Max riecht die Stonks, ja. Also wir schreiben erstmal

1381
02:16:35,180 --> 02:16:43,700
jetzt ein Manifest. Das Native, ich kann das nicht mal aussprechen. Das Native Immutability

1382
02:16:43,700 --> 02:16:52,580
Manifesto. Manifest brauchen wir jetzt. Und dann verkaufen wir das an irgendwelche Stonks,

1383
02:16:52,580 --> 02:17:03,020
Leute. Und dann machen wir, dann machen wir irgendwelche, irgendwelche YouTube, YouTube

1384
02:17:03,020 --> 02:17:08,980
Videos für, dann machen wir da so ein Titel, warum ich programmiere Hassen für Immutability

1385
02:17:08,980 --> 02:17:21,820
oder sowas. Jaja, jaja, nein, nein, es ging ja darum, es ging ja darum, fehlerfreie Software

1386
02:17:21,820 --> 02:17:26,700
zu programmieren. Und wenn man alles immutable macht, also quasi, ich weiß es, Leute, hard

1387
02:17:26,700 --> 02:17:34,700
coded by design quasi. Also man programmiert jede nur erdenkliche Situation, die auftreten

1388
02:17:34,700 --> 02:17:39,780
könnte, schon hart in sein Programm ein. Das heißt, das ganze Programm besteht dann

1389
02:17:39,780 --> 02:17:47,860
einfach nur noch aus ganz vielen Ifs. Ohne Input, nur Output. Und dann kann man endlich

1390
02:17:47,860 --> 02:17:52,580
sagen, wir haben fehlerfreie Programme. Die sind dann halt petabyte groß, weil jeder Fall

1391
02:17:52,580 --> 02:17:58,620
drin sein muss. Aber das ist, das wäre echt, das wäre so ein typischer, so ein typischer

1392
02:17:58,620 --> 02:18:07,740
IT-Buzzword, ähm, Trend, den ich mir wirklich gut vorstellen könnte in, in, in 1, 2 Jahren,

1393
02:18:07,740 --> 02:18:19,060
ja. Oh, hör mal auf, ich hab da mal ein Video zur Source Code von dem Zeug geguckt, ja.

1394
02:18:19,060 --> 02:18:29,380
Oh fuck, wir haben 21.50, Leute. Kann das sein, dass wir 2, 2 Stunden 15 lang nicht

1395
02:18:29,380 --> 02:18:45,660
mehr programmiert haben als ein JSON-Objekt? Ist das, ist das möglich, ja? Ich glaube,

1396
02:18:45,660 --> 02:18:50,860
wir haben wirklich nicht mehr gemacht, als ein JSON-Objekt anzulegen in 2,5 Stunden.

1397
02:18:50,860 --> 02:18:57,620
Das ist aber ganz schön schlecht, oder? Ich wäre nie fertig. Ich muss erfrieren über

1398
02:18:57,620 --> 02:19:04,460
morgen, Leute. Ich muss, ich, ich erfriere überhaupt über morgen, weil ich meine Heizung

1399
02:19:04,460 --> 02:19:12,380
nicht einschalten kann. Wir haben doch noch 10 Minuten aufgehend, it's huge productivity.

1400
02:19:12,380 --> 02:19:18,220
Immutable Design-Philosophie jetzt hier. Also, warum, warum ging das denn jetzt nicht? Ich

1401
02:19:18,220 --> 02:19:24,900
wollte nachgucken, warum das denn nicht funktioniert hat. Also, System Logs. Guck mal, jeder mag

1402
02:19:24,900 --> 02:19:30,380
nicht, weil could not pass temperature from. Warum? Ich hab das genau nach eurem Beispiel

1403
02:19:30,380 --> 02:19:36,420
gemacht. Ich hab's genau nach eurem kack Beispiel gemacht. Es funktioniert nicht. Wir setzen

1404
02:19:36,420 --> 02:19:40,740
einfach die Templates. Wie sind die Templates? Wir setzen die Templates. Mode, Template,

1405
02:19:40,740 --> 02:19:44,820
was machen wir jetzt? Easy, easy. Wir kriegen das hin, Leute. Wir kriegen das hin bis 22.

1406
02:19:44,820 --> 02:19:50,420
Ich sag's euch. Wollen wir, komm, wir machen, Paul meint ihr, ich krieg's bis 22 schon

1407
02:19:50,420 --> 02:19:57,180
hin. Also, dass das Thermostat da ist mit sinnvollen, äh, mit, ich mach mal jetzt den Paul auf,

1408
02:19:57,180 --> 02:20:05,860
mit sinnvollen, mit sinnvollen Defaultwerten. Geht's bis 22 Uhr. Ja, nein. Dauerabstimmung

1409
02:20:05,860 --> 02:20:27,420
eine Minute. Speedrun. Also, das brauchen wir. Dann brauchen wir Current Template. Also,

1410
02:20:27,420 --> 02:20:31,580
was brauchen wir sonst noch? Mode, Template, Template, Template, Template, Template, meine

1411
02:20:31,580 --> 02:20:36,300
Güte, wer hat's, wer hat's die Benamung wieder? Wer hat's die Benamung wieder ausgedacht?

1412
02:20:36,300 --> 02:20:46,380
Template. So, was muss denn in dieses Template jetzt rein? Äh, MQTT, Home Assistant, Value

1413
02:20:46,380 --> 02:20:50,820
Template. Braucht ihr irgendein Exempel für? Ja, predict, ich hab jetzt keine Zeit, ich

1414
02:20:50,820 --> 02:20:57,820
muss mich jetzt konzentrieren. Äh, wie geht denn das? Wie geht denn das? Exempel, ich

1415
02:20:57,820 --> 02:21:08,620
brauch Exempel, Exempel, please. Value, Value Jason, jawoll, Exempel, da ist es. Chaps, da,

1416
02:21:08,620 --> 02:21:26,180
Value Jason, Mode. Äh, Mode. Äh, äh, was ist das? Temp, Temp TPL, Temp TPL ist was?

1417
02:21:26,180 --> 02:21:32,820
Target Temp, Current Temp. Ach, was weiß ich? Äh, Stat, nee, Current Temp, Target Temp.

1418
02:21:32,820 --> 02:21:40,940
Warum sind die Dinge auch so kacke benannt? Nein, oh, der Chat ist jetzt halt hier großes

1419
02:21:40,940 --> 02:21:59,700
Vertrauen in mich. So, äh, okay. Bam, wer hat gesagt, dass es nicht funktioniert bis

1420
02:21:59,700 --> 02:22:05,100
22 Uhr? Wer hat gesagt, dass es nicht geht? Ich guck jetzt nach, wer abgestimmt hat. Instant

1421
02:22:05,100 --> 02:22:24,820
Warnung. Wer, wer hat, wer hat nicht beliebt hier? Funktioniert. Funktioniert, guckt. Zack.

1422
02:22:24,820 --> 02:22:34,740
Zwei Minuten hat's gedauert. Geht das leider? Ah ja. Ah, wir setzen, Moment, wir setzen

1423
02:22:34,740 --> 02:22:48,780
Mode, Sekunde, wir setzen Mode noch auf Heat. Noch besser. Komm mal da. Kann man sogar ausschalten

1424
02:22:48,780 --> 02:22:53,540
und anschalten. Also, die Commands funktionieren nicht, aber man sieht, dass das Setzen schon

1425
02:22:53,540 --> 02:23:07,260
mal klappt. Wie ihre 23,6 aufgerundet hat auf 24, was auch in Ordnung ist für die Anzeige.

1426
02:23:07,260 --> 02:23:13,260
Was soll er sonst hinschreiben? Ich mein, Funktionalität ist immer noch nicht gegeben.

1427
02:23:13,260 --> 02:23:20,380
Ich mein, es überträgt Daten, die einfach fake sind. Okay, okay, das nächste Mal müssen

1428
02:23:20,380 --> 02:23:25,460
wir uns dann aber wirklich. Publisht er schon die neuen Temps, die eingestellt werden?

1429
02:23:25,460 --> 02:23:30,140
Das gucken wir jetzt noch. Das gucken wir jetzt noch. Das gucken wir jetzt noch. Das

1430
02:23:30,140 --> 02:23:39,420
gucken wir jetzt noch, ob das funktioniert. Also, MQTT Client, kann er mal schreihen.

1431
02:23:39,420 --> 02:23:54,660
Sub, nee Filter, Filter, Filter. Zwar Filtern auf das Mode, Mode Command. Subscribe, Message.

1432
02:23:54,660 --> 02:24:03,260
So, also von der Idee her sollte er jetzt hier unten ausspucken, wenn ich den Modus umschalte.

1433
02:24:03,260 --> 02:24:12,540
Gucken wir mal, ob das funktioniert. Modus umschalten. Zack, zack. Bäm, auf Feed. Der

1434
02:24:12,540 --> 02:24:17,580
subscribt schon, wenn einer was klickt im Webinterface. Klar kannst du blöde Fragen

1435
02:24:17,580 --> 02:24:21,980
stellen, immer. Welche PC Hardware hast du? Ganz einfach. Da gibt es ein Video zu. Meine

1436
02:24:21,980 --> 02:24:27,500
PC Hardware ist vier Jahre alt und immer noch wunderbar. Top aktuell, auch für Spiele,

1437
02:24:27,500 --> 02:24:33,140
weil sich da nichts mehr tut. Korrekt, ich muss dir das Video nicht verlinken, aber

1438
02:24:33,140 --> 02:24:43,900
wenn du dir dummes Gelaber von mir ansehen willst zum Rechner. Da sind die Teile. Massive

1439
02:24:43,900 --> 02:24:53,580
Kameraarbeit fällt mir da grad wieder auf. Ja, ich hab bloß mehr RAM drinne. Ich hab

1440
02:24:53,580 --> 02:25:03,740
2x60, 32G drinne. Aber hier ist das alles. Also Frage, Chat, was war? Was heißt war?

1441
02:25:03,740 --> 02:25:16,540
Das kommt ganz entscheidend auf die Programmiersprache an. Was die damit meint. Also war in JavaScript

1442
02:25:16,540 --> 02:25:29,260
ist was ganz anderes als war in C Sharp. Und noch was anderes wie in Go. Also das hängt

1443
02:25:29,260 --> 02:25:40,100
von der Programmiersprache ab. Ja war ist die Abkürzung für Variable meistens. Das

1444
02:25:40,100 --> 02:25:47,380
hängt von der Programmiersprache ab was das ist. Also in JavaScript ist es die oldschooligste

1445
02:25:47,380 --> 02:25:54,820
Variablen Zuweisung oder Variablen Deklaration überhaupt. War war glaube ich das erste was

1446
02:25:54,820 --> 02:25:58,420
es gab in JavaScript oder so. Das verwendet glaube ich keiner mehr. Heute wenn man cool

1447
02:25:58,420 --> 02:26:04,180
ist verwendet man glaube ich let in JavaScript und const. Kein war mehr, aber war kann man

1448
02:26:04,180 --> 02:26:10,340
verwenden in JavaScript. Aber JavaScript ist nicht so konsistent. In C Sharp ist es eine

1449
02:26:10,340 --> 02:26:14,940
Abkürzung. Und zwar das kann ich dir zeigen. In C Sharp kannst du zum Beispiel sowas schreiben.

1450
02:26:14,940 --> 02:26:23,260
War wir machen das jetzt mal richtig deutscher YouTube Programmier Tutorial. Zahl gleich

1451
02:26:23,260 --> 02:26:32,140
eins. Kannst du in C Sharp machen. Die Sache ist jetzt die, dass dieses war eigentlich

1452
02:26:32,140 --> 02:26:36,500
so tut als wäre das irgendein Typ wo man alles reinschreiben kann. Wenn man das von

1453
02:26:36,500 --> 02:26:40,540
JavaScript kennt. Man kann da aber nicht alles reinschreiben. Wenn ich jetzt zum Beispiel

1454
02:26:40,540 --> 02:26:46,180
versuche in Zahl irgendeinen Text reinzuschreiben dann sagt er ne ne ne ne ne. Das geht nicht

1455
02:26:46,180 --> 02:26:53,220
weil du kannst nicht einfach den Text in eine Zahl umwandeln. Das heißt in C Sharp ist das

1456
02:26:53,220 --> 02:26:56,980
nach wie vor alles typisiert. Und wenn ich jetzt zum Beispiel hier mal drüber gehe

1457
02:26:56,980 --> 02:27:02,300
und gucke was ist denn das eigentlich. Dann sagt er mir ja klar. Zahl. Sag mir das ist

1458
02:27:02,300 --> 02:27:09,380
ein Int. Also im Prinzip ist war in C Sharp eigentlich nur eine Abkürzung dafür, dass

1459
02:27:09,380 --> 02:27:14,340
ich mir es erspare den Datentyp hinzuschreiben. Ich mein bei Int macht es jetzt vielleicht

1460
02:27:14,340 --> 02:27:19,980
nicht so viel Sinn. Ist genauso lang. Aber ich könnte halt zum Beispiel auch sowas hier

1461
02:27:19,980 --> 02:27:26,260
machen. Text reinschreiben. Da könnte ich auch war davor schreiben. Wenn ich jetzt gucke

1462
02:27:26,260 --> 02:27:36,540
jetzt ist es ein Text. Also es ist es ist in C Sharp ist es eigentlich bloß eine. Syntaktische.

1463
02:27:36,540 --> 02:27:44,460
Syntaktischer Zucker. Dass ich meine Datentypen nicht hinschreiben muss. Ja um die ganze Sache

1464
02:27:44,460 --> 02:27:50,660
aber jetzt nochmal. Noch ein bisschen weiter auszuführen schnell. Es gibt in C Sharp seit

1465
02:27:50,660 --> 02:27:55,780
der letzten C Sharp Version gibt es den umgedrehten Fall. Das hier kennt ja jeder.

1466
02:27:55,780 --> 02:28:09,620
Sagen wir mal. War. New. List. Int. 1 2 3 4. Was das hier jetzt ist. Liste. Was das hier

1467
02:28:09,620 --> 02:28:15,140
jetzt ist, ist eine Liste mit den Zahlen 1 2 3 4. Das kennt glaube ich jeder. Wisst

1468
02:28:15,140 --> 02:28:19,460
ihr auch, dass das umgedreht geht. Wisst ihr auch, dass ihr sagen könnt. Das geht aber

1469
02:28:19,460 --> 02:28:23,860
erst seit einem der letzten C Sharp Versionen. Wisst ihr, dass ihr sagen könnt. Also wir

1470
02:28:23,860 --> 02:28:29,460
lassen jetzt mal das Initialisieren weg. Also das hier ist jetzt quasi eine Liste mit Zahlen.

1471
02:28:29,460 --> 02:28:36,620
Also eine Liste mit Ints, in die ich beliebig viele Zahlen reinschreiben kann. Liste. Add.

1472
02:28:36,620 --> 02:28:43,020
2. So. Das geht das geht auch umgedreht. Ich kann auch sagen. Liste. Int. Liste. Und

1473
02:28:43,020 --> 02:28:48,900
dann sage ich einfach nur noch New. Dass es das umgedrehte war. Der erkennt anhand der

1474
02:28:48,900 --> 02:28:58,300
linken. An der linken Seite, dass das eine Liste ist aus Int. Und macht daraus im Endeffekt

1475
02:28:58,300 --> 02:29:04,260
das da. Also es reicht, wenn ich jetzt nur noch New schreibe, weil er weiß, dass das

1476
02:29:04,260 --> 02:29:09,740
eine Liste ist. Was natürlich nicht funktioniert, ist die Kombination von beiden. Dann sagt

1477
02:29:09,740 --> 02:29:15,580
er ja gut. Ja was denn jetzt. Also das kann ja logischerweise nicht funktionieren. Ich

1478
02:29:15,580 --> 02:29:24,660
kann nicht links quasi das per, wie soll man sagen, per Ableitung zuweisen lassen und

1479
02:29:24,660 --> 02:29:31,460
rechts auch. Das geht natürlich nicht. Na klar geht das in.NET Core. Das ist.NET Core

1480
02:29:31,460 --> 02:29:40,860
hier. Das geht in.NET Core natürlich. Achso. Ja du hast recht. In.NET Core geht das nicht,

1481
02:29:40,860 --> 02:29:49,100
weil es heißt jetzt ja.NET. Es heißt jetzt ja.NET. Es heißt ja nicht mehr.NET Core.

1482
02:29:49,100 --> 02:29:55,900
Übrigens, wer sich jetzt fragt wofür man das braucht. In dem Fall ist es natürlich

1483
02:29:55,900 --> 02:30:01,580
ziemlich bescheuert. In dem Fall ist es ziemlich bescheuert. Aber zum Beispiel, wenn ihr eine

1484
02:30:01,580 --> 02:30:12,620
Klasse habt, ja, Public Class Twitch Chat und da drinne habt, sagt ihr dann zum Beispiel

1485
02:30:12,620 --> 02:30:23,900
Private Read Only Liste, Int oder hier String String. Ich kann ja schreiben ja. User, dann

1486
02:30:23,900 --> 02:30:29,140
könnt ihr das jetzt so machen. Das ist natürlich schon nice, weil wahr ist in dem Kontext nicht

1487
02:30:29,140 --> 02:30:35,340
erlaubt in sich haben. Hier ist es ganz praktisch. Früher musste man immer hier sowas hinschreiben.

1488
02:30:35,340 --> 02:30:42,620
Das braucht man jetzt nicht mehr. Es reicht jetzt einfach New. Das ist das tatsächlich

1489
02:30:42,620 --> 02:30:53,340
ganz nice. Das geht übrigens auch bei Funktionen. Also wenn ihr jetzt sowas habt wie Void. Bloop.

1490
02:30:53,340 --> 02:31:03,740
Und die Funktion erwartet hier eine Liste. Und ihr wollt es jetzt übergeben. Ihr wollt

1491
02:31:03,740 --> 02:31:11,180
da was Neues anlegen. Das ist jetzt bedacktes Beispiel, aber es funktioniert. Ach nee, das

1492
02:31:11,180 --> 02:31:22,820
ist ja anders herumschreiben. So und jetzt sage ich T. Jetzt sage ich T Bloop. Dann kann

1493
02:31:22,820 --> 02:31:28,580
ich einfach nur hier sagen New. Ist zwar so ziemlich die hässlichste Variante, aber das

1494
02:31:28,580 --> 02:31:36,300
funktioniert auch an anderen Stellen. Ja, C++ ist eine richtige Scheißsprache. Hast du gut

1495
02:31:36,300 --> 02:31:41,620
erkannt. Ja, das funktioniert damit. Und auch wenn das hier, also warum das ein richtig cooles

1496
02:31:41,620 --> 02:31:46,380
Feature ist, auch wenn das hier jetzt noch relativ kurz aussieht. Es gibt manchmal Dinge,

1497
02:31:46,380 --> 02:31:51,900
die werden ein bisschen länger, mal vielleicht ein bisschen übertriebenes Beispiel, was

1498
02:31:51,900 --> 02:31:57,500
auch nur halbwegs neu ist wie Sharp Features verwendet. Meinung wir wollen das ganze Multithreaded

1499
02:31:57,500 --> 02:32:04,020
machen. Deswegen nehmen wir jetzt hier ein Concurrent Dictionary. Mit einem Key von String,

1500
02:32:04,020 --> 02:32:10,940
allerdings einem Value aus einem Tupel von Int und Int. Und wir geben denen sogar noch

1501
02:32:10,940 --> 02:32:19,060
einen Namen. Int ist was weiß ich. Start und End. So jetzt wirds schon ein bisschen viel,

1502
02:32:19,060 --> 02:32:26,660
oder? User. Normalerweise müsste ich jetzt sowas hier machen. Im alten C Sharp. Müsste

1503
02:32:26,660 --> 02:32:32,300
ich jetzt sowas hier schreiben. Das kann keine Sau mehr lesen, oder? Also das ist das wirklich

1504
02:32:32,300 --> 02:32:39,940
vorbei. Also bei dieser Zeile ist jetzt wirklich Ende. So, jetzt kann ich einfach so, wowowowowowow.

1505
02:32:39,940 --> 02:32:44,380
Jetzt kann ich einfach so schreiben. Und jetzt ist das natürlich schon deutlich besser lesbar.

1506
02:32:44,380 --> 02:32:57,220
Wie machst du das, dass da Topic oder Item steht? Ey, das ist, das macht Rider standardmäßig

1507
02:32:57,220 --> 02:33:04,460
so hier, die IDE. Aber das ist natürlich recht praktisch jetzt an der Stelle. Weil das mag

1508
02:33:04,460 --> 02:33:09,900
jetzt vielleicht ein bisschen konstruiert sein hier. Aber ganz so abwegig ist das nicht,

1509
02:33:09,900 --> 02:33:15,180
sowas hier zu haben. Das kann ich mir sogar, das würde sagen, kann ich mir gut vorstellen,

1510
02:33:15,180 --> 02:33:26,260
dass es so oder so ähnlich recht oft vorkommt. Wann ist das dazu gekommen? Ich glaube beim

1511
02:33:26,260 --> 02:33:56,180
letzten, ich glaube bei.NET 5, bei C Sharp, was ist das? Acht? Oder neun? Seine 3-Configur auf Github aktuell fast. Also das ist wirklich nice. Und die haben, die haben wirklich, das muss ich ja mal den Leuten bei C Sharp, bzw. den C Sharp Language Designern wirklich mal zu gut halten. Die schaffen das,

1512
02:33:56,180 --> 02:34:07,060
seit 20 Jahren Sprache zu designen, die aktuell bleibt, auch mit aktuellen Gedanken und aktuellen

1513
02:34:07,060 --> 02:34:14,500
Features. Also C Sharp wird ja, hat sich ja deutlich in eine mehr funktionale Richtung

1514
02:34:14,500 --> 02:34:20,940
entwickelt als früher. Früher war C Sharp rein objektorientiert. Mittlerweile hast

1515
02:34:20,940 --> 02:34:25,620
du ziemlich viel funktionale Anleihen. Wusstet ihr zum Beispiel, dass man Folgendes schreiben

1516
02:34:25,620 --> 02:34:30,020
kann? Muss ich jetzt noch zeigen. Also mal angenommen, ihr habt hier jetzt, nehmen wir

1517
02:34:30,020 --> 02:34:35,620
mal hier. Oder machen wir es mal, machen wir es mal. Wir nehmen hier unsere Twitch Chat

1518
02:34:35,620 --> 02:34:46,540
Klasse. So, da gibt es jetzt ne Funktion drinne. Public void add user. Und ihr wollt hier ein

1519
02:34:46,540 --> 02:34:56,460
String user. User oder Name oder so. Das kann ja durchaus mal vorkommen. So jetzt müsstet

1520
02:34:56,460 --> 02:35:06,260
ihr ja normalerweise gucken, hey, if name ist das 0, also vielleicht übergibt hier irgendjemand

1521
02:35:06,260 --> 02:35:15,300
was mit 0, dann sagen wir throw new argument exception lag nicht. Das müsste man die ganze

1522
02:35:15,300 --> 02:35:21,580
Zeit machen. Und ich zeige jetzt nicht nullable reference types oder sonst was, sondern eine

1523
02:35:21,580 --> 02:35:25,380
Sache, wo man sieht, dass sich C Sharp ein bisschen in die funktionale Richtung entwickelt.

1524
02:35:25,380 --> 02:35:35,540
Anstatt name gleich gleich 0 zu schreiben, kann ich auch schreiben, name is not 0. Das

1525
02:35:35,540 --> 02:35:44,300
ist auch neu. Funktioniert jetzt. Jaja, ich mach Heiler. Das liegt aber daran, nicht,

1526
02:35:44,300 --> 02:35:48,140
dass die irgendwie die Sprache aufgebohrt haben. Das hier ist jetzt die Sharp Pattern

1527
02:35:48,140 --> 02:36:00,700
Matching. Das heißt, die bessere Variante wäre, sowas zu prüfen wie Name is String.

1528
02:36:00,700 --> 02:36:09,100
Ja, sowas, sowas könntest du zum Beispiel prüfen oder du könntest sogar daraus eine

1529
02:36:09,100 --> 02:36:15,380
eigene Variable machen, wenn ich jetzt nicht ganz falsch liege, wo du dann in dem If drauf

1530
02:36:15,380 --> 02:36:22,380
zugreifen kannst. Also das ist in vielen Stellen haben die da viel Funktionales eingebaut.

1531
02:36:22,380 --> 02:36:31,220
Geht die Schreibweise New auch mit non-primitive Types? Ich meine, eine Liste ist kein Primitive

1532
02:36:31,220 --> 02:36:44,500
Type. Geht in Richtung Python? Naja, ein bisschen vielleicht. Ich meine, guck mal,

1533
02:36:44,500 --> 02:36:49,140
das hier ist mein Main-File. Ich brauche nun nicht mal meine Main-Methode in C Sharp jetzt.

1534
02:36:49,140 --> 02:36:56,300
Das ist auch glaube ich seit Version 9. Gab es mit JetPrint Annotation nicht sogar ein

1535
02:36:56,300 --> 02:37:02,740
Not-Null? Kann sein, was man jetzt allgemein in C Sharp machen kann, ist die Geschichte,

1536
02:37:02,740 --> 02:37:14,980
aber das ist ein komplett eigenes Thema. Also da kann man wirklich einiges machen und

1537
02:37:14,980 --> 02:37:24,180
die haben es halt geschafft, deswegen müsste ich immer echt mal einen Hut ziehen. Von den

1538
02:37:24,180 --> 02:37:27,780
C Sharp-Language-Designern, die haben das wirklich geschafft, über 20 Jahre hin, mit ein paar

1539
02:37:27,780 --> 02:37:33,460
kleinen Pausen zwischendurch, wo Microsoft nicht so genau wusste, was sie machen sollten.

1540
02:37:33,460 --> 02:37:39,620
Aber spätestens seitdem sie es Open Source gemacht haben, kann man wirklich nur den Hut

1541
02:37:39,620 --> 02:37:46,140
vor den C Sharp-Language-Designern ziehen. Willst du dich einfach ausgehen, VM? Die haben

1542
02:37:46,140 --> 02:37:50,780
es wirklich geschafft, die Sprache aktuell zu halten und neue Features einzubauen. Ich

1543
02:37:50,780 --> 02:37:58,380
meine, Async Await kommt aus der C Sharp-Ecke. Wo ist denn das Problem, VM? Ah, jetzt. Async

1544
02:37:58,380 --> 02:38:02,140
Await kommt aus der C Sharp-Ecke, das ist mittlerweile in Java drin, ich glaube in Rust

1545
02:38:02,140 --> 02:38:06,620
mittlerweile auch. Java Script, meine ich, ist es drin. In Rust mittlerweile auch, in

1546
02:38:06,620 --> 02:38:11,380
Java, weiß ich es nicht. Also da hat sie schon einiges getan, die letzten Jahre über.

1547
02:38:11,380 --> 02:38:34,700
Weiß ich nicht, gute Frage. Das letzte Mal hat es noch rumgebackt bei mir. Die beste

1548
02:38:34,700 --> 02:38:43,620
Unterstützung für Async Await hat immer noch C++. Und wisst ihr auch warum? Die haben Async

1549
02:38:43,620 --> 02:38:49,180
Await Unterstützung eingeführt, aber nichts in der Standard Library hat Async Await implementiert.

1550
02:38:49,180 --> 02:39:04,660
Typische C++ Scheiße, Alter. Ist echt so. Typische C++ Kacke. Die haben einfach kein

1551
02:39:04,660 --> 02:39:10,140
Async Await. Wie gesagt, wir denken uns was aus, wie man Async Await in C++ machen könnte,

1552
02:39:10,140 --> 02:39:16,700
aber einbauen tun wir es nicht. Und einbauen brauchst du jetzt irgendwelche komischen Third

1553
02:39:16,700 --> 02:39:24,780
Party Libraries und es funktioniert. Es ist wirklich. Also C++, ganz im Ernst. Ich will

1554
02:39:24,780 --> 02:39:29,620
jetzt nicht von Anfang an, sonst sitze ich um 23 Uhr immer noch da. Aber es ist wirklich

1555
02:39:29,620 --> 02:39:34,780
der Wahnsinn. Nein, nein, nein, nein. Das eine hat mit Microsoft überhaupt nichts zu tun.

1556
02:39:34,780 --> 02:39:44,940
C Sharp ist von Microsoft C++, wird von einem Gremium standardisiert, weil sie nicht weiß,

1557
02:39:44,940 --> 02:39:53,860
was es eigentlich macht. Nichts gescheites auf jeden Fall. C++ ist nicht von Microsoft.

1558
02:39:53,860 --> 02:40:09,340
Microsoft hat einen C++ Compiler. Einer von vielen. Ich muss das Video mit der Endpunkt

1559
02:40:09,340 --> 02:40:14,060
hochladen. Ich muss das aber noch fertig schneiden. Ich hatte heute keine Zeit für. Nein, nein,

1560
02:40:14,060 --> 02:40:20,980
C++ ist nicht von Microsoft. Auch C ist nicht von Microsoft. Also so an Programmiersprachen,

1561
02:40:20,980 --> 02:40:27,060
die Microsoft verbrochen hat, fällt mir als erstes die C Sharp ein und danach Visual Basic

1562
02:40:27,060 --> 02:40:42,140
und alle seine Abkömmlinge. Gibt es noch C++ Compiler neben GZ, CLVM und Microsoft? Ja,

1563
02:40:42,140 --> 02:40:49,180
es gibt für ganz viele abgedrehte Plattformen C Compiler. Aber das dürften die verbreitetsten

1564
02:40:49,180 --> 02:40:56,980
sein. Mit ihren Abwandlungen. Also beispielsweise der ESP32 für diese extensa Plattform, was

1565
02:40:56,980 --> 02:41:14,900
auch immer, verwenden GCC. Mit Custom Zeug für ihren Gram und Rust verwenden LLVM. Und

1566
02:41:14,900 --> 02:41:19,900
das sind so mit den verbreiteten Sachen. LLVM ist ja eher so eine Compiler Architektur, wo

1567
02:41:19,900 --> 02:41:25,420
man seine eigenen Sachen drauf basteln kann..NET ist auch Microsoft, das ist richtig.

1568
02:41:25,420 --> 02:41:35,380
.NET ist die Runtime, wo unter anderem C Sharp drauf läuft. Aber das hat mit der Sprache

1569
02:41:35,380 --> 02:41:44,180
nichts zu tun. F Sharp, genau, ja, hast recht. Ich sag Ruby on Rails, muss ich zum Glück

1570
02:41:44,180 --> 02:41:51,340
nicht mehr machen. Ruby, finde ich, ist eines der besten Sprachen, die es gibt. Ruby on

1571
02:41:51,340 --> 02:42:01,140
Rails bin ich ganz happy, dass ich damit nichts mehr machen muss. Ihr wisst ja, ich verwende

1572
02:42:01,140 --> 02:42:11,900
den Swagstack. Der Swagstack ist SQLite, Vue.js, ASP.NET Core und CraftQL. Das Swagstack.

1573
02:42:11,900 --> 02:42:17,700
So Leute, ich geh jetzt ins Bett. Wir sehen uns. Schön, dass so viele mit dabei gewesen

1574
02:42:17,700 --> 02:42:45,620
sind. Bis die Tage. CU, machts gut.

