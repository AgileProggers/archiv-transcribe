WEBVTT

01:00.000 --> 01:15.000
Das war's für heute. Vielen Dank für's Zuhören und bis zum nächsten Mal.

01:30.000 --> 01:59.000
So, da bin ich wieder. Ich hab euch gesagt, heute Abend gibt's noch mal

01:59.000 --> 02:07.000
einen kleinen Stream, aber aus 69 Zuschauer. Huge. Ich mal gucken, wie lange wir dafür

02:07.000 --> 02:12.000
brauchen. Also ich hab mir ein Video von Microsoft eingeschaut. Ich glaube, so viel gibt's da

02:12.000 --> 02:19.000
nicht zu gucken im ersten Preview. Aber probieren wir mal aus. Erstmal das ganz bisschen kleiner

02:19.000 --> 02:24.320
machen. Ich hab grad gefuttert, Leute. Ich bin mega voll gefressen. Ich hab heute Mittag

02:24.320 --> 02:28.440
schon so viel gefuttert und heute Abend jetzt noch mal. Heute hab ich Garantie nicht abgenommen.

02:28.440 --> 02:38.440
Ich weiß nicht, ob wir wirklich Windows 11 nehmen sollen. Wir können das mal ausprobieren.

02:38.440 --> 02:46.200
Wir gucken mal, ob das unter Windows 11 läuft. Probieren wir mal aus. Zweifelsfall haben

02:46.200 --> 02:57.120
wir hier noch ein anderes Windows. Windows 11. Warum hab ich da Steam installiert? Ach,

02:57.120 --> 03:11.560
das war die WinGet-Testkiste. Läuft bestimmt, denke ich auch. Denke ich auch, dass das läuft.

03:11.560 --> 03:20.320
Also, ich zeige euch mal was, Leute. Und zwar, es gibt jetzt seit gestern gibt es eine oder

03:20.320 --> 03:30.360
seit vorgestern eine Preview-Version von Wishlist Studio 2022. Ich persönlich verwende ja schon

03:30.360 --> 03:37.760
eine ganze Weile kein Wishlist Studio mehr, weil ich bin komplett auf Linux als Hauptplattform

03:37.760 --> 03:42.840
und Rider als, also fürs Programmieren und Rider als IDE umgestiegen, was dort Netz-Sachen

03:42.840 --> 03:49.760
angeht. Übrigens, das Video von Microsoft für die 2022er Preview ist richtig schlecht.

03:49.760 --> 03:58.280
Guckt euch das mal an. 22 Sekunden YouTube-Video ohne Sound, ohne alles. 64bit ist es angeblich

03:58.280 --> 04:03.520
jetzt. Es gibt irgendwie ein neuer Intelli-Code. Ich weiß nicht, warum es Intelli-Code ist.

04:03.520 --> 04:08.680
Früher hat sich das Ganze IntelliSense genannt, aber wahrscheinlich hat sich Microsoft gedacht,

04:08.680 --> 04:15.040
IntelliSense ist einfach zu oldschool. IntelliCode mit AI-powered Completion ist viel besser.

04:15.040 --> 04:22.720
Warum auch immer, also ich habe den Vorteil noch nicht so genau erkannt von AI-Code-Completion.

04:22.720 --> 04:32.600
Ich weiß, es gibt ein paar Ansätze. Es gibt ein paar Ansätze dafür. Aber ja, man hat AI-Dev-Verbrauch,

04:32.600 --> 04:38.560
ich weiß nicht. Also die Sachen zu sortieren und die Möglichkeit zu bieten, zu sortieren

04:38.560 --> 04:44.920
nach was am meisten benutzt wird, ist ja vollkommen in Ordnung. Aber dass das jetzt irgendwie

04:44.920 --> 04:50.520
kontextbasiert wüsste, was ich als nächstes programmieren will, da habe ich noch so meine

04:50.520 --> 05:03.200
Zweifel, ja. So, es ist möglich, dass man jetzt.NET 6 und.NET Maui drin direkt programmiert.

05:03.200 --> 05:06.600
Weiß nicht, ob man ausprobieren kann. Ich glaube auch nicht, dass es schon drinne ist.

05:06.600 --> 05:12.680
Zumindest, ich persönlich bin eh nicht sonderlich scharf auf.NET Maui, weiß nicht, mal gucken.

05:12.680 --> 05:24.760
DakuX-TV, danke schön für 18 Monate Subscription. Excellent Hyper-Subscription. Neo-Wim-Only,

05:24.760 --> 05:31.080
also man kann ja, ich mag ja Wim. Aber für.NET-Entwicklung genauso wie für Java-Entwicklung

05:31.080 --> 05:45.400
oder sowas ist Wim kacke. Die trockene Luft von der Klimaanlage sackt, aber dafür ist

05:45.400 --> 06:00.360
es wenigstens schön kühle 23,8 Grad hier. Was ist.NET-Maui? Der Versuch von Microsoft

06:00.360 --> 06:05.280
eine Cross-Platform GUI-Framework zu basteln, was lustigerweise nicht Cross-Platform ist,

06:05.280 --> 06:21.760
weil es nicht auf Linus läuft. Und leider, und leider, meiner Meinung nach auch den falschen

06:21.760 --> 06:28.200
Ansatz verfolgt. Platter macht es richtig, macht es richtig, Maui unter Forksamarin war,

06:28.200 --> 06:34.800
ist meiner Ansicht nach der falsche Ansatz. Noch eine GUI-Framework von MS, ja, zumal

06:34.800 --> 06:46.440
die es ja noch nicht, die man unter Windows geschissen kriegen. So, ich, ich starte das

06:46.440 --> 06:51.680
Ding mal neu. Ihh, das ist so hässlich mit die, warte mal, wie, Moment, wie, wie restartet

06:51.680 --> 07:00.160
man das jetzt überhaupt? Leute, es gibt Updates für Windows 11, soll ich die installieren

07:00.160 --> 07:15.760
oder prickt es mir das System? Boards Jam? Äh, Update, da steht doch immer da, was es

07:15.760 --> 07:24.680
für Updates gibt, oder? Das Kumulativ-Update für.NET, für Windows 10 Version Next. Ich

07:24.680 --> 07:30.520
hab doch gesagt letztens, ich hab letztens noch gesagt, das sieht aus wie Windows 10

07:30.520 --> 07:38.120
X und Windows 10 zusammengemercht und das ist es anscheinend auch. Exposed Microsoft,

07:38.120 --> 07:46.040
ja gut, Update & Restart, wollen wir mal nicht so sein. Snapshot, Snapshot ist für Noobs,

07:46.040 --> 07:50.800
YOLO-Update. Wenn nicht, ich hab ja noch ein Windows 11 VM, in dem wir es probieren können.

07:50.800 --> 07:56.800
Also, ich werde es mir nicht auf meinem Desktop installieren, weil es garantiert wird irgendwie

07:56.800 --> 08:03.800
gedürnt installiert, was ich nicht haben will. Macht das in der VM und gut ist. Bill hat

08:03.800 --> 08:12.400
Git Merge gemacht. Ich glaube Bill hat gerade Probleme, mit Merge hat es Bill gerade nicht

08:12.400 --> 08:19.640
so, der ist gerade dabei seine Ehe quasi zu, also das Gegenteil von Mergen, gibt es ja Forken,

08:19.640 --> 08:35.440
der forkt sein, der forkt gerade. Mergen. So, warum geht Xbox auf? What the fuck? Nein,

08:35.440 --> 08:44.640
Xbox, gehst du weg? Kann ich nur sagen, Xbox. Ok, jetzt schauen wir mal, ob man das Ganze

08:44.640 --> 08:53.720
in der Windows 11 installieren kann. Wishful Studio 2022. Nach guter Microsoft Tradition

08:53.720 --> 09:00.080
müsst du Wishful Studio 2022 eigentlich jetzt mal rauskommen. Also zumindest FIFA, FIFA

09:00.080 --> 09:06.520
Style technisch wäre das schon längst der Fall gewesen. Will das nicht auf Deutsch

09:06.520 --> 09:28.080
laden? Kann ich das nicht auf Englisch laden? Ja, besser. Community. Jawoll, save. Ok, zeige

09:28.080 --> 09:34.760
ich mal her. Ok, das ist immer noch ein Elektron Installer. Windows 11 Wishful Studio, willkommen

09:34.760 --> 09:43.360
in der Zukunft. Ja, wir sind schon, wie sagt es, mir starft nicht? Ach ne, ne, ne, ne, ne,

09:43.360 --> 09:48.320
immer noch. Ja Leute, das ist die Zukunft hier. Nächstes Jahr sieht es für alle euch,

09:48.320 --> 09:54.760
sieht es jetzt bei euch, für alle von euch so aus. Kann nicht mal normal reden. Der Installer

09:54.760 --> 10:14.240
ist mittlerweile WPF. Wirklich? So ganz funktioniert das aber nicht hier oben, oder? Also was wollen

10:14.240 --> 10:25.560
wir denn haben?.NET und Web Development? Alter Mann. Richtig, richtig thick..NET Desktop

10:25.560 --> 10:33.640
Development? Wollen wir testen? Das geht eh relativ schnell im Download. Und? Muss man

10:33.640 --> 10:41.440
irgendwie Cross Platform GUI oder so? Gibt es irgendwie Cross Platform? Gab es da nicht

10:41.440 --> 10:52.160
eine Cross Platform Häkchen? Gibt es nicht mehr, oder? Vergiss dir Plus Plus. Nein, nein,

10:52.160 --> 11:07.280
nein, nein, nein. Ich werde am Leben da, kannst dir Plus Plus machen. Ok, das ist wirklich

11:07.280 --> 11:13.560
ein WPF Installer. Moment, Moment, das glaube ich nicht. Komm mal einen Prozess Explorer.

11:13.560 --> 11:23.440
Mal schauen, mal schauen, ob das wirklich nach WPF aussieht. Sys, Sys Internals Prozess

11:23.440 --> 11:31.800
Explorer, ja genau. Warum alle auf abgerundete Ecken stehen, ich weiß nicht. Wahrscheinlich

11:31.800 --> 11:36.800
ist es denen relativ egal, die wollen einfach was anderes haben. Und die haben sich gedacht,

11:36.800 --> 11:40.760
wir hatten jetzt schon Ecken, die transparent waren und wir hatten eckige Ecken und jetzt

11:40.760 --> 11:50.880
brauchen wir runde Ecken. Ja, ich agree. So, zeig mal, hier ist der Visual Studio Installer,

11:50.880 --> 12:03.760
ist das WPF? Äh, ups, falsch rum. Ja, Setup. Ja, so wirklich erkennen tut man da nichts.

12:03.760 --> 12:08.200
Es sieht auf jeden Fall nicht so krass Browser-mäßig aus, weil Browser-technisch hätte es jetzt

12:08.200 --> 12:16.400
erstmal 50 Background-Dinger, das könnte schon durchaus WPF sein. Ja, das ist tatsächlich

12:16.400 --> 12:21.720
anscheinend ein, ob es ein WPF ist, keine Ahnung, aber ein netter Ding, also wahrscheinlich

12:21.720 --> 12:35.800
ein WPF. Ja, Mark Dick WPF verwenden sie. Ok, der Windows Installer ist jetzt WPF. Sachen

12:35.800 --> 12:54.280
gibt es, hätt ich nicht gedacht. Die Musik ist mit zum Onkar-S, kurz skippen. Ok, früher

12:54.280 --> 12:59.040
hatten die hier was Cross-Platform, weil ich wollte, angeblich gibt es nämlich neue Tests,

12:59.040 --> 13:04.040
die man Cross-Platform laufen lassen kann, schauen wir mal. Egal, install while downloading,

13:04.040 --> 13:10.720
macht es. Das dürfte nicht allzu lange dauern, ich denke mal so 10 Minuten, wenn es hoch

13:10.720 --> 13:25.600
kommt. Ihr seht, das ist ziemlich schnell. Der File Explorer von Windows 11 ist maximale

13:25.600 --> 13:34.000
Platzverschwendung. Wieso, sieht doch eigentlich fast so aus wie der alte. Also, da ist doch

13:34.000 --> 13:43.680
so großer Unterschied ist da jetzt doch nicht, weil die Ribbons außen-vorder, aber wo ist

13:43.680 --> 13:52.720
da der große Unterschied? Es ist doch mehr oder weniger genau das gleiche. Ah, da ist

13:52.720 --> 14:10.400
viel Platz dazwischen, ok, das stimmt. So nicht mehr. Öffne mal einen Ort, naja, hab

14:10.400 --> 14:24.560
ich ja. Ah, sieht doch ok aus. Boomer-Ansicht ist das ja. Kann man das ejecten? Wow, knapp

14:24.560 --> 14:47.840
am Kopf vorbei hier. Ah, PainsChamp, witzig, weiß. So, wie sieht der Installer aus? Es

14:47.840 --> 14:58.360
geht halbwegs zack, ich click once, Bootstrapper, diese Namen von diesen Packages immer. Wisst

14:58.360 --> 15:02.200
ihr was ich nicht verstehe, warum schafft es eigentlich Microsoft nicht seit Windows

15:02.200 --> 15:07.920
10 ist es glaube ich erst, keine Beispielmusik und keine Beispiel Clips und Bilder mehr mitzuliefern.

15:07.920 --> 15:11.520
Bei Windows XP hat es ja immer noch diese 8 Standardbilder, dass du wenigstens siehst,

15:11.520 --> 15:18.480
wie das ausschaut standardmäßig. Hat sich Microsoft gedacht, nee, wer braucht schon

15:18.480 --> 15:42.000
ein Bildchen, haben die sich gedacht. Da letztens, wo war hier, ich glaube bei Golem, oder was

15:42.000 --> 15:51.520
war das, habe ich einen Artikel über agile Softwareentwicklung gelesen. Was ich da witzig

15:51.520 --> 16:01.840
fand ist die, ich glaube bei Heise war es, was ich da witzig fand ist die Forumsdiskussion,

16:01.840 --> 16:16.320
warum ist das so lang. Zumindest die Forumsdiskussion war wieder lustig, wo sie sich darüber aufgeregt

16:16.320 --> 16:20.160
haben, also Entwickler wieder darüber aufgeregt haben, dass sie einen halben Tag auf irgendwelchen

16:20.160 --> 16:25.720
Sprints, Scrums, Dailys, sonst wie rumstehen und dann kam irgendein Typ in den Kommentaren

16:25.720 --> 16:30.640
und meinte, ihr macht das ja auch falsch und hat dann gesagt, man soll quasi immer mit

16:30.640 --> 16:35.880
dem, wie heißt das, mit dem Scrum Handbuch oder so rumlaufen und immer nachschlagen oder

16:35.880 --> 16:40.840
sowas. Ich wusste gar nicht bis zu dem Zeitpunkt, dass es einen Scrum Handbuch überhaupt gab.

16:40.840 --> 16:51.640
Agile Master Scrum Handbuch, der Scrum Guide, jawoll endlich, endlich, da wurde das, i,

16:51.640 --> 17:03.760
das ist Wörth, das ist die Fault, das ist die Fault Wörth 2007, Alter, i. Ah ja genau

17:03.760 --> 17:12.200
Alex, das meine ich, den Artikel meine ich, ja genau, genau. Ja, den meine ich. So, dann

17:12.200 --> 17:16.920
habe ich irgendwie in den Kommentar Diskussionen einen gehabt, der hat dann erzählt, dass er,

17:16.920 --> 17:25.800
dass er immer mit dem Scrum Handbuch rumlaufen soll und sowas. Wahrscheinlich das Agile Manifest,

17:25.800 --> 17:34.080
ne, ne, ne, ne, ne, es ging um das Scrum Handbuch hier, der Scrum Guide, das ist nur für die

17:34.080 --> 17:44.480
coolen Leute. AgileHeroes.de, die Rakete darf nicht fehlen, was sonst? Nein, ich will keine

17:44.480 --> 17:51.160
Push Notifications von euch haben. Die agilen Helden mit Rakete scheinen ja super beliebt

17:51.160 --> 18:08.760
zu sein hier. Und das ist auch äußerst beliebt auf Amazon. So, ach ne, please, ich will,

18:08.760 --> 18:13.320
ich will nicht sign innen, Microsoft, lass mich, kann ich das nicht einfach benutzen

18:13.320 --> 18:19.560
ohne zu sign innen. He doesn't know, he lacks critical information. Geht das, geht das nicht

18:19.560 --> 18:26.880
auch ohne? Oh no, jawoll, perfekt. So, es erkennt schonmal nicht das Betriebssystem-Theme,

18:26.880 --> 18:31.880
das ist schonmal Fail. Warum erkennt es nicht standardmäßig, dass ich Dark-Theme habe und

18:31.880 --> 18:40.000
mach das, verwende das auch. Developer Settings, General, Visual, C-Sharp, General ist okay,

18:40.000 --> 18:55.680
das andere darfst du erst machen, wenn ich C-Sharp Projekt einstelle, alles gut. Repairing,

18:55.680 --> 19:03.720
der offizielle Post-Champ-Screen von Microsoft. So, also, jetzt müssen wir nochmal kurz in

19:03.720 --> 19:09.080
dieses What's New Dokument gucken, dass wir auch wissen, was wir schauen müssen. Also,

19:09.080 --> 19:14.200
es gibt ja einmal dieses Video und es gibt ein anderes Video, was ich gefunden habe,

19:14.200 --> 19:26.520
das ist von Abild, da stellt Microsoft das ganze selbst vor. Warum, warum sind eigentlich

19:26.520 --> 19:39.920
die Kommentare offgeturnt und warum hat das Video so schlechte Bewertung? Ah, yes, exzellent

19:39.920 --> 19:52.200
Intro. Ich glaube, 8 Minuten überleben wir noch, oder? Lass wir uns mal zeigen. Wo, wann

19:52.200 --> 20:03.320
geht das los? Hier, ne, wann zeigt der dann was? Hallo? What the fuck? Zeigen die auch

20:03.320 --> 20:17.720
irgendwas? Ah, hier, okay. Okay, man kann Dateien schnell öffnen, das kann ich jetzt

20:17.720 --> 20:27.600
nicht ausprobieren, weil ich hab kein so großes Projekt, wir können vielleicht irgendwo eins

20:27.600 --> 20:37.320
von GitHub öffnen oder so. Was ist ein schönes großes.NET Projekt auf GitHub? So eine Solution

20:37.320 --> 20:43.560
oder so. Fällt da irgendjemand was ein? Der Wind aus Taschenrechner ist es ja leider nicht.

20:43.560 --> 20:51.520
ShareX ist eine gute Idee, perfekt, das machen wir. Okay, also das Öffnen von großen Projekten

20:51.520 --> 21:03.280
geht jetzt schneller, alles klar. Das probieren wir tatsächlich mal aus. ShareX, GitHub, ShareX,

21:03.280 --> 21:17.120
nicht zu verwechseln mit Xshare. So, können wir das ganze mal klonen hier. Ja, perfekt.

21:17.120 --> 21:23.960
Klonen. Stimmt, jetzt können wir gleich mal was neues ausbringen, die haben doch das Windows

21:23.960 --> 21:36.000
mit dabei, alles klar. Haben die auch Shit vorinstalliert? Nein. ShareX ist ein Screenshot

21:36.000 --> 21:41.280
Programm, aber wir verwenden jetzt einfach nur, dass wir eine große... Klone Repository,

21:41.280 --> 21:44.880
okay, das kann, guck mal, das kann Wishlist Studio selbst, da braucht man gar keine Shit

21:44.880 --> 22:06.640
Command Line für das da, bam. Klonen. Guck mal, hier richtig highly advanced. Ich will

22:06.640 --> 22:21.360
nix committen. Close. So, okay, hat es das jetzt besonders schnell? Ach hier, okay, jetzt

22:21.360 --> 22:24.560
gucken wir mal, wie schnell er das öffnet. Ich habe jetzt keinen Vergleich, aber mal

22:24.560 --> 22:41.240
schauen. Das ist schon verhältnismäßig schnell. Das ist schon verhältnismäßig schnell. Ah,

22:41.240 --> 22:47.880
das ist noch gar nicht fertig, jetzt. Alter, was ist das denn für... Ich mag den Press

22:47.880 --> 22:53.000
of the Wild Soundtrack nicht, ich brauche jetzt irgendwas anderes. Irgendwas... Relaxing

22:53.000 --> 23:18.600
Spring Music, okay. Ne. Ne. Pirate Music. Nope. Gamecube Nostalgik. Ah, ich weiß nicht.

23:18.600 --> 23:40.760
Ne. Try Not to Dance Challenge, okay. Wir dansen nicht. Wir pippen, wir pippen, oder

23:40.760 --> 23:58.320
Cat Jammen. Okay, wunderbar. Warum geht das nicht? Hat das nicht Restored oder was? Sollte

23:58.320 --> 24:08.840
ich eigentlich Abhängigkeiten mit standardmäßig runterladen? Hast du schon Windows 11 gestreamt,

24:08.840 --> 24:14.040
oder? Jaja, das ist ja hier Windows 11. Relax, Dankeschön für den Hypersubscription hier,

24:14.040 --> 24:27.600
den 18 Monate Sub. Das ist die neue Default Schriftart, die jetzt dabei ist, ne. Wie hießen

24:27.600 --> 24:33.360
das Ding nochmal? Also Lucida Console ist out, Consolas ist auch out, sondern Standard Schrift

24:33.360 --> 24:39.800
ist jetzt, wenn ich das finden würde, Fonts und Colors, Standard Schrift... Alter, Puschel

24:39.800 --> 24:49.000
Studio, come on. Cascadia Mono ist es jetzt. Cascadia Mono. Microsoft hat sich gedacht,

24:49.000 --> 24:53.440
es kann nicht sein, dass JetBrains ne eigene Schrift hat, Adobe ne eigene Schrift hat,

24:53.440 --> 24:58.360
IBM ne eigene Schrift hat, Apple ne eigene Schrift hat, Google ne eigene Schrift hat.

24:58.360 --> 25:03.000
Da hat sich Microsoft gedacht, wir haben ja erst 50 eigene Schriften, wir brauchen jetzt

25:03.000 --> 25:11.280
noch eine. Das Windows 11 Logo startet uns an, kannst du das zensieren? Inwieweit starte

25:11.280 --> 25:21.800
ich das an? Ist das hier zu rechteckig, zu symmetrisch, oder? Was ist denn deine Meinung

25:21.800 --> 25:29.960
zu Windows 11? Ich kann dazu noch überhaupt nichts sagen. Eins was mich zum Beispiel nervt

25:29.960 --> 25:36.280
ist, dass das anscheinend die Gruppierung standardmäßig an ist. Also guckt, wenn ich jetzt hier ein

25:36.280 --> 25:44.160
paar Fenster aufmache, dann sind die standardmäßig gruppiert, das nervt mich richtig. Also das

25:44.160 --> 25:52.040
nervt mich extrem, ich hasse diese Gruppierungen-Geschichte. Ich kann leider keine Settings machen, weil

25:52.040 --> 26:00.040
ich es nicht aktiviert habe. Falls jemand irgendeinen Studentencode hat, kann er mir

26:00.040 --> 26:11.440
den ja gerne schicken und ich aktiviere schnell. Aber geht das gar nicht so. Also das Öffnen

26:11.440 --> 26:16.640
von Projekten ging in der Tat relativ schnell. Also so ein großes Projekt hätte ich gedacht

26:16.640 --> 26:29.360
dauert länger. Windows 7 Keys, aber ich habe auch kein Windows 7 Key. Ja, das ist tatsächlich

26:29.360 --> 26:33.000
relativ schnell. Wir können es mal vergleichen. Wir vergleichen das jetzt mal mit Ryder unter

26:33.000 --> 26:44.720
Linux. Passt mal auf, wir machen das gleiche Repo jetzt unter Linux in Ryder auf. Oh nee,

26:44.720 --> 26:51.960
schon wieder. Was war denn das noch mal das Problem, das hatten wir doch schon mal. Man

26:51.960 --> 27:16.560
musste Log-Files entfernen oder? Man musste Log-Files irgendwie entfernen. Wie ging das

27:16.560 --> 27:22.360
eigentlich? Ich habe keine Ahnung, wie das ging. Vor allem warum dreht dieser Kack-Bug

27:22.360 --> 27:30.160
immer noch auf? Was muss ich denn da jetzt entfernen, dass das tut? Den LCK-Ordner, wo

27:30.160 --> 27:35.880
ist denn hier ein LCK-Ordner, sehe ich nicht. Da hinten? Wie geht's der Katz, der geht's

27:35.880 --> 27:46.040
gut. Seht ihr mal einen LCK-Ordner? Ach der da! Tatsächlich. Das ist echt ein Kack-Bug,

27:46.040 --> 27:52.360
dass manchmal die VMs da nicht zugreifbar sind oder zu Friesen. Pass auf, jetzt geht's.

27:52.360 --> 27:59.720
Bam! Oh, Peter Agile ist noch auf, den brauchen wir jetzt. Der ist ganz essenziell jetzt.

27:59.720 --> 28:11.640
Der muss uns nämlich zeigen, wie es geht. Ne, falsches. Falsches Emote. Also, GitHub,

28:11.640 --> 28:22.000
ShareX. Dann klonen wir das Ganze mal. Das probieren wir jetzt mal mit Rider aus. Und

28:22.000 --> 28:25.960
mal gucken, wie da der Unterschied ist. Also die VMs sind ungefähr gleich ausgestattet.

28:25.960 --> 28:32.160
Die Windows-VM hat, kann man sich das nicht anzeigen lassen, auch toll. Also die VM hier

28:32.160 --> 28:43.640
hat 4 CPU-Kerne, 16G RAM und das Windows hat glaube ich auch 4 CPU-Kerne und, hallo? Was?

28:43.640 --> 29:02.600
Please. Ach Moment, ist ja klar. Ich hab's ja da noch auf, Lul. Äh, Zack, Moment. Äh,

29:02.600 --> 29:06.800
Moment. Das, das jetzt, jetzt hab ich's, ich glaub jetzt hab ich's, jetzt hab ich's verwirrt.

29:06.800 --> 29:16.720
Oh. Oh, okay, ich glaub jetzt hab ich's verwirrt. Also, Settings und das hat auch, das hat 8G,

29:16.720 --> 29:24.800
aber der RAM wird nicht das Limitierende sein. Ganz im Ernst. Okay, vergleichen wir mal die

29:24.800 --> 29:34.080
Geschwindigkeit. Also, das da, clone. Kann man das, kann das Rider übrigens auch, New

29:34.080 --> 29:43.600
Ocean, dass man das direkt da drin klont? Open. Äh, wahrscheinlich, ich glaub ich hab

29:43.600 --> 29:49.520
das Shit, das Shit-Plugin ausgemacht. Kann man da jetzt einfach sowas? Geht das? Nee,

29:49.520 --> 29:58.400
oder? Wenn das geht, würd ich mich echt wundern. Nee. Aber ist ja kein Problem, ich mein wir

29:58.400 --> 30:06.840
sind ja ohne Nutz, wir haben ja einfach, wir haben ja Shit, Shit-Command-Line. So, das

30:06.840 --> 30:09.320
ist ja auch nicht das, was wir testen wollen, wir wollen testen, wie schnell es sich öffnen

30:09.320 --> 30:22.440
lässt. Also, Open, Repos, dann haben wir hier irgendwie ShareX-Solution. So, mal gucken,

30:22.440 --> 30:33.640
wie schnell das jetzt geht. Also, Open und Trust. Ja, das ist schon eine ganze Ecke langsamer.

30:33.640 --> 30:44.800
Read me? What the f- Ein bisschen langsamer, aber es ist jetzt nicht so, als hätt ich damit

30:44.800 --> 30:54.480
ein großartiges Problem, ehrlich gesagt. Geht auch, geht auch. Also, ich kann mit beidem

30:54.480 --> 31:04.360
leben, ja. Übrigens, warum das so broken ist, ist weil es ein.NET Framework Projekt

31:04.360 --> 31:09.680
ist. Okay, ich kann mit beidem leben, ist in Ordnung. Es ist aber wahrscheinlich deutlich

31:09.680 --> 31:13.280
schneller als Visual Studio 2000. Können wir auch nochmal vergleichen? Ich hab's doch

31:13.280 --> 31:23.040
hier, ich hab's doch hier drauf. Da muss ich das bloß hier mal klonen mit. Probieren wir

31:23.040 --> 31:30.760
das hier auch nochmal aus. So, jetzt haben wir es wirklich überall, haben wir hier gelandet.

31:30.760 --> 31:45.240
Jetzt haben wir wirklich das überall ausprobiert. Jetzt kommt Visual Studio 2019, aber das ist

31:45.240 --> 31:49.720
das ganz aktuelle Visual Studio 2019, was ich installiert hab. Ich hab das erst vor

31:49.720 --> 31:55.800
drei Tagen oder so updated. Also, jetzt haben wir hier Share. Okay, mal gucken, wie schnell

31:55.800 --> 32:12.560
es jetzt damit aufgeht. Ja, okay, das ist schon, das ist, das ist, das ist ne ganze Ecke

32:12.560 --> 32:26.080
langsamer. Wobei. Naja, okay, soll ich mal ehrlich sein, Leute, ich merke keinen Unterschied.

32:26.080 --> 32:40.000
What the fuck, warum singen da jetzt Leute? Also, ich benutze für, für.NET, mittlerweile

32:40.000 --> 32:47.960
bin ich nur noch unter Linux und Rider unterwegs. Seit den letzten paar Jahren. Das funktioniert

32:47.960 --> 32:56.400
echt gut. So, also, jetzt bin ich echt überfragt. Ich finde, das öffnet sich überall gleich

32:56.400 --> 33:06.320
schnell, auch wenn es jetzt deutlich schneller sein soll. Eventuell. Ich kann das jetzt echt,

33:06.320 --> 33:22.040
also. Okay, es ist vielleicht minimal schneller im neuen. Aber ganz im Ernst so. Also, nee,

33:22.040 --> 33:31.200
also großen Unterschied macht es echt nicht. Ist dort nicht universell einsetzbar,.NET

33:31.200 --> 33:39.280
10 Stunden. Wie Musik? Ja, Moment, das ist nur das, das ist nur das, das einschalten

33:39.280 --> 33:46.400
Musik. Na, das ist ein bisschen zu heftig. Jetzt kommt wieder der eine Kerl im Chat,

33:46.400 --> 33:57.400
der sagt Bei diesem Song haben sich meine Eltern kennengelernt. Nee, das hören wir

33:57.400 --> 34:12.240
nicht. 10 Stunden. Nee, das halte ich nicht aus. 10 Stunden. Das ist Mario Galaxy. So,

34:12.240 --> 34:16.760
also weiter im Text von der wahnsinnigen, vom wahnsinnigen Geschwindigkeitsboost habe

34:16.760 --> 34:25.800
ich jetzt noch nichts gemerkt. Alles klar. So, was gibt es denn sonst noch Neues? Lohnt

34:25.800 --> 34:30.960
der Lizenzpreis für Rider anstatt die Free Variante? Ob sich der Lizenzpreis lohnt oder

34:30.960 --> 34:34.760
nicht, stellt sich gar nicht. Wenn du es unter Linux ordentlich.NET programmieren

34:34.760 --> 34:40.800
willst, musst du dir Rider holen, weil Visual Studio Code suckt für.NET, finde ich jetzt.

34:40.800 --> 34:48.880
Ist nicht schön. Ich meine, wenn du Rider nicht kaufen willst, gibt es auch die Möglichkeit,

34:48.880 --> 35:02.440
du verwendest die Trial, aber die Trial ist offiziell ja nur 30 Tage. Offiziell. Ich

35:02.440 --> 35:12.200
meine, wenn du ein bisschen rumsuchst, findest du ja vielleicht Möglichkeiten. Diese Trial,

35:12.200 --> 35:27.840
ne? Aber natürlich kaufen wir immer offizielle Lizenzen. Alle 30 Tage eine neue VM. Na gut,

35:27.840 --> 35:34.200
das ist die Noob Variante. Okay, also was ist denn jetzt sonst noch Neues? Zeig mal

35:34.200 --> 35:46.640
her. Ja, also was ist sonst noch neu? Okay, es ist viel schneller beim Öffnen. Was zum

35:46.640 --> 35:54.040
Teufel öffnen die da? Moment, sind das Sekunden? Ja, das sind Sekunden. Aber so ein großer

35:54.040 --> 36:00.040
Unterschied war das jetzt bei mir nicht. Ach, Moment, Moment, Moment. Open, der Typ öffnet

36:00.040 --> 36:07.760
1600 Projekte. Okay, das habe ich nicht ausprobiert, aber was zum Teufel ist das dann für ne Solution

36:07.760 --> 36:20.200
mit 1600 Projekten drin? Was haben die denn da? Ist das der Windows 11 oder wie? Also

36:20.200 --> 36:27.840
1600 Projekte, da kann ich wirklich ne Runde weird champen zu. Visual Studio Code kann

36:27.840 --> 36:34.680
das nicht sein. Das ist JavaScript. Okay, die haben das genommen einfach, dass man sieht,

36:34.680 --> 36:38.240
dass es schneller ist, nicht, dass es wirklich irgendwie merklich, merklich schneller ist.

36:38.240 --> 36:42.720
Die haben irgendwas gebraucht, wo man es wirklich sieht. Und wenn du so riesige Projekte brauchst,

36:42.720 --> 36:57.400
dann ist es nice to have, aber jetzt nichts umwerfend Neues. Visual Studio Code ist TypeScript,

36:57.400 --> 37:16.080
das macht überhaupt keinen Unterschied. Ja. Okay, weiter. Ich habe das Gefühl, das sind

37:16.080 --> 37:28.560
8 Minuten Video und die zeigen überhaupt nichts. Ah, jetzt kommt die neue Code Completion,

37:28.560 --> 37:34.360
okay. Hat er nur einen guten Green Screen oder sieht das echt bei dem hinter dem so

37:34.360 --> 37:44.000
aus? Weil das sieht aus, als sitzt er in seiner Garage gerade. Aber der Green Screen ist erstaunlich,

37:44.000 --> 38:01.520
erstaunlich, erstaunlich gut, wenn es ein Green Screen ist. Das erinnert mich an Fischshell.

38:01.520 --> 38:10.920
Whole Line Completion. Okay, das probieren wir gleich mal aus. Aber ob Visual Studio

38:10.920 --> 38:15.400
wirklich weiß, wie ich weiter programmieren will, ich bin da immer noch skeptisch drauf.

38:15.400 --> 38:37.800
Die benutzen alle Dark Mode, aber für die Präsentation immer Light Mode. Das ist cool,

38:37.800 --> 39:07.680
ich habe aber meine Zweifel, dass das sinnvolle Completions sind. Ich kann das nicht, aber

39:07.680 --> 39:13.840
ich hätte die Idee für so einen Hacker Science Fiction Thriller gerade. Der sagt ja, die

39:13.840 --> 39:19.240
AI ist quasi über alle.NET Projekte in GitHub drüber gegangen, um es jetzt mal ein bisschen

39:19.240 --> 39:26.520
zu umschreiben und hat gelernt, wie so einen ASP.NET Controller auszusehen hat. Überlegt

39:26.520 --> 39:33.320
euch mal, man könnte eine richtig geile Story draus basteln. Die AI hat gelernt, wie so

39:33.320 --> 39:41.440
ein Controller aussehen muss und die AI schlägt jetzt, was war das für ein Sound? Und die

39:41.440 --> 39:45.600
AI schlägt jetzt Sachen vor, allerdings die Sachen, die sie gelernt hat, ist eine Insecurity,

39:45.600 --> 39:52.960
ist irgendein Bug drinne. Und du hast auf einen Schlag, hast du 100.000 Software Projekte,

39:52.960 --> 40:02.600
die angreifbar sind über das Gleiche, weil die AI das Falsche vorschlägt. Und die Leute

40:02.600 --> 40:08.080
copypasten ja nur noch, kann ja keiner mehr ordentlich programmieren. Dann hast du Probleme.

40:08.080 --> 40:15.400
Very impressive stuff. Very impressive. Ich finde das immer geil, wenn die sich recht

40:15.400 --> 40:22.160
geben an diesen Präsentationen. Very impressive stuff. Yes, yes, very impressive, huge impressive

40:22.160 --> 40:31.960
stuff. Jetzt fehlt bloß noch, dass er sagt, it's like magic oder sowas. Sag nicht magic.

40:31.960 --> 40:37.480
Cool and can save me a lot of time. Also a little scary. So and it looks like magic when it's

40:37.480 --> 40:50.440
happening in real life. Manche Sachen sind einfach total obvious, dass die kommen müssen.

40:50.440 --> 40:55.240
So just to know that there's all this AI and training going on behind the scenes is really

40:55.240 --> 41:02.600
cool. I mean, it really looks like magic. Okay, es kann sein, dass sie das vorher schon

41:02.600 --> 41:08.480
gesagt haben und ich deswegen gedacht habe, das kommt jetzt. So is there anything else

41:08.480 --> 41:12.740
that that developers should know about and why they should immediately hit download when

41:12.740 --> 41:18.520
preview one does get released? Yeah, let's just jump straight into the next demo here.

41:18.520 --> 41:23.760
It's about a simple test project that I have where das habe ich gelesen, das habe ich gelesen,

41:23.760 --> 41:28.880
da bin ich mal gespannt, ob man das ausprobieren kann. Man kann jetzt angeblich, wenn man Tests

41:28.880 --> 41:36.280
hat und die irgendwie in irgendeiner Art und Weise markiert sind, mit wo man die ausführen

41:36.280 --> 41:39.880
will, kann man jetzt wohl in Visual Studio Code sagen, dass man die in Docker laufen

41:39.880 --> 41:44.680
lassen will unter Linux testen und sowas. Muss ich gleich mal gucken, also wie auch immer

41:44.680 --> 41:52.440
das funktioniert. Das habe ich gelesen, das finde ich ist eine coole Idee. War ganz davon

41:52.440 --> 41:56.280
abgesehen. Man muss aber mal ehrlich sagen, es ist ziemlich Nische, dass man das braucht,

41:56.280 --> 42:03.000
weil die meiste Software, die wird ja nicht mal unter Windows, mal unter Linux, mal unter

42:03.000 --> 42:07.800
Mac laufen gelassen. Wenn es eine ASP.NET Web Anwendung ist, da läuft die unter Linux,

42:07.800 --> 42:11.680
da wird die unter Linux getestet und gut ist und am besten auch unter Linux entwickelt.

42:11.680 --> 42:19.040
In der Regel kann man eigentlich echt sagen, also ich rede jetzt nicht von so exotischen

42:19.040 --> 42:25.400
Sachen wie IBM Hosts, aber in der Regel kann man sagen, es ist am besten, wenn man die

42:25.400 --> 42:30.240
Software unter der Plattform entwickelt, wo sie dann am Ende auch läuft, wenn es geht.

42:30.240 --> 42:35.320
Ich meine, dass es für Mobile Apps nicht geht, ist logisch und dass das, zumindest

42:35.320 --> 42:40.720
nicht so direkt, und dass das für Host-Anwendungen und sowas, Mainframe auch nicht geht, ist

42:40.720 --> 42:44.120
klar. Aber wenn man über normale Linux oder Windows Software redet, ist eigentlich am

42:44.120 --> 42:46.440
besten, man entwickelt die dort, wo sie auch am Ende läuft.

42:46.440 --> 42:51.200
Ja, na gut, Browser ist ja wieder was anderes.

42:51.200 --> 43:05.200
Das probieren wir gleich mal aus. Ich habe übrigens keine Ahnung von Tests in Visual

43:05.200 --> 43:07.360
Studio, weil ich brauche nie Tests.

43:07.360 --> 43:23.360
Okay, das ist wirklich cool. Das ist genau, das ist das, was ich gelesen habe. Das macht

43:23.360 --> 43:27.000
dann, startet dann irgendwie einen Docker und lässt da Linux.NET Core 3.1 laufen.

43:27.000 --> 43:33.920
Tests ist nur für Leute, die damit rechnen, dass ihre Software kaputt geht. Das ist genauso

43:33.920 --> 43:38.400
wie Dokumentation, auch nur für Leute ist, die nicht aussahekräftig programmieren können.

43:38.400 --> 43:45.120
Und das Problem haben wir natürlich nicht, deswegen brauchen wir beides nicht.

43:45.120 --> 44:06.520
Und wenn man sich unsicher ist, dann macht man sich einfach ein Strukturprogramm vorher.

44:06.520 --> 44:14.440
Okay, ja, genau hier, es geht über irgendwelche Docker-Images. Sag mal, das macht mich voll

44:14.440 --> 44:21.400
fertig, dass Windows im Hintergrund, die Windows 11, dass die laufen irgendwas auf Sound ploppt.

44:21.400 --> 44:28.680
Ich muss mal kurz stummschalten. Besser als wenn es die ganze Zeit macht.

44:28.680 --> 44:44.120
Ich frag mich immer noch, was die Amis geritten hat, ihr W W auszusprechen. Und dann, und

44:44.120 --> 44:48.400
jetzt kommt ja noch der Hit, und dann die Standard-Abkürzung für Webseiten die ganze

44:48.400 --> 44:53.720
Zeit W W W zu nehmen. Ich mein, W W W geht ja auf Deutsch noch, aber die Amis müssten

44:53.720 --> 45:05.480
dann wirklich W W W sagen. Das sind sechs Silben versus drei. Ja, stimmt, das waren

45:05.480 --> 45:08.680
die Engländer, das waren ja gar nicht die Amis. Die Amis haben es geklaut.

45:08.680 --> 45:24.960
Sechs W, ja, das fände ich gut. Kommt da noch was?

45:24.960 --> 45:42.480
Da guck ich jetzt mal rein. WS2022-Wishen. Okay.

29:07.900 --> 46:18.240
habe ich irgendwas falsch gemacht? Habe ich doch gemacht. MSVS, das ist doch

46:18.240 --> 46:30.480
richtig. Ach, ich hab 2020, lull. Ah, ja, das ergibt das auch. Jetzt ergibt es auch

46:30.480 --> 46:40.400
Sinn, wenn das nicht funktioniert. Ich brauche eine Runde Musik. So, also das ist das Visual

46:40.400 --> 46:44.400
Studio Blog, das haben wir schon. Visual Studio ist viel zu spät, ja, das haben wir

46:44.400 --> 46:50.320
schon gelernt. Designing for everyone. Ausgibt neue Icons, Leute. Die wichtigste Änderung

46:50.320 --> 46:55.760
in jedem Microsoft Programm. Neues Design, neue Icons. Pascal, die Account ist jetzt

46:55.760 --> 47:04.320
die Fault. Dark Mode Icons. Die sind doch noch genauso wie vorher. Nee, die sind in der

47:04.320 --> 47:14.960
Farbe tatsächlich ein bisschen angepasst. Also man kann irgendwas personalisieren, aber

47:14.960 --> 47:22.040
sie sagen nicht was. Dann machen wir doch jetzt mal ein.NET 6 Projekt und gucken, ob

47:22.040 --> 47:34.360
das funktioniert. Muss das sein? Können die nicht C++ einfach rausschmeißen? Wer schlägt

47:34.360 --> 47:44.680
sich denn freiwillig mit so einem Müll rum? Innovation at your fingertips. Real-time collaboration,

47:44.680 --> 47:55.240
website and productivity. Ach, das ist diese neue AI-Geschichte. Guck mal, ein GIF. Set

47:55.240 --> 48:08.400
as desktop background. Moment. Funktioniert das wirklich? Moment. Oh, ist das schlecht.

48:08.400 --> 48:12.320
Das ist so schlecht wieder. Du wählst ein GIF aus und das GIF ist nicht mal animiert

48:12.320 --> 48:22.760
im Hintergrund. Vom Ansatz her cool. Ausführung mangelhaft wieder. Einfach schlecht. Einfach

48:22.760 --> 48:30.720
schlecht wieder. Wie kriege ich denn das jetzt wieder rückgängig gemacht? Ich habe leider

48:30.720 --> 48:59.080
keine personalized-Dinger mehr. Windows XP Hill. Ok, perfekt. Set as background. Hallo?

48:59.080 --> 49:18.080
Background. Oh, da stimmt aber irgendetwas net. Ich habe den ORSKY ausgetrickst. Leute,

49:18.080 --> 49:34.440
ist das hier ein Firefox-Dialog oder ist das ein Windows-Dialog? Wo kann man Windows 11

49:34.440 --> 49:48.640
runterladen? Kann ich nicht sagen. Ok, so kann man das jetzt ja ertragen. Da ist der falsche

49:48.640 --> 50:00.640
Berg. Ne. So, weiter im Text. Ich hasse dieses Gruppierte. Dieses Gruppierte vor den Fenstern,

50:00.640 --> 50:04.640
das ist so schlimm. Das müssen die ausschaltbar machen. Sonst gibt es wieder irgendwelche

50:04.640 --> 50:11.960
Registry-Hacks oder so. Das halte ich nicht aus. Ok, neue. Was haben wir hier? Assynchrone

50:11.960 --> 50:32.480
Collabora. Ok, blablabla. Improved Code Search. Visual Studio for Mac. Ja, da frage ich mich

50:32.480 --> 50:47.880
mal. Azure DevOps sagt auch, ich bin GitHub viel nicer. Ok, wunderbar. Die wollen das

50:47.880 --> 50:51.600
garantiert nicht auf Linux rauspulgen. Ne, ne, ne. Aber ganz davon abgesehen, Rider ist

50:51.600 --> 50:57.280
eh die beste Cross-Plattform-Lösung. Zeig mal bitte kurz Paint und den Colour Pick-Dialog.

50:57.280 --> 51:05.560
Was? Paint? Paint sieht aus wie sonst. Paint sieht aus wie immer. Was für ein Colour Pick-Dialog?

51:05.560 --> 51:25.480
Wie startet man Windows Colour Pick-Dialog? Edit Colours? Ok, Paint. Paint Champ. Und

51:25.480 --> 51:33.480
jetzt? Und jetzt? Ich habe, ah hier, Edit Colours. Ok, sieht aus wie Windows XP immer

51:33.480 --> 51:37.880
noch. Oder eher Windows 98 würde ich sagen. Hör mal, ich mach mal Windows XP eher Windows

51:37.880 --> 51:45.520
98. Immer noch der gleiche Shit. Übrigens, wer denkt, dass der Kram besser wird, den

51:45.520 --> 51:50.600
kann ich jetzt auch noch gleich mal schocken. Control Panel und Netzwerk-Settings sind immer

51:50.600 --> 51:59.560
noch da. Da wird sich wahrscheinlich nichts ändern dran. Aber Hauptsache gerundete Ecken,

51:59.560 --> 52:06.520
ja. Und ich hab Dark Theme und Paint und Paint und das checkt nicht, dass ich Dark Theme hab.

52:06.520 --> 52:19.080
Das ist halt Fail, ne. Das ist kein neuer Skin, das ist die Windows 11 Preview. So, also,

52:19.080 --> 52:27.440
gucken wir mal weiter. Das heißt, als nächstes probieren wir jetzt mal diese tollen AI Code

52:27.440 --> 52:35.480
Completion aus, oder wie? Oder was? Ok, Create New Project. Paint ist wohl noch die Windows

52:35.480 --> 52:46.560
7 Version. Ja, die haben ja auch gesagt, sie machen nix, ne. Ok, wir machen eine Konsolenanwendung.

52:46.560 --> 53:05.120
Da brauchen wir nicht viel. CAC, W, ne. 0W, Rater als CACW. Dotnet 6 Preview ist am Start,

53:05.120 --> 53:13.960
alles klar. Ja, dieses Bild hab ich noch auf, das haben wir uns heute Morgen hier angeguckt.

53:13.960 --> 53:18.920
Das ist lustig, das ist ein schönes Bild. Hat jemand ein Bild von gemacht, wie viel Überreste

53:18.920 --> 53:26.240
in Windows 11 noch drin sind? Windows 95 Dialoge, Windows NT Dialoge, Windows XP Dialoge, erster

53:26.240 --> 53:31.880
Windows Store Version, Windows 8 Metro Geschiss, neuestes Fluent Design, davor die Windows 10

53:31.880 --> 53:40.200
Settings, Windows 11 Startmenü Ribbon in Aero. Das ist halt echt. Muss das sein, Microsoft,

53:40.200 --> 53:48.080
ne. Ok, gut. Also, eins muss man den ja mal lassen. Wir haben den neuen Font, den haben

53:48.080 --> 53:55.600
wir ausprobiert und... Select? Den haben wir ausprobiert unter Linux und mit dem Linux

53:55.600 --> 54:02.280
Font Rendering sah dieser Font kacke aus. Unter Windows sieht der Font wirklich nicht

54:02.280 --> 54:08.240
verkehrt aus. Muss man mal sagen, also wer auf bisschen fettere Fonts steht, der wird

54:08.240 --> 54:19.560
hier wahrscheinlich glücklich werden mit. Ich finde, der Font ist schick. So, mal starten.

54:19.560 --> 54:26.360
Alles wie gehabt. Ich bin ja schon gar nicht mehr gewohnt unter Windows. Ich weiß schon

54:26.360 --> 54:30.240
gar nicht mehr, wie ich jetzt hier überhaupt... Unter Linux würde ich jetzt ein Terminal aufmachen

54:30.240 --> 54:33.520
und sagen.net run. Ich weiß gar nicht, wie ich das hier machen würde. Wie mach ich das

54:33.520 --> 54:38.520
hier unter Windows? Gibt es hier sowas wie Open Terminal? Ah, Open Terminal. Tatsächlich.

54:38.520 --> 54:46.040
Ihh, das ist dieses fucking eingebaute, eklig Terminal in Visual Studio..net run. Ok, das

54:46.040 --> 54:50.280
funktioniert ja auch. Aber, jetzt mal, jetzt mal im Ernst. Also, wenn ihr die Auswahl

54:50.280 --> 55:03.680
hast zwischen diesem Terminal oder, Moment, oder einem ordentlichen Terminal hier, also

55:03.680 --> 55:07.520
dann ist ja wohl ganz klar. Und selbst das Rider Terminal ist besser, weil das Rider

55:07.520 --> 55:13.200
Terminal hat noch eine ganz normale Shell verwendet. Also wer sich, also jetzt mal ernsthaft,

55:13.200 --> 55:24.320
sich freiwillig diesen Crap da gibt, dem ist nicht mehr zu helfen. Kann man das auch Auto,

55:24.320 --> 55:34.000
Auto Height, jawoll. So, also was sind diese tollen neuen Completion Features? If, wo ist

55:34.000 --> 55:47.560
meine Full Line Completion? AXE. Ist das jetzt schon AI unterstützte Completion oder? Was

55:47.560 --> 55:56.160
ist das? Und woher weiß ich? Muss man das vielleicht erst aktivieren? Wo sind überhaupt

55:56.160 --> 56:20.800
die Settings? Tools, Options? Wie hieß das? Intelli-Code, ne? Intelli-Code. Ok, ich glaube,

56:20.800 --> 56:24.600
wir brauchen eine Web-Anwendung, weil die haben das Beispiel in der Web-Anwendung gezeigt

56:24.600 --> 56:30.520
und wahrscheinlich funktioniert das nur in der Web-Anwendung. Ok, Razor-Pages, gibt's

56:30.520 --> 56:37.480
da auch was an? Gibt's da auch Web-API? Web-API mit Controller? Ne. Ok. Ich, siehst du mal

56:37.480 --> 56:43.640
Leute, ich bin zu, ich bin sogar zu unfähig, in Whistle Studio mittlerweile eine Web-Anwendung

56:43.640 --> 56:53.160
zu erstellen. Web-API, warum hat er das eben nicht gefunden? Ok, ja, Web-Application 1,

56:53.160 --> 57:02.560
perfekt. Mach mal ne neue Klasse Person und füg ne String-Property Last Name hinzu. Abgesehen,

57:02.560 --> 57:06.760
dass der dann First Name als neue Property vorschlägt. Sehr gute Idee, Krasius, genau

57:06.760 --> 57:11.560
das machen wir jetzt. Das machen wir jetzt. Nein, halt keine HTTPS-Open-API-Support brauchen

57:11.560 --> 57:26.160
wir alles net. So, geh weg. Die Wettervorhersage, genau die Wettervorhersage brauchen wir jetzt

57:26.160 --> 57:32.520
und den Wettervorhersagen-Controller. So, und da krieg ich jetzt Dinger vorgeschlagen,

57:32.520 --> 57:54.080
wenn ich da jetzt reingehe. Ja. Ah, guck mal hier. Intelli-Code-Suggestion. Oh, Massive-if.

57:54.080 --> 58:02.760
To accept. Ah ja. So Big Brain wirkt das jetzt noch nicht. Ok, wir machen mal was eigenes.

58:02.760 --> 58:09.320
Also, Post. Wir tun mal so, als würden wir da Parameter übergeben. Public. Keine Ahnung,

58:09.320 --> 58:16.240
wie nennen wir das mal? Push. Fällt jetzt grad nix anderes ein. So, und das kriegt jetzt

58:16.240 --> 58:31.160
ein String-Cac-W. So, eh. Return null. Perfekt. So, und jetzt, wenn ich jetzt hier sage, if,

58:31.160 --> 58:41.800
guck mal hier, Massive, Massive, Big Brain, Big Brain. What is name of the font? This

58:41.800 --> 58:52.200
is the new default font from Microsoft. It's called, I think, Cascadia Mono. Font? Who

58:52.200 --> 59:07.800
is this then? Font? Yes, Cascadia Mono. But it only looks good on Windows. I tried it

59:07.800 --> 59:15.640
on Linux and with the Linux font renderer, it sucks. Ja, genau, das ist das hier. Das

59:15.640 --> 59:26.080
ist Cascadia Code GitHub. Ui. Genau. Ja, aber das ist doch schon mal cool, oder? Ich

59:26.080 --> 59:31.640
mein, diese ist wahrscheinlich die einzige Code Completion, die der kann, aber das ist

59:31.640 --> 59:39.240
doch schon mal ganz nett. Meinst du, dass sich die Vorschläge nach dem Namen der Variable

59:39.240 --> 59:47.080
auch ändern? Was meinste? Ach, guck mal hier. Return redirect action. Nee, das will ich

59:47.080 --> 59:54.240
eigentlich gesagt an der Stelle nicht. If? Was? True? What the? Okay, so ganz klappt

59:54.240 --> 01:00:04.320
das doch nicht. So ganz hat das nicht funktioniert. Okay, if. Nee, und jetzt hab ich's kaputt

01:00:04.320 --> 01:00:18.240
gemacht, Leute. Brocken. Ach, guck mal, jetzt kann man doch direkt ein... Okay, ich weiß

01:00:18.240 --> 01:00:22.600
nicht so genau, was das da macht, aber es ist nicht das, was ich haben will. Was ist

01:00:22.600 --> 01:00:27.360
denn, wenn ich hier sage... Okay, da schlägt ihr mir vor, standardmäßig Länge Trim Contains

01:00:27.360 --> 01:00:32.160
to lower start with. Das werden wahrscheinlich schlicht und ergreifend die meist benutzten

01:00:32.160 --> 01:00:36.680
Methoden von String sein, das haben die irgendwie gezählt. Ob das jetzt die massive Big Brain

01:00:36.680 --> 01:00:48.200
too smart AI, die man dafür braucht, ist... Na, na ja. Okay, Person soll dich ausprobieren,

01:00:48.200 --> 01:01:00.720
da hat er Grasius vorhin geschrieben. Also probieren wir das mal aus. Public... Oh. Das

01:01:00.720 --> 01:01:09.560
ist komplett useless, what the fuck, das braucht kein Mensch. Das braucht wirklich keiner.

01:01:09.560 --> 01:01:20.920
Null. Das ist komplett bescheuert. Okay, Public Class... Was soll ich machen, Person? Und

01:01:20.920 --> 01:01:26.520
was meintest du, es gibt Last Name? Wenn ich was Last Name hinzufüge, dann sagt er, ich

01:01:26.520 --> 01:01:32.960
brauch noch First Name. Ja gut, wahrscheinlich, weil die... Tatsächlich. Okay, das ist cool,

01:01:32.960 --> 01:01:37.640
aber das geht auch nur, weil das ein Beispiel ist, was die für alles verwenden. Das hat

01:01:37.640 --> 01:01:43.040
ja mit Big Brain AI nix zu tun. Das klappt jetzt nur in diesem einen Fall, weil das das

01:01:43.040 --> 01:01:53.320
Beispiel ist, was die verwenden. Probieren wir das doch mal mit was anderem aus. Public

01:01:53.320 --> 01:02:08.280
Class, Car. Nee, Car, nicht Car, Car. So, Prop. Schlägt da jetzt irgendwas vor? Prop?

01:02:08.280 --> 01:02:19.920
String? Nee, Engine. Name. Na okay, gar nicht so schlecht. Description, okay. Image, okay.

01:02:19.920 --> 01:02:34.520
Naja, ich weiß nicht, so wirklich wahnsinnig gut. ID wäre gut, ID wäre gut, ja. Wir gucken

01:02:34.520 --> 01:02:39.160
mal, ob der so schlau ist und das checkt. Wir gucken mal, warte mal, wir gucken mal,

01:02:39.160 --> 01:02:43.760
ob der so schlau ist und das checkt. Ob der ID vorschlägt, das probieren wir jetzt mal

01:02:43.760 --> 01:02:51.080
wirklich aus. Add Folder Models. In Models sind meistens Felder mit Datenbank ein Bezug.

01:02:51.080 --> 01:03:00.520
Also Add Class, nennen wir jetzt mal was weiß ich, Kamera. So, meine Kamera braucht dann

01:03:00.520 --> 01:03:17.200
was? Name, okay. Ist jetzt schon mal broken. Okay. Int. Also, dass der nicht ID vorschlägt

01:03:17.200 --> 01:03:23.640
ist Fail. Warum schlägt der nicht ID vor? Es ist in einem Ordner Models und in Models

01:03:23.640 --> 01:03:29.720
ist alles drin, was ein ID Feld braucht. Das wird sicherlich besser, je größer die

01:03:29.720 --> 01:03:36.760
Codebase. Naja, angeblich haben die 1,5 Millionen Open Source Projekte analysiert. Da sollten

01:03:36.760 --> 01:03:42.460
eigentlich Klassen in Models so gut wie alle eine ID haben. Mach mal, Girl, was die Big

01:03:42.460 --> 01:03:48.200
Brain AI da vorschlägt. Du meinst Class, Girl? Oh, Monka Toss. Ich sehe mich schon

01:03:48.200 --> 01:04:00.720
im Monka Toss Land. Girl. Ach ja, jetzt wird ID vorgeschlagen. So, so. Und sonst nichts

01:04:00.720 --> 01:04:25.760
mehr. Mehr wird nicht vorgeschlagen, okay. Warum der jetzt noch mal ID vorschlägt, verstehe

01:04:25.760 --> 01:04:30.720
ich auch nicht so genau. Ich habe übrigens auch nicht gecheckt, wie ich das triggern

01:04:30.720 --> 01:04:37.400
kann. Tap to accept, okay. Aber in der nächsten Zeile kommt nichts mehr. Und wenn ich hier

01:04:37.400 --> 01:04:41.400
in die nächste Zeile gehe, schlägt er mir einfach Name vor. Vielleicht muss ich das

01:04:41.400 --> 01:04:55.720
mal löschen einfach. Ach, jetzt schlägt er mir auch wieder Name vor. Okay, Name ergibt

01:04:55.720 --> 01:05:11.880
noch Sinn, aber Name ist broken. Description. Okay, was ist die Ull von deinem Girl? Ah,

01:05:11.880 --> 01:05:26.560
Holy Fence, verstehe. Okay, was? Okay, okay, Moment, Moment. Holy Fence. Oh, IntelliCode

01:05:26.560 --> 01:05:52.800
hier. Hä? It's like magic. Holy Fence Account, ID. Jawoll. Name. Das ist E-Mail. Hoho. Phone.

01:05:52.800 --> 01:06:01.040
Guckt euch mal an, Phone Number. E-Mail. Leute, wir sind in der Angelos Schleife. Es hört

01:06:01.040 --> 01:06:14.960
nicht mehr auf. Big Brain AI. E-Mail Number. Mal gucken, wie lagiert das jetzt noch. Phone.

01:06:14.960 --> 01:06:27.760
Oh nee, ist vorbei. Nee, Phone Number. Okay, Big Brain AI ist vielleicht auch noch nicht

01:06:27.760 --> 01:06:38.760
so Big Brain. Du machst dir AI Angst, ich glaube auch. Funktioniert richtig gut, perfekt.

01:06:38.760 --> 01:06:51.160
Also, wir haben gelernt, wir haben jetzt eine neue Super-Code-Completion-AI, die merkwürdige

01:06:51.160 --> 01:07:02.440
Sachen Code Completed. Hier, Code Completed, das nix. So, Summaries, also. Ach so, mein

01:07:02.440 --> 01:07:06.400
Spinnengall, ich erinnere. Also, was ich jetzt erwarten würde, wenn ich Summaries Punkt

01:07:06.400 --> 01:07:15.760
mache, das ist ein String-Array. Ganz ehrlich, ganz oben würde ich erwarten Length und ich

01:07:15.760 --> 01:07:20.120
würde auch vorschlagen, dass der mir String-Join anbietet, ehrlich gesagt. In irgendeiner Art

01:07:20.120 --> 01:07:30.280
und Weise. Da bin ich mal gespannt, wie schlau das Ding ist. Okay, Length, Copy 2. Was halt

01:07:30.280 --> 01:07:34.800
richtig cool wäre, wenn der jetzt hier vorschlagen würde, du möchtest wahrscheinlich auch sogar

01:07:34.800 --> 01:07:45.160
sowas hier haben. Was ist denn U? Ist es ein Leerzeichen? Domdoretto, danke schön für den

01:07:45.160 --> 01:08:04.920
Sub. Was ist U002? C, ist es Leerzeichen? Komma. Unicode, Komma. Okay, das ist gar nicht so schlecht,

01:08:04.920 --> 01:08:13.320
dieser Vorschlag. Der Vorschlag ist echt in Ordnung. Ich mein, man könnte auch ganz

01:08:13.320 --> 01:08:20.320
klassisch den da nehmen. Du kannst jetzt mit Emojis joinen. Okay, das muss ich ausprobieren.

01:08:20.320 --> 01:08:36.360
Ich muss mal kurz Konsolenanwendung aufmachen, ob die jetzt Emoji-Support haben. Wie öffnet

01:08:36.360 --> 01:08:47.080
man an diese Startseite? Ah, hier, Recent Files haben wir da noch, Recent Solution. Kann

01:08:47.080 --> 01:08:59.640
ich, haben wir denn jetzt Emoji-Support? Das muss ich jetzt ausprobieren. Hallo? Man kann

01:08:59.640 --> 01:09:07.800
GIFs einfügen. Okay, das bringt, das bringt es ja richtig an der Stelle. Okay, wir haben

01:09:07.800 --> 01:09:12.880
schon mal kein GIF, wir haben schon mal kein Emoji-Support. Was ist das eigentlich für

01:09:12.880 --> 01:09:16.160
ein komisches Menü? Warum war das eben unten rechts? So, und wenn ich sie ausführe, haben

01:09:16.160 --> 01:09:19.880
wir immer, bestimmt immer noch kein Emoji-Support. Nein, natürlich nicht. Wo kämen wir denn

01:09:19.880 --> 01:09:24.040
auch hin, wenn neues Teusch bei Microsoft das irgendwie könnte? So, gucken wir mal,

01:09:24.040 --> 01:09:28.920
wie es im Terminal aussieht. Aber da, da weiß ich eigentlich, dass es unter PowerShell

01:09:28.920 --> 01:09:37.160
nicht funktioniert. Wo, wo legt denn das Ding überhaupt? Wo hat er denn das hingelegt?

01:09:37.160 --> 01:10:00.040
Ah ja, alles klar..net-run, nee. Warum nicht? Ah, weil ich mich verschrieben hab. Ah, das

01:10:00.040 --> 01:10:02.840
ist halt broken. Das ist halt broken. Keine Emojis. Das liegt aber an PowerShell und nicht

01:10:02.840 --> 01:10:07.960
an, also das Terminal kann prinzipiell Emojis, weil wenn ich, wenn ich WSL installiert hab,

01:10:07.960 --> 01:10:16.560
funktioniert alles. Nee, ich hab nicht studiert. Okay, das sackt. Also immer noch kein Emoji-Support

01:10:16.560 --> 01:10:22.080
enttäuscht mich. Aber es ist ja klar, Wishlist Studio selbst ist ja noch WPF und WPF kann

01:10:22.080 --> 01:10:27.960
ja keine Emojis. Wird ja ein weiterer Punkt dafür, dass die Microsoft UI-Technologien,

01:10:27.960 --> 01:10:33.760
die benutzbar sind unter Windows, sacken. Weil Microsoft verwenden ja selbst ihren Kram

01:10:33.760 --> 01:10:47.840
nicht. Gut, also das funktioniert schon mal nett. Mach mal wieder das andere auf. Du kannst

01:10:47.840 --> 01:10:52.840
WSL jetzt mit WSL installieren. Okay, das muss ich jetzt ausprobieren. Mach mal hier

01:10:52.840 --> 01:11:13.280
neu auf. Was kann ich machen? WSL minus minus install. Sudo. RunS. RunS, WSL. Gibt's da nicht

01:11:13.280 --> 01:11:24.360
irgendwas für? Gibt's da nicht irgendein Kommando-Zeilen-Ding für? Admin. Gibt das

01:11:24.360 --> 01:11:29.480
nicht irgendein Sudo-Äquivalent in PowerShell? Ich meine, ich kann, ich kann das starten

01:11:29.480 --> 01:11:37.920
als Admin. Wie starte ich überhaupt eine Admin-PowerShell hier drinnen? So, schon mal nicht. Terminal.

01:11:37.920 --> 01:11:47.360
Okay, starten wir das ganze Terminal als Admin. Das funktioniert. WSL minus minus install.

01:11:47.360 --> 01:11:52.240
Ist halt dumm, dass es nicht so eine Sudo-Variante standardmäßig gibt. Ich weiß, man kann sich

01:11:52.240 --> 01:11:58.560
was nachinstallieren. Okay, nice, Funst. Das ist schon mal schön. Das ist schon mal schön,

01:11:58.560 --> 01:12:03.560
dass es jetzt einfach geht und man nicht 3 Milliarden Dinger machen muss. Oh, habe ich

01:12:03.560 --> 01:12:08.040
Virtualisierungs-Support eingeschaltet? Kann sein, dass das jetzt gar nicht funktioniert.

01:12:08.040 --> 01:12:18.880
Nein, Virtualisierungs-Support ist aus. Ich muss Windows neu starten, klein. GUI-App-Support

01:12:18.880 --> 01:12:29.440
ist am Starten. Der hat auch, der echt erstaunlicherweise ganz gut funktioniert. Wie findet ihr, Python

01:12:29.440 --> 01:12:36.400
so ist sehr gut zu gebrauchen? Bist du auf einer Suche nach einer Einsteiger-Programmiersprache

01:12:36.400 --> 01:12:47.920
oder warum fragst du? Was Einsteiger-Programmiersprachen angeht, da habe ich was. Okay, Power off.

01:12:47.920 --> 01:13:09.280
Ach nee. Shutdown? Ah, now? Nee. Macht man das unter Windows? Was? Okay, Leute im Chat,

01:13:09.280 --> 01:13:19.160
S minus S minus P null. Aha, exquisite. Ich will übrigens gar nicht rebooten, ich will

01:13:19.160 --> 01:13:28.760
tatsächlich ausschalten. Schaltet das jetzt aus oder rebootet das? Updater und underway.

01:13:28.760 --> 01:13:35.120
Also, wenn du auf der Suche nach Einsteiger-Programmiersprachen bist, dann geh mal zu mir auf YouTube. Da haben

01:13:35.120 --> 01:13:41.840
wir nämlich letztens ein Video gemacht zusammen. Nämlich das da. Einsteiger-Programmiersprachen.

01:13:41.840 --> 01:13:47.680
Kannst du dir ja mal angucken. Ansonsten, die Kurzvariante für dich, was wir hier drinnen

01:13:47.680 --> 01:13:55.360
vorstellen ist Go, dann Python, dann JavaScript. Aus irgendwelchen Gründen möchte da Florian

01:13:55.360 --> 01:13:59.840
C und C++ vorstellen. Ich werde es bis heute nicht verstehen, aber es war sein Part. Und

01:13:59.840 --> 01:14:04.560
ich stelle C Sharp vor. Und meine persönliche Empfehlung, wenn du wirklich noch nichts kannst

01:14:04.560 --> 01:14:09.040
und noch nichts konkretes vorhast, fang mit JavaScript an. Du brauchst einfach nur einen

01:14:09.040 --> 01:14:13.840
Browser und kannst loslegen. Und du kannst so geile Panels wie SpaceX programmieren.

01:14:13.840 --> 01:14:22.280
Wenn du Python bisschen kannst, spricht auch nichts dagegen, damit weiterzumachen. Das

01:14:22.280 --> 01:14:29.160
ist auch eine super Einsteiger-Programmiersprache. Ich glaube, das muss man anhaken dafür.

01:14:29.160 --> 01:14:47.480
Max, wo hast du die Preview von Windows 11 her? Secret. Haben wir schon mal einen Go-Stream

01:14:47.480 --> 01:14:51.600
gemacht? Ne, wir haben noch keinen Go-Stream gemacht, weil ich bin nicht der Super-Go-Profi.

01:14:51.600 --> 01:14:55.400
Ich meine, ich kriege da drin was programmiert, aber ich bin jetzt keiner, der euch sagen

01:14:55.400 --> 01:14:59.800
ja, so ist die beste, also ich kann euch in C Sharp zeigen, so ist die beste Art und Weise,

01:14:59.800 --> 01:15:03.320
was zu machen. Das kann ich in Go, ich kann in Go was machen, dass es funktioniert, aber

01:15:03.320 --> 01:15:12.400
ob es die beste Art und Weise ist, keine Ahnung. So, geht das jetzt? Warum startet sich immer

01:15:12.400 --> 01:15:23.400
diese Kacke? Xbox App. Was will die eigentlich von mir? Was verkaufen wahrscheinlich? Rust

01:15:23.400 --> 01:15:43.000
7, das können wir tatsächlich mal machen. Rust ist super, aber Rust ist wirklich nur

01:15:43.000 --> 01:15:51.280
für High IQ Leute. Also wenn ihr nicht mindestens, sagen wir mal 125 plus IQ habt, dann könnt

01:15:51.280 --> 01:16:04.640
ihr Rust vergessen. So, also Enter New Unix Name. 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, jawoll.

01:16:04.640 --> 01:16:08.720
So, und jetzt können wir PowerShell, jetzt können wir das Terminal starten und WSL aufmachen.

01:16:08.720 --> 01:16:32.200
Terminal, M, JUBANTU und wenn ich jetzt nach, wo ist da Kram? Documents, Source, ne, Source,

01:16:32.200 --> 01:16:40.160
WPos. Ich hab mich übrigens auch verschrieben, sehe ich gerade. So, wenn ich da jetzt hingehe

01:16:40.160 --> 01:16:50.400
und sage.NET RUN, dann, ach fuck, das ist jetzt, da muss ich.NET EXE machen oder RUN?

01:16:50.400 --> 01:17:06.560
Jetzt richtige Ordner und jetzt haben wir Emojis. Auch nicht? Warum haben wir da keine

01:17:06.560 --> 01:17:14.560
Emojis jetzt? Muss ich vielleicht.NET unter Linux installieren, dass das funktioniert?

01:17:14.560 --> 01:17:30.320
Moment, ist das WSL 1 oder WSL 2? Das ist WSL 2, oder? Das Terminal, das kann Emojis,

01:17:30.320 --> 01:17:36.640
das kann Emojis, das Terminal unter Linux. Das geht. Wohingegen, ihr seht's, unter PowerShell

01:17:36.640 --> 01:17:42.280
funktioniert das nicht. Das ist wahrscheinlich einfach das Problem, dass das ein.NET, Windows

01:17:42.280 --> 01:17:50.000
.NET Anwendung ist, die jetzt rumbackt. Okay, UPD, INSTALL, haben die eigentlich.NET

01:17:50.000 --> 01:17:58.120
stundermäßig mehr drinnen? Ne, ne? Die wollen, dass ich einen Snap installiere wahrscheinlich.

01:17:58.120 --> 01:18:07.440
Ne, ne, ich installiere keinen Snap. Du mein, das überhaupt nicht funktioniert damit. Ich

01:18:07.440 --> 01:18:11.080
hab eine Idee. Das ist ja Cross-Platform, ich weiß, was wir machen. Wir machen jetzt,

01:18:11.080 --> 01:18:16.040
wir machen jetzt richtig, richtige Big-Brain-Idee. Passt mal auf. Richtig, richtig. Jetzt kommt

01:18:16.040 --> 01:18:25.480
die ultimative Hacker-Man-Solution, was wir jetzt machen..NET, BUILD, minus, minus, nee,

01:18:25.480 --> 01:18:38.960
PUBLISH, PUBLISH, minus, minus, self-contained, self-contained, Linux 64, ich hab keine Ahnung,

01:18:38.960 --> 01:18:56.720
ob das die richtigen Kommandos sind, nein. Ne, X64, okay. Massive, Massive Hacker-Man-Solutions

01:18:56.720 --> 01:19:09.320
hier. Also, gehen wir dahin. Wo müssen wir hin? CD, bin, debug,.NET, Linux, ist Terminal

01:19:09.320 --> 01:19:28.840
ne, ist nicht, ist nicht gecrasht. Publish. So, und jetzt kann ich's ausführen. Damn,

01:19:28.840 --> 01:19:40.360
habt ihr's gesehen? Habt, habt ihr's gesehen? Zack, und da haben wir unsere Emojis. Richtig

01:19:40.360 --> 01:19:54.120
Six-Head, oder? Das ging aber nur, weil wir jetzt mit, okay, okay, das jetzt zu erklären

01:19:54.120 --> 01:20:04.240
ist echt kompliziert. Wir haben mit WSL das Windows.NET aufgerufen und dort mit dem Windows.NET

01:20:04.240 --> 01:20:11.720
cross-compiled ne native Linux-Anwendung, die wir dann ausführen unter WSL und dann

01:20:11.720 --> 01:20:23.400
funktioniert's mit den Emojis. Was, CH, CHP, 6500, was, was, was, was, Moment, warte, das

01:20:23.400 --> 01:20:31.200
geb ich nicht einfach so ein, ich weiß nicht, was es macht. Check mal mein Sample oben,

01:20:31.200 --> 01:20:46.760
was, was, was, was, Sample. Was, was, was macht CH, CHP? Jetzt sind wir wieder im Microsoft

01:20:46.760 --> 01:21:03.040
Weird Champland. Das ist nicht standardmäßig Unicode. Okay, jetzt sind wir echt im, im,

01:21:03.040 --> 01:21:08.920
im, im, Massive Microsoft Weird Champland. Also, das heißt, ich geh jetzt dahin, geb

01:21:08.920 --> 01:21:26.840
das ein, dann geh ich in, ja, dahin,.NET Run. Nö, funktioniert nicht. Funktioniert nicht.

01:21:26.840 --> 01:21:38.360
Bam. Outdated, gebated, overrated. Funktioniert nicht. Kann man Change-Code-Page auch unter

01:21:38.360 --> 01:22:00.840
Linux machen? Nee. Deiner, hm? C-Pool. Komm. Also, deswegen muss ich nach wie vor sagen,

01:22:00.840 --> 01:22:04.800
einfach eine Linux-4M und gut ist, dann muss man sich mit dem ganzen Chat immer noch nicht

01:22:04.800 --> 01:22:18.120
rumschlagen. Nee, geht nicht. Tja, funktioniert nicht. Okay, Moment, Moment, was, was? Mach

01:22:18.120 --> 01:22:27.560
in deinem Sample mal Console-Writer noch Console-Output-Encoding. Oh, big brain time. Das machen wir jetzt,

01:22:27.560 --> 01:22:31.120
das machen wir jetzt. Da lernt, hier Leute, ich lerne noch was, ich, ich, ich lerne, wie

01:22:31.120 --> 01:22:38.080
man auf der Windows-Shell Emojis ausgeben kann. Heute, heute hab ich viel, viel wichtige Infos

01:22:38.080 --> 01:22:44.040
hier, viel wichtige Input gelernt. So, also was soll ich machen? Console, also vorher

01:22:44.040 --> 01:22:54.880
wahrscheinlich, ne? Console, Output, Output, Output-Encoding gleich. Ja, super, AI, schlag

01:22:54.880 --> 01:23:11.600
mir mal was vor. Output-Encoding. AI hat kein Bock. Encoding, okay. UTF-8. So, und das soll

01:23:11.600 --> 01:23:20.640
jetzt irgendwas bringen. Probieren wir das mal hier aus. Tatsächlich, das Funst. Moment,

01:23:20.640 --> 01:23:25.560
Moment. Geht, geht das auch im, im, im alten Kommando-Zeilen-Prompt? Nee, oder? Da geht

01:23:25.560 --> 01:23:31.760
das. Okay. Warum um alles in der Welt geht das? Kann mir das irgendjemand erklären? Warum,

01:23:31.760 --> 01:23:36.680
warum kann ich hier in dem Programm Emojis ausgeben, aber keine Emojis reincopypasten?

01:23:36.680 --> 01:23:42.800
Das ist, ey, Microsoft-Encoding-Land ist echt die absolute Hölle. Source?

01:23:42.800 --> 01:24:05.160
Was? CHCP65001? Okay, nee, da geht's glücklicherweise nicht.

01:24:05.160 --> 01:24:21.960
Was? Also, Pock. Richtig, richtig, richtig, richtig Pock. So, aber wir waren ja eigentlich

01:24:21.960 --> 01:24:27.240
dabei, wir wollten uns Wishless Studio angucken und nicht irgendwelche Emoji-Ausgaben. Wo

01:24:27.240 --> 01:24:30.480
hatten wir denn jetzt den Blog-Post? Also, wo stand da jetzt noch was drin, was es sonst

01:24:30.480 --> 01:24:41.480
noch so gibt? Wishless Studio 2022 Review. Die bei Microsoft sind einfach zu sick-set

01:24:41.480 --> 01:24:47.720
und mir verstehen es nicht. Glaub schon. Ja, das wird an uns liegen. Gehe ich auch von

01:24:47.720 --> 01:24:56.640
aus. Unsere, unsere Köpfe sind einfach nicht zu, zu groß genug für die Microsoft-Logik.

01:24:56.640 --> 01:25:02.960
Also, 64-Spit-Upgrade bisher bestes Intelli-Code. Okay, Leute, wenn das das bisher beste Intelli-Code

01:25:02.960 --> 01:25:08.240
ist, dann will ich nicht wissen, wie geil Intelli-Code bisher war. Ach, wir können tatsächlich

01:25:08.240 --> 01:25:12.520
mal probieren, ob da, was der bei Record sagt. Das, das probieren wir jetzt noch mal aus,

01:25:12.520 --> 01:25:25.160
was der bei Record sagt. Record, legt der da irgendwas vor? Jetzt mal, schlägt er in

01:25:25.160 --> 01:25:32.440
der Konsolenanwendung überhaupt was vor? Nee, in der Konsolen, warum geht dann in der

01:25:32.440 --> 01:25:40.040
Konsolenanwendung Intelli-Code nicht? Warum geht, warum, hä? Guck mal, in der Konsolenanwendung

01:25:40.040 --> 01:25:48.800
geht Intelli-Code nicht. Doch, doch. Doch, oder, oder auch, hä? Eben ging es noch nicht,

01:25:48.800 --> 01:26:01.080
vorhin ging es. Ich blick da nicht mal durch. Public, Public, der Zeichen, Glass. So, das

01:26:01.080 --> 01:26:11.720
ist das Beispiel, was eben funktioniert, was eben funktioniert hat. Drop. Okay, das funktioniert.

01:26:11.720 --> 01:26:20.120
Guck mal, jetzt ist es broken, jetzt funktioniert es nicht mehr. Eben hat es mit Firstname und

01:26:20.120 --> 01:26:27.920
Lastname auch funktioniert. Jetzt ergibt er mir aber ID und User-ID und User-Count und...

01:26:27.920 --> 01:26:45.880
Ach und jetzt muss ich Firstname machen, oder? Okay, jetzt geht es. Okay, ich muss sagen,

01:26:45.880 --> 01:26:50.920
die AI ist noch ein bisschen fragil, die funktioniert noch nicht so richtig gut. Probierst du noch

01:26:50.920 --> 01:26:56.480
Maui aus? Ja, mal ganz kurz, falls sie schon drin ist. Äh, äh, warte mal, Leute, was

01:26:56.480 --> 01:27:04.480
wollte ich jetzt ausprobieren? Das habe ich schon wieder vergessen. Ach so, Record. Record.

01:27:04.480 --> 01:27:20.600
Funktioniert das da auch? Äh, und jetzt muss man sagen, in it, ne? So, Record-Stells. Ne,

01:27:20.600 --> 01:27:28.600
sonst kann er noch nicht. Oh, doch. Doch, kann er, kann er. Guck mal, gar nicht so blöd,

01:27:28.600 --> 01:27:34.760
gar nicht so blöd. Naja, ich bin auch nicht so wahnsinnig begeistert, muss ich ehrlich

01:27:34.760 --> 01:27:47.160
sagen, davon. Wir machen wirklich mal ein Maui-Projekt. Falls wir... Falls das überhaupt

01:27:47.160 --> 01:27:59.800
geht schon. Geht das überhaupt schon? WPF, WPF. Wer bei Microsoft hat sich eigentlich

01:27:59.800 --> 01:28:09.800
gedacht, dass das hier übersichtlich ist? Kann es sein, dass wir das zusätzlich installieren

01:28:09.800 --> 01:28:24.640
müssen? Kann es sein, dass man Maui-Zeug zusätzlich installieren muss? Desktop? Gibt

01:28:24.640 --> 01:28:33.280
es zumindest nicht zur Auswahl. Dotnet 6 ist dabei, muss eigentlich passen. Maui ist der

01:28:33.280 --> 01:28:40.720
Versuch, von Microsoft in Cross-Platform UI-Framework rauszubringen, nur mit dem meiner Meinung nach

01:28:40.720 --> 01:28:47.360
komplett falschen Ansatz. Und Linux wird prinzipiell nicht unterstützt. Okay, also, da gibt's

01:28:47.360 --> 01:28:57.720
nix. Ja, mit Electron kannst du's auch machen. Wir können die Testgeschichte mal ausprobieren.

01:28:57.720 --> 01:29:01.680
Da weiß ich aber nicht, wie das geht, Chat. Da müsste der mir helfen. Ohne Scheiß, ich

01:29:01.680 --> 01:29:11.400
hab wirklich keine Ahnung, wie das mit Tests funktioniert. Add? Class? Okay, keine Ahnung.

01:29:11.400 --> 01:29:36.440
Huge? Tests? So, und wie geht das jetzt? Test? Hallo? Test? Nee, das ist, das ist irgendwas

01:29:36.440 --> 01:29:45.880
anderes, oder? Zumal das auch noch irgendwie kaputt ist und gar nicht funktioniert. Ich

01:29:45.880 --> 01:29:53.240
weiß gar nicht, wie ich den Test-Runner hier überhaupt aufmache. Ah ja. Nee, da muss ich

01:29:53.240 --> 01:30:00.600
jetzt erstmal X-Unit, N-Unit oder wie auch immer der Kram heißt installieren. Da bin

01:30:00.600 --> 01:30:07.960
ich, da bin ich zu low, da bin ich zu low für. Da bin ich zu low für. Okay, eigenes

01:30:07.960 --> 01:30:31.560
Projekt. Add? Ah ja, N-Unit-Test. Genau. Next. Create. Kann das Lore? Weiß ich nicht. Kannst

01:30:31.560 --> 01:30:39.520
ich, warum ist das hier alles, alles, alles broken? Warum ist das eigentlich alles kaputt?

01:30:39.520 --> 01:30:47.720
Ah, jetzt ist es ganz, okay. So, und wo ist jetzt der Test-Runner? Windows? Test? Wo

01:30:47.720 --> 01:30:54.680
ist, Test-Explorer, da ist er. So, und wo geht das jetzt, was der Typ gezeigt hat mit

01:30:54.680 --> 01:30:58.840
den unterschiedlichen Plattformen? Meine Güte, die Bedienung davon ist aber nur wirklich

01:30:58.840 --> 01:31:08.680
mal massivster, massivster Pains-Champ, Alter. Richtig Hardcore-Pains-Champ. Und wo kann

01:31:08.680 --> 01:31:12.920
man das jetzt Linux-technisch umstellen, was der gezeigt hat im Video? Das geht glaub

01:31:12.920 --> 01:31:26.640
ich noch gar nicht. Das ist mir, das ist mir zu eklig zu benutzen. Das mach ich eh nicht.

01:31:26.640 --> 01:31:30.560
Das werd ich eh nicht benutzen. Das weiß ich jetzt schon. Soweit ich mein Visual-Studio

01:31:30.560 --> 01:31:35.520
2022 eh nicht verwenden. Ich bleib weiter unter Linux mit Rider und alles, und alles

01:31:35.520 --> 01:31:48.960
ist gut. So, gibt's sonst noch irgendwas Neues? Ich würd gerne ein Maui-Projekt anlegen,

01:31:48.960 --> 01:31:59.160
aber das geht ja nicht. Bisher best ist alles klar. Du bist jetzt Macbook-Besitzer? Ja,

01:31:59.160 --> 01:32:07.960
das macht nix, da läuft Rider auch drauf. Es ist zwar ein bisschen lustig, dass wir

01:32:07.960 --> 01:32:14.480
erst ne Java-IDE brauchen, damit wir ordentlich.NET-Cross-Plattform programmieren können,

01:32:14.480 --> 01:32:28.280
aber immer noch besser als Visual-Studio vom Mac oder sowas. Gab's jetzt noch irgendwas,

01:32:28.280 --> 01:32:31.640
was wir ausprobieren müssen? Ich mein, das ist jetzt wirklich gar nicht, das ist jetzt

01:32:31.640 --> 01:32:49.240
bisschen arm. Ich mein, das ist nicht die CPU-Plattform. Gibt ja nix. Angeblich haben

01:32:49.240 --> 01:32:56.640
jetzt, das können wir noch mal ausprobieren, Angeblich hat Windows Forms jetzt Hot Reload,

01:32:56.640 --> 01:33:01.600
aber da weiß ich nicht, ob das schon eingebaut ist. Angeblich haben die Hot Reload. Das probier

01:33:01.600 --> 01:33:07.080
wir jetzt mal aus, ob das funktioniert. Windows Forms Hot Reload, da hab ich vor 35 Jahren

01:33:07.080 --> 01:33:10.360
davon geträumt, noch bevor ich auf der Welt war. Nee, stimmt nicht, ich bin da mittlerweile

01:33:10.360 --> 01:33:23.760
36. Ja. Okay, ein Button. Ich brauch ein Button. Button. Geben wir ein Button. Alles klar.

01:33:23.760 --> 01:33:28.880
So, gucken wir mal, ob das jetzt Hot Reload hat. Ich hab gelesen, dass es angeblich Hot

01:33:28.880 --> 01:33:36.080
Reload hat. So, Hot Reload. Das heißt, wenn das jetzt funktioniert. Ach, guck mal da.

01:33:36.080 --> 01:33:49.400
Da gibt's nen extra Knopf. Pure Magie. Äh, nein, nein, nein. Ich will, ich will im Design,

01:33:49.400 --> 01:33:58.520
wo ist die Toolbox? Wo ist die, Leute, wo ist die Toolbox? View, Toolbox. Toolbox. Was?

01:33:58.520 --> 01:34:07.800
Okay, wir machen einfach, wir machen einfach den zweiten Button. Und jetzt, und jetzt,

01:34:07.800 --> 01:34:12.360
und jetzt, und jetzt. Passt auf, Leute. Oh nein, nein, nein. Nicht singen, das ist Monka

01:34:12.360 --> 01:34:16.880
Toss. Ah, bla, bla, bla, bla, bla, bla. Wo hab ich die Musik? Ah, wo ist die Musik?

01:34:16.880 --> 01:34:27.360
Geh. Immer wenn gesungen wird, ist Monka Toss. Immer noch. Wieder gesungen. Bam. Okay. Also,

01:34:27.360 --> 01:34:33.480
testen wir mal. Ja, wenn ich jetzt da oben auf den Button drücke, sollte das jetzt Hot

01:34:33.480 --> 01:34:47.520
Reload. Probieren wir das mal aus. Ob das Hot Reloaded. Funktioniert ja schon mal gut.

01:34:47.520 --> 01:34:59.000
Okay, vielleicht, vielleicht geht das nur. Speichern? Ach, der speichert nicht automatisch

01:34:59.000 --> 01:35:09.640
für mich. Geht aber auch so nicht. Okay, vielleicht, vielleicht geht das nur, geht

01:35:09.640 --> 01:35:17.720
das nur für, äh, neue Sachen. Also, äh, nicht Button click. Wir machen jetzt irgendwie

01:35:17.720 --> 01:35:33.280
this button, äh, Texts gleich. Okay, wir nehmen die Super Big Brain AI Completion. Nö. Das

01:35:33.280 --> 01:35:46.800
funktioniert nicht. Okay. Hot Reload für Windows Form F. Ich mein nicht, dass es mich

01:35:46.800 --> 01:35:55.680
ehrlich gesagt großartig stört. Da steht Code Changes, nicht Design Changes. Na gut,

01:35:55.680 --> 01:36:03.440
wir haben jetzt beides gemacht, beides hat nicht funktioniert. Ich glaube, Hot Reload

01:36:03.440 --> 01:36:06.360
funktioniert nur, wenn man gerade nicht am Debuggen ist. Okay, dann starte ich es ohne

01:36:06.360 --> 01:36:14.160
Debugger mal. So, jetzt ist ohne, jetzt habe ich ohne Debugger gestartet. Ne, ne, dann

01:36:14.160 --> 01:36:20.120
habe ich den Button gar nicht. Ich muss das, ich muss das mit dem Debugger starten, wäre

01:36:20.120 --> 01:36:28.080
es ja auch logisch. Wieso sollte der Constructor nochmal triggern? Ja, weiß ich, ich frage

01:36:28.080 --> 01:36:32.680
Microsoft, die schreiben was von Hot Reload. Ja, wir können, wir können noch mal was anderes

01:36:32.680 --> 01:36:38.320
probieren. Hier ist nichts, hier ist nichts drinne. Dann machen wir jetzt mal die onClick,

01:36:38.320 --> 01:36:42.640
die onClick Methode, machen wir jetzt mal was rein für den, für den Button. Also, aktuell

01:36:42.640 --> 01:36:47.840
passiert nichts. Ähm, das heißt, wir machen da jetzt rein, oh, wie macht man denn Pop-Up?

01:36:47.840 --> 01:36:57.280
Wie, wie macht man denn Pop-Up in Windows Forms? Model? Model? Ne. Ah, du Scheiße. Okay,

01:36:57.280 --> 01:37:12.920
Dialog. Dialog? Ne. Message Box. Message Box Show. Ah ja. Okay. Fuck. Okay, gespeichert.

01:37:12.920 --> 01:37:20.040
Hot Reload. Und jetzt? Oh, das funktioniert. Also, da haben wir schon mal. Designer Changes

01:37:20.040 --> 01:37:31.040
gehen nicht und Constructor Changes gehen nicht. Okay. Jetzt noch mal testen, ob das

01:37:31.040 --> 01:37:39.200
auch wirklich funktioniert. Forgo. Reload. Es funktioniert. Okay, das ist schon mal cool.

01:37:39.200 --> 01:37:50.640
Weil, man checkt noch wirklich Design, Design-Sachen nicht funktionieren. Properties. Mal das,

01:37:50.640 --> 01:37:58.920
äh, Color. Ist jetzt, äh, Orange. Perfekt. Ne, das funktioniert nicht. Das wird unter

01:37:58.920 --> 01:38:03.960
der Haube eh auch in irgendeinem Constructor gesetzt. Naja. Nice to have hat eigentlich

01:38:03.960 --> 01:38:08.240
kaum einer gebraucht. Aber mal ganz ehrlich, juckt mich nicht. Windows Form kann durchaus

01:38:08.240 --> 01:38:14.960
ein paar coole neue Features gebrauchen, auch wenn Windows Forms an sich schon, da bisschen

01:38:14.960 --> 01:38:33.280
in die Jahre gekommen ist. Does it work on Macbook? No. No. But, äh, I think the final

01:38:33.280 --> 01:38:52.200
version has Visual Studio for Mac. Lass mal kurz gucken. Gibt's da schon was für Mac?

01:38:52.200 --> 01:39:08.880
Maybe it's available for Mac, too. Don't know. Looks like Windows only. Ja, aber ich

01:39:08.880 --> 01:39:15.040
glaube, das sagt eh unter Mac. Ja, okay, das ist Hard Reload für Windows Forms. Warum

01:39:15.040 --> 01:39:25.920
nicht? Warum nicht? Kann man machen. Muss man nicht. Benutzen die Leute nicht Flutter

01:39:25.920 --> 01:39:29.560
eher anstelle von Windows Forms? Naja, auf dem Desktop nicht. Auf dem Desktop, also Flutter

01:39:29.560 --> 01:39:34.440
ist cool, aber Flutter auf dem Desktop ist einfach noch nicht ready. Aber ich gehe davon

01:39:34.440 --> 01:39:39.000
aus, dass Flutter auf dem Desktop noch das brauchbarste Crossplatform, auf absehbare

01:39:39.000 --> 01:39:45.920
Zeit das brauchbarste Crossplatform GUI Framework werden wird, weil aktuell hast du ehrlich

01:39:45.920 --> 01:39:55.760
gesagt zwei realistische Alternativen. Du hast Qt oder du hast Electron. Das sind die

01:39:55.760 --> 01:40:01.760
einzigen zwei, die es gibt. Electron ist halt, sagen wir so, JavaScript, was sich jedermanns

01:40:01.760 --> 01:40:07.920
Fall ist, und es ist halt riesengroß mit massig Ramverbrauch, weil Electron, weil V8 und Chrome

01:40:07.920 --> 01:40:13.120
und Node.js alles gleichzeitig laufen muss. Gut, und du hast Qt, das Problem an Qt ist

01:40:13.120 --> 01:40:17.640
C++. Du kannst ein bisschen was in Python machen, aber Python Crossplatform zu packagen

01:40:17.640 --> 01:40:29.680
ist auch nicht so wahnsinnig tolle. Und ansonsten hast du nix? Ja, doch, stimmt, du hast Tkinter

01:40:29.680 --> 01:40:36.800
in Python eingebaut. Avalonia ist leider auch noch nicht wirklich soweit, dass man das,

01:40:36.800 --> 01:40:42.400
also das letzte Mal, wo ich mir das angeguckt hab, dass man das komplett gut verwenden kann.

01:40:42.400 --> 01:40:48.960
Das letzte Mal, wo ich Avalonia geguckt hab, die hatten beispielsweise noch kein Browser,

01:40:48.960 --> 01:40:55.920
also noch kein Webview und auch keine Möglichkeit in irgendeiner Art und Weise da beschleunigten

01:40:55.920 --> 01:41:06.040
GPU, beschleunigten Content zu rendern. C++ ist für'n Arsch, ja ist es auch. Ansonsten

01:41:06.040 --> 01:41:11.240
ist Avalonia ganz cool. Ganz ehrlich, ich hätt's cooler gefunden, hätt' Microsoft

01:41:11.240 --> 01:41:16.640
Avalonia ordentlich gemacht und nicht ihr komisches Maui rausgebracht. Maui ist, finde

01:41:16.640 --> 01:41:19.920
ich, der falsche Ansatz. Das hab ich jetzt schon ein paar Mal gesagt, ich versuch jetzt

01:41:19.920 --> 01:41:24.040
mal zu erklären, warum das meiner Meinung nach der falsche Ansatz ist. Also, wenn du

01:41:24.040 --> 01:41:29.440
nun Crossplatform GUI Framework machst, dann hast du zwei grundsätzlich unterschiedliche

01:41:29.440 --> 01:41:36.960
Ansätze. Du kannst sagen, ich bau nen Rapper, der die native UI Elemente nimmt, also hier

01:41:36.960 --> 01:41:43.560
zum Beispiel Buttons unter Windows, die so aussehen, Buttons unter Linux, die so aussehen,

01:41:43.560 --> 01:41:49.080
also du nimmst die native UI Elemente und baust nen Rapper drum herum und dann hast

01:41:49.080 --> 01:41:55.120
du den Vorteil, dass die Anwendungen zwar native aussehen, aber sich oftmals ein bisschen

01:41:55.120 --> 01:41:59.480
merkwürdig anfühlen, weil du für den kleinsten gemeinsamen Nenner programmieren willst.

01:41:59.480 --> 01:42:05.240
Also, wenn du so nen Rapper hast, der beispielsweise native Controls benutzt von Android, iOS,

01:42:05.240 --> 01:42:10.400
Windows, Linux, Mac, die Frage ist immer noch, was ist eigentlich native unter Linux, dann

01:42:10.400 --> 01:42:16.000
musst du gucken, dass du den kleinsten gemeinsamen Nenner an API unterstützt, was du abbilden

01:42:16.000 --> 01:42:21.760
kannst. So, das ist das, wie das Xamarin oder Maui macht. Du kannst es da übrigens auch

01:42:21.760 --> 01:42:27.480
besser machen, aber dann musst du sagen, if Platform gleich gleich Windows. So, und

01:42:27.480 --> 01:42:31.480
dann gibt es den Ansatz, der meiner Meinung nach einzig wahre und sinnvollste Ansatz, so

01:42:31.480 --> 01:42:40.960
wie das Flutter auch macht, ist, man nimmt für die jeweilige Platform schnellste Rendertechnologie

01:42:40.960 --> 01:42:46.360
und malt Steuerelemente selbst. Das heißt, oder was heißt für die jeweilige Platform,

01:42:46.360 --> 01:42:53.040
das muss noch nicht mal sein. Das heißt, man programmiert nen Renderer für Windows,

01:42:53.040 --> 01:43:01.960
für Linux, für Mac, für iOS, für Android, mit was für nem Tool auch immer und malt

01:43:01.960 --> 01:43:11.320
Steuerelemente selbst. Genau, Avalonia ist hier. Die hatten eine Zeit lang noch GTK-Erhängigkeit

01:43:11.320 --> 01:43:13.760
unter Linux, das hat mich immer ein bisschen abgeschreckt, aber ich glaube, das verwenden

01:43:13.760 --> 01:43:28.320
die plus zum Fenster malen. Ich denke, das muss nicht unbedingt so sein, du musst dich

01:43:28.320 --> 01:43:40.960
halt selbst darum kümmern. Also, ich finde den Ansatz für konsistentes Look und Feel,

01:43:40.960 --> 01:43:47.120
keine Steuerelemente malen. Deswegen ist ja auch letztendlich Electron so cool, weil Electron

01:43:47.120 --> 01:43:53.520
ist nix anderes als nen Browser, also ne Anwendung verpackt mit nem Browser dabei, Node.js V8,

01:43:53.520 --> 01:43:59.680
Chrome und das sieht halt überall eben aus, wie es halt in nem Chrome nun mal aussieht,

01:43:59.680 --> 01:44:10.640
egal auf welcher Plattform. Qt macht das übrigens auch so mit QML, die malen im Endeffekt auf

01:44:10.640 --> 01:44:16.440
jeder Plattform, mit, es gibt für Qt gibt's nen Diode X Renderer, beziehungsweise auch

01:44:16.440 --> 01:44:21.760
nen GL Renderer und sonst was. Die malen das auch so. Nur Microsoft hat sich wieder gedacht

01:44:21.760 --> 01:44:26.400
bei Maui, ne ne, wir machen diesen komischen Steuerelemente wrapper und das finde ich ist

01:44:26.400 --> 01:44:31.960
ein Kack Ansatz. Dann hast du dann wieder so Dinger, da siehts unter Mac kacke aus, oder

01:44:31.960 --> 01:44:35.320
mal siehts unter Windows kacke aus, mal siehts dann unter Linux kacke aus, mal siehts unter

01:44:35.320 --> 01:44:41.240
Android nach iOS aus, mal iOS nach Android aus und ach keine Ahnung. Ja und Flutter

01:44:41.240 --> 01:44:46.360
macht das richtig, Flutter malt den Kram selbst, deswegen denke ich, wenn die es schaffen,

01:44:46.360 --> 01:44:55.720
dass man ordentlich es auf dem Desktop benutzen kann, dass Flutter sich durchsetzen wird,

01:44:55.720 --> 01:45:02.520
weil es ist ne angenehmere Sprache als C++, auch wenn Dart, wisst ihr das Optimale, soll

01:45:02.520 --> 01:45:09.440
ich euch mal sagen, was das beste wäre, also die beste Kombination aus allem. Irgendjemand

01:45:09.440 --> 01:45:16.600
nimmt Flutter und nimmt ne ordentliche Programmiersprache, wo du auch Zugriff auf viele Libraries hast,

01:45:16.600 --> 01:45:21.960
ja. Also irgendjemand macht nen C Sharp Flutter oder nen JavaScript Flutter oder was auch

01:45:21.960 --> 01:45:28.080
immer. Das wär wahrscheinlich am besten, ich mein Dart. Warum muss es denn ausgerechnet

01:45:28.080 --> 01:45:34.000
Dart sein bei Flutter? Hätte man da nicht irgendwas nehmen können, was es gibt? Es

01:45:34.000 --> 01:45:38.560
ist jetzt nicht, als hätte Flutter unbedingt den Anspruch, ja wir brauchen auch ne eigene

01:45:38.560 --> 01:45:49.040
Programmiersprache dabei. Warum? Ja nur der Unterschied, dass du bei Electron noch ein

01:45:49.040 --> 01:45:54.000
komplettes Node-Share hast, einen kompletten Chrome mit V8 laufen lassen hast. React Native

01:45:54.000 --> 01:46:02.800
aufm Desktop sackt. Ich hab mal nen Stream in Flutter gemacht, aber ich bin da nicht

01:46:02.800 --> 01:46:12.280
wirklich gut drinne. Schau dir mal Tauri an. Ja erinnert nix dran, dass es viel RAM braucht

01:46:12.280 --> 01:46:16.520
wahrscheinlich. Ob das jetzt ein Chrome ist oder ein Native Browser, Browser brauchen

01:46:16.520 --> 01:46:27.560
halt viel RAM. Das, ja ja das hab ich gesehen. Blazer Native und Gedöns, ja das hab ich gesehen,

01:46:27.560 --> 01:46:33.480
wobei ich halt nicht so genau den, ich versteh nicht wirklich so genau die Existenzberechtigung

01:46:33.480 --> 01:46:40.720
ehrlich gesagt, weil C Sharp im Browser mit Blazer ist halt langsam und braucht nen riesen

01:46:40.720 --> 01:46:46.160
Runtime bevor es überhaupt startet. Und es hat jetzt nicht so den riesen Vorteil gegenüber

01:46:46.160 --> 01:46:51.800
Javascript, zumal du für gewisse Dom-Interaktionen immer noch Javascript brauchst im Blazer.

01:46:51.800 --> 01:46:58.040
Das ist glaub ich so, das ist so ne coole Idee gewesen bei Microsoft, wo ich nicht so

01:46:58.040 --> 01:47:05.280
den Realitätsbezug drin sehe. Es gibt bereits viel zu viele Sprachen, Newbies wissen nicht

01:47:05.280 --> 01:47:08.880
wo sie anfangen sollen. Wenn Newbies nicht wissen wo sie anfangen sollen, dann sollen

01:47:08.880 --> 01:47:15.760
die zu mir auf YouTube gehen und sich einfach dieses Video hier angucken. Was ist die beste

01:47:15.760 --> 01:47:20.920
Einstiegsprogrammiersprache? Guckt euch das Video an und dann fangt mit Javascript an.

01:47:20.920 --> 01:47:29.000
Oder mit ner anderen Sprache die wir sagen, aber wenn ihr nicht wisst was ihr machen wollt

01:47:29.000 --> 01:47:34.880
dann fangt mit Javascript an. Es sei denn ihr habt ne Abneigung jetzt schon gegen Javascript,

01:47:34.880 --> 01:47:40.200
dann nehmt halt was anderes davon, dann nehmt Python oder Go oder C Sharp oder meinetwegen

01:47:40.200 --> 01:47:45.880
jetzt Microcontroller sind auch C. Warum ist C drinne? Naja, erstens weil der Florian C

01:47:45.880 --> 01:47:51.360
Fan ist und C ist ja auch ok und gerade wenn es um Microcontroller geht, ist das nun wirklich

01:47:51.360 --> 01:47:56.000
was womit viele Leute anfangen. Viele Leute fangen mit irgendwie so nem Arduino Ding an

01:47:56.000 --> 01:48:01.160
zum Beispiel und da kannst du ja nur C verwenden bzw. du kannst eigentlich nur dieses Arduino

01:48:01.160 --> 01:48:05.920
C++ verwenden, aber man sollte auch wenn man Arduino programmiert möglichst großen Bogen

01:48:05.920 --> 01:48:11.920
um viele C++ Features machen, weil C++ einfach nur ganz großer Pains Champ ist.

01:48:11.920 --> 01:48:30.520
Wenn Flutter Dart sich durchsetzen will, warum dann nicht als Noob anfangen? Weil Dart ne

01:48:30.520 --> 01:48:37.240
Programmiersprache ist, die du nirgendswo gebrauchen kannst sonst und du wirst als deine

01:48:37.240 --> 01:48:46.360
erste Anwendung nicht gerade ne Cross-Platform GUI Anwendung machen. Also man kann sicherlich

01:48:46.360 --> 01:48:50.640
mit Dart und Flutter anfangen, wenn man da ne Vorliebe für hat, aber ich glaub nicht,

01:48:50.640 --> 01:48:54.280
dass das die beste Einsteigersprache ist oder sich da besonders gut für eignet.

01:48:54.280 --> 01:49:03.200
In der Berufsschule haben wir mit C angefangen, sind auf Java gewechselt ab dem zweiten Jahr.

01:49:03.200 --> 01:49:09.240
Ja das hab ich öfters gehört, bei uns in der Berufsschule haben wir auch C gemacht

01:49:09.240 --> 01:49:15.640
und später dann ein bisschen C Sharp und das lustige war, wir haben noch auf Papier programmiert

01:49:15.640 --> 01:49:20.320
in der Berufsschule, das ist richtig armselig. Ich mein das ist jetzt nicht, das war 2007

01:49:20.320 --> 01:49:25.600
oder so. Das ist richtig armselig, dass man da noch auf Papier programmieren musste.

01:49:25.600 --> 01:49:39.160
Was hältst du von Visual Studio Code 2020? Bis jetzt ist es durchaus in Ordnung, was

01:49:39.160 --> 01:49:43.360
ich gesehen hab. Die Sache ist nur die, dass es halt so ein Release ist, wo es im Prinzip

01:49:43.360 --> 01:49:50.880
nichts großes zu sehen gibt. Ich mein,.NET 6 ist dabei als Preview, ok, IntelliCode, ok

01:49:50.880 --> 01:49:54.600
wenn das das beste IntelliCode ist, da will ich nicht wissen, wie das vorher war und es

01:49:54.600 --> 01:49:58.360
kommt einem so vor, als laden die Projekte ein bisschen schneller, aber im Großen und

01:49:58.360 --> 01:50:04.800
Ganzen ehrlich gesagt, ja, es ist vorhanden. Mal gucken, was bei Release rauskommt. Es

01:50:04.800 --> 01:50:08.120
wird bei Release immer noch das beste für die meisten Leute sein, die unter Windows

01:50:08.120 --> 01:50:13.040
anfangen mit.NET zu programmieren, wobei ich sagen würde, wenn ich unter Windows programmieren

01:50:13.040 --> 01:50:22.640
würde, ich würde trotzdem Rider installieren. Ich bin ja schon seit letzten paar Jahren,

01:50:22.640 --> 01:50:28.440
was.NET angeht, nur noch unter Linux am programmieren mit Rider, aber im Ernst, ich würde es unter

01:50:28.440 --> 01:50:41.640
Windows auch so machen. Rider beste. Kostet halt was, wenn man nicht die Trial austricksen

01:50:41.640 --> 01:51:01.800
will. Chatbrain sollte mich auch noch sponsoren, genau. Der Vorteil am Papier programmieren

01:51:01.800 --> 01:51:08.240
ist, dass du jeden Schritt dreimal überlegst. Das dumme am Papier programmieren ist, wenn

01:51:08.240 --> 01:51:16.240
du Semikolon vergisst, das zeigt es dir nicht an. Man muss es, ich meine, es ist 2021. Da

01:51:16.240 --> 01:51:21.800
kann man durchaus nicht an Rechnersetzen programmieren. Ich bin da kein großartiger Fan von, ich

01:51:21.800 --> 01:51:34.080
halte es auch nicht für so sinnvoll. Als Student sind Chatbrains IDE's for free. Kann man Windows

01:51:34.080 --> 01:51:39.040
11 die Gruppierungen wieder ausschalten? Tja. Ich habe nichts gefunden bis jetzt, fuck mich

01:51:39.040 --> 01:51:49.640
auch total ab. Und ich habe hier in den Settings geguckt, da ist nichts zu drinnen. Keine Gruppierungen.

01:51:49.640 --> 01:51:59.480
Ich habe es aber nicht aktiviert, aber man hat da kein Setting, also das nervt mich richtig.

01:51:59.480 --> 01:52:04.400
Da brauchst du wahrscheinlich wieder irgendwelche komischen Registry-Hacks dafür. Also wenn

01:52:04.400 --> 01:52:10.920
sie das lassen, mache ich erstmal 5 Videos, in denen ich Microsoft fläme. Dieses Gekrupe

01:52:10.920 --> 01:52:18.240
ist so ätzend. Ich habe 3 Browser in Firefox auf, weil so will ich auch 3 Browser unten

01:52:18.240 --> 01:52:25.400
angezeigt bekommen. Ich meine, es ist ja nicht so, als hätte ich nicht genug Platz. Was

01:52:25.400 --> 01:52:30.600
denken die denn, wie viele Programme die Leute da unten verlinken? 50? Ich habe da unten

01:52:30.600 --> 01:52:34.080
drin. Guck mal, was habe ich denn hier? Ich habe meine Shell, ich habe einen Explorer,

01:52:34.080 --> 01:52:48.920
ich habe einen Browser. Fertig. Das reicht. Ich glaube, bei Microsoft, die treffen immer

01:52:48.920 --> 01:52:54.240
noch gute Entscheidungen. Also gerade was Clouds Sachen angeht und mit Github und sie

01:52:54.240 --> 01:52:58.240
machen schon viele coole Sachen. Microsoft hat dann einfach zig viele Abteilungen. Davon

01:52:58.240 --> 01:53:04.840
bauen halt auch viele Kacke. Unter anderem die Leute, die für Windows zuständig sind,

01:53:04.840 --> 01:53:09.240
weiß ich nicht, was die machen die letzten 5 Jahre über. Windows ist immer noch ein

01:53:09.240 --> 01:53:13.520
unglaublich zusammengestöckeltes Stück Software. Wie kriege ich denn das da eigentlich weg?

01:53:13.520 --> 01:53:31.280
Wie kriege ich das weg? Ich habe letztens H1 Update gemacht. Wetter, wie kriege ich das

01:53:31.280 --> 01:53:46.160
Wetter weg? Das ist auch so ein Windows Feature, ne? Da hat jetzt wirklich die Welt drauf gewartet,

01:53:46.160 --> 01:53:52.720
oder? Da hat die Welt drauf gewartet. Die haben gesagt, ja, ich brauche unbedingt so

01:53:52.720 --> 01:53:58.800
ein komisches Widgetrechts in meiner Taskleiste. Was da so total out of place auch noch aussieht.

01:53:58.800 --> 01:54:15.840
Die Delta-Mutanten breiten sich rasant aus. Aha. Delta-Mutanten sind am Start. Ich hoffe,

01:54:15.840 --> 01:54:22.760
oh, wisst ihr, das ist geil, wenn die Delta-Mutanten sich ausbreiten. Das heißt, dass die Homeoffice-Pflicht

01:54:22.760 --> 01:54:26.200
verlängern werden. Die sollen sich mal ein bisschen schneller ausbreiten. Die haben noch

01:54:26.200 --> 01:54:31.800
bis zum 30. Zeit sich auszubreiten. Weil bis zum 30. wollten sie ja die Homeoffice-Pflicht

01:54:31.800 --> 01:54:36.680
lassen und danach nicht verlängern. Aber wenn sich die Delta-Mutanten jetzt ausbreiten,

01:54:36.680 --> 01:54:42.720
dann verlängern die das wieder. Hoffentlich breiten die sich mal ordentlich geschwind

01:54:42.720 --> 01:54:51.360
aus jetzt. Kein Homeoffice. Warum? Homeoffice ist beste. Die breiten sich nicht so. Das

01:54:51.360 --> 01:54:58.480
ist aber schlecht. Die sollen mal Gas geben, die Mutanten. C++ ist auch die beste Sprache.

01:54:58.480 --> 01:55:10.880
C++ ist einfach nur ein ganz großer Pains-Champ. Du hast nur Gutes... Wer erzählt allen Ernstes

01:55:10.880 --> 01:55:32.720
nur Gutes über C++? Das glaube ich nicht. Das kann nicht sein. Dreh grad. Du machst

01:55:32.720 --> 01:55:36.400
das aktuelle Projekt absichtlich in C++? Ja, manche Leute sind nicht mehr zu retten.

01:55:36.400 --> 01:55:42.280
Gut, ich meine ich mache das ESP und Arduino Zeug auch in C++. Weil es nicht anders geht.

01:55:42.280 --> 01:55:53.120
Aber ich würde das jetzt nie freiwillig machen. Du meinst den Typ unter meinem Video? Ja der

01:55:53.120 --> 01:55:58.420
war geil. Der war geil. Der war richtig loster Typ bei mir unterm Video letztens. Der gemeint

01:55:58.420 --> 01:56:06.400
hat Homeoffice ist der erste Schritt in die Entlassung. Der war ein geiler Typ. Der war

01:56:06.400 --> 01:56:19.280
da voll überzeugt von. Arduino ist C++. In der Arduino IDE auch noch so ganz komische

01:56:19.280 --> 01:56:46.040
Abwanderungen davon. Mit ein paar Erweiterungen. Soll ich euch mal... Pass mal auf. Für alle

01:56:46.040 --> 01:56:54.360
die sagen C++ ist gut. Ein Beispiel was mir gerade so spontan einfällt. Also wir gucken

01:56:54.360 --> 01:57:10.560
uns jetzt mal was an in.NET. Also in.NET kann ich sowas machen wie hier. Output. Output

01:57:10.560 --> 01:57:21.800
gleich LUL. Und dann sage ich Console Rightline Output to Upper Case. Wobei ich bin mir nicht

01:57:21.800 --> 01:57:26.120
sicher ob die das jetzt nicht... Doch ich glaube sogar seit dem letzten C++ Standard

01:57:26.120 --> 01:57:30.800
haben die das eingebaut. Ich glaube seit dem letzten C++ Standard haben die das jetzt sogar

01:57:30.800 --> 01:57:35.120
eingebaut. So und in C++ geht das so.

01:57:35.120 --> 01:57:52.440
Ist gleich viel besser ne. Viel viel besser. Viel besser lesbar und übrigens wir haben

01:57:52.440 --> 01:57:58.880
jetzt immer noch nicht ausgegeben jetzt. Viel besser. Ja stimmt schon habt ihr recht.

01:57:58.880 --> 01:58:04.560
Exposed. Aber ich glaube dass die tatsächlich to Lower to Upper Case im letzten C++ Standard

01:58:04.560 --> 01:58:16.640
drinne haben. Ja aber es gibt noch mehr. Also es hört nicht auf. Aber ich will jetzt nicht

01:58:16.640 --> 01:58:21.440
anzufangen zu sehr über C++ zu renten. Übrigens kann mir jemand erklären was es macht in

01:58:21.440 --> 01:58:27.640
C++. Passt auf. Ich hab hier so ein paar lustige C++ Beispiele. Wer weiß was es macht. Oh

01:58:27.640 --> 01:58:47.560
das Highlight ist kaputt. Irgendjemand eine Ahnung? Was machts? Naja das ist ein Vergleich

01:58:47.560 --> 01:58:55.280
der Standard Lips nicht der Sprachen. Doch. Das ist ja das was das C++ Cremio macht. Die

01:58:55.280 --> 01:59:04.120
machen die Sprache und die Standard Library. Das musste schon mit zählen. Ok es hat keiner

01:59:04.120 --> 01:59:19.080
eine Ahnung was es macht. Gut schonmal wunderbar. Ich weiß auch nicht mehr was es macht um

01:59:19.080 --> 01:59:23.120
ehrlich zu sein. Das hab ich für irgendwas gebraucht. Ich hab aber keine Ahnung mehr

01:59:23.120 --> 01:59:32.120
was es macht. Ich glaub ich weiß wieder was es macht. Du kannst diese Methode hier aufrufen

01:59:32.120 --> 01:59:37.800
mit beliebig vielen Argumenten und der nimmt alle Argumente und macht einen String draus

01:59:37.800 --> 01:59:44.720
am Ende. Also im Prinzip dass das gleiche was du mit Params in C sharp machst. So auch

01:59:44.720 --> 01:59:49.880
wunderbar. Wunderbares C++ Beispiel. Allein schon dass die Leute immer noch mit Header

01:59:49.880 --> 01:59:56.480
rumhantieren müssen. Ja es gibt jetzt Modules. Aber niemand bisher verwenden wirklich Modules.

01:59:56.480 --> 02:00:08.320
Das ist alles noch irgendwie ein komischer Header Crap. Headcraps. Es ist halt C++ was

02:00:08.320 --> 02:00:15.880
soll ich da noch zu sagen. Ich geb dir Header. Dann hast du so ein Iterator Kram nicht richtig

02:00:15.880 --> 02:00:19.920
funktioniert. Dann hast du jetzt erst so ein Iterator nicht richtig. Es ist C++. Es ist

02:00:19.920 --> 02:00:25.240
einfach wir. Es ist an jeder Stelle wo du hinguckst wir as fuck. Du kannst den ganzen

02:00:25.240 --> 02:00:31.600
Tag Weirdchamping betreiben wenn du C++ programmieren musst. Ich seh es wirklich C++ programmieren.

02:00:31.600 --> 02:00:40.040
Wenn ich irgendwelche ESP Sachen mache seh ich die permanent so vorm Rechner. Mir wird

02:00:40.040 --> 02:00:47.000
schon ganz schwindelig vom ganzen Weirdchampen wenn ich C++ programmieren muss. Tommy Dankeschön

02:00:47.000 --> 02:00:50.560
für den Sub. Ich hab übrigens gar nicht gesehen wer alles noch subscribt hat. Hier Tommy Dankeschön

02:00:50.560 --> 02:00:56.960
vor einer Minute. Der Alex ist auch am Start. Huza 345 war auch Subscribed. Domtorretto.

02:00:56.960 --> 02:01:03.880
Und davor der Krelax den hab ich schon. Dankeschön Leute für die ganzen 5 hat mega 6 hat

02:01:03.880 --> 02:01:10.560
big brain subscriptions. Ihr werdet übrigens gerade im Teams angerufen hab ich gehört.

02:01:10.560 --> 02:01:19.160
Hadeschamp ich weiß. Macht demnächst eine Arduino C++ Session haben wir schon öfters

02:01:19.160 --> 02:01:26.560
gemacht. Wofür braucht man denn eigentlich C++? Man braucht C++ überall dafür wo es

02:01:26.560 --> 02:01:31.600
leider nichts anderes gibt. Zum Beispiel um Microcontroller oder ESPs und Arduinos und

02:01:31.600 --> 02:01:36.560
sonst was zu programmieren. Das ist da gibt es keine guten Alternativen zu C++. Du hast

02:01:36.560 --> 02:01:41.640
zwar MicroPython damit hast du andere Probleme. Du hast eine minimal Rust Geschichte die auch

02:01:41.640 --> 02:01:48.880
nicht richtig funktioniert. Also im Prinzip bleibt dir da gerade für Arduino und alles

02:01:48.880 --> 02:01:57.280
Arduino kompatible nicht viel übrig. Nehmst du was nicht Arduino kompatibles dann ist

02:01:57.280 --> 02:02:03.400
das alles einfach nur klassisches C. Aber Arduino Arduino kompatibel ist C++ und da

02:02:03.400 --> 02:02:14.320
bleibt dir nicht viel übrig. Sebi Dankeschön für den Sub. Übrigens auch der Grund warum

02:02:14.320 --> 02:02:18.840
ich immer Unreal also sollte ich mal sollte ich mal jemals ein Spiel programmieren wollen.

02:02:18.840 --> 02:02:24.080
Ich würde Instant Unity nehmen wegen C Sharp und und zu Unreal würde ich würde ich sagen.

02:02:24.080 --> 02:02:31.760
Allein schon wenn ich da das C++ Gewurste sehe. Ich weiß man kann Unreal auch über

02:02:31.760 --> 02:02:36.120
diesen komischen Blueprint Editor machen aber ich habe letztens ein Video gesehen von einem

02:02:36.120 --> 02:02:42.580
der hat versucht eine Tür zu programmieren in Unreal die auf und zu geht und also die

02:02:42.580 --> 02:02:46.680
richtig rum auf und zu geht und er hat irgendwie einen halben Bildschirm voller Kästchen und

02:02:46.680 --> 02:02:52.760
verbundenen Input Outputs mit gehabt. Sowas sind fünf Zeilen C++ Code warum soll ich

02:02:52.760 --> 02:02:57.000
das in irgendeinem Blueprint machen. Sag ich jetzt als Unreal Noob ich habe keine Ahnung

02:02:57.000 --> 02:03:15.240
davon. Aber da kann ich nichts zu sagen da habe ich nie großartig großartig was mit

02:03:15.240 --> 02:03:30.960
gemacht. Aber ich würde sofort Unity verwenden weil es die Sharp unterstützt. Ist C++ in

02:03:30.960 --> 02:03:37.200
der Hinsicht vergleichbar. C ist in sich schlüssig C++ überhaupt nicht.

02:03:37.200 --> 02:03:50.040
Java oder C Sharp ist eigentlich egal. Ich persönlich bin für C Sharp. C Sharp ist die

02:03:50.040 --> 02:03:54.840
schönere Sprache aber Java geht auch. Wenn ich unsere Java Programmierer auf der Arbeit

02:03:54.840 --> 02:03:58.880
sehe die wollen alle Kotlin verwenden und kriegen immer Anfände dafür dass sie den

02:03:58.880 --> 02:04:04.680
ganzen Projekt nicht richtig machen können. Oh ne Splatoon Musik. Ich muss skippen. Skipp

02:04:04.680 --> 02:04:22.000
ja also C Sharp ist die schönere Sprache. Kotlin soll wirklich nice sein was ich von

02:04:22.000 --> 02:04:26.880
den Leuten auf der Arbeit an Java programmieren kann. Ich habe hier ein paar Konferenztalks

02:04:26.880 --> 02:04:32.080
und so schon geguckt. Macht so einen Eindruck aus einer Mischung aus C Sharp Ruby und Swift

02:04:32.080 --> 02:04:38.520
so ein bisschen Kotlin aber wäre mir auf jeden Fall lieber als Java selbst. Dankeschön

02:04:38.520 --> 02:04:44.560
Unity für zwei Monate Subscription. Ne ne wie gesagt Game Programmierung ist wirklich

02:04:44.560 --> 02:04:49.000
was da habe ich gar keinen Zug dazu. Ich Theorie crafte und so übelst gerne in Games aber

02:04:49.000 --> 02:04:57.120
ich bin da wahrscheinlich auch viel zu unkreativ für irgendwelche Spiele zu machen. Heißen

02:04:57.120 --> 02:05:03.200
ist eine super Einsteiger Programmiersprache. Wofür wird Swift benutzt? iOS und Mac Anwendung.

02:05:03.200 --> 02:05:10.880
Ich meine wenn eine Sache noch ähnlich schlimm wie C++ ist dann wahrscheinlich Objective

02:05:10.880 --> 02:05:18.560
C. Außer Apple hat ja niemand die Dreistigkeit besessen allen Ernstes jahrelang Objective

02:05:18.560 --> 02:05:24.800
C zu verwenden. Du bringst jetzt CSS bei für eine Webseite für die Jugend. Ja das ist

02:05:24.800 --> 02:05:28.600
auch ein guter Einstich. Du wirst früher oder später auf jeden Fall an ein bisschen

02:05:28.600 --> 02:05:35.080
Javascript nicht vorbeikommen. Bin ich mir ziemlich sicher. Und also der Grund warum

02:05:35.080 --> 02:05:42.160
ich immer sage Javascript ist die beste Einsteiger Programmiersprache. Du brauchst nichts außer

02:05:42.160 --> 02:05:47.600
einen Browser und du lernst wichtige Sachen was du früher oder später brauchst. Du kommst

02:05:47.600 --> 02:05:52.760
an Frontend Sachen heutzutage einfach nicht mehr vorbei. Bisschen Javascript bisschen

02:05:52.760 --> 02:05:58.600
hat er im L und CSS muss heutzutage jeder können. Er ist zwar übertrieben gesagt sogar

02:05:58.600 --> 02:06:03.800
ein Cobol Backend Programmierer. Wobei es da der wahrscheinlich noch am besten ohne

02:06:03.800 --> 02:06:15.680
klar kommt. Was Quatsch. Python hat mit C++ gar nichts zu tun. Ich weiß worauf du raus

02:06:15.680 --> 02:06:19.440
willst. Du willst darauf raus dass das Standard Python C++ programmiert ist aber das ist

02:06:19.440 --> 02:06:26.800
doch egal. Die Standard.NET Implementierung war auch in C++ mal ursprünglich. Who cares.

02:06:26.800 --> 02:06:50.160
Die könnten auch in Rust oder in Cobol sein. Wär doch vollkommen egal. Ja ich bin auch

02:06:50.160 --> 02:06:58.480
nicht der große Css Kenner. Ich lerne jedes mal wenn ich Css benutze Neues dazu. Es gibt

02:06:58.480 --> 02:07:08.440
ja mittlerweile so ultra viele kryptische Selektorsachen in Css. Das ist mir zu big

02:07:08.440 --> 02:07:14.400
brain an vielen Stellen. Du kannst ja mittlerweile ganze Spiele quasi fast schon in Css Only

02:07:14.400 --> 02:07:21.520
gewinnen. Also simple Spiele. Ich glaube es gibt schon in 4 gewinnt. Only in Css und sowas.

02:07:21.520 --> 02:07:26.040
Aber der geilste Typ war immer noch. Also das abgedrehteste was ich bisher gesehen habe

02:07:26.040 --> 02:07:34.160
ist von zweckentfremdeten Tools ist. Irgendjemand hat einen Hex zu Binary Converter in Ruby

02:07:34.160 --> 02:07:42.480
Regex programmiert. Also er hat wirklich rein in Regex einen Hex zu Binary Converter programmiert.

02:07:42.480 --> 02:08:06.960
Das ist wirklich massive brain. Genau wir machen ab jetzt alle. Wir programmieren

02:08:06.960 --> 02:08:28.280
nur noch in Binary mit Hex Editor. Also die meistverbreitete IDE ist ja tatsächlich

02:08:28.280 --> 02:08:37.960
Excel wenn du es so willst. Ja es ist echt so. Excel ist die IDE der Sekretärin dieser

02:08:37.960 --> 02:09:04.520
Welt. Kenn ich nicht. Ja Moment das ist mit JavaScript. Das ist mit JavaScript. Das sind

02:09:04.520 --> 02:09:13.920
übrigens die Half Life 2 Texturen. Man kann übrigens nicht schießen. Das ist mit JavaScript

02:09:13.920 --> 02:09:20.000
hier klar. Das ist überhaupt kein Problem. Das funktioniert. Mit JavaScript kannst du

02:09:20.000 --> 02:09:29.760
viel machen. Ja guck dir mal ein Video dazu an was die beste Einsteigerprogrammiersprache

02:09:29.760 --> 02:09:42.760
ist. AC Dankeschön für den Sub. 3 Monate Big Brain Subscriptions hier. Flintstone 7

02:09:42.760 --> 02:09:51.680
Monate. Auf halbem Weg zum Hypersubscriber hier. Aber noch nur. Habt ihr eigentlich

02:09:51.680 --> 02:10:00.800
die GIF Emotes schon gesehen? Alle? Wir haben 2 GIF Emotes. Die ihr nur verwenden könnt

02:10:00.800 --> 02:10:06.000
als Primesub. Also wer noch nicht geprimesubbt hat jetzt ist die optimale Gelegenheit wenn

02:10:06.000 --> 02:10:10.320
euch der Content gefällt zu Primesubben. Und wenn ihr geprimesubbt habt ist natürlich schön

02:10:10.320 --> 02:10:14.040
dass ihr wieder am Start seid. Ich glaube jetzt habe ich es richtig gemacht in Sellout

02:10:14.040 --> 02:10:31.240
oder? Der war gut. Oh ne da wird wieder gesungen. Perfekt. Ja ok Leute. Das funktioniert. Danke

02:10:31.240 --> 02:10:50.640
für die Subs. Spore Sirius und UD YZ Dankeschön für euer Primesub. Exzellent Sellout. Ich

02:10:50.640 --> 02:10:55.680
habe letztens ein Tool gesehen. Das war ein Excel Plugin. Dass du echtes SQL und inline

02:10:55.680 --> 02:11:16.640
C-Sharp Programme in Excel programmieren kannst. 27. Add Subscribe. Primesub. Dankeschön.

02:11:16.640 --> 02:11:25.120
Beste Sellout. Ja das hat hart funktioniert. Can't wait. Ok Leute ich bin durch. Es gibt

02:11:25.120 --> 02:11:28.360
nichts Neues mit Invisual Studio mehr was wir uns noch nicht schon angeguckt haben. Das

02:11:28.360 --> 02:11:36.720
ist ein sehr mageres Preview Release von Microsoft. Also hätten wir sich fast sparen können.

02:11:36.720 --> 02:11:48.040
Wie fandet ihr die Intelli Code? Seid ihr auch der Meinung das ist Magic? Intelli war

02:11:48.040 --> 02:12:00.840
das auch Magic. Es ist ziemlich Maui. Es ist ziemlich Maui. Ja da hast du recht. Welches

02:12:00.840 --> 02:12:03.960
ist eigentlich das beste Liedungsjahr für was? Für Desktop, für Server, für sonst

02:12:03.960 --> 02:12:08.440
wie. Das kann man so pauschal nicht beantworten. Also ich habe am liebsten Ubuntu auf dem Server

02:12:08.440 --> 02:12:16.280
und Manjaro auf dem Desktop. Und das ganze aber auch in der VM. Weil ich habe als Host

02:12:16.280 --> 02:12:22.520
Windows und als vor allem Linux. Das ist für mich die beste Kombination aus beiden Welten.

02:12:22.520 --> 02:12:27.320
Linux lässt sich auch super virtualisieren unter Windows. Im Gegensatz zu Windows unter

02:12:27.320 --> 02:12:49.800
Linux. Arch by the way. Ist noch schön. Wenn es dir gefällt ist Ziel erfüllt. Big Prane.

02:12:49.800 --> 02:12:54.360
Die Streams dienen ja prinzipiell zur IQ Steigerung des Chats. Das sind wir uns ja einig. Ich

02:12:54.360 --> 02:12:58.280
meine belegt euch mal wie viele IQ Increases es hier schon gegeben hat. Die Leute haben

02:12:58.280 --> 02:13:04.520
alle schon Köpfe. Die sind schon doppelt so groß wie vorher. Und ist bei mir ja auch

02:13:04.520 --> 02:13:11.560
so. Ich lerne ja hier auch was dazwischen. Ich habe heute zum Beispiel. Ich habe es schon

02:13:11.560 --> 02:13:16.960
wieder vergessen aber ich habe irgendwas gelernt. Ich habe vorhin nämlich noch gesagt heute

02:13:16.960 --> 02:13:33.680
lerne ich wieder was. Achso Output. Console Output. UTF-8 Konsolen Output. Ja ist schon.

02:13:33.680 --> 02:13:41.520
Ist schon. Das ist schon ein massiver Sixhead hier. Ist da Frasier eigentlich immer am Start?

02:13:41.520 --> 02:13:50.520
Haben wir irgend einen den wir hosten können? Lost ist auch nicht da. Frasier ist auch nicht

02:13:50.520 --> 02:14:08.600
da. Dann hoste ich niemanden. WubTube Champ. Ey heute nicht. Ist der on? Ist der on der

02:14:08.600 --> 02:14:19.640
WubTube Champ? Ey WubTube Champ ist off. Sieht jemand Science and Technology? Gucken wir mal

02:14:19.640 --> 02:14:35.280
Twitch. Was haben wir dazu bieten auf Twitch Science and Technology? Komm mal. Bam. React

02:14:35.280 --> 02:14:44.160
und TypeScript auf Spanisch. Oder was ist das für? Ist das Spanisch? Live Earthquake.

02:14:44.160 --> 02:14:59.280
Live from space. Boah Poggers. Die NASA ist am Start. Ihr wisst ja. Die IES ist ja eigentlich

02:14:59.280 --> 02:15:06.480
unter Wasser und das sieht man bei den Aufnahmen immer, weil nebenbei da steigen Wasserblasen

02:15:06.480 --> 02:15:14.720
dran vorbei. Ihr müsst ja mal bei Außenaufnahmen dran warten. Ey das ist ernsthaft eine legit

02:15:14.720 --> 02:15:18.920
Verschwörungstheorie aktuell. Also ich hab das schon an vielen Stellen gelesen, dass

02:15:18.920 --> 02:15:26.200
die IES angeblich unter Wasser ist und man Wasserblasen sieht. Irgendwann überzeugen

02:15:26.200 --> 02:15:47.520
sie mich auch noch davon. Was programmiert sie? War? Input? Int? Ah. Go. Das ist Go.

02:15:47.520 --> 02:16:08.080
Aus den Eulenstells. Der guckt Videos. Ich wollte gerade sagen, das ist doch der Veritasium

02:16:08.080 --> 02:16:17.880
Typ. Ich guck mir jetzt die NASA noch ein bisschen an, wenn ich auf gehe. Komm mal jetzt

02:16:17.880 --> 02:16:38.840
haben sie den eingepackt. SOS. Eject. Ok Leute. Wie immer gesagt, ich geh jetzt

02:16:38.840 --> 02:16:55.920
auf. Also wir sehen uns im nächsten Stream. Machts gut. See you.

