Das war's für heute. Vielen Dank für's Zuhören und bis zum nächsten Mal.
So, da bin ich wieder. Ich hab euch gesagt, heute Abend gibt's noch mal
einen kleinen Stream, aber aus 69 Zuschauer. Huge. Ich mal gucken, wie lange wir dafür
brauchen. Also ich hab mir ein Video von Microsoft eingeschaut. Ich glaube, so viel gibt's da
nicht zu gucken im ersten Preview. Aber probieren wir mal aus. Erstmal das ganz bisschen kleiner
machen. Ich hab grad gefuttert, Leute. Ich bin mega voll gefressen. Ich hab heute Mittag
schon so viel gefuttert und heute Abend jetzt noch mal. Heute hab ich Garantie nicht abgenommen.
Ich weiß nicht, ob wir wirklich Windows 11 nehmen sollen. Wir können das mal ausprobieren.
Wir gucken mal, ob das unter Windows 11 läuft. Probieren wir mal aus. Zweifelsfall haben
wir hier noch ein anderes Windows. Windows 11. Warum hab ich da Steam installiert? Ach,
das war die WinGet-Testkiste. Läuft bestimmt, denke ich auch. Denke ich auch, dass das läuft.
Also, ich zeige euch mal was, Leute. Und zwar, es gibt jetzt seit gestern gibt es eine oder
seit vorgestern eine Preview-Version von Wishlist Studio 2022. Ich persönlich verwende ja schon
eine ganze Weile kein Wishlist Studio mehr, weil ich bin komplett auf Linux als Hauptplattform
und Rider als, also fürs Programmieren und Rider als IDE umgestiegen, was dort Netz-Sachen
angeht. Übrigens, das Video von Microsoft für die 2022er Preview ist richtig schlecht.
Guckt euch das mal an. 22 Sekunden YouTube-Video ohne Sound, ohne alles. 64bit ist es angeblich
jetzt. Es gibt irgendwie ein neuer Intelli-Code. Ich weiß nicht, warum es Intelli-Code ist.
Früher hat sich das Ganze IntelliSense genannt, aber wahrscheinlich hat sich Microsoft gedacht,
IntelliSense ist einfach zu oldschool. IntelliCode mit AI-powered Completion ist viel besser.
Warum auch immer, also ich habe den Vorteil noch nicht so genau erkannt von AI-Code-Completion.
Ich weiß, es gibt ein paar Ansätze. Es gibt ein paar Ansätze dafür. Aber ja, man hat AI-Dev-Verbrauch,
ich weiß nicht. Also die Sachen zu sortieren und die Möglichkeit zu bieten, zu sortieren
nach was am meisten benutzt wird, ist ja vollkommen in Ordnung. Aber dass das jetzt irgendwie
kontextbasiert wüsste, was ich als nächstes programmieren will, da habe ich noch so meine
Zweifel, ja. So, es ist möglich, dass man jetzt.NET 6 und.NET Maui drin direkt programmiert.
Weiß nicht, ob man ausprobieren kann. Ich glaube auch nicht, dass es schon drinne ist.
Zumindest, ich persönlich bin eh nicht sonderlich scharf auf.NET Maui, weiß nicht, mal gucken.
DakuX-TV, danke schön für 18 Monate Subscription. Excellent Hyper-Subscription. Neo-Wim-Only,
also man kann ja, ich mag ja Wim. Aber für.NET-Entwicklung genauso wie für Java-Entwicklung
oder sowas ist Wim kacke. Die trockene Luft von der Klimaanlage sackt, aber dafür ist
es wenigstens schön kühle 23,8 Grad hier. Was ist.NET-Maui? Der Versuch von Microsoft
eine Cross-Platform GUI-Framework zu basteln, was lustigerweise nicht Cross-Platform ist,
weil es nicht auf Linus läuft. Und leider, und leider, meiner Meinung nach auch den falschen
Ansatz verfolgt. Platter macht es richtig, macht es richtig, Maui unter Forksamarin war,
ist meiner Ansicht nach der falsche Ansatz. Noch eine GUI-Framework von MS, ja, zumal
die es ja noch nicht, die man unter Windows geschissen kriegen. So, ich, ich starte das
Ding mal neu. Ihh, das ist so hässlich mit die, warte mal, wie, Moment, wie, wie restartet
man das jetzt überhaupt? Leute, es gibt Updates für Windows 11, soll ich die installieren
oder prickt es mir das System? Boards Jam? Äh, Update, da steht doch immer da, was es
für Updates gibt, oder? Das Kumulativ-Update für.NET, für Windows 10 Version Next. Ich
hab doch gesagt letztens, ich hab letztens noch gesagt, das sieht aus wie Windows 10
X und Windows 10 zusammengemercht und das ist es anscheinend auch. Exposed Microsoft,
ja gut, Update & Restart, wollen wir mal nicht so sein. Snapshot, Snapshot ist für Noobs,
YOLO-Update. Wenn nicht, ich hab ja noch ein Windows 11 VM, in dem wir es probieren können.
Also, ich werde es mir nicht auf meinem Desktop installieren, weil es garantiert wird irgendwie
gedürnt installiert, was ich nicht haben will. Macht das in der VM und gut ist. Bill hat
Git Merge gemacht. Ich glaube Bill hat gerade Probleme, mit Merge hat es Bill gerade nicht
so, der ist gerade dabei seine Ehe quasi zu, also das Gegenteil von Mergen, gibt es ja Forken,
der forkt sein, der forkt gerade. Mergen. So, warum geht Xbox auf? What the fuck? Nein,
Xbox, gehst du weg? Kann ich nur sagen, Xbox. Ok, jetzt schauen wir mal, ob man das Ganze
in der Windows 11 installieren kann. Wishful Studio 2022. Nach guter Microsoft Tradition
müsst du Wishful Studio 2022 eigentlich jetzt mal rauskommen. Also zumindest FIFA, FIFA
Style technisch wäre das schon längst der Fall gewesen. Will das nicht auf Deutsch
laden? Kann ich das nicht auf Englisch laden? Ja, besser. Community. Jawoll, save. Ok, zeige
ich mal her. Ok, das ist immer noch ein Elektron Installer. Windows 11 Wishful Studio, willkommen
in der Zukunft. Ja, wir sind schon, wie sagt es, mir starft nicht? Ach ne, ne, ne, ne, ne,
immer noch. Ja Leute, das ist die Zukunft hier. Nächstes Jahr sieht es für alle euch,
sieht es jetzt bei euch, für alle von euch so aus. Kann nicht mal normal reden. Der Installer
ist mittlerweile WPF. Wirklich? So ganz funktioniert das aber nicht hier oben, oder? Also was wollen
wir denn haben?.NET und Web Development? Alter Mann. Richtig, richtig thick..NET Desktop
Development? Wollen wir testen? Das geht eh relativ schnell im Download. Und? Muss man
irgendwie Cross Platform GUI oder so? Gibt es irgendwie Cross Platform? Gab es da nicht
eine Cross Platform Häkchen? Gibt es nicht mehr, oder? Vergiss dir Plus Plus. Nein, nein,
nein, nein, nein. Ich werde am Leben da, kannst dir Plus Plus machen. Ok, das ist wirklich
ein WPF Installer. Moment, Moment, das glaube ich nicht. Komm mal einen Prozess Explorer.
Mal schauen, mal schauen, ob das wirklich nach WPF aussieht. Sys, Sys Internals Prozess
Explorer, ja genau. Warum alle auf abgerundete Ecken stehen, ich weiß nicht. Wahrscheinlich
ist es denen relativ egal, die wollen einfach was anderes haben. Und die haben sich gedacht,
wir hatten jetzt schon Ecken, die transparent waren und wir hatten eckige Ecken und jetzt
brauchen wir runde Ecken. Ja, ich agree. So, zeig mal, hier ist der Visual Studio Installer,
ist das WPF? Äh, ups, falsch rum. Ja, Setup. Ja, so wirklich erkennen tut man da nichts.
Es sieht auf jeden Fall nicht so krass Browser-mäßig aus, weil Browser-technisch hätte es jetzt
erstmal 50 Background-Dinger, das könnte schon durchaus WPF sein. Ja, das ist tatsächlich
anscheinend ein, ob es ein WPF ist, keine Ahnung, aber ein netter Ding, also wahrscheinlich
ein WPF. Ja, Mark Dick WPF verwenden sie. Ok, der Windows Installer ist jetzt WPF. Sachen
gibt es, hätt ich nicht gedacht. Die Musik ist mit zum Onkar-S, kurz skippen. Ok, früher
hatten die hier was Cross-Platform, weil ich wollte, angeblich gibt es nämlich neue Tests,
die man Cross-Platform laufen lassen kann, schauen wir mal. Egal, install while downloading,
macht es. Das dürfte nicht allzu lange dauern, ich denke mal so 10 Minuten, wenn es hoch
kommt. Ihr seht, das ist ziemlich schnell. Der File Explorer von Windows 11 ist maximale
Platzverschwendung. Wieso, sieht doch eigentlich fast so aus wie der alte. Also, da ist doch
so großer Unterschied ist da jetzt doch nicht, weil die Ribbons außen-vorder, aber wo ist
da der große Unterschied? Es ist doch mehr oder weniger genau das gleiche. Ah, da ist
viel Platz dazwischen, ok, das stimmt. So nicht mehr. Öffne mal einen Ort, naja, hab
ich ja. Ah, sieht doch ok aus. Boomer-Ansicht ist das ja. Kann man das ejecten? Wow, knapp
am Kopf vorbei hier. Ah, PainsChamp, witzig, weiß. So, wie sieht der Installer aus? Es
geht halbwegs zack, ich click once, Bootstrapper, diese Namen von diesen Packages immer. Wisst
ihr was ich nicht verstehe, warum schafft es eigentlich Microsoft nicht seit Windows
10 ist es glaube ich erst, keine Beispielmusik und keine Beispiel Clips und Bilder mehr mitzuliefern.
Bei Windows XP hat es ja immer noch diese 8 Standardbilder, dass du wenigstens siehst,
wie das ausschaut standardmäßig. Hat sich Microsoft gedacht, nee, wer braucht schon
ein Bildchen, haben die sich gedacht. Da letztens, wo war hier, ich glaube bei Golem, oder was
war das, habe ich einen Artikel über agile Softwareentwicklung gelesen. Was ich da witzig
fand ist die, ich glaube bei Heise war es, was ich da witzig fand ist die Forumsdiskussion,
warum ist das so lang. Zumindest die Forumsdiskussion war wieder lustig, wo sie sich darüber aufgeregt
haben, also Entwickler wieder darüber aufgeregt haben, dass sie einen halben Tag auf irgendwelchen
Sprints, Scrums, Dailys, sonst wie rumstehen und dann kam irgendein Typ in den Kommentaren
und meinte, ihr macht das ja auch falsch und hat dann gesagt, man soll quasi immer mit
dem, wie heißt das, mit dem Scrum Handbuch oder so rumlaufen und immer nachschlagen oder
sowas. Ich wusste gar nicht bis zu dem Zeitpunkt, dass es einen Scrum Handbuch überhaupt gab.
Agile Master Scrum Handbuch, der Scrum Guide, jawoll endlich, endlich, da wurde das, i,
das ist Wörth, das ist die Fault, das ist die Fault Wörth 2007, Alter, i. Ah ja genau
Alex, das meine ich, den Artikel meine ich, ja genau, genau. Ja, den meine ich. So, dann
habe ich irgendwie in den Kommentar Diskussionen einen gehabt, der hat dann erzählt, dass er,
dass er immer mit dem Scrum Handbuch rumlaufen soll und sowas. Wahrscheinlich das Agile Manifest,
ne, ne, ne, ne, ne, es ging um das Scrum Handbuch hier, der Scrum Guide, das ist nur für die
coolen Leute. AgileHeroes.de, die Rakete darf nicht fehlen, was sonst? Nein, ich will keine
Push Notifications von euch haben. Die agilen Helden mit Rakete scheinen ja super beliebt
zu sein hier. Und das ist auch äußerst beliebt auf Amazon. So, ach ne, please, ich will,
ich will nicht sign innen, Microsoft, lass mich, kann ich das nicht einfach benutzen
ohne zu sign innen. He doesn't know, he lacks critical information. Geht das, geht das nicht
auch ohne? Oh no, jawoll, perfekt. So, es erkennt schonmal nicht das Betriebssystem-Theme,
das ist schonmal Fail. Warum erkennt es nicht standardmäßig, dass ich Dark-Theme habe und
mach das, verwende das auch. Developer Settings, General, Visual, C-Sharp, General ist okay,
das andere darfst du erst machen, wenn ich C-Sharp Projekt einstelle, alles gut. Repairing,
der offizielle Post-Champ-Screen von Microsoft. So, also, jetzt müssen wir nochmal kurz in
dieses What's New Dokument gucken, dass wir auch wissen, was wir schauen müssen. Also,
es gibt ja einmal dieses Video und es gibt ein anderes Video, was ich gefunden habe,
das ist von Abild, da stellt Microsoft das ganze selbst vor. Warum, warum sind eigentlich
die Kommentare offgeturnt und warum hat das Video so schlechte Bewertung? Ah, yes, exzellent
Intro. Ich glaube, 8 Minuten überleben wir noch, oder? Lass wir uns mal zeigen. Wo, wann
geht das los? Hier, ne, wann zeigt der dann was? Hallo? What the fuck? Zeigen die auch
irgendwas? Ah, hier, okay. Okay, man kann Dateien schnell öffnen, das kann ich jetzt
nicht ausprobieren, weil ich hab kein so großes Projekt, wir können vielleicht irgendwo eins
von GitHub öffnen oder so. Was ist ein schönes großes.NET Projekt auf GitHub? So eine Solution
oder so. Fällt da irgendjemand was ein? Der Wind aus Taschenrechner ist es ja leider nicht.
ShareX ist eine gute Idee, perfekt, das machen wir. Okay, also das Öffnen von großen Projekten
geht jetzt schneller, alles klar. Das probieren wir tatsächlich mal aus. ShareX, GitHub, ShareX,
nicht zu verwechseln mit Xshare. So, können wir das ganze mal klonen hier. Ja, perfekt.
Klonen. Stimmt, jetzt können wir gleich mal was neues ausbringen, die haben doch das Windows
mit dabei, alles klar. Haben die auch Shit vorinstalliert? Nein. ShareX ist ein Screenshot
Programm, aber wir verwenden jetzt einfach nur, dass wir eine große... Klone Repository,
okay, das kann, guck mal, das kann Wishlist Studio selbst, da braucht man gar keine Shit
Command Line für das da, bam. Klonen. Guck mal, hier richtig highly advanced. Ich will
nix committen. Close. So, okay, hat es das jetzt besonders schnell? Ach hier, okay, jetzt
gucken wir mal, wie schnell er das öffnet. Ich habe jetzt keinen Vergleich, aber mal
schauen. Das ist schon verhältnismäßig schnell. Das ist schon verhältnismäßig schnell. Ah,
das ist noch gar nicht fertig, jetzt. Alter, was ist das denn für... Ich mag den Press
of the Wild Soundtrack nicht, ich brauche jetzt irgendwas anderes. Irgendwas... Relaxing
Spring Music, okay. Ne. Ne. Pirate Music. Nope. Gamecube Nostalgik. Ah, ich weiß nicht.
Ne. Try Not to Dance Challenge, okay. Wir dansen nicht. Wir pippen, wir pippen, oder
Cat Jammen. Okay, wunderbar. Warum geht das nicht? Hat das nicht Restored oder was? Sollte
ich eigentlich Abhängigkeiten mit standardmäßig runterladen? Hast du schon Windows 11 gestreamt,
oder? Jaja, das ist ja hier Windows 11. Relax, Dankeschön für den Hypersubscription hier,
den 18 Monate Sub. Das ist die neue Default Schriftart, die jetzt dabei ist, ne. Wie hießen
das Ding nochmal? Also Lucida Console ist out, Consolas ist auch out, sondern Standard Schrift
ist jetzt, wenn ich das finden würde, Fonts und Colors, Standard Schrift... Alter, Puschel
Studio, come on. Cascadia Mono ist es jetzt. Cascadia Mono. Microsoft hat sich gedacht,
es kann nicht sein, dass JetBrains ne eigene Schrift hat, Adobe ne eigene Schrift hat,
IBM ne eigene Schrift hat, Apple ne eigene Schrift hat, Google ne eigene Schrift hat.
Da hat sich Microsoft gedacht, wir haben ja erst 50 eigene Schriften, wir brauchen jetzt
noch eine. Das Windows 11 Logo startet uns an, kannst du das zensieren? Inwieweit starte
ich das an? Ist das hier zu rechteckig, zu symmetrisch, oder? Was ist denn deine Meinung
zu Windows 11? Ich kann dazu noch überhaupt nichts sagen. Eins was mich zum Beispiel nervt
ist, dass das anscheinend die Gruppierung standardmäßig an ist. Also guckt, wenn ich jetzt hier ein
paar Fenster aufmache, dann sind die standardmäßig gruppiert, das nervt mich richtig. Also das
nervt mich extrem, ich hasse diese Gruppierungen-Geschichte. Ich kann leider keine Settings machen, weil
ich es nicht aktiviert habe. Falls jemand irgendeinen Studentencode hat, kann er mir
den ja gerne schicken und ich aktiviere schnell. Aber geht das gar nicht so. Also das Öffnen
von Projekten ging in der Tat relativ schnell. Also so ein großes Projekt hätte ich gedacht
dauert länger. Windows 7 Keys, aber ich habe auch kein Windows 7 Key. Ja, das ist tatsächlich
relativ schnell. Wir können es mal vergleichen. Wir vergleichen das jetzt mal mit Ryder unter
Linux. Passt mal auf, wir machen das gleiche Repo jetzt unter Linux in Ryder auf. Oh nee,
schon wieder. Was war denn das noch mal das Problem, das hatten wir doch schon mal. Man
musste Log-Files entfernen oder? Man musste Log-Files irgendwie entfernen. Wie ging das
eigentlich? Ich habe keine Ahnung, wie das ging. Vor allem warum dreht dieser Kack-Bug
immer noch auf? Was muss ich denn da jetzt entfernen, dass das tut? Den LCK-Ordner, wo
ist denn hier ein LCK-Ordner, sehe ich nicht. Da hinten? Wie geht's der Katz, der geht's
gut. Seht ihr mal einen LCK-Ordner? Ach der da! Tatsächlich. Das ist echt ein Kack-Bug,
dass manchmal die VMs da nicht zugreifbar sind oder zu Friesen. Pass auf, jetzt geht's.
Bam! Oh, Peter Agile ist noch auf, den brauchen wir jetzt. Der ist ganz essenziell jetzt.
Der muss uns nämlich zeigen, wie es geht. Ne, falsches. Falsches Emote. Also, GitHub,
ShareX. Dann klonen wir das Ganze mal. Das probieren wir jetzt mal mit Rider aus. Und
mal gucken, wie da der Unterschied ist. Also die VMs sind ungefähr gleich ausgestattet.
Die Windows-VM hat, kann man sich das nicht anzeigen lassen, auch toll. Also die VM hier
hat 4 CPU-Kerne, 16G RAM und das Windows hat glaube ich auch 4 CPU-Kerne und, hallo? Was?
Please. Ach Moment, ist ja klar. Ich hab's ja da noch auf, Lul. Äh, Zack, Moment. Äh,
Moment. Das, das jetzt, jetzt hab ich's, ich glaub jetzt hab ich's, jetzt hab ich's verwirrt.
Oh. Oh, okay, ich glaub jetzt hab ich's verwirrt. Also, Settings und das hat auch, das hat 8G,
aber der RAM wird nicht das Limitierende sein. Ganz im Ernst. Okay, vergleichen wir mal die
Geschwindigkeit. Also, das da, clone. Kann man das, kann das Rider übrigens auch, New
Ocean, dass man das direkt da drin klont? Open. Äh, wahrscheinlich, ich glaub ich hab
das Shit, das Shit-Plugin ausgemacht. Kann man da jetzt einfach sowas? Geht das? Nee,
oder? Wenn das geht, würd ich mich echt wundern. Nee. Aber ist ja kein Problem, ich mein wir
sind ja ohne Nutz, wir haben ja einfach, wir haben ja Shit, Shit-Command-Line. So, das
ist ja auch nicht das, was wir testen wollen, wir wollen testen, wie schnell es sich öffnen
lässt. Also, Open, Repos, dann haben wir hier irgendwie ShareX-Solution. So, mal gucken,
wie schnell das jetzt geht. Also, Open und Trust. Ja, das ist schon eine ganze Ecke langsamer.
Read me? What the f- Ein bisschen langsamer, aber es ist jetzt nicht so, als hätt ich damit
ein großartiges Problem, ehrlich gesagt. Geht auch, geht auch. Also, ich kann mit beidem
leben, ja. Übrigens, warum das so broken ist, ist weil es ein.NET Framework Projekt
ist. Okay, ich kann mit beidem leben, ist in Ordnung. Es ist aber wahrscheinlich deutlich
schneller als Visual Studio 2000. Können wir auch nochmal vergleichen? Ich hab's doch
hier, ich hab's doch hier drauf. Da muss ich das bloß hier mal klonen mit. Probieren wir
das hier auch nochmal aus. So, jetzt haben wir es wirklich überall, haben wir hier gelandet.
Jetzt haben wir wirklich das überall ausprobiert. Jetzt kommt Visual Studio 2019, aber das ist
das ganz aktuelle Visual Studio 2019, was ich installiert hab. Ich hab das erst vor
drei Tagen oder so updated. Also, jetzt haben wir hier Share. Okay, mal gucken, wie schnell
es jetzt damit aufgeht. Ja, okay, das ist schon, das ist, das ist, das ist ne ganze Ecke
langsamer. Wobei. Naja, okay, soll ich mal ehrlich sein, Leute, ich merke keinen Unterschied.
What the fuck, warum singen da jetzt Leute? Also, ich benutze für, für.NET, mittlerweile
bin ich nur noch unter Linux und Rider unterwegs. Seit den letzten paar Jahren. Das funktioniert
echt gut. So, also, jetzt bin ich echt überfragt. Ich finde, das öffnet sich überall gleich
schnell, auch wenn es jetzt deutlich schneller sein soll. Eventuell. Ich kann das jetzt echt,
also. Okay, es ist vielleicht minimal schneller im neuen. Aber ganz im Ernst so. Also, nee,
also großen Unterschied macht es echt nicht. Ist dort nicht universell einsetzbar,.NET
10 Stunden. Wie Musik? Ja, Moment, das ist nur das, das ist nur das, das einschalten
Musik. Na, das ist ein bisschen zu heftig. Jetzt kommt wieder der eine Kerl im Chat,
der sagt Bei diesem Song haben sich meine Eltern kennengelernt. Nee, das hören wir
nicht. 10 Stunden. Nee, das halte ich nicht aus. 10 Stunden. Das ist Mario Galaxy. So,
also weiter im Text von der wahnsinnigen, vom wahnsinnigen Geschwindigkeitsboost habe
ich jetzt noch nichts gemerkt. Alles klar. So, was gibt es denn sonst noch Neues? Lohnt
der Lizenzpreis für Rider anstatt die Free Variante? Ob sich der Lizenzpreis lohnt oder
nicht, stellt sich gar nicht. Wenn du es unter Linux ordentlich.NET programmieren
willst, musst du dir Rider holen, weil Visual Studio Code suckt für.NET, finde ich jetzt.
Ist nicht schön. Ich meine, wenn du Rider nicht kaufen willst, gibt es auch die Möglichkeit,
du verwendest die Trial, aber die Trial ist offiziell ja nur 30 Tage. Offiziell. Ich
meine, wenn du ein bisschen rumsuchst, findest du ja vielleicht Möglichkeiten. Diese Trial,
ne? Aber natürlich kaufen wir immer offizielle Lizenzen. Alle 30 Tage eine neue VM. Na gut,
das ist die Noob Variante. Okay, also was ist denn jetzt sonst noch Neues? Zeig mal
her. Ja, also was ist sonst noch neu? Okay, es ist viel schneller beim Öffnen. Was zum
Teufel öffnen die da? Moment, sind das Sekunden? Ja, das sind Sekunden. Aber so ein großer
Unterschied war das jetzt bei mir nicht. Ach, Moment, Moment, Moment. Open, der Typ öffnet
1600 Projekte. Okay, das habe ich nicht ausprobiert, aber was zum Teufel ist das dann für ne Solution
mit 1600 Projekten drin? Was haben die denn da? Ist das der Windows 11 oder wie? Also
1600 Projekte, da kann ich wirklich ne Runde weird champen zu. Visual Studio Code kann
das nicht sein. Das ist JavaScript. Okay, die haben das genommen einfach, dass man sieht,
dass es schneller ist, nicht, dass es wirklich irgendwie merklich, merklich schneller ist.
Die haben irgendwas gebraucht, wo man es wirklich sieht. Und wenn du so riesige Projekte brauchst,
dann ist es nice to have, aber jetzt nichts umwerfend Neues. Visual Studio Code ist TypeScript,
das macht überhaupt keinen Unterschied. Ja. Okay, weiter. Ich habe das Gefühl, das sind
8 Minuten Video und die zeigen überhaupt nichts. Ah, jetzt kommt die neue Code Completion,
okay. Hat er nur einen guten Green Screen oder sieht das echt bei dem hinter dem so
aus? Weil das sieht aus, als sitzt er in seiner Garage gerade. Aber der Green Screen ist erstaunlich,
erstaunlich, erstaunlich gut, wenn es ein Green Screen ist. Das erinnert mich an Fischshell.
Whole Line Completion. Okay, das probieren wir gleich mal aus. Aber ob Visual Studio
wirklich weiß, wie ich weiter programmieren will, ich bin da immer noch skeptisch drauf.
Die benutzen alle Dark Mode, aber für die Präsentation immer Light Mode. Das ist cool,
ich habe aber meine Zweifel, dass das sinnvolle Completions sind. Ich kann das nicht, aber
ich hätte die Idee für so einen Hacker Science Fiction Thriller gerade. Der sagt ja, die
AI ist quasi über alle.NET Projekte in GitHub drüber gegangen, um es jetzt mal ein bisschen
zu umschreiben und hat gelernt, wie so einen ASP.NET Controller auszusehen hat. Überlegt
euch mal, man könnte eine richtig geile Story draus basteln. Die AI hat gelernt, wie so
ein Controller aussehen muss und die AI schlägt jetzt, was war das für ein Sound? Und die
AI schlägt jetzt Sachen vor, allerdings die Sachen, die sie gelernt hat, ist eine Insecurity,
ist irgendein Bug drinne. Und du hast auf einen Schlag, hast du 100.000 Software Projekte,
die angreifbar sind über das Gleiche, weil die AI das Falsche vorschlägt. Und die Leute
copypasten ja nur noch, kann ja keiner mehr ordentlich programmieren. Dann hast du Probleme.
Very impressive stuff. Very impressive. Ich finde das immer geil, wenn die sich recht
geben an diesen Präsentationen. Very impressive stuff. Yes, yes, very impressive, huge impressive
stuff. Jetzt fehlt bloß noch, dass er sagt, it's like magic oder sowas. Sag nicht magic.
Cool and can save me a lot of time. Also a little scary. So and it looks like magic when it's
happening in real life. Manche Sachen sind einfach total obvious, dass die kommen müssen.
So just to know that there's all this AI and training going on behind the scenes is really
cool. I mean, it really looks like magic. Okay, es kann sein, dass sie das vorher schon
gesagt haben und ich deswegen gedacht habe, das kommt jetzt. So is there anything else
that that developers should know about and why they should immediately hit download when
preview one does get released? Yeah, let's just jump straight into the next demo here.
It's about a simple test project that I have where das habe ich gelesen, das habe ich gelesen,
da bin ich mal gespannt, ob man das ausprobieren kann. Man kann jetzt angeblich, wenn man Tests
hat und die irgendwie in irgendeiner Art und Weise markiert sind, mit wo man die ausführen
will, kann man jetzt wohl in Visual Studio Code sagen, dass man die in Docker laufen
lassen will unter Linux testen und sowas. Muss ich gleich mal gucken, also wie auch immer
das funktioniert. Das habe ich gelesen, das finde ich ist eine coole Idee. War ganz davon
abgesehen. Man muss aber mal ehrlich sagen, es ist ziemlich Nische, dass man das braucht,
weil die meiste Software, die wird ja nicht mal unter Windows, mal unter Linux, mal unter
Mac laufen gelassen. Wenn es eine ASP.NET Web Anwendung ist, da läuft die unter Linux,
da wird die unter Linux getestet und gut ist und am besten auch unter Linux entwickelt.
In der Regel kann man eigentlich echt sagen, also ich rede jetzt nicht von so exotischen
Sachen wie IBM Hosts, aber in der Regel kann man sagen, es ist am besten, wenn man die
Software unter der Plattform entwickelt, wo sie dann am Ende auch läuft, wenn es geht.
Ich meine, dass es für Mobile Apps nicht geht, ist logisch und dass das, zumindest
nicht so direkt, und dass das für Host-Anwendungen und sowas, Mainframe auch nicht geht, ist
klar. Aber wenn man über normale Linux oder Windows Software redet, ist eigentlich am
besten, man entwickelt die dort, wo sie auch am Ende läuft.
Ja, na gut, Browser ist ja wieder was anderes.
Das probieren wir gleich mal aus. Ich habe übrigens keine Ahnung von Tests in Visual
Studio, weil ich brauche nie Tests.
Okay, das ist wirklich cool. Das ist genau, das ist das, was ich gelesen habe. Das macht
dann, startet dann irgendwie einen Docker und lässt da Linux.NET Core 3.1 laufen.
Tests ist nur für Leute, die damit rechnen, dass ihre Software kaputt geht. Das ist genauso
wie Dokumentation, auch nur für Leute ist, die nicht aussahekräftig programmieren können.
Und das Problem haben wir natürlich nicht, deswegen brauchen wir beides nicht.
Und wenn man sich unsicher ist, dann macht man sich einfach ein Strukturprogramm vorher.
Okay, ja, genau hier, es geht über irgendwelche Docker-Images. Sag mal, das macht mich voll
fertig, dass Windows im Hintergrund, die Windows 11, dass die laufen irgendwas auf Sound ploppt.
Ich muss mal kurz stummschalten. Besser als wenn es die ganze Zeit macht.
Ich frag mich immer noch, was die Amis geritten hat, ihr W W auszusprechen. Und dann, und
jetzt kommt ja noch der Hit, und dann die Standard-Abkürzung für Webseiten die ganze
Zeit W W W zu nehmen. Ich mein, W W W geht ja auf Deutsch noch, aber die Amis müssten
dann wirklich W W W sagen. Das sind sechs Silben versus drei. Ja, stimmt, das waren
die Engländer, das waren ja gar nicht die Amis. Die Amis haben es geklaut.
Sechs W, ja, das fände ich gut. Kommt da noch was?
Da guck ich jetzt mal rein. WS2022-Wishen. Okay.
habe ich irgendwas falsch gemacht? Habe ich doch gemacht. MSVS, das ist doch
richtig. Ach, ich hab 2020, lull. Ah, ja, das ergibt das auch. Jetzt ergibt es auch
Sinn, wenn das nicht funktioniert. Ich brauche eine Runde Musik. So, also das ist das Visual
Studio Blog, das haben wir schon. Visual Studio ist viel zu spät, ja, das haben wir
schon gelernt. Designing for everyone. Ausgibt neue Icons, Leute. Die wichtigste Änderung
in jedem Microsoft Programm. Neues Design, neue Icons. Pascal, die Account ist jetzt
die Fault. Dark Mode Icons. Die sind doch noch genauso wie vorher. Nee, die sind in der
Farbe tatsächlich ein bisschen angepasst. Also man kann irgendwas personalisieren, aber
sie sagen nicht was. Dann machen wir doch jetzt mal ein.NET 6 Projekt und gucken, ob
das funktioniert. Muss das sein? Können die nicht C++ einfach rausschmeißen? Wer schlägt
sich denn freiwillig mit so einem Müll rum? Innovation at your fingertips. Real-time collaboration,
website and productivity. Ach, das ist diese neue AI-Geschichte. Guck mal, ein GIF. Set
as desktop background. Moment. Funktioniert das wirklich? Moment. Oh, ist das schlecht.
Das ist so schlecht wieder. Du wählst ein GIF aus und das GIF ist nicht mal animiert
im Hintergrund. Vom Ansatz her cool. Ausführung mangelhaft wieder. Einfach schlecht. Einfach
schlecht wieder. Wie kriege ich denn das jetzt wieder rückgängig gemacht? Ich habe leider
keine personalized-Dinger mehr. Windows XP Hill. Ok, perfekt. Set as background. Hallo?
Background. Oh, da stimmt aber irgendetwas net. Ich habe den ORSKY ausgetrickst. Leute,
ist das hier ein Firefox-Dialog oder ist das ein Windows-Dialog? Wo kann man Windows 11
runterladen? Kann ich nicht sagen. Ok, so kann man das jetzt ja ertragen. Da ist der falsche
Berg. Ne. So, weiter im Text. Ich hasse dieses Gruppierte. Dieses Gruppierte vor den Fenstern,
das ist so schlimm. Das müssen die ausschaltbar machen. Sonst gibt es wieder irgendwelche
Registry-Hacks oder so. Das halte ich nicht aus. Ok, neue. Was haben wir hier? Assynchrone
Collabora. Ok, blablabla. Improved Code Search. Visual Studio for Mac. Ja, da frage ich mich
mal. Azure DevOps sagt auch, ich bin GitHub viel nicer. Ok, wunderbar. Die wollen das
garantiert nicht auf Linux rauspulgen. Ne, ne, ne. Aber ganz davon abgesehen, Rider ist
eh die beste Cross-Plattform-Lösung. Zeig mal bitte kurz Paint und den Colour Pick-Dialog.
Was? Paint? Paint sieht aus wie sonst. Paint sieht aus wie immer. Was für ein Colour Pick-Dialog?
Wie startet man Windows Colour Pick-Dialog? Edit Colours? Ok, Paint. Paint Champ. Und
jetzt? Und jetzt? Ich habe, ah hier, Edit Colours. Ok, sieht aus wie Windows XP immer
noch. Oder eher Windows 98 würde ich sagen. Hör mal, ich mach mal Windows XP eher Windows
98. Immer noch der gleiche Shit. Übrigens, wer denkt, dass der Kram besser wird, den
kann ich jetzt auch noch gleich mal schocken. Control Panel und Netzwerk-Settings sind immer
noch da. Da wird sich wahrscheinlich nichts ändern dran. Aber Hauptsache gerundete Ecken,
ja. Und ich hab Dark Theme und Paint und Paint und das checkt nicht, dass ich Dark Theme hab.
Das ist halt Fail, ne. Das ist kein neuer Skin, das ist die Windows 11 Preview. So, also,
gucken wir mal weiter. Das heißt, als nächstes probieren wir jetzt mal diese tollen AI Code
Completion aus, oder wie? Oder was? Ok, Create New Project. Paint ist wohl noch die Windows
7 Version. Ja, die haben ja auch gesagt, sie machen nix, ne. Ok, wir machen eine Konsolenanwendung.
Da brauchen wir nicht viel. CAC, W, ne. 0W, Rater als CACW. Dotnet 6 Preview ist am Start,
alles klar. Ja, dieses Bild hab ich noch auf, das haben wir uns heute Morgen hier angeguckt.
Das ist lustig, das ist ein schönes Bild. Hat jemand ein Bild von gemacht, wie viel Überreste
in Windows 11 noch drin sind? Windows 95 Dialoge, Windows NT Dialoge, Windows XP Dialoge, erster
Windows Store Version, Windows 8 Metro Geschiss, neuestes Fluent Design, davor die Windows 10
Settings, Windows 11 Startmenü Ribbon in Aero. Das ist halt echt. Muss das sein, Microsoft,
ne. Ok, gut. Also, eins muss man den ja mal lassen. Wir haben den neuen Font, den haben
wir ausprobiert und... Select? Den haben wir ausprobiert unter Linux und mit dem Linux
Font Rendering sah dieser Font kacke aus. Unter Windows sieht der Font wirklich nicht
verkehrt aus. Muss man mal sagen, also wer auf bisschen fettere Fonts steht, der wird
hier wahrscheinlich glücklich werden mit. Ich finde, der Font ist schick. So, mal starten.
Alles wie gehabt. Ich bin ja schon gar nicht mehr gewohnt unter Windows. Ich weiß schon
gar nicht mehr, wie ich jetzt hier überhaupt... Unter Linux würde ich jetzt ein Terminal aufmachen
und sagen.net run. Ich weiß gar nicht, wie ich das hier machen würde. Wie mach ich das
hier unter Windows? Gibt es hier sowas wie Open Terminal? Ah, Open Terminal. Tatsächlich.
Ihh, das ist dieses fucking eingebaute, eklig Terminal in Visual Studio..net run. Ok, das
funktioniert ja auch. Aber, jetzt mal, jetzt mal im Ernst. Also, wenn ihr die Auswahl
hast zwischen diesem Terminal oder, Moment, oder einem ordentlichen Terminal hier, also
dann ist ja wohl ganz klar. Und selbst das Rider Terminal ist besser, weil das Rider
Terminal hat noch eine ganz normale Shell verwendet. Also wer sich, also jetzt mal ernsthaft,
sich freiwillig diesen Crap da gibt, dem ist nicht mehr zu helfen. Kann man das auch Auto,
Auto Height, jawoll. So, also was sind diese tollen neuen Completion Features? If, wo ist
meine Full Line Completion? AXE. Ist das jetzt schon AI unterstützte Completion oder? Was
ist das? Und woher weiß ich? Muss man das vielleicht erst aktivieren? Wo sind überhaupt
die Settings? Tools, Options? Wie hieß das? Intelli-Code, ne? Intelli-Code. Ok, ich glaube,
wir brauchen eine Web-Anwendung, weil die haben das Beispiel in der Web-Anwendung gezeigt
und wahrscheinlich funktioniert das nur in der Web-Anwendung. Ok, Razor-Pages, gibt's
da auch was an? Gibt's da auch Web-API? Web-API mit Controller? Ne. Ok. Ich, siehst du mal
Leute, ich bin zu, ich bin sogar zu unfähig, in Whistle Studio mittlerweile eine Web-Anwendung
zu erstellen. Web-API, warum hat er das eben nicht gefunden? Ok, ja, Web-Application 1,
perfekt. Mach mal ne neue Klasse Person und füg ne String-Property Last Name hinzu. Abgesehen,
dass der dann First Name als neue Property vorschlägt. Sehr gute Idee, Krasius, genau
das machen wir jetzt. Das machen wir jetzt. Nein, halt keine HTTPS-Open-API-Support brauchen
wir alles net. So, geh weg. Die Wettervorhersage, genau die Wettervorhersage brauchen wir jetzt
und den Wettervorhersagen-Controller. So, und da krieg ich jetzt Dinger vorgeschlagen,
wenn ich da jetzt reingehe. Ja. Ah, guck mal hier. Intelli-Code-Suggestion. Oh, Massive-if.
To accept. Ah ja. So Big Brain wirkt das jetzt noch nicht. Ok, wir machen mal was eigenes.
Also, Post. Wir tun mal so, als würden wir da Parameter übergeben. Public. Keine Ahnung,
wie nennen wir das mal? Push. Fällt jetzt grad nix anderes ein. So, und das kriegt jetzt
ein String-Cac-W. So, eh. Return null. Perfekt. So, und jetzt, wenn ich jetzt hier sage, if,
guck mal hier, Massive, Massive, Big Brain, Big Brain. What is name of the font? This
is the new default font from Microsoft. It's called, I think, Cascadia Mono. Font? Who
is this then? Font? Yes, Cascadia Mono. But it only looks good on Windows. I tried it
on Linux and with the Linux font renderer, it sucks. Ja, genau, das ist das hier. Das
ist Cascadia Code GitHub. Ui. Genau. Ja, aber das ist doch schon mal cool, oder? Ich
mein, diese ist wahrscheinlich die einzige Code Completion, die der kann, aber das ist
doch schon mal ganz nett. Meinst du, dass sich die Vorschläge nach dem Namen der Variable
auch ändern? Was meinste? Ach, guck mal hier. Return redirect action. Nee, das will ich
eigentlich gesagt an der Stelle nicht. If? Was? True? What the? Okay, so ganz klappt
das doch nicht. So ganz hat das nicht funktioniert. Okay, if. Nee, und jetzt hab ich's kaputt
gemacht, Leute. Brocken. Ach, guck mal, jetzt kann man doch direkt ein... Okay, ich weiß
nicht so genau, was das da macht, aber es ist nicht das, was ich haben will. Was ist
denn, wenn ich hier sage... Okay, da schlägt ihr mir vor, standardmäßig Länge Trim Contains
to lower start with. Das werden wahrscheinlich schlicht und ergreifend die meist benutzten
Methoden von String sein, das haben die irgendwie gezählt. Ob das jetzt die massive Big Brain
too smart AI, die man dafür braucht, ist... Na, na ja. Okay, Person soll dich ausprobieren,
da hat er Grasius vorhin geschrieben. Also probieren wir das mal aus. Public... Oh. Das
ist komplett useless, what the fuck, das braucht kein Mensch. Das braucht wirklich keiner.
Null. Das ist komplett bescheuert. Okay, Public Class... Was soll ich machen, Person? Und
was meintest du, es gibt Last Name? Wenn ich was Last Name hinzufüge, dann sagt er, ich
brauch noch First Name. Ja gut, wahrscheinlich, weil die... Tatsächlich. Okay, das ist cool,
aber das geht auch nur, weil das ein Beispiel ist, was die für alles verwenden. Das hat
ja mit Big Brain AI nix zu tun. Das klappt jetzt nur in diesem einen Fall, weil das das
Beispiel ist, was die verwenden. Probieren wir das doch mal mit was anderem aus. Public
Class, Car. Nee, Car, nicht Car, Car. So, Prop. Schlägt da jetzt irgendwas vor? Prop?
String? Nee, Engine. Name. Na okay, gar nicht so schlecht. Description, okay. Image, okay.
Naja, ich weiß nicht, so wirklich wahnsinnig gut. ID wäre gut, ID wäre gut, ja. Wir gucken
mal, ob der so schlau ist und das checkt. Wir gucken mal, warte mal, wir gucken mal,
ob der so schlau ist und das checkt. Ob der ID vorschlägt, das probieren wir jetzt mal
wirklich aus. Add Folder Models. In Models sind meistens Felder mit Datenbank ein Bezug.
Also Add Class, nennen wir jetzt mal was weiß ich, Kamera. So, meine Kamera braucht dann
was? Name, okay. Ist jetzt schon mal broken. Okay. Int. Also, dass der nicht ID vorschlägt
ist Fail. Warum schlägt der nicht ID vor? Es ist in einem Ordner Models und in Models
ist alles drin, was ein ID Feld braucht. Das wird sicherlich besser, je größer die
Codebase. Naja, angeblich haben die 1,5 Millionen Open Source Projekte analysiert. Da sollten
eigentlich Klassen in Models so gut wie alle eine ID haben. Mach mal, Girl, was die Big
Brain AI da vorschlägt. Du meinst Class, Girl? Oh, Monka Toss. Ich sehe mich schon
im Monka Toss Land. Girl. Ach ja, jetzt wird ID vorgeschlagen. So, so. Und sonst nichts
mehr. Mehr wird nicht vorgeschlagen, okay. Warum der jetzt noch mal ID vorschlägt, verstehe
ich auch nicht so genau. Ich habe übrigens auch nicht gecheckt, wie ich das triggern
kann. Tap to accept, okay. Aber in der nächsten Zeile kommt nichts mehr. Und wenn ich hier
in die nächste Zeile gehe, schlägt er mir einfach Name vor. Vielleicht muss ich das
mal löschen einfach. Ach, jetzt schlägt er mir auch wieder Name vor. Okay, Name ergibt
noch Sinn, aber Name ist broken. Description. Okay, was ist die Ull von deinem Girl? Ah,
Holy Fence, verstehe. Okay, was? Okay, okay, Moment, Moment. Holy Fence. Oh, IntelliCode
hier. Hä? It's like magic. Holy Fence Account, ID. Jawoll. Name. Das ist E-Mail. Hoho. Phone.
Guckt euch mal an, Phone Number. E-Mail. Leute, wir sind in der Angelos Schleife. Es hört
nicht mehr auf. Big Brain AI. E-Mail Number. Mal gucken, wie lagiert das jetzt noch. Phone.
Oh nee, ist vorbei. Nee, Phone Number. Okay, Big Brain AI ist vielleicht auch noch nicht
so Big Brain. Du machst dir AI Angst, ich glaube auch. Funktioniert richtig gut, perfekt.
Also, wir haben gelernt, wir haben jetzt eine neue Super-Code-Completion-AI, die merkwürdige
Sachen Code Completed. Hier, Code Completed, das nix. So, Summaries, also. Ach so, mein
Spinnengall, ich erinnere. Also, was ich jetzt erwarten würde, wenn ich Summaries Punkt
mache, das ist ein String-Array. Ganz ehrlich, ganz oben würde ich erwarten Length und ich
würde auch vorschlagen, dass der mir String-Join anbietet, ehrlich gesagt. In irgendeiner Art
und Weise. Da bin ich mal gespannt, wie schlau das Ding ist. Okay, Length, Copy 2. Was halt
richtig cool wäre, wenn der jetzt hier vorschlagen würde, du möchtest wahrscheinlich auch sogar
sowas hier haben. Was ist denn U? Ist es ein Leerzeichen? Domdoretto, danke schön für den
Sub. Was ist U002? C, ist es Leerzeichen? Komma. Unicode, Komma. Okay, das ist gar nicht so schlecht,
dieser Vorschlag. Der Vorschlag ist echt in Ordnung. Ich mein, man könnte auch ganz
klassisch den da nehmen. Du kannst jetzt mit Emojis joinen. Okay, das muss ich ausprobieren.
Ich muss mal kurz Konsolenanwendung aufmachen, ob die jetzt Emoji-Support haben. Wie öffnet
man an diese Startseite? Ah, hier, Recent Files haben wir da noch, Recent Solution. Kann
ich, haben wir denn jetzt Emoji-Support? Das muss ich jetzt ausprobieren. Hallo? Man kann
GIFs einfügen. Okay, das bringt, das bringt es ja richtig an der Stelle. Okay, wir haben
schon mal kein GIF, wir haben schon mal kein Emoji-Support. Was ist das eigentlich für
ein komisches Menü? Warum war das eben unten rechts? So, und wenn ich sie ausführe, haben
wir immer, bestimmt immer noch kein Emoji-Support. Nein, natürlich nicht. Wo kämen wir denn
auch hin, wenn neues Teusch bei Microsoft das irgendwie könnte? So, gucken wir mal,
wie es im Terminal aussieht. Aber da, da weiß ich eigentlich, dass es unter PowerShell
nicht funktioniert. Wo, wo legt denn das Ding überhaupt? Wo hat er denn das hingelegt?
Ah ja, alles klar..net-run, nee. Warum nicht? Ah, weil ich mich verschrieben hab. Ah, das
ist halt broken. Das ist halt broken. Keine Emojis. Das liegt aber an PowerShell und nicht
an, also das Terminal kann prinzipiell Emojis, weil wenn ich, wenn ich WSL installiert hab,
funktioniert alles. Nee, ich hab nicht studiert. Okay, das sackt. Also immer noch kein Emoji-Support
enttäuscht mich. Aber es ist ja klar, Wishlist Studio selbst ist ja noch WPF und WPF kann
ja keine Emojis. Wird ja ein weiterer Punkt dafür, dass die Microsoft UI-Technologien,
die benutzbar sind unter Windows, sacken. Weil Microsoft verwenden ja selbst ihren Kram
nicht. Gut, also das funktioniert schon mal nett. Mach mal wieder das andere auf. Du kannst
WSL jetzt mit WSL installieren. Okay, das muss ich jetzt ausprobieren. Mach mal hier
neu auf. Was kann ich machen? WSL minus minus install. Sudo. RunS. RunS, WSL. Gibt's da nicht
irgendwas für? Gibt's da nicht irgendein Kommando-Zeilen-Ding für? Admin. Gibt das
nicht irgendein Sudo-Äquivalent in PowerShell? Ich meine, ich kann, ich kann das starten
als Admin. Wie starte ich überhaupt eine Admin-PowerShell hier drinnen? So, schon mal nicht. Terminal.
Okay, starten wir das ganze Terminal als Admin. Das funktioniert. WSL minus minus install.
Ist halt dumm, dass es nicht so eine Sudo-Variante standardmäßig gibt. Ich weiß, man kann sich
was nachinstallieren. Okay, nice, Funst. Das ist schon mal schön. Das ist schon mal schön,
dass es jetzt einfach geht und man nicht 3 Milliarden Dinger machen muss. Oh, habe ich
Virtualisierungs-Support eingeschaltet? Kann sein, dass das jetzt gar nicht funktioniert.
Nein, Virtualisierungs-Support ist aus. Ich muss Windows neu starten, klein. GUI-App-Support
ist am Starten. Der hat auch, der echt erstaunlicherweise ganz gut funktioniert. Wie findet ihr, Python
so ist sehr gut zu gebrauchen? Bist du auf einer Suche nach einer Einsteiger-Programmiersprache
oder warum fragst du? Was Einsteiger-Programmiersprachen angeht, da habe ich was. Okay, Power off.
Ach nee. Shutdown? Ah, now? Nee. Macht man das unter Windows? Was? Okay, Leute im Chat,
S minus S minus P null. Aha, exquisite. Ich will übrigens gar nicht rebooten, ich will
tatsächlich ausschalten. Schaltet das jetzt aus oder rebootet das? Updater und underway.
Also, wenn du auf der Suche nach Einsteiger-Programmiersprachen bist, dann geh mal zu mir auf YouTube. Da haben
wir nämlich letztens ein Video gemacht zusammen. Nämlich das da. Einsteiger-Programmiersprachen.
Kannst du dir ja mal angucken. Ansonsten, die Kurzvariante für dich, was wir hier drinnen
vorstellen ist Go, dann Python, dann JavaScript. Aus irgendwelchen Gründen möchte da Florian
C und C++ vorstellen. Ich werde es bis heute nicht verstehen, aber es war sein Part. Und
ich stelle C Sharp vor. Und meine persönliche Empfehlung, wenn du wirklich noch nichts kannst
und noch nichts konkretes vorhast, fang mit JavaScript an. Du brauchst einfach nur einen
Browser und kannst loslegen. Und du kannst so geile Panels wie SpaceX programmieren.
Wenn du Python bisschen kannst, spricht auch nichts dagegen, damit weiterzumachen. Das
ist auch eine super Einsteiger-Programmiersprache. Ich glaube, das muss man anhaken dafür.
Max, wo hast du die Preview von Windows 11 her? Secret. Haben wir schon mal einen Go-Stream
gemacht? Ne, wir haben noch keinen Go-Stream gemacht, weil ich bin nicht der Super-Go-Profi.
Ich meine, ich kriege da drin was programmiert, aber ich bin jetzt keiner, der euch sagen
ja, so ist die beste, also ich kann euch in C Sharp zeigen, so ist die beste Art und Weise,
was zu machen. Das kann ich in Go, ich kann in Go was machen, dass es funktioniert, aber
ob es die beste Art und Weise ist, keine Ahnung. So, geht das jetzt? Warum startet sich immer
diese Kacke? Xbox App. Was will die eigentlich von mir? Was verkaufen wahrscheinlich? Rust
7, das können wir tatsächlich mal machen. Rust ist super, aber Rust ist wirklich nur
für High IQ Leute. Also wenn ihr nicht mindestens, sagen wir mal 125 plus IQ habt, dann könnt
ihr Rust vergessen. So, also Enter New Unix Name. 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, jawoll.
So, und jetzt können wir PowerShell, jetzt können wir das Terminal starten und WSL aufmachen.
Terminal, M, JUBANTU und wenn ich jetzt nach, wo ist da Kram? Documents, Source, ne, Source,
WPos. Ich hab mich übrigens auch verschrieben, sehe ich gerade. So, wenn ich da jetzt hingehe
und sage.NET RUN, dann, ach fuck, das ist jetzt, da muss ich.NET EXE machen oder RUN?
Jetzt richtige Ordner und jetzt haben wir Emojis. Auch nicht? Warum haben wir da keine
Emojis jetzt? Muss ich vielleicht.NET unter Linux installieren, dass das funktioniert?
Moment, ist das WSL 1 oder WSL 2? Das ist WSL 2, oder? Das Terminal, das kann Emojis,
das kann Emojis, das Terminal unter Linux. Das geht. Wohingegen, ihr seht's, unter PowerShell
funktioniert das nicht. Das ist wahrscheinlich einfach das Problem, dass das ein.NET, Windows
.NET Anwendung ist, die jetzt rumbackt. Okay, UPD, INSTALL, haben die eigentlich.NET
stundermäßig mehr drinnen? Ne, ne? Die wollen, dass ich einen Snap installiere wahrscheinlich.
Ne, ne, ich installiere keinen Snap. Du mein, das überhaupt nicht funktioniert damit. Ich
hab eine Idee. Das ist ja Cross-Platform, ich weiß, was wir machen. Wir machen jetzt,
wir machen jetzt richtig, richtige Big-Brain-Idee. Passt mal auf. Richtig, richtig. Jetzt kommt
die ultimative Hacker-Man-Solution, was wir jetzt machen..NET, BUILD, minus, minus, nee,
PUBLISH, PUBLISH, minus, minus, self-contained, self-contained, Linux 64, ich hab keine Ahnung,
ob das die richtigen Kommandos sind, nein. Ne, X64, okay. Massive, Massive Hacker-Man-Solutions
hier. Also, gehen wir dahin. Wo müssen wir hin? CD, bin, debug,.NET, Linux, ist Terminal
ne, ist nicht, ist nicht gecrasht. Publish. So, und jetzt kann ich's ausführen. Damn,
habt ihr's gesehen? Habt, habt ihr's gesehen? Zack, und da haben wir unsere Emojis. Richtig
Six-Head, oder? Das ging aber nur, weil wir jetzt mit, okay, okay, das jetzt zu erklären
ist echt kompliziert. Wir haben mit WSL das Windows.NET aufgerufen und dort mit dem Windows.NET
cross-compiled ne native Linux-Anwendung, die wir dann ausführen unter WSL und dann
funktioniert's mit den Emojis. Was, CH, CHP, 6500, was, was, was, was, Moment, warte, das
geb ich nicht einfach so ein, ich weiß nicht, was es macht. Check mal mein Sample oben,
was, was, was, was, Sample. Was, was, was macht CH, CHP? Jetzt sind wir wieder im Microsoft
Weird Champland. Das ist nicht standardmäßig Unicode. Okay, jetzt sind wir echt im, im,
im, im, Massive Microsoft Weird Champland. Also, das heißt, ich geh jetzt dahin, geb
das ein, dann geh ich in, ja, dahin,.NET Run. Nö, funktioniert nicht. Funktioniert nicht.
Bam. Outdated, gebated, overrated. Funktioniert nicht. Kann man Change-Code-Page auch unter
Linux machen? Nee. Deiner, hm? C-Pool. Komm. Also, deswegen muss ich nach wie vor sagen,
einfach eine Linux-4M und gut ist, dann muss man sich mit dem ganzen Chat immer noch nicht
rumschlagen. Nee, geht nicht. Tja, funktioniert nicht. Okay, Moment, Moment, was, was? Mach
in deinem Sample mal Console-Writer noch Console-Output-Encoding. Oh, big brain time. Das machen wir jetzt,
das machen wir jetzt. Da lernt, hier Leute, ich lerne noch was, ich, ich, ich lerne, wie
man auf der Windows-Shell Emojis ausgeben kann. Heute, heute hab ich viel, viel wichtige Infos
hier, viel wichtige Input gelernt. So, also was soll ich machen? Console, also vorher
wahrscheinlich, ne? Console, Output, Output, Output-Encoding gleich. Ja, super, AI, schlag
mir mal was vor. Output-Encoding. AI hat kein Bock. Encoding, okay. UTF-8. So, und das soll
jetzt irgendwas bringen. Probieren wir das mal hier aus. Tatsächlich, das Funst. Moment,
Moment. Geht, geht das auch im, im, im alten Kommando-Zeilen-Prompt? Nee, oder? Da geht
das. Okay. Warum um alles in der Welt geht das? Kann mir das irgendjemand erklären? Warum,
warum kann ich hier in dem Programm Emojis ausgeben, aber keine Emojis reincopypasten?
Das ist, ey, Microsoft-Encoding-Land ist echt die absolute Hölle. Source?
Was? CHCP65001? Okay, nee, da geht's glücklicherweise nicht.
Was? Also, Pock. Richtig, richtig, richtig, richtig Pock. So, aber wir waren ja eigentlich
dabei, wir wollten uns Wishless Studio angucken und nicht irgendwelche Emoji-Ausgaben. Wo
hatten wir denn jetzt den Blog-Post? Also, wo stand da jetzt noch was drin, was es sonst
noch so gibt? Wishless Studio 2022 Review. Die bei Microsoft sind einfach zu sick-set
und mir verstehen es nicht. Glaub schon. Ja, das wird an uns liegen. Gehe ich auch von
aus. Unsere, unsere Köpfe sind einfach nicht zu, zu groß genug für die Microsoft-Logik.
Also, 64-Spit-Upgrade bisher bestes Intelli-Code. Okay, Leute, wenn das das bisher beste Intelli-Code
ist, dann will ich nicht wissen, wie geil Intelli-Code bisher war. Ach, wir können tatsächlich
mal probieren, ob da, was der bei Record sagt. Das, das probieren wir jetzt noch mal aus,
was der bei Record sagt. Record, legt der da irgendwas vor? Jetzt mal, schlägt er in
der Konsolenanwendung überhaupt was vor? Nee, in der Konsolen, warum geht dann in der
Konsolenanwendung Intelli-Code nicht? Warum geht, warum, hä? Guck mal, in der Konsolenanwendung
geht Intelli-Code nicht. Doch, doch. Doch, oder, oder auch, hä? Eben ging es noch nicht,
vorhin ging es. Ich blick da nicht mal durch. Public, Public, der Zeichen, Glass. So, das
ist das Beispiel, was eben funktioniert, was eben funktioniert hat. Drop. Okay, das funktioniert.
Guck mal, jetzt ist es broken, jetzt funktioniert es nicht mehr. Eben hat es mit Firstname und
Lastname auch funktioniert. Jetzt ergibt er mir aber ID und User-ID und User-Count und...
Ach und jetzt muss ich Firstname machen, oder? Okay, jetzt geht es. Okay, ich muss sagen,
die AI ist noch ein bisschen fragil, die funktioniert noch nicht so richtig gut. Probierst du noch
Maui aus? Ja, mal ganz kurz, falls sie schon drin ist. Äh, äh, warte mal, Leute, was
wollte ich jetzt ausprobieren? Das habe ich schon wieder vergessen. Ach so, Record. Record.
Funktioniert das da auch? Äh, und jetzt muss man sagen, in it, ne? So, Record-Stells. Ne,
sonst kann er noch nicht. Oh, doch. Doch, kann er, kann er. Guck mal, gar nicht so blöd,
gar nicht so blöd. Naja, ich bin auch nicht so wahnsinnig begeistert, muss ich ehrlich
sagen, davon. Wir machen wirklich mal ein Maui-Projekt. Falls wir... Falls das überhaupt
geht schon. Geht das überhaupt schon? WPF, WPF. Wer bei Microsoft hat sich eigentlich
gedacht, dass das hier übersichtlich ist? Kann es sein, dass wir das zusätzlich installieren
müssen? Kann es sein, dass man Maui-Zeug zusätzlich installieren muss? Desktop? Gibt
es zumindest nicht zur Auswahl. Dotnet 6 ist dabei, muss eigentlich passen. Maui ist der
Versuch, von Microsoft in Cross-Platform UI-Framework rauszubringen, nur mit dem meiner Meinung nach
komplett falschen Ansatz. Und Linux wird prinzipiell nicht unterstützt. Okay, also, da gibt's
nix. Ja, mit Electron kannst du's auch machen. Wir können die Testgeschichte mal ausprobieren.
Da weiß ich aber nicht, wie das geht, Chat. Da müsste der mir helfen. Ohne Scheiß, ich
hab wirklich keine Ahnung, wie das mit Tests funktioniert. Add? Class? Okay, keine Ahnung.
Huge? Tests? So, und wie geht das jetzt? Test? Hallo? Test? Nee, das ist, das ist irgendwas
anderes, oder? Zumal das auch noch irgendwie kaputt ist und gar nicht funktioniert. Ich
weiß gar nicht, wie ich den Test-Runner hier überhaupt aufmache. Ah ja. Nee, da muss ich
jetzt erstmal X-Unit, N-Unit oder wie auch immer der Kram heißt installieren. Da bin
ich, da bin ich zu low, da bin ich zu low für. Da bin ich zu low für. Okay, eigenes
Projekt. Add? Ah ja, N-Unit-Test. Genau. Next. Create. Kann das Lore? Weiß ich nicht. Kannst
ich, warum ist das hier alles, alles, alles broken? Warum ist das eigentlich alles kaputt?
Ah, jetzt ist es ganz, okay. So, und wo ist jetzt der Test-Runner? Windows? Test? Wo
ist, Test-Explorer, da ist er. So, und wo geht das jetzt, was der Typ gezeigt hat mit
den unterschiedlichen Plattformen? Meine Güte, die Bedienung davon ist aber nur wirklich
mal massivster, massivster Pains-Champ, Alter. Richtig Hardcore-Pains-Champ. Und wo kann
man das jetzt Linux-technisch umstellen, was der gezeigt hat im Video? Das geht glaub
ich noch gar nicht. Das ist mir, das ist mir zu eklig zu benutzen. Das mach ich eh nicht.
Das werd ich eh nicht benutzen. Das weiß ich jetzt schon. Soweit ich mein Visual-Studio
2022 eh nicht verwenden. Ich bleib weiter unter Linux mit Rider und alles, und alles
ist gut. So, gibt's sonst noch irgendwas Neues? Ich würd gerne ein Maui-Projekt anlegen,
aber das geht ja nicht. Bisher best ist alles klar. Du bist jetzt Macbook-Besitzer? Ja,
das macht nix, da läuft Rider auch drauf. Es ist zwar ein bisschen lustig, dass wir
erst ne Java-IDE brauchen, damit wir ordentlich.NET-Cross-Plattform programmieren können,
aber immer noch besser als Visual-Studio vom Mac oder sowas. Gab's jetzt noch irgendwas,
was wir ausprobieren müssen? Ich mein, das ist jetzt wirklich gar nicht, das ist jetzt
bisschen arm. Ich mein, das ist nicht die CPU-Plattform. Gibt ja nix. Angeblich haben
jetzt, das können wir noch mal ausprobieren, Angeblich hat Windows Forms jetzt Hot Reload,
aber da weiß ich nicht, ob das schon eingebaut ist. Angeblich haben die Hot Reload. Das probier
wir jetzt mal aus, ob das funktioniert. Windows Forms Hot Reload, da hab ich vor 35 Jahren
davon geträumt, noch bevor ich auf der Welt war. Nee, stimmt nicht, ich bin da mittlerweile
36. Ja. Okay, ein Button. Ich brauch ein Button. Button. Geben wir ein Button. Alles klar.
So, gucken wir mal, ob das jetzt Hot Reload hat. Ich hab gelesen, dass es angeblich Hot
Reload hat. So, Hot Reload. Das heißt, wenn das jetzt funktioniert. Ach, guck mal da.
Da gibt's nen extra Knopf. Pure Magie. Äh, nein, nein, nein. Ich will, ich will im Design,
wo ist die Toolbox? Wo ist die, Leute, wo ist die Toolbox? View, Toolbox. Toolbox. Was?
Okay, wir machen einfach, wir machen einfach den zweiten Button. Und jetzt, und jetzt,
und jetzt, und jetzt. Passt auf, Leute. Oh nein, nein, nein. Nicht singen, das ist Monka
Toss. Ah, bla, bla, bla, bla, bla, bla. Wo hab ich die Musik? Ah, wo ist die Musik?
Geh. Immer wenn gesungen wird, ist Monka Toss. Immer noch. Wieder gesungen. Bam. Okay. Also,
testen wir mal. Ja, wenn ich jetzt da oben auf den Button drücke, sollte das jetzt Hot
Reload. Probieren wir das mal aus. Ob das Hot Reloaded. Funktioniert ja schon mal gut.
Okay, vielleicht, vielleicht geht das nur. Speichern? Ach, der speichert nicht automatisch
für mich. Geht aber auch so nicht. Okay, vielleicht, vielleicht geht das nur, geht
das nur für, äh, neue Sachen. Also, äh, nicht Button click. Wir machen jetzt irgendwie
this button, äh, Texts gleich. Okay, wir nehmen die Super Big Brain AI Completion. Nö. Das
funktioniert nicht. Okay. Hot Reload für Windows Form F. Ich mein nicht, dass es mich
ehrlich gesagt großartig stört. Da steht Code Changes, nicht Design Changes. Na gut,
wir haben jetzt beides gemacht, beides hat nicht funktioniert. Ich glaube, Hot Reload
funktioniert nur, wenn man gerade nicht am Debuggen ist. Okay, dann starte ich es ohne
Debugger mal. So, jetzt ist ohne, jetzt habe ich ohne Debugger gestartet. Ne, ne, dann
habe ich den Button gar nicht. Ich muss das, ich muss das mit dem Debugger starten, wäre
es ja auch logisch. Wieso sollte der Constructor nochmal triggern? Ja, weiß ich, ich frage
Microsoft, die schreiben was von Hot Reload. Ja, wir können, wir können noch mal was anderes
probieren. Hier ist nichts, hier ist nichts drinne. Dann machen wir jetzt mal die onClick,
die onClick Methode, machen wir jetzt mal was rein für den, für den Button. Also, aktuell
passiert nichts. Ähm, das heißt, wir machen da jetzt rein, oh, wie macht man denn Pop-Up?
Wie, wie macht man denn Pop-Up in Windows Forms? Model? Model? Ne. Ah, du Scheiße. Okay,
Dialog. Dialog? Ne. Message Box. Message Box Show. Ah ja. Okay. Fuck. Okay, gespeichert.
Hot Reload. Und jetzt? Oh, das funktioniert. Also, da haben wir schon mal. Designer Changes
gehen nicht und Constructor Changes gehen nicht. Okay. Jetzt noch mal testen, ob das
auch wirklich funktioniert. Forgo. Reload. Es funktioniert. Okay, das ist schon mal cool.
Weil, man checkt noch wirklich Design, Design-Sachen nicht funktionieren. Properties. Mal das,
äh, Color. Ist jetzt, äh, Orange. Perfekt. Ne, das funktioniert nicht. Das wird unter
der Haube eh auch in irgendeinem Constructor gesetzt. Naja. Nice to have hat eigentlich
kaum einer gebraucht. Aber mal ganz ehrlich, juckt mich nicht. Windows Form kann durchaus
ein paar coole neue Features gebrauchen, auch wenn Windows Forms an sich schon, da bisschen
in die Jahre gekommen ist. Does it work on Macbook? No. No. But, äh, I think the final
version has Visual Studio for Mac. Lass mal kurz gucken. Gibt's da schon was für Mac?
Maybe it's available for Mac, too. Don't know. Looks like Windows only. Ja, aber ich
glaube, das sagt eh unter Mac. Ja, okay, das ist Hard Reload für Windows Forms. Warum
nicht? Warum nicht? Kann man machen. Muss man nicht. Benutzen die Leute nicht Flutter
eher anstelle von Windows Forms? Naja, auf dem Desktop nicht. Auf dem Desktop, also Flutter
ist cool, aber Flutter auf dem Desktop ist einfach noch nicht ready. Aber ich gehe davon
aus, dass Flutter auf dem Desktop noch das brauchbarste Crossplatform, auf absehbare
Zeit das brauchbarste Crossplatform GUI Framework werden wird, weil aktuell hast du ehrlich
gesagt zwei realistische Alternativen. Du hast Qt oder du hast Electron. Das sind die
einzigen zwei, die es gibt. Electron ist halt, sagen wir so, JavaScript, was sich jedermanns
Fall ist, und es ist halt riesengroß mit massig Ramverbrauch, weil Electron, weil V8 und Chrome
und Node.js alles gleichzeitig laufen muss. Gut, und du hast Qt, das Problem an Qt ist
C++. Du kannst ein bisschen was in Python machen, aber Python Crossplatform zu packagen
ist auch nicht so wahnsinnig tolle. Und ansonsten hast du nix? Ja, doch, stimmt, du hast Tkinter
in Python eingebaut. Avalonia ist leider auch noch nicht wirklich soweit, dass man das,
also das letzte Mal, wo ich mir das angeguckt hab, dass man das komplett gut verwenden kann.
Das letzte Mal, wo ich Avalonia geguckt hab, die hatten beispielsweise noch kein Browser,
also noch kein Webview und auch keine Möglichkeit in irgendeiner Art und Weise da beschleunigten
GPU, beschleunigten Content zu rendern. C++ ist für'n Arsch, ja ist es auch. Ansonsten
ist Avalonia ganz cool. Ganz ehrlich, ich hätt's cooler gefunden, hätt' Microsoft
Avalonia ordentlich gemacht und nicht ihr komisches Maui rausgebracht. Maui ist, finde
ich, der falsche Ansatz. Das hab ich jetzt schon ein paar Mal gesagt, ich versuch jetzt
mal zu erklären, warum das meiner Meinung nach der falsche Ansatz ist. Also, wenn du
nun Crossplatform GUI Framework machst, dann hast du zwei grundsätzlich unterschiedliche
Ansätze. Du kannst sagen, ich bau nen Rapper, der die native UI Elemente nimmt, also hier
zum Beispiel Buttons unter Windows, die so aussehen, Buttons unter Linux, die so aussehen,
also du nimmst die native UI Elemente und baust nen Rapper drum herum und dann hast
du den Vorteil, dass die Anwendungen zwar native aussehen, aber sich oftmals ein bisschen
merkwürdig anfühlen, weil du für den kleinsten gemeinsamen Nenner programmieren willst.
Also, wenn du so nen Rapper hast, der beispielsweise native Controls benutzt von Android, iOS,
Windows, Linux, Mac, die Frage ist immer noch, was ist eigentlich native unter Linux, dann
musst du gucken, dass du den kleinsten gemeinsamen Nenner an API unterstützt, was du abbilden
kannst. So, das ist das, wie das Xamarin oder Maui macht. Du kannst es da übrigens auch
besser machen, aber dann musst du sagen, if Platform gleich gleich Windows. So, und
dann gibt es den Ansatz, der meiner Meinung nach einzig wahre und sinnvollste Ansatz, so
wie das Flutter auch macht, ist, man nimmt für die jeweilige Platform schnellste Rendertechnologie
und malt Steuerelemente selbst. Das heißt, oder was heißt für die jeweilige Platform,
das muss noch nicht mal sein. Das heißt, man programmiert nen Renderer für Windows,
für Linux, für Mac, für iOS, für Android, mit was für nem Tool auch immer und malt
Steuerelemente selbst. Genau, Avalonia ist hier. Die hatten eine Zeit lang noch GTK-Erhängigkeit
unter Linux, das hat mich immer ein bisschen abgeschreckt, aber ich glaube, das verwenden
die plus zum Fenster malen. Ich denke, das muss nicht unbedingt so sein, du musst dich
halt selbst darum kümmern. Also, ich finde den Ansatz für konsistentes Look und Feel,
keine Steuerelemente malen. Deswegen ist ja auch letztendlich Electron so cool, weil Electron
ist nix anderes als nen Browser, also ne Anwendung verpackt mit nem Browser dabei, Node.js V8,
Chrome und das sieht halt überall eben aus, wie es halt in nem Chrome nun mal aussieht,
egal auf welcher Plattform. Qt macht das übrigens auch so mit QML, die malen im Endeffekt auf
jeder Plattform, mit, es gibt für Qt gibt's nen Diode X Renderer, beziehungsweise auch
nen GL Renderer und sonst was. Die malen das auch so. Nur Microsoft hat sich wieder gedacht
bei Maui, ne ne, wir machen diesen komischen Steuerelemente wrapper und das finde ich ist
ein Kack Ansatz. Dann hast du dann wieder so Dinger, da siehts unter Mac kacke aus, oder
mal siehts unter Windows kacke aus, mal siehts dann unter Linux kacke aus, mal siehts unter
Android nach iOS aus, mal iOS nach Android aus und ach keine Ahnung. Ja und Flutter
macht das richtig, Flutter malt den Kram selbst, deswegen denke ich, wenn die es schaffen,
dass man ordentlich es auf dem Desktop benutzen kann, dass Flutter sich durchsetzen wird,
weil es ist ne angenehmere Sprache als C++, auch wenn Dart, wisst ihr das Optimale, soll
ich euch mal sagen, was das beste wäre, also die beste Kombination aus allem. Irgendjemand
nimmt Flutter und nimmt ne ordentliche Programmiersprache, wo du auch Zugriff auf viele Libraries hast,
ja. Also irgendjemand macht nen C Sharp Flutter oder nen JavaScript Flutter oder was auch
immer. Das wär wahrscheinlich am besten, ich mein Dart. Warum muss es denn ausgerechnet
Dart sein bei Flutter? Hätte man da nicht irgendwas nehmen können, was es gibt? Es
ist jetzt nicht, als hätte Flutter unbedingt den Anspruch, ja wir brauchen auch ne eigene
Programmiersprache dabei. Warum? Ja nur der Unterschied, dass du bei Electron noch ein
komplettes Node-Share hast, einen kompletten Chrome mit V8 laufen lassen hast. React Native
aufm Desktop sackt. Ich hab mal nen Stream in Flutter gemacht, aber ich bin da nicht
wirklich gut drinne. Schau dir mal Tauri an. Ja erinnert nix dran, dass es viel RAM braucht
wahrscheinlich. Ob das jetzt ein Chrome ist oder ein Native Browser, Browser brauchen
halt viel RAM. Das, ja ja das hab ich gesehen. Blazer Native und Gedöns, ja das hab ich gesehen,
wobei ich halt nicht so genau den, ich versteh nicht wirklich so genau die Existenzberechtigung
ehrlich gesagt, weil C Sharp im Browser mit Blazer ist halt langsam und braucht nen riesen
Runtime bevor es überhaupt startet. Und es hat jetzt nicht so den riesen Vorteil gegenüber
Javascript, zumal du für gewisse Dom-Interaktionen immer noch Javascript brauchst im Blazer.
Das ist glaub ich so, das ist so ne coole Idee gewesen bei Microsoft, wo ich nicht so
den Realitätsbezug drin sehe. Es gibt bereits viel zu viele Sprachen, Newbies wissen nicht
wo sie anfangen sollen. Wenn Newbies nicht wissen wo sie anfangen sollen, dann sollen
die zu mir auf YouTube gehen und sich einfach dieses Video hier angucken. Was ist die beste
Einstiegsprogrammiersprache? Guckt euch das Video an und dann fangt mit Javascript an.
Oder mit ner anderen Sprache die wir sagen, aber wenn ihr nicht wisst was ihr machen wollt
dann fangt mit Javascript an. Es sei denn ihr habt ne Abneigung jetzt schon gegen Javascript,
dann nehmt halt was anderes davon, dann nehmt Python oder Go oder C Sharp oder meinetwegen
jetzt Microcontroller sind auch C. Warum ist C drinne? Naja, erstens weil der Florian C
Fan ist und C ist ja auch ok und gerade wenn es um Microcontroller geht, ist das nun wirklich
was womit viele Leute anfangen. Viele Leute fangen mit irgendwie so nem Arduino Ding an
zum Beispiel und da kannst du ja nur C verwenden bzw. du kannst eigentlich nur dieses Arduino
C++ verwenden, aber man sollte auch wenn man Arduino programmiert möglichst großen Bogen
um viele C++ Features machen, weil C++ einfach nur ganz großer Pains Champ ist.
Wenn Flutter Dart sich durchsetzen will, warum dann nicht als Noob anfangen? Weil Dart ne
Programmiersprache ist, die du nirgendswo gebrauchen kannst sonst und du wirst als deine
erste Anwendung nicht gerade ne Cross-Platform GUI Anwendung machen. Also man kann sicherlich
mit Dart und Flutter anfangen, wenn man da ne Vorliebe für hat, aber ich glaub nicht,
dass das die beste Einsteigersprache ist oder sich da besonders gut für eignet.
In der Berufsschule haben wir mit C angefangen, sind auf Java gewechselt ab dem zweiten Jahr.
Ja das hab ich öfters gehört, bei uns in der Berufsschule haben wir auch C gemacht
und später dann ein bisschen C Sharp und das lustige war, wir haben noch auf Papier programmiert
in der Berufsschule, das ist richtig armselig. Ich mein das ist jetzt nicht, das war 2007
oder so. Das ist richtig armselig, dass man da noch auf Papier programmieren musste.
Was hältst du von Visual Studio Code 2020? Bis jetzt ist es durchaus in Ordnung, was
ich gesehen hab. Die Sache ist nur die, dass es halt so ein Release ist, wo es im Prinzip
nichts großes zu sehen gibt. Ich mein,.NET 6 ist dabei als Preview, ok, IntelliCode, ok
wenn das das beste IntelliCode ist, da will ich nicht wissen, wie das vorher war und es
kommt einem so vor, als laden die Projekte ein bisschen schneller, aber im Großen und
Ganzen ehrlich gesagt, ja, es ist vorhanden. Mal gucken, was bei Release rauskommt. Es
wird bei Release immer noch das beste für die meisten Leute sein, die unter Windows
anfangen mit.NET zu programmieren, wobei ich sagen würde, wenn ich unter Windows programmieren
würde, ich würde trotzdem Rider installieren. Ich bin ja schon seit letzten paar Jahren,
was.NET angeht, nur noch unter Linux am programmieren mit Rider, aber im Ernst, ich würde es unter
Windows auch so machen. Rider beste. Kostet halt was, wenn man nicht die Trial austricksen
will. Chatbrain sollte mich auch noch sponsoren, genau. Der Vorteil am Papier programmieren
ist, dass du jeden Schritt dreimal überlegst. Das dumme am Papier programmieren ist, wenn
du Semikolon vergisst, das zeigt es dir nicht an. Man muss es, ich meine, es ist 2021. Da
kann man durchaus nicht an Rechnersetzen programmieren. Ich bin da kein großartiger Fan von, ich
halte es auch nicht für so sinnvoll. Als Student sind Chatbrains IDE's for free. Kann man Windows
11 die Gruppierungen wieder ausschalten? Tja. Ich habe nichts gefunden bis jetzt, fuck mich
auch total ab. Und ich habe hier in den Settings geguckt, da ist nichts zu drinnen. Keine Gruppierungen.
Ich habe es aber nicht aktiviert, aber man hat da kein Setting, also das nervt mich richtig.
Da brauchst du wahrscheinlich wieder irgendwelche komischen Registry-Hacks dafür. Also wenn
sie das lassen, mache ich erstmal 5 Videos, in denen ich Microsoft fläme. Dieses Gekrupe
ist so ätzend. Ich habe 3 Browser in Firefox auf, weil so will ich auch 3 Browser unten
angezeigt bekommen. Ich meine, es ist ja nicht so, als hätte ich nicht genug Platz. Was
denken die denn, wie viele Programme die Leute da unten verlinken? 50? Ich habe da unten
drin. Guck mal, was habe ich denn hier? Ich habe meine Shell, ich habe einen Explorer,
ich habe einen Browser. Fertig. Das reicht. Ich glaube, bei Microsoft, die treffen immer
noch gute Entscheidungen. Also gerade was Clouds Sachen angeht und mit Github und sie
machen schon viele coole Sachen. Microsoft hat dann einfach zig viele Abteilungen. Davon
bauen halt auch viele Kacke. Unter anderem die Leute, die für Windows zuständig sind,
weiß ich nicht, was die machen die letzten 5 Jahre über. Windows ist immer noch ein
unglaublich zusammengestöckeltes Stück Software. Wie kriege ich denn das da eigentlich weg?
Wie kriege ich das weg? Ich habe letztens H1 Update gemacht. Wetter, wie kriege ich das
Wetter weg? Das ist auch so ein Windows Feature, ne? Da hat jetzt wirklich die Welt drauf gewartet,
oder? Da hat die Welt drauf gewartet. Die haben gesagt, ja, ich brauche unbedingt so
ein komisches Widgetrechts in meiner Taskleiste. Was da so total out of place auch noch aussieht.
Die Delta-Mutanten breiten sich rasant aus. Aha. Delta-Mutanten sind am Start. Ich hoffe,
oh, wisst ihr, das ist geil, wenn die Delta-Mutanten sich ausbreiten. Das heißt, dass die Homeoffice-Pflicht
verlängern werden. Die sollen sich mal ein bisschen schneller ausbreiten. Die haben noch
bis zum 30. Zeit sich auszubreiten. Weil bis zum 30. wollten sie ja die Homeoffice-Pflicht
lassen und danach nicht verlängern. Aber wenn sich die Delta-Mutanten jetzt ausbreiten,
dann verlängern die das wieder. Hoffentlich breiten die sich mal ordentlich geschwind
aus jetzt. Kein Homeoffice. Warum? Homeoffice ist beste. Die breiten sich nicht so. Das
ist aber schlecht. Die sollen mal Gas geben, die Mutanten. C++ ist auch die beste Sprache.
C++ ist einfach nur ein ganz großer Pains-Champ. Du hast nur Gutes... Wer erzählt allen Ernstes
nur Gutes über C++? Das glaube ich nicht. Das kann nicht sein. Dreh grad. Du machst
das aktuelle Projekt absichtlich in C++? Ja, manche Leute sind nicht mehr zu retten.
Gut, ich meine ich mache das ESP und Arduino Zeug auch in C++. Weil es nicht anders geht.
Aber ich würde das jetzt nie freiwillig machen. Du meinst den Typ unter meinem Video? Ja der
war geil. Der war geil. Der war richtig loster Typ bei mir unterm Video letztens. Der gemeint
hat Homeoffice ist der erste Schritt in die Entlassung. Der war ein geiler Typ. Der war
da voll überzeugt von. Arduino ist C++. In der Arduino IDE auch noch so ganz komische
Abwanderungen davon. Mit ein paar Erweiterungen. Soll ich euch mal... Pass mal auf. Für alle
die sagen C++ ist gut. Ein Beispiel was mir gerade so spontan einfällt. Also wir gucken
uns jetzt mal was an in.NET. Also in.NET kann ich sowas machen wie hier. Output. Output
gleich LUL. Und dann sage ich Console Rightline Output to Upper Case. Wobei ich bin mir nicht
sicher ob die das jetzt nicht... Doch ich glaube sogar seit dem letzten C++ Standard
haben die das eingebaut. Ich glaube seit dem letzten C++ Standard haben die das jetzt sogar
eingebaut. So und in C++ geht das so.
Ist gleich viel besser ne. Viel viel besser. Viel besser lesbar und übrigens wir haben
jetzt immer noch nicht ausgegeben jetzt. Viel besser. Ja stimmt schon habt ihr recht.
Exposed. Aber ich glaube dass die tatsächlich to Lower to Upper Case im letzten C++ Standard
drinne haben. Ja aber es gibt noch mehr. Also es hört nicht auf. Aber ich will jetzt nicht
anzufangen zu sehr über C++ zu renten. Übrigens kann mir jemand erklären was es macht in
C++. Passt auf. Ich hab hier so ein paar lustige C++ Beispiele. Wer weiß was es macht. Oh
das Highlight ist kaputt. Irgendjemand eine Ahnung? Was machts? Naja das ist ein Vergleich
der Standard Lips nicht der Sprachen. Doch. Das ist ja das was das C++ Cremio macht. Die
machen die Sprache und die Standard Library. Das musste schon mit zählen. Ok es hat keiner
eine Ahnung was es macht. Gut schonmal wunderbar. Ich weiß auch nicht mehr was es macht um
ehrlich zu sein. Das hab ich für irgendwas gebraucht. Ich hab aber keine Ahnung mehr
was es macht. Ich glaub ich weiß wieder was es macht. Du kannst diese Methode hier aufrufen
mit beliebig vielen Argumenten und der nimmt alle Argumente und macht einen String draus
am Ende. Also im Prinzip dass das gleiche was du mit Params in C sharp machst. So auch
wunderbar. Wunderbares C++ Beispiel. Allein schon dass die Leute immer noch mit Header
rumhantieren müssen. Ja es gibt jetzt Modules. Aber niemand bisher verwenden wirklich Modules.
Das ist alles noch irgendwie ein komischer Header Crap. Headcraps. Es ist halt C++ was
soll ich da noch zu sagen. Ich geb dir Header. Dann hast du so ein Iterator Kram nicht richtig
funktioniert. Dann hast du jetzt erst so ein Iterator nicht richtig. Es ist C++. Es ist
einfach wir. Es ist an jeder Stelle wo du hinguckst wir as fuck. Du kannst den ganzen
Tag Weirdchamping betreiben wenn du C++ programmieren musst. Ich seh es wirklich C++ programmieren.
Wenn ich irgendwelche ESP Sachen mache seh ich die permanent so vorm Rechner. Mir wird
schon ganz schwindelig vom ganzen Weirdchampen wenn ich C++ programmieren muss. Tommy Dankeschön
für den Sub. Ich hab übrigens gar nicht gesehen wer alles noch subscribt hat. Hier Tommy Dankeschön
vor einer Minute. Der Alex ist auch am Start. Huza 345 war auch Subscribed. Domtorretto.
Und davor der Krelax den hab ich schon. Dankeschön Leute für die ganzen 5 hat mega 6 hat
big brain subscriptions. Ihr werdet übrigens gerade im Teams angerufen hab ich gehört.
Hadeschamp ich weiß. Macht demnächst eine Arduino C++ Session haben wir schon öfters
gemacht. Wofür braucht man denn eigentlich C++? Man braucht C++ überall dafür wo es
leider nichts anderes gibt. Zum Beispiel um Microcontroller oder ESPs und Arduinos und
sonst was zu programmieren. Das ist da gibt es keine guten Alternativen zu C++. Du hast
zwar MicroPython damit hast du andere Probleme. Du hast eine minimal Rust Geschichte die auch
nicht richtig funktioniert. Also im Prinzip bleibt dir da gerade für Arduino und alles
Arduino kompatible nicht viel übrig. Nehmst du was nicht Arduino kompatibles dann ist
das alles einfach nur klassisches C. Aber Arduino Arduino kompatibel ist C++ und da
bleibt dir nicht viel übrig. Sebi Dankeschön für den Sub. Übrigens auch der Grund warum
ich immer Unreal also sollte ich mal sollte ich mal jemals ein Spiel programmieren wollen.
Ich würde Instant Unity nehmen wegen C Sharp und und zu Unreal würde ich würde ich sagen.
Allein schon wenn ich da das C++ Gewurste sehe. Ich weiß man kann Unreal auch über
diesen komischen Blueprint Editor machen aber ich habe letztens ein Video gesehen von einem
der hat versucht eine Tür zu programmieren in Unreal die auf und zu geht und also die
richtig rum auf und zu geht und er hat irgendwie einen halben Bildschirm voller Kästchen und
verbundenen Input Outputs mit gehabt. Sowas sind fünf Zeilen C++ Code warum soll ich
das in irgendeinem Blueprint machen. Sag ich jetzt als Unreal Noob ich habe keine Ahnung
davon. Aber da kann ich nichts zu sagen da habe ich nie großartig großartig was mit
gemacht. Aber ich würde sofort Unity verwenden weil es die Sharp unterstützt. Ist C++ in
der Hinsicht vergleichbar. C ist in sich schlüssig C++ überhaupt nicht.
Java oder C Sharp ist eigentlich egal. Ich persönlich bin für C Sharp. C Sharp ist die
schönere Sprache aber Java geht auch. Wenn ich unsere Java Programmierer auf der Arbeit
sehe die wollen alle Kotlin verwenden und kriegen immer Anfände dafür dass sie den
ganzen Projekt nicht richtig machen können. Oh ne Splatoon Musik. Ich muss skippen. Skipp
ja also C Sharp ist die schönere Sprache. Kotlin soll wirklich nice sein was ich von
den Leuten auf der Arbeit an Java programmieren kann. Ich habe hier ein paar Konferenztalks
und so schon geguckt. Macht so einen Eindruck aus einer Mischung aus C Sharp Ruby und Swift
so ein bisschen Kotlin aber wäre mir auf jeden Fall lieber als Java selbst. Dankeschön
Unity für zwei Monate Subscription. Ne ne wie gesagt Game Programmierung ist wirklich
was da habe ich gar keinen Zug dazu. Ich Theorie crafte und so übelst gerne in Games aber
ich bin da wahrscheinlich auch viel zu unkreativ für irgendwelche Spiele zu machen. Heißen
ist eine super Einsteiger Programmiersprache. Wofür wird Swift benutzt? iOS und Mac Anwendung.
Ich meine wenn eine Sache noch ähnlich schlimm wie C++ ist dann wahrscheinlich Objective
C. Außer Apple hat ja niemand die Dreistigkeit besessen allen Ernstes jahrelang Objective
C zu verwenden. Du bringst jetzt CSS bei für eine Webseite für die Jugend. Ja das ist
auch ein guter Einstich. Du wirst früher oder später auf jeden Fall an ein bisschen
Javascript nicht vorbeikommen. Bin ich mir ziemlich sicher. Und also der Grund warum
ich immer sage Javascript ist die beste Einsteiger Programmiersprache. Du brauchst nichts außer
einen Browser und du lernst wichtige Sachen was du früher oder später brauchst. Du kommst
an Frontend Sachen heutzutage einfach nicht mehr vorbei. Bisschen Javascript bisschen
hat er im L und CSS muss heutzutage jeder können. Er ist zwar übertrieben gesagt sogar
ein Cobol Backend Programmierer. Wobei es da der wahrscheinlich noch am besten ohne
klar kommt. Was Quatsch. Python hat mit C++ gar nichts zu tun. Ich weiß worauf du raus
willst. Du willst darauf raus dass das Standard Python C++ programmiert ist aber das ist
doch egal. Die Standard.NET Implementierung war auch in C++ mal ursprünglich. Who cares.
Die könnten auch in Rust oder in Cobol sein. Wär doch vollkommen egal. Ja ich bin auch
nicht der große Css Kenner. Ich lerne jedes mal wenn ich Css benutze Neues dazu. Es gibt
ja mittlerweile so ultra viele kryptische Selektorsachen in Css. Das ist mir zu big
brain an vielen Stellen. Du kannst ja mittlerweile ganze Spiele quasi fast schon in Css Only
gewinnen. Also simple Spiele. Ich glaube es gibt schon in 4 gewinnt. Only in Css und sowas.
Aber der geilste Typ war immer noch. Also das abgedrehteste was ich bisher gesehen habe
ist von zweckentfremdeten Tools ist. Irgendjemand hat einen Hex zu Binary Converter in Ruby
Regex programmiert. Also er hat wirklich rein in Regex einen Hex zu Binary Converter programmiert.
Das ist wirklich massive brain. Genau wir machen ab jetzt alle. Wir programmieren
nur noch in Binary mit Hex Editor. Also die meistverbreitete IDE ist ja tatsächlich
Excel wenn du es so willst. Ja es ist echt so. Excel ist die IDE der Sekretärin dieser
Welt. Kenn ich nicht. Ja Moment das ist mit JavaScript. Das ist mit JavaScript. Das sind
übrigens die Half Life 2 Texturen. Man kann übrigens nicht schießen. Das ist mit JavaScript
hier klar. Das ist überhaupt kein Problem. Das funktioniert. Mit JavaScript kannst du
viel machen. Ja guck dir mal ein Video dazu an was die beste Einsteigerprogrammiersprache
ist. AC Dankeschön für den Sub. 3 Monate Big Brain Subscriptions hier. Flintstone 7
Monate. Auf halbem Weg zum Hypersubscriber hier. Aber noch nur. Habt ihr eigentlich
die GIF Emotes schon gesehen? Alle? Wir haben 2 GIF Emotes. Die ihr nur verwenden könnt
als Primesub. Also wer noch nicht geprimesubbt hat jetzt ist die optimale Gelegenheit wenn
euch der Content gefällt zu Primesubben. Und wenn ihr geprimesubbt habt ist natürlich schön
dass ihr wieder am Start seid. Ich glaube jetzt habe ich es richtig gemacht in Sellout
oder? Der war gut. Oh ne da wird wieder gesungen. Perfekt. Ja ok Leute. Das funktioniert. Danke
für die Subs. Spore Sirius und UD YZ Dankeschön für euer Primesub. Exzellent Sellout. Ich
habe letztens ein Tool gesehen. Das war ein Excel Plugin. Dass du echtes SQL und inline
C-Sharp Programme in Excel programmieren kannst. 27. Add Subscribe. Primesub. Dankeschön.
Beste Sellout. Ja das hat hart funktioniert. Can't wait. Ok Leute ich bin durch. Es gibt
nichts Neues mit Invisual Studio mehr was wir uns noch nicht schon angeguckt haben. Das
ist ein sehr mageres Preview Release von Microsoft. Also hätten wir sich fast sparen können.
Wie fandet ihr die Intelli Code? Seid ihr auch der Meinung das ist Magic? Intelli war
das auch Magic. Es ist ziemlich Maui. Es ist ziemlich Maui. Ja da hast du recht. Welches
ist eigentlich das beste Liedungsjahr für was? Für Desktop, für Server, für sonst
wie. Das kann man so pauschal nicht beantworten. Also ich habe am liebsten Ubuntu auf dem Server
und Manjaro auf dem Desktop. Und das ganze aber auch in der VM. Weil ich habe als Host
Windows und als vor allem Linux. Das ist für mich die beste Kombination aus beiden Welten.
Linux lässt sich auch super virtualisieren unter Windows. Im Gegensatz zu Windows unter
Linux. Arch by the way. Ist noch schön. Wenn es dir gefällt ist Ziel erfüllt. Big Prane.
Die Streams dienen ja prinzipiell zur IQ Steigerung des Chats. Das sind wir uns ja einig. Ich
meine belegt euch mal wie viele IQ Increases es hier schon gegeben hat. Die Leute haben
alle schon Köpfe. Die sind schon doppelt so groß wie vorher. Und ist bei mir ja auch
so. Ich lerne ja hier auch was dazwischen. Ich habe heute zum Beispiel. Ich habe es schon
wieder vergessen aber ich habe irgendwas gelernt. Ich habe vorhin nämlich noch gesagt heute
lerne ich wieder was. Achso Output. Console Output. UTF-8 Konsolen Output. Ja ist schon.
Ist schon. Das ist schon ein massiver Sixhead hier. Ist da Frasier eigentlich immer am Start?
Haben wir irgend einen den wir hosten können? Lost ist auch nicht da. Frasier ist auch nicht
da. Dann hoste ich niemanden. WubTube Champ. Ey heute nicht. Ist der on? Ist der on der
WubTube Champ? Ey WubTube Champ ist off. Sieht jemand Science and Technology? Gucken wir mal
Twitch. Was haben wir dazu bieten auf Twitch Science and Technology? Komm mal. Bam. React
und TypeScript auf Spanisch. Oder was ist das für? Ist das Spanisch? Live Earthquake.
Live from space. Boah Poggers. Die NASA ist am Start. Ihr wisst ja. Die IES ist ja eigentlich
unter Wasser und das sieht man bei den Aufnahmen immer, weil nebenbei da steigen Wasserblasen
dran vorbei. Ihr müsst ja mal bei Außenaufnahmen dran warten. Ey das ist ernsthaft eine legit
Verschwörungstheorie aktuell. Also ich hab das schon an vielen Stellen gelesen, dass
die IES angeblich unter Wasser ist und man Wasserblasen sieht. Irgendwann überzeugen
sie mich auch noch davon. Was programmiert sie? War? Input? Int? Ah. Go. Das ist Go.
Aus den Eulenstells. Der guckt Videos. Ich wollte gerade sagen, das ist doch der Veritasium
Typ. Ich guck mir jetzt die NASA noch ein bisschen an, wenn ich auf gehe. Komm mal jetzt
haben sie den eingepackt. SOS. Eject. Ok Leute. Wie immer gesagt, ich geh jetzt
auf. Also wir sehen uns im nächsten Stream. Machts gut. See you.
