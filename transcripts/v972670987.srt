1
00:00:00,000 --> 00:00:04,440
Corona-Ausbruch instant

2
00:00:04,440 --> 00:00:13,040
Ja, ich wusste, ich wusste gerade weg, ich kann euch gleich erzählen was war

3
00:00:13,040 --> 00:00:15,040
Nichts Schlimmes

4
00:00:15,040 --> 00:00:19,160
Oh, was hab ich da noch auf, ah von gestern

5
00:00:19,160 --> 00:00:30,360
Exquisite

6
00:00:30,360 --> 00:00:35,120
So ich weiß nicht ob noch irgendjemand da ist, ich mein, ich bin ja relativ plötzlich,

7
00:00:35,120 --> 00:00:39,120
ich wusste relativ plötzlich oft vor eineinhalb Stunden oder so

8
00:00:39,120 --> 00:00:50,120
Twitch sagt 46 Leute waren dauerhaft und sind instant wieder da, okay

9
00:00:50,120 --> 00:00:52,120
Oh eineinhalb Stunden ist ein bisschen zu übertrieben oder

10
00:00:52,120 --> 00:00:56,120
Na doch 2 Stunden, eineinhalb Stunden, 2 Stunden war ich weg ja

11
00:00:56,120 --> 00:01:00,120
Ich bin 16.30 oft ja, 1.45 war ich oft

12
00:01:00,120 --> 00:01:06,120
Ich muss weg

13
00:01:06,120 --> 00:01:09,120
Kann man Update machen während hier das Stream wieder anläuft

14
00:01:09,120 --> 00:01:12,120
Wir machen einfach, wir machen exakt an der Stelle weiter

15
00:01:12,120 --> 00:01:15,120
Oh was das, der Specter Meltdown Checker

16
00:01:15,120 --> 00:01:18,120
Was das, muss ich gucken was das ist

17
00:01:18,120 --> 00:01:21,120
Was ist der Specter Meltdown Checker

18
00:01:21,120 --> 00:01:24,120
Was das, Checker

19
00:01:24,120 --> 00:01:28,120
Specter Meltdown Checker, wow, wow

20
00:01:28,120 --> 00:01:41,120
Spotmonka

21
00:01:41,120 --> 00:01:43,120
Guckt doch mal hier, der Specter Meltdown Checker sagt

22
00:01:43,120 --> 00:01:46,120
Ich bin verwundbar, aber ich bin ja zum Glück in der VM

23
00:01:46,120 --> 00:01:52,120
Weil das auch nicht alles ausschließt

24
00:01:52,120 --> 00:01:55,120
Guckt euch das mal an hier

25
00:01:55,120 --> 00:01:58,120
Der Specter Meltdown Checker

26
00:01:58,120 --> 00:02:01,120
Was das alles gibt

27
00:02:01,120 --> 00:02:04,120
Mit Root, mit Root soll ich das starten

28
00:02:04,120 --> 00:02:07,120
Okay mal gucken was da der Specter Meltdown Checker sagt

29
00:02:07,120 --> 00:02:12,120
Ha, ich bin safe, außer gegen das hier

30
00:02:12,120 --> 00:02:15,120
Okay, who cares

31
00:02:15,120 --> 00:02:18,120
Hat mich nur gewundert, hat mich nur gewundert was das ist

32
00:02:18,120 --> 00:02:21,120
Ja Leute ich musste kurz weg, ich musste vorhin kurz weg

33
00:02:21,120 --> 00:02:25,120
Es ist ein Exquisite Update, Huge Update

34
00:02:25,120 --> 00:02:28,120
Leute mal ernsthaft, ich hab sie nicht mehr alle oder

35
00:02:28,120 --> 00:02:31,120
Ich laber so ein dummes Zeug vor mich hin manchmal

36
00:02:31,120 --> 00:02:34,120
Und wisst ihr wo das noch schlimmer war

37
00:02:34,120 --> 00:02:37,120
Als ich mit dem Friseur immer, als wir zusammen Xbox gespielt haben

38
00:02:37,120 --> 00:02:41,120
Ohne Stream, ohne alles, wir haben einen Scheiß geschwätzt die ganze Zeit

39
00:02:41,120 --> 00:02:44,120
Das ist echt nicht normal gewesen

40
00:02:44,120 --> 00:02:50,120
Da ist das was ich hier vor mich hin laber, nix dagegen

41
00:02:50,120 --> 00:02:53,120
Keckweight, Keckhyperweight

42
00:03:02,120 --> 00:03:05,120
Also jetzt wo da wieder ein paar Leute da sind

43
00:03:05,120 --> 00:03:08,120
Wobei ich warte nochmal bis das Stream richtig angelaufen ist

44
00:03:08,120 --> 00:03:11,120
Kann ich euch erzählen warum ich eben wegpuste

45
00:03:11,120 --> 00:03:14,120
Ganz einfach

46
00:03:14,120 --> 00:03:17,120
Moment, erstmal den Controller anschließen, lull

47
00:03:17,120 --> 00:03:20,120
Ja sieht echt so aus

48
00:03:20,120 --> 00:03:23,120
Also warum ich vor eineinhalb Stunden einfach off gegangen bin

49
00:03:23,120 --> 00:03:26,120
Ich hab vergessen, dass ich verabredet war

50
00:03:26,120 --> 00:03:29,120
Ah, geht das Kabel nochmal rein heute

51
00:03:40,120 --> 00:03:43,120
Reset

52
00:03:43,120 --> 00:03:46,120
Connecting Wifi

53
00:03:46,120 --> 00:03:49,120
Alles klar, passt

54
00:03:49,120 --> 00:03:52,120
Gut, also jetzt

55
00:03:52,120 --> 00:03:55,120
Genau, also wo stehe ich, wo bin ich stehen geblieben

56
00:03:55,120 --> 00:03:58,120
Also warum ich weg war, ich war mit meinem Nachbar verabredet, wir wollten Reifen tauschen

57
00:03:58,120 --> 00:04:01,120
Also Reifenwechsel, das geht zu zweit halt viel easier

58
00:04:01,120 --> 00:04:04,120
Das hab ich komplett vergessen

59
00:04:04,120 --> 00:04:07,120
PP-Steer, doch hatten wir

60
00:04:07,120 --> 00:04:10,120
Hatten wir

61
00:04:10,120 --> 00:04:13,120
Haben die das entfernt was ich hatte

62
00:04:13,120 --> 00:04:16,120
Doch, Monka, Monkas-Steer haben wir

63
00:04:20,120 --> 00:04:23,120
Ich wusste noch, dass ich das hinzugefügt hab

64
00:04:23,120 --> 00:04:26,120
Ja

65
00:04:35,120 --> 00:04:38,120
Wieso geht da für Autocomplete nicht, doch bei mir hat's funktioniert

66
00:04:38,120 --> 00:04:41,120
Sonst ich hab einfach Doppelpunkt Steer eingegeben, da hat er's gefunden

67
00:04:41,120 --> 00:04:44,120
Weil

68
00:04:44,120 --> 00:04:47,120
Ansonsten hätte ich das doch jetzt auch nicht entdeckt

69
00:04:47,120 --> 00:04:50,120
Auch vielleicht sind die Emotes minimal zu groß

70
00:04:50,120 --> 00:04:53,120
Ihr wurdet ok-champed

71
00:04:57,120 --> 00:05:00,120
Echt nicht?

72
00:05:00,120 --> 00:05:03,120
Guck mal, sogar hier

73
00:05:03,120 --> 00:05:06,120
Sogar hier Autocompleted, ohne dass ich eingeloggt bin

74
00:05:06,120 --> 00:05:09,120
Und kleingeschrieben auch

75
00:05:09,120 --> 00:05:12,120
Das ist FFZ

76
00:05:12,120 --> 00:05:15,120
Ist das FZ

77
00:05:15,120 --> 00:05:18,120
Ja, vielleicht liegt's da dran

78
00:05:18,120 --> 00:05:21,120
Also ich bin ja hin und hergerissen

79
00:05:21,120 --> 00:05:24,120
Also FFZ ist ja eigentlich

80
00:05:24,120 --> 00:05:27,120
Find ich der schönere Plugin, aber ich find die

81
00:05:27,120 --> 00:05:30,120
Die Policy da teilweise doof, dass sie Emotes löschen

82
00:05:30,120 --> 00:05:33,120
Wobei bei der Twitch-TV hat auch Emotes gelöscht

83
00:05:33,120 --> 00:05:36,120
Scheiß drauf, ja

84
00:05:36,120 --> 00:05:39,120
Who cares? Toss

85
00:05:39,120 --> 00:05:42,120
Was Toss ist, fliegt halt raus, so ist das halt auf Twitch

86
00:05:45,120 --> 00:05:48,120
Ja Leute, also, wo sind wir stehen geblieben?

87
00:05:48,120 --> 00:05:51,120
Ich versuch das jetzt nochmal ganz kurz zu

88
00:05:51,120 --> 00:05:54,120
Zu erklären, wo wir stehen geblieben sind

89
00:05:54,120 --> 00:05:57,120
Wir bauen immer noch, also weil der Patrick gerade gesagt hat, es dauert schon 10 Streams

90
00:05:57,120 --> 00:06:00,120
Ich hab ja eigentlich außer in einem Stream noch gar nichts gemacht

91
00:06:00,120 --> 00:06:03,120
Vorher bin ich einfach easy instant off gegangen, weil ich Reifen wechseln musste

92
00:06:03,120 --> 00:06:06,120
Also, ich hab so ein paar Sensoren

93
00:06:06,120 --> 00:06:09,120
Und davon hab ich einem Kühlschrank liegen

94
00:06:09,120 --> 00:06:12,120
Und den will ich auslesen, dass ich erkenne, ob meine Kühlschrank hier offen ist

95
00:06:12,120 --> 00:06:15,120
Oder ob die Temperatur steigt, ja genau, so viel

96
00:06:15,120 --> 00:06:18,120
Das ist der Hintergrund dazu

97
00:06:18,120 --> 00:06:21,120
Dazu hab ich hier so ein Board

98
00:06:27,120 --> 00:06:30,120
Reifenwechselchamp, ja

99
00:06:30,120 --> 00:06:33,120
Dann hab ich hier so ein Board und darauf läuft das Ganze

100
00:06:33,120 --> 00:06:36,120
Wir haben das selbst programmiert und der Trick dabei ist

101
00:06:36,120 --> 00:06:39,120
Ich lese das rein passiv aus, also ich frag den Sensor nicht ab

102
00:06:39,120 --> 00:06:42,120
Sondern der Sensor schickt alle 30 Sekunden Daten und ich frag das

103
00:06:42,120 --> 00:06:45,120
Also ich lese das einfach aus, was der schickt, d.h. das beeinflusst null die Batterie

104
00:06:45,120 --> 00:06:48,120
Und ich frag alle 5 Stunden

105
00:06:48,120 --> 00:06:51,120
Alle 5 Stunden

106
00:06:51,120 --> 00:06:54,120
Frag ich die Batterie ab

107
00:06:54,120 --> 00:06:57,120
Wer sich schon immer mal gefragt hat

108
00:06:57,120 --> 00:07:00,120
Wie viel 5 Stunden in Microseconds sind

109
00:07:00,120 --> 00:07:03,120
Der weiß es jetzt

110
00:07:03,120 --> 00:07:06,120
Das sind 18, ok warte, warte, warte, Sekunde, Sekunde

111
00:07:06,120 --> 00:07:09,120
Kann es hier bloß so was eigentlich?

112
00:07:09,120 --> 00:07:12,120
Kann das das?

113
00:07:12,120 --> 00:07:15,120
Nee, kann es nicht, oder? Vielleicht mit Komma?

114
00:07:15,120 --> 00:07:32,120
Das wäre ja auch zu schön, wenn die sowas könnten

115
00:07:32,120 --> 00:07:35,120
Also das sind was? 18 Milliarden?

116
00:07:35,120 --> 00:07:38,120
18 Milliarden Microsekunden

117
00:07:38,120 --> 00:07:41,120
Wenn dann mit Komma

118
00:07:41,120 --> 00:07:50,120
Nee, nee, nee, 1000er Trendzeichen ist ein Punkt

119
00:07:50,120 --> 00:07:54,120
Wobei das ist ja Kokona

120
00:07:54,120 --> 00:07:58,120
Also in C Sharp gibt es das?

121
00:07:58,120 --> 00:08:03,120
Separator?

122
00:08:03,120 --> 00:08:10,120
Ach ist das Kokona oben das Ding?

123
00:08:10,120 --> 00:08:14,120
Also man kann nämlich in

124
00:08:14,120 --> 00:08:18,120
Man kann nämlich in Dortnet mittlerweile die Sachen so schreiben

125
00:08:18,120 --> 00:08:21,120
Aber ich glaube nicht, dass man das so schreiben muss

126
00:08:21,120 --> 00:08:27,120
Was ist das überhaupt? Patrick, was für ein komisches? Ach das ist ein Single Quote, ne?

127
00:08:27,120 --> 00:08:30,120
Ja, aber das wird nicht funktionieren

128
00:08:30,120 --> 00:08:35,120
Wenn das funktioniert, dann kecke ich eine Runde

129
00:08:35,120 --> 00:08:38,120
Wait a minute

130
00:08:38,120 --> 00:08:41,120
Wait a minute

131
00:08:49,120 --> 00:08:51,120
Ernsthaft?

132
00:08:51,120 --> 00:08:54,120
Fuck, das geht

133
00:08:54,120 --> 00:08:59,120
Ok Leute, ich hab zum ersten Mal in meinem Leben, ihr werdet es nicht glauben

134
00:08:59,120 --> 00:09:06,120
Ich hab was gefunden an C++, was ich nicht total kacke finde

135
00:09:06,120 --> 00:09:12,120
Die haben sich ja mal was dabei gedacht

136
00:09:12,120 --> 00:09:18,120
Ich wusste das auch nicht

137
00:09:18,120 --> 00:09:25,120
Mal gucken wie das Feature heißt

138
00:09:25,120 --> 00:09:29,120
Tatsächlich seit 2014 geht das schon

139
00:09:29,120 --> 00:09:32,120
Das ist ja mal

140
00:09:32,120 --> 00:09:39,120
Die erste, ok ne das stimmt nicht, es ist die zweite Sache, die ich an C++ ganz gut finde

141
00:09:39,120 --> 00:09:43,120
Das erste, was ich an C++ ganz gut finde, dass man

142
00:09:43,120 --> 00:09:46,120
Compile Time String Längen checken kann

143
00:09:46,120 --> 00:09:53,120
Also wenn ich beispielsweise eine Methode hab, wo ich sag hey, mein

144
00:09:53,120 --> 00:09:57,120
Mein Name darf nur maximal 15 Zeichen lang sein

145
00:09:57,120 --> 00:10:01,120
Dann kann ich das quasi zur Compile Zeit checken lassen, das ist auch ganz nice

146
00:10:01,120 --> 00:10:06,120
Aber ansonsten habe ich immer nichts gefunden, was ich geil finde an C++

147
00:10:06,120 --> 00:10:11,120
Gibt es wahrscheinlich auch einfach nix

148
00:10:11,120 --> 00:10:14,120
Ja

149
00:10:14,120 --> 00:10:17,120
By the way, ich hab mir überlegt, Leute, muss ich euch mal fragen

150
00:10:17,120 --> 00:10:21,120
Ich hab mir überlegt ein Video zu machen morgen über

151
00:10:21,120 --> 00:10:26,120
Was es sich lohnt, was man auf seinem, was man selbst, was ich daheim betreiben kann

152
00:10:26,120 --> 00:10:31,120
So an Software, was man selbst hosten kann und was ich da für sinnvoll halte

153
00:10:31,120 --> 00:10:36,120
Ich brauche ein bisschen reißerischen Titel, so der perfekte Heimserver oder irgendwie sowas

154
00:10:36,120 --> 00:10:38,120
Muss ich mir noch was überlegen

155
00:10:38,120 --> 00:10:41,120
Die Sache ist bloß die, ich hab keine Ahnung

156
00:10:41,120 --> 00:10:43,120
Ob die meisten Leute damit was anfangen können

157
00:10:43,120 --> 00:10:45,120
Weil bei den meisten Leuten ist nach

158
00:10:45,120 --> 00:10:49,120
Wir installieren einen Raspberry Pi mit einer Nextcloud ist fertig

159
00:10:49,120 --> 00:10:58,120
Mehr kriegen die nicht gebacken

160
00:10:58,120 --> 00:10:59,120
Ja

161
00:10:59,120 --> 00:11:02,120
Also die, die meisten Leute machen den Nass auf den Raspberry Pi oder sowas

162
00:11:02,120 --> 00:11:07,120
Wobei ein Raspberry Pi fürs Nass so eines der schlechtesten Geräte überhaupt ist

163
00:11:07,120 --> 00:11:11,120
Und

164
00:11:11,120 --> 00:11:14,120
Ohne Nextcloud und Nextcloud sackt halt, es ist halt

165
00:11:14,120 --> 00:11:17,120
Es ist halt nix dabei, was mir gefällt, ne

166
00:11:17,120 --> 00:11:19,120
Also doch, nix dabei

167
00:11:19,120 --> 00:11:22,120
So bei dem, was ich hab, was die Leute wahrscheinlich gefällt

168
00:11:22,120 --> 00:11:31,120
Ich finde, man kann schon durchaus die eine oder andere sinnvollen Sachen machen

169
00:11:31,120 --> 00:11:36,120
Also ich bin tatsächlich froh, dass ich mittlerweile gültige Zertifikate bei mir lokal habe

170
00:11:36,120 --> 00:11:43,120
Weil klar, das wird wahrscheinlich meistens kein Jucken, aber ich find gültige Zertifikate lokal bei mir echt nice

171
00:11:43,120 --> 00:11:49,120
Mein PXE Boot lokal ist auch ultra poggers

172
00:11:49,120 --> 00:11:55,120
Also da freu ich mich jedes mal, wenn ich PXE ne VM starten kann

173
00:11:55,120 --> 00:11:57,120
Meine, ähm

174
00:11:57,120 --> 00:12:01,120
Hardware Teile Verwaltung, wo ich weiß in welcher Schublade was liegt, find ich auch praktisch

175
00:12:01,120 --> 00:12:08,120
Zehn Gründe, warum jeder mindestens ein vollbestücktes 42er Airwreck zuhause haben sollte

176
00:12:08,120 --> 00:12:11,120
PXE lokal wird, wie, wie

177
00:12:11,120 --> 00:12:14,120
Du musst PXE lokal machen, wie willst du es denn sonst machen

178
00:12:14,120 --> 00:12:17,120
PXE as a service, sowas gibt's glaub ich noch nicht

179
00:12:17,120 --> 00:12:21,120
Wobei, wobei, Max, man weiß ja nie

180
00:12:21,120 --> 00:12:25,120
Wisst zwar nicht, wie das gehen soll, aber

181
00:12:25,120 --> 00:12:29,120
Achso daheim, das ist total einfach daheim

182
00:12:29,120 --> 00:12:33,120
Du nimmst einfach net boot, x, y, z

183
00:12:33,120 --> 00:12:38,120
Du nimmst, du nimmst den Container

184
00:12:38,120 --> 00:12:41,120
Und startest den und es war's

185
00:12:41,120 --> 00:12:46,120
Du kannst jetzt irgendeine x beliebigen Rechner booten oder VM booten

186
00:12:46,120 --> 00:12:49,120
Und du kannst installieren, was du willst und live CD booten, was du willst

187
00:12:49,120 --> 00:12:53,120
Das ist echt praktisch und im Prinzip kein Admin Aufwand wirklich

188
00:12:53,120 --> 00:12:55,120
Ja, ich bin wieder am Start, ich bin wieder am Start

189
00:12:55,120 --> 00:12:59,120
Ich musste Reifen wechseln gehen, ich muss Monka, Moment

190
00:12:59,120 --> 00:13:12,120
Monkastier muss ich machen

191
00:13:12,120 --> 00:13:17,120
Ja, kannst du, habe ich aber net gemacht, weil so ziemlich alles dabei ist, was ich brauche

192
00:13:17,120 --> 00:13:21,120
Was du machen kannst ist, du kannst in so einem Minimal Environment booten

193
00:13:21,120 --> 00:13:24,120
Und von dort an weiter booten, wenn du irgendwie ein ISO Link hast

194
00:13:24,120 --> 00:13:33,120
Ich finde es praktisch, zumal es kaum Aufwand ist

195
00:13:33,120 --> 00:13:37,120
Ich finde es enorm praktisch, dass ich auch alle möglichen Live CDs und so am Start habe

196
00:13:37,120 --> 00:13:39,120
Einfach eine VM starten und gut ist

197
00:13:39,120 --> 00:13:42,120
Ich finde es ganz praktisch

198
00:13:42,120 --> 00:13:44,120
Gut, ich meine so, sag mal so

199
00:13:44,120 --> 00:13:47,120
Home Assistant Installer oder so ist nicht dabei

200
00:13:47,120 --> 00:13:51,120
Also ein paar Sachen wären schon nice zum Testen, aber wie oft installierst du das

201
00:13:51,120 --> 00:13:54,120
Ah, das habe ich vermiert

202
00:13:54,120 --> 00:13:59,120
Test System und Live System und gut ist

203
00:13:59,120 --> 00:14:04,120
Was ein Lüfter verliert, Öl?

204
00:14:04,120 --> 00:14:20,120
Ich wusste gar nicht, dass die Öl verlieren können

205
00:14:20,120 --> 00:14:22,120
Na, mit Netboot geht das

206
00:14:22,120 --> 00:14:26,120
Netboot ist ja das coole dran, dass die, die haben quasi so ein mini PXE Environment

207
00:14:26,120 --> 00:14:29,120
Und wenn du da drüber startest, kannst du alles mögliche auswählen

208
00:14:29,120 --> 00:14:32,120
Unter anderem in, in, du kannst in irgendeinen Crub booten

209
00:14:32,120 --> 00:14:34,120
Und von dort irgendwie weitere ISOs booten übers Netzwerk

210
00:14:34,120 --> 00:14:37,120
Und so ganz grad abgedrehtes Zeug benutze ich im Prinzip eigentlich nie

211
00:14:37,120 --> 00:14:42,120
Aber ich weiß, dass es geht

212
00:14:42,120 --> 00:14:45,120
Hey Max, ich hätte Lust in Richtung DevOps zu gehen

213
00:14:45,120 --> 00:14:47,120
Hast du vielleicht Tipps, was ich alles drauf haben sollte?

214
00:14:47,120 --> 00:14:48,120
Ich mache aktuell Ausbildungen zu Physi

215
00:14:48,120 --> 00:14:51,120
In welchem Bereich machst du aktuell eine Ausbildung?

216
00:14:51,120 --> 00:14:53,120
Also sprich, was machst du denn so?

217
00:14:53,120 --> 00:14:57,120
Ja, wenn du jetzt beispielsweise den ganzen Tag Druckerpatronen taust

218
00:14:57,120 --> 00:15:01,120
Ist es schwierig, sich mit irgendwelchen Clouds zu beschäftigen?

219
00:15:01,120 --> 00:15:03,120
So in welchem Bereich bist du denn gerade?

220
00:15:03,120 --> 00:15:05,120
Mein Physi, ich würde mal ehrlich sagen

221
00:15:05,120 --> 00:15:08,120
Fachinformatiker, Systemintegration ist, ist, ist

222
00:15:08,120 --> 00:15:12,120
Ich weiß nicht, ob es einen Beruf gibt, der vielfältiger ist von dem, wo man am Endeffekt landen kann

223
00:15:12,120 --> 00:15:16,120
Und das, was man im Endeffekt machen könnte, ja

224
00:15:16,120 --> 00:15:20,120
Also, wie unterschiedlich das ist, je nachdem, wo man landet

225
00:15:20,120 --> 00:15:24,120
Skalierung in drei Monaten, huge subscription, massive big brain sub

226
00:15:31,120 --> 00:15:34,120
Ich meine, es gibt so ein paar Basics, Sachen, die sich immer lohnen zu lernen

227
00:15:34,120 --> 00:15:48,120
Das würde mich erstmal interessieren, was du so gerade machst

228
00:15:48,120 --> 00:16:08,120
Na ja, dann schieß mal los, dann sag ich dir auch was zu

229
00:16:08,120 --> 00:16:10,120
Wie viele PCs besitzt du?

230
00:16:10,120 --> 00:16:14,120
Du meinst welche, die ich aktiv benutze?

231
00:16:14,120 --> 00:16:18,120
Die ich theoretischen Einzelteilen hier noch habe

232
00:16:18,120 --> 00:16:20,120
Ich finde Finish nice

233
00:16:20,120 --> 00:16:27,120
Das ist halt was, wo du privat nicht wirklich Anwendungszweck für hast, für Terraform

234
00:16:27,120 --> 00:16:29,120
Ja, da ist er wieder, richtig

235
00:16:29,120 --> 00:16:41,120
Ja, ich musste, ich musste hier, ich musste folgendes machen

236
00:16:41,120 --> 00:16:48,120
Heute ist Tanzverbot, ich weiß

237
00:16:48,120 --> 00:16:53,120
Ich bin in einem Verlag tätig und mach da User Support

238
00:16:53,120 --> 00:16:55,120
MonkaS

239
00:16:55,120 --> 00:16:57,120
Okay, vielleicht gefällts dir, gefällts dir?

240
00:16:57,120 --> 00:16:58,120
Gefällt dir User Support?

241
00:16:58,120 --> 00:17:00,120
Nur so

242
00:17:00,120 --> 00:17:01,120
Jetzt Interesse halber

243
00:17:01,120 --> 00:17:04,120
Ich finde User Support ist der größte Scheiß überhaupt

244
00:17:04,120 --> 00:17:10,120
Das ist, ich glaube, das ist Mario Sunshine Musik

245
00:17:10,120 --> 00:17:13,120
Okay, ich mach da User Support aber auch Serververwaltung

246
00:17:13,120 --> 00:17:15,120
Leider kein Docker Kubernetes und auch Cloud

247
00:17:15,120 --> 00:17:18,120
Also, okay, also wenn du sagst, du hast beispielsweise auf der Arbeit

248
00:17:18,120 --> 00:17:20,120
Da bist gar nicht in dem Bereich

249
00:17:20,120 --> 00:17:25,120
Und du suchst auch was, wo du später vielleicht was von hast, wenn du den Arbeitgeber wechselst oder so

250
00:17:25,120 --> 00:17:30,120
Also, eine Sache, die prinzipiell immer gut ankommt, ist Automatisierung aller Art

251
00:17:30,120 --> 00:17:36,120
Sei es sowas wie Ansible oder Puppet

252
00:17:36,120 --> 00:17:38,120
Puppet ist ein bisschen oldschooligere Variante

253
00:17:38,120 --> 00:17:43,120
Server-Automatisierung oder generell, wie nennt sich das so cool heutzutage?

254
00:17:43,120 --> 00:17:45,120
Lifecycle-Management

255
00:17:45,120 --> 00:17:51,120
Ja, aber ich bleib mal bei System- oder Server-Automatisierung

256
00:17:51,120 --> 00:17:52,120
Das ist auf jeden Fall sinnvoll

257
00:17:52,120 --> 00:17:58,120
Das ist sowohl sinnvoll, wenn du Cloud-Geschichten machst als auch wenn man viel Lokal hat

258
00:17:58,120 --> 00:18:00,120
Wobei man ja auch mittlerweile nicht mal Lokal sagt

259
00:18:00,120 --> 00:18:04,120
Also Leute, die richtig coolen Cloud-Natives

260
00:18:04,120 --> 00:18:07,120
Die sagen nicht mehr Lokal, die sagen On-Premise

261
00:18:07,120 --> 00:18:13,120
Weil Cloud ist ja mittlerweile schon Standard bei denen im Kopf

262
00:18:13,120 --> 00:18:17,120
Und deswegen, alles was nicht Cloud ist, muss man explizit als On-Premise erzählen

263
00:18:17,120 --> 00:18:19,120
Und wer dann noch cooler ist

264
00:18:19,120 --> 00:18:25,120
Wer noch nen Tick cooler ist als die oberkrassen Cloud-Native Leute

265
00:18:25,120 --> 00:18:28,120
Die sagen nicht On-Premises oder On-Premise

266
00:18:28,120 --> 00:18:30,120
Die sagen On-Prem

267
00:18:30,120 --> 00:18:34,120
Weil On-Prem so klingt, als hat man das schon 30 Millionen mal gesagt

268
00:18:34,120 --> 00:18:39,120
Und indem man das abkürzt, ist man eigentlich noch ne Ecke cooler

269
00:18:42,120 --> 00:18:46,120
Lokal ist für mich Lokal bei einem am Standort

270
00:18:46,120 --> 00:18:48,120
Jetzt nicht bei sich auf dem Host oder sonst wo

271
00:18:48,120 --> 00:18:51,120
Lokal-Räumlich-Lokal

272
00:18:51,120 --> 00:18:53,120
Sagt man nicht mehr

273
00:18:53,120 --> 00:18:57,120
Früher hat man das umgeschrieben mit Lokal im eigenen Rechenzentrum

274
00:18:57,120 --> 00:18:59,120
Offline, wie auch immer

275
00:18:59,120 --> 00:19:05,120
Wenn du was Richtung Ansible Server Automatisierung kannst

276
00:19:05,120 --> 00:19:11,120
Dann ist das prinzipiell für alles nützlich

277
00:19:11,120 --> 00:19:13,120
Wie gesagt, Puppet gibt es auch

278
00:19:13,120 --> 00:19:15,120
Bei uns auf der Arbeit ist viel Puppet

279
00:19:15,120 --> 00:19:17,120
Aber ich persönlich finde Ansible viel schöner

280
00:19:19,120 --> 00:19:21,120
Also habe ich auch im Stream mal ein bisschen gelernt

281
00:19:21,120 --> 00:19:23,120
So, und die Sache ist die

282
00:19:23,120 --> 00:19:25,120
Da hast du überall was von

283
00:19:25,120 --> 00:19:31,120
Und das ist eindeutig ne Sache, was in Richtung

284
00:19:31,120 --> 00:19:33,120
So in diesen DevOps-Bereich fällt

285
00:19:33,120 --> 00:19:37,120
Das ist nicht mehr so die Hardcore-Hackerman

286
00:19:37,120 --> 00:19:40,120
Ich sitze vorm Terminal und tippe den ganzen nach kryptische Dinge ein

287
00:19:40,120 --> 00:19:43,120
Sondern du machst Sachen reproduzierbar, automatisierbar

288
00:19:43,120 --> 00:19:46,120
Das ist eindeutig was in diesen DevOps-Bereich reinfällt

289
00:19:46,120 --> 00:19:50,120
Dann solltest du dir Build-Tools angucken

290
00:19:50,120 --> 00:19:54,120
Wir machen mal so ne Textdatei

291
00:19:54,120 --> 00:19:58,120
Weil das wird öfters mal gefragt

292
00:20:02,120 --> 00:20:07,120
Also das erste was man sich angucken kann ist

293
00:20:07,120 --> 00:20:09,120
Automatisierung

294
00:20:09,120 --> 00:20:11,120
Zum Beispiel so was wie Ansible oder Puppet

295
00:20:11,120 --> 00:20:13,120
Oder Chef gibt es da noch

296
00:20:13,120 --> 00:20:15,120
Oder so was

297
00:20:15,120 --> 00:20:20,120
Naja, Terraform passt nicht so wirklich

298
00:20:20,120 --> 00:20:24,120
Terraform ist eher ein Infrastruktur-Provisioning-System

299
00:20:24,120 --> 00:20:26,120
So was in der Richtung

300
00:20:26,120 --> 00:20:28,120
Also das ist auf jeden Fall eine sinnvolle Geschichte

301
00:20:28,120 --> 00:20:30,120
Build-Tools ist das nächste

302
00:20:30,120 --> 00:20:32,120
Weil schon einmal was von Jenkins geschrieben hat

303
00:20:32,120 --> 00:20:35,120
Build-Tools ist das nächste, was man sich mal angucken sollte

304
00:20:35,120 --> 00:20:37,120
Wenn man sich für diesen Bereich interessiert

305
00:20:37,120 --> 00:20:41,120
Also Jenkins ist die Oldschool-Variante

306
00:20:41,120 --> 00:20:46,120
So was wie GitHub Actions ist zurzeit auch relativ angesagt

307
00:20:46,120 --> 00:20:48,120
Oder Azure

308
00:20:48,120 --> 00:20:50,120
Wobei das will ich nicht empfehlen

309
00:20:50,120 --> 00:20:52,120
Ich finde das suckt

310
00:20:52,120 --> 00:20:56,120
Diese Azure DevOps-Geschichte gefällt mir persönlich überhaupt nicht

311
00:20:56,120 --> 00:20:59,120
Ich finde GitHub Actions ist eine nice Geschichte

312
00:20:59,120 --> 00:21:03,120
Genau Circle, Drone hast du da noch

313
00:21:03,120 --> 00:21:06,120
Circle, sonst was

314
00:21:06,120 --> 00:21:08,120
Ich mag es nicht

315
00:21:08,120 --> 00:21:09,120
Ich weiß nicht

316
00:21:09,120 --> 00:21:11,120
Ich mag es nicht

317
00:21:11,120 --> 00:21:13,120
Man kann das verwenden, aber schön finde ich es nicht

318
00:21:13,120 --> 00:21:15,120
Genau

319
00:21:15,120 --> 00:21:18,120
Das nächste ist Versionsverwaltung

320
00:21:18,120 --> 00:21:21,120
Da gibt es eigentlich nur Shit zurzeit

321
00:21:21,120 --> 00:21:26,120
Also mehr gibt es da nicht

322
00:21:26,120 --> 00:21:31,120
Im Prinzip sollte man sich dann dazu noch angucken

323
00:21:31,120 --> 00:21:37,120
Man sollte klarkommen dann mit Frontends

324
00:21:37,120 --> 00:21:44,120
So was, GitHub, GitLab, Bitbucket

325
00:21:44,120 --> 00:21:48,120
Was man lokal verwendet

326
00:21:48,120 --> 00:21:50,120
So was in der Richtung sollte man sich angucken

327
00:21:50,120 --> 00:21:52,120
Nein, SVN schreibe ich da nicht mehr

328
00:21:52,120 --> 00:21:55,120
Nein, CVS

329
00:21:55,120 --> 00:21:57,120
Nein, CVS

330
00:21:57,120 --> 00:22:00,120
CVS

331
00:22:00,120 --> 00:22:02,120
CVS sind die Tabellen

332
00:22:02,120 --> 00:22:04,120
CVS

333
00:22:04,120 --> 00:22:06,120
Nein, hör mal plus auf

334
00:22:06,120 --> 00:22:09,120
Shit ist das einzige was man sich angucken muss

335
00:22:09,120 --> 00:22:13,120
Shit im Jahr 2021

336
00:22:13,120 --> 00:22:16,120
Rest kannst du vergessen

337
00:22:16,120 --> 00:22:19,120
Inklusive was man sich auch noch angucken

338
00:22:19,120 --> 00:22:24,120
Deployment und development workflows

339
00:22:24,120 --> 00:22:28,120
Also sowas wie Branches

340
00:22:28,120 --> 00:22:32,120
Feature requests

341
00:22:32,120 --> 00:22:36,120
Roadmap DevOps

342
00:22:36,120 --> 00:22:38,120
Echt, das ist eine leiste Map

343
00:22:38,120 --> 00:22:40,120
Da sage ich jetzt mal was zu

344
00:22:40,120 --> 00:22:43,120
Da reakte ich jetzt mal drauf

345
00:22:43,120 --> 00:22:46,120
Huge React Content

346
00:22:46,120 --> 00:22:48,120
Now we have YouTube Channel

347
00:22:48,120 --> 00:22:50,120
Excellent

348
00:22:50,120 --> 00:22:52,120
Roadmap

349
00:22:52,120 --> 00:22:54,120
Also was sagt denn die Roadmap?

350
00:22:54,120 --> 00:22:56,120
Zeigt mal her

351
00:22:56,120 --> 00:22:58,120
DevOps

352
00:22:58,120 --> 00:23:01,120
Feature requests hatte ich schon drin

353
00:23:01,120 --> 00:23:03,120
Okay, es kommt aufs gleiche raus

354
00:23:03,120 --> 00:23:04,120
Also was haben wir denn hier?

355
00:23:04,120 --> 00:23:05,120
Learn a programming language

356
00:23:05,120 --> 00:23:07,120
Das ist tatsächlich kein schlechter Ratschlag

357
00:23:07,120 --> 00:23:09,120
Wobei man ehrlich sagen muss

358
00:23:09,120 --> 00:23:13,120
Man kann, wenn man da richtig hardcore Hacker-Man-Admin ist

359
00:23:13,120 --> 00:23:15,120
Man kann durchaus was in diese Richtung machen

360
00:23:15,120 --> 00:23:18,120
Ohne jetzt der super gute Programmierer zu sein

361
00:23:18,120 --> 00:23:19,120
Aber mal ganz im Ernst

362
00:23:19,120 --> 00:23:22,120
Man kommt heutzutage eigentlich nicht mehr drum herum

363
00:23:22,120 --> 00:23:24,120
Es gibt ganz viele Admins, die da immer noch

364
00:23:24,120 --> 00:23:27,120
Vor allem so die richtigen oldschool Admins

365
00:23:27,120 --> 00:23:30,120
Die so mit Programmieren überhaupt nichts anfangen können

366
00:23:30,120 --> 00:23:34,120
Wo ein Bash-Script aus 10 Zeilen das höchste der Gefühle ist

367
00:23:34,120 --> 00:23:36,120
Ich habe euch auch die Story von der Arbeit erzählt

368
00:23:36,120 --> 00:23:39,120
Wo einer von mir

369
00:23:39,120 --> 00:23:40,120
Wo einer gesagt hat

370
00:23:40,120 --> 00:23:43,120
Ich weiß gar nicht wie detailliert ich euch das erzählt habe

371
00:23:43,120 --> 00:23:44,120
Wo einer gesagt hat

372
00:23:44,120 --> 00:23:48,120
Ich soll in einem Key-Value-Store so einen Jason

373
00:23:48,120 --> 00:23:49,120
Nein, kein Jason

374
00:23:49,120 --> 00:23:53,120
Ich soll einen Setting in so einem Key-Value-Store anpassen

375
00:23:53,120 --> 00:23:55,120
Habe ich euch das erzählt?

376
00:23:55,120 --> 00:23:56,120
Und wo der dann meinte

377
00:23:56,120 --> 00:23:58,120
Ich soll zwei Werte reinschreiben

378
00:23:58,120 --> 00:24:00,120
Also der hat einen Ticketpaus aufgemacht

379
00:24:00,120 --> 00:24:01,120
Und meinte

380
00:24:01,120 --> 00:24:03,120
Er braucht jetzt unter einem Key

381
00:24:03,120 --> 00:24:05,120
Braucht er zwei Werte

382
00:24:05,120 --> 00:24:06,120
Und da habe ich ihn gefragt

383
00:24:06,120 --> 00:24:07,120
Ja, okay

384
00:24:07,120 --> 00:24:08,120
Wie will er das haben?

385
00:24:08,120 --> 00:24:10,120
Wie will er das machen mit zwei Werten?

386
00:24:10,120 --> 00:24:12,120
Ich könnte ihm einen Jason-Array reinschreiben

387
00:24:12,120 --> 00:24:14,120
Ich mache ihm einen Jason-Array rein

388
00:24:14,120 --> 00:24:16,120
Und Wert 1, Wert 2

389
00:24:16,120 --> 00:24:17,120
Und dann meinte er

390
00:24:17,120 --> 00:24:18,120
Nein, das geht nicht

391
00:24:18,120 --> 00:24:20,120
Er möchte zwei Werte haben

392
00:24:20,120 --> 00:24:21,120
Aber das ist ein Key-Value-Store

393
00:24:21,120 --> 00:24:23,120
Das heißt nicht sonst Key-Value

394
00:24:23,120 --> 00:24:24,120
Das ist 1 zu 1

395
00:24:24,120 --> 00:24:25,120
Da gibt es keine zwei Werte

396
00:24:25,120 --> 00:24:27,120
Es gibt einfach nur einen Key und ein Value

397
00:24:27,120 --> 00:24:29,120
Und wenn er mehrere Sachen drinstehen haben will

398
00:24:29,120 --> 00:24:31,120
Dann braucht er irgendwas

399
00:24:31,120 --> 00:24:33,120
Was er, irgendeinen Text in er passt

400
00:24:33,120 --> 00:24:35,120
Und am Ende bekommt er zwei Values raus

401
00:24:35,120 --> 00:24:36,120
Es geht nicht anders

402
00:24:36,120 --> 00:24:37,120
Und er hat darauf bestanden

403
00:24:37,120 --> 00:24:38,120
Nein, nein, nein

404
00:24:38,120 --> 00:24:39,120
Ich möchte dieses Kommando ausführen

405
00:24:39,120 --> 00:24:41,120
Und ich will zwei Werte rausbekommen

406
00:24:45,120 --> 00:24:47,120
Ja, also du hast schon

407
00:24:47,120 --> 00:24:49,120
Da nicht so die Profis teilweise am Start

408
00:24:49,120 --> 00:24:51,120
Und das sind halt Leute

409
00:24:51,120 --> 00:24:53,120
Die angeblich Entwickler sind bei uns

410
00:24:53,120 --> 00:24:56,120
Und schon von Entwicklersachen keine Ahnung haben

411
00:24:56,120 --> 00:24:58,120
Also das ist ja eigentlich

412
00:24:58,120 --> 00:25:00,120
Der Ernstfall

413
00:25:00,120 --> 00:25:02,120
Also das sollte nicht so sein

414
00:25:02,120 --> 00:25:04,120
Zumindest man kann

415
00:25:04,120 --> 00:25:06,120
Sicherlich die ein oder anderen Sachen machen

416
00:25:08,120 --> 00:25:10,120
Aber

417
00:25:10,120 --> 00:25:12,120
Es lohnt sich auf jeden Fall

418
00:25:12,120 --> 00:25:14,120
Eine Programmiersprache zu lernen

419
00:25:16,120 --> 00:25:18,120
Es ist fast egal welche

420
00:25:18,120 --> 00:25:20,120
Es würde sich halt anbieten

421
00:25:20,120 --> 00:25:22,120
Irgendwas, was zur Zeit angesagt ist

422
00:25:22,120 --> 00:25:24,120
Also zum Beispiel

423
00:25:24,120 --> 00:25:26,120
Die Option hier

424
00:25:26,120 --> 00:25:28,120
Die Option hier

425
00:25:28,120 --> 00:25:30,120
Kann ich ja mal was zu sagen

426
00:25:30,120 --> 00:25:32,120
Ich persönlich bin der Meinung

427
00:25:32,120 --> 00:25:34,120
Das hat er hier übrigens gar nicht drinstehen

428
00:25:34,120 --> 00:25:36,120
Ich persönlich bin der Meinung

429
00:25:36,120 --> 00:25:38,120
Die beste Einstiegsprogrammiersprache

430
00:25:38,120 --> 00:25:40,120
Ist

431
00:25:40,120 --> 00:25:42,120
JavaScript

432
00:25:42,120 --> 00:25:44,120
Aber nicht mit Node.js

433
00:25:44,120 --> 00:25:46,120
Sondern mit ganz klassisch CSS, HTML

434
00:25:46,120 --> 00:25:48,120
Wenn man nicht genau weiß

435
00:25:48,120 --> 00:25:50,120
Was man machen möchte, wohlgemerkt

436
00:25:50,120 --> 00:25:52,120
Wenn man schon weiß, was man machen will

437
00:25:52,120 --> 00:25:54,120
So was wie Python raussuchen

438
00:25:54,120 --> 00:25:56,120
C++

439
00:26:08,120 --> 00:26:10,120
Also da bin ich nicht mit einverstanden

440
00:26:10,120 --> 00:26:12,120
Mit den Vorschlägen

441
00:26:12,120 --> 00:26:14,120
Von dieser Seite

442
00:26:14,120 --> 00:26:16,120
Da bin ich nicht zu

443
00:26:16,120 --> 00:26:18,120
Da bin ich nicht mit einverstanden

444
00:26:18,120 --> 00:26:20,120
Also ich würde sagen, wenn man keine Ahnung hat, was man machen will

445
00:26:20,120 --> 00:26:22,120
Dann

446
00:26:22,120 --> 00:26:24,120
Nimmt man sich

447
00:26:24,120 --> 00:26:26,120
JavaScript, nimmt man sich einen Browser

448
00:26:26,120 --> 00:26:28,120
JavaScript, CSS, HTML

449
00:26:28,120 --> 00:26:30,120
Denn am Frontend kommt man nicht vorbei

450
00:26:30,120 --> 00:26:32,120
So viel hat er hier schon mal gar nicht drinstehen

451
00:26:32,120 --> 00:26:34,120
Das heißt, ich muss meine

452
00:26:34,120 --> 00:26:36,120
Frontend

453
00:26:36,120 --> 00:26:38,120
Zeugs bisschen anschauen

454
00:26:38,120 --> 00:26:40,120
CSS, HTML, JS

455
00:26:40,120 --> 00:26:42,120
Ich gebe ihm recht

456
00:26:42,120 --> 00:26:44,120
Dass man Programmier

457
00:26:44,120 --> 00:26:46,120
Sprache lernen

458
00:26:46,120 --> 00:26:48,120
Da gebe ich ihm recht

459
00:26:48,120 --> 00:26:50,120
Aber wie gesagt, das würde ich nehmen

460
00:26:50,120 --> 00:26:52,120
Ich würde sagen

461
00:26:52,120 --> 00:26:54,120
CSS, HTML, JavaScript

462
00:26:54,120 --> 00:26:56,120
Wenn man keine Ahnung hat, was man genau machen will

463
00:26:56,120 --> 00:26:58,120
Einfach weil ich der Meinung bin

464
00:26:58,120 --> 00:27:00,120
Es ist am motivierendsten

465
00:27:00,120 --> 00:27:02,120
Man sieht

466
00:27:02,120 --> 00:27:04,120
Was passiert

467
00:27:04,120 --> 00:27:06,120
Und das sieht man mit JavaScript, CSS, HTML am besten

468
00:27:06,120 --> 00:27:08,120
Und

469
00:27:08,120 --> 00:27:10,120
Man bleibt dann dementsprechend auch dran

470
00:27:10,120 --> 00:27:12,120
Weil ich glaube, es kennt jeder

471
00:27:12,120 --> 00:27:14,120
Der angefangen hat eine Programmiersprache zu lernen

472
00:27:14,120 --> 00:27:16,120
Und

473
00:27:16,120 --> 00:27:18,120
Dann sich denkt

474
00:27:18,120 --> 00:27:20,120
Okay, was mache ich denn damit jetzt

475
00:27:20,120 --> 00:27:22,120
Und mit CSS, JavaScript, HTML

476
00:27:22,120 --> 00:27:24,120
Hast du erstmal relativ endlose Möglichkeiten

477
00:27:24,120 --> 00:27:26,120
Was zu machen, weil jeder denkt

478
00:27:26,120 --> 00:27:28,120
In Webseiten heutzutage

479
00:27:28,120 --> 00:27:30,120
Bei den anderen Sachen wird es dann

480
00:27:30,120 --> 00:27:32,120
Schwierig, wenn du keinen konkreten Anwendungsfall schon mal hast

481
00:27:32,120 --> 00:27:34,120
Und deswegen finde ich

482
00:27:34,120 --> 00:27:36,120
Das motiviert

483
00:27:36,120 --> 00:27:38,120
Einfach am meisten dran zu bleiben

484
00:27:38,120 --> 00:27:40,120
Und dazu kommt

485
00:27:40,120 --> 00:27:42,120
Man kommt an Frontend Sachen heutzutage nicht vorbei

486
00:27:42,120 --> 00:27:44,120
Man kleine Webinterfaces

487
00:27:44,120 --> 00:27:46,120
Bauen musst du heute wirklich an jede Ecke

488
00:27:46,120 --> 00:27:48,120
Und auch Frontend Sachen

489
00:27:48,120 --> 00:27:50,120
Verstehen musst du, da kommst du eigentlich nicht dran vorbei

490
00:27:50,120 --> 00:27:52,120
So, das nächste ist

491
00:27:52,120 --> 00:27:54,120
Was man auf jeden Fall wissen muss

492
00:27:54,120 --> 00:27:56,120
Das mache ich nochmal davor

493
00:27:58,120 --> 00:28:00,120
Linux lernen und

494
00:28:02,120 --> 00:28:04,120
Kommandozeile

495
00:28:04,120 --> 00:28:10,120
Das ist wichtig

496
00:28:14,120 --> 00:28:16,120
SSH

497
00:28:16,120 --> 00:28:18,120
Ja

498
00:28:18,120 --> 00:28:20,120
So zu Sachen

499
00:28:20,120 --> 00:28:22,120
DevOps

500
00:28:22,120 --> 00:28:24,120
Da könnte ich

501
00:28:24,120 --> 00:28:26,120
Ohne Scheiß, da könnte ich doch ein Video drüber machen

502
00:28:26,120 --> 00:28:28,120
Oder

503
00:28:28,120 --> 00:28:30,120
How to DevOps

504
00:28:30,120 --> 00:28:32,120
Ich weiß nicht, ob es jemand großartig interessiert

505
00:28:32,120 --> 00:28:34,120
Aber das ist eigentlich eine gute Idee

506
00:28:34,120 --> 00:28:36,120
Oder

507
00:28:36,120 --> 00:28:38,120
So

508
00:28:38,120 --> 00:28:40,120
Telnet

509
00:28:40,120 --> 00:28:42,120
Ja

510
00:28:42,120 --> 00:28:44,120
Wusstet ihr, dass Windows standardmäßig kein Telnet kann

511
00:28:46,120 --> 00:28:48,120
Achso, ja stimmt, ich hab's nachher erzählt

512
00:28:48,120 --> 00:28:50,120
Windows kann standardmäßig kein Telnet

513
00:28:50,120 --> 00:28:52,120
Man muss

514
00:28:52,120 --> 00:28:54,120
Man muss sagen

515
00:28:54,120 --> 00:28:56,120
Man muss sagen

516
00:28:56,120 --> 00:28:58,120
Turn Windows Features on und off

517
00:28:58,120 --> 00:29:02,120
Telnet klein, Häkchen und okay

518
00:29:08,120 --> 00:29:10,120
Ich hab keine Ahnung, ob nicht

519
00:29:10,120 --> 00:29:12,120
PowerShell was dabei hat

520
00:29:12,120 --> 00:29:14,120
Machen wir mal mit der Geschichte weiter

521
00:29:14,120 --> 00:29:16,120
Gibt's andere Roadmaps

522
00:29:16,120 --> 00:29:18,120
One and Backend DevOps

523
00:29:18,120 --> 00:29:20,120
Also

524
00:29:20,120 --> 00:29:22,120
Okay, ich muss noch was zum Thema

525
00:29:22,120 --> 00:29:24,120
Programmiersprachen sagen

526
00:29:24,120 --> 00:29:26,120
Ich bin kein

527
00:29:26,120 --> 00:29:28,120
Ich bin kein großartiger Frontend Pro

528
00:29:30,120 --> 00:29:32,120
Ich kann, ich muss halt sagen

529
00:29:34,120 --> 00:29:36,120
Ich kann alles halbwegs

530
00:29:36,120 --> 00:29:38,120
Also alles jetzt jetzt

531
00:29:38,120 --> 00:29:40,120
Übertrieben sein, ich kann relativ

532
00:29:40,120 --> 00:29:42,120
Breitflächig Dinge, ja

533
00:29:42,120 --> 00:29:44,120
Von Linux zu ein bisschen Low Level

534
00:29:44,120 --> 00:29:46,120
Programmieren, zu Frontend Sachen

535
00:29:46,120 --> 00:29:48,120
Alle möglichen, bisschen Elektronik

536
00:29:48,120 --> 00:29:50,120
Für alle möglichen Sachen

537
00:29:50,120 --> 00:29:52,120
Und was ich halt mache ist

538
00:29:52,120 --> 00:29:54,120
Warum ich mich mit manchen Themen auch relativ gut

539
00:29:54,120 --> 00:29:56,120
auskenne

540
00:29:56,120 --> 00:29:58,120
Ist, wenn ich ein Problem hab

541
00:29:58,120 --> 00:30:00,120
Was mich persönlich interessiert

542
00:30:00,120 --> 00:30:02,120
Dann mach ich da auch ein halbes Jahr dran rum

543
00:30:02,120 --> 00:30:04,120
Bis das Scheiß funktioniert und ich es kapiert hab

544
00:30:04,120 --> 00:30:06,120
Deswegen kenn ich mich mittlerweile auch ganz gut

545
00:30:06,120 --> 00:30:08,120
Mit WebRTC und sowas zum Beispiel aus

546
00:30:08,120 --> 00:30:10,120
Weil ich diese

547
00:30:10,120 --> 00:30:12,120
Weil ich Kamera Streaming Software programmieren wollte

548
00:30:16,120 --> 00:30:18,120
T-shaped DevOps, genau

549
00:30:18,120 --> 00:30:20,120
Aber ich muss jetzt noch was zum Thema

550
00:30:20,120 --> 00:30:22,120
Programmiersprachen sagen

551
00:30:22,120 --> 00:30:24,120
Am Einstieg, hab ich ja schon gesagt

552
00:30:24,120 --> 00:30:26,120
So, und von den Programmiersprachen

553
00:30:26,120 --> 00:30:28,120
Die hier sonst noch drinnen stehen muss ich sagen

554
00:30:28,120 --> 00:30:30,120
JavaScript, klar haben wir schon abgehackt, Node.js

555
00:30:30,120 --> 00:30:32,120
Ruby ist persönlich

556
00:30:32,120 --> 00:30:34,120
Neben C-Sharp meine

557
00:30:34,120 --> 00:30:36,120
Mit Abstand Lieblingsprogrammiersprache

558
00:30:36,120 --> 00:30:38,120
C-Sharp und Ruby, gefallen mir persönlich am besten

559
00:30:38,120 --> 00:30:40,120
Allerdings das Problem an Ruby ist

560
00:30:40,120 --> 00:30:42,120
Ich glaub Ruby benutzt

561
00:30:42,120 --> 00:30:44,120
Keiner mehr

562
00:30:44,120 --> 00:30:46,120
Ruby Projekte auf GitHub sind

563
00:30:46,120 --> 00:30:48,120
Zum größten Teil dead, Ausnahmen bestätigen

564
00:30:48,120 --> 00:30:50,120
Die Regel

565
00:30:50,120 --> 00:30:52,120
Ja

566
00:30:52,120 --> 00:30:54,120
Was die Natra zum Beispiel macht

567
00:30:54,120 --> 00:30:56,120
Letztes Commit

568
00:30:56,120 --> 00:30:58,120
Ok, vor 19 Tagen größere Projekte sind noch aktiv

569
00:30:58,120 --> 00:31:00,120
Aber, also viele Ruby Projekte

570
00:31:00,120 --> 00:31:02,120
Sind dead

571
00:31:02,120 --> 00:31:04,120
Siehst du auch an GitHub

572
00:31:04,120 --> 00:31:06,120
Und es gibt wenig neue Ruby Projekte

573
00:31:06,120 --> 00:31:08,120
Ruby ist eine super Sprache, es kam letztens auch erst Version 3

574
00:31:08,120 --> 00:31:10,120
Raus, Flixcoder, 5 Monate, Dankeschön für den Sub

575
00:31:10,120 --> 00:31:12,120
Hups, komplett falsche Emotes

576
00:31:12,120 --> 00:31:14,120
Lul

577
00:31:16,120 --> 00:31:18,120
Monka, Corona, Dankeschön für den Sub

578
00:31:18,120 --> 00:31:20,120
Aber Ruby ist ziemlich dead

579
00:31:20,120 --> 00:31:22,120
Es kam letztens Version 3 raus

580
00:31:22,120 --> 00:31:24,120
Die angeblich deutlich schneller ist

581
00:31:24,120 --> 00:31:26,120
Benchmarks bestätigen das

582
00:31:26,120 --> 00:31:28,120
Ruby 3 ist wohl auch eine ganze Ecke schneller

583
00:31:28,120 --> 00:31:30,120
Aber natürlich bei weitem hier nicht in diesen Region

584
00:31:30,120 --> 00:31:32,120
Und das Problem ist

585
00:31:32,120 --> 00:31:34,120
Was man mit Ruby hat

586
00:31:34,120 --> 00:31:36,120
So cool Ruby ist, außer dir

587
00:31:36,120 --> 00:31:38,120
Wenn du dann Ruby kannst, kann keiner Ruby

588
00:31:38,120 --> 00:31:40,120
Und macht keiner was in Ruby

589
00:31:40,120 --> 00:31:42,120
Was halt ziemlich sackt, früher war Ruby so eine

590
00:31:42,120 --> 00:31:44,120
So die richtig krasse

591
00:31:44,120 --> 00:31:46,120
Rockstar Developer Language

592
00:31:46,120 --> 00:31:48,120
Wo alle, die sich geil fanden, Ruby gebastelt haben

593
00:31:48,120 --> 00:31:50,120
Wir können uns Ruby 3 mal angucken

594
00:31:50,120 --> 00:31:52,120
Ja

595
00:31:52,120 --> 00:31:54,120
Ja Patrick, das kopiere ich mal

596
00:31:54,120 --> 00:31:56,120
Eins zu eins da so rein

597
00:31:56,120 --> 00:31:58,120
Ich würde

598
00:31:58,120 --> 00:32:00,120
Noch ein paar Sachen vielleicht

599
00:32:00,120 --> 00:32:02,120
Bisschen

600
00:32:02,120 --> 00:32:04,120
Bisschen seht, hast schon ein bisschen AWK

601
00:32:04,120 --> 00:32:06,120
Vielleicht noch

602
00:32:10,120 --> 00:32:12,120
Ja, Zeugs

603
00:32:12,120 --> 00:32:14,120
We get

604
00:32:14,120 --> 00:32:16,120
Die üblichen Sachen

605
00:32:16,120 --> 00:32:18,120
Die üblichen Sachen

606
00:32:18,120 --> 00:32:20,120
Und deswegen könnt ihr Ruby eigentlich

607
00:32:20,120 --> 00:32:22,120
Vergessen 2021

608
00:32:22,120 --> 00:32:24,120
To go komme ich gleich, Flixcoder

609
00:32:24,120 --> 00:32:26,120
Also deswegen

610
00:32:26,120 --> 00:32:28,120
Ruby ist eine coole Sprache

611
00:32:28,120 --> 00:32:30,120
Aber Ruby ist eigentlich dead und

612
00:32:30,120 --> 00:32:32,120
Ja

613
00:32:32,120 --> 00:32:34,120
Tot, irgendwie heutzutage

614
00:32:34,120 --> 00:32:36,120
Die nächste beste Option ist Pyzen

615
00:32:36,120 --> 00:32:38,120
Ganz ohne Scheiß

616
00:32:38,120 --> 00:32:40,120
Wenn ihr

617
00:32:40,120 --> 00:32:42,120
Wenn

618
00:32:42,120 --> 00:32:44,120
Wenn euch das nicht so liegt

619
00:32:44,120 --> 00:32:46,120
Mit JavaScript, HTML, CSS, Frontend

620
00:32:46,120 --> 00:32:48,120
Mäßig, dann fangt mit Pyzen an

621
00:32:48,120 --> 00:32:50,120
Das ist

622
00:32:50,120 --> 00:32:52,120
Würde ich mal sagen, vom Hype her

623
00:32:52,120 --> 00:32:54,120
Und von den

624
00:32:54,120 --> 00:32:56,120
Zukunftsträchtigen Technologien und sowas

625
00:32:56,120 --> 00:32:58,120
Ist das die Sprache Nummer eins zur Zeit

626
00:32:58,120 --> 00:33:00,120
Guckt euch, guckt euch auf GitHub um

627
00:33:00,120 --> 00:33:02,120
Die ganzen

628
00:33:02,120 --> 00:33:04,120
90% der ganzen Machine Learning

629
00:33:04,120 --> 00:33:06,120
Sachen, doch ich war oft

630
00:33:06,120 --> 00:33:08,120
Ich musste Reifen wechseln

631
00:33:08,120 --> 00:33:10,120
Wieder da, das hat auch nicht so ewig gedauert

632
00:33:12,120 --> 00:33:14,120
Genau, Twitter

633
00:33:14,120 --> 00:33:16,120
Twitter war Ruby on Rails, Twitch weiß ich nicht

634
00:33:16,120 --> 00:33:18,120
Twitter war Ruby on Rails, aber Twitter

635
00:33:18,120 --> 00:33:20,120
Ist schon ganz lange auf Java

636
00:33:20,120 --> 00:33:22,120
Ich weiß nicht, was die geritten hat

637
00:33:22,120 --> 00:33:24,120
Ich glaube, ist das nicht sogar Clojure

638
00:33:24,120 --> 00:33:26,120
Oder so mittlerweile?

639
00:33:26,120 --> 00:33:28,120
Ne nicht Clojure, wie heißt das andere?

640
00:33:28,120 --> 00:33:30,120
Scala? Ach was weiß ich

641
00:33:30,120 --> 00:33:32,120
Vielleicht haben sie auch schon wieder alles geändert

642
00:33:34,120 --> 00:33:36,120
Genau und

643
00:33:36,120 --> 00:33:38,120
ShitHub

644
00:33:38,120 --> 00:33:40,120
War auch mal Ruby, glaube ich

645
00:33:40,120 --> 00:33:42,120
Immer noch, ja?

646
00:33:42,120 --> 00:33:44,120
Ich glaube, GitHub ist immer noch Ruby

647
00:33:46,120 --> 00:33:48,120
Der Grund, warum man in Unis Java lernen

648
00:33:48,120 --> 00:33:50,120
Ist, weil es so viele Leute gibt, die Java können

649
00:33:56,120 --> 00:33:58,120
Ja, also ich würde sagen

650
00:33:58,120 --> 00:34:00,120
Das können wir uns auch gleich angucken

651
00:34:00,120 --> 00:34:02,120
Also ich würde sagen, dass Pyzen aktuell

652
00:34:02,120 --> 00:34:04,120
Die angesagteste Programmiersprache ist

653
00:34:04,120 --> 00:34:06,120
Neben JavaScript

654
00:34:06,120 --> 00:34:08,120
So die richtig prestigeträchtigen

655
00:34:08,120 --> 00:34:10,120
Zukunftsrechtlichen Sachen sind teilweise

656
00:34:10,120 --> 00:34:12,120
Oftmals in Pyzen, also das ist auf jeden Fall

657
00:34:12,120 --> 00:34:14,120
Nicht verkehrt

658
00:34:14,120 --> 00:34:16,120
Das zu lernen, das ist eine super erste Programmiersprache

659
00:34:16,120 --> 00:34:18,120
Ich persönlich mag ein bisschen mehr

660
00:34:18,120 --> 00:34:20,120
Die ganze JavaScript, CSS Geschichte

661
00:34:20,120 --> 00:34:22,120
Weil ich es motivierender finde zum Anstiegen

662
00:34:22,120 --> 00:34:24,120
Beides kann man nicht verkehrt machen

663
00:34:24,120 --> 00:34:26,120
Und ganz ehrlich, man sollte

664
00:34:26,120 --> 00:34:28,120
Wenn man das eine Weile macht

665
00:34:28,120 --> 00:34:30,120
Man sollte beides schon mal benutzt haben

666
00:34:30,120 --> 00:34:32,120
Ich muss sagen

667
00:34:32,120 --> 00:34:34,120
Ich mache nicht oft was in Pyzen, aber jedes Mal

668
00:34:34,120 --> 00:34:36,120
Wenn ich es mache, muss ich sagen, finde ich das unglaublich angenehm

669
00:34:36,120 --> 00:34:38,120
Ich habe zum Beispiel einen

670
00:34:38,120 --> 00:34:40,120
Converter programmiert auf der Arbeit von

671
00:34:40,120 --> 00:34:42,120
Moment, jetzt haltet euch

672
00:34:42,120 --> 00:34:44,120
Jetzt haltet euch fest

673
00:34:44,120 --> 00:34:46,120
Von Windows DHCP Settings

674
00:34:46,120 --> 00:34:48,120
Zu Linux DHCP Settings

675
00:34:52,120 --> 00:34:54,120
Das war ein bisschen eklig, aber

676
00:34:54,120 --> 00:34:56,120
Ja, Mock als Tier, genau

677
00:34:56,120 --> 00:34:58,120
Aber es hat gut funktioniert

678
00:34:58,120 --> 00:35:00,120
Und ich muss sagen, ich war echt begeistert davon

679
00:35:00,120 --> 00:35:02,120
Weil wieder

680
00:35:02,120 --> 00:35:04,120
Wie viel super Sachen eingebaut sind

681
00:35:04,120 --> 00:35:06,120
Du hast in Pyzen standardmäßig

682
00:35:06,120 --> 00:35:08,120
Einen Standardlib eingebaut

683
00:35:08,120 --> 00:35:10,120
Einen CSV-Parser

684
00:35:10,120 --> 00:35:12,120
Für Tabellen

685
00:35:12,120 --> 00:35:14,120
Du hast standardmäßig einen IP-Calculator

686
00:35:14,120 --> 00:35:16,120
Weil der Windows

687
00:35:16,120 --> 00:35:18,120
Wusstet ihr, dass der Windows DHCP Server

688
00:35:18,120 --> 00:35:20,120
Verbackt ist

689
00:35:20,120 --> 00:35:22,120
Der Windows DHCP Server erlaubt es

690
00:35:22,120 --> 00:35:24,120
Dass du als Start-IP

691
00:35:24,120 --> 00:35:26,120
Das Netz nimmst, anstatt

692
00:35:26,120 --> 00:35:28,120
Die erste IP im Netz

693
00:35:28,120 --> 00:35:30,120
Also der ICS zumindest erlaubt das nicht

694
00:35:30,120 --> 00:35:32,120
Das heißt, ich musste

695
00:35:32,120 --> 00:35:34,120
Jedes Mal

696
00:35:34,120 --> 00:35:36,120
Wenn ich diese Config gepasst habe

697
00:35:36,120 --> 00:35:38,120
Musste ich jedes Mal zu dem Netz

698
00:35:38,120 --> 00:35:40,120
Eins dazurechnen, weil die halt

699
00:35:40,120 --> 00:35:42,120
Ein Windows Feature

700
00:35:42,120 --> 00:35:44,120
Nennen wir es mal

701
00:35:44,120 --> 00:35:46,120
Ausgenutzt haben, die Typen, die den

702
00:35:46,120 --> 00:35:48,120
Windows DHCP betreuen bei uns

703
00:35:48,120 --> 00:35:50,120
Und da war ich echt froh, dass es einen IP-Calculator

704
00:35:50,120 --> 00:35:52,120
Gibt in Pyzen, in der Standardlib

705
00:35:52,120 --> 00:35:54,120
Dem habe ich das Subnetz gegeben

706
00:35:54,120 --> 00:35:56,120
Das Netz, abgesagt IP plus eins

707
00:35:56,120 --> 00:35:58,120
Und hat das ausgerechnet, also war echt eine super

708
00:35:58,120 --> 00:36:00,120
Geschichte. Jedes Mal, wenn ich damit was mache

709
00:36:00,120 --> 00:36:02,120
Finde ich es eigentlich gut

710
00:36:02,120 --> 00:36:04,120
So, auch eine super Sprache

711
00:36:04,120 --> 00:36:06,120
Zum Einstieg. Früher habe ich gesagt, Ruby

712
00:36:06,120 --> 00:36:08,120
Ich habe sogar mal ein Video gemacht zu Ruby

713
00:36:08,120 --> 00:36:10,120
Mit, warum das eine gute Programmiersprache ist

714
00:36:10,120 --> 00:36:12,120
Ich finde es mittlerweile, es ist eine geile

715
00:36:12,120 --> 00:36:14,120
Programmiersprache, aber es ist einfach dead

716
00:36:16,120 --> 00:36:18,120
Also, sehr gut zum Einstieg, auch gut zum

717
00:36:18,120 --> 00:36:20,120
Einstieg, aber im Browser nicht unbedingt als NodeShare

718
00:36:20,120 --> 00:36:22,120
Man soll es sich aber mit Node auf jeden Fall mal auseinandersetzen

719
00:36:22,120 --> 00:36:24,120
Kommen wir mal zu der Seite

720
00:36:24,120 --> 00:36:26,120
Damit bin ich nicht wirklich einverstanden

721
00:36:26,120 --> 00:36:28,120
Muss ich sagen

722
00:36:28,120 --> 00:36:30,120
Damit bin ich nicht wirklich einverstanden

723
00:36:30,120 --> 00:36:32,120
Ähm, also

724
00:36:32,120 --> 00:36:34,120
Mit C++ fangen wir mal

725
00:36:34,120 --> 00:36:36,120
Gar nicht an

726
00:36:36,120 --> 00:36:38,120
C++ ist einfach Schrott

727
00:36:38,120 --> 00:36:40,120
Und definitiv nicht das, was sich

728
00:36:40,120 --> 00:36:42,120
Jemand zum Einstieg geben sollte, es sei denn

729
00:36:42,120 --> 00:36:44,120
Du möchtest ihn abschrecken vor

730
00:36:44,120 --> 00:36:46,120
Live, dass er nie wieder was mit zu tun haben will

731
00:36:46,120 --> 00:36:48,120
Man könnte fast denken, Stadia ist in

732
00:36:48,120 --> 00:36:50,120
C++ programmiert oder so

733
00:36:50,120 --> 00:36:52,120
Also, C++ auf gar keinen Fall

734
00:36:52,120 --> 00:36:54,120
Zum Einstieg, gerade auch nicht für die

735
00:36:54,120 --> 00:36:56,120
DevOps-Geschichte, da ist es da

736
00:36:56,120 --> 00:36:58,120
Wenig interessant die Sprache

737
00:36:58,120 --> 00:37:00,120
Eigentlich für

738
00:37:00,120 --> 00:37:02,120
C genauso wesig, wobei

739
00:37:02,120 --> 00:37:04,120
C eine schöne Sprache ist, C++ nicht

740
00:37:04,120 --> 00:37:06,120
Aber gerade im DevOps-Programm

741
00:37:06,120 --> 00:37:08,120
Ist C jetzt auch nicht so das

742
00:37:08,120 --> 00:37:10,120
So das Ding, was du oft siehst

743
00:37:10,120 --> 00:37:12,120
Da ist Python auf jeden Fall

744
00:37:12,120 --> 00:37:14,120
Die bessere Variante

745
00:37:14,120 --> 00:37:16,120
Rust ist auch eine coole Sprache

746
00:37:16,120 --> 00:37:18,120
Aber Rust ist

747
00:37:18,120 --> 00:37:20,120
In diesem Bereich jetzt auch nicht so wahnsinnig

748
00:37:20,120 --> 00:37:22,120
relevant

749
00:37:22,120 --> 00:37:24,120
Was ich machen würde, ist auf jeden Fall

750
00:37:24,120 --> 00:37:26,120
Go

751
00:37:26,120 --> 00:37:28,120
Ja, Rust

752
00:37:28,120 --> 00:37:30,120
Ist only, only, only for

753
00:37:30,120 --> 00:37:32,120
Elevenhead, Leute

754
00:37:32,120 --> 00:37:34,120
Ja, das stimmt, also

755
00:37:34,120 --> 00:37:36,120
Rust ist wirklich

756
00:37:36,120 --> 00:37:38,120
Die Syntax ist

757
00:37:38,120 --> 00:37:40,120
Zweckt mir, ich finde die Syntax jetzt auch nicht so

758
00:37:40,120 --> 00:37:42,120
Wahnsinnig klar

759
00:37:42,120 --> 00:37:44,120
Vor allem, wenn du dann irgendwie

760
00:37:44,120 --> 00:37:46,120
Lifetime spezifizieren musst, von wie was

761
00:37:46,120 --> 00:37:48,120
Voneinander abhängt, also dass es, also

762
00:37:48,120 --> 00:37:50,120
Es ist wirklich expanding

763
00:37:50,120 --> 00:37:52,120
Gehirn, dass du das kannst

764
00:37:52,120 --> 00:37:54,120
Und in diesem Bereich jetzt auch gar nicht

765
00:37:54,120 --> 00:37:56,120
So wahnsinnig relevant

766
00:37:56,120 --> 00:37:58,120
Eigentlich

767
00:37:58,120 --> 00:38:00,120
Moment, wir unterbrechen mal kurz das

768
00:38:00,120 --> 00:38:02,120
Aktuelle Programm, um diese Frage hier zu beantworten

769
00:38:02,120 --> 00:38:04,120
Moin, hab hier noch zwei

770
00:38:04,120 --> 00:38:06,120
ESP

771
00:38:06,120 --> 00:38:08,120
32 rumliegen, mit einem will ich

772
00:38:08,120 --> 00:38:10,120
LED-Leist per WLAN ansteuern, dir mal

773
00:38:10,120 --> 00:38:12,120
Eine Idee, was man mit dem zweiten am Sinn voll zu anstellen kann

774
00:38:12,120 --> 00:38:14,120
Ja, noch mehr LEDs

775
00:38:14,120 --> 00:38:18,120
Also, komm, RGB kann man nicht genug haben

776
00:38:20,120 --> 00:38:22,120
LEDs, einfach noch mehr LEDs

777
00:38:22,120 --> 00:38:24,120
Wenn dir das erste

778
00:38:24,120 --> 00:38:26,120
Gefällt, dann mach einfach noch einen zweiten

779
00:38:26,120 --> 00:38:28,120
LED-Strip, easy

780
00:38:28,120 --> 00:38:30,120
Okay

781
00:38:30,120 --> 00:38:32,120
Also, die unteren Dinger bin ich kein Fan

782
00:38:32,120 --> 00:38:34,120
Gerade weil es um diese DevOps-Geschichten geht

783
00:38:34,120 --> 00:38:36,120
Die zwei coole Sprachen, C++

784
00:38:36,120 --> 00:38:38,120
Schrott, aber die zwei coole

785
00:38:38,120 --> 00:38:40,120
Sprachen, wir müssen übrigens gleich

786
00:38:40,120 --> 00:38:44,120
C++ machen, wo wir gerade dabei sind

787
00:38:44,120 --> 00:38:46,120
Paints-Champ

788
00:38:46,120 --> 00:38:48,120
So, Go

789
00:38:48,120 --> 00:38:50,120
Auf jeden Fall, Go ist eines der

790
00:38:50,120 --> 00:38:52,120
Wichtigsten Sprachen überhaupt im DevOps

791
00:38:52,120 --> 00:38:54,120
Und vor allem im Cloud-Unfeld

792
00:38:54,120 --> 00:38:56,120
90%

793
00:38:56,120 --> 00:38:58,120
70% der Tools

794
00:38:58,120 --> 00:39:00,120
Sei es das Kubernetes-Grammstab Terraform

795
00:39:00,120 --> 00:39:02,120
Auch und überall, wo du hinguckst und wo du

796
00:39:02,120 --> 00:39:04,120
Hinspuckst, triffst du auf Go

797
00:39:04,120 --> 00:39:06,120
Programme und Libraries

798
00:39:06,120 --> 00:39:08,120
Wenn es nicht in Go ist, dann ist es

799
00:39:08,120 --> 00:39:10,120
In Python oder in Node

800
00:39:10,120 --> 00:39:12,120
Im Prinzip gibt es diese drei Programmiersprachen dort

801
00:39:12,120 --> 00:39:14,120
Es ist entweder in Go

802
00:39:14,120 --> 00:39:16,120
Zum größten Teil ist es in Python

803
00:39:16,120 --> 00:39:18,120
Oder es ist vielleicht in Node

804
00:39:18,120 --> 00:39:20,120
So, damit habt ihr 99% der Sachen

805
00:39:20,120 --> 00:39:22,120
Die man in diesem Bereich so benutzt abgedeckt

806
00:39:22,120 --> 00:39:24,120
Node, Python, Go, vor allem Go

807
00:39:24,120 --> 00:39:26,120
Dazu muss ich sagen

808
00:39:26,120 --> 00:39:28,120
Go ist an sich

809
00:39:28,120 --> 00:39:30,120
Keine Sprache

810
00:39:30,120 --> 00:39:32,120
Die ich jetzt zu sehr flamen kann

811
00:39:32,120 --> 00:39:34,120
Go ist schon in Ordnung

812
00:39:34,120 --> 00:39:36,120
Ich habe die Kamera-Geschichte

813
00:39:36,120 --> 00:39:38,120
Ich habe diesen

814
00:39:38,120 --> 00:39:40,120
Kamera-Web-ATC-Streaming-Sache in Go gemacht

815
00:39:40,120 --> 00:39:42,120
Ich muss sagen

816
00:39:42,120 --> 00:39:44,120
Vielleicht liegt es daran, dass ich nicht so die wahnsinnige

817
00:39:44,120 --> 00:39:46,120
So die wirklich

818
00:39:46,120 --> 00:39:48,120
Jahrzehnte Erfahrung

819
00:39:48,120 --> 00:39:50,120
In Go jetzt habe, aber

820
00:39:50,120 --> 00:39:52,120
Es gibt ein paar Sachen

821
00:39:52,120 --> 00:39:54,120
Die mich an Go stören

822
00:39:54,120 --> 00:39:56,120
Das ist zum Beispiel

823
00:39:56,120 --> 00:39:58,120
Dass die Standard-Library irgendwie

824
00:39:58,120 --> 00:40:00,120
Bisschen wenig

825
00:40:00,120 --> 00:40:08,120
Drinnen hat

826
00:40:08,120 --> 00:40:10,120
Also

827
00:40:10,120 --> 00:40:12,120
Zum Beispiel

828
00:40:12,120 --> 00:40:14,120
Zum Beispiel

829
00:40:14,120 --> 00:40:16,120
Du hast

830
00:40:16,120 --> 00:40:18,120
Du hast in Go

831
00:40:18,120 --> 00:40:20,120
Hast du keine Möglichkeit

832
00:40:20,120 --> 00:40:22,120
Ja, Channels und das ganze Zeug

833
00:40:22,120 --> 00:40:24,120
Was Go so

834
00:40:24,120 --> 00:40:26,120
Eingeführt ist schon eine coole Sache

835
00:40:26,120 --> 00:40:28,120
Aber die Standard-Library ist ein bisschen

836
00:40:28,120 --> 00:40:30,120
Cluster heißt das glaube ich

837
00:40:30,120 --> 00:40:32,120
Also da fehlt ein bisschen was

838
00:40:32,120 --> 00:40:34,120
Termin noch geschafft, ja wir haben Reifen gewechselt

839
00:40:34,120 --> 00:40:36,120
Also zum Beispiel in der Standard-Library

840
00:40:36,120 --> 00:40:38,120
Du hast in Go

841
00:40:38,120 --> 00:40:40,120
3 Varianten

842
00:40:40,120 --> 00:40:42,120
Wie du Variablen zuweisen kannst

843
00:40:42,120 --> 00:40:44,120
Manchmal ist nicht so ganz klar

844
00:40:44,120 --> 00:40:46,120
Was Reference, was nicht

845
00:40:46,120 --> 00:40:48,120
Wo automatisch referenziert wird

846
00:40:48,120 --> 00:40:50,120
Wo du explizit sagen musst Reference

847
00:40:50,120 --> 00:40:52,120
Dann ist das

848
00:40:52,120 --> 00:40:54,120
Konzept mit Maps und

849
00:40:54,120 --> 00:40:56,120
Listen

850
00:40:56,120 --> 00:40:58,120
Ja

851
00:40:58,120 --> 00:41:00,120
Dass du

852
00:41:00,120 --> 00:41:02,120
Dass du beispielsweise

853
00:41:02,120 --> 00:41:04,120
Nicht filtern kannst

854
00:41:04,120 --> 00:41:06,120
Auf Listen und sowas

855
00:41:06,120 --> 00:41:08,120
Das ist ein bisschen roh

856
00:41:08,120 --> 00:41:10,120
Ja in Go

857
00:41:10,120 --> 00:41:12,120
Die Sprache an sich ist cool muss ich sagen

858
00:41:12,120 --> 00:41:14,120
Die ist auch relativ easy zu lesen

859
00:41:14,120 --> 00:41:16,120
Sieht erstmal ein bisschen gewöhnungsbedürftig aus

860
00:41:16,120 --> 00:41:18,120
Weil das ziemlich viele Sonderzeichen, komische Konstrukte hat

861
00:41:18,120 --> 00:41:20,120
Aber weiterhin nicht so schlimm wie C++

862
00:41:20,120 --> 00:41:22,120
Aber wenn man sich mal dran gewöhnt hat geht das eigentlich

863
00:41:22,120 --> 00:41:24,120
Wobei halt

864
00:41:24,120 --> 00:41:26,120
Go hat wie gesagt

865
00:41:26,120 --> 00:41:28,120
Also das größte was mich an Go

866
00:41:28,120 --> 00:41:30,120
Das die Standard-Library so wenig Sachen

867
00:41:30,120 --> 00:41:32,120
Dabei hat

868
00:41:32,120 --> 00:41:34,120
Dass die Go

869
00:41:34,120 --> 00:41:36,120
Maintainer der Meinung sind

870
00:41:36,120 --> 00:41:38,120
Manche Sachen

871
00:41:38,120 --> 00:41:40,120
Die einfach nur praktisch sind

872
00:41:40,120 --> 00:41:42,120
Wären nicht sinnvoll zum Beispiel du kannst

873
00:41:42,120 --> 00:41:44,120
In Go kannst du nicht sagen

874
00:41:44,120 --> 00:41:48,120
So was hier zum Beispiel

875
00:41:48,120 --> 00:41:50,120
Filter

876
00:41:50,120 --> 00:41:52,120
X keine Ahnung

877
00:41:52,120 --> 00:41:54,120
Wenn X größer 2 sowas

878
00:41:54,120 --> 00:41:56,120
Sowas kannst du in Go nicht sagen

879
00:41:56,120 --> 00:41:58,120
In Go musst du eine Schleife machen

880
00:41:58,120 --> 00:42:00,120
Die Go Leute sagen halt

881
00:42:00,120 --> 00:42:02,120
Ja weil Schleife viel einfacher zu lesen ist

882
00:42:04,120 --> 00:42:06,120
Ja wenn du nur C machst

883
00:42:06,120 --> 00:42:08,120
Dann ist ja kein Ding ist ja klar

884
00:42:08,120 --> 00:42:10,120
In C musst du erst halb GitHub installieren

885
00:42:10,120 --> 00:42:12,120
Oder alles selbst basteln

886
00:42:12,120 --> 00:42:14,120
Ne also

887
00:42:14,120 --> 00:42:16,120
Es fehlt mir ein bisschen was

888
00:42:16,120 --> 00:42:18,120
Dann ist manche Sachen

889
00:42:18,120 --> 00:42:20,120
Find ich in Go auch nicht so richtig gut durchdacht

890
00:42:20,120 --> 00:42:22,120
Wie gesagt

891
00:42:22,120 --> 00:42:24,120
Es gibt drei verschiedene Varianten

892
00:42:24,120 --> 00:42:26,120
Variablen zuzuweisen

893
00:42:26,120 --> 00:42:28,120
Die haben dieses Konzept mit Error Codes

894
00:42:28,120 --> 00:42:30,120
Die ich an sich eigentlich ganz gut finde

895
00:42:30,120 --> 00:42:32,120
Also Go hat ja keine Exeptions

896
00:42:32,120 --> 00:42:34,120
Aber Go hat Panic

897
00:42:34,120 --> 00:42:36,120
Was ja im Endeffekt doch

898
00:42:36,120 --> 00:42:38,120
Exeptions sind

899
00:42:38,120 --> 00:42:40,120
Also die machen eigentlich

900
00:42:40,120 --> 00:42:42,120
Alles zum größten Teil

901
00:42:42,120 --> 00:42:44,120
In Go über Error Codes

902
00:42:44,120 --> 00:42:46,120
Aber manchmal hast du dann doch

903
00:42:46,120 --> 00:42:50,120
Panic und Recover und solche Sachen

904
00:42:50,120 --> 00:42:52,120
Es ist ein bisschen undurchdacht

905
00:42:52,120 --> 00:42:54,120
Und was mir halt echt fehlt

906
00:42:54,120 --> 00:42:56,120
Ist Generics

907
00:42:56,120 --> 00:42:58,120
Generics ist eines der geilsten Dinger überhaupt

908
00:42:58,120 --> 00:43:00,120
Und das gibt es halt in Go nicht

909
00:43:00,120 --> 00:43:02,120
Der Cobalt Jebait Train

910
00:43:02,120 --> 00:43:04,120
Ist schon wieder am Start im Chat

911
00:43:08,120 --> 00:43:10,120
Ja Generics kommen angeblich schon

912
00:43:10,120 --> 00:43:12,120
Seit zwei Jahren bald glaube

913
00:43:12,120 --> 00:43:14,120
Aber ich hoffe die kriegen es bald hin

914
00:43:14,120 --> 00:43:16,120
Die Generics kommen immer bald in Go

915
00:43:16,120 --> 00:43:18,120
Aber ich hoffe sie kriegen es hin

916
00:43:18,120 --> 00:43:20,120
Das gibt Go auf jeden Fall einen richtig großen Boost

917
00:43:20,120 --> 00:43:22,120
Weil

918
00:43:22,120 --> 00:43:24,120
Sobald die Generics haben

919
00:43:24,120 --> 00:43:26,120
Kann man auch

920
00:43:26,120 --> 00:43:28,120
Ich will nicht sagen sowas wie Link bauen

921
00:43:28,120 --> 00:43:30,120
Aber sowas ähnliches

922
00:43:30,120 --> 00:43:32,120
Also sprich man kann Listen bauen

923
00:43:32,120 --> 00:43:34,120
Die für alle Datentypen gehen

924
00:43:34,120 --> 00:43:36,120
Mit Filter und Any

925
00:43:36,120 --> 00:43:38,120
Und All und Loops

926
00:43:38,120 --> 00:43:40,120
Und Wear und sonst was

927
00:43:40,120 --> 00:43:42,120
Alles was die Sache ein bisschen einfacher macht

928
00:43:42,120 --> 00:43:44,120
Also dann ist Go gut

929
00:43:44,120 --> 00:43:46,120
Vom Konzept her mag ich das

930
00:43:46,120 --> 00:43:48,120
So was ich jetzt hier auf jeden Fall noch rein nehmen würde

931
00:43:48,120 --> 00:43:50,120
Auch wenn ich kein Fan davon bin

932
00:43:50,120 --> 00:43:52,120
Was auf jeden Fall aber im Business Umfeld

933
00:43:52,120 --> 00:43:54,120
Nicht nur eine Option ist

934
00:43:54,120 --> 00:43:56,120
Sondern in vielen Umfeld fast schon muss

935
00:43:56,120 --> 00:43:58,120
Ist Java

936
00:43:58,120 --> 00:44:00,120
Also ich würde hier eindeutig Rust durch Java ersetzen

937
00:44:00,120 --> 00:44:02,120
Ihr wisst dass ich

938
00:44:02,120 --> 00:44:04,120
Kein Fan bin

939
00:44:04,120 --> 00:44:06,120
Was Java angeht

940
00:44:06,120 --> 00:44:08,120
Aber gerade im Business Umfeld

941
00:44:08,120 --> 00:44:10,120
Ist Java eines der Dinger schlechthin

942
00:44:10,120 --> 00:44:12,120
Und

943
00:44:12,120 --> 00:44:14,120
Mein persönlicher Fall ist ich würde

944
00:44:14,120 --> 00:44:16,120
Anstatt C++ ich würde C Sharp rein nehmen

945
00:44:16,120 --> 00:44:18,120
Das hat ja mit C++ gar nichts zu tun

946
00:44:18,120 --> 00:44:20,120
Die haben sich einfach nur am Namen orientiert

947
00:44:20,120 --> 00:44:22,120
Weil sie gedacht haben

948
00:44:22,120 --> 00:44:24,120
Das kommt den Leuten bekannter vor

949
00:44:24,120 --> 00:44:26,120
Aber C Sharp ist neben Ruby meine absolute Lieblingsprogrammiersprache

950
00:44:26,120 --> 00:44:28,120
Ruby leider

951
00:44:28,120 --> 00:44:30,120
Dead, aber seit Microsoft

952
00:44:30,120 --> 00:44:32,120
.NET open sourced hat

953
00:44:32,120 --> 00:44:34,120
Hat das Ding Fahrt aufgenommen

954
00:44:34,120 --> 00:44:36,120
Und geht ab wie sonst was

955
00:44:36,120 --> 00:44:38,120
Also C Sharp zu lernen

956
00:44:38,120 --> 00:44:40,120
Ist auf jeden Fall nicht verkehrt

957
00:44:40,120 --> 00:44:42,120
Und C Sharp ist finde ich

958
00:44:42,120 --> 00:44:44,120
Von allen Programmiersprachen

959
00:44:44,120 --> 00:44:46,120
Die hier stehen und die es so gibt

960
00:44:46,120 --> 00:44:48,120
Die universellste Programmiersprache die es gibt

961
00:44:48,120 --> 00:44:50,120
Du kannst in C Sharp

962
00:44:50,120 --> 00:44:52,120
Desktop Programme machen

963
00:44:52,120 --> 00:44:54,120
Server Programme

964
00:44:54,120 --> 00:44:56,120
Web

965
00:44:56,120 --> 00:44:58,120
Geschichten

966
00:44:58,120 --> 00:45:00,120
Mittlerweile läuft es sogar über WebAssembly im Browser

967
00:45:00,120 --> 00:45:02,120
Du kannst zum größten Teil

968
00:45:02,120 --> 00:45:04,120
Lowlevel Sachen machen

969
00:45:04,120 --> 00:45:06,120
Wenn auch nicht komplett

970
00:45:06,120 --> 00:45:08,120
Bootloader in C Sharp programmieren

971
00:45:08,120 --> 00:45:10,120
Aber das ist dann fast eigentlich das einzige

972
00:45:10,120 --> 00:45:12,120
Du kannst mit Unity Spieleentwicklung machen

973
00:45:12,120 --> 00:45:14,120
Du kannst im Prinzip

974
00:45:14,120 --> 00:45:16,120
Du kannst mittlerweile sogar relativ gut

975
00:45:16,120 --> 00:45:18,120
Selfcontent Programme machen

976
00:45:18,120 --> 00:45:20,120
Die sind zwar ein bisschen größer als hier so

977
00:45:20,120 --> 00:45:22,120
So ein Go, Rust oder C Programm

978
00:45:22,120 --> 00:45:24,120
Aber letztendlich ist es

979
00:45:24,120 --> 00:45:26,120
Wurscht wenn man nicht gerade von Microcontrollern

980
00:45:26,120 --> 00:45:28,120
Redet im Prinzip ist es wurscht

981
00:45:28,120 --> 00:45:30,120
Ob dein Programm 10 MB

982
00:45:30,120 --> 00:45:32,120
3 MB

983
00:45:32,120 --> 00:45:34,120
Oder 60 MB ist

984
00:45:34,120 --> 00:45:36,120
Das juckt nicht

985
00:45:36,120 --> 00:45:38,120
So also C Sharp ist auf jeden Fall

986
00:45:38,120 --> 00:45:40,120
Super Geschichte und du kannst wenn du C Sharp gut kannst

987
00:45:40,120 --> 00:45:42,120
Du kannst alles machen

988
00:45:42,120 --> 00:45:44,120
Es gibt eigentlich kein wirkliches

989
00:45:44,120 --> 00:45:46,120
Gebiet wo C Sharp

990
00:45:46,120 --> 00:45:48,120
Komplett versagt

991
00:45:48,120 --> 00:45:50,120
Man muss sagen es gibt einen Bereich

992
00:45:50,120 --> 00:45:52,120
Da ist es vielleicht nicht so

993
00:45:52,120 --> 00:45:54,120
Der absolute Wahnsinn

994
00:45:54,120 --> 00:45:56,120
Oder zwei Bereiche

995
00:45:56,120 --> 00:45:58,120
Das ist Cross-Plattform

996
00:45:58,120 --> 00:46:00,120
GUI Entwicklung Desktop

997
00:46:00,120 --> 00:46:02,120
Fokussiert GUI Entwicklung und

998
00:46:02,120 --> 00:46:04,120
Form-Mobile-Entwicklung

999
00:46:04,120 --> 00:46:06,120
Wobei man sagen muss das geht alles

1000
00:46:06,120 --> 00:46:08,120
Ich weiß das es dazu auch Lösungen gibt

1001
00:46:08,120 --> 00:46:10,120
Aber

1002
00:46:10,120 --> 00:46:12,120
Da würde ich jetzt vielleicht

1003
00:46:12,120 --> 00:46:14,120
Nicht unbedingt

1004
00:46:14,120 --> 00:46:16,120
Bevorzugen also wenn ich jetzt

1005
00:46:16,120 --> 00:46:18,120
Wenn einer zu mir kommt und sagt Max ich brauche eine

1006
00:46:18,120 --> 00:46:20,120
Mobile App die überall

1007
00:46:20,120 --> 00:46:22,120
Darauf läuft also Android und IOS

1008
00:46:22,120 --> 00:46:24,120
Ist ja im Prinzip

1009
00:46:24,120 --> 00:46:26,120
Es geht doch ich weiß Tomy

1010
00:46:26,120 --> 00:46:28,120
Es ist nicht so mein Fall

1011
00:46:28,120 --> 00:46:30,120
Ich muss auch sagen ich habe noch nicht viel mit gemacht

1012
00:46:30,120 --> 00:46:34,280
zu mir kommt und sagt ich brauche eine mobile app für ios und android dann würde ich entweder

1013
00:46:34,840 --> 00:46:41,120
ja na moment, warte mal, dann kommen wir zu flatter kommen wir gleich dann das erste was ich machen würde ist ich würde ohne scheiß ich

1014
00:46:41,120 --> 00:46:43,120
würde eine javascript anwendung machen

1015
00:46:44,520 --> 00:46:50,680
Typescript lernen ist auch sinnvoll danach ich würde eine javascript anwendung ich würde eine ionic anwendung machen wahrscheinlich

1016
00:46:52,840 --> 00:47:00,000
Weil das hat den vorteil du kannst eine webseite machen du kannst eine pwa machen und du kannst eine mobile app machen alles mehr

1017
00:47:00,000 --> 00:47:03,040
Oder weniger in einem schritt das ist einfach unschlagbar

1018
00:47:04,680 --> 00:47:07,400
Das nächste mal das nächste was ich machen würde ist

1019
00:47:08,640 --> 00:47:10,320
flatter

1020
00:47:10,320 --> 00:47:11,920
pwa

1021
00:47:11,920 --> 00:47:13,760
progressive web app

1022
00:47:13,760 --> 00:47:15,760
also quasi

1023
00:47:15,880 --> 00:47:17,880
das hier

1024
00:47:22,480 --> 00:47:26,600
Dass man apps quasi dass man webseiten als eigene app installieren kann

1025
00:47:26,600 --> 00:47:31,080
Geht mittlerweile auf dem desktop auch, aber mobile ist das eher so eine sache

1026
00:47:31,880 --> 00:47:34,360
Wird auch immer besser das support mobile dafür

1027
00:47:36,200 --> 00:47:43,800
Also ich ich würde auch nicht direkt direkt ionic nehmen ich habe nur gesagt ionic weil die haben ein unterprojekt von ionic wo du super

1028
00:47:44,200 --> 00:47:50,920
Beispielsweise in der vue js app wo du die super verpacken kannst in der native app ohne dass du was ändern musst großartig plus du hast die

1029
00:47:50,920 --> 00:47:54,680
Möglichkeit zusätzlich noch ein paar native sachen einzubinden wie gps und sowas

1030
00:47:54,680 --> 00:47:58,200
dass ich weiß dass das zu ionic gehört mit ionic selbst habe ich auch nichts gemacht

1031
00:47:59,000 --> 00:48:04,360
und das nächste ist wenn einer zu mir sagt max ich brauche eine app die

1032
00:48:05,160 --> 00:48:07,160
mobile und desktop läuft

1033
00:48:07,800 --> 00:48:09,800
Dann mache ich entweder die gleiche route

1034
00:48:10,520 --> 00:48:16,360
Oder ich versuche es mal mit flatter weil flatter ist für mobile entwicklung auf jeden fall absolut top tier

1035
00:48:17,960 --> 00:48:22,760
Und in zukunft wird das auf dem desktop auch immer besser

1036
00:48:22,760 --> 00:48:28,360
Werden mit flatter 2 haben sie angekündigt sie wollen auch vollgas geben auf dem desktop also ich denke mal

1037
00:48:28,680 --> 00:48:32,120
das flatter auf jeden fall wenn man noch mal zwei jahre warten

1038
00:48:32,680 --> 00:48:37,720
Eine wirklich super lösung ist für desktop apps und für mobile apps ist es jetzt ja auch schon

1039
00:48:41,320 --> 00:48:43,320
Bei firefox geht es aber nur um desktop

1040
00:48:44,120 --> 00:48:47,080
Ist da flatter ist da und da ist quasi

1041
00:48:47,720 --> 00:48:50,720
Ich ich sag mal übertrieben den javascript die auf dem desktop

1042
00:48:50,720 --> 00:48:57,120
Ich sag mal übertrieben den javascript dialekt ist es nicht ich weiß dass es kein javascript dialekt ist aber dat und javascript

1043
00:48:57,680 --> 00:48:59,680
dat ist so eine mischung aus

1044
00:48:59,840 --> 00:49:06,480
C sharp und javascript type script javascript c sharp so eine mischung mit mit ein bisschen swift dabei vielleicht noch

1045
00:49:07,920 --> 00:49:13,400
Maui muss man mal gucken was da rauskommt maui ist ja im prinzip sammarin mit bisschen zeug dabei

1046
00:49:14,200 --> 00:49:15,120
und

1047
00:49:15,120 --> 00:49:22,000
Gui gui ist eine sache das kriegt microsoft nicht richtig geschissen da ist dazu langsam abgefahren die kriegen es ja die kriegen es ja

1048
00:49:22,000 --> 00:49:30,440
Noch nicht mal gebacken bei microsoft für windows ein gescheites ui library framework zur verfügung zu stellen die sind schon ewig dran an ihrem an ihrer

1049
00:49:32,480 --> 00:49:39,960
Wie ist das win win ui win ui 3 was im leben nicht rauskommt

1050
00:49:39,960 --> 00:49:45,600
oder was irgendwie laufen nicht rauskommt und keine unpackaged apps und unterstützter

1051
00:49:45,920 --> 00:49:49,760
Microsoft hat ja selbst realisiert dass uwp kompletter reinfall gewesen ist

1052
00:49:50,880 --> 00:49:58,120
objektiv c ist ja im apple umfeld noch ein bisschen angesagt vielleicht gut genug gelabert so viel jetzt zum thema programmiersprache

1053
00:49:58,120 --> 00:50:00,120
das andere gehen wir auch noch mal schnell durch

1054
00:50:00,600 --> 00:50:06,840
Also hier gebe ich hier stimme ich nicht so ganz zu gerade gerade in diesem part hier stimme ich nicht so ganz zu und bei ruby auch nicht

1055
00:50:06,840 --> 00:50:08,360
Da wird was anderes war

1056
00:50:08,360 --> 00:50:10,360
ähm

1057
00:50:10,360 --> 00:50:19,240
Vielleicht soll ich bei programmiersprachen mir noch was in des des des des ding jazz python go c-shop java

1058
00:50:22,360 --> 00:50:24,360
So

1059
00:50:24,360 --> 00:50:26,360
Das ist tatsächlich wahr

1060
00:50:27,480 --> 00:50:30,840
Das wichtigste ist dass man eine programmiersprache lernt nicht so sehr welche

1061
00:50:31,800 --> 00:50:36,160
Es gibt ein paar konzeptionelle unterschiede aber erstmal ist wichtig dass man programmieren lernt

1062
00:50:36,160 --> 00:50:38,640
Aber erstmal ist wichtig dass man programmieren lernt

1063
00:50:39,440 --> 00:50:46,080
Gut so start-up management ja gut deswegen das würde ich alles unter wir lernen ein bisschen linux und linux auf surfern

1064
00:50:47,280 --> 00:50:50,160
Ne das mache ich es auch so nicht als video da überlege ich mir was dazu

1065
00:50:52,080 --> 00:50:55,920
Das würde ich eher so wir lernen bisschen linux abhaken ja so

1066
00:50:56,560 --> 00:51:02,040
understand different os konzepts process management thread and concurrency das würde ich tatsächlich beim

1067
00:51:02,880 --> 00:51:04,880
programmieren auch mit reinhauen sockets

1068
00:51:04,880 --> 00:51:06,760
so euer

1069
00:51:06,760 --> 00:51:13,760
Networks konzepts ja kann man kann man so unterschreiben ja grade grade ein bisschen networking basics sind tatsächlich nicht verkehrt

1070
00:51:14,320 --> 00:51:16,320
Ja man sollte wissen

1071
00:51:17,280 --> 00:51:22,880
Was weiß ich was passiert wenn du von rechner rechner b pingst was passiert der lowlevel

1072
00:51:22,880 --> 00:51:27,960
mäßig dass sie überhaupt da ankommt man sollte man sollte wissen was weiß ich IP?

1073
00:51:28,480 --> 00:51:29,900
und

1074
00:51:29,900 --> 00:51:31,960
Warum es überhaupt so viele subnet maß gibt

1075
00:51:31,960 --> 00:51:58,960
Ich weiß, das sollte man eigentlich in der Ausbildung lernen, aber ich habe heute morgen auch gerätselt, wie brechen man das noch mal genau und vor allem, wenn es um Netzwerkkonzepte geht, durchaus auch ein bisschen advancedere Sachen, dass man sich mal ein bisschen mit VPN beschäftigt oder wie rute ich Sachen am besten über irgendeinen Tunnel, über einen gesicherten Tunnel nach Azure oder sowas. Da gibt es, da gibt es viel. Man muss es aber nicht übertreiben, man wird kein Netzwerkexperte.

1076
00:52:01,960 --> 00:52:02,960
Ja.

1077
00:52:04,960 --> 00:52:16,960
Okay, also das ist auf jeden Fall sinnvoll. I.O. Management, Virtualization, Memory Storage, also vergesst alles, ihr müsst euch nur Virtualisierung angucken und da steht hier gar nicht dabei.

1078
00:52:16,960 --> 00:52:36,960
Ach du Scheiße, was kommt denn da noch? What the fuck? Ihr müsst euch zwei Sachen angucken. Ihr müsst euch, der Rest könnt ihr vergessen. Ihr müsst euch zwei Sachen angucken. Ihr müsst euch Virtualisierung angucken und ihr müsst euch auf jeden Fall Containertechnologie angucken.

1079
00:52:36,960 --> 00:53:04,960
Also irgendwie von, what the fuck, wartet mal. Okay, also ihr müsst euch auf jeden Fall Virtualisierung und Containertechnologie angucken. Dazu gehört erstmal easy Einstieg, Docker Geschichten. Das hat den Vorteil, da kann man auch einfach lokal rumbasteln.

1080
00:53:04,960 --> 00:53:24,960
Ja, Docker, Docker Compose File. Ja. Wenn man, wenn man abenteuerlustig ist, kann man irgendwie, wie heißt das, wie schreibt man das? Minikube, Pi, Kompagnetes Cluster oder irgendwie sowas machen, lokal oder mit irgendwie Cloud, VMs oder sowas.

1081
00:53:24,960 --> 00:53:40,960
Ein bisschen, bisschen Container Orchestrierung und so kann man sich auch angucken. Aber ich finde es reicht erstmal, weil das lernt man dann im Umgang. Ich finde es reicht erstmal, wenn man sich prinzipiell darüber klar wird, was ein Container ist.

1082
00:53:40,960 --> 00:53:55,960
Weil ich sag ja, du benutzt Docker Stack. Okay, das glaub ich hab ich noch nie verwendet. Was ist denn jetzt Docker? Aha, Swarm ist doch, Swarm ist doch dead.

1083
00:53:55,960 --> 00:54:17,960
Exzellent. Was war los? Ich hab Reifen getauscht mit meinem Nachbar. Das hab ich vergessen. Ja, das wusste ich. Kameramann, aber wichtig ist, dass am ersten Mal klar ist, was der Unterschied zwischen der VM und einem Container ist.

1084
00:54:17,960 --> 00:54:36,960
Oder allgemein, man sollte wissen, was ein Container ist. Und ich finde ja immer noch, dass Container ein dummes Wort ist. Weil Container, also wenn die Leute erklären wollen, was ein Container ist, in der Regel kommt immer so eine Erklärung in diese Richtung.

1085
00:54:36,960 --> 00:54:49,960
Container ist wie eine VM, aber keine VM. Und dann denken sich die Leute, hä, ja wie jetzt? Ist es jetzt eine VM oder ist es keine VM? Und man müsste eigentlich anders anfangen. Man müsste eigentlich komplett anders anfangen.

1086
00:54:49,960 --> 00:55:05,960
Und ich finde, dass das Wort Container auch nicht so ganz passend ist, weil das hört sich schon so ein bisschen nach VM an. So eigene, eigene Rechner. Im Prinzip ist ein Container eine Sandbox.

1087
00:55:05,960 --> 00:55:26,960
Es gibt keinen wirklich großen Unterschied zwischen, ich starte ein Programm. Also hier, tolles Programm. Ich führ tolles Programm direkt aus. Oder ich würde Docker, ich sag jetzt einfach mal run, was auch immer tolles Programm machen. Um es jetzt mal vereinfacht zu sagen.

1088
00:55:26,960 --> 00:55:42,960
Da ist kein großer Unterschied dazwischen. Also das ist erst mal fundamental das gleiche. Das sind zwei Prozesse, die auf deinem Linux laufen. Komplett entgegengesetzt zu dem, was eine VM ist.

1089
00:55:42,960 --> 00:55:58,960
Eine VM ist ein Virtualisierungsprozess, der auf deinem Linux läuft, der dann einen kompletten Rechner simuliert und alles was in der VM drinne ist, denkt es läuft auf einem eigenen System. Das hat keine Ahnung von dem Hausbetriebssystem.

1090
00:55:58,960 --> 00:56:14,960
Das ist bei Containern komplett anders. Container sind immer ganz normale Prozesse auf deinem Linux System, so wie normal gestartete Programme auch. Der Unterschied zwischen einem Container und einem normal gestarten Programm ist, dass noch ein bisschen Sandbox Mechanik drum herum ist.

1091
00:56:14,960 --> 00:56:28,960
Zwar namentlich zwei Sachen, Namespaces und Cgroups. Namespaces ist eine Technik, womit man dem Programm, was man in einem Container in der Sandbox startet, ein paar Dinge vorgaukeln kann, die nicht stimmen.

1092
00:56:28,960 --> 00:56:45,960
Was weiß ich, Netzwerk, Hostname, Uhrzeit, solche Dinge, die halt anders sein können im Container wie auf dem Host und Cgroups ist die eigentliche Sandbox, die dafür sorgt, dass der Container manche Dinge nicht darf.

1093
00:56:45,960 --> 00:57:00,960
Also zum Beispiel, wenn ihr in einem Container seid und ihr habt keine Rechte für USB-Geräte, dann seht ihr vielleicht das USB-Gerät, aber könnt nicht drauf zugreifen. Das ist eine Sandbox, aber es ist im Prinzip immer noch das exakt gleiche Programm, was auf eurem Linux läuft.

1094
00:57:00,960 --> 00:57:15,960
Also da ist eigentlich nichts drum herum wie eine VM. Deswegen ist die Erklärung, Container ist wie eine VM, nur ohne VM ist kacke. Deswegen finde ich das Wort auch blöd. Eigentlich sollte man Sandbox sagen.

1095
00:57:15,960 --> 00:57:31,960
Sandbox ist, ich glaube unter der Sandbox können sich die meisten Leute was vorstellen und am Container erstmal nicht. Also man sollte eigentlich Sandbox sagen. Und dementsprechend sieht man auch sofort schon den Unterschied. Halber Ted Talk, genau.

1096
00:57:31,960 --> 00:57:45,960
Man sieht, deswegen sieht man auch schon sofort den Unterschied zwischen was ich quasi in der Sandbox starte. Im Prinzip mache ich nicht Docker Run, im Prinzip mache ich Sandbox Run, wenn man es mal genau nimmt.

1097
00:57:45,960 --> 00:58:00,960
Man sieht ja auch schonmal, man sieht ja auch schonmal den grundsätzlichen, also der Unterschied ist. Jetzt habe ich vergessen, was ich sagen wollte. Ah fuck, ich hatte so richtig schnell einen Flow, jetzt hat mich der Chat abgelenkt hier. Der Chat ist wieder schuld.

1098
00:58:00,960 --> 00:58:15,960
Wofür ist die Sandbox gut? Wie gesagt, einmal um dem Programm was darin läuft Sachen vor zu gaukeln, die nicht der Realität entsprechen. Zum Beispiel, dass sie ein anderes Netzwerk haben, eine andere Uhrzeit, eine andere Hausnahme oder sowas.

1099
00:58:15,960 --> 00:58:42,960
Und dann noch in Form von der Sandbox, dass man auf manche Sachen nicht zugreifen darf. Aber der grundsätzliche Unterschied zwischen einem Container und einem VM ist, also sieht man daran jetzt ja auch schonmal gut, eine VM ist ein komplett simuliertes System und ein Container ist eigentlich nur ein weiteres gestartetes Programm mit ein bisschen Sandbox drum herum.

1100
00:58:42,960 --> 00:59:02,960
Dementsprechend braucht ein Container nichts an Zusatzressourcen. Ich sage jetzt einfach mal nichts, weil es im Endeffekt auch so gut wie nichts ist. Du brauchst ein paar Zusatzchecks, du hast einen minimalsten Overhead, weil es im Prinzip nichts anderes ist wie ein weiteres gestartetes Programm auf deinem Hausbetriebssystem.

1101
00:59:02,960 --> 00:59:15,960
Das hat aber auch einen Nachteil, wenn du nämlich mehrere Programme laufen lassen willst, die unterschiedliche Anforderungen haben oder unterschiedliche Sachen brauchen, dann geht das nicht.

1102
00:59:15,960 --> 00:59:37,960
Also grundsätzlich unterschiedliche Sachen brauchen. Also zum Beispiel, wenn du ein Kernel Modul brauchst für ein Programm und das andere braucht ein anderes Kernel Modul oder du brauchst eventuell vielleicht Sachen, die konflikten oder was auch immer, sobald der Host Kernel nicht mehr passt, dann kannst du das vergessen mit Containern, dann musst du eine VM machen.

1103
00:59:37,960 --> 00:59:51,960
So und übrigens, wenn es um Overhead zwischen Container und VM geht, es wird oftmals gesagt, CPU ist das Problem, ist das Klausur relevant. Klar, ich bin ungefähr in 45 Minuten fertig, da schreibe ich Arbeit drüber.

1104
00:59:52,960 --> 01:00:01,960
Und ich kontrolliere das. Ihr müsst dann alle im Discord auf einen Voice Chat mit Kamera an und ich gucke, dass auch keiner bei euch durchs Bild läuft und euch irgendwas verrät.

1105
01:00:01,960 --> 01:00:11,960
Und vorher müssen wir natürlich Corona-Tests machen. Wir wissen ja, in der Schule ist aktuell Corona-Tests angesagt.

1106
01:00:12,960 --> 01:00:22,960
So und eine Sache, ich muss mal langsam zum Ende kommen, und eine Sache, die immer angeführt wird, was meiner Meinung nach aber auch nicht stimmt,

1107
01:00:22,960 --> 01:00:35,960
die, das Problem bei VMs oder was heißt das Problem, dass das Problem bei VMs ist nicht, dass eine VM langsamer läuft. Das ist überhaupt nicht das Problem.

1108
01:00:36,960 --> 01:00:45,960
Also wenn du einen Benchmark machst, wir reden hier von einem CPU Benchmark, nicht Grafikkarten oder sonst was. CPU, also das was man gut in der VM verwenden kann.

1109
01:00:45,960 --> 01:00:55,960
Wenn du einen CPU Benchmark machst in einer VM und du machst einen CPU Benchmark in einem Container und du machst einen CPU Benchmark auf einem Host, du siehst keinen Unterschied.

1110
01:00:56,960 --> 01:01:09,960
Du hast zwar theoretisch einen Unterschied, klar, und der Unterschied ist theoretisch, dass die VMs theoretisch am langsamsten sein müssten, danach der Container und dann der Host, aber praktisch ist eigentlich kein Unterschied zwischen den drei.

1111
01:01:09,960 --> 01:01:25,960
Also der Overhead von VMs ist nicht CPU-mäßig das Problem. CPU ist in VM absolut top. Das Problem bei VMs ist, dass du Speicher brauchst.

1112
01:01:25,960 --> 01:01:42,960
Du brauchst in der VM, du brauchst Storage auf der Platte, du musst ein komplett eigenes Betriebssystem laden und du brauchst RAM. Also der eigentliche Overhead bei VMs ist nicht so sehr CPU, sondern hauptsächlich RAM und Storage.

1113
01:01:42,960 --> 01:01:54,960
Ja stimmt, nested ist dann wieder was anderes, aber von nested reden wir ja hier an der Stelle nicht. Ja, und das ist RAM und Storage. Note.

1114
01:01:54,960 --> 01:02:13,960
Chat. Pepo G. Ja, so sieht es aus. Okay, ich glaube, soll ich weit? Chat, ihr dürft es jetzt entscheiden. Soll ich mich weiter zu dem Thema auslassen oder soll ich endlich anfangen zu programmieren? Bei der Gelegenheit gucke ich gerade nochmal kurz in Chat.

1115
01:02:13,960 --> 01:02:31,960
Danke für dein Item, es ist schön, wenn es funktioniert hat. Habe ich nicht gesagt, ich kann dazu nichts sagen? Weiter. Okay, nice. Alles klar. Also, das machen wir weiter.

1116
01:02:31,960 --> 01:02:53,960
Okay, also, wo sind wir denn stehen geblieben? Genau, so viel zum Thema Container und VM. Also, man kann sich im Prinzip merken, VM braucht mehr RAM und mehr Storage.

1117
01:02:53,960 --> 01:03:03,960
CPU macht eigentlich keinen großen Unterschied und Container ist nicht irgendwie wie eine VM und dann doch keine VM, sondern Container ist eine Sandbox.

1118
01:03:03,960 --> 01:03:22,960
Und diese Containergeschichte ist übrigens auch nicht neu, muss man dazu sagen. Und wo wir gerade beim Thema Container sind, Docker hat mit Linux Containern so erstmal gar nichts zu tun. Docker ist ein reines Frontend dafür.

1119
01:03:22,960 --> 01:03:32,960
Also, es gibt, wie gesagt, wenn ich sage, ihr startet was im Container, ist es im Prinzip eigentlich sowas wie Sandbox Run. Es ist nicht Docker Run, es ist quasi, wir starten was in der Sandbox.

1120
01:03:33,960 --> 01:03:42,960
Das, was Docker macht oder sagen wir mal, ein Programm in der Sandbox starten unter Linux, kann man relativ easy auch selbst programmieren. Das sind ein paar Zeilen über die Linux API.

1121
01:03:42,960 --> 01:03:51,960
Ich hab da sogar mal ein Video zugesehen, das sind keine Ahnung, 15 Zeilen C oder C++ oder irgendwas, was Linux kernel API aufrufen kann.

1122
01:03:52,960 --> 01:03:57,960
Es gibt Docker für Windows, das ist aber eine VM. Das ist Hyper-V unten drunter.

1123
01:03:57,960 --> 01:04:08,960
Kannst du mal kurz erklären, warum C++ gegenüber C-Sharp die bessere Sprache ist? Ja, kurz, null, jebaited. 1. April war gestern.

1124
01:04:09,960 --> 01:04:18,960
Genau, und Docker hat damit erstmal gar nicht so viel zu tun. Warum Docker und Container miteinander in Verbindung gebracht wird, ist ganz einfach.

1125
01:04:18,960 --> 01:04:31,960
Mit Docker ging der Container-Hype los, weil Docker im Prinzip nichts anderes ist, als ein gutes Frontend zum Bedienen von Linux-Containern.

1126
01:04:32,960 --> 01:04:36,960
Also ein gutes Frontend für die Container-Funktionalität im Kernel.

1127
01:04:37,960 --> 01:04:44,960
Und die Container-Funktionalität im Kernel, das ist das, was früher so unter LXC gelaufen ist, das ist zum größten Teil Namespaces und Cgroups.

1128
01:04:44,960 --> 01:04:53,960
Das ist das, was im Kernel drin ist, und das ist das, was alle Container-Frontends verwenden.

1129
01:04:54,960 --> 01:05:06,960
Es ist egal, ob Potman, Kubernetes, Docker, flatcar, Rancher, was auch immer, vollkommen egal.

1130
01:05:07,960 --> 01:05:11,960
Das sind alles Frontends für die Funktionalität, die im Linux Kernel ist.

1131
01:05:11,960 --> 01:05:17,960
Nämlich Namespaces und Cgroups und ich glaube das Schrägstrich LXC, was auch immer.

1132
01:05:18,960 --> 01:05:29,960
Und Docker hat das Ganze quasi nur befeuert, weil es das erste richtig gute und halb generierende Frontend war.

1133
01:05:30,960 --> 01:05:35,960
Deswegen denken so viele Leute, dass Linux-Container gleich Docker ist. Nein, Linux-Container hat mit Docker gar nichts zu tun.

1134
01:05:35,960 --> 01:05:42,960
Es ging lange vor Docker schon, es gab auch Vorgänger davon und es gibt in anderen Betriebssystemen, in BSD gibt es Jails zum Beispiel.

1135
01:05:43,960 --> 01:05:49,960
Früher gab es OpenVZ und solche Geschichten, also Container oder Sandboxes ist nichts Neues.

1136
01:05:50,960 --> 01:06:00,960
Aber diese Namespaces und Cgroup-Funktionalität im Linux Kernel plus Docker als Frontend hat halt dafür gesorgt, dass es einen relativ großen Hype gab um das Ganze.

1137
01:06:00,960 --> 01:06:06,960
Und deswegen bringen so viele Leute Docker und Container quasi, werfen das in einen Topf.

1138
01:06:09,960 --> 01:06:13,960
Sorry, dass ich nochmal nachhage, warum lässt man überhaupt Programme im Container laufen zum Testen?

1139
01:06:14,960 --> 01:06:20,960
Ja, das ist tatsächlich eines der ursprünglichen Ideen von Docker gewesen, dass man Sachen reproduzierbar besser testen kann.

1140
01:06:21,960 --> 01:06:24,960
Also, du musst dir überlegen, was brauchst du alles, damit dein Programm läuft?

1141
01:06:25,960 --> 01:06:27,960
Und das packst du alles quasi in dieses Container-Image mit rein.

1142
01:06:27,960 --> 01:06:40,960
Mal angenommen, du hast irgendwie, du hast ein Programm gebastelt, das braucht Library A, B, C, das braucht vielleicht ein Betriebssystem C, Library D, du hast noch irgendwelche,

1143
01:06:41,960 --> 01:06:47,960
eventuell irgendwelche, frag mich nicht, du machst ein Exec auf Kommandozeilen, Tools im Hintergrund, die müssen installiert sein vorher, was auch immer.

1144
01:06:48,960 --> 01:06:51,960
Also sprich, dein Programm hat gewisse Dependencies, dass es ordentlich funktioniert.

1145
01:06:52,960 --> 01:06:55,960
Das ist eigentlich nur ein Stream, ich muss kurz Reifen wechseln dazwischen.

1146
01:06:55,960 --> 01:07:00,960
Also sprich, du hast ein paar Dependencies, dass es funktioniert.

1147
01:07:01,960 --> 01:07:10,960
So, und eine der ursprünglichen Ideen dieser ganzen Container- und Docker-Geschichte war, dass man Programme reproduzierbar unter gleichen Bedingungen testen kann.

1148
01:07:11,960 --> 01:07:17,960
Also sprich, wenn es funktioniert hat bei dir und du hast aber die 20 Abhängigkeiten installiert, die dein Programm braucht,

1149
01:07:17,960 --> 01:07:24,960
dann hast du ein Docker-File gemacht, hast dort quasi reingeschrieben, ok, was muss ich alles installieren, dass das Programm läuft und hast es einem geschickt.

1150
01:07:25,960 --> 01:07:32,960
Das Docker-File ist, oder generell, das ist im Prinzip ähnlich zu, du hast eine VM mit einem Install-Script.

1151
01:07:33,960 --> 01:07:39,960
Ja, du würdest eine VM aufsetzen und dann lässt ein Install-Script laufen, die das System in den Zustand bringt, wie du es brauchst.

1152
01:07:40,960 --> 01:07:45,960
Nur das ist halt eine ganze Weile Dauer, du musst den Kram erstmal installieren, dann musst du erstmal das Install-Script laufen lassen, was auch immer.

1153
01:07:45,960 --> 01:07:53,960
Docker-File, Docker-Image dauert halt 20 Sekunden, dann ist das Ding runtergeladen und gestartet.

1154
01:07:54,960 --> 01:07:58,960
Wenn du das Image schon gezogen hast, dauert es quasi so wie direkt gestartet.

1155
01:07:59,960 --> 01:08:04,960
Ja, also der hauptsächliche Grund ursprünglich war tatsächlich mal, nachvollziehbar Programme testen zu können.

1156
01:08:04,960 --> 01:08:21,960
So, und dadurch hast du natürlich auch den Vorteil, dass du Sachen konfigurieren kannst und jemand anderem gibst, der das dann bei sich auch ausprobieren kann, unter so weit wie es irgendwie geht, ähnlichen Bedingungen wie bei dir.

1157
01:08:22,960 --> 01:08:31,960
Na klar, der hat noch eine andere CPU drin oder irgendwas, was in die Suppe spucken kann, aber im Prinzip, nein, nein, der andere.

1158
01:08:31,960 --> 01:08:38,960
Aber im Prinzip kannst du die Sachen reproduzieren, mal wieder aufbauen lassen und daraus ist ein ganzes Ökosystem entstanden.

1159
01:08:39,960 --> 01:08:51,960
Die Extremform ist sowas wie Kubernetes, wo du dann quasi so einen Orchestrator hast, wo du dem sagst, ich möchte 5 davon, 5 davon, jetzt möchte ich nicht nur 5, jetzt möchte ich auf einmal 50.

1160
01:08:52,960 --> 01:08:58,960
Ich möchte sichergestellt haben, dass nicht mehr als 5 auf der gleichen Hardware laufen, blablabla und das managt das für dich.

1161
01:08:58,960 --> 01:09:06,960
Das geht aber auch nur dadurch, weil das reproduzierbar funktioniert und du nicht erstmal in den VM starten musst oder sowas in der Richtung.

1162
01:09:07,960 --> 01:09:23,960
Im bisschen kleineren Stil ist das auch ganz praktisch, du kannst zum Beispiel sowas wie Docker Compose verwenden, das ist ein YAML-File, da schreibst du zum Beispiel rein, ich brauche eine MySQL-Datenbank, einen Web-Server und meine Anwendung.

1163
01:09:23,960 --> 01:09:43,960
Und ich möchte, dass die Dinger in dieser und dieser Reihenfolge gestartet werden, die Fault-Password für MySQL xy, dann trägst du das ein und das kannst du dann so einfach auf jedem Rechner mit einem Kommando ausführen und dann startet dir quasi dein Test-Environment oder dein Live-Environment, was auch immer, auf jedem x-beliebigen Rechner, wo halt architekturmäßig das läuft.

1164
01:09:44,960 --> 01:09:46,960
Das geht einfach schneller.

1165
01:09:46,960 --> 01:09:52,960
Es ist jetzt nicht so, dass man das vorher hätte nicht irgendwie auch machen können, es war aber halt aufwendiger.

1166
01:09:53,960 --> 01:09:58,960
Und du weißt wie das ist, umso aufwendiger die Sachen sind, umso weniger macht man es.

1167
01:09:59,960 --> 01:10:07,960
Man muss übrigens auch nicht alles verkontenerisieren, das ist auch so eine Geschichte, wo finde ich zur Zeit ein bisschen übertrieben wird.

1168
01:10:08,960 --> 01:10:11,960
Ich warte noch drauf, bis die Leute ihr LS im Container ausführen.

1169
01:10:11,960 --> 01:10:16,960
LS as a Service gibt es dann irgendwann mal.

1170
01:10:17,960 --> 01:10:20,960
So nach dem Motto, Nini LS, nee das geht nicht, erstmal Dogger-Container starten.

1171
01:10:21,960 --> 01:10:23,960
Da warte ich noch drauf.

1172
01:10:24,960 --> 01:10:32,960
Ich hatte auch letztens auf der Arbeit einen, der war unbedingt der Meinung, dass er, kann sogar Wüschel-Studio-Code gewesen sein.

1173
01:10:32,960 --> 01:10:41,960
So nach dem Motto, er macht nur noch Container, Container-Only-Workflow hat er erzählt.

1174
01:10:42,960 --> 01:10:44,960
Alles klar, alles gut.

1175
01:10:45,960 --> 01:10:47,960
Wo ist der Unterschied zu Snap?

1176
01:10:48,960 --> 01:10:52,960
Beides sind Frontends für Container, das muss man sich erstmal merken.

1177
01:10:53,960 --> 01:10:55,960
Das Handling ist unterschiedlich.

1178
01:10:55,960 --> 01:11:02,960
Und Snap versucht halt ein bisschen Package Manager zu sein.

1179
01:11:03,960 --> 01:11:08,960
Also Dogger installierst du halt fertige Images und lässt die Sachen drauf laufen und gut ist.

1180
01:11:09,960 --> 01:11:15,960
Self-Contained und dein Hausbetriebssystem hat eigentlich gar nichts mit zu tun, weil es ein eigenes Image ist.

1181
01:11:16,960 --> 01:11:19,960
Du kannst da auch nicht so ohne Weiteres drauf zugreifen und sonst wie.

1182
01:11:19,960 --> 01:11:30,960
Und Snap versucht halt so zu tun, als wäre das Programm in dem Container eigentlich ein Programm, was du hier jetzt easy auf deinem Host ausführen kannst.

1183
01:11:31,960 --> 01:11:35,960
Also ich bin ehrlich gesagt kein allzu großer Snap-Fan.

1184
01:11:35,960 --> 01:11:55,960
Und was ich bei Ubuntu nicht mag ist, dass sie so Sachen wie Chrome unter der Haube als Snap installieren und so tun, als wäre es aus dem Package Manager ein fertiges Programm.

1185
01:11:55,960 --> 01:12:04,960
Alter, jetzt habe ich aber lange gelabert und wir sind nicht mal fertig. Ich mache das jetzt mal im Schnelldurchgang.

1186
01:12:05,960 --> 01:12:08,960
Wie installiert man Treiber auf Linux, die als C-Source-File geliefert werden?

1187
01:12:09,960 --> 01:12:13,960
Beziehungsweise habe ich falsch gemacht, dass man beim Kompilieren der File meckert, dass init-h nicht kennt.

1188
01:12:14,960 --> 01:12:19,960
Du hast wahrscheinlich die Dependencies nicht installiert dafür.

1189
01:12:19,960 --> 01:12:34,960
Also wenn du irgendwas inkludierst, was jetzt nicht dort liegt, wo du dein Make oder was auch immer ausführst, dann erwartet er wahrscheinlich, dass irgendeine Library installiert ist.

1190
01:12:35,960 --> 01:12:37,960
Dann musst du in deinen Package Manager gehen und das passende Paket installieren.

1191
01:12:38,960 --> 01:12:46,960
Zum Beispiel wenn man FFmpeg braucht, dann musst du erstmal, also wenn du FFmpeg Libraries brauchst, musst du erstmal FFmpeg installieren, dass du den Gramm kompilieren kannst.

1192
01:12:46,960 --> 01:12:51,960
Ach ja, nicht Ubuntu, sondern Ubuntu natürlich meine ich, Ubuntu.

1193
01:12:56,960 --> 01:13:01,960
Ach so Moment, Treiber. Ich dachte es ging um ein fertiges Programm.

1194
01:13:02,960 --> 01:13:09,960
Also wenn du Treiber installieren kannst, dann brauchst du in der Regel, da hat er recht, wer hat es denn jetzt hier geschrieben, keine Ahnung, vor einer Stunde oder so.

1195
01:13:10,960 --> 01:13:14,960
Dann brauchst du wahrscheinlich die Linux-Header von deinem aktuellen Kernel.

1196
01:13:14,960 --> 01:13:16,960
Von deinem aktuellen Kernel, ja.

1197
01:13:17,960 --> 01:13:25,960
Musst du mit deinem Package Manager installieren, meistens sowas wie Uptinstall, Linux, Linux-Headers oder Linux-Firmware oder was auch immer.

1198
01:13:26,960 --> 01:13:29,960
Musst du gucken, also das ist ein bisschen unterschiedlich von Distro zu Distro.

1199
01:13:30,960 --> 01:13:34,960
Aber ja, wenn es ein Treiber ist, musst du auf jeden Fall die Kernel-Header installieren.

1200
01:13:36,960 --> 01:13:38,960
Richtig, so sieht es aus.

1201
01:13:39,960 --> 01:13:42,960
Genau, so bla bla bla, das haben wir abgehakt, haben wir abgehakt.

1202
01:13:42,960 --> 01:13:44,960
Learn about Managing Servers, klar.

1203
01:13:45,960 --> 01:13:50,960
Wie gesagt, habe ich ja gesagt, Linux lernen, Operating System, Linux, Unix, Windows.

1204
01:13:51,960 --> 01:13:53,960
Unix, ganz knicke.

1205
01:13:54,960 --> 01:14:00,960
Also generell auch das ist so cool, dass sein mag, dass du da ein bisschen Auswahl hast.

1206
01:14:01,960 --> 01:14:09,960
Du wirst ehrlich gesagt zu 95% mit Linux-Systemen zu tun haben in dem Bereich und vielleicht zu 5% mit irgendwelchen übrig gebliebenen Windows.

1207
01:14:09,960 --> 01:14:12,960
Oder im Zweifelsfall auch irgendwelchen Entwickler-Workstations, was auch immer.

1208
01:14:13,960 --> 01:14:18,960
Aber es ist 95% Linux, also kann man machen, ist aber nicht wirklich wichtig.

1209
01:14:19,960 --> 01:14:23,960
Genauso wie Windows, also Linux, Linux all the way, wenn es um diese Sache geht.

1210
01:14:24,960 --> 01:14:30,960
Egal wo, in der Cloud, lokal, sorry nicht lokal, on-prem natürlich, Linux.

1211
01:14:30,960 --> 01:14:39,960
So, Suse auf gar keinen Fall, Suse ist der Sack meiner Meinung nach, mag ich null.

1212
01:14:40,960 --> 01:14:42,960
Fedora mag ich auch null.

1213
01:14:43,960 --> 01:14:52,960
CentOS gibt es nicht mehr in dieser Form, das ist ja quasi dead in der bisherigen Form.

1214
01:14:53,960 --> 01:14:55,960
Es gibt eigentlich bloß drei Dinger.

1215
01:14:56,960 --> 01:14:58,960
Es gibt Red Hat, das ist im Prinzip das gleiche wie früher CentOS.

1216
01:14:58,960 --> 01:15:00,960
Red Hat, Ubuntu, Debian.

1217
01:15:01,960 --> 01:15:05,960
Ich persönlich bin ja Ubuntu-Fan, das wisst ihr auf der Arbeit, haben wir hauptsächlich Red Hat.

1218
01:15:06,960 --> 01:15:07,960
Debian ist aber auch kein Ding.

1219
01:15:08,960 --> 01:15:11,960
Debian, Ubuntu ist jetzt nicht der Wahnsinnsunterschied.

1220
01:15:12,960 --> 01:15:21,960
Ubuntu macht komische Sachen, wie beispielsweise YAML-Konfiguration für Netzwerk.

1221
01:15:21,960 --> 01:15:28,960
Netzwerk, weiß immer noch nicht, was die geritten hat bei Ubuntu dafür, dass man YAML-Konfig macht für Netzwerk.

1222
01:15:29,960 --> 01:15:34,960
Das ist unter Debian schöner, dafür hat Ubuntu einen ein bisschen lockereren Umgang mit Packages.

1223
01:15:35,960 --> 01:15:38,960
Ja, da kannst du auch die ein oder anderen Unfree Sachen installieren, ein bisschen modernere Sachen.

1224
01:15:39,960 --> 01:15:40,960
Debian ist ja im Prinzip halt schon immer alt, wenn es rauskommt.

1225
01:15:41,960 --> 01:15:44,960
Red Hat ist alt mit der Zeit, bringt aber meiner Release es raus.

1226
01:15:44,960 --> 01:15:50,960
Ich muss sagen, alles in allem, gesamtpaketmäßig gefällt mir persönlich Ubuntu am besten.

1227
01:15:55,960 --> 01:16:01,960
Aber wenn du Ubuntu kannst, kannst du auch Debian und wenn du Debian kannst, kannst du eigentlich auch Ubuntu.

1228
01:16:02,960 --> 01:16:03,960
So.

1229
01:16:04,960 --> 01:16:07,960
White Crab, was? Das darf man nicht mehr so nennen.

1230
01:16:08,960 --> 01:16:09,960
Das ist verboten.

1231
01:16:09,960 --> 01:16:15,960
Da ist, da ist die, ist gleich hier die, die Police am Start, Monkathos.

1232
01:16:16,960 --> 01:16:17,960
Whitelist!

1233
01:16:18,960 --> 01:16:20,960
Ich glaube es geht los. Triggert, alter, triggert.

1234
01:16:22,960 --> 01:16:24,960
Wo habe ich denn mein Monkathos?

1235
01:16:25,960 --> 01:16:26,960
Ah.

1236
01:16:29,960 --> 01:16:30,960
So, gehen wir mal schnell hier rüber.

1237
01:16:31,960 --> 01:16:34,960
Learn to live in Terminal. Ja, aber man muss es nicht übertreiben.

1238
01:16:34,960 --> 01:16:39,960
Das ist auch ein Tipp, den ich euch geben würde in der Richtung, übertreibt sich.

1239
01:16:40,960 --> 01:16:46,960
Es gibt ganz viele, gerade auf YouTube, ich nenne es mal Gurus, die dir erzählen, so wie sie das machen, ist The Way.

1240
01:16:47,960 --> 01:16:52,960
Der einzige Way, den es gibt, ist, so wie es euch, für euch am angenehmsten ist.

1241
01:16:53,960 --> 01:16:57,960
Also ich persönlich nutze auch gern das Terminal und mache da viel drüber.

1242
01:16:57,960 --> 01:17:09,960
Gerade wenn es was ist, was man vielleicht auch mal automatisch laufen lassen will, aber ich würde nicht im Traum drauf, auf die Idee kommen, quasi alles nur noch in Wim zu machen oder in Emacs.

1243
01:17:10,960 --> 01:17:18,960
Und ganz Hardcore-Varianten, dann verwenden ja sogar einen Textbrowser oder einen Browser mit Wimkeys oder sonst was.

1244
01:17:19,960 --> 01:17:24,960
Oder sagen, Leute, steckt die Maus ab, ihr dürft die Maus nicht mehr benutzen, dass ihr gut im Terminal werdet.

1245
01:17:24,960 --> 01:17:26,960
Das ist meiner Meinung nach alles Schwachsinn.

1246
01:17:27,960 --> 01:17:32,960
Man sollte im Terminal gut klarkommen, man sollte sich so die Standard-Shortcuts angucken, man sollte wissen, wie man in Wim bedient.

1247
01:17:33,960 --> 01:17:35,960
Ich persönlich komme mit Wim viel besser klar als mit Nano.

1248
01:17:36,960 --> 01:17:41,960
Nano ist, finde ich, immer nervig, wenn da einer Nano aufmacht, aber es ist alles letztendlich Geschmackssache.

1249
01:17:42,960 --> 01:17:51,960
Aber es macht meiner Meinung nach keinen Sinn, Wim in irgendwie eine JavaScript oder C-Sharp-IDE oder sowas umzubauen.

1250
01:17:51,960 --> 01:17:53,960
Da nehme ich passende Tools für.

1251
01:17:54,960 --> 01:18:02,960
Also die Stärken von Wim liegen meiner Meinung nach in einem schnellen, geschwinden, Kommandozeilen-Texteditor.

1252
01:18:03,960 --> 01:18:07,960
Und nicht so sehr im Aufbau mit 30 Milliarden Plugins.

1253
01:18:11,960 --> 01:18:14,960
Man kann auch VS Code mit Wim-Extension benutzen, wobei ich das nicht mag.

1254
01:18:14,960 --> 01:18:25,960
So, und das nächste ist, wenn ihr jemand habt, der euch dann erzählt, ja, immer die Finger auf der Home-Row und nicht die Maus benutzen, es ist 2021.

1255
01:18:26,960 --> 01:18:32,960
Man benutzt 60% der Zeit, auch wenn man am Programmieren ist, einen Browser, um Dinger nachzugucken.

1256
01:18:33,960 --> 01:18:37,960
Und einen Browser zu bedienen ohne Maus geht schlicht und ergreifend nicht richtig.

1257
01:18:38,960 --> 01:18:41,960
Also es macht überhaupt keinen Sinn, absichtlich auf die Maus zu verzichten.

1258
01:18:41,960 --> 01:18:54,960
Ihr steigert eure Effizienz am Rechner definitiv mehr dadurch, wenn ihr ordentliches Aiming habt hier auf eurem Browser, als wenn ihr ein paar Millisekunden in Wim schneller seid.

1259
01:18:55,960 --> 01:19:04,960
Zumal man ja auch sagen muss, dass man 90% der Zeit, wenn man Sachen programmiert, nicht Hacker-Man tippt, sondern überlegt.

1260
01:19:04,960 --> 01:19:17,960
Weil die Vorstellung, dass man komplizierte Sachen in dieser Geschwindigkeit programmiert, haben vielleicht irgendwelche Fernsehsendungen oder so, aber die Realität ist es halt nicht.

1261
01:19:18,960 --> 01:19:25,960
In Wirklichkeit, wisst ihr wie die Realität aussieht? Die Realität ist eigentlich, okay, lass mal das kurz ausprobieren.

1262
01:19:25,960 --> 01:19:35,960
Okay, ausführen, gucken, ob das Ganze funktioniert. Ah, okay, scheint zu funktionieren. Machen wir mal hier.

1263
01:19:36,960 --> 01:19:47,960
Ah, Mist, wie ist der Aufruf? Nochmal C++, AP, Blah, Pointer, dumm. Aha, ist der Goverflow, okay, okay, Copy-Paste.

1264
01:19:47,960 --> 01:19:57,960
Ja, mal gucken, ob das damit geht. Schreiben wir das mal ein bisschen um. Okay, und jetzt. So, so läuft das ja normalerweise, realistisch betrachtet, ja.

1265
01:20:00,960 --> 01:20:06,960
Und das hat damit nichts zu tun. Und dementsprechend, wenn ihr schnell seid, einen guten Browser bedienen könnt, ist das auch wichtig.

1266
01:20:06,960 --> 01:20:16,960
Also nicht zu sehr übertreiben mit Terminal-Hackermann, ja. Stack-Overflow-Triffen-Development, genau.

1267
01:20:17,960 --> 01:20:26,960
So, T-marks-Lernen ist auf jeden Fall sinnvoll, sinnvoller als Screen zu lernen. Was machst du gerade? Ich Reakte.

1268
01:20:27,960 --> 01:20:33,960
Ich lasse mich zu dieser Roadmap aus, weil mich jemand gefragt hat. Also das ist auf jeden Fall sinnvoll. Also T-marks-Lernen ist auf jeden Fall sinnvoll.

1269
01:20:33,960 --> 01:20:41,960
Also ich muss sagen, das war eines der sinnvollsten Investitionen überhaupt, dass ich T-marks lernen konnte, dass ich T-marks gelernt habe.

1270
01:20:42,960 --> 01:20:47,960
Das hilft ungemein. Natürlich, man kann auch einfach mehrere Terminals aufmachen, wenn man sowas machen will.

1271
01:20:48,960 --> 01:20:54,960
Aber, gerade wenn man per SSH auf einem Server ist, ist T-marks praktisch und T-marks schützt euch halt davor, die Session zu verlieren.

1272
01:20:54,960 --> 01:21:03,960
Also sprich, wenn ihr detached werdet vom Server und ihr habt was laufen im Hintergrund und die Verbindung zum Server crasht bei euch.

1273
01:21:05,960 --> 01:21:12,960
Und, ne, also Verbindung zum Server ist jetzt gecrashed und ihr lockt euch neu ein, dann könnt ihr euch einfach neu attachen aufs T-marks und es ist immer noch da.

1274
01:21:14,960 --> 01:21:15,960
Excellent.

1275
01:21:15,960 --> 01:21:22,960
Bäm, Terminal geschlossen und zack, das ganze ist immer noch da.

1276
01:21:23,960 --> 01:21:35,960
So, also das ist auf jeden Fall eine äußerst coole Geschichte. Also T-marks lernen lohnt sich definitiv. Das ist wirklich richtig huge und ist gar nicht so schwierig.

1277
01:21:35,960 --> 01:21:45,960
So, Bash Scripting auf jeden Fall, Vim, Nano, PowerShell, Emacs, bisschen Vim Navigation reicht ehrlich gesagt. Rest kannst du knicken, PowerShell ist eh Paints Champ.

1278
01:21:46,960 --> 01:21:55,960
Text Manipulation Tools, gebe ich ihm voll und ganz recht. Shell Scripting, trotz hier Python Geschichten und so, kommste eigentlich immer noch nicht drum herum.

1279
01:21:55,960 --> 01:22:05,960
Process Monitoring, gebe ich ihm auch recht. Ja, Networking, so zu gucken wie man mal Pakete mitschneidet und so, das ist auf jeden Fall auch.

1280
01:22:06,960 --> 01:22:11,960
So, das OSI Modell, ja da hab ich jetzt noch drauf gewartet.

1281
01:22:13,960 --> 01:22:20,960
Network Security, klar, HTTP, HTTPS, na FTP, FTP könnt ihr streichen. FTP ist...

1282
01:22:22,960 --> 01:22:23,960
Tja.

1283
01:22:23,960 --> 01:22:28,960
Juckt eigentlich keinen mehr. Ich war vor 10 Jahren vielleicht zuletzt über FTP Server eingeloggt.

1284
01:22:31,960 --> 01:22:41,960
SSL, TLS auf jeden Fall, SSH, ja also die wichtigsten Sachen davon im Bereich Administration oder beziehungsweise auch hier im Linux Bereich ist SSH und SSH Port Weiterleitung.

1285
01:22:41,960 --> 01:22:54,960
Äh, ja, passt, gut, Web Server, ja, ja, ja, ist okay. EES meinetwegen, Nginx, würde ich tatsächlich genauso sagen, meine Pers...

1286
01:22:55,960 --> 01:23:02,960
Tomcat ist kein klassischer Web Server eigentlich. Ich würde sagen Nginx und Cutty, Cutty zum Einstieg ist eine super Sache, weil easy zu konfigurieren.

1287
01:23:02,960 --> 01:23:10,960
Äh, ich geb mein Zen-Fehler zu ab. Danach programmieren wir weiter.

1288
01:23:12,960 --> 01:23:17,960
Learn Infrastructure as Code, auf jeden Fall, das ist das erste was ich gesagt hab, was dazu gehört.

1289
01:23:18,960 --> 01:23:21,960
Äh, Docker LXD hatten wir auch schon, ja, bla, sonst wie.

1290
01:23:22,960 --> 01:23:27,960
Ich würde erstmal die Basics lernen, bevor ich hier an Container Orchestration gehe.

1291
01:23:27,960 --> 01:23:31,960
Infrastructure Provision in Terraform, das würde ich mir auch erst angucken in Zusammenhang mit dem hier.

1292
01:23:32,960 --> 01:23:37,960
Vorher würde ich mir die wirklich mal die einfachen Sachen angucken hier zum Einstieg und sich ein bisschen rantasten hier, ja.

1293
01:23:38,960 --> 01:23:41,960
Ich würde mir Ansible raussuchen und ich würde mir Docker raussuchen.

1294
01:23:42,960 --> 01:23:44,960
Und da ein bisschen rumbasteln, Docker Compose, sonst wie was.

1295
01:23:45,960 --> 01:23:51,960
Ähm, nicht agil genug, ja, Agile alles.

1296
01:23:51,960 --> 01:23:57,960
Cloud Providers, wie gesagt, ich hab mein Kram alles bei Hetzner.

1297
01:23:58,960 --> 01:24:04,960
AWS, ja, da müsst ihr wissen was wichtig ist, ich persönlich hier bin ja in der Azure-Richtung am Start, aber da müsst ihr wissen was wichtig ist.

1298
01:24:05,960 --> 01:24:10,960
Deployment und Continuous Integration Tools, hab ich ja schon erzählt vorhin.

1299
01:24:11,960 --> 01:24:15,960
Infrastructure Monitoring, ganz ehrlich, da geb ich ihm voll und ganz recht.

1300
01:24:15,960 --> 01:24:20,960
Prometheus, Grafana, beste Kombi.

1301
01:24:21,960 --> 01:24:27,960
Es ist vielleicht nicht für alles so gut geeignet, wie so die klassischen Sachen beim Zappix, aber Prometheus, Grafana ist easy.

1302
01:24:28,960 --> 01:24:33,960
Und es gibt ein richtig großes Ökosystem, wo man fast alles mittlerweile mitmachen kann.

1303
01:24:34,960 --> 01:24:37,960
Da kann ich nicht viel zu sagen.

1304
01:24:37,960 --> 01:24:42,960
Ah, gut, fertig, reacted.

1305
01:24:43,960 --> 01:24:46,960
Ja, und das ist nochmal so zur Untermauung, das ist im Prinzip das, was ich vorhin auch gesagt hab.

1306
01:24:47,960 --> 01:24:52,960
Python ist mit so die angesagteste und beliebteste Programmiersprache, gerade wenn es um AI-Sachen geht.

1307
01:24:53,960 --> 01:24:59,960
JavaScript, weil es Web ist, ist halt vorne. Danach Java, Go und C-Sharp ist auch mittlerweile noch relativ weit vorne.

1308
01:24:59,960 --> 01:25:07,960
Wir können ja mal 2000 gucken, ob man das ganze Jahr zusammenfassen kann, keine Ahnung.

1309
01:25:08,960 --> 01:25:10,960
Vielleicht nicht.

1310
01:25:11,960 --> 01:25:15,960
Ja, weil C-Sharp ist die letzten Jahre ganz schön gestiegen.

1311
01:25:16,960 --> 01:25:19,960
Ja, guck, oder auch nicht.

1312
01:25:20,960 --> 01:25:23,960
Hier wurde es open sourced, hier wurde es open sourced und hier ist...

1313
01:25:24,960 --> 01:25:27,960
Okay, ich hätte eigentlich schon gedacht, dass es deutlich mehr gestiegen ist.

1314
01:25:27,960 --> 01:25:29,960
Na, ist es ja auch.

1315
01:25:30,960 --> 01:25:38,960
Von Windows Only Days hier vorne, zu jetzt quasi da, na gut.

1316
01:25:43,960 --> 01:25:47,960
Ruby ist im Zuwachs? Nee, das kann ich mir nicht vorstellen. Wo ist Ruby?

1317
01:25:48,960 --> 01:25:54,960
Leute, Leute, Chat, wie spricht man Ruby richtig aus? Ihr wisst's, oder? Der Chat weiß es.

1318
01:25:54,960 --> 01:26:00,960
Guck mal Ruby, wie es runtergeht. Chat, wie spricht man Ruby richtig aus?

1319
01:26:01,960 --> 01:26:06,960
Was Java da vorne macht, klar. Java ist im Enterprise Umfeld der Shit.

1320
01:26:07,960 --> 01:26:11,960
Und wisst ihr, woran das noch liegt, dass Java so weit vorne ist?

1321
01:26:12,960 --> 01:26:14,960
Wer weiß es?

1322
01:26:15,960 --> 01:26:17,960
Chat ist clever.

1323
01:26:17,960 --> 01:26:26,960
An den Chinesen, genau. Android vielleicht auch zum Teil, aber gerade die Chinesen sind komplette Java-Fans.

1324
01:26:27,960 --> 01:26:32,960
Ich weiß auch nicht, was mit den Chinesen los ist, aber wir wissen ja, die Chinesen haben es mit Menschenrechten eh nicht so.

1325
01:26:33,960 --> 01:26:35,960
Da liegt Java halt nahe.

1326
01:26:35,960 --> 01:26:47,960
Ja, die Chinesen stehen unglaublich auf Java.

1327
01:26:48,960 --> 01:26:49,960
Hier Leute, ich muss mal kurz Licht anschalten.

1328
01:26:49,960 --> 01:27:05,960
Wobei, wenn ich sage, ich muss kurz Licht anschalten, dann heißt es, ich muss den Browser, den Home Assistant aufmachen und kurz auf den Knopf drücken, dass es Licht angeht. So, Licht ist an.

1329
01:27:06,960 --> 01:27:12,960
Die Chinesen haben auf GitHub auch immer mehr C++. Ja, ich sag ja, die haben es mit Menschenrechten nicht so.

1330
01:27:12,960 --> 01:27:18,960
Ok Leute, ich bin jetzt schon wieder da, hab eineinhalb Stunden geschwätzt und wisst ihr, wie viel Zeilen wir schon programmiert haben?

1331
01:27:19,960 --> 01:27:20,960
Nichts.

1332
01:27:21,960 --> 01:27:22,960
Exzellent.

1333
01:27:23,960 --> 01:27:24,960
Ok, kommen wir mal zur Sache.

1334
01:27:31,960 --> 01:27:33,960
Hatte JavaScript fünf Jahre lang auf meinem PC nicht installiert?

1335
01:27:33,960 --> 01:27:42,960
Doch, du hattest garantiert JavaScript auf deinem PC installiert, aber 1000%ig hattest du JavaScript auf deinem PC drauf.

1336
01:27:45,960 --> 01:27:47,960
Oder hast du nicht im Internet gesurft?

1337
01:27:52,960 --> 01:27:54,960
Jeder Browser bringt JavaScript mit.

1338
01:27:54,960 --> 01:27:57,960
Das ist aber echt eine gute Idee.

1339
01:27:58,960 --> 01:28:05,960
Wie würdest du das alles lernen? Hast du Tipps mit den Sachen anfangen, die einem Spaß machen, einen interessieren und alles andere ignorieren?

1340
01:28:07,960 --> 01:28:19,960
Kurse mögen auch schon sinnvoll sein, aber ich guck mir gerne, ich guck mir gerne, ähm, Talks und, und, äh, was soll ich sagen?

1341
01:28:19,960 --> 01:28:26,960
Talks von Konferenzen und den offiziellen Content von den jeweiligen Herstellern an.

1342
01:28:27,960 --> 01:28:32,960
Ich guck mir beispielsweise gerne den Microsoft Content an, wenn es um.NET geht. Das ist immer ganz gut gemacht.

1343
01:28:33,960 --> 01:28:35,960
Man muss aber halt schon meistens ein bisschen Vorkenntnisse haben.

1344
01:28:40,960 --> 01:28:42,960
Oh, mir kraut's davor.

1345
01:28:44,960 --> 01:28:45,960
Das ist dann nicht gut.

1346
01:28:45,960 --> 01:28:50,960
Oh, mir kraut's davor. Das ist dann nicht Kobold, sondern Kobold.

1347
01:28:52,960 --> 01:28:55,960
Oder wenn sie Schnee ist, die schneen mal eine Schobold raus.

1348
01:28:56,960 --> 01:29:05,960
Kennst du Lean? Das ist irgendeine Agilitätsgeschichte, ne? Für die coolen, die Agile Leute sind auch Lean.

1349
01:29:05,960 --> 01:29:09,960
Lean ist doch auch irgendeine, so eine, so eine Agile Prozessgeschichte.

1350
01:29:17,960 --> 01:29:24,960
So, ok, ähm, jetzt machen wir weiter.

1351
01:29:25,960 --> 01:29:27,960
Also, wo sind wir stehen geblieben?

1352
01:29:27,960 --> 01:29:37,960
Also, wir können den Sensor auslesen, also den da, immer noch, das geht immer noch um den Sensor. Wir haben ja in den letzten Streams nichts gemacht, außer, dass ich sinnlos rumgelabert hab.

1353
01:29:44,960 --> 01:29:46,960
Die Chinesen haben den eigenen Engine X.

1354
01:29:48,960 --> 01:29:49,960
Ihr wundert mich nicht.

1355
01:29:49,960 --> 01:29:54,960
Die Chinesen haben schon alles geforkt, was man forken kann.

1356
01:29:55,960 --> 01:30:05,960
So, also wir machen jetzt an der Stelle weiter. Was wir vorhin im Stream hingebracht haben ist, dass wir die, ja du hast nichts verpasst, Enrixl, ich hab gerade geschwätzt eineinhalb Stunden und jetzt fangen wir wieder an.

1357
01:30:05,960 --> 01:30:18,960
Also, wir haben kein Monka-Fork mehr, haben wir das nur, haben wir das nur im, ah das haben wir nur im Discord, oder? Lul.

1358
01:30:18,960 --> 01:30:34,960
So, also was wir jetzt geschafft haben, ist von diesem Sensor, wir können abfragen, ähm, Temperatur, Licht und, ähm, also Helligkeit, Helligkeit in Lux, Temperatur in Celsius, also nicht in Fahrenheit oder in irgendwelchen anderen Krokona-Krokodilen.

1359
01:30:35,960 --> 01:30:37,960
Also, also das ist jetzt schon ziemlich, ziemlich gut.

1360
01:30:37,960 --> 01:30:39,440
licht

1361
01:30:39,440 --> 01:30:40,760
und

1362
01:30:40,760 --> 01:30:43,720
also helligkeit helligkeit in lux

1363
01:30:44,320 --> 01:30:47,520
Temperatur in Celsius also nicht in Fahrenheit oder irgendwelchen anderen

1364
01:30:48,240 --> 01:30:50,240
Kokona Kokona Einheiten

1365
01:30:50,720 --> 01:30:51,920
und

1366
01:30:51,920 --> 01:30:56,880
Wir können Batterie wir können Batterie ab abfragen so und der witz ist wir

1367
01:30:57,440 --> 01:31:03,120
Fragen von diesem sensor nichts ab außer der Batterie der sensor broadcasted alle 30 Sekunden

1368
01:31:03,120 --> 01:31:11,240
Sekunden licht aktuell aktuell licht und aktuell Temperatur das greifen wir einfach nur ab dass wir nicht unnötig Batterie kosten

1369
01:31:11,880 --> 01:31:13,880
also nicht unnötig Batterie

1370
01:31:14,040 --> 01:31:19,760
Drainen und alle fünf stunden alle fünf stunden updaten wir den sensor

1371
01:31:23,880 --> 01:31:31,620
Ja alle fünf stunden updaten mit dem sensor also wer schon immer mal wissen wollte was fünf stunden in in mikrosekunden sind

1372
01:31:31,620 --> 01:31:35,300
Der weiß es jetzt 18 Milliarden mikrosekunden ist sind fünf stunden

1373
01:31:37,140 --> 01:31:39,780
Peppo g leute wird nachher auch abgefragt

1374
01:31:41,220 --> 01:31:43,220
Das ist das ist die frage für nubs

1375
01:31:44,260 --> 01:31:48,140
Ihr kennt es ja lehrer machen das immer so sie machen immer so ein paar easy easy questions rein

1376
01:31:48,740 --> 01:31:52,580
Dass sie nubs auch ein paar punkte bekommen das ist später die frage die ich dann auch mache

1377
01:31:53,380 --> 01:31:55,380
was nicht pep o g

1378
01:31:55,380 --> 01:32:04,340
Peppo g natürlich pep o g das ist die frage die ich nachher auch dann stellen werde hier was sind fünf stunden in mikrosekunden

1379
01:32:07,460 --> 01:32:09,460
So

1380
01:32:09,460 --> 01:32:16,740
Das funktioniert alles deswegen minimiere ich das ich wollte jetzt den ganzen krempel an mein home assistant per mqtt schicken also sprich

1381
01:32:16,980 --> 01:32:18,980
Das ist mein test home assistant

1382
01:32:19,700 --> 01:32:22,740
Wo wir letztens mal auch den stromverbrauch versucht haben

1383
01:32:22,740 --> 01:32:29,300
rein zu pumpen das ist mein test home assistant wir gucken jetzt dass wir das ganze per mqtt an den home assistant geschickt bekommen

1384
01:32:31,220 --> 01:32:33,220
Per mqtt

1385
01:32:35,860 --> 01:32:37,860
Die die twitch viewer

1386
01:32:38,500 --> 01:32:46,260
Spacken auch ganz schön rum gerade oder wenn ich mir das hier angucke eben war es 130 jetzt in 234 ohne host

1387
01:32:47,220 --> 01:32:49,220
twitch please

1388
01:32:49,460 --> 01:32:51,460
Was ist da los?

1389
01:32:51,460 --> 01:32:55,380
Was ist da los wieder? Ich glaube es war die ganze zeit schon so was in dem dreh

1390
01:32:56,580 --> 01:32:58,580
Nun das twitch wieder das nicht gecheckt hat

1391
01:33:06,820 --> 01:33:14,180
Weil vorher war es auch schon 200 und auf einmal ist es instant gejobbed auf 130 jetzt wieder hoch und weiß nicht viewbots

1392
01:33:16,580 --> 01:33:20,340
So da sind wir vorher stehen geblieben wir sind stehen geblieben bein wir connect

1393
01:33:20,340 --> 01:33:24,820
Per wi-fi und wir wollen den kram selbst machen wir connecten uns per wi-fi

1394
01:33:25,540 --> 01:33:26,740
zum

1395
01:33:26,740 --> 01:33:33,860
Wlan haben wir schon gemacht guck wenn ich den controller mal resetter mit dem knopf dann sieht man connecting wi-fi bla bla bla bla

1396
01:33:34,820 --> 01:33:36,260
ip

1397
01:33:36,260 --> 01:33:38,660
1221 68 60 15 114

1398
01:33:40,660 --> 01:33:42,660
Ah gut

1399
01:33:43,460 --> 01:33:45,460
Nicht zu sagen

1400
01:33:45,460 --> 01:33:47,460
exzellent

1401
01:33:47,460 --> 01:33:49,460
Warum gibt es eigentlich?

1402
01:33:49,460 --> 01:33:51,460
eigentlich nicht

1403
01:33:51,460 --> 01:33:53,460
äh

1404
01:33:53,460 --> 01:33:58,500
Printeln das wäre dann warum gibt es nicht sowas das wäre dann

1405
01:33:59,460 --> 01:34:02,340
Newline text und noch mal newline hinten dran printen

1406
01:34:05,700 --> 01:34:10,660
Sowas sollte mal erfunden werden ich bin bestimmt nicht der einzige der sowas schon mal sich überlegt hat

1407
01:34:10,660 --> 01:34:13,940
Okay, ich bin ich der einzig das ich das schon überlegt hat

1408
01:34:14,820 --> 01:34:20,260
Aber nicht wie leute guckt mal vier ergebnisse auf google sonst nix

1409
01:34:21,940 --> 01:34:23,940
Gleich guitar projekt erstellen

1410
01:34:23,940 --> 01:34:39,940
Ergebnisse auf google sonst nix gleich guitar projekt erstellen printeln

1411
01:34:42,660 --> 01:34:44,740
Okay also weiter im text

1412
01:34:44,740 --> 01:34:49,460
Ich wollte das ganze per mqtt an mein home assistant schicken

1413
01:34:50,980 --> 01:35:00,180
Also wir verbinden uns per wlan passt wir geben die ip aus passt auch so das heißt jetzt wird's big brain nämlich

1414
01:35:01,700 --> 01:35:08,660
Wenn man per home assistant per mqtt was schicken will dann ist das format ein bisschen

1415
01:35:08,660 --> 01:35:13,380
Paintschamp ich zeige euch das mal

1416
01:35:17,620 --> 01:35:20,580
Es gibt nämlich zwei verschiedene varianten wie man das machen kann

1417
01:35:22,420 --> 01:35:26,180
Also wie gesagt home assistant ist hier die heim automatisierungslösung die ich verwende

1418
01:35:26,980 --> 01:35:34,260
Und man kann dort über mqtt geräte anlegen lassen und das versuche ich jetzt mal also ich weiß wie es geht also ich kann das copy pasten

1419
01:35:34,260 --> 01:35:41,540
Also sprich wir lesen jetzt hier die sensoren aus übertragen die da ein home assistant dass ich dass ich dort was mit anfangen kann

1420
01:35:42,020 --> 01:35:49,620
Ja, dass ich dort im dashboard machen kann oder was auch immer also die werte übertragen wir die heim automatisierung so es die haben so einen die haben so einen

1421
01:35:51,220 --> 01:35:53,780
So ein eigenes protokoll wie man geräte anlegt

1422
01:35:55,060 --> 01:35:59,860
Das sieht ungefähr so aus ja man muss erst mal sagen was für ein gerät man anlegt

1423
01:35:59,860 --> 01:36:03,620
Dann darf dann kann man ihm sagen wie das heißen soll

1424
01:36:04,420 --> 01:36:09,060
Und dann muss man ihm sagen was das für ein gerät ist in dem fall ist es in motion detection

1425
01:36:09,460 --> 01:36:16,180
Es gibt auch noch einen energie monitor oder was auch immer man kann noch einen namen vergeben und man kann ihm sagen wo er in zukunft den

1426
01:36:16,180 --> 01:36:18,660
Aktuellen status zu dem gerät findet das ist

1427
01:36:19,220 --> 01:36:25,460
Allerdings nicht die ganze wahrheit es gibt noch die neuere variant die hier gar nicht drinne steht

1428
01:36:25,460 --> 01:36:33,860
In dieser doku man kann nicht nur einzelne sensoren anlegen über über mqtt also das wäre zum beispiel ein einzelner sensor

1429
01:36:34,820 --> 01:36:41,220
Zum beispiel hier diesen sensor haben wir haben das letzte mal von hand angelegt über mqtt hier sensor watt schämen first floor energy

1430
01:36:41,460 --> 01:36:44,020
Das war wo ich mein stromzähler ausleser getestet habe

1431
01:36:44,580 --> 01:36:50,740
Das ist das ist die halbe wahrheit es gibt eine neuere variant die ist viel besser die ist aber ein bisschen komplizierter in

1432
01:36:50,740 --> 01:36:55,060
Ist auch jason was man hinschicken muss aber ist ein bisschen komplizierter und zwar

1433
01:36:55,860 --> 01:36:59,140
Man kann ein komplettes gerät erstellen lassen

1434
01:36:59,860 --> 01:37:07,140
Über über mqtt im home assistant das steht als komplettes gerät da drinne mit unterschiedlichen sensoren das heißt ich weiß auch

1435
01:37:07,380 --> 01:37:13,780
Zu welchem gerät dieser sensor gehört und das ist richtig big brain und das ist das wie es alle aktuellen integrationen machen

1436
01:37:14,100 --> 01:37:17,380
Und wie ich das auch machen will ich weiß auch wie es bei mqtt ist

1437
01:37:17,380 --> 01:37:24,420
Und wie ich das auch machen will ich weiß auch wie es prinzipiell funktioniert weil ich habe das schon mal gemacht das muss ich jetzt nebenbei abgucken

1438
01:37:25,380 --> 01:37:27,380
so

1439
01:37:29,220 --> 01:37:34,260
Was soll das programm erzielen das erzielt schon folgendes ich habe einen sensor für

1440
01:37:35,620 --> 01:37:37,620
bodenfeuchtigkeit temperatur und lichteinstrahlung

1441
01:37:38,580 --> 01:37:43,340
Und da lese ich aktuell die werte draus aus wobei ich die werte nicht auslese

1442
01:37:43,340 --> 01:37:51,260
Sondern der sensor broadcast die werte alle 30 sekunden und ich schneide die über bluetooth low energy low energy bluetooth mit

1443
01:37:52,180 --> 01:37:59,940
Das einzige was ich alle fünf stunden querier von jedem gerät ist die ist der batterie der batterie stand ja du siehst auch hier das gerät

1444
01:38:00,340 --> 01:38:01,620
broadcasted

1445
01:38:01,620 --> 01:38:03,620
munter vor sich hin

1446
01:38:04,900 --> 01:38:06,900
Der scan hängt schon wieder

1447
01:38:06,900 --> 01:38:13,940
scan startet warum wie wie kann das sein dass der scan startet und der scan nicht aufhört das ist doch ein bug oder

1448
01:38:14,260 --> 01:38:18,180
Oder wollte mich rollen ich habe kein bock dass das ding dass das ding crasht

1449
01:38:20,340 --> 01:38:25,220
Guck mal der scan hängt schon wieder dabei dabei soll der einfacher der soll nach fünf sekunden ausgehen

1450
01:38:25,220 --> 01:38:29,220
Nach fünf sekunden ausgehen

1451
01:38:34,180 --> 01:38:37,380
Was mal so vielleicht geht es dann besser

1452
01:38:40,180 --> 01:38:44,380
Was soll dadurch ermöglicht so habe ich ja ganz vergessen das ding kommt in kühlschrank

1453
01:38:45,180 --> 01:38:50,980
Anhand dem licht sensor erkenne ich ob ich die tür aufgelassen habe zumindest so weit dass es licht noch angeht

1454
01:38:50,980 --> 01:38:58,540
Und anhand der temperatur erkenne ich ob der kühlschrank irgendwelche probleme hat mein kühlschrank hat ein paar probleme da macht manchmal komische geräusche

1455
01:38:58,940 --> 01:39:04,860
Den muss man manchmal rebooten dass er richtig funktioniert das heißt ich habe meine bedenken er gibt der nix den geist auf und ich kriege es nicht

1456
01:39:04,860 --> 01:39:06,020
richtig mit

1457
01:39:06,020 --> 01:39:09,220
An anderer denkbarer fall wäre auch keine ahnung man hat

1458
01:39:10,020 --> 01:39:16,540
Stromprobleme oder irgendwie sonst wie was verstopft ist kaputt was auch immer man bekommt mit wenn der kühlschrank weil das ist halt

1459
01:39:16,540 --> 01:39:20,700
Low energy und wireless und

1460
01:39:22,140 --> 01:39:24,900
Da bekomme ich das quasi mit wenn man kühlschrank probleme hat und

1461
01:39:26,300 --> 01:39:29,460
Natürlich man lernt wie es geht das natürlich auch eine wichtige geschichte

1462
01:39:29,460 --> 01:39:42,460
So

1463
01:39:47,780 --> 01:39:49,780
Dann würde ich sagen nehmen wir mal los also

1464
01:39:50,660 --> 01:39:58,340
Das eigentlich auslesen funktioniert was der macht ist folgendes der scan nach geräten die sich melden wenn sich ein gerät also

1465
01:39:58,340 --> 01:40:05,660
Der scan nach einem nach einem sensor nach einer art dieser sensoren und wenn er einen sensor gesehen hat

1466
01:40:05,820 --> 01:40:10,720
Dann legt er eine neue neue sensor objekt an und speichert das hier in der map drinne

1467
01:40:11,900 --> 01:40:16,980
Und update ist dann sobald hier neue neue werte neue werte reinkommen

1468
01:40:17,140 --> 01:40:23,300
Und dann fragt er alle fünf stunden einmal den batteriestatus aktiv ab jetzt habe ich aber alles minimiert weil wir das nicht brauchen

1469
01:40:23,300 --> 01:40:28,300
so und jetzt

1470
01:40:30,820 --> 01:40:34,100
Aber mal verbindung zum mqtt server

1471
01:40:37,220 --> 01:40:41,980
Das ist ein minimaler mqtt rapper den ich selbst gebaut habe weil das so

1472
01:40:43,460 --> 01:40:44,780
Ja

1473
01:40:44,780 --> 01:40:53,500
It's it's mqtt weil das so pains champig ist das eingebaute mqtt zu verwenden von dem

1474
01:40:54,260 --> 01:41:00,660
Espressif framework ja aber das ist wirklich nicht großartig kompliziert hier gibt es zwei metoden publish eine message

1475
01:41:04,260 --> 01:41:09,100
Macht das nicht probleme weil du mehrere hast ja das deswegen mache ich es auch so wie ich es mache guck mal

1476
01:41:09,100 --> 01:41:15,620
Der scannt der scannt nach geräten so der findet ein gerät was er dann macht ist

1477
01:41:18,220 --> 01:41:20,220
Was er dann macht moment

1478
01:41:20,620 --> 01:41:27,460
Sobald ein gerät gefunden hat nicht immer noch am basteln schon wieder ich muss zwischendurch weg reifen wechsel ich habe jetzt erst wieder

1479
01:41:27,460 --> 01:41:31,420
angefangen vor zehn minuten ich bin zwar schon länger ordn aber davor habe ich sinnlos rumgeschwätzt

1480
01:41:31,740 --> 01:41:38,140
So und sobald ein gerät gefunden hat speichert das in dieser in dieser map drin das heißt wenn ein zweites gerät findet speichert das da auch

1481
01:41:38,140 --> 01:41:43,180
Drinne das geht mit beliebig vielen geräten bis der ram von dem gerät alle bis der ram vom controller alles

1482
01:41:44,740 --> 01:41:50,540
So und jetzt wollen wir das ganze mal per mqtt an homosystem zu schicken zur wlan verbindung funktioniert schon mal

1483
01:41:52,500 --> 01:41:58,140
Das heißt wir legen jetzt mal ein mqtt server objekt an machen wir das hinten mal weg

1484
01:42:00,020 --> 01:42:02,020
Also

1485
01:42:02,340 --> 01:42:04,340
Helper it's

1486
01:42:04,340 --> 01:42:06,340
Hallo

1487
01:42:08,860 --> 01:42:14,020
Ich sollte das mal in namespace stecken das habe ich nämlich normalerweise

1488
01:42:15,500 --> 01:42:21,020
Namespace namespace ist ein richtig richtiger pains champ in c++ sag es euch

1489
01:42:25,940 --> 01:42:27,940
Helper

1490
01:42:27,940 --> 01:42:33,540
It's mqtt so und wir brauchen den server

1491
01:42:35,580 --> 01:42:41,980
User und ein password also server ist mqtt doppelt punkt doppelt slash

1492
01:42:42,820 --> 01:42:44,820
192 168

1493
01:42:44,820 --> 01:42:50,180
So ich bin jetzt gar nicht sicher ob ich da port mit angehen musste oder nicht wie habe ich das noch mal gebastelt

1494
01:42:50,420 --> 01:42:55,780
Brauche ich ein port ne default port nimmt da standardmäßig ok alles klar brauche ich kein port und ich brauche nicht mehr

1495
01:42:56,100 --> 01:42:58,580
MQTT davor zu schreiben weil er das automatisch macht

1496
01:43:01,420 --> 01:43:03,420
So

1497
01:43:03,420 --> 01:43:05,420
So

1498
01:43:05,420 --> 01:43:07,420
So

1499
01:43:07,420 --> 01:43:09,420
So

1500
01:43:09,420 --> 01:43:11,420
So

1501
01:43:11,420 --> 01:43:15,420
So

1502
01:43:16,420 --> 01:43:20,780
Dann brauche ich ein password. Ich glaube ich atme 1 2 3 4 5 6 so wie ich mich kennen

1503
01:43:22,340 --> 01:43:25,220
So wie ich mich kenn habe ich dann nix sinnvolles für vergeben

1504
01:43:26,980 --> 01:43:30,360
Atmen 1 2 3 4 5 6 ja wer hätte denn was anderes erwarten können

1505
01:43:32,320 --> 01:43:33,820
War klar

1506
01:43:33,820 --> 01:43:36,640
Moin dm drill 40

1507
01:43:36,640 --> 01:43:48,760
exzellent so jetzt sollte er sich dahin verconnecten und jetzt müsste ich sachen schicken können

1508
01:43:48,760 --> 01:43:58,600
probieren wir das mal aus probieren wir das mal aus sub wir machen da wir lauschen mal an allem

1509
01:43:58,600 --> 01:44:03,840
der wattchamp mehr ist da nicht drinnen außer das was wir das letzte mal schon geschickt haben so

1510
01:44:03,840 --> 01:44:08,200
wir publishen jetzt einfach testweise meine message und gucken ob das funktioniert

1511
01:44:08,200 --> 01:44:21,920
machen wir einfach hier mqtt publish topic keckw message 12345 oder so

1512
01:44:21,920 --> 01:44:30,880
so und das sollte jetzt eigentlich hier gleich rauskommen ach fuck ne das funktioniert ja nicht

1513
01:44:30,880 --> 01:44:39,040
ich habe den exis point umgestöpselt ich habe den exis point in in das in das wlan wlan gesteckt

1514
01:44:39,040 --> 01:44:49,240
und davon habe ich jetzt ja keinen zukunft mehr auf die kiste chat seid ihr schon drinnen ja

1515
01:44:49,240 --> 01:45:01,120
okay äußerst interessant dass der keine fehlermeldung schmeißt wenn er nicht

1516
01:45:01,120 --> 01:45:14,720
connecten kann ah doch hier guck mal mqtt timeout ok alles gut funktioniert nicht

1517
01:45:14,720 --> 01:45:22,480
ich muss mal kurz eine feierball freischaltung machen auf dem zweiten bildschirm auf die kiste

1518
01:45:22,480 --> 01:45:45,040
was habe ich gesagt 1 2 1 6 8 2 punkt 100 300 ja hier ok kurz kurz freischaltung machen zack

1519
01:45:45,040 --> 01:46:12,600
mqtt destination 2 1 3 9

1520
01:46:16,040 --> 01:46:18,120
so

1521
01:46:18,120 --> 01:46:29,480
protokoll tcp destination port 1883 was ist die fault mqtt 1883 oder

1522
01:46:32,480 --> 01:46:34,200
ja ok

1523
01:46:34,200 --> 01:46:42,680
ok destination address absender wlan hier xy

1524
01:46:42,680 --> 01:46:54,720
2 1 3 9 ok es sollte jetzt funktionieren

1525
01:46:54,720 --> 01:46:59,240
guck mal feierball freischaltung gemacht schon funktioniert

1526
01:46:59,240 --> 01:47:13,240
gut also ich kann sachen publishen gut jetzt muss ich noch einbauen dass der was

1527
01:47:13,240 --> 01:47:17,320
heißt nur noch nur noch einbauen dass der home assistant kompatible

1528
01:47:17,320 --> 01:47:23,000
sensordaten published ok das funktioniert also wie man das macht kann ich euch zeigen

1529
01:47:23,000 --> 01:47:33,480
das copy paste ich mir aber mal oder ich gucke mir das zumindest ab wie das funktioniert also

1530
01:47:33,480 --> 01:47:39,680
wir brauchen zwei metoden die zwei zwei funktionen jetzt an der chat wir wissen ja wir schreiben

1531
01:47:39,680 --> 01:47:54,640
nach einer arbeit darüber was ist der unterschied zwischen einer methode und einer funktion oh das

1532
01:47:54,640 --> 01:48:05,840
dauert schon zu lang das gibt abzüge ich sage es euch ist das gleiche fast es ist nicht wirklich

1533
01:48:05,840 --> 01:48:12,800
viel unterschied im prinzip ist es das gleiche mit einem einzigen unterschied ja ja richtig

1534
01:48:12,800 --> 01:48:20,440
captain peng kennt sich aus exzellent exzellent nee was auch immer falsches emote aber ja das

1535
01:48:20,440 --> 01:48:31,800
ist richtig also metoden sind funktionen innerhalb von der klasse oder funktionen die bestandteil

1536
01:48:31,800 --> 01:48:37,000
von einer klasse sind sind metoden warum auch immer man das so genannt hat keine ahnung

1537
01:48:37,000 --> 01:48:43,560
es haben sich mal irgendwelche big brain leute ausgedacht das ist aber so ist es nicht innerhalb

1538
01:48:43,560 --> 01:48:52,960
von objekten korrekt korrekt jetzt wird es aber jetzt wird aber ganz ganz genau ja also

1539
01:48:52,960 --> 01:49:05,920
wir brauchen zwei sachen und zwar wir brauchen einmal was mqtt publish announce und wir brauchen

1540
01:49:05,920 --> 01:49:16,360
sowas in der richtung wie mqtt publish value so weil man muss man muss dass man home assistant

1541
01:49:16,360 --> 01:49:22,800
compatible sensor daten veröffentlichen kann sodass das dann hier drinne steht muss man

1542
01:49:22,800 --> 01:49:29,160
das in zwei schritten machen man muss einmal das gerät anlegen von dem das gesendet wird

1543
01:49:29,160 --> 01:49:33,200
dass es als erkannt wird diese sensor daten kommen alle vom gleichen gerät drin für

1544
01:49:33,200 --> 01:49:39,520
neun stange für den sub und dann muss man regelmäßig neue werte publishen so nachdem

1545
01:49:39,520 --> 01:49:43,880
wir da jetzt jason sachen machen müssen werde ich mal eine library hinzufügen nämlich es

1546
01:49:43,880 --> 01:50:02,560
gibt eine das will einfach nicht mehr es hat gedacht kein bock nur mal sicherstellen dass

1547
01:50:02,560 --> 01:50:30,680
es auch weg ist hat es kann man visual studio geupdatet gut nice sehr gut excellent hast

1548
01:50:30,680 --> 01:50:35,040
du eigentlich auch kontakt mit fedor all of cookies wir hatten nie großartig kontakt so

1549
01:50:35,040 --> 01:50:41,760
mal ganz vereinzelt aber nie habe ich in letzter zeit habe ich nicht wirklich mit ihm gesprochen

1550
01:50:41,760 --> 01:50:54,760
also schon ewig her so sind wir stehen geblieben wir wollen sensor daten publishen genau weil

1551
01:50:54,760 --> 01:50:58,720
dann hatten wir den vorteil dass das hier als einzelnes gerät auftaucht das heißt

1552
01:50:58,720 --> 01:51:08,720
ich habe da ein gerät hier drin stehen nämlich den cool champ in dem fall warum haben wir

1553
01:51:08,720 --> 01:51:14,780
den eigentlich cool champ genannt weil es für kühlschrank ist der cool champ so ich

1554
01:51:14,780 --> 01:51:24,600
brauche eine library für jason kram weil jason zu schreiben mit c++ string manipulation

1555
01:51:24,600 --> 01:51:37,160
es sagt deswegen nehmen wir einfach das hier hinzufügen in den cool champ gut und jetzt

1556
01:51:37,160 --> 01:51:42,000
können wir nämlich anfangen also wir müssen jetzt erstmal ankündigen wenn es einen neuen

1557
01:51:42,000 --> 01:51:47,680
sensor gibt zu welchem gerät das ganze gehört da muss ich mir jetzt ein paar sachen copy

1558
01:51:47,680 --> 01:51:54,880
pasten und zwar wir brauchen einmal den name von dem für das gerät beziehungsweise nicht

1559
01:51:54,880 --> 01:52:00,840
für das gerät wir brauchen einen namen für den sensor das projekt hieß doch anfangs

1560
01:52:00,840 --> 01:52:05,360
noch flora champ ja kann sein aber der chat hat gesagt ich soll uns unbedingt cool champ

1561
01:52:05,360 --> 01:52:16,360
ich habe das halt auch mal gemacht ja ich weiß ich weiß es ist meistens keine gute

1562
01:52:16,360 --> 01:52:24,480
idee auf den chat zu hören aber in dem fall fand ich cool champ lustiger so also wir brauchen

1563
01:52:24,480 --> 01:52:30,440
dann ein name für den sensor wenn man den ankündigen wir brauchen eine device class

1564
01:52:30,440 --> 01:52:39,440
das ist in home assistant so das habe ich glaube ich vorher schon gezeigt dass es das

1565
01:52:39,440 --> 01:52:44,840
home assistant weiß wie er das ganze darstellen soll da gibt es dann so sachen wie batteriestatus

1566
01:52:44,840 --> 01:52:50,360
energie luftfeuchtigkeit licht signalstärke und so ich muss ihm also sagen was das ist

1567
01:52:50,360 --> 01:52:57,080
und ich muss ihm sagen welche einheit das ganze hat so und jetzt machen wir ein bisschen

1568
01:52:57,080 --> 01:53:04,800
jason magic das copy paste das copy paste ich mir jetzt hier an der stelle einfach mal also

1569
01:53:04,800 --> 01:53:11,000
man braucht einen state topic das ist das was home assistant sagt unter welchem mqtt

1570
01:53:11,000 --> 01:53:19,440
fahrt er dann den neuen status für den jeweiligen sensor findet wie willst du den sensor anbinden

1571
01:53:19,440 --> 01:53:28,880
easy das alles schon fertig ich schmeiß dieses ding im kühlschrank ja ich krieg ich brauche

1572
01:53:28,880 --> 01:53:36,040
kein wlan signal das ist low energy bluetooth allerdings ist das beides 2,4 gigahertz aber

1573
01:53:36,040 --> 01:53:45,120
wir haben es ausprobiert es geht ohne problem aus dem kühlschrank raus funktioniert aber

1574
01:53:45,120 --> 01:53:49,200
schon ausprobiert was ist die reichweite von dem teil naja ich bin so ungefähr würde

1575
01:53:49,200 --> 01:53:58,120
ich mal sagen fünf meter vielleicht weg oder so viel weiter wird es nicht gehen funktioniert

1576
01:53:58,120 --> 01:54:04,000
in home assistant dann die mqtt autodiscovery genau deswegen das programmieren wir gerade

1577
01:54:04,000 --> 01:54:09,520
dass die autodiscovery funktioniert inklusive neustart überleben und dass alles vom dass

1578
01:54:09,520 --> 01:54:14,480
man sieht dass alles vom gleichen gerät kommt also man muss erstmal man braucht eine name

1579
01:54:14,480 --> 01:54:21,600
für den sensor ja also sowas wie sowas wie cool champ dann mech oder so von dem jeweiligen

1580
01:54:21,600 --> 01:54:30,480
gerät ok also man braucht eine name für den für den jeweiligen sensor dann braucht man

1581
01:54:30,480 --> 01:54:39,720
als nächstes ein identifier und identifier müssen wir ein bisschen mehr muss man bisschen

1582
01:54:39,720 --> 01:54:46,080
big brainiger machen jetzt fragt ihr euch natürlich was ist der unterschied zwischen

1583
01:54:46,080 --> 01:54:52,680
dem state topic und dem identifier der unterschied ist dass der identifier einheitlich gleich

1584
01:54:52,680 --> 01:54:58,680
sein muss für alle sensoren von der gleichen hardware nur dann werden die zusammengefasst

1585
01:54:58,680 --> 01:55:05,720
zu hier in der config quasi eine hardware hat 20 sensoren das heißt der identifier

1586
01:55:05,720 --> 01:55:11,160
muss für alle muss für alle sensoren die ich hier anlege gleich sein also sprich der

1587
01:55:11,160 --> 01:55:15,400
identifier ist quasi das was die hardware identifiziert wo die sensoren dran hängen

1588
01:55:15,400 --> 01:55:19,880
jetzt mal sinnbildlich die hängen nicht wirklich da dran aber die hardware die sensoren meldet

1589
01:55:19,880 --> 01:55:25,040
so nennen wir es mal identifier so und dann brauchen wir also jetzt müssen wir uns überlegen

1590
01:55:25,040 --> 01:55:30,080
wie setzen wir das zusammen dass das das das unic ist ja also das sprich dass alle geräte

1591
01:55:30,080 --> 01:55:34,920
die die sich die sich melden also sprich wenn ich mal ein weiteres projekt habe der watt

1592
01:55:34,920 --> 01:55:38,440
champ zum beispiel ist auch drin dass sie einheitliche namen haben und ich habe mich

1593
01:55:38,440 --> 01:55:41,960
jetzt für folgendes entschieden ich mache erst mal ein projektname rein in dem fall

1594
01:55:41,960 --> 01:55:54,440
ist es der cool champ cool champ underscore bei ja so dann schreibe ich rein das mache ich

1595
01:55:54,440 --> 01:55:59,040
übrigens das habe ich beim watt champ auch so gemacht dass ich es erkenne esp 32 habe

1596
01:55:59,040 --> 01:56:02,840
ich schreibe noch die plattform rein underscore beide weil ich könnte den underscore ohne

1597
01:56:02,840 --> 01:56:11,200
problem auch hier hin machen underscore bin das nächste mal für einen mikrowellensensor

1598
01:56:11,200 --> 01:56:18,280
sowas gibt es es gibt ultraschall sensor mikrowellensensor keine ahnung ob sowas gibt aber ultraschall

1599
01:56:18,280 --> 01:56:25,440
sensoren gibt es ist für reichweitenmessung ganz gut so dann jetzt jetzt kommt ein bisschen

1600
01:56:25,440 --> 01:56:42,200
jetzt kommt ein bisschen magic und zwar wir nehmen esp mech so also die bezeichnung für

1601
01:56:42,200 --> 01:56:51,840
unsere hardware ist immer projektname hardware name und die netzwerk mech vom controller

1602
01:56:51,840 --> 01:56:57,440
das bedeutet diese kombination ist ziemlich garantiert weltweit unic und ich muss mir

1603
01:56:57,440 --> 01:57:00,800
keine gedanken machen bei weiteren projekten dass ich da irgendwie mal doppelte sachen

1604
01:57:00,800 --> 01:57:10,560
bekomme so dann brauchen wir als nächstes jeder sensor braucht eine eigene id warum

1605
01:57:10,560 --> 01:57:16,640
das neben einem eigenen topic noch mal eine eigene id braucht weiß ich nicht aber home

1606
01:57:16,640 --> 01:57:27,560
assistant sagt dass man das braucht kann man das hier nehmen also dies unic sensor id

1607
01:57:27,560 --> 01:57:38,440
ist quasi der name vom sensor plus der identifier von der hardware genau so als nächstes braucht

1608
01:57:38,440 --> 01:57:46,080
man ein availability topic das ist das was home assistant sagt ob das gerät offline

1609
01:57:46,080 --> 01:57:50,360
oder online ist ohne funktioniert es btw nicht ich finde es ein bisschen schade dass

1610
01:57:50,360 --> 01:57:56,520
sie das schlecht dokumentiert haben man kommt man findet da irgendwie nicht so viel so danach

1611
01:57:56,520 --> 01:58:08,480
braucht man ein config topic das ist auch magic das ist jetzt nicht für den sensor

1612
01:58:08,480 --> 01:58:16,640
state sondern das ist zum einmaligen anlegen von diesem sensor weil so und jetzt kommt

1613
01:58:16,640 --> 01:58:22,360
jason gedöns ich copy paste mir das jetzt einfach mal und dann erkläre ich was es macht

1614
01:58:22,360 --> 01:58:26,120
weil ich habe das schon mal gemacht ich kriege das jetzt nicht noch mal hier zusammen gereimt

1615
01:58:26,120 --> 01:58:32,160
und ich das kopiere also wir brauchen ein jason dokument das ist das wird eine funktion stink

1616
01:58:32,160 --> 01:58:36,880
normale funktion man könnte das auch schön kapseln in irgendeiner klasse wir legen den

1617
01:58:36,880 --> 01:58:41,040
jason dokument an was ich übrigens noch mal tun muss dass es funktioniert

1618
01:58:41,040 --> 01:58:53,600
und wie nur jason perfekt jetzt sollte das eigentlich erkennen hoffe ich mal oder auch

1619
01:58:53,600 --> 01:59:02,440
nicht hat er erkannt exzellent so jason dokument da legen wir den neuen key an availability

1620
01:59:02,440 --> 01:59:05,800
ich werde es übrigens gleich mal unten drunter dann printen dass man sieht wie das wie das

1621
01:59:05,800 --> 01:59:11,240
jason aussieht was ich da hinschicke key availability und da drinne legen wir neues objekt an also

1622
01:59:11,240 --> 01:59:18,080
sprich das ist dann quasi sowas hier neues objekt und da drinne steht dann availability

1623
01:59:18,080 --> 01:59:22,480
und das ist wiederum ein eigenes jason array weil das halt so aussehen muss wie es aussieht

1624
01:59:22,480 --> 01:59:30,520
und da legen wir objekt an und das brauchen ein topic und dann verweisen wir auf dieses

1625
01:59:30,520 --> 01:59:40,200
topic den anderen kram kopiere ich jetzt auch einfach mal

1626
01:59:40,200 --> 01:59:45,520
das nächste ist was die hardware identifiziert das muss überall gleich sein also da kann

1627
01:59:45,520 --> 01:59:52,400
ich mir ausdenken aber der identifier muss überall gleich sein

1628
01:59:52,400 --> 01:59:58,200
dann lege ich den sensor somit an habe ich das nicht unit genannt überhaupt geht das

1629
01:59:58,200 --> 02:00:19,480
nicht unit ist undefined ach ich hab keck wait unit alter ich kann ja mal schreiben string

1630
02:00:19,480 --> 02:00:27,560
wind so da muss man auch die plattform setzen über das das ganze gemeldet wird ok so und

1631
02:00:27,560 --> 02:00:34,760
als letztes muss man diese zwei sachen publishen habe ich oben mqtt angelegt jawoll als am ende

1632
02:00:34,760 --> 02:00:43,520
muss man die muss man zwei sachen publishen habe ich doch am ende muss man zwei sachen

1633
02:00:43,520 --> 02:00:56,800
publishen geht das nicht ah low brain ich kann kein jason dokument direkt publishen ok

1634
02:00:56,800 --> 02:01:03,160
das ergibt sinn also am ende muss man publishen dieses komplette ding dieses komplette jason

1635
02:01:03,160 --> 02:01:08,020
und man muss das availability topic auf online setzen dass es funktioniert wir überschreiben

1636
02:01:08,020 --> 02:01:14,360
das an der stelle noch mal schnell und ich kann das ich guck das ich guck das jetzt auch

1637
02:01:14,360 --> 02:01:26,960
einfach mal schnell ab ich das wie ich das gemacht habe publish aha so habe ich das

1638
02:01:26,960 --> 02:01:45,000
gemacht kann ich auch jason documents direkt publishen ok wunderbar so und jetzt sollte

1639
02:01:45,000 --> 02:01:48,720
der sensor in home assistant angelegt werden jetzt können wir gleich mal ausprobieren

1640
02:01:48,720 --> 02:01:54,320
ob das ganze funktioniert wir legen den sensor jetzt nur an und bei jedem neuen bei jedem

1641
02:01:54,320 --> 02:02:03,480
neuen wert den das sensor bekommt das muss ich dann pushen hier drinnen das ist dann

1642
02:02:03,480 --> 02:02:11,840
aber einfacher das sieht dann im endeffekt einfach nur noch so aus das denke ich mir

1643
02:02:11,840 --> 02:02:15,920
nicht aus das habe ich schon mal gemacht weil dieses format ist echt nicht ohne dahinter

1644
02:02:15,920 --> 02:02:25,480
zu kommen wenn es spannend und satisfying ist ja das ist ja nice so also jetzt können

1645
02:02:25,480 --> 02:02:33,760
wir den sensor anlegen ich würde sagen sobald dann den sensor discovered muss ich mal kurz

1646
02:02:33,760 --> 02:02:40,360
gucken wie machen das jetzt am besten so also sobald dann den sensor sensors irgendwie

1647
02:02:40,360 --> 02:02:50,040
add oder sowas genau also sobald denn den sensor das erste mal erkennt publishen wir

1648
02:02:50,040 --> 02:02:56,960
das also sagen wir mqtt announce so was brauchen wir name da bin ich mir nur jetzt sicher was

1649
02:02:56,960 --> 02:03:07,920
wir machen ja lithium source ist pence champ ich weiß ja so wir machen also sensor wir

1650
02:03:07,920 --> 02:03:22,000
brauchen drei sensoren wir brauchen temperature unit ist ja grad Celsius wir brauchen battery

1651
02:03:22,000 --> 02:03:30,160
unit ist prozent und wir brauchen das kann ich nicht schreiben da muss ich nachgucken

1652
02:03:30,160 --> 02:03:34,880
illuminance das haben wir gestern gelernt wie man es ausspricht ich kann es immer noch

1653
02:03:34,880 --> 02:03:41,600
nicht aussprechen das ist ein lux und jetzt muss ich den namen generieren und die einzig

1654
02:03:41,600 --> 02:03:47,440
sinnvolle variante der name für den sensor zu generieren ist die meck die meck adresse

1655
02:03:47,440 --> 02:03:57,400
zu nehmen von dem jeweiligen flora sensor weil ansonsten hast du nichts was unique ist

1656
02:03:57,400 --> 02:04:10,560
wir können es aber testweise mal so machen temp 2 bad 3 elu oder so dass wir einfach

1657
02:04:10,560 --> 02:04:15,760
mal gucken ob er das denn anlegt so jetzt attachen wir uns an den mqtt broker und gucken

1658
02:04:15,760 --> 02:04:23,840
mal ob das anlegen prinzipiell funktioniert oder obs monka smoke macht also von der idee

1659
02:04:23,840 --> 02:04:44,640
auf fack was da ist es doch das ist zu weit unten pence champiges c++ das muss irgendwie

1660
02:04:44,640 --> 02:05:03,880
hier oben hin oder was ja mein wegen machst du jetzt was hat jetzt für schmerzen also

1661
02:05:03,880 --> 02:05:08,360
schauen ob das funktioniert wenn alles funktioniert sollte ich jetzt ich bin mir relativ sicher

1662
02:05:08,360 --> 02:05:15,520
dass funktioniert weil ich habe es schon gemacht mit dem also da wo ich her copy pastet habe

1663
02:05:15,520 --> 02:05:21,200
wenn alles funktioniert sollte ich jetzt ein gerät bekommen wo dann alles drinne steht

1664
02:05:21,200 --> 02:05:28,040
für die sensoren erst mal muss das gen aber erfolgreich sein dass er eine mqtt nachricht

1665
02:05:28,040 --> 02:05:49,680
schickt

1666
02:05:49,680 --> 02:06:01,760
warum ist es gecrasht

1667
02:06:01,760 --> 02:06:23,240
was ist das problem kann das sein eigentlich nicht warum crash das

1668
02:06:23,240 --> 02:06:37,840
warum crash das und und und arduino jason äh warum genau crash das ok wir machen das

1669
02:06:37,840 --> 02:06:42,560
mal anders ich mach das mal nicht hier in diesem bluetooth ding drinne wir machen das

1670
02:06:42,560 --> 02:06:55,720
immer hier im setup

1671
02:06:55,720 --> 02:06:59,320
da ist nämlich noch kein bluetooth am start nicht dass ich das jetzt in die quere kommt

1672
02:06:59,320 --> 02:07:05,000
wenn ich das der wähler an was schicken will während das bluetooth zeug hier dinger macht

1673
02:07:05,000 --> 02:07:12,280
da muss man ein bisschen aufpassen aber schauen wir mal also jetzt jetzt kann ihm ja kein bluetooth

1674
02:07:12,280 --> 02:07:17,280
in die quere kommen wenn es jetzt wieder crash dann habe ich auf jeden fall mich irgendwie

1675
02:07:17,280 --> 02:07:27,720
verkoppi pace und hab irgendeinen bug drin so connecting wifi und jetzt connecting please

1676
02:07:27,720 --> 02:07:37,480
ah guck jetzt hat er veröffentlicht der cool champ guck ein device ein device gefunden

1677
02:07:37,480 --> 02:07:43,200
der cool champ mit drei sensoren und ich weiß nicht wer im chat gefragt hat aber ja das

1678
02:07:43,200 --> 02:07:51,120
siehste so erkennst du homos ist dann richtig er erkennt es ist ein gerät mit drei sensoren

1679
02:07:51,120 --> 02:07:58,560
wenn man das so veröffentlicht das ist nice oder also im prinzip so so muss das so muss

1680
02:07:58,560 --> 02:08:06,520
das machen so jetzt habe ich natürlich ein problem warum warum hat es warum äh kack

1681
02:08:06,520 --> 02:08:15,600
das mit beim scannen ab ich hab ne idee woran das liegt wir machen das so äh wir werden

1682
02:08:15,600 --> 02:08:18,400
das wir werden das folgendermaßen machen wir machen wir machen einfach ein paar sleeps

1683
02:08:18,400 --> 02:08:30,960
rein andere chance haben wir gar nicht wir machen wir machen ein paar sleeps rein wobei

1684
02:08:30,960 --> 02:08:35,160
vielleicht kann man das gar nicht vielleicht kann ich gar kein wlan schicken hier im hier

1685
02:08:35,160 --> 02:08:49,440
im im bluetooth zeug ok ich sollte auf jeden fall mal zwei sachen machen noch wobei ich

1686
02:08:49,440 --> 02:08:55,560
greife dann ja nicht parallel drauf zu ne ich greife nicht parallel drauf zu es ist

1687
02:08:55,560 --> 02:09:00,600
eigentlich muss ich das überhaupt nicht locken macht es ja ich macht es ja nacheinander ich

1688
02:09:00,600 --> 02:09:08,360
mache den scan und dann mache ich und dann mache ich die schleife also ok wir machen

1689
02:09:08,360 --> 02:09:17,480
leute wir machen hier oben noch mal ein delay hin hier oben noch mal ein delay hin so einfach

1690
02:09:17,480 --> 02:09:38,920
mal ein bisschen ja gut was anderes fällt mir jetzt nicht ein der scan sollte ich das

1691
02:09:38,920 --> 02:09:46,160
vielleicht umdrehen sollte ich das vielleicht umdrehen zuerst scannen und dann das hier

1692
02:09:46,160 --> 02:09:56,960
machen mit dem update von dem sensor und dann warten ok gucken wir mal das ist natürlich

1693
02:09:56,960 --> 02:10:03,200
doof oder oder ich darf das kann das in diesem bluetooth callback gar nicht machen was ziemlich

1694
02:10:03,200 --> 02:10:09,640
doof ist weil ich muss es ja dynamisch für jedes gerät machen aber kein ding ich kann

1695
02:10:09,640 --> 02:10:24,680
das auch in der schleife machen das ist gar kein ding so geht das jetzt come on bra so

1696
02:10:24,680 --> 02:10:37,360
scan scan scan ah kommt mal jetzt hat das gefunden battery ah jetzt gehts jetzt funs ok warum

1697
02:10:37,360 --> 02:10:42,880
genau geht das jetzt und vorher ging es nicht was war was war jetzt das kaputte da dran

1698
02:10:42,880 --> 02:10:51,360
das habe ich nicht so ganz kapiert aber anscheinend gehts jetzt ok nice umgefuddelt ip leak

1699
02:10:51,360 --> 02:11:06,680
umg seid ihr schon drin chat wer ist schon da ip leak jetzt wirds gefährlicher jetzt

1700
02:11:06,680 --> 02:11:11,360
wirds hart jetzt wirds jetzt wirds ganz kritisch hier gleich gleich muss ich hier lockdown

1701
02:11:11,360 --> 02:11:23,360
machen alles abschalten ok aber das funktioniert gut so und jetzt muss ich noch die sensorwerte

1702
02:11:23,360 --> 02:11:30,760
übertragen das heißt jedes mal wenn ich ein ach im moment ich muss auch dafür sorgen

1703
02:11:30,760 --> 02:11:38,600
dass die ok wir machen das einfach nur mal testweise jetzt mit einem sensor normalerweise

1704
02:11:38,600 --> 02:11:45,160
müsste ich jetzt sowas machen nur mal so weil ich habe jetzt nur ein sensor in reichweite

1705
02:11:45,160 --> 02:11:49,360
von diesen dingern also sprich nur ein sensor hier von in reichweite wenn ich mehrere hätte

1706
02:11:49,360 --> 02:11:53,540
würde das natürlich nicht funktionieren ich kann nicht jeden sensor ein temp nennen die

1707
02:11:53,540 --> 02:12:01,720
müssen unic sein also sprich ich müsste dann sowas machen wie mqtt oder sagen wir mal

1708
02:12:01,720 --> 02:12:12,200
irgendwie name mqtt name und dann müsste ich dann quasi sowas machen wie sensor get

1709
02:12:12,200 --> 02:12:21,960
address ane hier brauchst grad habe ich doch hier oben address also sprich ich brauche

1710
02:12:21,960 --> 02:12:32,120
die meck ich brauche die meck davon oder wie auch immer string oder wie ist das hier to

1711
02:12:32,120 --> 02:12:37,320
string also ich müsste guck hier da stehts ja ich müsste die meck nehmen convert address

1712
02:12:37,320 --> 02:12:49,840
string representation addresses in the format ok also sprich ich müsste also ich brauche

1713
02:12:49,840 --> 02:12:54,280
die meck adresse und die meck adresse muss in den namen rein dass es unic ist wisst ihr

1714
02:12:54,280 --> 02:12:59,360
was ich mein also weil der zweite sensor funktioniert ja nicht ich kann ja nicht beide sensoren

1715
02:12:59,360 --> 02:13:03,320
hinzufügen mit dem gleichen namen das klappt ja nicht also ich müsste ich müsste sowas

1716
02:13:03,320 --> 02:13:14,240
machen wie to string und am besten noch nicht einfach nur to string sondern mqtt name replace

1717
02:13:14,240 --> 02:13:23,240
weil doppelpunkte mag er nicht doppelpunkte replace zu underscore oder sowas warum geht

1718
02:13:23,240 --> 02:13:32,080
das nicht was ist das wieder für c++ shit warum macht string replace nicht einfach das

1719
02:13:32,080 --> 02:13:38,080
was man erwartet nämlich ein zeichen durch ein anderes ersetzen replace characters with

1720
02:13:38,080 --> 02:14:03,920
value from another string what ok dann c++ string replace was was was ist das wieder

1721
02:14:03,920 --> 02:14:15,360
für den kack warum muss man da irgendeine länge angeben ich will den einen charakter

1722
02:14:15,360 --> 02:14:19,680
den anderen charakter ersetzen ist das zu kompliziert oder was ok wisst ihr was wir

1723
02:14:19,680 --> 02:14:30,080
machen wir verwenden einfach kein c++ string wir wandeln einfach in aduino string um weil

1724
02:14:30,080 --> 02:14:37,720
der aduino string da macht genau das jetzt ist es jetzt ist es ein aduino string der

1725
02:14:37,720 --> 02:14:42,880
aduino string macht das ein charakter durch den anderen charakter excellent wunderbar

1726
02:14:42,880 --> 02:14:58,440
so und jetzt können wir den kram nämlich auch folgendermaßen nennen genau jetzt kann

1727
02:14:58,440 --> 02:15:06,800
man das nämlich auch so nennen nicht ein stemp sondern ach du leute gleich huge mac adressen

1728
02:15:06,800 --> 02:15:16,560
leak massive mac adressen leak von meinem sensor by the way das sind custom funktionen von

1729
02:15:16,560 --> 02:15:24,880
mir die ich mit mit hier fmt lip gemacht habe weil weil der standards standards string formatting

1730
02:15:24,880 --> 02:15:38,000
in c++ ist mir auch zu pains champ ich so also das heißt wir nennen das ding jetzt temp underscore

1731
02:15:38,000 --> 02:15:57,440
ok moment chat include linux in it das klingt wie irgendwas was du lokal bräuchtest oder

1732
02:15:57,440 --> 02:16:08,600
nee das ist irgendwas aus dem aus dem aus dem linux kernel dann hast du nicht das dann

1733
02:16:08,600 --> 02:16:20,520
hast du nicht alles installiert was du brauchst no such filer directory vielleicht ist ein

1734
02:16:20,520 --> 02:16:32,720
make file auch einfach schlecht oder flashbang aller genau das musst du machen das musst

1735
02:16:32,720 --> 02:16:46,000
du machen hast du das gemacht hast du das gemacht ok dann ist ein make file wahrscheinlich

1736
02:16:46,000 --> 02:16:50,920
nicht passend dafür dann weiß ich nicht also das müsste dann mit müsste da eigentlich

1737
02:16:50,920 --> 02:17:07,720
mit funktionieren so temp mqtt so und jetzt sollten die sensoren auch richtig heißen

1738
02:17:07,720 --> 02:17:11,760
by the way ich lösche mal hier meinen sensor dass ich gleich sehe dass alles passt weil

1739
02:17:11,760 --> 02:17:18,080
so sollen die dinger gar nicht mal heißen delete delete den cool champ temp das ist

1740
02:17:18,080 --> 02:17:28,880
battery und das untere ist ilu nennen wir das einfach ilu gerade wenn wir schon alles

1741
02:17:28,880 --> 02:17:56,240
abkürzen ist es auch einfach bett bett underscore kann man es noch speichern ok das ist eine

1742
02:17:56,240 --> 02:18:02,040
gute idee gebe ich dir recht but so ist perfekt alle vier buchstaben lang triggert ja wäre

1743
02:18:02,040 --> 02:18:07,320
ich auch triggert hast du recht ok jetzt wird das ding announced und so das passt alles

1744
02:18:07,320 --> 02:18:13,720
name ist die mech adresse das heißt es ist auf jeden fall auch unic so und nun müssen

1745
02:18:13,720 --> 02:18:20,800
wir werte veröffentlichen also sprich wir sagen jetzt an der stelle mqtt publish value

1746
02:18:20,800 --> 02:18:36,320
name name ach so das muss ich jetzt jedes jahr jedes mal machen ok das ist nicht so

1747
02:18:36,320 --> 02:18:47,720
nice aber gut was willst du machen also das hier ist die temperatur temperatur ist neuer

1748
02:18:47,720 --> 02:18:54,080
wert ist value so jetzt bin ich mal gespannt ob das funktioniert so und dann haben wir

1749
02:18:54,080 --> 02:19:03,640
hier unten noch neuer value für ilu so und wenn ich das jetzt hoch lade dann sollte der

1750
02:19:03,640 --> 02:19:11,600
ein gerät anlegen die sensoren anlegen und neue werte pushen by the way die batterie

1751
02:19:11,600 --> 02:19:21,040
brauche ich noch die batterie brauche ich noch batterie update ist hier unten dankeschön

1752
02:19:21,040 --> 02:19:26,880
für den zapf wenn haben wir den ice freak 16 monate hyper subscription massives ab

1753
02:19:26,880 --> 02:19:36,280
dankeschön so dann veröffentlichen wir das hier zwar sensor mqtt name value heißt ja

1754
02:19:36,280 --> 02:19:39,520
hier natürlich immer wieder nicht value weil ich den kram nicht einheitlich benennet battery

1755
02:19:39,520 --> 02:19:45,000
level alles klar upload so wenn wir jetzt richtig gemacht haben sollte alles funktionieren

1756
02:19:45,000 --> 02:19:50,960
oh oh moment wir haben eine sache vergessen aber abbrechen ich sollte sicherstellen dass

1757
02:19:50,960 --> 02:19:59,800
das announcing von diesem sensor nur passiert wenn der sensor neu erkannt wird würde ich

1758
02:19:59,800 --> 02:20:06,880
sagen weil ansonsten veröffentlichen hat es jedes mal und es sagt ziemlich das soll

1759
02:20:06,880 --> 02:20:16,360
es nur machen wenn der sensor neu erkannt wird also gucken wir mal sensor kann ich

1760
02:20:16,360 --> 02:20:23,800
irgendwie checken has key oder so wie check ich ob in der ob ob was nen key in in in in

1761
02:20:23,800 --> 02:20:34,960
der hashtag map drinne ist die komp much size die gibt es da kein has key oder sowas ok

1762
02:20:34,960 --> 02:20:47,200
google standard map has key auto check if standard map contains key count

1763
02:20:47,200 --> 02:21:05,240
die sprache macht mich fertig was bad wird noch mit richtig gute sprache aber ernsthaft

1764
02:21:05,240 --> 02:21:12,640
was eine scheiße alter das kreis das cremium ist echt das können nur verrückte sein ups

1765
02:21:12,640 --> 02:21:23,760
also was soll ich sagen sensors count count address so also sprich dann muss ich jetzt

1766
02:21:23,760 --> 02:21:33,000
ein if mache wahrscheinlich if count address größer null ne gleich gleich null dann weiß

1767
02:21:33,000 --> 02:21:37,520
ich es ist leer ob es wo habe ich den kram hier ich habe es gelöscht ich kann knob wo

1768
02:21:37,520 --> 02:21:51,120
ist es da war es ich habe es gesehen da eben war es da hier das brauche ich so so jetzt

1769
02:21:51,120 --> 02:22:02,360
wird es nur einmalig einmalig published man könnte man könnte das eigentlich auch das

1770
02:22:02,360 --> 02:22:11,680
annuncen könnte man eigentlich auch hier in dieser schleife machen nämlich beim ersten

1771
02:22:11,680 --> 02:22:17,680
batterie abfragen dann wird es alle fünf stunden republished es gibt keine null pointer

1772
02:22:17,680 --> 02:22:22,720
exception weil ich keine exceptions aktiviert habe das heißt der esp crashed einfach wenn

1773
02:22:22,720 --> 02:22:35,560
es exception gibt wisst ihr eine sache was die wirklich in c++ 13 erfinden sollten oder

1774
02:22:35,560 --> 02:22:42,320
endlich mal machen sollten in c++ 13 die sollten endlich mal dafür sorgen dass dieser ganze

1775
02:22:42,320 --> 02:22:48,560
header scheiß wegkommt die sollen sich mal ordentliches modul ordentliches export gedünst

1776
02:22:48,560 --> 02:22:57,240
überlegen dann kann man nämlich auch ordentliche package manager für c++ machen und pains

1777
02:22:57,240 --> 02:23:07,560
gem nicht so extrem rum das muss weg das ist das ist einfach so antik das muss weg du bist

1778
02:23:07,560 --> 02:23:11,640
auf die sprache gekommen als erste sprache z zu lernen moment moment moment moment

1779
02:23:11,640 --> 02:23:30,000
c ist super c++ ist kacke was was kommt also ich habe ich habe einen compiler mit c++ 20

1780
02:23:30,000 --> 02:23:39,320
support und ich schreibe soweit es geht auch schon alles in line ne c++ hat eigentlich

1781
02:23:39,320 --> 02:23:46,280
außer ein paar sündtags sachen mit ja gott sei dank aber das hat es in c++ 20 nicht reingeschafft

1782
02:23:46,280 --> 02:23:51,000
ne das kommt erst mal 23 jetzt es hat es in 20 nicht einmal geschafft da habe ich mich

1783
02:23:51,000 --> 02:23:56,240
nämlich echt drauf gefreut da kommt nämlich dieser ganze header header crap weg das könnte

1784
02:23:56,240 --> 02:24:05,800
c++ vielleicht noch ein bisschen besser machen c++ und c sind in großen teilen vielleicht

1785
02:24:05,800 --> 02:24:14,320
kompatibel zueinander also gerade mal c zu c++ aber es gibt sachen die sind gültiges c

1786
02:24:14,320 --> 02:24:20,200
aber kein gültiges c++ umgedreht gibt es ganz viele sachen ja 99 prozent gültiges

1787
02:24:20,200 --> 02:24:25,720
c++ ist kein gültiges c zum beispiel struct initialisierung ist gültig in c und nicht

1788
02:24:25,720 --> 02:24:40,640
in c++ also diese punkt diese punkt das hat es echt noch in 20 geschafft das haben die

1789
02:24:40,640 --> 02:24:46,960
doch nicht mehr hingekriegt das haben die doch nicht da habe ich letztens irgendwas

1790
02:24:46,960 --> 02:25:04,440
drüber gesehen haben das echt haben das echt noch geschafft

1791
02:25:04,440 --> 02:25:10,520
ja sowas sowas wäre halt echt praktisch wobei wahrscheinlich kann mein compiler das wieder

1792
02:25:10,520 --> 02:25:23,280
nicht ach die haben das nicht implementiert ok es geht sie sehen modules was haben die

1793
02:25:23,280 --> 02:25:31,920
denn da drinne zeigt mal her support was ist deine meinung zu rust rust ist extrem nice

1794
02:25:31,920 --> 02:25:52,320
aber zu big brain ok das müsste dass sie immer noch hätte

1795
02:25:52,320 --> 02:26:07,680
ok das sind die basic headers ok ok das muss ich mir tatsächlich mal angucken ob das schon

1796
02:26:07,680 --> 02:26:10,480
ob ich das schon verwenden kann wir können doch einfach mal ausprobieren ob ich das schon

1797
02:26:10,480 --> 02:26:18,440
verwenden kann export module braucht man ein eigenes c-file für das muss ich jetzt mal

1798
02:26:18,440 --> 02:26:33,640
kurz testen das jetzt schon geht aus cacq cc module ja meinetwegen und was soll ich

1799
02:26:33,640 --> 02:26:39,800
in main moment was muss ich in main dafür importen import hello warum hello achso weil

1800
02:26:39,800 --> 02:26:44,240
es export module hello ist das muss bestimmt hello cc heißen sonst funktioniert es wahrscheinlich

1801
02:26:44,240 --> 02:26:53,800
nicht ha ha lull ok mein compiler stellt ganz glaube nicht

1802
02:26:53,800 --> 02:27:22,960
nope wäre ja auch zu schön gewesen wie aktiviere ich das denn minus f bild flex kann ich das

1803
02:27:22,960 --> 02:27:47,040
einfach hier reinschreiben was ist rename rename export keyboard export not implemented

1804
02:27:47,040 --> 02:27:58,880
ok ja das habe ich schon das habe ich schon das habe ich schon muss ich vielleicht hier

1805
02:27:58,880 --> 02:28:18,280
noch minus f oder so machen ok er backt unrecognized commands er macht da ein ok ich glaube mal

1806
02:28:18,280 --> 02:28:22,400
ich glaube mein compiler kann es schlicht und ergreifend noch nicht auch drauf geschissen

1807
02:28:22,400 --> 02:28:29,360
jetzt weg hello elite bm das dauert wahrscheinlich noch 20 jahre bis man das realistisch gesehen

1808
02:28:29,360 --> 02:28:37,240
benutzen kann hey guck mal meine sensoren sind da leute habt das gesehen meine sensoren

1809
02:28:37,240 --> 02:28:43,080
sind am start fast zumindest ich muss doch mal kurz abbrechen das sieht irgendwie procken

1810
02:28:43,080 --> 02:28:57,640
aus so bitte jetzt stehen geblieben es ernaut er announced das einmalig ok temp und die

1811
02:28:57,640 --> 02:29:02,640
temperatur ja das müsste eigentlich genauso funktionieren wie ich mir das vorgestellt

1812
02:29:02,640 --> 02:29:10,960
hab wir sollten vielleicht noch eine debug ausgabe machen hier drinnen und zwar bei

1813
02:29:10,960 --> 02:29:19,920
jedem schleifendurchlauf geben wir aus was der was da für aktuelle werte drin stehen

1814
02:29:19,920 --> 02:29:43,000
an ansonsten finden was nicht value dort but aber temp und und und illu ob das ist besser

1815
02:29:43,000 --> 02:30:02,920
so von piler support mal her während es gerade kompiliert schauen wir mal c++ 2 b module

1816
02:30:02,920 --> 02:30:12,160
modules acht ja ich habe den gcc acht also sie lang gcc muss gucken fuck

1817
02:30:12,160 --> 02:30:18,280
ok ja kein wunder deswegen kann es das nicht ich habe den gcc achter zwar angeblich irgendwie

1818
02:30:18,280 --> 02:30:42,880
zweit das ist das ist auch so hinterher gewusst äh meine güte denn so bat ist schon da ok

1819
02:30:42,880 --> 02:30:52,200
der sensor also wahrscheinlich weil er ihn schon erkannt hat ich muss mal ich muss übrigens

1820
02:30:52,200 --> 02:31:04,600
ich glaube das ist tatsächlich null das ist tatsächlich null weil ich muss mal licht

1821
02:31:04,600 --> 02:31:17,440
anmachen also über dem sensor die lampe lampe ist an jetzt sollte das jetzt sollte illumination

1822
02:31:17,440 --> 02:31:27,800
gleich ein bisschen hochgehen das ist nicht so das schnellste der sensor und dauert vielleicht

1823
02:31:27,800 --> 02:31:32,840
auch ein bisschen mit dem abfragen warum warum er kennt jetzt eigentlich keine temperatur

1824
02:31:32,840 --> 02:31:37,280
mehr gerade da hat auch die ganze zeit vorher temperatur erkannt warum er kennt er jetzt

1825
02:31:37,280 --> 02:31:49,320
keine temperatur mehr hier das frage ich mich auch aber er kennt

1826
02:31:49,320 --> 02:32:05,000
da grad gar nichts mehr ich rieche irgendwie einen back der erkennt

1827
02:32:05,000 --> 02:32:22,360
nichts mehr aber batterie ist angeblich wieder 100 prozent ok vorher war es 99 alles in ordnung

1828
02:32:22,360 --> 02:32:30,200
das kalt das ding liegt neben mir unter der lampe aber die batterie funktioniert also

1829
02:32:30,200 --> 02:32:35,480
die batterie abfrage funktioniert weil die batterie ist standardmäßig null die batterie

1830
02:32:35,480 --> 02:32:42,040
standardmäßig batterie abfrage funktioniert wisst ihr was sein kann haben wir jemals getestet

1831
02:32:42,040 --> 02:32:53,520
ob nach einer batterie abfrage er den rest auch noch erkennt ok ich ich disable mal kurz

1832
02:32:53,520 --> 02:33:03,320
das ganze mqtt zeug das muss ich jetzt mal kurz überprüfen das kann ich lassen kommt

1833
02:33:03,320 --> 02:33:19,200
weg an einer stelle habe ich noch hier soll das ganze mqtt zeug ist weg so und das wlan

1834
02:33:19,200 --> 02:33:29,280
wlan mache ich auch weg so jetzt habe ich ein problem mal gucken ob er das jetzt erkennt

1835
02:33:29,280 --> 02:33:35,920
wisst ihr was nämlich sein kann dass das dass ich mit dem scan das gerät in irgendein

1836
02:33:35,920 --> 02:33:47,400
komischen modus versetze dass es danach nicht mehr broadcasted

1837
02:33:47,400 --> 02:33:57,280
oder dass es komisch komische dinger broadcasted besser gesagt ja ip 00 ist klar setzt du

1838
02:33:57,280 --> 02:34:05,040
jemals die temperatur und felder ja mache ich ok batterie 99 prozent jetzt ist wieder

1839
02:34:05,040 --> 02:34:15,040
99 prozent jetzt ist 100 prozent ok das warum fragt er warum fragt also der fragt die batterie

1840
02:34:15,040 --> 02:34:23,000
nicht so viel ab by the way warum ist es überhaupt jetzt 100

1841
02:34:23,000 --> 02:34:44,600
ich setze das nur an einer stelle ich setzt batterie setzt sich nur an einer stelle und

1842
02:34:44,600 --> 02:34:57,800
diese sache sollte er eigentlich nur einmal alle fünf stunden abfragen ich bin verwirrt

1843
02:34:57,800 --> 02:35:02,840
die batterie darf sich gar nicht bewegen die batterie darf einmal in fünf stunden abgefragt

1844
02:35:02,840 --> 02:35:28,000
für einen moment moment habe ich ihn jetzt drin ist meine logik hier falsch fünf stunden

1845
02:35:28,000 --> 02:35:38,200
ja batterie 99 genau

1846
02:35:38,200 --> 02:35:39,840
danach darf die sich nicht mehr ändern

1847
02:35:39,840 --> 02:35:58,280
ich setze glaube ich den last check nie kann das sein

1848
02:35:58,280 --> 02:36:17,400
ich setze den last check doch dachte schon ich dachte schon das wäre es aber ich dachte

1849
02:36:17,400 --> 02:36:19,680
schon das wäre es das wäre relativ easy gewesen

1850
02:36:19,680 --> 02:36:32,200
ich muss mal die 30 milliarden debugdinger weg machen sonst sehe ich ja gar nichts mehr

1851
02:36:32,200 --> 02:36:50,600
du machst minus last check falsch nee eigentlich stimmt

1852
02:36:50,600 --> 02:37:03,440
wir machen jetzt einfach jemanden ausgabe jetzt einfach hier serial print line skip

1853
02:37:03,440 --> 02:37:15,640
moment moment jetzt setzt sich das hier irgendwie drin oh man oh bin ich doof lull warum steht

1854
02:37:15,640 --> 02:37:28,360
denn hier sowas drinnen monka weh alter wo kommt der scheiß her warum habe ich den 100

1855
02:37:28,360 --> 02:37:45,520
fuck aber mal ernsthaft warum fragt er denn das batterie warum fragt er denn

1856
02:37:45,520 --> 02:37:52,400
das warum fragt warum findet er denn die anderen die anderen sensor dinger kratten

1857
02:37:52,400 --> 02:38:00,840
nicht mehr wir geben noch mal typ wir geben noch mal typ und und länge mit aus bei länge

1858
02:38:00,840 --> 02:38:12,280
sollte ja eigentlich zwei sein und drei und oft seit sonst was skip skip skip alles gut

1859
02:38:12,280 --> 02:38:26,240
ergibt sinn batterie level noch mal ein ich glaube ich glaube ich weiß was ist wenn man

1860
02:38:26,240 --> 02:38:30,640
die batterie abfragt setzt das bestimmt das gerät in irgendeinen doofen zustand den man

1861
02:38:30,640 --> 02:38:35,800
wieder zurücksetzen muss die machen doch hier sowas moment so was habe ich jedoch gesehen

1862
02:38:35,800 --> 02:38:43,560
hier guckt mal das ist das was ich vorher ignoriert habe force force flora service data

1863
02:38:43,560 --> 02:39:00,160
mode force flora service data mode was macht das was was für was was was für was ist

1864
02:39:00,160 --> 02:39:22,320
das was was was tut es ok länge 3 länge 1 typ 63 das stimmt überhaupt was das ergibt

1865
02:39:22,320 --> 02:39:36,440
keinen sinn typ 63 typ 63 ist komplett verkehrt was hier haben wir uns den typ 63 gab es doch

1866
02:39:36,440 --> 02:39:45,320
gar nicht was ist typ 63 63 gibt es überhaupt nicht ok wir haben wir haben das gerät irgendwie

1867
02:39:45,320 --> 02:39:52,240
kaputt gemacht wir haben wir haben das gerät irgendwie zerstört also nicht nicht wirklich

1868
02:39:52,240 --> 02:40:00,200
zerstört sondern ich wette mit euch wenn ich die batterie abfrage rausmache moment

1869
02:40:00,200 --> 02:40:06,440
habe ich das überhaupt als hex drinne ob es auch wirklich 63 ja ich habe es als hex

1870
02:40:06,440 --> 02:40:32,600
so ich mache jetzt die batterie abfrage auswetten dann geht es wieder auf vorhin halb 63 halb

1871
02:40:32,600 --> 02:40:57,360
63 hä das sollte der nicht machen irgendwie ich weiß nicht ob wir den sensor geschrottet

1872
02:40:57,360 --> 02:41:09,920
haben oder so mit irgendwas aber der sendet äußerst äußerst komische dinge woran könnte

1873
02:41:09,920 --> 02:41:25,600
das denn liegen ausschalten wieder einschalten den flora reboot ja das machen wir jetzt ich

1874
02:41:25,600 --> 02:41:34,480
warte aber bis der sensor wieder läuft ich warte kurz ich warte bis der sensor wieder

1875
02:41:34,480 --> 02:42:03,240
läuft bis der bis type 63 flora 63 le getappt

1876
02:42:03,240 --> 02:42:29,120
das ist typ 63 nicht abkacken wieder was ist denn hier los mit dem 0 x 63

1877
02:42:29,120 --> 02:42:41,200
Okay, dazu gibt es gar nichts.

1878
02:42:41,200 --> 02:42:51,760
Okay, also guck mal, der Sensor schickt nur so ganz merkwürdige Dinger.

1879
02:42:51,760 --> 02:43:00,880
63 und ich starte den jetzt gleich mal neu, den Sensor.

1880
02:43:00,880 --> 02:43:18,160
Habe ich sonst vielleicht irgendwas falsch gemacht?

1881
02:43:18,160 --> 02:43:25,360
Data Index plus zwei, Data Index plus drei, das habe ich auch so gemacht.

1882
02:43:25,360 --> 02:43:33,120
Gut, also irgendwas stimmt mit dem Sensor und ich habe den Sensor irgendwie kaputt gemacht.

1883
02:43:33,120 --> 02:43:42,880
Ich muss gerade mal aufmachen und, Alter, wenn ich das scheiß mal aufkriegen würde.

1884
02:43:42,880 --> 02:44:03,760
Keck wait, hallo, wow, okay, die Abdeckung ist sonst wohin geflogen gerade.

1885
02:44:03,760 --> 02:44:28,240
Okay, ich reboote mal, ist wieder an, FD, what, alter Sensor, was sendest du da?

1886
02:44:28,240 --> 02:44:42,960
Sensor gerippt, das glaube ich nicht, ich kann doch nicht durch pure Abfragen den Sensor

1887
02:44:42,960 --> 02:44:43,960
kaputt gemacht haben.

1888
02:44:43,960 --> 02:44:50,000
Ich habe bestimmt irgendwas dummes hier gemacht.

1889
02:44:50,000 --> 02:45:14,640
Mal alles rausschmeißen, was man hier braucht.

1890
02:45:14,640 --> 02:45:20,320
Was habe ich hier kaputt gemacht, ich weiß nicht genau was, das war zu Pain's Champ,

1891
02:45:20,320 --> 02:45:24,280
ich würde den Sensor, ja, ich verstehe, dass das Paint, aber der kaputt kann der nicht

1892
02:45:24,280 --> 02:45:28,160
sein, das ergibt doch keinen Sinn, sollte der kaputt sein.

1893
02:45:28,160 --> 02:45:50,600
Okay, was wir, wir clear Results ist das vielleicht ein Problem, aus welchen Gründen auch immer,

1894
02:45:50,600 --> 02:46:02,280
das habe ich glaube ich geändert vorhin, ich mache Wifi raus, brauchen wir nicht, hätte

1895
02:46:02,280 --> 02:46:08,680
ich mal einen Shit Commit gemacht vorhin, ne, Leute, Shit, Shit Committed, dann hätte

1896
02:46:08,680 --> 02:46:26,880
ich jetzt einfach mal Rollbacken können und vergleichen, Lul, ein Shit Commit, oh geht

1897
02:46:26,880 --> 02:46:32,720
das nicht, was ist da kaputt, meint ihr wirklich, der Sensor ist kaputt, aber von was, von was

1898
02:46:32,720 --> 02:46:44,480
soll denn der Sensor kaputt gehen, ich kann auch noch Batteriewerte und so abfragen, Type

1899
02:46:44,480 --> 02:46:52,720
8, okay, okay, ich glaube der geht wieder, Type 8 gibt's, Type 8 ist Bodenfeuchtigkeit

1900
02:46:52,720 --> 02:47:02,320
oder sowas, das geht, okay, ich glaube der Sensor geht wieder, welcher Sensor, der da,

1901
02:47:02,320 --> 02:47:13,760
äh, der Flora Sensor, okay, es geht wieder Leute, es geht wieder, was war's denn jetzt,

1902
02:47:13,760 --> 02:47:28,720
was genau war's denn jetzt, Include vom Wifi, ey, das ist wieder typische C++ Hatter Wahnsinn,

1903
02:47:28,720 --> 02:47:37,560
wenn das der Fall ist, das redefined irgendwelche Sachen davon, was soll denn Programm, äh,

1904
02:47:37,560 --> 02:47:51,480
Sensor kaputt machen, eventuell, weil der will nicht mehr, ey, jetzt ist wieder alles

1905
02:47:51,480 --> 02:48:07,720
okay, hä, what the fuck, okay, weißt was, wir machen jetzt einfach mal eine Runde Undo,

1906
02:48:07,720 --> 02:48:33,240
Ando, Ando, Ando, oh nein, nein, nein, nein, nicht so viel Andun, okay, perfekt, los, perfekt,

1907
02:48:33,240 --> 02:48:48,960
so jetzt ist alles wieder drin, ich glaube doch, dass das Batteriel Level kaputt macht,

1908
02:48:48,960 --> 02:48:53,120
ist jetzt auch das Wifi wieder drin, ach nee, Moment, Wifi ist noch aus, na okay, schadet

1909
02:48:53,120 --> 02:49:12,200
ja nix, Wifi ist noch aus, okay, denke 2, Typ 0, jetzt ist es wieder kaputt, nee, das

1910
02:49:12,200 --> 02:49:25,440
ist jetzt wieder kaputt, Type 63 ist wieder angesagt, puh, okay, aber das schöne ist,

1911
02:49:25,440 --> 02:49:31,120
ich kann jetzt einfach mal, okay, also wir wissen so, so hat es funktioniert, ne, das

1912
02:49:31,120 --> 02:49:36,280
ist aus mit, mit auskommentiertem Wifi und allem, so hat es funktioniert, wenn es jetzt

1913
02:49:36,280 --> 02:49:41,600
nicht funktioniert, dann wissen wir, dass es an der Abfrage von der Batterie liegt,

1914
02:49:41,600 --> 02:49:45,720
die den Sensor in einen komischen Zustand bringt, was erstmal ein paar Minuten dauert,

1915
02:49:45,720 --> 02:50:06,440
bis es wieder weg geht, und was jetzt, geht es jetzt, auf, mach hinne, Type 8, nee, jetzt

1916
02:50:06,440 --> 02:50:14,960
funktioniert es, okay, wo ist, hä, was, was macht es kaputt Leute, ich bin echt extrem

1917
02:50:14,960 --> 02:50:34,480
verwirrt gerade, was macht es kaputt, na die IP wird es nicht sein, Wifi einkommentieren

1918
02:50:34,480 --> 02:50:50,040
wird es auch nicht sein, das da vielleicht, hä, oder doch das Clear Result, du weißt

1919
02:50:50,040 --> 02:50:54,400
warum ist es denn plus plus, ja das ist sicherlich auch ein Teilproblem, aber das ist gerade

1920
02:50:54,400 --> 02:51:05,960
irgendwas Hardware-mäßiges, okay, was meinte, geht es jetzt, lag es an dem Clear Result,

1921
02:51:05,960 --> 02:51:15,640
nee, alles in Ordnung noch, noch ist alles gut, noch ist alles gut, funktioniert, ja

1922
02:51:15,640 --> 02:51:27,960
Lichtsensor, wunderbar, wunderbar, okay, was kommt als nächstes, der MQTT-Sensor, und

1923
02:51:27,960 --> 02:51:48,440
das da, okay, machen wir das da rein, woran könnte das liegen, das verstehe ich net, also

1924
02:51:48,440 --> 02:51:56,880
wenn es jetzt wieder kaputt ist, ist jetzt auch die Batterie wieder drin, Batterie, nee,

1925
02:51:56,880 --> 02:52:04,320
die Batterie ist nicht drinne, jetzt ist kaputt Leute, es ist kaputt, okay, wo, woran liegt

1926
02:52:04,320 --> 02:52:34,280
es jetzt, das macht es kaputt, was, warum, nur mal um das zu verifizieren, ich mache

1927
02:52:34,280 --> 02:52:47,320
das wieder raus und jetzt gehts, was ist denn daran, irgendeine Art und Weise, was hat denn

1928
02:52:47,320 --> 02:52:53,640
da irgendwie was mit Bluetooth zu tun davon, Debugger gibt es da nicht, da brauchst du

1929
02:52:53,640 --> 02:53:15,800
ein Hardware-Teil für zum Debuggen, jetzt gehts wieder, okay, Zeile 107, das da, ja

1930
02:53:15,800 --> 02:53:28,440
gut, das können wir nicht ausprobieren, da muss ich das hier auskommentieren zu, Bluetooth

1931
02:53:28,440 --> 02:53:34,000
und Wi-Fi gleichzeitig, äh gerade nicht, nein, ansonsten schon und das funktioniert

1932
02:53:34,000 --> 02:53:55,680
auch, so, nee es ist noch ganz, okay es ist noch ganz, also liegt es hier dran, liegt es

1933
02:53:55,680 --> 02:54:02,440
hier dran, wir nähern uns, wir nähern uns der Sache auf jeden Fall, ich mein es kann

1934
02:54:02,440 --> 02:54:08,480
hier nur noch an einem dieser Zeilen hier liegen und das hier kann es nicht sein, weil

1935
02:54:08,480 --> 02:54:10,800
das haben wir die ganze Zeit auskommentiert gehabt, das kann ja im Prinzip nur noch da

1936
02:54:10,800 --> 02:54:31,520
dran oder da dran liegen und jetzt, jetzt ist es kaputt, die Zeile macht es kaputt, die

1937
02:54:31,520 --> 02:54:55,360
Zeile macht es kaputt, aber warum, warum, das ist doch vollkommen legitim, okay liebe

1938
02:54:55,360 --> 02:55:19,800
C++-Kenner, ähm, irgendjemand eine chlorische Idee, geh noch mal nach unten hier, Moment,

1939
02:55:19,800 --> 02:55:26,680
was hat es jetzt kaputt gemacht, das da oder das da unten, wartet mal, wartet mal, was

1940
02:55:26,680 --> 02:55:46,880
hab ich aus, äh, das Address ist die aktuelle Bluetooth Adresse, okay jetzt bin ich verwirrt,

1941
02:55:46,880 --> 02:55:55,440
wartet mal, hat es das jetzt kaputt gejagt oder das andere, ah ne, ne, ne, ne, Moment,

1942
02:55:55,440 --> 02:56:11,440
das stimmt nicht, das macht es gar nicht kaputt, das hier macht es kaputt, ich lass noch mal

1943
02:56:11,440 --> 02:56:15,680
kurz laufen, ja, ja, ne, ne, das passt jetzt, das macht es kaputt, das replays, wahrscheinlich

1944
02:56:15,680 --> 02:56:29,000
ist es das replays, ich weiß woran das liegt, ich glaube ich weiß woran das liegt, das

1945
02:56:29,000 --> 02:56:47,480
ist aber mega painschempig, kann das sein, jetzt ist es kaputt, ja, kann das sein, dass

1946
02:56:47,480 --> 02:57:01,800
das hier keinen neuen String erstellt, sondern, dass das auf der darunter liegenden, äh,

1947
02:57:01,800 --> 02:57:05,800
das macht ein Android, das macht einen Arduino String draus, das ist wahrscheinlich nicht

1948
02:57:05,800 --> 02:57:11,200
das Problem, aber wir können ausprobieren ob das das Problem ist, achso ne, das ist

1949
02:57:11,200 --> 02:57:18,920
eine Arduino Funktion, könnte das sein, dass ToString keinen String erstellt, sondern als

1950
02:57:18,920 --> 02:57:27,080
Basis das darunter liegende, das darunter liegende, ähm, die darunter liegenden Bytes

1951
02:57:27,080 --> 02:57:43,640
nimmt und ich hier drinnen quasi auf den darunter liegenden Bytes rumwurste, ToString erstellt

1952
02:57:43,640 --> 02:57:50,560
ein neues Objekt, das weißt du ja nicht, das ist eine Implementierung von denen, return

1953
02:57:50,560 --> 02:58:03,240
String Sternchen This, sicher, sicher, ich wäre mir da nicht so sicher ob es das macht

1954
02:58:03,240 --> 02:58:20,480
ehrlich gesagt, jaja, ok an dem Replay liegt es nicht, an dem Replay liegt es nicht, wie

1955
02:58:20,480 --> 02:58:31,800
an dem Replay liegt das, Moment, wie kann das, wie kann das denn irgendwas kaputt machen,

1956
02:58:31,800 --> 02:58:37,320
also was das macht ist folgendes, äh, es ist Big Brain Template Geschiss, das macht

1957
02:58:37,320 --> 02:58:42,040
eigentlich, das macht eigentlich gar nichts außer, äh, die ganzen Argumente aneinander

1958
02:58:42,040 --> 02:58:50,560
hängen, also es macht, es macht, ist das ein Bug, ne, das macht gar nichts damit, warte

1959
02:58:50,560 --> 02:58:57,920
mal, wait a minute, warum ist das jetzt immer noch kaputt, warum, warum kann das überhaupt

1960
02:58:57,920 --> 02:59:04,200
kaputt gehen wenn das ToString macht, ach Moment, deprecated ist das, ich verwende

1961
02:59:04,200 --> 02:59:24,240
irgendwas deprecated, das, häh, ok, es ist immer noch kaputt, es liegt nicht an meinem,

1962
02:59:24,240 --> 02:59:38,200
warum, warum, wie kann es das hier denn mein Bluetooth kaputt machen, wie kann diese Zeile

1963
02:59:38,200 --> 02:59:52,320
mein Bluetooth kaputt, häh, das ist, ok, das ist ein Bug, das ist auf jeden Fall ein Bug,

1964
02:59:52,320 --> 02:59:56,440
das schreibt in irgendwo, ich wette mit euch, das schreibt irgendwo im Speicher rum wo es

1965
02:59:56,440 --> 03:00:01,040
nicht rumschreiben soll, so, wir machen jetzt mal testweise was anderes, ich mach das mal

1966
03:00:01,040 --> 03:00:09,560
ganz weg und mach da einfach sowas hier rein, das sollte jetzt ja nix mal machen, schönes

1967
03:00:09,560 --> 03:00:36,720
Beispiel für wie man sich mit C++ übrigens in Fuß schießen kann hier wieder, und, Hallo,

1968
03:00:36,720 --> 03:00:42,880
hab null, ok, jetzt funktioniert's wieder, funktioniert wieder, ok, das liegt definitiv

1969
03:00:42,880 --> 03:00:54,160
hier dran, attr toString, MQTTname verwende ich sonst nirgendswo mehr, gut, hier im Sensor,

1970
03:00:54,160 --> 03:01:00,760
das ist erstmal egal, das liegt nur hier dran, das wird er wahrscheinlich wegoptimieren

1971
03:01:00,760 --> 03:01:05,360
und deswegen wird es jetzt doch funktionieren, ja, das probier ich gleich aus, aber ich verstehe

1972
03:01:05,360 --> 03:01:35,000
nicht was, das ist irgendein Bug, das ist irgendein Bug, ist es doch, es ist kaputt,

1973
03:01:35,000 --> 03:02:04,360
der pure Aufruf von attr.toString macht mein Bluetooth kaputt, ok, ok, ok, ok, ok, ok,

1974
03:02:04,360 --> 03:02:18,680
ok, ja hier, da ist er, da passiert nicht so viel, die Frage ist nur, was this in dem

1975
03:02:18,680 --> 03:02:35,040
Fall überhaupt ist, wie, wie, wie kann der das zu nem String konvertieren überhaupt,

1976
03:02:35,040 --> 03:02:42,760
wie geht denn das, die müssen, die müssen, das Ding muss in irgendeiner Art und Weise

1977
03:02:42,760 --> 03:02:57,360
konvertierbar sein, daraus, wie auch immer die das gemacht haben, ah, hier, Operator,

1978
03:02:57,360 --> 03:03:09,360
ah, fuck it, die Operator, Cast Overloading oder sowas ist das jetzt auch noch, hier,

1979
03:03:09,360 --> 03:03:16,240
hier, hier, hier, hier, das macht es kaputt Leute, ich sag es euch, das macht es kaputt,

1980
03:03:16,240 --> 03:03:29,480
das verkackts irgendwie, hier machen die irgendwas kaputt, die machen da irgendwas kaputt hier,

1981
03:03:29,480 --> 03:03:41,200
irgendwas, irgendwas ist hier repp, irgendwas ist hier verbugged dran, da wird kein Speicher

1982
03:03:41,200 --> 03:03:46,400
geändert, doch, die schreiben in Buffer und wenn das hier irgendwie zu lang ist oder so,

1983
03:03:46,400 --> 03:03:50,920
das macht es irgendwie kaputt, wir probieren mal folgendes aus, anstatt zu String, gehen

1984
03:03:50,920 --> 03:04:02,760
wir mal, was weiß ich, Get Native, Get Native, Get Native ist nen, Array, ok, da passiert

1985
03:04:02,760 --> 03:04:10,480
jetzt wahrscheinlich nichts, Address ist die Bluetooth, die Bluetooth Mac Adresse quasi

1986
03:04:10,480 --> 03:04:22,040
von dem Gerät, so, da passiert jetzt nichts, wenn da jetzt auch was passiert, dann blick

1987
03:04:22,040 --> 03:04:31,880
ich schnell mal durch, und das sieht schon mal besser aus, na, es funktioniert, ok,

1988
03:04:31,880 --> 03:04:40,880
Get to String macht es einfach kaputt, so, dann probieren wir mal aus, was passiert,

1989
03:04:40,880 --> 03:04:45,320
wenn man, Standard String, Stronk, Stronk, Big, Big, Standard Stronk, Stronks müssten

1990
03:04:45,320 --> 03:05:08,120
auch geben, so, und das soll jetzt funktionieren oder was, so, jetzt bin ich mal gespannt,

1991
03:05:08,120 --> 03:05:17,120
mal gucken, ob es das jetzt auch kaputt macht, was ein Scheiß, Alter, mit was man sich hier

1992
03:05:17,120 --> 03:05:28,280
wieder befassen muss, ich dachte, da sind wir 15 Jahre drüber, drüber raus, jetzt,

1993
03:05:28,280 --> 03:05:38,600
das ist kaputt, ok, Leute, das liegt, das liegt daran, das liegt hieran, das liegt an

1994
03:05:38,600 --> 03:05:43,640
diesem, an diesem String Constructor Ding oder so, die machen da irgendwelches, da

1995
03:05:43,640 --> 03:05:51,160
ist irgendein Bug drinne, das Overfloat, Underfloat, über, über, seitwärts, Diagonalfloat, irgendwas,

1996
03:05:51,160 --> 03:06:03,040
keine Ahnung, ja, so, da ist irgendwas kaputt drinne, das heißt, wir müssen das jetzt selbst

1997
03:06:03,040 --> 03:06:13,840
machen, Get, Native, oder was haben die noch für Methoden, Get Type, oh, Big Brain, was

1998
03:06:13,840 --> 03:06:28,080
ist das, wow, ach so, das ist das Overloaded Operator, aber man kann das auch, man kann

1999
03:06:28,080 --> 03:06:44,800
das auch zu einem, man kann das auch zu einem Int64 machen, also kann ich jetzt so was hier

2000
03:06:44,800 --> 03:07:04,400
machen, Uint64, kann ich das cast on, ok, das funktioniert, Auskernfuchs, könnte man

2001
03:07:04,400 --> 03:07:10,960
bestimmt machen, aber ich würde jetzt mal von denen erwarten, dass die, dass das funktioniert,

2002
03:07:10,960 --> 03:07:16,320
ja, ich könnte das bestimmt in irgendeiner Art und Weise kopieren, ja, aber so geht es

2003
03:07:16,320 --> 03:07:22,880
ja auch, wenn es jetzt nicht kaputt geht, dann benutze ich halt das Int und anscheinend

2004
03:07:22,880 --> 03:07:38,320
geht es jetzt komplett kaputt, dass es gar nicht mehr weiter scannt, ok, ich resette

2005
03:07:38,320 --> 03:07:44,880
nochmal, ach ne, doch, es geht weiter, ich habe nichts gesagt, ok, das geht, das geht,

2006
03:07:44,880 --> 03:07:51,600
alles klar, das geht, wunderbar, so, was, was, was, was, was habe ich denn da als drinstehen,

2007
03:07:51,600 --> 03:08:03,560
was habe ich denn da als drinstehen, MQTT, nee, Uint64, da habe ich die MAC Adresse

2008
03:08:03,560 --> 03:08:20,000
als, als, 6 bytes konvertiert zu einem Uint6, ja, das geht auch, das ist auch Unic, kann

2009
03:08:20,000 --> 03:08:25,160
man das nicht, das ist doch ein Objekt, ok, das, das passt, damit kann ich leben, da nehme

2010
03:08:25,160 --> 03:08:30,360
ich halt nicht die MAC Adresse, die man gut lesen kann, sondern eben die MAC Adresse als

2011
03:08:30,360 --> 03:08:36,160
bytes, ist auch in Ordnung, kann ich auch mit leben, wunderbar, passt, exquisite, excellent,

2012
03:08:36,160 --> 03:08:46,400
hoch 10, ja, jetzt funktioniert es, excellentst ist das, excellent, excellent reicht immer,

2013
03:08:46,400 --> 03:08:55,960
es ist excellentst, gibt es das Wort überhaupt, kann man excellent überhaupt noch steigern,

2014
03:08:55,960 --> 03:09:01,160
es ist in Wirklichkeit, wenn ihr mal in der Schule gefragt werdet, es ist nicht gut, besser,

2015
03:09:01,160 --> 03:09:10,360
am besten, es ist gut, besser, excellent, excellentst, so, also, weiter, Slayda Teddy

2016
03:09:10,360 --> 03:09:13,560
10 Monate, danke für den Sub, ok, das heißt, wir wissen jetzt wo was liegt, wir können

2017
03:09:13,560 --> 03:09:16,360
den ganzen Scheiß wieder rückgängig machen, ich kann alles wieder einkommentieren, was

2018
03:09:16,360 --> 03:09:23,160
ich auskommentiert habe, und mich freuen, dass es funktioniert, sehr gut, excellent,

2019
03:09:23,160 --> 03:09:32,160
warte, was mache ich da, so weit muss ich nicht zurück, so, ist das WiFi, ist das WiFi,

2020
03:09:32,160 --> 03:09:44,960
noch WiFi drinnen, WiFi begin, excellent, ok, alles klar, das heißt, wir machen kein

2021
03:09:44,960 --> 03:09:55,360
Tool String, wir machen ein, wir konvertieren das Ding zu einem Uint, Uint64 und dann zu

2022
03:09:55,360 --> 03:10:09,480
einem String, beste, wobei, nee, war aber nicht, hier, ups, wir nehmen einfach das

2023
03:10:09,480 --> 03:10:21,200
Int und das hier machen wir einfach auch zu einem Uint64, Uint64, ok, wunderbar, jetzt

2024
03:10:21,200 --> 03:10:26,200
sollte wieder alles funktionieren, gehen wir mal in Home Assistant und löschen den Sensor,

2025
03:10:26,200 --> 03:10:41,920
da ist er, der exzellente Sensor, zack, next, go back, hallo, ok, zip, upload, ja, kann

2026
03:10:41,920 --> 03:10:52,360
man, adjektiv exzellent, ok, oh, oh, oh, oh, das ist gut, das muss ich bemerken, exzellent,

2027
03:10:52,360 --> 03:11:00,600
exzellenter, am exzellentesten, das ist nicht exzellent, sondern es ist am exzellentesten,

2028
03:11:00,600 --> 03:11:14,040
ok, das muss ich gucken, wie das ausgefroren wird hier, ah, yes, hier lernt man wieder

2029
03:11:14,040 --> 03:11:38,400
was, hier lernt man wieder was, aha, ah, yes, jetzt, warum ist feminine exzellent eher,

2030
03:11:38,400 --> 03:11:45,080
wie kann das sein, exzellenter, exzellenter, ja, halt nicht klar, Leute, nein, nein, das

2031
03:11:45,080 --> 03:11:53,560
ist wieder kaputt, oder, ne, ne, ne, ne, er hat die Temperatur auf jeden Fall ausgelesen

2032
03:11:53,560 --> 03:12:07,160
jetzt schon mal, aber jetzt ist die Temperatur wieder weg, ah, Moment, ich hatte hier noch

2033
03:12:07,160 --> 03:12:25,680
den Bug drinnen mit den 100, so, ich mach mal kurz hier dieses ganze D-Bug Zeug raus,

2034
03:12:25,680 --> 03:12:36,240
ich glaub, das geht jetzt, ich glaub, ich hab noch einen anderen Bug, Moment, abbrechen,

2035
03:12:36,240 --> 03:12:44,320
das kommt auch wieder rein, also, wenn das jetzt nicht funktioniert, dann ragequit ich

2036
03:12:44,320 --> 03:12:56,520
gleich, es scheint mir ein exzellenter, exquisiter Stream ist das heute, oh, kann das das hier

2037
03:12:56,520 --> 03:13:20,720
auch diese Seite, exquisite, exquisite, exquisites, was, exquisites, was ist das für ein Wort,

2038
03:13:20,720 --> 03:13:43,280
was ist ein exquisites, exquisites, die Mehrzahl, davon gibt's doch keine Mehrzahl, oder, die

2039
03:13:43,280 --> 03:14:09,520
Exquisite, der, hä, das ergibt keinen Sinn, ok, das klingt mir falsch, ok, alles gut,

2040
03:14:09,520 --> 03:14:17,880
es funktioniert, es funktioniert, wunderbar, was sagt, was sagt der Home Assistant, der

2041
03:14:17,880 --> 03:14:24,840
Cool Champ ist am Start, Batterie, jawoll, bam, nur Batterie geht grad nicht, aber guck

2042
03:14:24,840 --> 03:14:32,840
mal, er überträgt, alles gut, wunderbar, Poggers, Poggers, was ich noch nicht so ganz

2043
03:14:32,840 --> 03:14:44,040
verstehe ist, ah, ich setz den Sensorwert hier unten, Sensor, Temp, gleich Value, wisst

2044
03:14:44,040 --> 03:14:51,680
ihr mal, alles, alles muss man selbst machen, nie hilft mir einer, Chat, und das, ah, Moment,

2045
03:14:51,680 --> 03:14:58,760
das ist Temp und das ist, so, und jetzt können wir das hier ausgeben und dann passt das alles,

2046
03:14:58,760 --> 03:15:13,160
das ist für die Batterie, ok, und jetzt sollte eigentlich alles funktionieren, ja, die Update

2047
03:15:13,160 --> 03:15:40,680
in der Realtime, ist das nicht Poggers, so, auf, zeig's uns, mach, mach, mach, mach, mach,

2048
03:15:40,680 --> 03:15:54,480
zeig's uns, mach, Type 0, Type 0 ist schlecht, 99 Batterie, Länge, Temp, genau, Beleuchtung

2049
03:15:54,480 --> 03:16:04,720
haben wir, 135, perfekt, jetzt warten wir nur bis Temperatur abgefragt wird, Temperatur,

2050
03:16:04,720 --> 03:16:10,800
das dauert ein bisschen, bis sich das zufälligerweise scannt, während es gerade verschickt, das

2051
03:16:10,800 --> 03:16:14,800
kann ein bisschen dauern, ja, das kann, das kann schon mal, im Zweifelsfall, zwei, drei

2052
03:16:14,800 --> 03:16:22,080
Minuten dauern, aber, das muss ich ja gerade überschneiden mit, dass er scannt und das,

2053
03:16:22,080 --> 03:16:33,600
ah, Batterie, Temp, 23, Leute, funktioniert, funktioniert, guckt da, Bäm, Batterie Level,

2054
03:16:33,600 --> 03:16:42,640
99, Beleuchtung, mal kurzzeitig, wir können es ja testen, ob die Beleuchtung funktioniert,

2055
03:16:42,640 --> 03:16:52,720
ich mach jetzt die, ok, ok, Massive, Massive Crafts, Leute, ja, Big Brain Crafts, ich mach

2056
03:16:52,720 --> 03:16:56,720
jetzt die Beleuchtung von der Elgato auf, das sollte jetzt gleich auf Null gehen, also

2057
03:16:56,720 --> 03:17:02,880
gleich, demnächst sollte das auf Null gehen, so, Elgato Beleuchtung ist aus, jetzt warten

2058
03:17:02,880 --> 03:17:07,720
wir mal, wie lang es dauert, mal gucken, ob das auch Realtime updatet, updatet, sollte

2059
03:17:07,720 --> 03:17:15,880
es jetzt runter auf Null gehen, dann machen wir die Elgato Lampe an, oh, es ist sogar

2060
03:17:15,880 --> 03:17:38,320
hochgegangen, Kek Wait, Wait, Kek Wait, ok, das war eine Verzögerung, irgendwie,

2061
03:17:38,320 --> 03:17:59,720
jetzt ist es Null, ok, ob ich, aber die Verzögerung ist für den Kühlschrank-Sensor nur durchaus

2062
03:17:59,720 --> 03:18:04,200
in Ordnung, ja, ok, und jetzt mach ich die Elgato Lampe mal auf volle, volle, volle

2063
03:18:04,200 --> 03:18:24,600
Pulle, der Bastel-Champ ist volle Pulle, auf, ok, ok, ok, ok, ok, ok, ok, ok, ok,

2064
03:18:24,600 --> 03:18:42,700
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

2065
03:18:42,700 --> 03:18:47,800
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

2066
03:18:47,800 --> 03:18:53,000
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,

2067
03:18:53,000 --> 03:18:55,000
hochkant

2068
03:18:55,160 --> 03:18:58,660
Unter unter den direkt unter unter den elgato stellts

2069
03:19:02,760 --> 03:19:04,760
Dann fällt es direkt rein

2070
03:19:04,760 --> 03:19:12,760
Oh

2071
03:19:15,880 --> 03:19:17,880
Okay

2072
03:19:25,800 --> 03:19:30,660
Morgengemüse erstens weil ich gucken wollte wie man plutos sachen abfragt und zweitens weil

2073
03:19:30,660 --> 03:19:38,620
Das nicht passiv lauscht sondern aktiv das gerät abfragt und das kostet so viel batterie

2074
03:19:39,300 --> 03:19:42,580
Und die projekte die passiv abfragen fragen nicht die batterie ab

2075
03:19:43,260 --> 03:19:47,300
Ich habe es jetzt so gemacht ich lausche passiv was das gerät für sensorwerte schickt

2076
03:19:47,300 --> 03:19:58,900
Und alle fünf stunden frage ich einmal die batterie ab das so das beste aus beiden welten finde ich okay funktioniert leute

2077
03:20:02,100 --> 03:20:04,100
Nice

2078
03:20:06,660 --> 03:20:11,580
Batterie 99 prozent 1008 als schlugs 23,1 grad perfekt

2079
03:20:11,580 --> 03:20:15,300
Ja das ist cool

2080
03:20:18,780 --> 03:20:21,780
So ein bisschen pains champiger code aber es funktioniert

2081
03:20:25,380 --> 03:20:28,220
Gamepad dankeschön für den primes ab

2082
03:20:29,780 --> 03:20:34,940
Und jetzt ab in den cool champ leute soll ich mal soll ich mal in kühlschrank legen und wir wollen mal zugucken

2083
03:20:34,940 --> 03:20:42,820
Soll ich mal ich kann rüber gehen in kühlschrank in der hoffnung ich habe den controller so liegen dass es noch vom kühlschrank funktioniert

2084
03:20:42,820 --> 03:20:48,100
Weil die sache ist die jetzt ist es so der kühlschrank ist wirklich auf der anderen seite vom stockwerk

2085
03:20:48,700 --> 03:20:50,700
Manchmal funktioniert vielleicht manchmal nicht

2086
03:20:51,260 --> 03:20:58,380
Ich werde natürlich den controller dann in flur machen weil ich will ja auch noch das müssen wir auch noch irgendwann an der nächsten striefe meine waage

2087
03:20:58,380 --> 03:21:04,540
Meine waage verschickt ja auch über bluetooth die werte die sollen ja auch noch rein

2088
03:21:04,540 --> 03:21:34,300
Pippo fett champ ich bringe sie kühlschrank

2089
03:22:04,540 --> 03:22:11,100
Ups ich habe mich schon gemutet ich kann ich starte mal neu ihr habt es gar nicht gehört wie ich unter tisch gekrabbelt bin

2090
03:22:11,580 --> 03:22:13,580
Ich starte mal neu ich habe es noch nicht im kühlschrank

2091
03:22:15,100 --> 03:22:17,100
Ich will jetzt erstmal gucken dass er alles erkennt

2092
03:22:18,140 --> 03:22:21,180
Ok batterie 99 wollte nämlich gucken dass das gerät auch auf jeden fall alles

2093
03:22:23,180 --> 03:22:26,700
Temperatur hat er erkannt alles klar ok ich werde jetzt den kühlschrank bringen

2094
03:22:26,700 --> 03:22:32,660
Zack

2095
03:22:56,700 --> 03:23:14,300
ist das gerade noch hochgegangen wo ich schon wieder da war 24,8 null

2096
03:23:14,300 --> 03:23:26,220
ja wahrscheinlich weil ich es in der hand hatte ok illumination 0 ist es ja im kühlschrank

2097
03:23:26,220 --> 03:23:34,980
und es ist dunkel datenlöschen nö nö wir gucken da jetzt zu wie es kälter wird

2098
03:23:34,980 --> 03:23:43,220
aktuell haben wir noch 3 und noch 24,8 wie viel platz ist auf dem ganzen flash noch für lips

2099
03:23:43,220 --> 03:23:54,540
gucken wir mal 25 prozent also nenne mal so viel aber das reicht also für einen web interface mit

2100
03:23:54,540 --> 03:24:05,980
ota sollte das noch reichen so wir müssen jetzt abwarten ob das ding sich meldet aus

2101
03:24:05,980 --> 03:24:23,940
im kühlschrank das problem ist nämlich so wirklich weiß ich nicht ob es funktioniert

2102
03:24:23,940 --> 03:24:39,900
22,5 geht runter es droppt plus usb ip ne ne das ding geht ja komplett über den wlan ich

2103
03:24:39,900 --> 03:24:44,620
kann es auch so alles abfragen ich werde das werde das in flur hängen wenn es so weit ist

2104
03:24:44,620 --> 03:24:54,380
aber es funktioniert 22,5 leute beobachtet das mal ich gehe mal kurz pinkeln

2105
03:26:14,620 --> 03:26:42,460
und

2106
03:26:42,460 --> 03:26:52,620
funktioniert der kühlschrank champ hat schon nichts getan sonst oder oder hat sich was getan

2107
03:26:52,620 --> 03:27:22,380
22,5 naja also es könnte jetzt ein problem sein also es könnte ein problem sein dass es jetzt

2108
03:27:22,380 --> 03:27:27,540
nicht das signal kommt durch es hat eben schon 22,5 gemeldet da war es ja schon im kühlschrank

2109
03:27:27,540 --> 03:27:35,340
das problem ist dass nicht mehr jedes signal durchkommt es kommt wir haben es jetzt letzte

2110
03:27:35,340 --> 03:27:40,820
mal getestet es kommt normalerweise sind sie in fünf sechs signale die kommen alle durch wenn

2111
03:27:40,820 --> 03:27:45,740
das ding im kühlschrank liegt kommt nur noch ein signal oder zwei signale durch von irgendwie

2112
03:27:45,740 --> 03:27:58,340
56 und er muss genau zur gleichen zeit zufällig scannen während das ding das schickt also es

2113
03:27:58,340 --> 03:28:03,660
ist auf jeden fall sinnvoller das ding in flur zu hängen anstatt hier am rechner hängen zu

2114
03:28:03,660 --> 03:28:11,900
lassen ich mein ich kann den ich kann den scan intervall ne dauer scan kann ich nicht weil ich

2115
03:28:11,900 --> 03:28:28,620
wlan an hab wenn ich dauer scanne kackt das wlan ab oh guck mal 15,7 ist runtergegangen

2116
03:28:28,620 --> 03:28:40,220
habt ihr gesehen 15,7 also es funktioniert alles hat halt ein bisschen verzögert aber

2117
03:28:40,220 --> 03:28:46,540
damit kann ich leben zumal wenn das im flur hängt dann ist es auch besser vom empfang

2118
03:28:46,540 --> 03:28:55,060
her was für ein wappen der fest das ist haumassistent wie kalt wird es noch ja 10 grad oder so wo das

2119
03:28:55,060 --> 03:29:02,900
liegt beides in den kühlschrank ne da komme ich im wlan nicht richtig raus dann das ding

2120
03:29:02,900 --> 03:29:09,380
kommt in flur das ding kommt in flur oder vielleicht neben den kühlschrank aber nicht

2121
03:29:09,380 --> 03:29:15,780
in den kühlschrank und das soll dann auch die waage auf am bad empfangen übrigens ich

2122
03:29:15,780 --> 03:29:20,660
habe mir das interessiert ich habe als waage me scale ich bin mir nicht ganz sicher welche

2123
03:29:20,660 --> 03:29:26,580
me scale ich muss mal kurz bei amazon gucken die haben wir auch mal im stream schon ausprobiert

2124
03:29:26,580 --> 03:29:37,260
by the way ich muss mal kurz gucken welche version weil das entscheidend ist was ich machen muss

2125
03:29:37,260 --> 03:29:54,380
dafür scale me body composition scale ok scale 2 habe ich ne scale 2 scale 2 blue truth esp 32

2126
03:29:54,380 --> 03:30:11,620
guck da bäm da kann man sich abgucken wie das funktioniert mit der waage ab

2127
03:30:11,620 --> 03:30:25,140
wo man sind immer so viel bei den was haben wir jetzt 15,1 hatte mir eben schon 15,1 sensor

2128
03:30:25,140 --> 03:30:38,060
und so und es ist runtergegangen ist runtergegangen von 15,7 auf 15,1 nein ich will das nicht ich will

2129
03:30:38,060 --> 03:30:54,500
mein gewicht nicht in die china china cloud hochladen leute password leak so also wie

2130
03:30:54,500 --> 03:30:59,940
machen wir machen der typ das hier wie kann man die waage auslesen soll das ganze mqt tt

2131
03:30:59,940 --> 03:31:10,300
im mqtt zeug ich kann nicht den code benutzen weil ich will es auf dem gleichen gerät laufen

2132
03:31:10,300 --> 03:31:24,780
lassen da will ich ja ich will ja meins haben und die waage drin so was machen die dann hier

2133
03:31:24,780 --> 03:31:40,380
zeig mal hier was zum geier irgendwelche string to to to int oder sowas halbe halbe die esp 32

2134
03:31:40,380 --> 03:31:48,460
sind eigentlich kein arduino aber die haben 13,5 die haben arduino die haben so ein arduino

2135
03:31:48,460 --> 03:31:55,300
compatible compatibility layer obendrauf das heißt man kann auch arduino, guck mal es geht

2136
03:31:55,300 --> 03:32:00,500
wirklich weiter runter man kann arduino zeug verwenden oftmals ist es allerdings sinniger

2137
03:32:00,500 --> 03:32:11,740
die schon eingebauten sachen zu verwenden zum beispiel für mehrere threats und tasks und sowas

2138
03:32:11,740 --> 03:32:25,380
so also wie machen wir machten der typ das jetzt oth ist mir auch otha ist mir auch egal callback

2139
03:32:25,380 --> 03:32:35,180
das ist auch nix hat auch nix mit der waage zu tun reconnect

2140
03:32:35,180 --> 03:32:42,820
ja das haben wir gesehen das geht zusammen

2141
03:32:42,820 --> 03:33:07,500
hier ok also wie zum geier lesen die sachen aus der waage aus

2142
03:33:07,500 --> 03:33:21,060
gern oft bla bla bla habt ihr jetzt irgendwas ach hier found devices

2143
03:33:21,060 --> 03:33:49,820
ask and results ok ok

2144
03:33:49,820 --> 03:33:57,980
ok das gucke ich mir heute definitiv nicht an das gucke ich mir in einem der nächsten

2145
03:33:57,980 --> 03:34:04,460
sachen an also have service data und dann wieder irgendwie magic magic sachen auslesen wo was wo

2146
03:34:04,460 --> 03:34:12,060
was drinne steht ok bei the way mir fällt gerade ok 12,3 schon es geht runter mir ist gerade

2147
03:34:12,060 --> 03:34:18,220
aufgefallen dass es für die waage gar nicht so gut funktioniert weil ich bin wieder dran ich

2148
03:34:18,220 --> 03:34:23,820
war ich war zwei stunden weg zwischendurch habe reifen gewechselt also direkt die idf nutzen

2149
03:34:23,820 --> 03:34:29,060
nee ich mache es trotzdem am liebsten mit platform i o und dem arduino aufsatz einfach weil es

2150
03:34:29,060 --> 03:34:35,380
ein paar libraries gibt die nice sind und du kannst ja wenn du wenn du wenn du arduino verwendest du

2151
03:34:35,380 --> 03:34:39,500
kannst ja auch die sachen die unten drunter sind verwenden einzige was du nicht machen kannst den

2152
03:34:39,500 --> 03:34:47,980
die projekt settings im idf ändern aber die standard arduino settings sind ganz ok manchmal

2153
03:34:47,980 --> 03:34:53,260
ist es doof weil du weil du bestimmte sachen nicht enablen kannst aber in der zu 99 prozent

2154
03:34:53,260 --> 03:35:01,380
ist ok wir haben auch schon mal idf projekt hier gemacht irgendwann im stream aber meistens

2155
03:35:01,380 --> 03:35:10,420
mache ich wirklich die arduino geschichte mir ist aufgefallen mit der waage funktioniert es gar

2156
03:35:10,420 --> 03:35:17,620
nicht so gut weil die waage schickt einmal nachdem es fertig ist schickt das die die werte so und das

2157
03:35:17,620 --> 03:35:28,140
problem ist jetzt dass so selten wie ich gerne kriege ich das garantiert nicht mit dass die

2158
03:35:28,140 --> 03:35:35,580
waage am start ist dass die bagging gibt es nicht die bagging kannst du printline machen oder du

2159
03:35:35,580 --> 03:35:39,980
brauchst ein hardware die bagger aber dafür ist das wenn du ein hardware die bagge hast es ist

2160
03:35:39,980 --> 03:35:45,900
hier ein plattform ganz gut integriert deswegen kann ich dir nur empfehlen den plattform

2161
03:35:45,900 --> 03:35:59,620
ein ok damit ist es relativ easy wer hat besseren sleep arduino nano oder die 1 mini die sind beide

2162
03:35:59,620 --> 03:36:11,980
nicht sonderlich gut ok den nano bin ich mir gar nicht so sicher da bin ich mir gar nicht sicher

2163
03:36:11,980 --> 03:36:22,140
was es braucht 0,3 milliampere ist definitiv nicht perfekt für batterien das sind 300 microampere

2164
03:36:22,140 --> 03:36:31,860
das ist total viel das ist das ist ganz relativ schnell eher ok also 10 microampere ist in

2165
03:36:31,860 --> 03:36:37,860
ordnung mit 10 microampere kann man leben der demo mini an dem musst du ordentlich rumlöten

2166
03:36:37,860 --> 03:36:46,700
dass du den irgendwie auch nur halbwegs strom sparen bekommst jeezy pro 36 v2 dankeschön für

2167
03:36:46,700 --> 03:36:56,540
den zapp excellent subscription welcher chip ist der beste für deep sleep also wenn du

2168
03:36:56,540 --> 03:37:07,620
wirklich deep sleep projekte machen willst ja das trickboard wobei ich ganz ehrlich da

2169
03:37:07,620 --> 03:37:12,180
kein großartiger fan von bin das ist ziemlich teuer du musst es importieren es ist nur

2170
03:37:12,180 --> 03:37:17,500
ein esp 2866 wobei ich glaube die gibt es mittlerweile auch von esp 23 variante aber

2171
03:37:17,500 --> 03:37:22,540
das schaltet alles ab also du kannst auch keinen speicher mehr benutzen ja das ist halt

2172
03:37:22,540 --> 03:37:33,620
wirklich für ultra low power und auch nur wenn du nach time aufwachen willst das ding

2173
03:37:33,620 --> 03:37:50,060
hier ist gut für deep sleep das ding hier ist gut für deep sleep das ist extra dafür

2174
03:37:50,060 --> 03:37:54,300
gemacht und du hast direkt einen batterie connector wo du irgendwelche akkus dran machen

2175
03:37:54,300 --> 03:38:02,860
kannst wenn du da 1200 oder 2000 milliampere stunden akku dran machst und klein sodass

2176
03:38:02,860 --> 03:38:09,620
das quasi hier drunter passt dann kannst du das ding durchaus 23 jahre sleepen lassen

2177
03:38:09,620 --> 03:38:18,900
wenn du nur selten aufwachst natürlich ja und je nachdem wie sich der akku entlädt

2178
03:38:18,900 --> 03:38:27,700
aber das frisst so gut wie nichts das sind das sind im deep sleep 10 10 10 microampere

2179
03:38:27,700 --> 03:38:31,740
und mal kurzzeitig ein bisschen mehr wenn es aufwacht aber wenn du nur drei viermal

2180
03:38:31,740 --> 03:38:37,540
am tag aufwachst um was zu übertragen das hält wirklich verdammt lang gibt es auch

2181
03:38:37,540 --> 03:38:54,980
so ein battery life hier genau aber da gab es einen besseren da gab es einen besseren

2182
03:38:54,980 --> 03:39:13,500
der da der da der hier oh ne der war ganz gut der ist weg rib ne so do it yourself alexa

2183
03:39:13,500 --> 03:39:21,180
gibt es nicht wirklich so viel gutes es gibt das hier das aber was mich daran nervt ist

2184
03:39:21,180 --> 03:39:38,020
dass die dass man das handy nicht verwenden kann

2185
03:39:38,020 --> 03:39:51,620
ist das falsche projekt es gibt eine flatte ab wirklich echt die muss ich mal ausprobieren

2186
03:39:51,620 --> 03:40:00,820
aber bestimmt nicht für ios ach es moved ab wo gibt es eine ab wir würden ja sogar

2187
03:40:00,820 --> 03:40:20,180
eine pva oder so reichen ab wo gibt es eine ab flatter hast du mal link also das stört

2188
03:40:20,180 --> 03:40:28,620
mich halt dass mein handy nicht dafür verwenden kann so wie warm 10,7 grad im kühlschrank

2189
03:40:28,620 --> 03:40:41,780
leute des sieh gut aus was ist das gibt es für ios ok das schon mal ganz praktisch

2190
03:40:41,780 --> 03:41:05,340
ok aber ohne scheiß dem würde ich das sogar bezahlen die gebühren für den store

2191
03:41:05,340 --> 03:41:24,780
gut ich brauche schon eine app im store sonst ist er doof ok das ist schon mal ganz gut

2192
03:41:24,780 --> 03:41:29,300
aber das kann auch text to speech oder also ich muss da nicht tippen da kann schon text

2193
03:41:29,300 --> 03:41:40,300
to speech warum machen die nicht eigentlich einfach eine pva warum machen die nicht eine

2194
03:41:40,300 --> 03:41:56,300
pva spricht kann man kann man in einer pva nicht text to speech machen warum ist das

2195
03:41:56,300 --> 03:42:16,940
hier eigentlich nicht verlinkt pva ok auf die idee ist noch keiner gekommen doch ja

2196
03:42:16,940 --> 03:42:31,900
so lange es da keine smartphone apps für gibt ist das so ein bisschen pains champig

2197
03:42:31,900 --> 03:42:36,460
aber das könnte man auch mit einer pva machen das wäre doch viel sinnvoller dann muss es

2198
03:42:36,460 --> 03:42:54,580
auch nicht ins store da muss es auch nicht ins store bringen naja gut wie gesagt also

2199
03:42:54,580 --> 03:43:08,420
ohne ohne smartphone apps finde ich halt ein bisschen doof ok vielleicht hat es einen

2200
03:43:08,420 --> 03:43:13,100
grund warum das nicht geht mit pva so wir sind bei 10,4 grad leute das funktioniert

2201
03:43:13,100 --> 03:43:21,660
alles nee ich will da keine eigene app verbauen pains champ aber vielleicht funktioniert das

2202
03:43:21,660 --> 03:43:30,340
ja es spricht sagen wir man kann doch unter ios in der pva auf das mikrofon zugreifen

2203
03:43:30,340 --> 03:43:54,900
oder

2204
03:43:54,900 --> 03:43:59,540
ios macht man wieder einen strich durch die rechung dass die kram nicht richtig funktioniert

2205
03:43:59,540 --> 03:44:08,020
was ist der unterschied zwischen pva und elektron naja pva ist im prinzip nur die webseite

2206
03:44:08,020 --> 03:44:13,380
die dann quasi als verknüpfung auf dem homescreen ist eine elektron app müsst ihr über den

2207
03:44:13,380 --> 03:44:31,860
store verteilen obwohl es auch nur ein browser ist ja das ist mal wieder pains champ dass

2208
03:44:31,860 --> 03:44:46,580
das und der apple wohl nicht richtig funktioniert aber das vielleicht geht das doch und das

2209
03:44:46,580 --> 03:44:57,780
ist einfach nur alt ist der gopher flow einträge super du wirst schon mal ausprobieren aber

2210
03:44:57,780 --> 03:45:03,460
ich will keine eigene app machen das ist mir zu pains champ also was heißt app ich müsste

2211
03:45:03,460 --> 03:45:12,140
ja eine webseite einfach nur machen wenn es easy ist komm mal 10,4 nice wenn es easy ist

2212
03:45:12,140 --> 03:45:28,180
könnte man sich das überlegen was es ist composed of independent software ok man kann

2213
03:45:28,180 --> 03:45:37,340
keine app machen man kann keine app machen weil mqtt ist nicht websockets und nicht sonst

2214
03:45:37,340 --> 03:45:48,780
ist ein eigenes protokoll das geht über webseiten nicht da haben wir schon keine pva vielleicht

2215
03:45:48,780 --> 03:46:03,420
haben die aber auch die möglichkeit ist über den webservice zu machen a websocket api ok

2216
03:46:03,420 --> 03:46:19,020
dann ist wiederum ok dann geht das ja das wüsste ich mal ausprobieren ein bisschen

2217
03:46:19,020 --> 03:46:34,180
rumbasteln aber wichtig für mich ist dass es mobile apps gibt ich will mein handy in

2218
03:46:34,180 --> 03:46:47,220
der hand haben und zweifeln von voice kommando machen können so aber ich würde sagen 10

2219
03:46:47,220 --> 03:46:55,820
grad im kühlschrank ich würde sagen dass ich hier ist wirklich erfolgreich ihr seht

2220
03:46:55,820 --> 03:47:20,260
der sensor tut sensorik champ man könnte jetzt noch man könnte jetzt noch massive craft

2221
03:47:20,260 --> 03:47:31,820
champ machen sensor ist aber wie heißt mein sensor sack der ist mein sensor cool champ

2222
03:47:31,820 --> 03:47:53,380
warum ist er da nicht drin weil es nicht cool champ heißt sondern sollte der sensor nicht

2223
03:47:53,380 --> 03:48:18,100
cool champ heißen ane mecha adresse hinten dran also temp den sensor brauchen wir huge

2224
03:48:18,100 --> 03:48:41,860
huge crafts kwh wait a minute keck weight was ist mit dem graph los

2225
03:48:41,860 --> 03:48:49,340
der craft gibt überhaupt keinen sinn

2226
03:48:49,340 --> 03:48:56,100
komm mal so sieht der craft aus warum geht der craft da hoch

2227
03:48:56,100 --> 03:49:04,820
findet ihr dass das hier und das hier irgendwie ähnlich aussehen

2228
03:49:04,820 --> 03:49:17,780
ok aber warum

2229
03:49:17,780 --> 03:49:38,060
das ergibt keinen sinn ah ok das sieht besser aus das sieht besser aus das sieht besser

2230
03:49:38,060 --> 03:49:50,620
aus alles klar ja der cool champ ja ok was auch immer der problem war ich brauche noch

2231
03:49:50,620 --> 03:50:04,940
ein bisschen mehr daten ok alles klar das funktioniert gut excellent craft jetzt habe

2232
03:50:04,940 --> 03:50:12,900
ich meine temperatur vom kühlschrank das ist nicht nice ja wie lange hält die batterie

2233
03:50:12,900 --> 03:50:19,460
circa das weiß ich noch nicht aber sobald ich das in betrieb nehme werde ich das in

2234
03:50:19,460 --> 03:50:26,580
meinen batterie champ einbauen der batterie champ nicht nicht der heizungs champ sondern

2235
03:50:26,580 --> 03:50:35,580
in den managed dashboard batterie wo ich die ganzen sensor batterie oder zumindest die

2236
03:50:35,580 --> 03:50:40,980
meisten und die wichtigsten sensor batterien drinne habe dann sehe ich wann es der sache

2237
03:50:40,980 --> 03:50:49,900
zur neige geht und ich sehe dass der tür sensor unten an der eingangstür ein bisschen leer

2238
03:50:49,900 --> 03:50:54,780
ist darf ich fragen wieso du ein sensor in meinem kühlschrank hast also der erste sache

2239
03:50:54,780 --> 03:50:59,900
ist natürlich weil ich sensoren übrig habe und weil es geht das ist schon mal das wichtigste

2240
03:50:59,900 --> 03:51:05,700
an der sache und das nächste ist weil ich mitbekommen will wenn mein kühlschrank rum

2241
03:51:05,700 --> 03:51:11,500
spackt da ist nämlich ein bisschen weiß ich nicht kaputt ja doch oder zumindest nicht

2242
03:51:11,500 --> 03:51:15,860
darauf kaputt der muss man manchmal rebooten weil er komische geräusche macht ich habe

2243
03:51:15,860 --> 03:51:19,740
ein bisschen bedenken dass der mal den geist aufgibt nicht kriegt das erste tach später

2244
03:51:19,740 --> 03:51:26,660
und ein halben tach später mit und hier siehst du das natürlich wunderbar jetzt du hast

2245
03:51:26,660 --> 03:51:37,300
jetzt hier direkt drinnen temperatur vom kühlschrank temperatur vom kühlschrank doch hier mit

2246
03:51:37,300 --> 03:51:43,660
verlauf hier war es draußen habe hier ein bisschen kühlschrank gelegt und du siehst

2247
03:51:43,660 --> 03:51:49,060
den batteriestand vom sensor und ob ich die tür aufgelassen habe weil normalerweise ist

2248
03:51:49,060 --> 03:51:55,540
es im kühlschrank dunkel das heißt wir haben hier null helligkeit und wenn ich den kühlschrank

2249
03:51:55,540 --> 03:52:04,420
aufmache oder den oder das licht drinnen angeht dann kriege ich hier was und da kann

2250
03:52:04,420 --> 03:52:13,380
ich sagen ey wenn das licht länger an ist als zwei minuten dann mach was für was verwendest

2251
03:52:13,380 --> 03:52:22,340
du wie es kaut im home assistant kann man editieren kann man konfig editieren ich habe

2252
03:52:22,340 --> 03:52:31,540
aber das ist nur meine testinstanz ne setzt du auch notifications habe ich grad nicht

2253
03:52:31,540 --> 03:52:39,060
ne bin ich am überlegen aber ich gucke da so oft rein ich krieg das schon mit so 10,1

2254
03:52:39,060 --> 03:52:45,940
ist viel kälter wird es nicht mehr der kühlschrank ist glaub eingestellt auf unten 5 oben 10

2255
03:52:45,940 --> 03:53:05,420
oder es liegt in der mitte oder umgedreht passt eigentlich gut äh welches board oh ich glaub

2256
03:53:05,420 --> 03:53:22,620
meine katze will will rein als board habe ich grad als basis für diese geschichte habe

2257
03:53:22,620 --> 03:53:39,580
ich

2258
03:53:39,580 --> 03:53:49,540
sind. Aber der ist ernsthaft nicht schlecht. Der ist relativ klein, nicht mini, also nicht

2259
03:53:49,540 --> 03:53:54,500
ultra klein, auch wenn er mini heißt, aber ist okay und ist preisleistungsmäßig echt

2260
03:53:54,500 --> 03:54:03,020
in Ordnung. Nur für Deep Sleep und Batterie-Projekte ist das nix. Weibliche Chico, ja, es ist ein

2261
03:54:03,020 --> 03:54:10,740
bisschen merkwürdig, ich hab mir das nicht ausgesucht. Ähm, meine Katze. Also die da.

2262
03:54:10,740 --> 03:54:29,460
Wo ist der? Hier. Die da. Das Bild, äh. Oho, stinkig, das Hemd, so geil. Heißt Chico,

2263
03:54:29,460 --> 03:54:43,060
aber ist ne Katze. Was saugt denn den Strom auf dem Board? Hä, was meinste? Der CPU,

2264
03:54:43,060 --> 03:54:50,180
WLAN, Bluetooth. Aber insgesamt braucht es nicht viel, also zu Spitzenlastzeiten, keine

2265
03:54:50,180 --> 03:54:59,420
Ahnung, 150, 200mAh vielleicht. Also du musst dich schon ganz schön anstrengen, wenn du

2266
03:54:59,420 --> 03:55:05,860
mal so ein Messgerät anschließt, du musst dich schon ganz schön anstrengen, dass du

2267
03:55:05,860 --> 03:55:12,740
auf nen Watt kommst mit nem ESP32. Also da musst du schon, da musst du schon einiges

2268
03:55:12,740 --> 03:55:17,100
machen. Da musst du wahrscheinlich beide CPU Kerne voll auslasten plus WLAN und Bluetooth

2269
03:55:17,100 --> 03:55:31,420
machen, dass du das schaffst. Äh, droh USB, einfach USB. Was übrigens auch der Grund

2270
03:55:31,420 --> 03:55:35,260
ist, warum diese Boards für Deep Sleep nicht so gut sind, weil die meisten, auch wenn

2271
03:55:35,260 --> 03:55:42,180
sie von der Batterie gepowert werden, den USB Spannungswandler und den 5V Spannungswandler

2272
03:55:42,180 --> 03:55:58,380
noch versorgen und das macht halt keinen, verbraucht halt unnütz Strom, ja. Der D1

2273
03:55:58,380 --> 03:56:04,380
Mini, also bei dem ESP32 D1 Mini weiß ich nicht, aber bei dem alten war es so wie gesagt

2274
03:56:04,380 --> 03:56:07,580
die Spannungswandler für Sachen, die du eigentlich gar nicht brauchst, war noch standardmäßig

2275
03:56:07,580 --> 03:56:13,940
versorgt, USB war standardmäßig mit versorgt, es waren 1-2 LEDs an. Also du kannst an dem

2276
03:56:13,940 --> 03:56:18,980
Board rumlöten und du kriegst es bestimmt auch zu nem relativ guten Deep Sleep, aber

2277
03:56:18,980 --> 03:56:22,060
du hast keinen Batterie-Connector und es ist nicht für Deep Sleep gedacht. Das heißt

2278
03:56:22,060 --> 03:56:27,100
du kannst dir für 6,50 einfach nen Board kaufen, was gut gedacht ist für Deep Sleep und einen

2279
03:56:27,100 --> 03:56:34,220
Batterie-Connector hat. Ja das Problem ist, wenn du den Kram durchschneidest, du willst

2280
03:56:34,220 --> 03:56:39,860
das Board ja später per USB noch anschließen können, um es zu flashen. Also das ganze rumlöten

2281
03:56:39,860 --> 03:56:47,780
und so. Ich würd einfach nen Board nehmen, was für Deep Sleep gedacht ist. Ja, wie gesagt

2282
03:56:47,780 --> 03:56:56,500
das ist ne Katze. Obwohl sie Chico heißt. Aber das hab ich mir nicht ausgedacht, das

2283
03:56:56,500 --> 03:57:05,180
haben sich die ehemaligen Besitzer ausgedacht. Die ist ja auch schon 12 oder so jetzt. Die

2284
03:57:05,180 --> 03:57:12,740
haben sich halt gedacht, Chico ist ein guter Mädchennamen. Ok 10,1, exellent. Leute wisst

2285
03:57:12,740 --> 03:57:16,020
ihr was, ich lass das Ding heute mal über Nacht im Kühlschrank und morgen guck ich

2286
03:57:16,020 --> 03:57:24,580
mal was das sagt. Man kann dort nen Jumper machen oder Lötstelle. Das kann man alles

2287
03:57:24,580 --> 03:57:30,220
machen. Aber warum kauft man sich nicht einfach für 6,50 ein Board, was für Deep Sleep und

2288
03:57:30,220 --> 03:57:38,740
Batterie-Projekte gedacht ist. Problem Solved. Ok ich mach das mal ab. Leute ich geh jetzt

2289
03:57:38,740 --> 03:57:44,460
ins Bett. Ich bin müde. Heute ganz schön lang gestreamt. Ist da Frazier oder irgendjemand

2290
03:57:44,460 --> 03:57:53,180
am Start, den man hosten kann? Nope. Kein Frazier am Start. Wie der Frazier war heute

2291
03:57:53,180 --> 03:58:15,260
nicht da, was hier lohnt am Feiertag? Zempervideos haben wir das letzte Mal schon gehostet. Sind

2292
03:58:15,260 --> 03:58:19,300
2,50 Unterschiede. Wenn das für dich relevant ist, musst du halt selbst dran rumlöten und

2293
03:58:19,300 --> 03:58:24,500
dich mit rum ärgern. Also Leute wir sehen uns. Machts gut bis denn. CU ich hoffe euch

2294
03:58:24,500 --> 03:58:30,180
hat es gefallen. Waren ja viele mit am Start bis jetzt zum Schluss und heute mal echt ein

2295
03:58:30,180 --> 03:58:50,580
bisschen was funktioniert hat und alles gut ist. Also machts gut. Bis denn. CU.

