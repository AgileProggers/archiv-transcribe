WEBVTT

00:00.000 --> 00:16.520
Whoa!

00:46.520 --> 00:47.520
Das war's für heute.

00:47.520 --> 00:48.520
Bis dahin, tschüss!

00:48.520 --> 01:16.520
Das war's für heute, bis dahin, tschüss!

01:16.520 --> 01:44.520
Das war's für heute, bis dahin, tschüss!

01:44.520 --> 01:46.520
Das war's für heute.

01:46.520 --> 01:48.520
Bis dahin, tschüss!

01:48.520 --> 01:50.520
Das war's für heute.

01:50.520 --> 01:52.520
Bis dahin, tschüss!

01:52.520 --> 02:21.520
Das war's für heute.

02:21.520 --> 02:22.520
Einfaches, ja?

02:22.520 --> 02:27.100
Was ich aber schon eine Weile ausprobieren wollte, nämlich, ob man gescheit Rust und

02:27.100 --> 02:29.780
.NET zusammen verwenden kann.

02:29.780 --> 02:32.800
Von der Idee her ist es easy, ja?

02:32.800 --> 02:39.200
Einfach Rust Functions als C mit C-Interface exportieren und dann in C-Shop importieren,

02:39.200 --> 02:41.220
aber ja, mal gucken.

02:41.220 --> 02:45.500
Hab ich noch nie gemacht.

02:45.500 --> 02:47.500
Aber

02:49.940 --> 02:55.500
Vielleicht sollte ich mal bevor der stream richtig anläuft und die leute da sind vielleicht soll ich mein update machen

02:55.900 --> 02:58.420
Ja genau so macht man update so nicht anders

02:59.540 --> 03:01.540
Ich habe meine klimaanlage an

03:04.780 --> 03:11.600
Die läuft die steht auf 26 grad das reicht das ist dann meistens ein bisschen kühler als 26 grad zählt man aus ansonsten ist

03:11.600 --> 03:15.100
Irgendwie 28,5 oder so viel zu warm also

03:16.500 --> 03:19.500
Klimaanlage einbauen war tatsächlich eines der besten sachen

03:20.540 --> 03:24.760
Die ich so überlegt habe denn die letzten jahre über ja

03:25.740 --> 03:27.740
Warum ist der download so langsam?

03:29.860 --> 03:31.860
Was ist denn da los

03:31.860 --> 03:39.420
Warum ist das warum ist das so langsam ich habe eine split anlage ja sollte der nicht mehrere sachen gleichzeitig

03:40.220 --> 03:42.220
downloaden eigentlich

03:42.780 --> 03:46.020
Sekunde das muss ich mal kurz überprüfen sudo

03:47.540 --> 03:49.540
Wartet mal etc pack man

03:51.300 --> 03:53.300
Mein konf

03:53.620 --> 03:55.620
parallel download nee

03:55.620 --> 04:01.540
Ach gott wie ging das pack man parallel download das müssen wir uns mal kurz angucken

04:03.220 --> 04:07.220
Was mit der seite los monka

04:10.740 --> 04:14.980
Hier parallel download gleich fünf hatte ich das nicht schon mal gesetzt

04:15.780 --> 04:17.780
Na gut, ich habe es jetzt schon mal gesetzt

04:18.260 --> 04:20.260
Aber ich habe es jetzt schon mal gesetzt

04:20.260 --> 04:27.260
Parallel download gleich fünf hatte ich das nicht schon mal gesetzt na gut im zweifelsfall setzen wir es noch mal

04:28.540 --> 04:30.540
War hier noch nicht gesetzt ok

04:31.900 --> 04:33.900
Dann

04:34.380 --> 04:37.860
Ah jetzt flutscht jetzt flutscht

04:38.700 --> 04:42.300
Ja ich muss mal kurz updaten bevor wir anfangen ist ist

04:42.300 --> 04:49.940
Ich weiß schon eine weile ja nicht mehr an und wir haben auch schon eine weile nichts mehr gebastelt im stream und

04:51.180 --> 04:56.060
Da muss ich erst mal updaten jetzt das geht aber schnell das ist ja kein windows update was jetzt erst mal

04:56.500 --> 04:59.980
20 minuten rum macht es dauert drei vier minuten dann ist das ist das durch

05:01.580 --> 05:06.860
Ja aber ich habe eine split klimaanlage ich habe ein außen gerät und zwei innen geräte und ich glaube ich könnte maximal

05:07.500 --> 05:10.140
fünf innen geräte da dran anschließen ich habe eine

05:10.140 --> 05:12.540
mit so bischi heavy

05:14.140 --> 05:17.940
Wenn man mit so bisschen mutti buschi alles klar

05:22.860 --> 05:30.340
Eine ja von denen habe ich was ja sieht mehr oder weniger sieht mehr oder weniger so aus wie das ding das kommt auch ungefähr hin

05:31.380 --> 05:33.380
zrk

05:33.380 --> 05:34.580
zrk

05:34.580 --> 05:42.660
20 zsw ich bin mir nicht sicher ob es das die ist aber das klingt relativ ähnlich zu der die ich die ich

05:43.900 --> 05:45.900
gekauft habe ja

05:46.980 --> 05:48.980
Ja so ein teil

05:49.900 --> 05:52.100
So ein teil habe ich an der wand

05:54.140 --> 05:58.540
Sowas hängt außen und sowas hängt bei mir im arbeitszimmer und im schlafzimmer

05:58.540 --> 06:06.300
Drinnen kann ich mich nicht beschweren ist wirklich in ordnung

06:07.420 --> 06:13.820
Besser besser auf jeden fall als diese kompromiss dinger mit schlauch durchs fenster und so das

06:16.220 --> 06:22.060
Aber klimaanlage kann ich nur empfehlen die zweite sache die ich empfehlen kann ist ein klo mit popo spülung

06:22.060 --> 06:27.580
Aber und natürlich ein gut guter büro stuhl ordentlicher büro stuhl

06:28.260 --> 06:31.060
Für 24 sieben sitzen ausgelegt

06:31.660 --> 06:38.100
Klo dass den bob es abspritzen kann und eine klimaanlage das sind so die wichtigsten sachen die man für daheim braucht

06:42.100 --> 06:47.940
Mit so bischi ist ein riesen ding die das sind ja auch teilweise das sind ja unter komplett unterschiedliche unternehmen mittlerweile

06:47.940 --> 06:55.300
Die die haben ja sogar zwei verschiedene klimaanlagen sparten die haben mit so bischi elektrik und mit so bischi heavy industries

06:55.300 --> 06:57.300
Die machen beides klimaanlagen

07:01.500 --> 07:06.460
Und nein meine sinkpad battery functions funktionieren nicht das ist ja ganz schlimm in meiner vm

07:11.700 --> 07:13.940
Na ja wenn sie aus ist kostet es kein geld

07:13.940 --> 07:16.340
Aber du wirst sie mehr als 20 tage im jahr brauchen

07:17.660 --> 07:23.860
Du wirst die bestimmt zwischendurch auch mal für also man kann ja für mehrere sachen verwenden du kannst die wenn du allergisch bist gegen

07:24.460 --> 07:27.740
irgendwelche polen gräser und sonst was kannst du damit

07:28.300 --> 07:29.380
das

07:29.380 --> 07:34.460
Filtern lassen oder was es das filtert ja nicht dass das das elektroschock die dinger ja immer und

07:34.780 --> 07:39.540
Und dann sind dann geht das geht das zeug kaputt irgendwie weiß nicht wie das genau funktionieren

07:39.540 --> 07:45.460
Also wenn man wenn man allergien hat gegen irgendwelche polen und gräser dann ist das ganz sinnvoll

07:46.140 --> 07:52.940
Du kannst damit wärmen im winter sollte mal deine heizung probleme haben und du kannst damit kühlen und es gibt ja mittlerweile schon

07:53.460 --> 07:54.740
auch

07:54.740 --> 07:56.260
Sagen wir mal

07:56.260 --> 07:58.260
gut januar februar

07:58.260 --> 08:00.260
märz april

08:00.580 --> 08:07.620
Mai mai mai juni gibt es ja manchmal so spitzen tage teilweise 35 grad oder so wo es dann mal ganz gut funktioniert

08:07.620 --> 08:13.500
35 grad oder so wo es dann mal ganz kurz so spiked hoch geht also wirst wahrscheinlich öfters verwenden

08:15.500 --> 08:21.140
Also ich kann das nur empfehlen klimaanlage ist porc sollte sich muss man paar y-zweck machen

08:25.020 --> 08:27.260
Also ich ich kann es nur empfehlen

08:27.260 --> 08:33.500
Ich 50 fenster auf habe ich hab nicht 50 fenster offen ich habe mindestens 300 fenster offen hier

08:35.260 --> 08:37.980
So jetzt müssen wir mal rebooten bevor wir richtig loslegen können

08:38.660 --> 08:40.580
mal körner

08:40.580 --> 08:42.700
Mal körner update machen noch mal bei der gelegenheit

08:43.580 --> 08:48.260
Und hier was haben wir denn hier 515 das ist ja uralt aber lts

08:49.580 --> 08:50.940
ja

08:50.940 --> 08:57.860
Scheiß drauf ich meine es ist nicht. So als wäre es für meine vor allem großartig den unterschied

09:00.220 --> 09:04.580
Und warum weil da halt sachen drin auf sind die ich auf haben will

09:04.780 --> 09:08.380
Wo ich vielleicht noch mal reingucken will und ich noch nicht zugemacht habe ich meine was ist denn schon mal

09:09.100 --> 09:11.100
Weil ich sie halt aufgemacht habe

09:11.100 --> 09:17.900
Also bei mir war das total einfach dass die klimaanlage kamen außen an die wand dann wurde ein loch gebohrt

09:18.700 --> 09:24.260
Durch die wand dahinter ist das arbeitszimmer und vom arbeitszimmer durch die andere wand ins schlafzimmer

09:24.780 --> 09:30.580
Ja, wenn du jetzt natürlich dann von der einen außen wand einmal quer durch stockwerk willst ins andere zimmer

09:30.580 --> 09:34.780
Man muss dann überlegen wo du das rohr lang machst das ist dann schon ein bisschen komplizierter ich bin auch

09:34.780 --> 09:42.300
gerade am überlegen ob ich nicht noch drei weitere anlagen anschließt weil ich kann ja bis zu fünf

09:45.180 --> 09:49.020
Also ich kann ja bis zu fünf in in geräte da dran anschließen an meiner klimaanlage

09:55.540 --> 09:57.540
Und ich bin gerade am überlegen ob ich

09:57.540 --> 10:04.580
Und ich bin gerade am überlegen ob ich nicht noch ins wohnzimmer oben eine packen soll so ein innengerät

10:05.300 --> 10:07.300
unten ins schlafzimmer und

10:12.580 --> 10:16.340
In in in flur wobei flur weiß ich nicht

10:18.420 --> 10:20.420
Ja mal gucken

10:21.060 --> 10:23.540
Wenn ich bin ich am überlegen ob ich nicht noch

10:23.540 --> 10:27.380
Ja mal gucken wenn ich bin ich am überlegen

10:28.580 --> 10:30.580
Ja es gibt jede menge

10:31.980 --> 10:37.180
Addons ja wo du das dann auch kopiert speichern kannst und so braucht man aber alles nicht ich zeig das mal

10:37.380 --> 10:41.140
Guck mal leute ihr könnt das markieren hier oben alle tabs auf einmal markieren

10:42.220 --> 10:44.220
und

10:44.260 --> 10:46.540
Ne das nicht und dann könnt ihr sagen

10:46.540 --> 10:48.540
Anlagen

10:51.340 --> 10:56.540
Ich hab vergessen wie es geht man konnte alle bookmarken lassen

11:01.020 --> 11:03.020
Bookmark all tabs kannst du mal

11:03.020 --> 11:14.180
Und dann kannst du den ordner auswählen wo das rein soll und dann kannst du die da drin speichern aber ganz ehrlich

11:18.140 --> 11:20.860
Klimaanlagen sind für mein klima im haus ziemlich gut

11:23.620 --> 11:25.620
Hat ja keinen sinn warum soll ich schwitzen

11:27.460 --> 11:29.460
Zahlt saumäßig warm

11:29.460 --> 11:31.460
So jetzt hat das ding rebooted

11:35.060 --> 11:41.540
Also es ist schon ein unterschied ob es 28 grad drinne ist oder 26 das macht schon was aus man muss es ja nicht übertreiben

11:41.540 --> 11:46.220
Man muss das jetzt ja nicht irgendwie auf 23 grad runter kühlen oder sowas

11:47.660 --> 11:52.700
Hast du solaranlage auf dem dach ne hätte ich aber gerne habe ich noch nicht ich habe mich dieses jahr

11:53.540 --> 11:57.540
Also ich hatte mich dieses jahr mal ein bisschen schlau gemacht welche richtung und so am besten ist

11:57.540 --> 11:59.540
aber

12:01.020 --> 12:05.940
Ich habe ich hätte ich hätte gern was ich bin mir aber noch nicht ganz sicher wie das am besten funktioniert

12:06.500 --> 12:10.260
muss ja auf jeden fall was mit batterie sein und dann ist es wieder die frage mit

12:10.820 --> 12:12.820
wie geht das dass man

12:13.180 --> 12:14.900
das irgendwie

12:14.900 --> 12:19.500
Anschließen kann an stromnetz und dann muss ja irgendwelche muss ja irgendwie mehrere

12:19.940 --> 12:24.100
zähler haben und und bis zu 600 watt gehen irgendwie ohne aber

12:24.100 --> 12:28.580
Ach, das ist das in deutschland wahnsinnig kompliziert. Ich habe so nicht so ganz gecheckt

12:40.500 --> 12:42.500
Na ja

12:42.580 --> 12:48.780
Also das dach ist gedämmt das ist glaube ich das einzige was halbwegs gedämmt ist aber das ist halt kein

12:48.780 --> 12:54.660
Kein keconer haus das ist ein haus das hatten wirklich richtig dicke

12:55.740 --> 13:02.580
Wie nennt sie das so diese dicken steine wo man oder opa früher wo opa und oma früher noch das haus mit gebaut haben

13:02.940 --> 13:04.940
Also das ist nicht wirklich isoliert

13:06.220 --> 13:08.220
Aber das ist kein papp haus

13:11.100 --> 13:13.100
Wenigen stromverbrauch ja gut

13:13.100 --> 13:17.900
Das stimmt schon aber es hat ja auch keinen sinn zu schwitzen irgendwo

13:29.780 --> 13:32.580
Ja also preise preise sind saumäßig hoch

13:33.340 --> 13:40.620
Ich glaube ich habe damals 2000 euro oder so bezahlt 2500 euro oder irgendwie sowas für dieses gesamte ding und heute bezahlt

13:40.620 --> 13:44.940
Du das irgendwie für so ein innen gerät oder so es ist teilweise schon echt übertrieben teuer

13:45.580 --> 13:47.580
So also jetzt haben wir den kram

13:51.100 --> 13:53.100
So

13:53.620 --> 13:57.980
Nee ich weiß es also wenn ich könnte euch genau sagen da müsste ich nachgucken

13:58.820 --> 14:04.340
Ich weiß es nicht mehr müsste ich auf die rechnung gucken die habe ich irgendwo noch was das gekostet hat alles in allem

14:04.940 --> 14:09.460
Der einbau war aber relativ schnell erledigt die haben das an einem halben vormittag gemacht also

14:09.460 --> 14:12.380
An einem halben tag die haben vormittags haben sie es eingebaut

14:12.860 --> 14:17.420
Die haben es morgens angerückt und irgendwie keine ahnung kurz vor zwölf waren die fertig war easy

14:22.060 --> 14:28.420
Also ich kann das nur empfehlen sich eine klimaanlage einzubauen ja das stimmt schon irgendwo dass das letztendlich für die gesamt wie soll man so die

14:29.020 --> 14:32.980
Gesamt energie verbrauchen so sicherlich nicht gut ist aber ganz ehrlich

14:34.100 --> 14:36.380
Irgendwann ist mit der selbst geißelung auch gut

14:36.380 --> 14:42.940
Ich meine man muss es nicht übertreiben wie die amis die ja teilweise gar keine fenster mehr aufmachen sondern nur klimaanlage

14:48.620 --> 14:51.100
Die ihre kranplätze welche kranplätze

14:52.980 --> 15:00.140
Das kann grad das einzige was sie gebraucht haben die hatten so was die hatten die hatten so was zum zum hochklettern

15:00.140 --> 15:04.540
An an an der seite das ist das ist jetzt nicht sonderlich hoch wo das hängt

15:08.380 --> 15:10.380
Ja die dinger mit schlauch sind kacke

15:10.900 --> 15:15.660
Deswegen habe ich ja auch vor zwei drei nehmt eigentlich wahrscheinlich sogar schon vier jahre her oder so ich weiß es gar nicht mehr

15:15.780 --> 15:17.780
habe ich mir das einbauen lassen

15:18.620 --> 15:21.620
Ja typisch typisch sparen das ist ja nichts neues

15:22.940 --> 15:24.020
Kackel

15:24.020 --> 15:25.780
So das war's für heute

15:25.780 --> 15:31.940
Das ist ja nichts neues ja kackel so noch mal hier updates machen und können wir anfangen

15:33.740 --> 15:38.740
Wie lange wir da verbrauchen heute weiß ich nicht genau wenn es klappt dann klappt wenn es nicht klappt wird es eklig

15:39.220 --> 15:41.220
erst noch mal hier updates machen

15:42.660 --> 15:45.060
Richtig richtig so sieht es aus

15:46.620 --> 15:50.140
Ja morgen gehe ich wieder arbeiten allerdings ich fahre die woche nicht nach frankfurt

15:50.140 --> 15:56.300
Das bin ich noch nicht fit genug ich mache die woche nach homeoffice und dann die woche drauf wieder

15:58.060 --> 16:00.060
Mal ein zwei tage nach frankfurt

16:04.540 --> 16:09.580
Mal gucken was was da so ansteht ich war jetzt zwei wochen nicht da ich habe bestimmt wieder einiges verpasst

16:10.140 --> 16:13.740
Wo sich wieder irgendwelche neuen schwachsinnigen sachen ausgedacht wurden

16:14.940 --> 16:16.940
Aber wollen wir mal schauen

16:16.940 --> 16:20.860
Wollen wir mal schauen so ja massive password kommt keiner drauf

16:24.220 --> 16:29.480
Ne emails emails habe ich ja nebenbei schon ein bisschen geguckt emails habe ich ja immer hier auf dem handy so

16:29.780 --> 16:32.140
Scroll ich ja immer just for fun ab und zu mal durch

16:33.100 --> 16:38.660
Und es ist nichts nichts wichtiges dabei das einzige das irgendjemand geschrieben hat ich soll mal mein profil

16:39.540 --> 16:41.540
in unserem wiki aktualisieren

16:42.780 --> 16:44.780
Ja gut

16:44.780 --> 16:47.820
Ich bin juckt das profil in unserem wiki da guckt eh niemand rein

16:49.060 --> 16:51.300
Aber mache ich dann irgendwann mal

16:53.740 --> 16:56.340
Du das mittwoch nach frankfurt gg jetzt

16:57.180 --> 17:01.900
Hätte ich keinen bock drauf wobei ich glaube am mittwoch wird es kühler oder zeigt man hier kurz wetter

17:05.700 --> 17:07.700
Frankfurt

17:07.700 --> 17:13.060
Am mittwoch wird es ein bisschen kühler ja

17:19.460 --> 17:25.740
Am mittwoch ist anscheinend noch relativ warmer und donnerstag freitag samstag sonntag wird es relativ relativ cool

17:26.300 --> 17:28.300
cool wird es da

17:28.700 --> 17:35.820
Ich muss jetzt übrigens kachelmann wetter verwenden mich hat nachdem ich nachdem ich ja der kachelmann persönlich mal angekackt hat auf twitter

17:35.820 --> 17:38.500
warum ich so kacke wetter seiten verwende

17:40.740 --> 17:46.140
Kein spaß jetzt muss ich jetzt halt kachelmann wetter verwenden keine chance so

17:48.300 --> 17:51.340
14 die seite ist aber für die übelst unübersichtlich

17:53.420 --> 17:58.020
Das liegt ja auch hier an meinem dark reader so zeige ich mal ja also wie wird das so

17:59.020 --> 18:01.020
mittwoch donnerstag

18:01.020 --> 18:07.780
Sonst 22 27 und 20 ja ok das ist aber gut dass es einfach mal ein bisschen kühl wird ich mein kühl

18:08.580 --> 18:14.180
26 25 grad ist nicht was man sagen könnte hier winter bricht ein aber wenigstens ein bisschen kühler

18:16.100 --> 18:21.380
Ich glaube es freuen sich alle wenn es mal ein paar tage regnet und es ein bisschen bisschen kühler ist so

18:22.220 --> 18:24.740
Ich glaube update orgie ist fertig

18:24.740 --> 18:31.980
Ja die seite ist furchtbar responsive update leute

18:34.780 --> 18:39.620
Wie lang wie lang habe ich schon nichts mehr gemacht hier guck mal ist alles geupdatet werden

18:39.620 --> 18:42.540
Die musik zu laut passt

18:50.340 --> 18:54.220
Auf gib alles jetbrain toolbox

18:57.660 --> 19:01.680
So das ist das test

19:01.680 --> 19:28.760
auf gib alles jetbrain des toolbox alter was macht es denn da moin eax

19:28.760 --> 19:39.280
das aber äußerst guckt euch mal die systemauslastung an der ist aber

19:39.280 --> 19:42.760
ziemlich ziemlich hardcore am updaten gerade taint so moin

19:42.760 --> 20:02.960
auf gib ihm jetzt mach mal endlich installen in der zwischenzeit hast du ja eine neue winnows vm

20:02.960 --> 20:11.640
installiert das heißt schon was ok gleich haben wir es geschafft wie es aussieht betop ja wir

20:11.640 --> 20:19.000
können zugucken was er so macht guckt euch das hier mann massive auslastung

20:27.920 --> 20:30.800
betop ist für alle den hardtop nicht fancy genug ist

20:30.800 --> 20:40.080
ascii aquarium ja das ist selbstverständlich auch installiert übrigens guckt mal hier unten das

20:40.080 --> 20:45.920
ascii aquarium ist im gnome terminal kaputt wenn man das wenn man das im x wenn man das mal in

20:45.920 --> 20:50.760
dem x-term auf macht ich glaube ich habe x-term x-term gar nicht mehr installiert weil man warum

20:50.760 --> 20:58.520
auch ja aber wenn man das mal in dem x-term auf macht das ascii aquarium dann werdet ihr feststellen

20:58.520 --> 21:10.680
das hat mehr details der schwarn sieht auch nach schwarn aus und hier unten ist eine burg und so warum

21:10.680 --> 21:16.560
peitsch haben nur community edition gute frage hat keinen tieferen sinn kommt man das hat nämlich

21:16.560 --> 21:22.800
auch wasserblasen und so und das hat es hier überhaupt nicht seht ihr ist viel viel detail

21:22.800 --> 21:37.480
armor im gnome terminal so ist so ist viel viel besser hier im x-term fisch k.i. kannst du ein

21:37.480 --> 21:43.200
video machen wo du alle plugins und third party ich habe da gar nicht so viel drauf das ist

21:43.200 --> 21:49.560
eigentlich relativ minimalistisch das ist in i3 mit gnome terminal browser und paar idees

21:49.560 --> 21:58.320
drauf ansonsten ist da nicht viel liegt an der font size ne liegt nicht an der font size guck

21:58.320 --> 22:06.720
liegt nicht an der font size der hat probleme hier mit den escape sequenzen von von der farbe

22:06.720 --> 22:17.840
anscheinend keine ahnung mal gucken wie ist dieses terminal was ich mir mal letztens installiert

22:17.840 --> 22:26.240
hab oder chat meinte das ist ganz furchtbar geil nee wie ist denn das nee war das aller

22:26.240 --> 22:35.520
haben wir schon wieder runter geschmissen aller aller kredi alter alter kredi so gucken ob das

22:35.520 --> 22:44.200
ob das da besser funktioniert aski aquarium ne guck ist auch procken nur nur original im x-term

22:44.200 --> 22:52.800
jetzt mein mental mental brain fog geht der fog immer noch so vor sich hin aber wir probieren

22:52.800 --> 22:58.520
das heute mal aus ob ich ein bisschen konzentrieren kann also so gehen wir mal unser repo wir brauchen

22:58.520 --> 23:04.560
unser repo verzeichnis legen wir für heute was an bekommt man den tuja converter einfach auf

23:04.560 --> 23:09.160
einer windows maschine nee nee nee nee das ist für das ist exklusiv für respiratory pi gedacht

23:09.160 --> 23:17.520
das ding nee brauchst du es bei ich weiß nicht ob die mittlerweile andere single board computer

23:17.520 --> 23:26.000
unterstützen aber du brauchst du es bei guck hier steht doch ach nee gucke mal du kannst

23:26.000 --> 23:37.480
auch kali linux 2018.4 mvm wer verwendet alles klar ok war mir so nicht klar aber also ganz

23:37.480 --> 23:44.840
ehrlich am einfachsten funktioniert es mit raspberry pi da musst du auch einfach nichts

23:44.840 --> 23:51.880
machen außer git repo klonen und und runterladen so mk dir wie nennen wir das projekt cute rust

23:51.880 --> 24:09.720
so also dort net new moment welche welche dort net version haben wir hier eigentlich

24:09.720 --> 24:22.400
am start version preview 6 das ist outdated overrated tschibated nein so nenne ich es

24:22.400 --> 24:32.800
bestimmt nicht wir müssen install dort net install sieben ja wir brauchen das neueste preview

24:32.800 --> 24:49.640
sonst geht ja hier nix finish successful so version preview sieben alles klar prog so new

24:49.640 --> 25:05.440
console nee im moment minus o war das minus o für output directory ich weiß weiß kann ich

25:05.440 --> 25:18.920
console top minus o ja minus o so und jetzt cargo new so wie nennen wir wie nennen wir das rust

25:18.920 --> 25:26.760
projekt cute lip es die cute cute lip cute search slip ich wollte ja ein bisschen was mit

25:26.760 --> 25:36.160
suchen mit mit search engines ausprobieren so wunderbar jetzt haben wir unsere projekte

25:36.160 --> 25:40.960
da bin ich ja bin ich ja begeistert ok dann machen wir mal weiter auf für den dort net

25:40.960 --> 25:48.520
teil und machen mal mit was habe ich rast das letzte mal gemacht ich glaube mit mit

25:48.520 --> 26:03.640
sea lion und dem rust plugin glaube ruby mein nee ruby mein brauche ich eher nicht

26:03.640 --> 26:15.560
7.0 ist not fully supported ja da kann ich mit leben das ist in ordnung

26:15.560 --> 26:29.880
gut weg damit so see lion aufmachen also bevor ich wieder mit emacs anfangen dann weiß

26:29.880 --> 26:38.800
auch nicht ich habe früher mal relativ relativ religiös emacs verwendet was ist denn hier

26:38.800 --> 26:47.920
los rust version is not compatible monka es was ist denn hier los ei sekunde check for

26:47.920 --> 26:55.360
updates nee about nee plugins wie macht man hier updates gescheit da ober war das doch

26:55.360 --> 27:09.080
ge update plugins ja gib ihm update aber ganz ehrlich emacs finde ich hat relativ wenig

27:09.080 --> 27:14.840
daseinsberechtigung noch seit visual studio code das coole an emacs war die erweiterbarkeit

27:14.840 --> 27:21.560
aber das ist ja wirklich um welten übertroffen mit visual studio code der einzige vorteil

27:21.560 --> 27:26.920
den emacs hat es vielleicht wenn man so auf so jahrelang auf so sachen geschwört hat

27:26.920 --> 27:30.640
wie org mode oder ich weiß nicht ob jemand von euch schon mal org mode verwendet hat und

27:30.640 --> 27:35.800
da irgendwie sehr viel sehr viel zeug in seiner knowledge base drin stehen hat und das weiter

27:35.800 --> 27:40.840
verwenden will ok aber ansonsten ehrlich gesagt sehe ich heutzutage wenig einsatzzwecke für

27:40.840 --> 27:45.920
emacs noch bei wim sieht das anders aus wim ist nach wie vor ein super terminal editor

27:45.920 --> 27:56.040
gerade für server wenn man psh drauf ist aber emacs sehe ich jetzt nicht so wirklich die

27:56.040 --> 28:04.000
daseinsberechtigung noch so machen wir das noch mal neu auf jetzt öffnen wir mal das

28:04.000 --> 28:17.760
verzeichnis mit dem rast projekt drinne nicht das sondern das das neue repos yeah huge search

28:17.760 --> 28:32.760
lip ok yes wir trusten alles des window gib ihm was macht er denn für dinge im hintergrund

28:32.760 --> 28:42.240
ach vielleicht soll ich mal rast aktualisieren wie geht das rast update ok erstmal das halbe

28:42.240 --> 28:48.160
internet runterladen und neu kompilieren für die neue rast version gg eats macht er denn

28:48.160 --> 29:00.000
da soll er mal machen soll mir recht sein mach mach einfach mal rast ist ist ok gut

29:00.000 --> 29:04.120
naja ist doch relativ übersichtlich gewesen also was ich jetzt mal ausprobieren will ist

29:04.120 --> 29:13.680
folgendes ich will was in rast ja ich ich will was in rast programmieren und will das

29:13.680 --> 29:21.280
von totnet aufrufen ich habe da einen ich habe da ein artikel zugelesen irgendwie sowas

29:21.280 --> 29:36.240
hier aber das war an sich relativ relativ easy man muss man muss wo steht es denn alles

29:36.240 --> 29:47.280
schwachsinn das braucht man alles nicht doch alles blödsinn was machen die denn da das

29:47.280 --> 29:51.280
braucht man überhaupt nicht ah moment das ist c sharp from rast moment das ist falsch

29:51.280 --> 29:56.640
rum das will ich doch gar nicht schon mal barbie als editor genutzt nee was ist denn

29:56.640 --> 30:13.000
barbie editor github a text editor ein python based editor warum und warum sollte ich das

30:13.000 --> 30:25.280
verwenden ich meine nano ist ja nur wirklich der größte schwachsinn überhaupt und dann

30:25.280 --> 30:31.000
noch der nano variante in python die nirgendswo vorinstalliert ist den den sinn verstehe ich

30:31.000 --> 30:38.560
nicht so ganz how we integrate rast with the sharp ja genau das das hatte ich gelesen so

30:38.560 --> 30:44.360
und das war sich das war sich fast genau also so wie ich das verstanden hat muss man folgendes

30:44.360 --> 30:52.240
machen was ist das hier schon wieder für alter nee das ist nicht das was ich gesehen habe

30:52.240 --> 30:56.800
es ist komplett komplett pepega was die hier schreiben das braucht man alles gar nicht

30:56.800 --> 31:09.280
wtf calling rast from c sharp ja ja das sieht besser aus wie das also im prinzip ist es

31:09.280 --> 31:16.840
total einfach man sagt dass der projekt type in rast das ist eine nee das stimmt nicht

31:16.840 --> 31:26.080
das muss c c dynamic library heißen und dann das hier ist das einzige was man machen muss

31:26.080 --> 31:32.240
also man muss man muss schreiben extern function und dann no mangel drüberschreiben was

31:32.240 --> 31:38.480
dazu dafür sorgt dass der name erhalten bleibt im binary so dass man dann in c sharp mit

31:38.480 --> 31:44.160
diesem funktionsnamen die ganze sache importieren kann ja also von der idee her ist das relativ

31:44.160 --> 31:48.880
easy das probieren wir probieren wir einfach mal so aus nehmen einfach mal das beispiel

31:48.880 --> 31:59.480
von denen hier komm ich lasse es einfach eins zu eins so wie es ist so ja und warum ich das

31:59.480 --> 32:03.760
warum ich mir das ganze angeguckt habe ist ich habe was ich habe ein cooles projekt gefunden

32:03.760 --> 32:18.320
in rust irgendwie so das ist eine search engine also eine volltext suche in rust es gibt für

32:18.320 --> 32:23.880
so gut wie alle programmier sprachen irgendwelche projekte die sowas machen aber das sah wirklich

32:23.880 --> 32:30.080
cool aus ich war man könnte auch gleich die volltext suche aus sq lite verwenden oder

32:30.080 --> 32:36.520
lucille.net oder so wobei ich davon keine ahnung habe aber ich dachte mir ich wollte

32:36.520 --> 32:42.040
mir also warum ich ich zeige euch das mal ich wollte mir in nächster zeit mal avalonier

32:42.040 --> 32:48.480
angucken avalonier ist ein cross platform gui framework für dotnet und ich dachte wir machen

32:48.480 --> 32:56.040
einfach so ein ganz billiges ich kann die dateien durchsuchen auf meinem rechner gui

32:56.040 --> 33:02.160
also wirklich in gui mit einer suchleiste drinnen und in der listbox fertig so und dazu

33:02.160 --> 33:06.840
muss ich jetzt halt mal irgendwie die dateien auf dem rechner indizieren also die dateifade

33:06.840 --> 33:12.160
und vielleicht wenn es die text datei ist auch den inhalt und das könnte man so könnte

33:12.160 --> 33:16.560
man nämlich zwei fliegen mit einer klatsche erschlagen man könnte einmal könnte ich

33:16.560 --> 33:23.240
ein bisschen c sharp rust interop ausprobieren und ich könnte mir avalonier angucken das

33:23.240 --> 33:26.680
würde besser funktionieren als die windows search bar ja gut das ist ja auch keine kunst

33:26.680 --> 33:35.880
die windows search bar die funktioniert ja auch einfach gar nicht ja so ungefähr dachte

33:35.880 --> 33:42.040
ich mir das auch ja moment dl import da gibt es jetzt was neues es gibt jetzt library import

33:42.040 --> 33:48.720
das ist jetzt seit dotnet 7 ist das neu das können wir auch gleich ausprobieren es gibt

33:48.720 --> 33:53.200
jetzt es gibt jetzt library import warum man das verwenden soll habe ich noch nicht so

33:53.200 --> 34:02.720
genau gecheckt aber das das probieren wir jetzt probieren es gleich mal aus also so

34:02.720 --> 34:12.320
als war mir erstmal den rust teil great teil ne ne das habe ich mir aufgeschrieben was

34:12.320 --> 34:16.120
da drin stehen muss weil ich wusste dass ich das nicht mehr finde das muss das muss da

34:16.120 --> 34:20.960
rein das ist totaler blödsinn was da steht hier ich copy paste das jetzt ich habe mir

34:20.960 --> 34:23.520
das im fortfall schon rausgesucht weil ich wusste dass ich den richtigen artikel wo

34:23.520 --> 34:28.520
ich wo ich das gefunden habe wahrscheinlich nicht mehr finde so das muss da drinne stehen

34:28.520 --> 34:36.920
so und jetzt können wir den ganzen kram mal kompilieren und gucken ob das funktioniert

34:36.920 --> 34:42.240
ach so stimmt du hast recht es muss lip heißen ja ja ihr habt recht chat wieder absolut

34:42.240 --> 34:51.760
pfeil fährt lip muss es heißen warum nicht selber nägel samaran ist ja dead es ist jetzt

34:51.760 --> 34:58.040
maui und maui ist ja gut aber maui ist samaran und samaran hat gesagt und maui sagt weiterhin

34:58.040 --> 35:03.720
also das ist die technologie ich bin ja großer dort nett und sie scharf fern aber das ist

35:03.720 --> 35:18.280
die technologie die lasse ich an mir vorbeiziehen also als absoluter pains champ ne jetzt heißt

35:18.280 --> 35:24.520
jetzt heißt maui dort nett das ist so der neueste scheiß jetzt von microsoft was in

35:24.520 --> 35:31.440
anführungsstrichen cross platform ui ist aber es war schon du hast recht es war schon immer

35:31.440 --> 35:44.000
scheiße samaran war scheiße und maui ist auch scheiße ne da will ich nichts machen ganz

35:44.000 --> 35:49.400
ehrlich ne ne ob maui stable ist oder nicht wäre mir fast egal solange es funktioniert

35:49.400 --> 35:56.840
für das was ich machen will aber ne ne das das gebe ich mir nicht leute das das gebe

35:56.840 --> 36:08.080
ich mir nicht kein bock ok wo müssen wir den repos cute rust rust lip cargo bild wie

36:08.080 --> 36:18.920
das wars jetzt wait a minute lip cute search lip punkt so warte mal das ist falsch benannt

36:18.920 --> 36:26.400
leute oder die coolen rust leute das das darf doch nicht so heißen oder was ist denn rust

36:26.400 --> 36:34.200
rust five head time genau das muss anders heißen das muss das muss cute search lip es

36:34.200 --> 36:40.560
wahrscheinlich sogar noch heißen oder die rust leute haben doch immer gerne es hinten

36:40.560 --> 36:55.200
dran und jetzt und jetzt ganz wichtig description blazing fast written in rust was braucht man

36:55.200 --> 37:13.240
noch blazing fast written in rust fire emoji fire emoji ja ja so ganz wichtig ganz wichtig

37:13.240 --> 37:25.720
ach ja und die krabbe das krabben emoji muss auch noch ein leute benennt man rust packages

37:25.720 --> 37:35.720
mit rs hinten dran oder nicht das sind ja nicht rastana das sind ja rust crust oder

37:35.720 --> 37:51.400
rast rastaschens oder so nennen die sich ja die rust leute ist teilweise schon ein bisschen

37:51.400 --> 37:56.960
also in go und in rust die leute schreiben prinzipiell ihre libraries und und und projekte

37:56.960 --> 38:06.340
immer dabei dass sie in rust oder in go written sind ok bild ist das jetzt in ordnung darf

38:06.340 --> 38:14.600
man das jetzt so machen dead code oh nein moment moment leute ich muss mir mal kurz

38:14.600 --> 38:19.180
ich muss mir mal kurz das leben einfacher machen das wird wahrscheinlich auch den den

38:19.180 --> 38:31.240
wahren rust feinschmecker jetzt abschrecken aber ich habe keinen bock auf kompiler generve

38:31.240 --> 38:47.680
ja gleich schon viel besser viel besser keck so bild kann man so was machen wie minus

38:47.680 --> 39:03.400
o teckel punkt so geht das nee

39:03.400 --> 39:14.800
kann man irgendwie den output namen bei cargo bild angeben cargo bild output name ja ich

39:14.800 --> 39:29.200
weiß dass ich im target folder gucken kann aber ich will nicht und dann geht das net

39:29.200 --> 39:34.760
ja gut da muss ich copy pasten weil eigentlich also was ich jetzt machen wollte ist sowas

39:34.760 --> 39:40.600
hier ich wollte eigentlich dass hier reinkopieren in den ordner oben drüber in das in das dotnet

39:40.600 --> 39:52.280
weil da muss es ja letztendlich hin ja ich muss ich wusste wahrscheinlich muven genau

39:52.280 --> 40:01.280
also cargo bild und jetzt haben wir im target ordner im moment cargo bild minus c release

40:01.280 --> 40:14.760
ging das so nee ach mist cargo bild release minus minus release ok ich mach zu viel unterschiedliche

40:14.760 --> 40:23.280
dinge da blicke ich den mal durch minus minus release oder einfach nur minus r so jetzt

40:23.280 --> 40:27.520
haben wir den kram hier drin also ich muss das ich muss das bilden und dann muss ich

40:27.520 --> 40:35.280
danach den ganzen krempel anscheinend noch mal kopieren target release hier lip lip cute

40:35.280 --> 40:41.680
search lip das ist vielleicht ein bisschen zu viel das guten der name oder das heißt

40:41.680 --> 40:56.440
einfach nur cute search und den rest macht da hinten dran also cp target release hier

40:56.440 --> 41:08.200
lip cute search und das ganze soll jetzt in die console app wunderbar so und jetzt probieren

41:08.200 --> 41:13.980
wir das ganze mal aus zu aufzurufen aus dem net program wichtig ist man muss in dem projekt

41:13.980 --> 41:20.600
in dem dotnet projekt hinstellen dass er bei bild action nee nicht mal bild action die

41:20.600 --> 41:29.000
datei in output ordner kopieren soll weil sonst findet er die beim ausführen nicht

41:29.000 --> 41:34.320
ja du kannst du kannst auf nachrichten antworten das geht aber auch erst seit ich würde sagen

41:34.320 --> 41:42.100
so in einem dreiviertel jahr oder sowas das ist noch nicht so lang drinne also das das

41:42.100 --> 41:51.760
ist ein pleading edge twitch feature hallo warum geht mein console right line makro nicht

41:51.760 --> 42:05.760
was ist hier los console right line kacke kacke ok und jetzt kommt man schön nicht gleich

42:05.760 --> 42:09.680
wieder die frage warum verwendest du nicht das terminal in der ide weil ich das ide terminal

42:09.680 --> 42:24.200
nicht mag und das rumleggt so dort net run funktioniert alles klar so und jetzt versuchen

42:24.200 --> 42:30.960
wir mal die rust funktion aufzurufen aus c sharp raus also das ding heißt adnumbers

42:30.960 --> 42:39.960
kriegt einen in 32 als input und kriegt zwei in 32 als input und kriegt in 32 als output

42:39.960 --> 42:50.440
es heißt von der ide her das ist nicht intelli j das ist sie leyen und das ist rider aber

42:50.440 --> 42:57.560
ja das ist beides von jet brains und dementsprechend sieht das sehr intelli j ähnlich aus so also

42:57.560 --> 43:05.440
hier machen wir eine neue klasse interop so unsave code müssen wir auf jeden fall anmachen

43:05.440 --> 43:15.240
weil sonst wird das garantiert nicht funktionieren unsave code unsave code so und jetzt muss

43:15.240 --> 43:25.880
ich mal gucken wir machen es erstmal auf den alten weg dll import dll name ich bin mir

43:25.880 --> 43:37.000
nicht sicher ob ich das punkt so hinten angeben muss oder nicht gibs ich gibs mal so an es

43:37.000 --> 43:45.280
kann auch sein dass man extern z machen muss so und jetzt dll import jetzt muss ich mal

43:45.280 --> 43:50.920
kurz überlegen muss man jetzt sagen extern ich glaube man muss jetzt sagen das macht

43:50.920 --> 44:01.360
man nicht so auf public static extern und dann quasi int als rückgabe wert dann den

44:01.360 --> 44:09.360
name adnumbers man kann glaube ich auch die c sharp schreibweise nehmen numbers und dann

44:09.360 --> 44:25.460
muss man hier oben aber sagen entry point adnumbers so als parameter in 32 und in 32 b so und wenn

44:25.460 --> 44:35.320
jetzt alles funktioniert und wenn jetzt alles funktioniert sollte der wenn ich das aufrufe

44:35.320 --> 44:40.600
diese funktion in rust benutzen und er sollte einmal auf die konsole hello from rust schreiben

44:40.600 --> 44:52.280
und als return wert nummer a plus nummer b zurück liefern chat meinte es funktioniert

44:52.280 --> 44:56.640
also ich denke schon es sei denn ich hab mich verschrieben weil soviel soviel können wir

44:56.640 --> 45:05.440
nicht falsch machen glaube noch ist es nicht so kompliziert also probieren wir das mal

45:05.440 --> 45:18.920
aus interop adnumbers sagen wir mal warum geht man console weiter an marco nicht also

45:18.920 --> 45:29.680
1 plus 2 also es sollte jetzt es sollte jetzt auf der kommando zeile rauskommen 3 und hello

45:29.680 --> 45:45.160
from rust wenn das funktioniert easy funktioniert dazu kann man nur sagen easy easy aber das

45:45.160 --> 45:54.680
war doch die einfache variante easy also das noch die einfache variante ich mein ins zu

45:54.680 --> 46:00.680
übergeben ist relativ relativ easy so wir müssen jetzt als nächstes gucken wie über

46:00.680 --> 46:16.520
gibt man strings und muss man sich irgendwie ums aufräumen kümmern oder so vielleicht

46:16.520 --> 46:25.520
und ein struct übergeben das ist auch das ist auch eine gute gute ja ja müssen wir

46:25.520 --> 46:30.880
gucken wie das funktioniert also vorher probieren wir jetzt noch mal was anderes und zwar gibt

46:30.880 --> 46:42.480
es jetzt was neues es gibt nämlich in der library import und angeblich angeblich ist

46:42.480 --> 46:54.280
library import jetzt die bessere alternative zu dl import warum habe ich ehrlich gesagt

46:54.280 --> 47:02.880
noch nicht so genau verstanden aber wenn microsoft das sagt dann dann ist das wahrscheinlich

47:02.880 --> 47:25.200
so oder probieren wir mal ob das überhaupt in der preview variante funktioniert gibt

47:25.200 --> 47:37.800
brauche auf jeden fall soll mal gucken ob es noch funktioniert kaputt ok moment es muss

47:37.800 --> 47:59.840
anders public static partial nicht nicht string int ok das funktioniert schon mal nett weil

47:59.840 --> 48:23.280
public static class ok das schon mal interessant dass nicht mal das beispiel von microsoft

48:23.280 --> 48:31.160
selbst funktioniert ok gut dass microsoft beispiel selbst funktioniert schon mal nicht

48:31.160 --> 48:51.440
muss ich muss ich public static partial class machen oder so ok das funktioniert dann ist

48:51.440 --> 49:03.320
das microsoft block eintracht nur pepega also wie viel wie viel keywords gehen denn

49:03.320 --> 49:10.440
hier noch geht es jetzt easy funktioniert also soweit ich das verstanden habe ist der

49:10.440 --> 49:15.400
unterschied folgender dl import geht ja so geht ja das heißt dl import weil es noch

49:15.400 --> 49:20.080
aus windows zeiten es hat mit dl aber eigentlich nix mehr wirklich zu tun das geht ja schon

49:20.080 --> 49:27.440
ewig seit c sharp eins quasi und sie haben es jetzt irgendwie umgebaut dass das source

49:27.440 --> 49:32.880
code generator verwendet anstatt irgendwelche irgendwelchen dynamisch erzeugten el code

49:32.880 --> 49:37.480
und das ist laut microsoft viel besser ich habe ehrlich gesagt keine ahnung ob das besser

49:37.480 --> 49:46.400
ist oder warum das besser ist aber wenn microsoft meint dass es so gut ist dann dann machen

49:46.400 --> 49:51.000
wir das einfach mal ja also partial ist es weil das source code generator unter der haube

49:51.000 --> 50:00.360
hat also es wird wahrscheinlich im output irgendwelche zusatzdinger generate wir können ja mal

50:00.360 --> 50:24.280
kurz gucken schaap lab weiß ich ob die das ob die das schon können hau mal jetzt broken

50:24.280 --> 50:36.560
meint es ist falsche ich glaube ich habe es kaputt gemacht ach nee ich muss umschalten

50:36.560 --> 50:55.560
auf dotnet auf dotnet sieben oder wie kann ich hier auf dotnet sieben umschalten ich

50:55.560 --> 51:07.520
danke für den sub ja die schaap next oder was muss ich hier auswählen ich habe keinen

51:07.520 --> 51:19.800
plan ob das vielleicht kann das schaap lab nicht weil der rest ist alles der rest ist

51:19.800 --> 51:44.640
alles uralt wenn ich das auswähle geht das dann also keine ahnung ich kann euch jetzt

51:44.640 --> 51:51.000
nicht zeigen was der unter der haube macht aber anscheinend ist das der neue way wie

51:51.000 --> 51:56.520
man das mit dotnet ab dotnet sieben machen soll so jetzt wird es natürlich kompliziert

51:56.520 --> 52:02.200
wie übergibt man strings man kann ja anscheinend schon mal angeben wie das ganze übersetzt

52:02.200 --> 52:09.800
werden soll weil rust hat ja utf 8 strings und sie schaap hat utf 16 strings das heißt

52:09.800 --> 52:21.320
einfach irgendwie memory kopieren ist schon mal nett also will ich utf 8 haben so und

52:21.320 --> 52:25.480
jetzt probieren wir das ganze mal wobei wir lassen das erstmal so hier das brauchen wir

52:25.480 --> 52:31.400
an der stelle gar nicht so wir machen jetzt noch mal eine neue funktion in rust und probieren

52:31.400 --> 52:36.880
mal ein paar strings zu übergeben ob das irgendwie passt ja nennen wir einfach mal

52:36.880 --> 52:47.680
irgendwie was weiß ich konkert string oder so sehr egal so also s1 s2 und jetzt ist rust

52:47.680 --> 52:57.480
logik was muss ich jetzt hier übergeben nen string nee oder nen c c char array oder

52:57.480 --> 53:09.160
sowas ja da hört jetzt bei mir auf string die von stars oh ja sind auch beispiele beispiele

53:09.160 --> 53:34.600
für für structs und sowas what about strings

53:34.600 --> 53:48.520
ja vielleicht vielleicht memory leaken wir jetzt auch irgendwas

53:48.520 --> 53:59.280
muss ich wirklich den kram freeen danach ernsthaft

53:59.280 --> 54:06.880
ja gut eigentlich eigentlich ist es logisch dass ich das freeen muss danach

54:06.880 --> 54:19.920
oh nee hör mal auf ich okay erstmal gucken wie man den string überhaupt rein bekommt

54:19.920 --> 54:44.040
okay das ach du scheiße input vermutlich einfach als und zeste meinste aha oje oje

54:44.040 --> 55:00.080
ich ahne schlimmes leute ich ahne schlimmes ich ahne schlimmes das wird was okay wir haben

55:00.080 --> 55:05.360
schon mal kein int als rückgabe wert wir geben einfach aus okay ich will einfach nur

55:05.360 --> 55:13.760
gucken ob das aufrufen funktioniert brennt aber wie ging das den rast noch mal so oder

55:13.760 --> 55:20.800
oder war das go leute ich bin verwirrt war das go oder war das wie gebe ich wie gebe

55:20.800 --> 55:43.560
ich rast aus s1 nee okay das funktioniert cannot be formatted ach ja doppelpunkt slash

55:43.560 --> 55:49.200
es ist not ffe safe das dachte ich mir dass es not ffe safe ist mal gucken was passieren

55:49.200 --> 55:57.160
wenn ich das passiert wenn ich das jetzt aufrufe wahrscheinlich erstmal direkt crash es wird

55:57.160 --> 56:09.680
wahrscheinlich direkt direkt erstmal gecrashed so string marshaling gleich utf 8 ja sowas

56:09.680 --> 56:18.320
such ich sowas sowas in der richtung brauche wahrscheinlich so es sollte übrigens strings

56:18.320 --> 56:30.800
heißen aber egal so wir haben das wird doch im leben nix das wird doch im leben nix okay

56:30.800 --> 56:40.840
der kram kompiliert noch alles klar okay also interop konkert string heckl aber das da

56:40.840 --> 57:09.680
oben mal weg ach so zwei heckl oh was monka der hat das nicht richtig escaped oder

57:09.680 --> 57:31.800
ich würde mal sagen ziemlich ziemlich overflow bisschen oder oder ist das die debug und ich

57:31.800 --> 57:56.280
muss ich muss da ich muss aus diesem streng okay ich habe ich habe was ist okay ich achtung

57:56.280 --> 58:05.880
mal meine rast meine rast logik also meine rast logik ein c string und ein c also der

58:05.880 --> 58:13.480
unterschied mit s2 mache ich noch gar nix also der unterschied ist wahrscheinlich folgender

58:13.480 --> 58:20.920
so laut der rast logik die ich so so mitbekommen das hier ist einfach nur ein wie heißt das

58:20.920 --> 58:27.800
in rast einfach nur ein ein borrowed also ein pointer auf einen string im ram und das

58:27.800 --> 58:34.440
hier ist quasi ein ownership string oder so wo sich dann mein rast auch ums aufräumen

58:34.440 --> 58:41.520
kümmert würde ich jetzt mal so raten ist das jetzt eigentlich utf ich habe keine ahnung

58:41.520 --> 58:54.440
mal frage mich sagen ja mal gucken was passiert wenn ich s2 ausgibt dann kreis dann kreis

58:54.440 --> 59:05.480
okay alles klar oder klimaanlage wieder mal anmachen also bei bei s1 kommt was raus bei

59:05.480 --> 59:21.040
s2 kommt nix raus schon mal schon mal interessant zu wissen so wir machen das jetzt richtig

59:21.040 --> 59:38.320
der chat hat irgendwas sinnvolles gepostet vorhin

59:38.320 --> 59:51.640
t-buff konst was sowas ich muss das wahrscheinlich erst mal ordentlich pasen in den rast string

59:51.640 --> 01:00:13.640
also wahrscheinlich muss ich jetzt irgendwie sowas machen wie string prom oder sowas

01:00:13.640 --> 01:00:39.520
vom c string oder oder c string from from ra so let let keck okay was stört den daran

01:00:39.520 --> 01:00:47.880
jetzt uns safe okay kann man kann man direkt sagen alles uns safe jawohl expected mutt

01:00:47.880 --> 01:01:08.600
c war what s pointer jawohl ne monka es ich glaube ich kann das gar nicht so übergeben

01:01:08.600 --> 01:01:31.640
oder macht das okay und stag overflow stag overflow hat ahnung stag overflow weiß bescheid

01:01:31.640 --> 01:01:51.480
aha c string from pointer aber das kann das kann doch nicht wirklich sein aber das ist

01:01:51.480 --> 01:02:09.400
doch kein gültiger typ das ist doch kein gültiger doch was die rast die die rast syntax

01:02:09.400 --> 01:02:16.000
irritiert mich immer wieder das doch eindeutig c syntax so oder nicht na gut okay und jetzt

01:02:16.000 --> 01:02:36.880
und jetzt was c string from buffer c string from buffer s1 let okay darf ich das jetzt

01:02:36.880 --> 01:02:49.240
printen bin ich mal gespannt ob das funktioniert zeigt mal her das funktioniert ich bin mir

01:02:49.240 --> 01:03:00.280
zwar nicht so ganz sicher was ich da gemacht habe jetzt aber es funktioniert was ist jetzt

01:03:00.280 --> 01:03:11.800
der unterschied zwischen c strill und c string das hier ist nur das hier ist quasi nur eine

01:03:11.800 --> 01:03:16.920
read only kopie und das hier ist quasi ich kann damit alles machen was ich will oder wie

01:03:16.920 --> 01:03:27.200
das ist rast ja es sieht zwar nicht aus wie rast aber es ist rast s1 let keck okay das

01:03:27.200 --> 01:03:41.440
funktioniert so nicht weil ss mutt nee pointer konst karst ich hab keine ahnung was du von

01:03:41.440 --> 01:03:56.160
mir willst aber moment was das ist wieder was anderes okay keine ahnung aber aber ist

01:03:56.160 --> 01:04:06.480
ja auch egal es ist auch vollkommen in ordnung so ist okay das funktioniert ja das dachte

01:04:06.480 --> 01:04:13.840
ich mir genau genau das das dachte ich mir auch das dachte ich mir so also das würde

01:04:13.840 --> 01:04:20.160
aber auch heißen dass ich jetzt memory leake oder wir benennen das übrigens mal richtig

01:04:20.160 --> 01:04:33.120
ja das würde ja also im prinzip auch heißen dass ich memory leake oder nicht weil es ist

01:04:33.120 --> 01:04:41.520
ja nur eine referenz es ist ja nur eine referenz auf den speicher also ich sollte kein memory

01:04:41.520 --> 01:04:57.960
leaken eigentlich theoretisch sollte ich kein memory leaken

01:04:57.960 --> 01:05:07.560
solange solange dotnet danach den kram aufräumt also ich weiß halt nicht was was das macht

01:05:07.560 --> 01:05:13.760
es nimmt auf jeden fall sein managed string und macht da irgendeinen c bytearray string

01:05:13.760 --> 01:05:23.200
draus und da weiß ich halt nicht räumt das danach auf oder nicht call die funktion und

01:05:23.200 --> 01:05:28.840
ja das machen wir probieren wir probieren das aus wir probieren das aus probieren wir

01:05:28.840 --> 01:05:40.080
probieren mal aus die ausgabe machen wir mal weg und wir übergeben wir übergeben mal

01:05:40.080 --> 01:05:54.160
ein bisschen längeren erst einmal übersetzen okay scheinbar funktionieren also wenn ich

01:05:54.160 --> 01:06:02.320
was retorne dann muss ich mich auf jeden fall um das aufräumen in dotnet selbst kümmern

01:06:02.320 --> 01:06:08.720
von dem unmanaged part aber das mache ich ja nicht ich retorne ja kein string okay

01:06:08.720 --> 01:06:19.640
probieren wir das mal aus ich würde jetzt ehrlich gesagt das ganz einfach machen mache

01:06:19.640 --> 01:06:31.000
jetzt einfach eine vorschreife hallo vorschreife und ruft das ein paar mal auf und wir rufen

01:06:31.000 --> 01:06:42.240
das einmal auf 3 was war das user s bin time minus v dotnet run gucken wie viel es jetzt

01:06:42.240 --> 01:06:49.520
oh was ist kaputt ach nee es ist ja auch nicht dotnet run es ist es ist dotnet run user s

01:06:49.520 --> 01:07:03.160
bin time so und er ist jetzt der meinung wir haben minus v wie viel ram brauchen wir wir

01:07:03.160 --> 01:07:17.800
brauchen ram was sind es 22 mb irgendwie sowas irgendwie war irgendwas um 22 mb ok und jetzt

01:07:17.800 --> 01:07:26.400
rufen wir das ganze mal ein bisschen öfters auf das hat noch nicht gereicht wir brauchen

01:07:26.400 --> 01:07:45.720
nicht wirklich bedeuten mehr ram scheint alles scheint alles zu funktionieren aus bis sie

01:07:45.720 --> 01:08:05.480
viel gut es war vielleicht jetzt war es vielleicht ein bisschen viel wo ich zu denken so nee also

01:08:05.480 --> 01:08:13.040
so viel haben so viel brauchen war so viel brauchen war mit einer million mal aufrufen

01:08:13.040 --> 01:08:19.560
und so viel braun ja kein unterschied also da liegt nix da wird nix geleaked kein kein

01:08:19.560 --> 01:08:31.240
gelieke fertig folks dankeschön für den sub da liegt nix ok das funktioniert ok wir wissen

01:08:31.240 --> 01:08:40.640
schon mal wie man strings übergeben es macht zwar nicht wirklich das wie die funktion heißt

01:08:40.640 --> 01:08:44.480
aber soll mir recht sein ok das muss ich wissen wie man strings übergibt weil wenn

01:08:44.480 --> 01:08:51.800
ich später beispielsweise eine ein dateifahrt indizieren lassen will über die über die

01:08:51.800 --> 01:08:59.120
text search engine in russ dann muss das ja als text übergeben werden das ist das ist

01:08:59.120 --> 01:09:06.120
das ist nicht per programming das ist backseat programming so ok nexus nexus structs übergeben

01:09:06.120 --> 01:09:12.600
jetzt wirds jetzt wirds langsam kriminell hätte mein opa gesagt ja also keine ahnung

01:09:12.600 --> 01:09:23.200
keckel struct wir fallen langsam keine funktionsnamen mehr ein so jetzt wirds schwierig alles void

01:09:23.200 --> 01:09:32.920
und casten ok also weißt du was ohne scheiß ich glaube die bessere variante ist wirklich

01:09:32.920 --> 01:09:44.640
jason übergeben und pasen also wir haben ein struct in russ alles klar wir haben einen

01:09:44.640 --> 01:10:02.800
jason commando für was das denn ja das war gestern ist klar hast du den string auch

01:10:02.800 --> 01:10:08.600
zurückgegeben ne wenn ich den zurückgebe haben wir bestimmt in memory league also ich

01:10:08.600 --> 01:10:14.400
müsste jetzt den string irgendwie zusammen packen und dann ok dann machen wir erstmal

01:10:14.400 --> 01:10:21.360
gucken wir uns erstmal das noch mal mit dem memory league und dem string an also also

01:10:21.360 --> 01:10:27.920
hier das ist das ist s1 das ist in russ irgendwie auch nice man kann das darf das überschreiben

01:10:27.920 --> 01:10:39.000
oder so so und wie wie wie hänge ich das jetzt überhaupt zusammen s1 plus s2 wird

01:10:39.000 --> 01:10:52.480
wahrscheinlich nicht funktionieren oder wie doch einfach so unknown ne das geht nicht

01:10:52.480 --> 01:11:10.760
haha so einfach ist es nicht so einfach ist es nicht moment das ist ein anderer fehler

01:11:10.760 --> 01:11:35.120
cannot add ja gut ok da wirds das das wird jetzt schwierig wie moment moment das stimmt

01:11:35.120 --> 01:11:38.160
ja auch überhaupt nicht was ich da mache ich muss bestimmt noch so was wie unwrap

01:11:38.160 --> 01:11:56.200
oder sowas dahinter machen to string to string ist immer gut das sowas wie concat jetzt wird

01:11:56.200 --> 01:12:07.720
sie aber experimentell langsam ne ne ne ne einfach format makro verwenden ich glaube

01:12:07.720 --> 01:12:13.640
ich muss das vorher erst in den rust string umwandeln bevor das funktioniert jaja da sagt

01:12:13.640 --> 01:12:27.840
es geht so nicht ok aber wenn ich so mache gehts oder was moment warum geht es denn so

01:12:27.840 --> 01:12:45.200
jetzt return jetzt machen unsere etfs meine stonks sind richtig gut wieder massive stonks

01:12:45.200 --> 01:12:50.760
ich sag euch das mal kurz moment ich muss mal kurz den broker hier aufmachen meine stonks

01:12:50.760 --> 01:13:02.160
sind schon 694 euro die woche 1800 euro in 5 monat gehen richtig rauf die stonks allein

01:13:02.160 --> 01:13:16.920
heute 196 euro big big stonks so wie return ich das jetzt überhaupt gescheit ich mein

01:13:16.920 --> 01:13:19.680
wahrscheinlich muss ich auch wieder sowas returnen weil ansonsten wirds wahrscheinlich

01:13:19.680 --> 01:13:30.200
nicht funktionieren und da ist die frage wie ich das in ein da gibt es auch bestimmt sowas

01:13:30.200 --> 01:13:45.480
wie c c char ne string to ne ach du scheiße from pointer to string wie kriege ich das

01:13:45.480 --> 01:14:04.240
jetzt wieder in den c string kucke mal ne keine ahnung wie kriege ich es pointer es

01:14:04.240 --> 01:14:19.560
pointer klingt doch gut es pointer und dann ist es einfach konst u8 ist mir doch egal

01:14:19.560 --> 01:14:34.720
ob es ein konst char ist oder ein konst u8 ist doch eh alles das gleiche geht das jetzt

01:14:34.720 --> 01:14:40.920
oh java cubed hat da ein massive 5 header dings reingepostet in chat was ist das für

01:14:40.920 --> 01:15:03.000
eine ausgeburt der hölle hier into box string box liegt was was ja sie schabt sind utf 16

01:15:03.000 --> 01:15:06.800
strings das ist richtig mal gucken wie man das jetzt das müssen wir dem wahrscheinlich

01:15:06.800 --> 01:15:23.040
auf der dot net seite jetzt beibringen ok lassen wir das mal so kompilieren den kram

01:15:23.040 --> 01:15:26.520
was passiert jetzt wenn ich das ausführe crash start oder sollte erstmal gar nichts

01:15:26.520 --> 01:15:52.360
passieren ne ok return wert ist ein string oh double free detected und tschüss

59:14.380 --> 01:16:15.320
double free wo wo double freen wir hier irgendwas freet das rast irgendwann

01:16:15.320 --> 01:16:21.940
noch mal oder ok ich mache jetzt das ich mache jetzt das was der chat hier vorgeschlagen

01:16:21.940 --> 01:16:34.800
hat das da ich habe keine ahnung was ich was ich dir hier ausführe das wird am ende

01:16:34.800 --> 01:16:46.960
gefriert stimmt das ist ja nur eine referenz die danach ausge- aha aha ok verstehe so mach

01:16:46.960 --> 01:16:58.360
es konst string ans s what the fuck ist das

01:16:58.360 --> 01:17:21.640
jetzt zetscher muss ich machen oder acht du große acht du große kacke ne was casting

01:17:21.640 --> 01:17:30.080
mutz dr es konst die acht ist invalid sauerei anzeige was ist das hier warum ist das invalid

01:17:30.080 --> 01:17:38.440
in go wäre das nicht passiert das ist richtig ich habe absolut ich bewege mich auf territorium

01:17:38.440 --> 01:18:03.680
von dem ich absolut keine ahnung habe ja was es mutz dr jetzt chat jetzt was

01:18:03.680 --> 01:18:23.600
so oder so muss ich machen moment moment so so so ich vergesse so funktioniert das nicht

01:18:23.600 --> 01:18:32.040
so wird das nix so wir das nix ach du scheiße ok mal kurz gucken was diese hilfe seid hier

01:18:32.040 --> 01:18:49.840
dazu sagt wie das mit strengs es

01:18:49.840 --> 01:19:02.840
ich versuche als string zu getan von von rust nach dotnet ohne dass er gefried wird wenn

01:19:02.840 --> 01:19:07.440
dann muss man den string irgendwie auf dem hip das macht das hier ja das macht ja box

01:19:07.440 --> 01:19:21.440
liegt soweit ich mir das vorstellen kann ja so

01:19:21.440 --> 01:19:29.880
expected konst schafft mutt mutz dr ok dann dann return ich einfach dann return ich einfach

01:19:29.880 --> 01:19:36.960
mutz dr ist so auch ok easy wenn er das so will return ich mutz dr easy kompiliert nicht

01:19:36.960 --> 01:19:53.640
alter was was will er von mir aus kompiliert poc not ffe safe ja das ist schon mal schlecht

01:19:53.640 --> 01:20:03.680
ich hab so keine ahnung was ich mach mach einfach string into raw wenn ich string into

01:20:03.680 --> 01:20:13.960
raw mache dann ist aber das problem into raw parts gibts nur dann ist das problem dass

01:20:13.960 --> 01:20:34.480
er das fried am ende von der funktion und dann ist es weg so mal gucken was passiert

01:20:34.480 --> 01:20:40.760
mal gucken was passiert wenn ich das jetzt wenn ich das jetzt string return ok lesen

01:20:40.760 --> 01:20:56.400
wir uns gleich durch ok also mal gucken was passiert wenn ich das jetzt ausführe das

01:20:56.400 --> 01:21:12.320
funktioniert leute das funktioniert aber jetzt haben wir memory leaks jetzt haben wir

01:21:12.320 --> 01:21:19.120
garantiert memory leaks oder noch mal kurz noch mal kurz checken jetzt jetzt haben wir

01:21:19.120 --> 01:21:36.920
bestimmt memory leaks jetzt jetzt haben wir bestimmt memory leaks also wir brauchen wieder

01:21:36.920 --> 01:21:55.360
hier 22 mb wir haben keine memory leaks glaube ich aber nett wir haben keine memory leaks

01:21:55.360 --> 01:22:03.200
wie geht denn das aus irgendwelche gründen ist das safe was wir hier machen ich hab absolut

01:22:03.200 --> 01:22:07.760
keine ahnung warum das safe ist wenn ich ehrlich bin warum ist das safe was wir hier

01:22:07.760 --> 01:22:20.640
machen also

01:22:20.640 --> 01:22:27.600
dotnet freet das wohl für mich danach krasser scheiß es hätte ich jetzt nicht gedacht ich

01:22:27.600 --> 01:22:35.720
hätte gedacht wir memory leaken jetzt ein bisschen aber ok wunderbar alles klar so macht

01:22:35.720 --> 01:22:56.240
man es wahrscheinlich nicht aber ja was auch immer leute ich lasse es jetzt mal gut sein

01:22:56.240 --> 01:23:08.160
damit ich mache wir versuchen das jetzt damit structs was genau sind memory leaks naja wenn

01:23:08.160 --> 01:23:12.960
du mehr also wenn du speicher anfragst vom betriebssystem den aber nicht mehr freigibst

01:23:12.960 --> 01:23:17.720
dann liegst du memory weil du brauchst immer mehr speicher und immer mehr speicher du gibst

01:23:17.720 --> 01:23:23.120
nicht allen speicher frei den du angefordert hast also wenn du nicht allen speicher freigibst

01:23:23.120 --> 01:23:27.520
den du anfordert hast dann hast du ein memory leak so jetzt probieren wir das mal mit structs

01:23:27.520 --> 01:23:40.800
also wenn man an kommentaren nicht dass irgendjemand denkt so macht man das so macht man das nicht

01:23:40.800 --> 01:23:49.360
wofür den ganzen krampf wissen wie es geht ok und jetzt structs übergeben also sample

01:23:49.360 --> 01:23:58.480
struct schon mal optimaler name rast function hier hier steht doch noch mal wie das mit

01:23:58.480 --> 01:24:15.240
dem string funktioniert length ah ok der gibt der expose noch eine free function wo ich

01:24:15.240 --> 01:24:20.600
den danach freeen kann was ich wahrscheinlich gar nicht brauche weil aus irgendwelchen

01:24:20.600 --> 01:24:30.200
gründen dort nettingrahmen für mich gefried hat ja das ist die bessere variante hier

01:24:30.200 --> 01:24:40.000
warum sollte ich proto buff verwenden für die übergabe wenn ich einfach memory übergeben

01:24:40.000 --> 01:24:53.920
also dann machen wir das mal anders also das hier kommt weg so mutt mutt cc ccha so und

01:24:53.920 --> 01:25:08.200
jetzt gucken wir mal ob das liegt oder nicht heckle bamm hat kompiliert moment das ist

01:25:08.200 --> 01:25:13.480
auch in rust so das ist das gleiche oder also wenn ich return hinschreibe oder das hinten

01:25:13.480 --> 01:25:24.340
stehen lasse das ist das gleiche so jetzt probieren wir das noch mal aus wie nicht

01:25:24.340 --> 01:25:46.520
free time also wie viel memory brauchen wir 22 jmb ok und jetzt noch mal eine schleife drum herum

01:25:46.520 --> 01:25:59.600
dass wir hier nichts liegen oder findet ihr das nicht auch verdächtig dass hier nichts

01:25:59.600 --> 01:26:11.360
memory liegt das finde das sehr verdächtig oh guck mal ich habe auch kaum noch freien ram

01:26:11.360 --> 01:26:31.280
oh guck mal mein ram ist voll warum ist mein ram so voll was was läuft im hintergrund was mein

01:26:31.280 --> 01:26:52.640
ram so voll macht läuft da noch irgendwas also es ist ziemlich sus dass das angeblich nicht

01:26:52.640 --> 01:27:11.720
liegt aber anscheinend liegt das wirklich nicht sehr sehr sehr sehr merkwürdig aber ok vielleicht

01:27:11.720 --> 01:27:32.200
vielleicht muss ich den return wert irgendwie verwenden guck mal wenn ich sage void also

01:27:32.200 --> 01:27:39.680
spätestens jetzt müsste ich den kram doch liegen oder wartet mal oder oder räumt er das hier auf

01:27:39.680 --> 01:27:55.320
an der stelle das kommt mir sehr sehr merkwürdig vor dass hier kein memory links liegen das

01:27:55.320 --> 01:28:08.680
funktioniert das liegt nicht was braucht eigentlich gerade meinen ganzen ram mal blöde blöde frage

01:28:08.680 --> 01:28:14.480
was ist was ist hier eigentlich gerade so so pepo fett was mein ganzen ram frisst ob sie

01:28:14.480 --> 01:28:41.120
hat mich vertippt nicht filter was mache ich denn sort bei memory nix frisst mein ram ach

01:28:41.120 --> 01:28:45.440
nee passt doch ist auch available ist doch alles gut ne ist doch alles gut das wurde halt mal

01:28:45.440 --> 01:28:53.360
angefordert ist mittlerweile wieder freigegeben nee es ist eigentlich alles in ordnung das ist

01:28:53.360 --> 01:29:03.920
alles in ordnung ich würde sagen da memory liegt nix ich bin mir zwar nicht so ganz sicher warum

01:29:03.920 --> 01:29:13.680
aber es memory liegt aus irgendwelchen gründen nix es ergibt wenig sinn oder vielleicht ist

01:29:13.680 --> 01:29:21.400
aber dort net auch so schlau und räumt es danach automatisch wieder auf ich habe keine ahnung also

01:29:21.400 --> 01:29:25.080
ich habe schon die ein oder anderen interop memory links produziert aber aus irgendwelchen gründen

01:29:25.080 --> 01:29:34.880
verursacht dass kein memory liegt das ist mir auch sehr sus patrick wirklich wirklich äußerst äußerst

01:29:34.880 --> 01:29:36.480
äußerst sus

01:29:46.160 --> 01:29:53.360
ne wartet mal wir probieren was anderes vielleicht ist auch die anzeige vielleicht doch die anzeige

01:29:53.360 --> 01:30:01.960
nicht wir machen einfach dort net bild wie geht das mal dort net bild need dot net publish

01:30:01.960 --> 01:30:10.400
machen configuration release jawoll moment wir wollen richtige wir wollen das richtige ordner

01:30:10.400 --> 01:30:28.600
und wir wollen nach dort net net publish ich glaube nämlich dass das gar nicht das richtige

01:30:28.600 --> 01:30:40.440
gemisst aktuell bild konsole app so jetzt probieren das nämlich doch mal aus

01:30:49.960 --> 01:30:56.360
ja das ist die konsole output ok das schon mal was anderes

01:30:56.360 --> 01:31:01.520
jetzt power 113 113 mb

01:31:01.520 --> 01:31:08.360
ne wobei das ist jetzt ja ich habe sie im release im release dings gebildet

01:31:08.360 --> 01:31:21.280
also ich habe kein leute ich habe ernsthaft keine ahnung warum das nicht nicht memory liegt

01:31:21.280 --> 01:31:26.640
auf der einen seite sollte sollte man sich ja freuen ja aber

01:31:26.640 --> 01:31:39.360
das memory liegt nicht gut soll mir recht sein das memory liegt nicht alles klar easy

01:31:39.360 --> 01:31:59.200
ok ich glaube es auch nicht aber anscheinend

01:31:59.200 --> 01:32:13.600
anscheinend juckt ihn das nicht ich ich pflege es nicht aber anscheinend

01:32:13.600 --> 01:32:18.800
aus irgendwelchen gründen funktioniert das es ergibt wenig sinn

01:32:18.800 --> 01:32:31.400
das müsste deutlich mehr liegen bei so viel durch das das müsste schon ein bisschen mehr

01:32:31.400 --> 01:32:41.880
ok keine ahnung wir machen mal weiter das das muss bei gelegenen wie kann man net in

01:32:41.880 --> 01:32:48.840
truss definitiv ein memory leak wollen wir die strings einfach länger machen

01:32:48.840 --> 01:33:00.360
ob es dann ob es dann irgendwie ob es dann mehr liegt

01:33:00.360 --> 01:33:29.320
ja das ist aber auch die konsolen ausgabe

01:33:29.320 --> 01:33:36.040
ok da liegt nichts ich weiß nicht warum wie kann ich denn in rust wie kann ich denn in

01:33:36.040 --> 01:33:42.960
rust definitiv ein ein memory leak produzieren hat da irgendeiner eine ahnung kann ich einfach

01:33:42.960 --> 01:33:45.600
sagen ich will jetzt 50 mb ram anfordern oder sowas

01:33:45.600 --> 01:34:00.720
c rust das muss doch gehen wie mache ich das lip c jawoll sowas sowas da will ich haben

01:34:00.720 --> 01:34:25.600
ok das machen wir jetzt ich will als memory liegen in rust und nicht dialogue memory liegen

01:34:25.600 --> 01:34:33.920
und wie viel ich will mehr haben als was zum alter was ist das wieder für eine sonntags

01:34:33.920 --> 01:34:39.360
und wie viel kann ich da jetzt angeben wie viel wie viel beides ich haben will das ist

01:34:39.360 --> 01:34:47.800
doch das ist doch nur ein beid jetzt

01:34:47.800 --> 01:34:56.560
da bin ich zu ppega für wie funktioniert das jetzt

01:34:56.560 --> 01:35:00.760
rust ich will ich will einfach ram haben gibt gibt mir ram

01:35:00.760 --> 01:35:06.400
ram please

01:35:06.400 --> 01:35:17.280
monkaS warum ist das in rust alles so kompliziert ich will einfach ram und ram liegen und

01:35:17.280 --> 01:35:28.880
ah from size

01:35:28.880 --> 01:35:29.880
from size

01:35:29.880 --> 01:35:49.720
ich bin da echt zu ppega für das ich will ram from

01:35:49.720 --> 01:35:59.000
kann ich einfach so memory anfordern size ok size 1024

01:35:59.000 --> 01:36:00.000
so und jetzt

01:36:00.000 --> 01:36:05.400
doch egal was das da macht

01:36:05.400 --> 01:36:07.240
unwrap muss ich bestimmt machen unwrap

01:36:07.240 --> 01:36:11.000
dann brauchen wir in rust immer unwrappen dann funktioniert das

01:36:11.000 --> 01:36:12.640
unsafe block oh nein

01:36:12.640 --> 01:36:16.480
so das sollte jetzt aber memory liegen oder

01:36:16.480 --> 01:36:20.560
komm wir machen noch mal mehr hier

01:36:20.560 --> 01:36:30.640
1k 10k oder 1mb haben wir jetzt ungefähr

01:36:30.640 --> 01:36:31.640
so

01:36:31.640 --> 01:36:43.800
so das sollte jetzt aber wirklich memory liegen

01:36:43.800 --> 01:36:49.040
das liegt kein memory ich check es nicht sehr sus sehr sehr sus

01:36:49.040 --> 01:37:03.880
mega mega sus

01:37:03.880 --> 01:37:07.680
hyper hyper sus alter

01:37:07.680 --> 01:37:11.760
das muss ich mir das muss ich mir bei gelegener angucken ich hab da immer noch meine meine

01:37:11.760 --> 01:37:12.760
zweifel das

01:37:12.760 --> 01:37:22.560
was auch immer

01:37:22.560 --> 01:37:29.340
so wir machen jetzt weiter mit structs weil string zeug scheint irgendwie besser zu funktionieren

01:37:29.340 --> 01:37:33.400
als erwartet und gleichermaßen ich weiß nicht warum es so funktioniert

01:37:33.400 --> 01:37:51.400
so das nehmen wir mal jetzt mit structs weiter also hier keckel struct haben wir jetzt als

01:37:51.400 --> 01:38:00.600
ok wir wollen keine strings haben in dem fall sondern structs

01:38:00.600 --> 01:38:07.200
beste funktionsnamen da weiß man gleich was sache ist ja

01:38:07.200 --> 01:38:11.120
also test ups was jetzt was haben jetzt vertippt

01:38:11.120 --> 01:38:17.440
irgendwo hab ich miss eingegeben leute wo hab ich wo hab ich miss getippt

01:38:17.440 --> 01:38:31.720
ah es ist nicht in der klasse null

01:38:31.720 --> 01:39:00.880
klar mal zu

01:39:00.880 --> 01:39:03.880
wir übergeben jetzt mal einen struct also sprich

01:39:03.880 --> 01:39:11.600
sample sample struct das heißt das brauchen wir jetzt in c-sharp brauchen wir das gleiche

01:39:11.600 --> 01:39:17.000
also sprich das da brauchen wir als struct in dot net

01:39:17.000 --> 01:39:23.840
das ist ja relativ easy da muss man struct da muss man einmal glaube ich memory layout

01:39:23.840 --> 01:39:27.560
oder so was drüber drüber schreiben dass das funktioniert

01:39:27.560 --> 01:39:35.520
ich erinnere mich da dunkel welches theme benutzt du für deine ide

01:39:35.520 --> 01:39:42.600
das ist das rider das ist das rider standard theme

01:39:42.600 --> 01:39:48.200
rider dark ist das und das gleiche habe ich auch hier in

01:39:48.200 --> 01:39:50.880
sea line das ist auch rider themes für alles andere

01:39:50.880 --> 01:39:57.840
so struct sample struct name ist ja logischerweise egal

01:39:57.840 --> 01:40:05.120
so ach nee moment und jetzt muss man sagen i16 und keine ahnung

01:40:05.120 --> 01:40:16.240
i1 public mal gucken ob wir das jetzt übergeben kriegen

01:40:16.240 --> 01:40:23.000
und so und jetzt haben wir public int 32 i2 wie die dinge heißen ist ja letztendlich

01:40:23.000 --> 01:40:27.880
egal so public struct da muss man jetzt irgendwie

01:40:27.880 --> 01:40:37.280
wie ging das nochmal man musste ihm irgendwie sagen memory layout oder so was

01:40:37.280 --> 01:40:44.720
das ist gar nicht so einfach gewesen wir hatten doch wir hatten doch hier irgendwie so eine

01:40:44.720 --> 01:40:58.120
hilfeseite wo das hier structs

01:40:58.120 --> 01:41:07.200
struct und wie sieht dies die sharp seite aus

01:41:07.200 --> 01:41:16.160
ach struct layout war das was ich gesucht habe genau struct layout weil er muss den

01:41:16.160 --> 01:41:21.640
kram ja in einem c-kompatiblen memory layout speichern

01:41:21.640 --> 01:41:25.040
dass das am endeffekt auch beide seiten sich verstehen was man da was man da hat

01:41:25.040 --> 01:41:37.800
ok so simple struct nee wie habe ich das ding genannt sample nicht simple sample struct

01:41:37.800 --> 01:42:00.640
was hat er für schmerzen hat ihn noch vorher auch nicht gestört

01:42:00.640 --> 01:42:05.960
du kannst ja das struct reingeben und er rechnet plus eins drauf als return ja das könnte

01:42:05.960 --> 01:42:10.400
man könnte man tatsächlich gute idee so jetzt rufen wir jetzt rufen wir den kram erst mal

01:42:10.400 --> 01:42:20.320
auf also interop keckel struct new sample struct so das übergeben wir machen wir da

01:42:20.320 --> 01:42:27.560
schreiben wir da ein paar werte rein das ist eins und das ist zwei so mal gucken ob das

01:42:27.560 --> 01:42:33.720
jetzt schon mal funktioniert und nicht direkt hallo und nicht direkt crash beim aufrufen

01:42:33.720 --> 01:42:43.120
vor 20 und 69 ihr habt recht wenn schon wenn schon dann richtig ja so ran er crash schon

01:42:43.120 --> 01:42:54.800
mal nicht das schon mal gut warum warum moment warum crash der nicht das ergibt überhaupt

01:42:54.800 --> 01:43:02.920
keinen sinn na gut ich ich sag nix sample struct so wie macht man das mit dem sample

01:43:02.920 --> 01:43:18.680
jetzt wie übergibt man das jetzt kann ich kann man einfach in rust sagen dass das hier

01:43:18.680 --> 01:43:30.160
ist dann quasi ein ein sample struct geht das so und dann sagen wir hier struct eins

01:43:30.160 --> 01:43:46.800
field one und da steht dann vor 20 drin stand ganz oben wo das ist return wert returning

01:43:46.800 --> 01:43:53.200
simple struct ich will ja quasi callings mit einem simple struct so was macht er jetzt

01:43:53.200 --> 01:43:59.680
er bildet er bildet ohne probleme alles klar so struct value doppel punkt dass wir auch

01:43:59.680 --> 01:44:07.120
wissen dass das aufgerufen hat so führen wir mal aus und jetzt crash nein wie wie das

01:44:07.120 --> 01:44:33.720
geht einfach das ist aber tatsächlich relativ einfach was juckt ihn ein was hat er hier

01:44:33.720 --> 01:44:49.680
eiferschmerzen in meiner ide das juckt ihn noch davor auch nicht warum brauche ich jetzt

01:44:49.680 --> 01:45:01.040
auf einmal hier irgendwas und davor nett also das ist ok aber weil das keckel struct heißt

01:45:01.040 --> 01:45:07.640
ist nicht ok wenn die stru- wenn das struct ein string hat das probiere ich jetzt nicht

01:45:07.640 --> 01:45:26.400
aus dann wird es wahrscheinlich komplizierter das hat jetzt einfach funktioniert das glaube

01:45:26.400 --> 01:45:39.080
jemand value eins value zwei struct value eins vor 20 struct value 269 das funktioniert

01:45:39.080 --> 01:45:44.600
tatsächlich was jetzt natürlich komplizierter wird ist wenn ich jetzt es eins sage keine

01:45:44.600 --> 01:45:57.000
ahnung 2 gleich das geht natürlich so einfach nicht das ist immutable kann ich ihm einfach

01:45:57.000 --> 01:46:07.400
sagen ich will das mutt und und und mutt haben funktioniert ok und jetzt ist halt die frage

01:46:07.400 --> 01:46:20.400
ob da jetzt auf der dotnet seite auch wirklich es crash oder irgendwas er macht nichts mehr

01:46:20.400 --> 01:46:49.600
das funktioniert so nicht ich glaube ich glaube da kackt jetzt ab sample struct was ändere

01:46:49.600 --> 01:47:00.640
ich denn hier field 2 ok ne das funktioniert nicht das funktioniert nicht also das darf

01:47:00.640 --> 01:47:07.640
ich hier anscheinend nicht mutable übergeben jetzt halt nur die frage wie kriege ich das

01:47:07.640 --> 01:47:21.440
mutable dass ich das also nicht mutable funktioniert ohne probleme da hat überhaupt keine schmerzen

01:47:21.440 --> 01:47:35.160
mit kann man keinen pointer akzeptieren in rust doch eine mutable kopie machen ändern

01:47:35.160 --> 01:47:45.280
und return feife chat so in die frage wie also let mutt mein clone oder sowas gleich

01:47:45.280 --> 01:48:00.200
struct kann man das so machen man klaut das jetzt ne oder das wird wahrscheinlich so nicht

01:48:00.200 --> 01:48:05.240
funktionieren oder doch ich weiß dass es kein clone ist aber ich weiß nicht wie ich es

01:48:05.240 --> 01:48:19.120
besser mache ok ok ok das geht ne markt das geht schon mal net kaputt return sample struct

01:48:19.120 --> 01:48:29.040
das kompiliert und das funktioniert leute es geht das geht einfach

01:48:29.040 --> 01:48:39.120
es ist kein clone es ist irgendeine referenz oder so keine ahnung aber easy das geht es

01:48:39.120 --> 01:48:47.600
ist der c memory alignment beste aber aus gründen die sich mir nicht ganz erschließen

01:48:47.600 --> 01:48:55.760
scheint es zu funktionieren guck mal hier und was die für einen riesen akt machen hier

01:48:55.760 --> 01:49:02.320
wobei im prinzip ist es doch relativ ähnlich zu dem was die

01:49:02.320 --> 01:49:17.400
strut ok strut return ist deutlich einfacher als string return wie es aussieht easy

01:49:17.400 --> 01:49:22.960
interessant ok hier eine idee in c sharp das sample struct

01:49:22.960 --> 01:49:27.680
als variable machen die rein geben in die funktion dann die variable plus das return

01:49:27.680 --> 01:49:34.160
print maybe moment was langsamer das war das war das waren zu feife tige zu viel information

01:49:34.160 --> 01:49:39.440
für mich in einem satz jetzt also in c sharp das sample struct als variable machen ok

01:49:39.440 --> 01:49:49.560
die rein du meinst in pointer rein geben in die funktion ok das ist eine gute idee weil

01:49:49.560 --> 01:49:57.000
so direkt bei value und so ist wahrscheinlich relativ easy also du meinst quasi im prinzip

01:49:57.000 --> 01:50:08.960
sowas hier wie machen man das jetzt gescheit du meinst quasi sowas hier ja nur mit dem

01:50:08.960 --> 01:50:15.440
unterschied ich meine das ist ja das ist ja schon wie mach ich da jetzt ach du scheiße

01:50:15.440 --> 01:50:22.960
die mache ich da jetzt ein pointer zu überhaupt das muss das ist auf jeden fall uns safe unsafe

01:50:22.960 --> 01:50:37.200
irgendwie in pointer oder so das ref keyword ja aber ich glaube nicht dass das ref keyword

01:50:37.200 --> 01:50:40.480
du hast schon aber ich glaube nicht dass das ref keyword unter der haube dafür sorgt dass

01:50:40.480 --> 01:50:48.200
es ein c pointer wird oder das ist ja intern aber so in c sharp intern wird das funktionieren

01:50:48.200 --> 01:51:08.720
aber ob das in c macht er da wirklich ein pointer draus also quasi sowas hier ja ok

01:51:08.720 --> 01:51:16.280
dass das jetzt stimmt ist ist klar weil es auf die falsche speicher adresse zeigt und

01:51:16.280 --> 01:51:21.840
wir haben irgendwo 69 rein geschrieben alles klar aber das mit dem übergeben scheint

01:51:21.840 --> 01:51:34.800
schon mal funktioniert zu haben ok jetzt müssen wir nur noch über jetzt müssen wir nur gucken

01:51:34.800 --> 01:51:40.160
also ich bekomme jetzt kein strack ich bekomme ja eigentlich ein sample strack pointer kriege

01:51:40.160 --> 01:51:54.080
ich da rein war das mal kurz weg ich bekomme ja ein sample strack pointer rein das sollte

01:51:54.080 --> 01:52:00.160
ja so nicht funktionieren so also muss ich das jetzt erst mal die referenzen also nehmen

01:52:00.160 --> 01:52:11.000
wir irgendwie s1 gleich und jetzt pointer so ne das muss bestimmt cannot move ne das

01:52:11.000 --> 01:52:33.160
geht bestimmt anders jetzt jetzt kommt rust magic wie dereferenze ich das jetzt in einfach

01:52:33.160 --> 01:52:43.880
so uns das ja gut aber ich mein das klammern ist natürlich das eine schau mal ob das so

01:52:43.880 --> 01:52:56.080
prinzipiell funktioniert ne expected mutt or konst in raw pointer type also was also

01:52:56.080 --> 01:53:12.600
so aha monka es und jetzt und jetzt ist es einfach vor 20 und 69 jetzt funktioniert

01:53:12.600 --> 01:53:21.120
es wieder so und und und wenn ich es jetzt ändern will müsste ich dann so machen wobei

01:53:21.120 --> 01:53:26.040
das hat ja vorher schon mal nicht funktioniert dass er vorher schon mal abgekackt ne das

01:53:26.040 --> 01:53:29.960
funktioniert jetzt ok machst du das ganze einfach so oder hast du ein bestimmtes ziel

01:53:29.960 --> 01:53:35.480
ja halbe halbe also ich mache das ja hauptsächlich so mein ziel ist ich will mir demnächst mal

01:53:35.480 --> 01:53:42.760
avalonia angucken und ich dachte mir das ist ein cross platform dort net ui framework und

01:53:42.760 --> 01:53:50.200
ich dachte mir man könnte quasi eine windows suchleiste machen allerdings nicht wirklich

01:53:50.200 --> 01:53:56.000
gut funktionierend und nachdem ich eh schon mal dort net und rust interop ausprobieren

01:53:56.000 --> 01:54:03.040
wollte habe ich mir gedacht ich mache den index über meine filesystem files mache ich

01:54:03.040 --> 01:54:07.800
mit einer rust library und das frontend mache ich mit c-sharp und avalonia nicht da wie

01:54:07.800 --> 01:54:11.820
gesagt es ist nicht geplant dass der irgendwas benutzbares rauskommt einfach nur mal gucken

01:54:11.820 --> 01:54:17.520
wie es funktioniert singlordangische für den sub also ich bin erstaunt dass es einfach

01:54:17.520 --> 01:54:24.760
so geht dass das überrascht mich jetzt schon ein bisschen wenn ich ehrlich bin so und

01:54:24.760 --> 01:54:29.520
jetzt kann ich es doch wahrscheinlich auch einfach ändern jetzt kann ich einfach sagen

01:54:29.520 --> 01:54:48.840
hier struct 1 field 2 gleich 421 oh nee is the raw pointer dereferencing achso ja ja

01:54:48.840 --> 01:54:59.280
alles klar und jetzt ist die frage ob das in dort net auch so ankommt easy es funktioniert

01:54:59.280 --> 01:55:07.040
das klappt einfach ich muss doch nicht mal was return ich übergebe nen pointer von dem

01:55:07.040 --> 01:55:13.920
struct das ist ja also eins muss man sagen die haben den interop code in c-sharp deutlich

01:55:13.920 --> 01:55:20.320
vereinfacht früher musste man da immer solche dinger machen marshal int pointer und und

01:55:20.320 --> 01:55:27.400
geschiss mittlerweile ist das richtig einfach du schreibst nen ref dran und da macht daraus

01:55:27.400 --> 01:55:32.720
tatsächlich unter der haube ein raw c pointer auf das struct und er funktioniert auch weil

01:55:32.720 --> 01:55:39.040
in rust kann ich ihn einfach als als parameter nehmen dann ausgeben ändern und es klappt

01:55:39.040 --> 01:55:42.600
also heute ich muss sagen das ist in dem fall tatsächlich deutlich einfacher gewesen als

01:55:42.600 --> 01:55:52.760
ich mir das vorgestellt habe ja 20 jahre rust experience wichtig direkt den lebenslauf

01:55:52.760 --> 01:55:57.680
das ist aber das ist wirklich nice das hätte ich hättet ihr das gedacht dass das so easy

01:55:57.680 --> 01:56:07.640
ist austrin im struct nee leute nee nee hört mir auf hört mal auf dann würde ich lieber

01:56:07.640 --> 01:56:18.960
also bevor ich strings im struct mache würde ich eher zwei parameter mit strings machen

01:56:18.960 --> 01:56:23.360
und im struct ja das ist jetzt ein bisschen kompliziert da müsste man jetzt theoretisch

01:56:23.360 --> 01:56:46.160
irgendwelche c funktions pointer machen weil von sowas hier ja keine ahnung also davon

01:56:46.160 --> 01:56:58.480
hat es keinen plan es kann sogar sein dass es das kaputt macht jetzt also wie ich jetzt

01:56:58.480 --> 01:57:12.560
hier nen c funktions pointer mache auf diese function also das weiß ich aus dem kopf nicht

01:57:12.560 --> 01:57:16.120
ich hab das schon gemacht ich hab das mit ffmpeg callbacks schon gemacht das ist gar

01:57:16.120 --> 01:57:19.680
nichts du hast recht das ist gar nicht so schwierig aber aus dem kopf da muss man jetzt glaube

01:57:19.680 --> 01:57:42.320
ich wirklich irgendwas machen die function hier get get function pointer

01:57:42.320 --> 01:57:55.640
und jetzt kann ich sagen struct keck so so jetzt hab ich jetzt hab ich hier nen pointer

01:57:55.640 --> 01:58:07.320
auf die jetzt hab ich nen pointer auf diese diese hier print print hallo cute chat so

01:58:07.320 --> 01:58:14.880
jetzt hab ich nen pointer auf diese funktion in der instanz von dem struct alter jetzt

01:58:14.880 --> 01:58:20.280
wirds aber kompliziert jetzt ist bloß die frage wie krieg ich das nach rust rein also

01:58:20.280 --> 01:58:24.440
in rust kann ichs jetzt nicht einfach so hier übergeben in rust bräuchte ich jetzt quasi

01:58:24.440 --> 01:58:35.080
den typ dieser dieser funktion irgendwie ok call me so wie krieg ich da c function pointer

01:58:35.080 --> 01:58:58.800
rein rust callback c function oje jetzt wirds jetzt wirds aber nicht void const ne du hast

01:58:58.800 --> 01:59:22.720
es jetzt c++ alter moment moment moment moment was machen die hier für abgedrehten shit

01:59:22.720 --> 01:59:30.160
was machen die hier für oh kacke extern fn das müsste ich jetzt ja auch hier als parameter

01:59:30.160 --> 01:59:39.800
übergeben können ok ok ok extern function so wie sehen dann meine parameter aus meine

01:59:39.800 --> 01:59:49.960
parameter ist void void also im prinzip so und so also eigentlich nix kann ich das jetzt

01:59:49.960 --> 01:59:57.560
einfach so callen leute da cacke ich aber wenn das so funktioniert wenn das so funktioniert

01:59:57.560 --> 02:00:17.960
dann dann ist wirklich triple cacke angesagt so void ich mein das ist jetzt zwar ziemlich

02:00:17.960 --> 02:00:35.600
ziemlich beknackt wait a minute doch falsch int pointer kann man wahrscheinlich einfach

02:00:35.600 --> 02:00:59.320
machen so call interop und jetzt das da übergeben leute das wird nicht funktionieren das kann

02:00:59.320 --> 02:01:19.520
ich funktionieren das funktioniert einfach das hätte ich nicht gedacht easy ich mein

02:01:19.520 --> 02:01:26.980
wirklich safe ist rust damit jetzt nicht dass das einfach klappt wir brauchen übrigens

02:01:26.980 --> 02:01:32.160
diese funktion gar nicht fällt mir hier auf an der stelle wir können wir können die funktion

02:01:32.160 --> 02:01:39.120
theoretisch kann man die auch in diesem diesem struct übergeben ne kann man nicht achso

02:01:39.120 --> 02:01:54.200
doch callback ja und jetzt und jetzt hier unten einfach den callback aufrufen und dann kann

02:01:54.200 --> 02:02:04.840
ich das alles hier in einem machen ich meine die ups achso das hat ja ihr falsche falsche

02:02:04.840 --> 02:02:15.200
falsche parameter so und jetzt gehts einfach ich meine es ist jetzt natürlich ein kleiner

02:02:15.200 --> 02:02:20.920
umweg drin man macht quasi die instanz legt man hier an von dem struct dann macht man

02:02:20.920 --> 02:02:28.280
den function pointer auf die funktion hier in dieser struct instanz man kann bestimmt

02:02:28.280 --> 02:02:37.400
irgendwie das auch so übergeben dass er das direkt hier drauf callen kann aber also kann

02:02:37.400 --> 02:02:48.800
man könnte man sowas hier machen ne das geht wahrscheinlich nicht oder ne moment das kann

02:02:48.800 --> 02:02:53.160
er so nicht funktionieren da hat er die daten den namen gar nicht das ist ja kein function

02:02:53.160 --> 02:02:58.760
ne ne das wird so nicht funktionieren aber mal ganz im ernst das ist schon ausreichend

02:02:58.760 --> 02:03:07.160
genug das ist so schon ausreichend genug ich habe keinerlei anwendungszweck dafür ich

02:03:07.160 --> 02:03:11.840
wollte einfach ausprobieren ob es funktioniert aber das ist schon das schon nice also es

02:03:11.840 --> 02:03:20.200
ist tatsächlich deutlich einfacher als ich mir das so vorgestellt habe ja ich würde

02:03:20.200 --> 02:03:25.000
sagen dann können wir ja das nächste mal tatsächlich die die such library verwenden

02:03:25.000 --> 02:03:37.600
die ich hier ausprobieren wollte hier example also was ich vor hatte ist folgendes übergibt

02:03:37.600 --> 02:03:46.840
man ein string array in einem stahl jetzt aber du wirst in ein paar monaten nicht alles

02:03:46.840 --> 02:03:54.120
verstehen weil ich selbst verstehe die sachen nicht nur weil ich das stream heißt es so

02:03:54.120 --> 02:04:00.240
lange nicht dass ich wüsste was ich hier mache also chat jetzt mal ernsthaft ich glaube

02:04:00.240 --> 02:04:05.400
es gibt ich will ich sagen eine handvoll auf der welt das ist wahnsinnig übertrieben aber

02:04:05.400 --> 02:04:09.720
sag mal so du wirst ein paar tausend leute auf der welt vielleicht haben die wirklich

02:04:09.720 --> 02:04:16.880
verstehen was da gerade passiert ja gehen erase überhaupt müssten theoretisch funktionieren

02:04:16.880 --> 02:04:34.760
ja also nicht dass ich irgendwie durchblicken würde also wenn ich das jetzt richtig verstanden

02:04:34.760 --> 02:04:41.000
habe willst du sowas hier machen ja allen ernstes du willst du willst quasi sowas hier

02:04:41.000 --> 02:04:56.000
machen public string array gleich wobei wir können es ja wir können es ja anlegen um

02:04:56.000 --> 02:05:02.800
solange die fix size haben wir haben nicht fix size das müsste dann das müsste dann

02:05:02.800 --> 02:05:09.160
in den pointer werden oder so boah das ist abfahrt leute wir übergeben ok leute wir

02:05:09.160 --> 02:05:13.520
machen was anderes bevor wir jetzt einen struct mit einem string array übergeben übergeben

02:05:13.520 --> 02:05:19.200
wir mal ein string array ich weiß gar nicht wie ich das gescheit machen soll also brauchen

02:05:19.200 --> 02:05:27.000
wir hier noch was neues

02:05:27.000 --> 02:05:31.280
ab zu spät eingeschaltet was brauche ich also zwei sachen erstens ja ich will ausprobieren

02:05:31.280 --> 02:05:37.760
was so funktioniert und zweitens ich will eine rust ich will eine rust such library verwenden

02:05:37.760 --> 02:05:43.680
weil ich in zukunft mal avalon ja ui ausprobieren will für dotnet und ich dachte wir machen

02:05:43.680 --> 02:05:49.800
so eine simple windows suchleiste die nicht wirklich gut funktionieren wird wahrscheinlich

02:05:49.800 --> 02:05:53.480
also wir machen keine windows suchleiste wir machen ein wir machen ein fenster das hat

02:05:53.480 --> 02:06:00.200
eine input text fällt und da kann ich dann dateien suchen die bei mir im heimatverzeichnis

02:06:00.200 --> 02:06:04.840
liegen so und dazu habe ich gedacht machen wir mit einer search engine machen wir ein

02:06:04.840 --> 02:06:09.400
index über alle dateien die in meinem heimatverzeichnis sind und dann tippe ich in dieses feld ein

02:06:09.400 --> 02:06:13.360
blub und dann kriege ich alle dateien die blub enthalten so und dafür verwende ich

02:06:13.360 --> 02:06:19.120
eine library in rust nicht weil es sinnvoll ist ich könnte jede x beliebige andere library

02:06:19.120 --> 02:06:24.040
verwenden es gibt auch text index libraries für dotnet ich könnte auch sqlite fulltext

02:06:24.040 --> 02:06:28.280
suche verwenden oder sowas aber ich dachte mir wir könnten bei der gelegenheit mal interop

02:06:28.280 --> 02:06:34.400
mit rust machen und avalon ja ui ausprobieren sodass dann am ende irgendwas rauskommt was

02:06:34.400 --> 02:06:45.040
keiner verwendet aber was was gelernt hat bei so also wenn ich das richtig verstehen verstanden

02:06:45.040 --> 02:07:02.320
habe chat ihr wollt sowas machen string array array fahrer so ihr wollt ihr wollt sowas

02:07:02.320 --> 02:07:17.040
machen ja das ist natürlich ziemlich eklig das geht bestimmt so nicht was hat er für

02:07:17.040 --> 02:07:36.280
jetzt muss ok wie man die strings string marshalling als utf acht so also wie kriegen wir ein string

02:07:36.280 --> 02:07:41.440
array an rust übergeben da würde ich sagen das ist so ohne weiteres geht das wahrscheinlich

02:07:41.440 --> 02:07:51.800
gar nicht aber also was brauche ich überhaupt für ein parameter wie sieht überhaupt ein

02:07:51.800 --> 02:07:58.040
string array in rust aus das ist ein vector oder die vector ist ein dynamisches array

02:07:58.040 --> 02:08:02.800
moment moment moment das stimmt gar nicht ich will kein array ich will tatsächlich

02:08:02.800 --> 02:08:12.400
so eine doch ich will ein array übergeben aber muss ein array nee nee nee ok leute stimmt

02:08:12.400 --> 02:08:16.980
nicht was ich übergeben will ist folgendes ich will ein pointer und eine länge übergeben

02:08:16.980 --> 02:08:32.640
nur so funktioniert das also ich will quasi ein ein konst c char pointer und eine länge

02:08:32.640 --> 02:08:44.040
32 sowas will ich eigentlich haben so das heißt ich kann er auf der netzseite auch nicht

02:08:44.040 --> 02:08:48.240
einfach einen string array übergeben das wird wahrscheinlich nicht funktionieren ich

02:08:48.240 --> 02:08:52.160
probiere das mal aus aber ich glaube nicht dass nee nee so so schlau ist es nicht ich

02:08:52.160 --> 02:09:01.840
muss da ich muss hier übergeben ein ein pointer auf quasi den start von dem array und eine

02:09:01.840 --> 02:09:11.120
länge so schauen wir mal ob wir das zumindest aufgerufen kriegen auch mal den ganzen krempel

02:09:11.120 --> 02:09:18.960
hier weg da bin ich ja mal gespannt ob wir das gebacken kriegen array parameter so start

02:09:18.960 --> 02:09:30.120
null und länge probieren wir mal so aus ob das ob das funktioniert also print wir testen

02:09:30.120 --> 02:09:36.340
erst mal ob das parameter übergeben funktioniert also länge sollte ja länge sollte ja funktionieren

02:09:36.340 --> 02:09:43.920
länge sollte easy sein länge sollte jetzt zehn rauskommen jawoll länge zehn so und

02:09:43.920 --> 02:09:48.000
hier sollte jetzt sind das sollte eine null pointer sein im endeffekt weiß gar nicht

02:09:48.000 --> 02:09:54.760
was rast damit macht wenn ich ihm wie kriegt man den rusty die speicher adresse raus so

02:09:54.760 --> 02:10:14.640
rast get adress from pointer

02:10:14.640 --> 02:10:25.200
was ja und das ist mir auch klar

02:10:25.200 --> 02:10:31.000
kann use type alias es konz es konstrukte ach so im moment es ist ja auch s1 und ich

02:10:31.000 --> 02:10:39.060
zetscher was mache ich ja für einen blödsinn so adress null ok das funktioniert schon

02:10:39.060 --> 02:10:45.440
nochmal ich sag ja auch adresse null und länge 10 also die parameterübergabe an die funktion

02:10:45.440 --> 02:10:50.240
das scheint schon mal zu funktionieren so und jetzt muss ich nur noch gucken dass ich

02:10:50.240 --> 02:10:58.000
die dass ich die richtige adresse übergebe für das array machen wir doch mal legen wir

02:10:58.000 --> 02:11:09.160
doch mal nen array an string array einfach ja jetzt heißt er new string array da schreiben

02:11:09.160 --> 02:11:17.280
wir jetzt rein null progu und keckel das die strings brauchen wir schon haben wir schon

02:11:17.280 --> 02:11:26.120
immer mal gebraucht so und wie kriege ich davon jetzt eine adresse mein einfach so wird

02:11:26.120 --> 02:11:33.880
wahrscheinlich net funktionieren genau ich kann auch take a dress of manage type string

02:11:33.880 --> 02:11:49.800
array vielleicht vom ne wie kriegt man war das irgendwas mit pinning oder so ne ne an

02:11:49.800 --> 02:11:59.680
save uns jetzt an der stelle nicht bringen der wird nämlich meckern dass es nicht nicht

02:11:59.680 --> 02:12:07.040
nicht gefixt ist oder so top uns allein wird es nicht bringen ne ne seht ihr ne ne das

02:12:07.040 --> 02:12:13.200
funktioniert ich glaube man muss irgendwie sowas machen fixed jaja genau genau genau

02:12:13.200 --> 02:12:21.320
genau genau genau sowas ist es woher weißt du dass über null null nichts wichtiges überschreibt

02:12:21.320 --> 02:12:25.200
ich benutze 00 gar nicht ich habe nur die adresse übergeben um zu gucken was sache

02:12:25.200 --> 02:12:30.640
ist ja aber 00 ist null pointer da überschreibe ich nichts nichts nichts nichts wichtiges das

02:12:30.640 --> 02:12:36.080
war einfach nur um zu gucken ob die werte ordentlich rüberkommen ich ich muss tatsächlich

02:12:36.080 --> 02:12:50.760
irgendwie sowas von den pointer jaja wtf blob irgendwas irgendwas in der richtung ok c sharp

02:12:50.760 --> 02:13:03.680
array true pointer konnte man konnte man nicht einfach es es memory oder sowas sagen irgendwie

02:13:03.680 --> 02:13:15.760
so mem und dann irgendwie es pointer ging das nicht pointer span span jetzt konnte man

02:13:15.760 --> 02:13:27.400
auch pointer sagen oder es gibt doch es gab doch jetzt neues zeug dafür in in einer

02:13:27.400 --> 02:13:34.000
letzten dotnet version oder konnte man nur ein pointer zum span machen und nicht in span

02:13:34.000 --> 02:13:59.520
zum pointer job span to pointer ja das geht

02:13:59.520 --> 02:14:29.400
so ich weiß ne moment bin ähm ne ne das das ich ich glaube ich habe das am anfang schon

02:14:29.400 --> 02:14:39.400
schon halbwegs richtig gemacht irgendwie so

02:14:39.400 --> 02:15:05.000
warte für schmerzen ja beid beid ist schon ok eigentlich charm ist eigentlich sein

02:15:05.000 --> 02:15:19.960
moment ne ne ne das kann ja so gar nicht funktionieren moment das ergibt ja keinen sinn die strings

02:15:19.960 --> 02:15:32.800
in dotnet die sind ja utf 16 die sind ja utf 16 ich muss ein neues array machen mit utf

02:15:32.800 --> 02:15:41.360
8 strings dass das funktioniert das kann ja gar nicht klappen sonst ich müsste die

02:15:41.360 --> 02:15:52.560
dinge quasi ich müsste ein neues array erzeugen aus bytes die wo dahinter utf 8 boah alter

02:15:52.560 --> 02:16:00.160
das ist ja eklig das weiß ich nicht ob man das wirklich machen will oder theoretisch

02:16:00.160 --> 02:16:17.480
müsste ich theoretisch bräuchte ein neues array bräuchte quasi sowas hier select string

02:16:17.480 --> 02:16:37.040
um encoding utf 8 get bytes sowas hier bräuchte ich jetzt ja genau jetzt habe ich ein byte

02:16:37.040 --> 02:16:48.200
array mit utf 8 strings drinnen und das kann man wahrscheinlich boah das ist ja ei ei ei

02:16:48.200 --> 02:16:53.320
und jetzt habe ich ein byte jetzt habe ich ein byte array mit byte arrays drinnen ja

02:16:53.320 --> 02:17:02.320
logisch weil ich boah das ist ja mega abwache ich weiß nicht ob ich das machen will ja

02:17:02.320 --> 02:17:13.560
das wird doch nicht funktionieren ach du scheiße kann man das jetzt

02:17:13.560 --> 02:17:34.600
so einfach ist es schon mal nicht ok ja ich habe keine ahnung

02:17:34.600 --> 02:17:52.640
ne da da hört jetzt meine meine c-sharp-kenntnisse auf ich denke jetzt gescheit ok c-sharp string

02:17:52.640 --> 02:18:21.600
array dll import aha aha string data string was jetzt wirds aber abgedreht

02:18:21.600 --> 02:18:29.640
vielleicht auf bytes null

02:18:29.640 --> 02:18:38.280
packst du nicht gerade ein array in ein array

02:18:38.280 --> 02:18:42.640
ne ich wandel den inhalt um in utf 8 strings

02:18:42.640 --> 02:18:53.080
also ich habe jetzt ein byte array das aus byte arrays besteht weil byte also das hier

02:18:53.080 --> 02:19:07.760
sind drei byte arrays und davon habe ich den array das ist halt wir aber ok

02:19:07.760 --> 02:19:23.040
byte geht das jetzt monkaS pointer sind fix da ist mal unsafe ach so muss ich noch unsafete

02:19:23.040 --> 02:19:30.760
vorschreiben oder was ja meinetwegen ok das ist schon mal eine ram adresse die da

02:19:30.760 --> 02:19:42.600
drin steht alles klar also und die länge ist allerdings moment das funktioniert nicht

02:19:42.600 --> 02:19:49.560
das funktioniert nicht ich weiß ja nicht wie lang die einzelnen strings da drin sind

02:19:49.560 --> 02:19:54.240
der müsste daraus null terminate boah ne da hab ich jetzt echt hab ich jetzt wirklich

02:19:54.240 --> 02:20:02.000
keinen bau drauf ich weiß ja nicht mal wie lang die einzelnen strings da drin sind ok

02:20:02.000 --> 02:20:07.240
das ist nicht so einfach den string array zu übergeben also in den array mit ins oder

02:20:07.240 --> 02:20:16.640
so ist relativ easy weil die sind alle gleich groß aber den array mit variablen variablen

02:20:16.640 --> 02:20:24.400
langen strings geht so ohne weiteres nicht würde ich sagen weil du brauchst ja zu jedem

02:20:24.400 --> 02:20:29.040
string die information wie lange er ist und du brauchst zum array die information wie

02:20:29.040 --> 02:20:33.000
lange er ist und das kriegst du nicht so einfach übergeben ne ich glaube das funktioniert

02:20:33.000 --> 02:20:42.600
nicht so wie ich mir das gedacht habe wenn die dinger alle gleich lang wären dann wirds

02:20:42.600 --> 02:20:58.240
wahrscheinlich funktionieren

02:20:58.240 --> 02:21:15.440
also ein zeichen ist immer 8 bit nö bei utf 8 nicht ne ne ne ne ne ne bei utf 8 können

02:21:15.440 --> 02:21:23.000
zeichen bis zu 8 bis zu 8 bis zu 4 byte lang sein der trick an utf 8 ist doch dass das

02:21:23.000 --> 02:21:29.680
erstmal ascii kompatibel ist für die ersten 256 zeichen und danach das letzte bit quasi

02:21:29.680 --> 02:21:36.240
signalisiert ob der nächste äh wie heißt das bei utf 8 code point oder so ein neues

02:21:36.240 --> 02:21:42.680
zeichen ist oder ein weiteres byte zu einem bestehenden zeichen das ist ja der witz an

02:21:42.680 --> 02:21:52.480
utf 8 aber ich fürchte das kriege ich so gar nicht an der stelle gescheit raus es

02:21:52.480 --> 02:21:56.520
müsste halt null null terminated strings sein dann wirds vielleicht funktionieren

02:21:56.520 --> 02:22:07.320
boah ne leute das wär zu wir das krieg ich heute abend pfeifer technisch nicht mehr

02:22:07.320 --> 02:22:26.160
hin moment man kann das moment der kann das schon alles für mich machen wait a minute

02:22:26.160 --> 02:22:41.080
das geht warte mal ich muss das gar nicht selber machen ich kann einfach ich kann einfach

02:22:41.080 --> 02:23:07.480
sagen ernsthaft null wie jetzt wait a minute das geht jetzt das funktioniert jetzt muss

02:23:07.480 --> 02:23:15.480
ich noch gucken wie ich den krempel in rust zurück konvertiert kriege aber es sind ja

02:23:15.480 --> 02:23:21.040
c strings also es müsste doch eigentlich funktionieren so länge gucken wir uns mal in rust an was

02:23:21.040 --> 02:23:30.120
da rauskommt was er sagt länge also länge müsste ja dann 3 sein und länge gibt keinen

02:23:30.120 --> 02:23:38.840
sinn mal mal länge ist 3 das funktioniert tatsächlich und jetzt ist halt die frage wie

02:23:38.840 --> 02:23:46.280
kriege ich wie kriege ich ein c array in rust zurück zu einem vector kann man sowas machen

02:23:46.280 --> 02:24:02.960
hier vector c string gibt es gibt es gibt es so die möglichkeit in die from ne ok rust

02:24:02.960 --> 02:24:20.200
array from c pass c pass c array to rust function alles klar what standard slice from raw parts

02:24:20.200 --> 02:24:41.080
5 hat time leute 5 hat time standard slice from raw parts data s1 länge das da ok u

02:24:41.080 --> 02:24:52.880
size meinetwegen so let keck und das ist jetzt was das ist das soll jetzt funktionieren

02:24:52.880 --> 02:25:00.080
ernsthaft das soll jetzt einfach klappen da habe ich da habe ich ja meine zweifel ob

02:25:00.080 --> 02:25:16.760
das einfach geht nope das wäre jetzt auch zu einfach aber immerhin es hat drei elemente

02:25:16.760 --> 02:25:29.720
es hat drei elemente und und ja irgendwelche irgendwelchen random werte aber ok um ein

02:25:29.720 --> 02:25:37.200
c char glaube das stimmt überhaupt nicht was ich hier

02:25:37.200 --> 02:25:50.960
ne ne so einfach ist es wahrscheinlich dann doch nicht

02:25:50.960 --> 02:26:15.880
array pointer was zum

02:26:15.880 --> 02:26:26.480
der weiß ja gar nicht der der weiß ja gar nicht dass das c strings sind also müsste

02:26:26.480 --> 02:26:36.360
sowas sein ne oder der muss ja checken der muss ja kapieren dass das da drinnen c strings

02:26:36.360 --> 02:26:46.280
sind die rad zurück in rust ne es hört mal auf leute ne ich brauch ich ich brauch die

02:26:46.280 --> 02:26:51.960
länge eines jeden einzelnen strings da drinnen ich meine es sind null terminierte strings

02:26:51.960 --> 02:27:05.080
das heißt von der idee her von der idee her sollte ja eigentlich der erste guck mal was

02:27:05.080 --> 02:27:18.880
ne moment s1

02:27:18.880 --> 02:27:36.760
boah ne der hört mein rust mein rust kam jetzt auf

02:27:36.760 --> 02:27:44.160
es ist ja eigentlich ist es eine adresse auf das start element von einem string array wo

02:27:44.160 --> 02:27:50.360
die strings drinnen null terminierte z ich glaube das funktioniert nicht so also automatisch

02:27:50.360 --> 02:27:56.720
das muss man irgendwie manuell machen boah ne leute mein hirn mein hirn reicht dafür

02:27:56.720 --> 02:28:05.400
grad nicht mehr aus ich bin ich ich bin fertig mit rust für heute es reicht mir ist genug

02:28:05.400 --> 02:28:09.200
das muss uns nix mal angucken das braucht man aber glücklicherweise auch nicht so oft

02:28:09.200 --> 02:28:24.880
schon spät was haben wir denn ja wir haben 21 uhr

02:28:24.880 --> 02:28:36.760
rust ist mega feifett ultra feifett time ist rust ich guck jetzt noch ein bisschen twitch

02:28:36.760 --> 02:28:44.520
irgendwas return to cobalt mit cobalt hätten wir wahrscheinlich noch nicht mal die erste

02:28:44.520 --> 02:28:56.040
zeile richtig hingekriegt ok leute zweieinhalb stunden rust gedürzt reicht mir zwei kopf

02:28:56.040 --> 02:29:01.280
platzt brain lag ist aber halbwegs ok ich glaube ich kann mich morgen auf der arbeit

02:29:01.280 --> 02:29:12.840
wieder insofern konzentrieren dass ich das hin bekomme gibt es noch irgendwann irgendwelche

02:29:12.840 --> 02:29:24.560
sachen die ich übersehen habe oder die ihr wissen wollt leute bevor ich oft gehe ne auf

02:29:24.560 --> 02:29:29.240
der arbeit mache ich garantiert kein rust was ich zum abend gegessen habe ok kann ich

02:29:29.240 --> 02:29:40.040
dir sagen ich habe toastbrot gegessen käs und schinken gruff das habe ich zum abend

02:29:40.040 --> 02:29:47.760
gegessen gibt es ja in einer woche glaube ich in zwei wochen wir hatten einen termin

02:29:47.760 --> 02:30:00.560
aber den habe ich abgesagt wegen corona dein vater hat cobalt gelehrt damals da hat er

02:30:00.560 --> 02:30:13.200
auch ibm mainframe sachen gemacht weil cobalt ist ja da sehr beliebt so was getrunken hydrated

02:30:13.200 --> 02:30:34.240
ein leute nee das ist heute gar nicht angesagt ich glaube ich habe nichts übersehen ok leute

02:30:34.240 --> 02:30:45.280
ja alles klar wir sehen uns im nächstes stream macht es gut bis denn cu betge

