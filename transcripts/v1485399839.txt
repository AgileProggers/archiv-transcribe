Fockchamp, moin, djsw77, und der Enrixl ist auch am Start, Massive, macht ihr um
die Uhrzeit alle hier. Es ist 12.40 Uhr, müsste ich hier arbeiten? Ich muss nicht arbeiten,
ich muss morgen wieder arbeiten, muss ich nach Frankfurt fahren, hab ich gar keinen Bock drauf.
Ach du hast auch am Montag Freitag, das ist natürlich 5-Hetter-Time. 6-Hetter,
7, 8, 9, 10-Hetter ist das. Selbstständig, ja da würde ich auch noch den ganzen Tag stehen,
wobei ich bin selbstständig zur Hälfte. Das Team wird heute wahrscheinlich ein bisschen länger
dauern, mal gucken, ob ich das alles raus bekomme. Ich habe im Vorfeld schon ein bisschen geguckt,
aber... Übrigens, wollte mal kecken, Microsoft hat mir gerade folgende Werbung geschaltet auf
Twitter. Passt mal auf. Das habe ich gerade als Werbung bekommen auf Twitter. Microsoft möchte
mir erklären, welche Riesingen es hat, wenn man sich Microsoft-Lizenzkeys irgendwo kauft,
und den Hashtag finde ich geil. Bleibe echt. Was soll mir das denn sagen? Bleibe echt. Das
ist irgendwie so schlecht ins Deutsch übersetzt, der Hashtag, Alter. Bleibe echt. Das ist mal richtig
schlecht. Bleibe echt Talk. Das ist der Bleibech Talk Nummer 3. Den kann man sich sogar anschauen,
wenn man will. Den wollen wir uns jetzt nicht anschauen. Aber Microsoft... Guck mal,
mal sehen, ob der Link funktioniert. Oder ist mein Internet am abkacken? Ne. Der Microsoft-Link
funktioniert nicht. Keck-WHD. Tja. Vor allem die Antworten da drauf auch wieder. By the way,
es ist ja echt, ne? Also du kannst ohne Probleme einen echten Key kaufen für 20 Euro. Wenn der
nicht echt wäre, würde Microsoft den Gramm ja gar nicht aktivieren. Ja, ich erinnere mich
auch daran. Natürlich würde ich das auch... Damals hätte ich auch gesagt, sind Sie Opfer
einer Softwarefelder? Ja, klar, das muss gefälscht gewesen sein. Ich wusste vor nichts. Aber wie gesagt,
die letzten Jahre, ich kaufe eigentlich mittlerweile wirklich alles, nachdem man auch Streaming,
Videos, Musik und sonstige Sachen heute halbwegs erschwinglich bekommt. Kein Ding. Einziges, wo
ich ab und zu mal auf irgendwelche Streaming-Seiten gucke, ist, wenn es das nicht gibt. Weil das sehe
ich nicht ein. Aber das sind dann meist irgendwelche Nischen-Dinger, die keinen interessieren. Oh,
das ist Dings. Ich habe heute eine neue Playlist angemacht. Erkennt ihr das? Wobei man hört kaum
was. Ich muss mal kurz ein bisschen lauter machen. Erkennt das hier, Mann? Ich erkenne das sofort.
Das ist Terranigma, muss das sein, wenn ich nicht ganz falsch liege. Ja, richtig Proc G-Game.
Ich war zu jung für das Game damals. Ich habe es nicht gecheckt, was die mir sagen wollten.
Die Story ist auch ein bisschen konfus, aber ja, Japan RPG halt.
Ja, also was wir heute machen, ist folgendes sein. Wir gucken uns nicht Microsoft an.
Und wir gucken uns auch nicht Vodafone an. Den ganzen Mist muss ich mal zumachen. Und wir gucken uns
auch nicht den CCC-Talk an. Ich lasse jetzt einfach den Chat auf, hier an der Stelle, um gut ist.
So, ich mache mal die VM an. Also ich habe meinen Access-Point am Start und ich habe festgestellt,
dass das CLI für den Access-Point richtiger Müll ist. Du kannst damit fast nichts machen.
Okay, restarten kannst du. Aber Sachen, die man machen will, kann man über das Web-Interface machen,
aber nicht über das CLI. Also das CLI für den Access-Point ist wirklich pains-champ, richtiger
pains-champ. Deswegen habe ich mir gedacht, wir gucken einfach mal, was das Web-Interface für
Request schickt. Und dann gehen wir über die API vom Web-Interface und gucken uns das an. Wer
entwickelt denn sowas? Ruggus macht das anscheinend. Ja, zum Beispiel, ich lock mich mal kurz ein.
Also, Admin. Pass auf, Passwort leak, Leute. Passwort ist aber nicht schlimm, weil der Access-Point
ist nicht von außen erreichbar und ich werde nach dem Stream auch das Passwort ändern. Achtung,
Leute. Passwort leak gleich. Moment, wo habe ich das Passwort? Hier, Passwort. Ihr werdet
es gleich sehen, wir werden es gleich hardcoded in Code reinschreiben. Also, ich habe auch alles
disabled. Zum Beispiel, was man, Services, DPSK. Also, wenn man WLAN-Passwörter generiert für
User, kann man die sich zum Beispiel hier im Web-Interface anzeigen lassen. Inklusive Passwort
mittlerweile. Man kann sogar sich einen passenden QR-Code dafür anzeigen lassen. Das geht alles
über die Kommando-Zeile nicht. Und auch das Generaten, quasi das Batch-Generaten von
Usern geht nur übers Web-Interface, nicht übers CLI. Das heißt, dadurch, dass es übers Web-Interface
geht, du kannst den Mist nicht automatisieren. Das heißt, wenn ich jetzt ein Gäste-WLAN habe,
ich habe hier testweise mal ein Gäste-WLAN angelegt, was wir jetzt benutzen werden. Also,
ich habe ein Gäste-WLAN angelegt. Mal angenommen, es kommt jemand zu Gast. Ihr kennt mich, was eh
nicht passiert, aber für den Fall der Fälle, ich bin ja nicht der Einzige, der sowas verwendet,
ist mir aufgefallen, ich könnte gar nicht hergehen und sagen, bla, bla, bla, bla, bla,
add User und dann was hinzufügen oder so. Es gibt keine Tools für, das musst du alles
übers Web-Interface machen. Was natürlich auch ein bisschen blöd ist, wenn du die einfach mal
einem User anzeigen lassen willst und sowas. Das klappt alles nicht so richtig gut übers CLI. Das
ist alles ziemlicher Mist, was die programmiert haben. Übrigens, Leute, da steht zwar Java Server
Pages, aber ich glaube, das sind gar keine Java Server Pages. Das sieht nur aus wie Java Server
Pages, weil wer würde denn auf irgendeinem Low Performance Embedded-Ding wirklich Java laufen
lassen? Wer macht denn sowas? Die Seiten heißen wahrscheinlich einfach nur aus Rückwärtskompatibilitätsgründen
und unter der Haube ist es wahrscheinlich PHP oder Note oder so. Keine Ahnung. Zumindest habe
ich mir gedacht, wir schauen einfach mal nach und bauen uns ein Kommando-Zeilen-Tool, wo wir User
auflisten können, User adden können und sowas, aber wir müssen erst mal gucken, wie man sich da
prinzipiell einloggt. So, und ich sehe da zwei Möglichkeiten zu, das zu machen. Entweder, das
haben wir das letzte Mal gemacht, also entweder, das müssen wir jetzt mal rausbekommen, entweder
nehmen wir einen Chrome, Fernsteuern, das ist die Möglichkeit, dass wir einen Chrome nehmen und den
Fernsteuern und dann quasi sagen dem Chrome, er soll hier klicken oder er soll da klicken, er soll
er soll da klicken, er soll da klicken, er soll dann da klicken und so. Das ist aber nicht so schön,
vielleicht, und das hoffe ich eher drauf, ja, bekommen wir raus, wie die API funst. Also sprich,
wir gucken entweder hier mit dem, wir gucken entweder hier mit dem mit dem Tool nach, was der,
was der überträgt und oder wir probieren mit Postman ein bisschen. Bestimmt gibt es eine einfache
JSON-API. Nein, Spoiler, Spoiler, es wird richtig eklig, ich habe nämlich im Vorfeld schon ein
bisschen nachgeguckt, es ist keine JSON-API, es ist XML. Es ist XML, ja und richtig eklig ist
XML, ihr werdet es gleich sehen. Es ist JavaScript in XML, ihr werdet euch denken, wer hat sich das
denn ausgedacht. Ich habe im Vorfeld schon ein bisschen auf GitHub rumgeguckt, was andere Leute
so rausbekommen haben. Es ist teilweise JavaScript in XML und das ist richtig, richtig abartig.
So und als erstes müssen wir mal rausbekommen, wie lockt man sich ein und sonst was. Ich habe
was gefunden auf Shithub, da hat nämlich jemand schon ein bisschen was rausbekommen
und zwar irgendjemand hat, was heißt irgendjemand, der MMMollinari hat das rausbekommen,
der hat hier so ein Postman JSON gebaut, damit man mit Postman Request schicken kann. Da bin
ich nicht so wirklich daran interessiert, wenn ich ehrlich bin. Mich interessiert, was er gemacht hat
und es geht schon los. Ich zeige euch mal so ein bisschen, was ihr gleich seht, was auf uns
zukommt. Also das geht schon mal mit dem Login los. Das Login ist kein Postrequest, sondern das
Login ist ein Postrequest, der, nee ist gar kein Postrequest, ist ein Get, der das Ganze natürlich
in irgendeiner Art und Weise in der Url encoded, weil, ja, muss so sein, weil macht man ja 2022
noch so, inklusive Passwort und so alles in der Url encoded. Der Glück, was die haben, ist, dass
das harte TPS ist. Wäre das nicht harte TPS, wäre das hochgradig unsicherer Krempel. Gut, aber man,
wäre es im Postbody auch. So, und jetzt kommt der Hit. Um sich sein Session-Token zu besorgen,
muss man Folgendes machen. Man muss eine JSON-Response, eine XML-Response umwandeln,
zumindest macht der Typ das hier so, zu JSON und sich das dann rausparsen. Also man muss quasi
JavaScript aus XML rausparsen, nachdem man das in JSON konvertiert hat. Wobei man das in JSON
konvertieren nicht unbedingt braucht, das macht der Typ hier jetzt nur. So, und die API sieht dann
ansonsten so aus ungefähr. Hier. XML mit vereinzelt JavaScript in XML. Das wird richtig,
richtig abartiger Shit. Das kann ich euch jetzt schon sagen. Das wird ganz, ganz furchtbar eklig.
Ja. Schauen wir mal. Ich bin gespannt, ob wir das auf die Reihe kriegen. Kann man echt nur das zu
sagen. Oh, ich sollte mal updaten. Sehe ich hier gerade updaten? Hallo? Wo ist die Toolbox?
Warum ist die Toolbox aus? Was startest du? Wo sollst du die Toolbox geben? Toolbox sollst du
starten. So. Open Toolbox. Update, Update. Service Tab. Got it. Juckt mich überhaupt nicht.
Wintime beste API. Was ist denn Wintime? Ist das irgendeine Test API wie die Star Wars API?
Wintime, das finde ich viel besser zum Testen als die Star Wars API. Das ist für alle exquisite
Fiveheader unter uns, die sich nur immer 5000 Euro teuren Wien beim Programmieren und beim
High IQ Tätigkeit nachgehend reinhauen. So wie ich nicht. Wir haben das Emote auch. Too Smart ist
das Emote bei mir. So hat er geupdatet. Kann man die Toolbox updaten? Check for updates. Ja,
übrigens ist euch immer aufgefallen, wie kreativ ich meine. Ich mache den ganzen
Krabbel hier mal kurz zu. Ist euch aufgefallen, wie ultra kreativ ich meine User benannt habe
zum Testen? Also es geht von Keku, Kekus, Kekus, Batch User Omega Lul und Poggers haben wir zum
Start. Habe ich gestern angelegt zum ausprobieren. Ja, Gäste, WLAN. Das Leute, ich sage es jetzt
nochmal, bevor jetzt wieder irgendwie 20.000 Leute schreien. User Leak, WLAN Leak, Mac Leak,
alles Leak. Das ist ein Test WLAN, was ich angelegt habe für den Stream beziehungsweise zum
ausprobieren mit Usern, die ich niemals in echt verwenden werde und mit einem deaktivierten
WLAN. Es ist kein WLAN auf dem Access Point aktuell auf. Es kann also noch so viel geleakt
werden. Es passiert einfach gar nichts. Aber das wird natürlich trotzdem mich die Leute
davon abhalten, was von Leak alle 5 Minuten zu schreiben. So, ihr seid quasi schon drin.
Ja, ich weiß, ich kenne euch ja, kenne euch ja. Gut, so, dann legen wir mal ein Projekt an.
Leute, sagt mir mal, wollen wir in Just Chatting bleiben oder wollen wir in Softwareentwicklung
gehen? Das ist bei mir immer so ein Zwischending. Ich mache Softwareentwicklung mit irgendwie
gefühlt 50% Just Chatting. Und wir brauchen guten Projekten haben. New Solution, weiß
hier, der Rokoschamp. In Beach und Pool. Moment, streamen da überhaupt noch Leute? Twitch,
Beach, Pool. Whirlpool und Strände. Okay, okay. Man weiß Bescheid, was da läuft, ja.
Oh, ein KS, Alter. What the fuck? Aber das außer Amorant oder wie man die genau ausspricht,
hat kaum noch Zuschauer. Was wäre ich aus Indie Fox geworden? Gibt es die noch? Lange
nichts mehr gehört hier auf Twitch. Wurde die nicht sogar gebannt? Ach, keine Ahnung.
Ehrlich gesagt ist mir das auch ziemlich wurscht. Ist mir nur gerade so eingefallen. Wisst ihr,
was Schlimmes? Wisst ihr was Schlimmes? Dass man sich sogar die Namen merkt. Ich hab das
nie geguckt und ich weiß, jetzt sagt der Chat wieder, haha, null Max, ja, ja, nie geguckt,
deswegen weiß ich die Namen nicht. Ich hab das nie geguckt, aber man hat genug mitbekommen,
dass man sich die Namen merkt. Das ist so eigentlich Marketing-technisch alles richtig gemacht.
Die ist gebannt. Na gut. Dann hat sich das ja wohl erledigt. Okay, auf geht's. Also,
probieren wir das mal aus, wie man sich einloggen kann. Hello World ist schon mal nicht das,
was wir brauchen. War, hattet, ach nee, ich wollte mal was anderes ausprobieren und zwar
der normale Poki-W-Virgin-Check-Chat. Auf geht's. Poki-W-Virgin-Check, I'm safe. Ich hab die Copypasta
gerade nicht zur Hand. Aber alle einmal Poki-W-Check im Chat hier. Hier keine versteckten Poki-Subs
am Start, alles klar. Nicht das ist schlimm, wer soll jeder Subscriber werden will. Gibt
so viele Channels, die übelst gefeiert werden, die ich nicht gucke und umgedreht. I'm safe,
jawoll. Nice. Nochmal Glück, ja, ganz knapp. So, okay, also, ich wollte nämlich was anderes
finden und zwar, weil mir der Standard-HTTP-Kline in.NET so auf den Keks geht. Ich hab nämlich
letztens was anderes gefunden, was ich mal ausprobieren wollte..NET-HTTP-Kline und zwar
Flurl hieß das, glaube ich. Ja. Flurnd, H-T-T, Moment, wo kommt denn das? Wo kommt das R und
ich hab keinen flassen Schimmer. Ach, URL. Okay, da hätte ich auch selbst drauf kommen
können. Ja, das wollte ich mal ausprobieren. Keine Ahnung, ob das jemand von euch schon
verwendet hat. Wenn ja, kann das ja mal in den Chat schreiben. Das sah mir deutlich angenehmer
aus als den eingebauten H-T-T-P-Kline, weil der geht mir regelmäßig auf den Keks, der
eingebaute H-T-T-P-Kline. Deswegen dachte ich, probieren wir das mal aus. Und das Coole
daran ist, man kann zum Beispiel solche Sachen jetzt machen. Guck, also ich zeige mal. Normalerweise
macht man sowas. H-T-T-P-Kline, gleich, new, H-T-T-P-Kline, H-T-T-P-Kline oder irgendwie
keine Ahnung, get. Mittlerweile haben wir sowas wie get string und sowas, das gab es
glaube ich am Anfang gar nicht. So, get string, google.de und dann kann ich das ausgeben.
So, das macht man normalerweise so, hallo. Und wenn ich das jetzt ausführe, haben wir
ein Terminal hier unten auf,.net run, dann kommt jetzt gleich Google als Antwort. Dem
Terminal. So, nee. Warum nicht? Ach so, weil H-T-T-P-S wahrscheinlich davor muss. Jetzt?
Was zum? W-W-W? Was mache ich denn falsch? Ach so, ich habe 3 Slashes, null. So, jetzt
kriegt man hier ganz viel Google-Gedöns zurück. So, das ist normal, so macht man Requests
mit dem eingebauten H-T-T-P-Kline. Und mit Flurl, habe ich gesehen, kann man sowas hier
machen. Guck mal, das finde ich mega nice. Man kann das alles weglassen. Man kann das
alles weglassen. Und sagt einfach get string async. Fertig. Ich meine, spart jetzt an der
Stelle nicht so viel, aber H-T-T-P-Handling ist in.net eh etwas painstampig. Da ist das
auf jeden Fall die schönere Variante. Und man kann auch wohl noch mehr machen. Man kann
nämlich auch einfach Header setzen und Basic Auth kann man. Wer schon mal Basic Auth gemacht
hat mit dem Standard.net Client, wird wissen, das ist mega, mega eklig, weil du musst dich
selbst darum kümmern, dass du die Sachen in Base64 encodest und sowas. Das ist richtig
hängen geblieben. Ich weiß nicht warum. Ja, guck, Standard, man muss sowas machen hier.
Encoding, get bytes, authorization, header, convert to Base64. So viel boilerplate für
einen Basic Auth Request. Das finde ich cool, dass man das hier alles eingebaut hat. So,
aber wir wollen ja keinen Request auf Google machen. Wir wollen einen Request machen auf
eh ja wohin eigentlich? Login. Login. Da wollen wir einen Request hin machen. So Leute, ich
werde jetzt mein Passwort leaken. Achtung. Das wird jetzt nach dem Stream resettet, aber
das ist der Moment, den Markter chat immer, wenn irgendwas geleakt wird. Also erstmal
die IP von dem Ding 192.168.2.2.143. Das ist die IP da. Sieht man ja hier oben. War
User gleich Admin. Wer hätte das gedacht? Und jetzt war Passwort Achtung Massive Passwort
Leak. Das ist mein Passwort für den Access Point. Jetzt ist es raus. Wer sich fragt, wie
ich das Passwort generiert habe, ganz einfach. Dazu gibt es das schöne Programm PV GAN.
Wenn man nicht gerade über den Passwort Manager macht, PV GAN und er generiert euch halbwegs
gut merkbare Passwörter mit unterschiedlicher Länge. Ich glaube Minus D ist es oder so.
Ah ne einfach hinten dran. So 32. Dann bekommt man solche Orogeheinsheini. Das kriegt man
dann da. First try erraten. Ja war klar der Chat ist so sick, der kann in Zukunft quasi
meinen Randomizer auslesen und weiß schon, was ich für Passwörter erzeugen werde. Das
war mir aber schon klar. Predicted alles. Also PV GAN ist da ganz praktisch und ich glaube,
dass PV GAN auch human readable Passwörter machen kann. Obwohl macht standardmäßig
schon human readable Passwörter. Ist ganz praktisch. Ist ganz praktisch ja. Was mit
SY? Ja das ist, dass er alle Zeichen nimmt. Das will man dann wahrscheinlich nicht unbedingt
haben. Das ist das irgendwie schöner. Wie gesagt jeder Passwort Manager kann sowas
generieren aber auf die schnelle ist PV GAN eigentlich ganz nützlich. Also wir machen
jetzt mal einen Request und zwar wir müssen jetzt gucken wohin der Request geht. Dahin
geht der Request. Also. So dahin geht der Request. Mach mal den Krempel mal kurz hier
dicht. Also Base URL ist die IP. User ist User und PV Passwort. Okay von der Theorie
her wenn das jetzt alles funktioniert. Warum kann ich das nicht erwarten? Ach so weil ich
noch sagen muss. Get. String. Async. So von der Idee her sollte ich jetzt einfach.
In den Login Bildschirm oder so als Antwort bekommen. Ist das auch ein Post. Ein Get.
Ist das ein Get. Ja das ist ein Get Request. Mal gucken. Leute ob ich alle. Ob ich alle
gebräuchlichen HTTP Dinge aus dem Kopf hinkriege. Was haben wir denn. Get Post ist klar. Patch.
Delete. Ich hab keine Ahnung. Gibt noch mehr. Het genau. Options. Und da gibt es auch noch
Zeug was web darf und so verwendet. Putt. Putt hab ich vergessen. Natürlich. Genau. Putt
ist eigentlich das normale. Patch verwendet kaum noch irgendjemand. Hier. Header. Das
ist ein quasi ein Zero Header. Der hat weder keine Zahl davor. Post. Putt. Delete. Connect.
Ja das ist für SSL Gedöns. Options. Patch. Trace. Da hab ich noch nie verwendet Trace.
So siehts aus. Wieder was gelernt. Genau. Gut. Also. Dotnet. Run. Hallo. Was ist denn mit
meiner. Mit meiner Shell unten da. Ok Leute. Wisst ihr was. Wir brauchen eine ordentliche
Shell. Machen wir mal so. Wobei wir brauchen doch nicht mal. Ryder. Pro. Prochanks. Rogoschamp.
Dotnet. Run. Ordentliche Shell. Oh. Was jetzt. Ach. Zertifikat. Zertifikat nicht gültig.
Ach so. Ja das war klar. Dass der sich dran stört. Mal gucken ob sie das auch einfacher
gemacht haben. Ignore. Gibt's da sowas. Ignore. SSL. Nee. Oh nee. Haben die da nichts einfaches
eingebaut. Weil Zertifikats Errors ignorieren ist auch was was mir richtig extrem auf den
Sack geht. Bei dem Standard Dotnet HTTP Client. Da muss man immer einen extra Händler einfügen
und haste nicht gesehen. Blurrl und untrusted Zertifikats. Fiveheader Time. Was. Untrusted
Zert Client Factory. Na wenn das ja nicht mal OOP. Of Doom ist. Untrusted Zert Client
Factory. Erb von Default HTTP Client Factory. Und macht im Prinzip das was man beim normalen
HTTP Client auch machen muss. Man überschreibt das. Okay. Ich hab ne Idee. Wir machen mal
was Fiveheader mäßiges. Ich sehe nämlich schon kommen dass wir jede Menge HTTP Helper
Methoden hier brauchen. Deswegen machen wir einfach mal eine extra klasse HTTP Helper.
Nur nicht ganz sicher was da alles reinkommt. Aber da kommt auf jeden Fall JSON to XML
und so gedönnt rein. Ne ne XML to JSON und sowas. Was jetzt? Ah Chrono Trigger Musik.
So also machen wir eben so viel Void. Global. Global. Ignore. Zert. Error. Ja. Jetzt müssen
wir bloß auch schauen was man da reinschreibt. Abblick. Fertig. So also was braucht man
da jetzt? Untrusted Client Factory. Bonkers Alter. So und jetzt? Alter was ist das für
High IQ Shit wieder? Warum warum machen die es einem immer so schwer so simple Sachen
wie Zertifikatswarnung zu deaktivieren? Oh Url kann man das nicht irgendwie global überschreiben?
Also irgendwie. Also irgendwie keine Ahnung. Was macht der hier? Flurl. Wieso nicht einfach
Curl ausführen und Insecure setzen? Na weil das ein bisschen nervig ist wenn du Kommando
Teilen Tools aufrufst und dann zu checken. Keine Ahnung. Was ist der Return Code? Das
musst du dir irgendwie aus der Response rausparsen. Du kriegst kein fertiges JSON als Response.
Das kannst du machen aber schöner ist es wenn man irgendeine integrierte HTTP Library verwendet.
Wenn gar nichts hilft kann man Curl aufrufen. Ja. So gibt es hier so Global Settings? Das
ist doch schon mal gut. Du hast wie Händler oder so? Nee. Factory? Ah guck mal da. Flurl
Client Factory. New Untrusted Client Factory. Leute warum fresst ihr den eigenen Kram nicht
wenn es doch extra davon abgeleitet ist? Ah Moment das ist eine HTTP Client Factory. Alles
klar. So. Moment jetzt mal gucken ob das jetzt funktioniert. Zack. Gotnet Run. Immer noch
das. Moment ruft er diesen Krempel überhaupt auf? Dass man sich immer mit so einem Bullshit
aufhalten muss man. Ich will was machen. Keck. Führt er das denn überhaupt aus? Er führte
es aus. Ok. Ihr kennt mich Breakpoint setzen ist nicht meins. So. Das interessiert den
nicht. Ist das vielleicht gar kein Problem mit dem Zertifikat? Weil da steht ja nichts
von Zertifikat. Da steht einfach nur SSL Handshake failed. Also quasi hier. Ok. Google.
Google. Gotnet. Ne 6. Moment da ist doch schon was. Was? Wie? Wollt ihr mich verarschen
kann man keine Zertifikatsmeldung mehr deaktivieren? Das macht es. Das kann nicht sein. Das wäre
ja komplett unbenutzbar. Die Hälfte der Seiten die man automatisch auslesen will intern
oder sonst. Die haben kein gültiges Zertifikat. Ok. Was machen die da für Dinger? Was? Soll
eine eigene OpenSSL konft? Im Leben mache ich keine eigene OpenSSL konft dafür. Was
kommt denn als nächstes? OpenSSL selbst kompilieren oder was? Oder wie? Ich glaube
dass SSL V3 steht ist einfach nur in der Fehlermeldung. Das heißt einfach so. Ich bin mir gar nicht
sicher ob das wirklich. Wobei TLS. SSL 3 ist doch im Endeffekt. TLS 1 2. Kann man
das hier vielleicht einstellen? Kann man hier vielleicht einstellen? TLS oder SSL? SSL
Protokolls kann man da einstellen. Guck mal da. Benutzst du Rider? Ja. Ok was muss man
da angeben? SSL Protokolls? Eine Liste? Irgendwie sowas? SSL Protokolls? TLS? Ach das ist
ein Enum. Den muss man wahrscheinlich mit und zusammen machen oder mit oder zusammen
machen. So war es da. Ok was passiert jetzt? In Python wäre das nicht passiert. Du wirst
immer was finden was in anderen Programmiersprachen nicht passiert wäre und umgedreht. No ciphers
available. Aha. Max du machst das echt gut wollte ich dir sagen. Dankeschön. Schön
dass es dir gefällt. Aktuell läuft es zwar nicht so aber kann ich ja nichts für. No ciphers
available. Was zum Teufel will der Dude mir sagen? Was ist das? Ok wir müssen glaube
ich die Runde google noch. Aha ok. Sobald man das aktiviert kommt das mit dem Handshake
fail. Ich aktiviere jetzt einfach alles. Ich aktiviere jetzt alles inklusive none. Mal
gucken was passiert. Beim SSL hatte ich auch Probleme ja. Weil RSA deaktiviert war aber
das muss jetzt ja was anderes sein. Oder kann in die ähnliche Richtung gehen. Ok also
das ist es schon mal nicht. Aber wir haben eine neue Fehlermeldung nach der wir suchen
können. Dotnet. No ciphers available. Guck mal wir finden. My SQL connector. Nee. Onkar.
No ciphers available. Ich hatte sowas schon mal. Ich bin mir aber nicht mehr sicher wie
man den krempelt. Nein das ist OpenSSL. GitHub. Oh Gott. Ich mach also was ich nicht machen
werde ist das hier. Ich werde definitiv nicht. Hier. Das werde ich nicht machen. Das sage
ich euch. Das sehe ich nicht ein. Ich werde mir definitiv keine. Eigene. Jetzt blicke
ich dann mal durch. Wir hatten doch eben irgendwo was wo sie geschrieben hat man soll sich eine
eigene ciphers policy. Man soll sich eine eigene OpenSSL konf machen. Das sehe ich
nicht ein. Hier. OpenSSL konf. Das mache ich nicht. Das kann es doch jemand der vielleicht
das tool verwendet doch nicht zumuten. Ich bin eh der einzige der es verwendet. Das sehe
ich nicht ein. Ich mache mir garantiert keine eigene OpenSSL konf weil dort nicht irgendwelche
komischen default settings hat. Ok was haben die gesagt alternativ kann man cipher suites
policy verwenden. Ok. Cipher suites policy http client. Wie setzt man das da. Aha. Sockets
http händler. Aha was haben wir da denn. Der Ghost hat gepostet. Also da sind User die
es nicht mal auf github gibt. SSL Client Authentification Options. Alter. Dass man für so einfachen
Kram in den Untiefen wieder rum suchen muss ist doch absolut für ein Bobbles man. Also
was machen die Dudes hier. SSL Client. Ok. Das machen wir hier rein. SSL Authentification
Options. New cipher suites. Jetzt müssen wir bloß noch die cipher suites raus bekommen
die wir brauchen. Sockets http händler. New sockets http händler http client. Ne das brauchen
wir an der Stelle gar nicht. Kann man diesen Kram hier returnen anstatt den da unten. Ok
das funktioniert. Das ist schon mal gut. Jetzt müssen wir nur raus bekommen was der
für ciphers haben will das es funktioniert. Äh gleiche Fehlermeldung. Ok wie viele ciphers
gibt es denn. Vielleicht können wir einfach try and error machen. Oh. Ähm ich hab ne
andere Idee wir aktivieren einfach alle. Wir aktivieren einfach alle. Oder im Browser
nachschauen. Ok. Zwei Sachen wir aktivieren einfach mal alle. Wir aktivieren einfach mal
alle. Richtig 5 hat wusste ich auch lange Zeit nicht das es das gibt. Guck mal. Das
ist ja ein Enum hier. Dieses tsl cipher suites. Wenn ihr eine Liste erzeugen wollt mit allen
möglichen values für einen Enum geht das folgendermaßen. Enum. Ähm. Get values.
Und jetzt bekommt ihr eine Liste mit allen Enums da drinnen. Also das was das Ding frisst
schauen wir mal ob es jetzt funktioniert. Oh man. Ah. Guckt mal. Das ist jetzt ein anderes
Fehlermeldung. Das ist jetzt die Fehlermeldung was das Zertifikat nicht gültig ist. Das
heißt die Cipher Geschichte haben wir um shift. Jetzt müssen wir dem Ding nur noch beibringen.
Wie man das Zertifikat accepten kann. Also vielleicht irgendwas mit SSL. Ne. Cert. Richtiger
5 hat stream ja. Local Zertifikat. Remote Zertifikat validation check. Ich hab. Also
ich benutze selten Methoden mit. Wie viele Buchstaben hat das. 36 Buchstaben alles klar.
Importier das doch einfach in deinen lokalen Zert Store. Nö. Da könnte ich mir genauso
gut auch. Custom Open SSL Konfig anlegen. Das will ich nicht. Ok. Wie geht der Krempel.
Wie funktioniert das. Aha aha. New Validations. Die Termen da einfach true und gut ist. True
Lul Lul W. Ob's. Nicht so machen. Noch mehr. Ha. Ha. Ha. Ha. Ha. Ha. Ha. Ha. Ha. Ha.
Ok. Sekundeauto. So mijn das jetzt. Jetzt wissen wir Bescheid. Was. Ein Krampf mercy
Euch anfallen kann ok nann Dann wrap ich ich das mal hier rein. Jetzt sagen wir einfach.
dass es auch ein bisschen sprechend ist am anfang
global ignore third error
dann weiß man gleich was passiert
fix me im response ja da weißt du bescheid
fix me remove this one after using user legacy code refactor
ich sag euch mal eins das wird nie passieren
die werden nie den user legacy code refactor
jquery wir haben hier mit einem absolute bleeding edge hook
modernstem modernstem GUI zu tun überhaupt ja sehe ich schon
ist aber egal wir sind ja auf die api scharf und nicht etwa so sehr danach
was denn jetzt da in denen ihr frontend passiert ist mir ehrlich gesagt ziemlich egal
also gut response das sehe ich das richtig wir konnten uns jetzt anmelden
hat das mit dem anmelden jetzt funktioniert wahrscheinlich
ok jetzt brauchen wir unser tauchen unser tauchen bekommen wir
ich muss mal kurz husten ich muss ausmachen
ok so und jetzt brauchen wir unser tauchen das da und das bekommen wir mit
dieser url underscore wahrscheinlich ist sachen mit underscore private api aber
es gibt eh keine publik api also können wir auch eine private private api verwenden
müsste ich jetzt nicht irgendein session cookie oder session header
oder irgendwas zurückbekommen eigentlich
den muss ich mir bestimmt merken den header six hat header headers
for each header header
schauen wir mal
weird champ
es gibt keinen session header oder sonst was
woher weiß der denn jetzt dass ich eingeloggt bin
cookie cookies cookies cookie name cookie value
dass ich weiß wo es aufhört
gibt keine cookie ja moment wie merkt er sich denn dann dass ich mich überhaupt
korrekt eingeloggt habe vielleicht habe ich mich auch nicht korrekt eingeloggt
der access point ist kann hell sehen der ist richtig high IQ machine learning
trainiert egal wir machen einfach mal weiter in der hoffnung das funktioniert
jetzt also so also response das ignorieren wir mal ich weiß nicht was ich
damit machen soll und jetzt brauchen wir einen weiteren get request auf auf
jsp oder auf csrf token war
string cv alter warum kann er mein makro für die konsole nicht
so run mal gucken was wir zurück bekommen
ich sagte wir bekommen javascript in xml zurück
bzw in html aber html ist ja quasi xml so was zum geil was ist das für eine
bescheuerte response was ist das für eine beschissene response alter den script
hack return aber man normalerweise würde ich sagen was haben die china chinesen da
programmiert aber das waren gar nicht die china chinesen
kann man da irgendwie sagen content typ oder so
content content media irgendwie
dass ich dann sagen kann irgendwie content type
application json gucken ob das funktioniert
wobei nie das ist was ich sende oder wie gibt es einen header mit was was was
die erlaubte response ist wer das programmiert
except header except
einfach so
okay ist egal kommt kommt immer das gleiche zurück
also da müssen wir das jetzt irgendwie hasen das ist an der stelle tatsächlich
sogar noch relativ einfach guck mal wir bekommen hier zurück in den javascript
hack das können wir alles ignorieren wir sagen einfach response split split am
am gleichheitszeichen
und dann
das zweite weil also wenn wir am gleichheitszeichen splitten dann ist das
hier das nullte element und das ist das erste element und dann einfach das
1 2 3 4 5 6 in dem moment das muss man mit zählen
1 2 2 ne 1 weil bei null
ab dem zweiten zeich also ab dem dritten zeichen bis zum
1 2 3 4 5 6 7 8 9 10
hatte der nicht sowas hier drin stehen
12 alles klar 12
kannst auch gleich am quotes richtig wir können bei den quotes
split da hast du vollkommen recht noch besser ja hast recht ist noch besser
aber wir haben es auch so schon aber du hast recht wir können an den quotes
das ist eigentlich noch viel viel sinnvoller wir splitten an den quotes
kann man eigentlich sowas hier machen
chat ist wieder richtig feifert so wenn wir splitten an den quotes dann ist es
nämlich direkt 0 bis 8 oder so also anfangen bis
nicht bis 12 dann bis 10 10 was
so habe ich doch gerade weggemacht ok alles klar gut
man könnte jetzt sogar noch so man könnte jetzt noch weitergehen an der
stelle eins kann man noch sagen last
weil das ist dann auch nicht schöner ne wobei last geht an der stelle nicht eins
wir brauchen das in der mitte wobei leute das geht so ich lasse es jetzt so
also das hier ist unser du kannst auch zwei von den auch noch besser noch noch
sichs hättiger also das hier ist jetzt mein cross
request und die wir um sind die wörter da drinne cross seit s cf er heißt es nicht
ist doch richtig richtig so klappt token und jetzt so gut so kann er mal
ordentlich meine sachen expanden hier anstatt mir das einzufügen der rüpel
danke für den zapp
oder ist es cf
haben die sich da auch noch verschrieben drinne oder was
die haben sich die haben sich die haben sich verschrieben oder also das lässt
mir sehr viel mut macht mir das für diese tolle für diesen access point
also korrekt korrekt heißt das ding
c s f
ist richtig geschrieben ja okay jetzt haben wir unser token was passiert denn
jetzt wenn ich das tauchen anfordere ohne mich vorher eingeloggt zu haben ich
würde sagen den error wahrscheinlich bei ich immer noch nicht ok wenn ich mich
vorher nicht eingeloggt habe dann gibt es keine response aber was ich immer noch
nicht gecheckt habe ist wie dass ich das merkt
der muss hier irgendwelche cookies setzen aber er hat keine cookies
was zwei von hinten noch besser katschi bass ne stimmt nicht eins von hinten
ne moment ich brauch das gar nicht oder weil da nachher noch ein quote kommt
dass so müsste es doch eigentlich reichen
das ist unnötig obfuscated
so jetzt haben wir unser token hier
ja der chat hat es natürlich schon wieder fünf meter gegen fünf kilometer
gegen den wind gesehen alles klar
so alles klar gut schön wunderbar
jetzt habe ich mein token und wie geht es weiter
get system information
aha dann muss man das hier setzen als als herdo
kann ich nicht
ne kann ich nicht dass man das kann das ding wie die folgt die folgt hätte hätte
global settings hätte
die folgt hätte müsste ich jetzt setzen können das wäre natürlich sehr praktisch
wie heißt der krempel noch die folgt hätte
also jetzt müssen wir das ja bei jedem request dabei schreiben na gut gibt
schlimmeres
so system settings wobei will ich system settings überhaupt abrufen nicht dass
ich jetzt vielleicht wirklich irgendwelche sachen liege die ich nicht
liegen will
weil was soll ich nicht ich gesetzt in excess poinina im stream was soll
passieren
was soll passieren
jetzt kommt xml leute xml in
weißt ihr was scheiß drauf wir machen kein wir machen kein get stats wir gucken
admin
wir gucken was der was der schickt weil was ich eigentlich machen will ist
aufgeploppte da geht mir auch auf dem fix was ich eigentlich machen will ist
mit die user auflisten lassen nicht die nicht diese user hier sondern die dpsk
user
wenn ich hier drauf klicke sollte das ja eigentlich laden
konf
request get konf
response
möchte da unten drauf
gott blieb
das ist das pass das ist das die pass phrase von meinem wlan
das wollte ich nicht haben
ich will die pass phrase von den usern haben
konf
also ich will ich will eine liste mit usern haben
alter warum geht das immer weg wenn ich da drauf klicke
pains champ
hier
request
so kann man sich das doch nicht angucken
guck mal das ist verbackt
ne das ist der access point
ja
wie soll man das jetzt bedienen man
dpsk list das sieht gut aus
dpsk list
ja hier sind die user alles klar die user die brauche ich
pass phrase
ip address
ip address
man kann sogar die ip auslesen das ist ja nice
das sehe ich dann aber nur wenn einer verbunden ist da drin da sehe ich auch gleich
was der für eine ip hat
das ist nur das ist gut
wlan id wlan id
aber die kann man dann auch direkt da drüber setzen ja das ist nice da kann
sogar mein tool dann mehr als das web interface
start point pass phrase
ja du ich glaube aber sind gar keine java server pages weil das ist irgendwie
ich glaube nicht dass sie da java drauf laufen haben ich glaube das ist jebait
also request was müssen wir für den request machen dass wir das bekommen
get stat updater
und dann habe ich als response
was
alter
wer hat sich das ausgedacht
schon wie die wlan die wlan performance ist richtig gut
ich habe gestern das ganze mal angeschaltet
ich habe
mein altes wlan auf vergessen geklickt beim handy
und ich bin also aktuell ist es so
ich komme mit dem wlan bis in garten
mit vier access points
access point im keller, access point im erster stock, access point im erdgeschoss
access point neben mir auf die seite zur terrasse
ich habe gestern eingeschaltet ich hatte
überragenden speed ich meine das ist kein wifi 6 nur wifi 5 access point
äh 3 400 mbit
und das bis an eingang also bis die terrasse runter
mit einem access point nicht mit vier
also die wlan performance ist wirklich gut
so also das müssen wir da jetzt schicken oder wie
also leute wir müssen jetzt xml zeug schicken jetzt wirds
jetzt wirds eklig
so das können wir uns glaube ich wahrscheinlich sparen
get stat dpsk list power
ob irgendjemand diesen kram schon mal irgendwo gemapped hat im internet
aha
aha
so so
da haben auch schon ein paar andere leute dran geforscht
wie heißt der access point das ist eine rugus
r710
lass dich nicht abschrecken von dem neupreis
der neupreis würde so halt keiner mehr kaufen weil das ist die letzte generation nicht die aktuelle
die aktuelle generation ist der r750
der r750 gibt es für 1242 also ein schnapper
du musst auf ebay gucken
schauen wir mal ebay
also ich habe irgendwie 260 270 euro für bezahlt
aus vereinigte staaten
nee
ich mein kann man machen aber guckt euch mal den versand an
das will man wahrscheinlich nicht haben
ok neu eingestellt
405 alter was ist denn mit euch los was ist denn mit euch jetzt verkehrt
guck mal da
aus großbritannien dran aber 376 also wie gesagt ich habe 270 euro bezahlt
was kann er mehr als 61 euro access point einiges
kann jetzt schlecht alles aufzählen
haben wir uns gestern im stream alles angeguckt
der kann zum beispiel eines der features die ich ja persönlich mega nice finde
und musst du kurz was trinken
eines der features die ich ja persönlich mega nice finde ist
dass der passwörter kann für jedes pro gerät
also kannst quasi ein wlan aufmachen
und jedem gerät ein eigenes wlan passwort geben
was du dann löscht wenn du das gerät weg schmeißt
unify habe ich aktuell
mal kurz darauf einzugehen
also unify habe ich aktuell aber da bin ich an einigen stellen nicht so wirklich damit zufrieden
vor allem dass sie sich dagegen sträuben schon seit jahren
eben das zuletzt genannte feature einzubauen dass man unterschiedlichen geräten
unterschiedliche passwörter geben kann
und ich rede nicht von wpi enterprise
sondern von iot geräten die kein wpi enterprise können
dann das kann fast jeder mittlerweile
mikrotik kanns
rakus kanns
cisco kanns
aruba kanns aber die haben andere probleme
und warum nicht von cisco
weil cisco den krempel nur in zusammenhang mit irgendeiner komischen network appliance von ihnen kann
und aruba ähnlich da brauchst du irgendeine cloud
clearpass cloud lizenz oder sowas
dass das funktioniert
und sozige gesachen
und preisleistungstechnisch und
handlingstechnisch war das ding das beste was ich gefunden habe
zumal man die ohne controller betreiben kann mit der unleashed firmware
für alle anderen mann controller brauchen
ich bin nicht so scharf drauf für einen access point noch einen controller daneben zu stellen
ok also jetzt probieren wir das mal aus
ja er kann vor allem mehr als 60 euro kosten das das stimmt
wobei das unify auch kann ganz ehrlich
ein neuer unify access point oder gebraucht hier ein für 260 270 würde ich sofort den nehmen
ok aber also ihr könnt euch entweder ein r710 oder ein r610 kaufen
ich würde keine wirklich aber nicht für den preis nicht für die preise leute
wie gesagt ich habe 260 270 euro irgendwie dem dreh bezahlt
da muss man muss man ein bisschen abwarten und gucken
man kann auch mal gucken ob es r720 gibt aber es macht eh keinen großen unterschied
ne das wird schon zu teuer das muss man einfach mal abwarten
einfach abwarten bis es gute angebote gibt und dann zuschlagen
also wie gesagt unter 300 euro ist ein guter preis dafür
und die dinger sind obwohl sie quasi jetzt nicht mehr verkauft werden weil die schon ein nachfolgerprodukt haben
trotzdem sehr sehr nice
so wie schicken wir denn jetzt hier einen request
get stats dpsk list
was muss ich dann aufrufen leute das habe ich hier schon zugemacht
wo waren wir denn hier cmd stat jsp muss ich aufrufen
also ok jetzt wirds jetzt wirds spannend
cmd cmd stat punkt stats stat jsp
so und ich will nicht get string sondern post
post will ich wahrscheinlich einfach nur machen und jetzt will ich ihm sagen http content
also new string content und zwar will ich ihm habe ich das hier nicht eingestellt immer
im rider das alt und moment das muss ich mal kurz einstellen
shortcuts keyboard shortcuts
ich möchte move line up line
siehts irgendjemand move line
wenns irgendjemand sieht sagt mir bescheid
move line up
move line up genau keyboard shortcut
alt file up ist dafür schon ja das ist mir egal
yes und jetzt edge down
ja viel besser so also new string content wir wollen das xml posten
kein encoding mit schicken soll er standardmäßig machen was auch immer er will
und jetzt wollen wir ihm sagen das ist weiß jemand zufällig aus dem kopf den
den mime type xml ist es application xml
xml warum sie schab und nicht javascript warum nicht pisen warum nicht rust warum nicht go
kannst du genauso gut fragen hat keinen tieferen grund außer dass ich gerne
sich habe moment text xml und was war das andere application
xml aha moment was nehmen die denn hier xml hier
nehmen sie text xml was sagt denn mein browser was macht denn mein browser
beim request header request header content type
what er sagt es ist form es ist eine form aber es ist überhaupt keine form
komm und hier hat er doch einen session cookie gesetzt warum hat er denn sonst
kein cookie bei mir gehabt vorhin
nur mal dass ich das richtig verstehe die halten sich selbst nicht dran es ist
angeblich hier eine unencoded form und es ist offensichtlich keine unencoded
form sondern xml string na geil alter da kann ich auch application xml
setzen wird wahrscheinlich egal sein ok ich sechs ich setze text xml weil das
beispiel auch text xml macht und wo ist jetzt das problem
ok gut das heißt es hat nicht response und rasp headers get string einfach
noch mal gucken ob das funktioniert run
fack ich muss das tauchen ich muss ich muss das des dieses dieses tauchen ja
dann auch irgendwie setzen sonst bin ich ja bin ich ja gar nicht
authentifiziert oder identifiziert schon aber nicht so wie er das haben will
wie heißt der header hier c ok also muss ich jetzt hier noch zusätzlich sagen
ich möchte noch hätte etten ette header x cs f tauchen cs f tauchen und jetzt
bäm please praege praege das immer nice massive xml response alter
leute wir haben jetzt zwei sachen die wir machen können entweder
wenn xml parser und passen aus dem xml den ganzen krempel raus oder wir machen
das sowie der typ hier und konvertieren das xml zu jason und bearbeiten das
dann somit reggex reggex ist auch noch eine möglichkeit vielleicht ist das mit
reggex gar keine so schlechte idee leute kennt irgendjemand einen schönen einen
schönen xml format für commander zeile oder xml format bestes geht auch
bestimmt relativ von pretty pretty print xml lind xml lind das du mal hier
habe ich das überhaupt installiert
minus minus format habe ich witzigerweise installiert ich weiß ehrlich gesagt nicht
warum aber ok
es ist noch nicht mal gültiges xml
es ist noch nicht mal gültiges xml meine güte was haben die da programmiert
man was ist das ok ok ich habe ich habe nichts gesagt ist ok ich habe nichts
gesagt es ist alles in ordnung nicht nichts schlimmes ich bin ich printe das
ja selbst ok ok leute wir könnten wir könnten reggexen wir könnten reggexen
massive da braucht aber den massive 5 hat reggex hier dafür ok reggex wir können es
auch lassen ja was ist ich bin mir jetzt gar nicht sicher
also wir haben wir haben drei varianten so wie ich das sehe xml parser benutzen in
dotnet eingebaut xml in jason konvertieren oder reggex rauskrabben
wir kommen wir machen mal test string so rum also also komm also reggex skills
das ist doch gar nicht so schwierig das sieht doch gar nicht so schwierig aus
also punktsternchen sollte alles matchen ok wir matchen mac mac gefolgt von
quotes punktsternchen non creedy quote und eigentlich will ich das hier matchen
das geht doch das geht doch das ist doch in ordnung das kann man sich doch so
rausholen ok als nächstes wählen es sedings user user interessiert mich als
nächstes user moment muss jetzt so machen reggex ok group 1 ok das das geht das
klappt das klappt warum funktioniert das so mit dem leerzeichen dazwischen dass
das ist kein guld das match überhaupt nicht weil hier nix dazwischen steht
das müsstest du eigentlich schon so machen kann das sein dass das der reggex
tester einfach für mich macht um um 5 hat zu sein
egal so also wir brauchen den user wir brauchen last rekey next rekey expire
start point pass phrase brauchen wir noch pass phrase ip vielleicht ja ist doch
gut so und das jetzt reggexen leute die fall fertigste methode wäre dass du nach
dass du nach space splittest dann jeden part nach dann hast du die wer was nach
space splitten stimmt das würde tatsächlich funktionieren aber nur in
dem fall aber nur in dem fall würde es funktionieren
ich könnte ich könnte splitten ich könnte splitten am sp am space dann
bekomme ich diesen ganzen müll hier einzeln und dann muss ich gucken
contained das split ein gleichheitszeichen und dann splitten am
gleichheit vor nie das ist aber das ist aber eklig
ne ne ne ne aber wir machen jetzt wir machen jetzt reggex reggex stellt okay
also
was wie nennen wenn das denn jetzt hier das muss man nachher noch irgendwie
reppen in der eigenen klasse wie nennen wir das ding jetzt hier xml response
per line kann ich nicht machen weil das ist nur die line weil ich xml format
hier in wirklichkeit in wirklichkeit sieht der output so aus keine lines oder
ein bisschen x-part ja ja das ging auch aber ich habe ehrlich gesagt seit 15
jahren kein xml mehr gepasst weiß gar nicht wie man das dort nicht gescheit
machen dort nicht gescheit macht dokument xml document irgendwie was load
und dann sonst wie
zeigt mal vielleicht ist es noch vielleicht ist es einfach xml document
pass c-sharp wie sehen das aus
x-object x-node
im x-document was ist das warum gibt es da schon wieder
verschiedene sachen
ok x x-document monka es dann ok probieren was probieren was erst mal so
also x-dokument pass
x-dokument was kann man da jetzt so machen declaration node parent save
right so da kann man jetzt link link verwenden also xml pass ich weiß was
muss ich jetzt mal ob es was muss ich was muss ich jetzt machen
xml noch jemanden dann elemenz oder sowas wahrscheinlich ja oder root
elemenz ok leute ich muss mal x pass select elemenz wie funktioniert kann ich
da sowas wie wie im browser selektor schreiben x pass select c-sharp wie
funktioniert das habe ich noch nie gemacht noch legit noch nie also
what geht das auch in einfach es geht das auch in normal
dem lieber punkt elemenz ok for each mal gucken was da rauskommt ich habe keinen plan
elemenz ups
ok kommen aus irgendwelchen gründen habe ich das jetzt gleich pretty printed
elemenz das war einfach nur ein element oder wie meine güte wie wie macht man
das jetzt gescheit gibt es warum gibt es nicht sowas und dann response und dann
ok also sehe ich das jetzt richtig mache jetzt mal root root elemenz ist ja das
oberste in dem fall ich feife da xml bearbeitung so root so root elemenz
sollte jetzt ja alles sein wenn das print gut gut so elemenz
die elemenz fast fast fast node ok
fast element mein gott wie macht man sowas elemenz element get the first
elemenz specified x name x name ist der element name also quasi sowas da ich
habe keine ahnung ob ich das richtig
was ruht die sendens dps k ich glaube euch jetzt einfach mal chat tatsächlich
das scheint was zu funktionieren da geht was habt ihr schon was von aus
kommentierten kommentaren gehört gibt gibt es in dem tool mit dem ich gerade
entwickel was habt ihr schon etwas von aus kommentierten kommentaren du mein
sowas hier und dann und dann wieder an kommenten oder oder oder was ok jetzt
feife check für den chat leute wenn das funktioniert gibt es einen neuen feife
award für den chat ha es funktioniert excellent massive IQ die spaz granate
wusste es ok so jetzt haben wir die elemenz davon und jetzt müssen wir da
was raus bekommen kann ich jetzt kann ich das jetzt mit attribute attribute
drauf zugreifen also quasi element attributes attribute und dann so was
sagen wie meck so und dann dann präntet er mir die meck adresse
poggers aber jetzt will ich nur nur den value haben guck mal da das funktioniert
tatsächlich relativ gut relativ gut man kann sich jetzt darüber streiten ob
wirklich gut funktioniert funktioniert relativ gut ok dann machen wir jetzt mal
eine extra klasse public class ruckus user so und der user hat ein string
was name also name haben die haben die dinge dann eine meck string meck dann haben wir
die leine all die brauche eigentlich gar nicht meck created wäre natürlich noch
cool klasse erstellen und rein serialisieren ja wenn du mir sagst wie
man das mit xml document macht würde ich mache ich das dürfte ich am
einfachsten sein also pass pass phrase brauchen wir noch
gibt es auch was wie element 2 oder serialize keine ahnung wie das
funktioniert
also das bedeutet doch jetzt im endeffekt ich kann jetzt hier sagen
user gleich ups das er so richtig macht user gibt schon ah xml serialize an you
ist x hat get type
was ist p
so sehen aus kommentierte kommentare im konto meines stonks automatisieren zu
warum gibt es einen status über aus kommentierte kommentare
meck so kann ich mal auto komplizieren so kaputt ist das was ich hier baue so
user alter der kann doch nicht mal meine ah jetzt kann das ok element wie ist der
krempel jetzt chat hochskolle wie ist der kram jetzt user einfach nur user user
und pass phrase ist das pass phrase pass phrase ok
so und wenn das jetzt funktioniert dann sollte ich für jeden user kann man
rekord draus machen übrigens dann kann es kann ich einfacher prinden ok funs
was jetzt ha easy xml gepasst
so einfach kann es gehen
sehr gut keine ahnung was geht ja wir haben die user vom webinterface abgefragt
mit merck mit pass phrase vielleicht sollten uns dann die wlan all die
noch mal holen weil die wlan all die könnte tatsächlich relativ praktisch
sein wobei jetzt müssen wir doch gucken wie man die wlan all die zugeordnet
bekommt zum eigentlichen wlan name
aktuell haben wir nur die wlan id
max doch sich da wie soll ich mich bei sowas denn docksen gesetzt in exis point
danach doch beziehungsweise mach mach das wlan und das
passwort raus vor der online geht exis pointe engter mit gestoppten wlans
überall dann so passphrase jetzt haben wir hier noch wlan und das ist was
wlan
wlan svd id wo jetzt müssen wir raus bekommen
wo denn da jetzt drin
äh
achso ja dann ist dann ist die zahl halten stringen was soll es
kannst ja noch den wenn du zu merck raussuchen
ne ne bringt wobei die idee ist gar nicht ich meine mehr features schaden ich
warum nicht wenn ich es nicht lustige sache nicht dass man das brauchen würde
so jetzt haben wir den ganzen krempel wlan all die wie kriege ich zur wlan
all die passend jetzt raus wie der name vom wlan ist das müsste doch ja auch
irgendwo drinne stehen
alter jess skip
gucken wir mal service dps k
generate ok hier requests response hier wlan wlan svc list guck mal
wlan s aha und was ist die id id in die wlan des versandes enable type
ja und woher weiß ich jetzt die id von dem ding
dann müsst ihr was eins drinne stehen
ob alle hört es noch mal auf
btf
id hier ist es id ok noch mehr xml shit also konf underscore requests
das ist jetzt es ist ja so bescheuert alle diese abwärts das denn ausgedacht
man ok so jetzt müssen sie mich noch die wlan abrufen da können wir den user
printen und dann machen wir das in der eigenen klasse weil aktuell blicke ich
schon gar nicht mehr durch was hier überhaupt wie wo passiert also das
müssen wir irgendwo jeder vormachen also
so also xml request das da xml also dcrypt x true caller das kann
wahrscheinlich alles weg ich denke mal komp wlan svc das werden wir wahrscheinlich
brauchen schauen wir mal ob da ist der ganze miss
drinne steht
das ist wirklich also diese api zu bedienen ist wirklich hochgradig spain
stemme ich kann schon verstehen dass sie kann bock
nope muss ich doch was andere schicken muss ich doch den kompletten schicken
nope
achso die falsche url null ich kann falsche url es muss ja auch nach konf
konf ich sag dir gleich was das für einer ist
prager aha id 1 sehr schön so xml format
hier passport leak leute alles klar guckt mal da wlan svc brauchen wir jetzt und
dann dort das attribut für id das ist ein so einer die sind ganz die sind
frucht die sind sehr günstig diese access points haben wir die sich neu
kauft aber iber regelt aber gucken ob ich das jetzt richtig gelernt habe wie man
diesen krempel wie man diesen kram passt also so
x document pass und jetzt sage ich x document die sendens so wie hier unten
im prinzip kann ich mir das copy pasten die sendens bloß dass ich jetzt nicht
dps k haben will sondern wlan svc wenn das jetzt funktioniert kriege ich meine
meine wlan geprintet
der kann der hat deutlich mehr features als das ganze unify zeug das sieht doch
prinzipiell ganz gut aus so und da will ich jetzt l da will ich jetzt
attribut attribut name und all die haben
all die und name schauen wir mal so haben wir die ganzen wlan nice so dann
brauchen wir noch da braucht man mal ein dictionary jetzt keine ahnung wlan
dictionary auf wobei warum solche dick na doch weil die nicht weil die ids ja
nicht bei null anfangen aus int und string und dann sagen wir wlan add so
das hier ist die id alles natürlich als string und das hier ist der name
so und da machen wir irgendwie hübsche kommandozeit anwendung draus
du würdest einen counter begrüßen ja das müsste man höchstens mit haben wir
nicht bei nightbot dann kann nightbot nicht kauen nightbot hat doch counter
übrigens string id name gut und jetzt können wir sagen an der stelle hier
unten wo wir die wo wir die ganzen wlan auflösen
wlan so wir wollen nämlich haben wlan und dort an der stelle das wlan mit
dieser id und wenn das jetzt funktioniert dann habe ich jetzt den
namen da drin anstatt die id ok also wir haben user wir haben mac wir haben
passphrase und wir haben das wlan damit kann man doch schon mal was anfangen
gut und daraus machen wir zum kommandozeilen programm ich bin ja geneigt
dazu das jetzt endlich immer auszulagern in irgendeine eigene api klasse weil so
kann das doch niemand händeln auf dauer gerade wenn ich mir dieses abfuck xml
zeug ansehen kriege ich ja anfälle ok wir machen eine eigene api klasse also
das ding als ruckus api so das ding
das ding kriegt kein konstruktor das ding kriegt eine factory metode oder wie
man das genau nennt public static wenn wir das einfach mal login was load was
achso log in ich habe montags immer frei allerdings was die ganzen leute hier
machen das weiß ich nicht ich bin natürlich froh dass ihr da seid also
login op monka es ja ich habe montags immer frei also login gut also wir machen
das jetzt mal wir schmeißen mal die sachen hieraus also login funktioniert
folgendermaßen
das hier ist mein login ein login code kodra
async task so ip die ip wird einfach hardcoded
wobei die ip die sollten wir eigentlich bei login IP soll man ich bei login
übergeben ok so weil jetzt kann ich nämlich sagen api login ip user
passworten das kann man sich dann auch per kommando zeile ordentlich einlesen
das sieht schon mal deutlich besser aus so jetzt bekomme ich das jetzt zurück
wenn ich mich einlogge
so private
jup user brauchen wir nicht mehr passwort
auch nicht mehr string die ip brauche eigentlich nur und dass token brauchen
wir ansonsten eigentlich nix
spektra die nehmen wir auch gleich die ist richtig pock mit der habe ich schon
ein paar sachen gemacht die ist richtig gut da können wir da auch tabellen und
spinner und so machen auf der spektra konsole ist richtig nice
sowohl das die ip als auch das highlight für farbe und was das ist richtig nice
das werden wir auch gleich verwenden ja
ok wenn das ding wenn das ding exceptions mir das ist übrigens der
grund warum ich das in eine mit static method zum klasse erstellen angelegt
habe und nicht in dem konstruktor weil man sagt ja so aus pauschal man sollte
in einem konstruktor keine exceptions vorkommen lassen
ja und hier kann es natürlich jede menge exceptions geben also von von ding ist
nicht erreichbar auf der ip bis return code stimmt nicht oder sonst was
jetzt haben wir das hier drin stehen da brauchen wir als nächstes
haben wir eine publik publik static async task
i read only list jetzt aber hier so was von objekt oriented objekte orientiert
mehr geht nicht nicht static was mache ich denn da
also vielleicht soll ich das ding auch mal irgendwie nennen list user heißt
das jetzt
so list user list user funktioniert folgendermaßen und zwar so
monkel ist
ap lists user awaits
so funktioniert list user plus ein bisschen schöner gemacht noch
es ist underscore ip
so das sieht auch jetzt schon ein bisschen schöner aus
und jetzt ist das hier die user da machen wir eine liste list new list mit den
usern und sagen ihm hier list add den user so so richtig schreibt und dann hier
unten return list das kann man natürlich alles noch schöner machen weil das ist
jetzt ein riesenlanger blob in in sowas hier drinnen aber das soll es jetzt
erstmal tun beispielsweise das xml parsen das das würde ich das würde ich
später das würde ich später noch auslagern ich meine ich mache hier immer
das gleiche ich könnte sowas sagen wie keine ahnung get xml element und dann
sowas wasser dankeschön für den zapp das sollte es aber erst mal so tun damit
kann ich leben das ist jetzt natürlich in der handhabung
deutlich deutlich schöner weil jetzt kann ich einfach so was hier machen user
gleich achso tja
ist halt blöd dass
wir sehen das login user log in password
so wenn da wenn ich jetzt alles richtig gemacht habe lässt es sich jetzt
deutlich schöner handeln und hallo for each please als makro for each user in
users user schauen wir mal müsste das gleiche rauskommen jetzt hey kommt das
gleiche raus ok nice und jetzt war man da richtig poggers
fai fertige konsolen ausgabe nämlich spektra console das ding ist wirklich
nice also hatte auch gerade im chat einer geschrieben damit kann man
wunderbares cli auf der auf der konsole machen ja command line interface und
colors und gedöns das ist wirklich cool das ist ein bisschen wie ich habe das
python gegenstück vergessen das gibt es quasi in nahezu jeder
programmiersprache gibt es irgendwie so paar coole konsole anwendung libraries
und für sie scharf ist es halt spektra konsole spektra
konsole gut und jetzt können wir nämlich so was hier sagen anstatt das hier
einfach nur so eklig zu printen können wir jetzt sagen table jetzt haltet euch
mal fest was das ding für nice sachen auf der konsole machen kann table add
column so wir wollen ausgeben user jetzt wird jetzt wird es auch optisch nicht
schlecht user wollen wir ausgeben dann wollen wir noch haben wir denn hier
mac passphrase wlan in welchem wlan die sind dann
welche meck die haben und am ende welches passwort die haben weiß jemand
was in iot so die gängigen sprache sind ja leider c++ also im hand im handelsübli
so im heimbereich ist es viel arduino kompatibles zeug von esp 2866 bis esp 32
und das ist leider leider ausschließlich c hauptsächlich c++ was
halt ziemlich sagt aber man kommt halt nicht drumherum so
cable cable add row user bem also zuerst der user name dann user wlan dann user
meck dann user passphrase so und jetzt table render nie vergessen cable
kein schimmer cable ach so einfach so ok cable so und jetzt passt mal auf wie
wie nice das auf der konsole jetzt aussieht bem ist das nicht eine huge
feif händige optisch ansprechende ausgabe von den usern auf der kommando zeile das
doch richtig nice oder richtig porc guck mal hier bem zack es war mal also am
besten wäre es natürlich wenn man so was ausführen könnte später dann
irgendwie was weiß ich irgendwie so list user oder sowas
ja kommen die franzosen sogar an und jetzt können wir noch sagen table
expand expand und jetzt ist die tabelle auch gleich guckt mal ist die tabelle
auch gleich über den ganzen bildschirm massive das ist doch das war schon mal
deutlich besser als übers web interface so gedönst zu machen das gefällt mir
jetzt schon mal sehr gut dort haben wir rausbekommen also erste
hürde ist genommen wir haben rausbekommen wie man user abruft die
nächste hürde ist wie kann man user anlegen
nach namen sortieren moment stand da expire irgendwo drin
stand da irgendwo drin waren die expire ich muss mir mal kurz das xml muss
nur mal kurz das xml ausgeben hier oder created kann man da drin stehen
meck last next ist das hier quasi created macht er erzeugte daraus created
das ist auch garantiert in den unix timestamp unix time alter was das für
eine 15 der fünfte gestern 1535 ja ok das ist das brauchen wir noch da kann man
das nämlich nach endungsdatum nach modified datum machen last rekey das
brauchen wir unbedingt das ist das ist prog was bei dir hat sich jemand
neulich beschwert das cli voll veraltet ist ja das sind die ganzen kacknubs die
keine ahnung das sind auch die leute die unter windows dann so klicken wenn du
denen sagst so nach dem motto machen wir den explorer auf und werft den usb
stick aus so dann machen die leute so
auswerfen das sind die gleichen leute die sagen dass die lei veraltet ist die
zehn minuten die zehn minuten brauchen sowas sowas zu machen ja anstatt spam
bam bam auswerfen gut ist das ging mir ein bisschen schnell ja das ist schon
das ist grenzwertig gewesen ja modifia et oder ab dated et oder das so date
time jetzt müssen wir den plus sagen dass der updated f last rekey und jetzt
wie ging das noch mal unix time zu einem date time das war neu das geht noch
nicht so lang sie schabt und unix unix time to date time das ist noch nicht so
lange her dass sie dafür was geedet haben das ist müll was die hier schreiben
das ist nicht mehr aktuell das da genau date time offset from unix time seconds
kämpel offset from unix time seconds moment jetzt muss ich es noch als in
passen jetzt wird es jetzt wird es abartig
a long pass
habe ich glück wenn sie nicht knallt
dates und wie mache ich das jetzt zu einem date time tix utc date time local
date time ja das ist gut so jetzt schauen wir mal ob das an sich funktioniert
programm modified ist wahrscheinlich sogar ganz sinnvoll
updated wenn man das als erstes macht user updated ach nee
ach jetzt muss ich noch formatieren to string hätte ich auch das hätte ich
gleich machen können an der stelle wie willst du etwas sagen man versteht hier
nicht auf den ersten blick was da passiert ich finde ich finde es
äußerst beruhigend also umso mehr die idee orange unter kringelt umso sicherer
ist das ganze umso mehr ist das überprüft umso öfters ist das schon
quasi während der entwicklungszeit überprüft kann ich nichts mehr schief
gehen so short date ist ok
das ist das ist kokona kokona schreib format
das will ich haben das will ich haben ohne zz also in dem moment ich will ich
will den tag ja noch dabei haben dd oder was ist das ja so war es im
endeffekt
Äh, äh, was?
Ja, schon besser. Also ich will dd, ja genau, dd.mm.jaja, genau. Oder will ich vielleicht so?
Ne, will ich nicht. Ja, das sieht, nein. Chat, das stimmt nicht, was ihr geschrieben habt.
So, ich, ich, ich trau, ich, ich glaube euch das jetzt einfach. Nein, nein, fast,
aber y, y ist richtig. So, so. Aha. So und jetzt Moment, wir wollen Monat, Monat, wir
wollen das haben und das doppelt. Beistelle ich immer. So will ich das haben. 15.05.2092,
15.35. So ist das nice. Und jetzt sorten wir das danach. Und zwar. Users. Order by user.
Updated ad. Manchmal macht die aus mit Autokomplete komisches Zeug. So und jetzt haben wir das
Ganze aufsteigend sortiert. Kann man den Zeilenabstand vergrößern? Ja, du kannst das ziemlich genau
konfigurieren. Aber wollen wir den Zeilenabstand vergrößern? Also du kannst relativ viele machen
bei dem Kram hier. Weiß ich aber aus dem Kopf nicht, wie man das macht. Du kannst den
Border ändern, kannst das Alignment ändern, den Titel, die Breite. Man kann bestimmt auch
irgendwie noch extra Zeilen einfügen. Nee, den Zeilenabstand nicht. Du kannst extra Zeile
anmachen, weil die Zeilenhöhe ist ja fix in deinem Terminal. Da kannst du nichts ändern.
Aber du kannst die. Du kannst extra Zeilen rein machen. Du kannst so viele Gedöns hier
einstellen, wüsste ich noch nicht mal, wie das überhaupt genau funktioniert. Aber so
ehrlich gesagt reicht es mir so erstmal. Aber das ist doch sehr schick jetzt, oder? Und
wie schnell das geht, besser als besser als mit einem ferngesteuerten Chrome ist es auf
jeden Fall. Das war ja meine erste Idee. Wir könnten Chrome fernsteuern, anstatt das so
zu machen. So ist das viel, viel besser. Damit kann man jetzt richtig was anfangen.
Damit kann man tatsächlich... Jetzt müssen wir noch User anlegen. Das wird auch nochmal
lustig. Also, jetzt kann man sich User anzeigen lassen und man kann User bald updaten, beziehungsweise
User anlegen. Also sprich, wenn irgendjemand Sixheadiges kommt und sein Passwort vergisst
und wisst ihr, was das Coole ist? Dadurch, dass wir jetzt hier das über Kommandozeile
laufen haben, kann ich das dann auch direkt in Labelchamp pippen und ein Etikett drucken
lassen mit der Zugangs... mit dem Zugang. Also sprich, theoretisch mal angenommen, es
wird jemand zu Besuch. Dann gehe ich hier hin, tippe dann ein, was weiß ich hier, add,
gebe den Usernamen ein, kegw-user und dann kann ich irgendwie noch sagen Output als
PNG oder als QR-Code und das wird dann in den Labelchamp gepiped und der Labelchamp
druckt es dann aus. Bei Chico alles fit? Ja, die liegt irgendwo im Hof draußen gerade
und rollt sich da rum. Die Mac ist ja noch nicht ganz sauber, doch die Mac stimmt. Wenn
keine Mac drinnen steht, heißt das nur, dass einmalig sich jede Mac Adresse anmelden kann
und es erst dann gelockt wird. Also wenn Mac leer ist, heißt das, es hat sich einfach
noch nie jemand mit diesem User angemeldet, was richtig ist, weil das hat sich noch keiner
mit dem User angemeldet. Ich werde das jetzt auch nicht einschalten, das WLAN, weil ich
habe schon alles geleakt von Passwörtern bis sonst was, also ich werde jetzt hier nichts
einschalten. Ne, ne, das ist Access-Point-spezifisch, also die machen das so. Du kannst User anlegen
im Access-Point und du kannst Mac-Adressen vergeben, dann kann nur dieses Gerät mit
diesem Passwort und dieser Mac rein. Du kannst aber auch die Mac leer lassen, dann musst
du das WLAN-Passwort eingeben und beim ersten Mal einloggen, merkt er sich dann die Mac
dazu. Kann man noch eine Last-Logon-Zeile oder sowas hinzufügen? Ne, das haben die
in der API nicht drin stehen. Guckt, wir können nur, wir können nur das machen, was die, also
es sei dann, man kriegt das über das Web-Interface irgendwie raus. Also wir können bloß ID, Rollen-ID,
Mac, WLAN-Name, WLAN-ID angelegt, Expire, die IP könnten wir noch uns auslesen für
eingeloggte Geräte aktuell. Ja, mehr kriegen wir nicht raus. Aber die IP ist tatsächlich
gar nicht so schlecht. Die IP sollten wir uns, das schreibe ich mal zumindest als To-Do
noch auf. Irgendwo hier unten, wo ich das andere To-Do hin hab. Das war ja einfach nur
just for fun, keck weh. Aber IP ausgeben für eingeloggte Devices. Das ist nicht verkehrt.
Das könnte man tatsächlich machen an der Stelle, weil wenn es die API hergibt, warum
nicht? So, jetzt legen wir User an. Da bin ich mal gespannt. Alles wieder dicht machen.
User anlegen. Ok, also Leute, User anlegen ist ziemlich eklig. Wenn ihr User anlegen
wollt, könnt ihr nicht einfach sagen add user. Ihr müsst eine CSV-Datei hochladen,
die so aussieht. Und in dieser CSV-Datei kann man dann sagen, wie der User heißen soll,
keck weh User. Und welche MAC-Adresse der hat. Wenn man die MAC-Adresse leer lässt,
dann ist es halt einfach nur ein User, der sich einloggen kann mit dem Passwort ohne
bestimmtem Gerät. Bis zum ersten Mal. Und das heißt, wir müssen jetzt eine CSV-Generate
haben. Aber was nicht schlimm ist, weil unsere CSV wird so aussehen. Also unsere CSV heißt
keck weh User, das ist unsere CSV. Wer braucht die nicht? CSV, XML. Stimmt, die haben wirklich
jeden Bullshit drin, oder? Was fehlt noch, Leute? XML, CSV, JSP, Java Server Pages. Was
gibt es noch für Bullshit, den wir vielleicht noch finden drin? Ok, wir müssen jetzt uns
das Ganze aber mal in Ruhe anschauen. Und zwar, also, wenn man jetzt hier User hochlädt,
Browse, Downloads, Batch DPSK-Example. So, dann macht er diese zwei Requests. Requests?
Dock MD System Check Memory? Ah, das ist bevor er an Upload startet, ob er genug Speicherplatz
hat. Ich denke mal, das ist ok. Und danach gibt es ein Upload. Upload. Requests. Ah,
das ist jetzt eine Form, Form Encoded. PDF, na PDF ist ja kein Shit. Also, wohin geht denn
der Request? Hier. Ok, boah, boah Leute, das wird, das wird ja abfuckt. Also, Create User,
Create User machen wir jetzt. Public, Void, Create User. String, Name. Rest können wir
dann machen. Also, da wollen wir hin. Das bedeutet, wir müssen einen Post machen. So,
wenn wir gerade mal wieder kopieren. Create User. Äh, wir machen hier gerade mal an der
Stelle Return. RP Create User. So, und wir legen jetzt den User Cute Chat an. Task.
Ok, wie füllen wir das Ganze? Also, wir brauchen einen Postrequest dahin. IP ist richtig.
Admin, Upload, Request, XHR. Ja, das sollten wir recht sein. So, dahin machen wir den Postrequest.
Mit dem Header auf jeden Fall dran. Brauchen wir sonst noch irgendwelche Header, Request
oder was. Content. Ah, das glaube ich nicht so wild. Hier. Alles klar. Ähm. Stopp, dass
Admin in der UL fehlt. Oh, ihr habt recht. Tatsächlich, Pog. So, with Header, Post Async.
Ok, Moment. Ich brauche keinen Post. Ich will einen Form. Kann das ein Formupload machen?
Wie macht man einen Formupload? Leute, da bin ich überfragt. Form. Post Form. Form Post.
Ah, da gibt es Form Post. Guck mal, da gibt es doch schon. Post World Encoded Async. Alles
klar. Das ist doch mal was. Wenn diese Seiten ordentliche Hilfe Pages haben, dann weiß
man, da weiß man ja nichts, was man macht. Ok, Post World Encoded Data. Was poste ich
denn da jetzt eigentlich? Genau. Doc is King. Genau. Request. Ja, die XML poste ich doch.
Theoretisch muss ich nur die XML posten. Content Type muss ich noch setzen. Nee, der Content
Type ist der in der Form Data mit drinne. Oh, jetzt bin ich aber. Boah, kein Schimmer.
Hoffen wir mal, dass das funktioniert. Ich bin jetzt etwas ratlos. Wie man das jetzt
postet. Form Data. Request. Ach nein, das muss ich machen. Multipart Form Data, oder?
Request. Multipart Form Data muss ich machen. Post Multipart Async. Ok, jetzt wird es aber
noch Sixheadiger. Was? Multipart. Ich mach das mal wie bei denen, das in der Hilfe drin
steht. Also. Post. Warum ist das nicht erlaubt zu awaiten? Ah, weil ich das Ding nicht Async
genannt hab. Ach so. Na dann. Ok, der was? Deswegen kommentieren wir den ganzen Shit
jetzt mal aus. Gucken, ob es tut. Also. Await API Create User. Gut. Post Multipart. Add
String. Ah, das sind jetzt die Files, oder? Also sprich Request. Name. File Name. Ok,
die zwei Sachen braucht man. Name. Name Action. Boah. Was ist das denn? Wie funkt? Ok, das
krieg ich nicht so einfach nachgebaut. Also, nur. Also wie geht das jetzt? Add. Ok, Add
String Content. So. Dort poste ich jetzt meine CSV rein. Also meine CSV wird ja im Endeffekt
ganz einfach so aussehen. Name. Komma. Fertig. Das ist meine ganze CSV. Also meine CSV. Kein
Encoding extra setzen. Aber Media Type will ich haben. Text CSV. Boah, das ist ja best
auf Bullshit Dateiformate, was die hier machen. Name. Name. Oh Gott, ich check das nicht.
Was seh ich denn hier überhaupt? Und was geht? Ich versuch meinen Access Point über die nicht
offizielle API zu steuern. Gerade User anlegen. Alter, fuck man. Ich hab keine Ahnung, ob
das so funktioniert. Wo würde ich denn jetzt Filename noch angeben? Wo würde ich denn
jetzt hier das Filename angeben? Ich meine, ich würde jetzt davon ausgehen, dass da jetzt
so was rauskommt wie, wir lassen es mit Filename einfach mal weg. Content Typ. So. Das ist
der Content. So und jetzt brauch ich noch was anderes. Jetzt brauch ich noch was mit dem
Add String. Aber ein Add File. Aha. Ich bin extrem verwirrt. Ich hab keine Ahnung, wie
das funktioniert. Was das für ein Access Point ist. So einer hier. So einer. Ich hab
keine Ahnung, was ich hier mache. Also wir probieren es jetzt einfach mal. Es wäre cool,
wenn das Ding irgendwie eine ordentliche Debug Ausgabe hätte, weil ich kann halt nicht mitschneiden,
wie hart der DPS ist. Okay, Add. So wir brauchen auf jeden Fall noch ein Action Name Action.
Das ist einfach nur ein String. Add String Name Action. Und das ist jetzt Upload Batch
DPSK. Und noch mal Add Callback. DPSK. So. Jetzt bin ich ja mal gespannt, ob das jetzt
String. Jetzt bin ich ja mal gespannt, ob er das jetzt macht. Kostet das wirklich 1000
Euro? Ja, wenn du es neu kaufst, was ich nicht machen würde, weil der 710 ist die Vorgänger
Generation. Also aktuell ist er 750. Der R750 ist Wi-Fi 6 und der hier ist Wi-Fi 5. Und
das reicht der dicke. Und kriegst du, also ich hab ihn für 260, 270 Euro bei eBay gekriegt.
So. Okay, Leute, ich hab keine Ahnung, ob das funktioniert. Ich führe das jetzt einfach
aus. An error while sending the request. Ja, das ist jetzt busy nicht sagen, oder? Error
while sending request. Das kann ja alles bedeuten. Busy, vielleicht in busy sinnvolleren Hilfe
Exception Text. Irgendwas aussagekräftigeres? Ich würde das gerne. Kann man das irgendwie
debacken? Was der jetzt eigentlich genau schickt?
Before call, after call. Okay, das scheint äußerst sixheadig wieder zu sein.
Ich würde halt gerne sehen, was ich, was ich poste. Schau doch noch mal eins drunter in
die Docs. Cookies. Cookies macht er ja anscheinend automatisch. Ich will keinen Error Handling
haben. Ich will einfach den Request, wie er ihn schickt, loggen. Before call, after call.
Wire Shark geht nichts. Das ist HTTPS. Ich meine, ich könnte nette, hätte aufmachen,
mir dahin schicken lassen. Quatsch, mach ich. Nein, nein, nein, ich könnte, ich könnte
mir einfach nette aufmachen. So hier. Es bringt mir doch nichts, man wire. Shark HTTPS kann
Bojashark kann nur, wenn das Zertifikat, also wenn ich irgendeinen Proxy hätte.
So, Fort 8000, ich mach, ich schick mir das einfach an
meinen eigenen, an die, meine eigene IP.
127.0.0.1
Fort
8000
Was hab ich jetzt gemacht?
Was hab ich jetzt kaputt gemacht? Ach so. Ach so, weil HTTPS, lull, HTTPS.
Aha, Leute, da haben wir es doch.
Also.
Das sieht doch von der Idee her gar nicht mal so falsch aus.
Also so müsste es aussehen.
So müsste es aussehen. Also die Nummer ist egal.
So, das hier geht hier los im Endeffekt.
Text, CSV.
Das ist gut.
Form, Data, Name, U. Ok.
Das ist schon mal das Problem. Das müsste sein Filename gleich.
Das ist eigentlich hauptsächlich der Unterschied, den ich jetzt sehe.
Der Rest ist doch in Ordnung, oder?
Chat, der Rest sieht wirklich ziemlich, ziemlich gut aus.
Das ist richtig.
Upload, Upload, Upload.
Das ist richtig. Uploader, blablabla.
Callback, Action.
Es fehlt nur beim CSV.
Ja, beim CSV fehlt der Filename.
Da müssen wir uns mal überlegen, wie wir das hinbekommen.
Wie kriegen wir da ein File? Also String Content ist es schon mal nett.
Also ist es wahrscheinlich Add File oder Add String Parts?
Ja, Moment, ich habe das als String. Ich will ja nicht wirklich ein File senden.
Wie random String? Was?
Das ist random hier, ja. Das ist ok. Das darf immer anders sein.
Also wie kriege ich denn jetzt hier?
Filename.
String, Value, String Content Type.
Add.
Muss ich hier File Content machen? Vielleicht Add File Content?
Sowas hier?
Ja, der Path, das will ich ja nicht.
Ok, HTTP, Client, Filename, Post.
How to send File? Ja, zeige hier.
Media.
Das ist ja bescheuert.
Multipart Form Content.
Multipart Form.
Multipart Form Data Content?
Ok, was ist das?
Ok, was zum?
Hä?
Alter, das ist ja High IQ Shit, Mann.
Nee, das ist was anderes.
Ich meine, ich will doch jetzt kein File schreiben, nur dass ich ein File da...
Ich meine, ok, wir können ja den String zu einem Stream machen und dann String, Stream, nee.
Wie geht das? String, String, nee, String Reader?
So, ging das, ne?
Jetzt wird es aber kompliziert.
Äh, ja, da kann man nämlich so tun, als wäre das ein File, CSV, so.
Was habe ich jetzt verkehrt gemacht? Ah, Using, wow.
String Reader. Jetzt sagen wir nämlich Add File, Name you, Name u.
Ok, also String, Path, Stream, SR.
File, Name, jetzt können wir den File, Name nämlich mitgeben.
So, File, Name ist in dem Fall Badge.
Ich nenne es einfach mal so, irgendwas mit Punkt CSV, vielleicht checkt er nämlich am Ende auch die Endung.
Man weiß ja nie. So, das ist der File, Name.
String, Content, Type, Text, CSV. So, Buffer Size brauchen wir nicht.
So, warum geht das jetzt nicht? Was ist das Problem?
Ist das kein Stream oder was?
Nein. C Sharp, String, S, Stream.
Weißt du, das brauchen wir normalerweise nicht.
Memory Stream.
Gott, Memory Stream. Auch gut.
Ah, Memory Stream.
Und was jetzt?
Wie kriegt man da jetzt den String rein, ohne irgendwie sich das Bein auszurenken?
Encoding, UTF, Get, Bytes. Alles klar.
So, CSV, Stream.
So, gut. Jetzt kann man das Post mal gucken, was jetzt dabei rauskommt.
Tommy, was? Wie? Verstehe ich? Jetzt verstehe ich es gerade nicht.
Jetzt kommt gar nichts an.
Error while copying content to stream? Was? Wie jetzt?
Das ist... Wo ist denn das Problem? Das Using muss weg.
Warum? Der soll den danach doch wieder aufräumen.
Tatsächlich. Hä? Was macht denn das Using jetzt da? Warum? Warum macht das Probleme? Verstehe ich nicht.
Also, das bekommen wir da jetzt als Antwort. Alles klar.
Guck mal, Filename. Das sieht besser aus jetzt.
Warum hat er hier Filename-Sternchen? Was ist das jetzt für ein Müll? Wo kommt denn das jetzt her?
Warum? Nee, das Using sollte das eigentlich nicht sofort schließen.
Das Using sollte das schließen am Ende des Blocks, wenn er nimmer gebraucht wird.
Das ist ja der Unterschied, wenn du es so schreibst, zu der alten Schreibweise mit den Klammern.
Egal. Was auch immer.
Das sieht doch jetzt eigentlich alles gut aus. Warum hat er denn jetzt Filename-Sternchen UTF-8 noch mal da hinten dran stehen?
Das ist das Encoding. Das Encoding will er aus irgendwelchen Gründen unbedingt da drin haben. Schauen wir mal, ob es funktioniert.
Wir gucken einfach mal, ob es funktioniert jetzt. IP. Run. Please. Oh, das sieht gut aus.
Es ist nicht abgekackt. Was ist das eigentlich für eine Response? Was ist das für eine Response schon wieder?
Ach, Moment. Ich kack Noob. Ich muss HTTPS machen.
Ah, ich mache es falsch, Leute. Ich mache irgendwas falsch.
Was mache ich falsch?
Okay, nochmal. Wir gucken uns das hier nochmal an. Nein, nervt mich jetzt nicht. Nein, ich will kein Admin Recoveren.
Okay. Services. Upload. Example. Ja, so.
Cookies. Ja, die Session setzt er ja hoffentlich von alleine, weil die anderen gehen ja auch so.
Guck, der setzt überall das Cookie und das macht mein Client auch. Sonst könnte ich das ja gar nicht benutzen.
Request. Hedder. Hab ich irgendwas vergessen? Request, Hedder.
Wenn ihr Ideen habt, nur her. Also das Cookie setze ich ja auch das Cookie. Mist, ich dachte, ich hätte das Cookie vergessen. Dann wäre das ja relativ einfach gewesen.
So, die Url stimmt auch. Es ist ein Post. So. Admin. Slash. Upload. Jsp. Äh, Moment.
Ach, das ist, ähm. Soll ich das mal wegmachen? Was hat denn passiert?
Ähm. So.
Also das mit dem Accept und so wird, denke ich, keinen Einfluss haben. Content Length. Multipart Form Data. Das ist genau das, was meiner auch schickt. Multipart Form Data Boundary. Das ist überhaupt kein Unterschied.
Soll ich mal das Uploaden? Soll ich mal Uploaden das, was ich hier auch Uploade? Also quasi, äh, Downloads und dann, äh, Batch. Das, das da? Was Upload, was Upload ich hier eigentlich immer?
Ich Uploade das gleich immer. Was der Raspberry Pi tut? Was? Hä? Moment. Was, was? Was hab ich denn und was will er denn?
So. Muss jetzt Fivehead Proggers Kram hier machen. Komm, wir haben immer mehr User. Der hat das ja mit dem Anlegen schon gecheckt anscheinend. Keine Ahnung. Nee, jetzt, jetzt kann ich nicht.
So. Also. Guckt mal. Warum geht das nicht? Check das net. Also. Ok. Welche Datei lade ich denn, lade ich denn hier immer hoch? Sample 1. Genau das lade ich da jetzt auch hoch. Das da. Genau das da.
Also. Stream, wir geben jetzt tatsächlich die Datei direkt an. Also. String, Pass, Home, Home, Max, Downloads. So. Was ist jetzt? Was hat er für Schmerzen? Hab ich doch genau richtig gemacht. Pass. Content Type. Ach, Buffer Size.
Pass. Content Type muss dann da hin. Das ist natürlich, haben sie sich jetzt super, super fiveheadig überlegt. Content Type. Buffer Size. Ah, jetzt brauch ich Buffer Size. Meinetwegen. Ok. Alles klar.
Alles klar. Dann machen wir nochmal Netcat auf und schauen, ob das funktioniert. Aber lokal. Das, das, das ist eklig jetzt. Weil es könnte sein, dass er sich an alle möglichen stört, weil die sich, die müssen sich ja, wenn sie ihr eigenes Frontend und ihr eigenes Backend passen.
Ach so. Ja, doch. Das sollte man vielleicht schon. Ja, ist recht. Sollte man machen. Ach, das kann man doch weglassen hier, oder? Das kann man weglassen, weil das wahrscheinlich selbst einfügt, wenn du außer Datei öffnest. So.
Also, schauen wir mal. Was? Ah ne, es ist ja nicht Port. Es ist Port 8000. 8000. Was? Was macht der denn da jetzt?
Ich, ich blick nicht mal durch. Was ist denn jetzt wieder da? Warum sind da jetzt so komische, so komische Leerzeichen und Gedüllens dabei, ey man? Wegen dem Encoding vielleicht?
Nicht. Kann man Encoding setzen? Nein, kann man nicht. Nee, das ist nicht HTTPS. Teilname. Das sieht nicht, nicht richtig aus.
Warum hat der denn jetzt da so komische, so komische Dinger drum herum? Die hat er doch vorher auch nicht gehabt. Guck, vorher sah das noch gut aus. Alter, ich hasse diesen Krempel, ey. Das ist der Wahnsinn.
Oh man, egal. Wir testen jetzt einfach, ob es funktioniert. Vielleicht geht es jetzt ja auf magische Art und Weise. Ach so, welches Encoding hat denn dieser Krempel hier? Vielleicht liegt es ja daran.
Äh, wie kriege ich denn das raus? Stats? Port noch weg.
Äh, wie kriege ich denn das File Encoding raus? How can I find Encoding? File minus E.
Aha, aha. Es ist nicht UTF-8, aber das ist egal, weil US ASCII ist kompatibel mit UTF-8. Es ist bestimmt irgendein ekliches Encoding-Problem, ich sag's euch.
Äh, ach HTTPS, fuck man. Boah, oh kreise. Ist irgendwas an der URL falsch, oder?
Ich meine, ich mach Login und danach führ ich das aus. Also es ist ja nicht so, als würde ich in dem anderen mehr machen. Da ruf ich dann auch fertige Sachen auf, die Login brauchen.
Tja, jetzt bin ich echt ein wenig überfragt, warum der Request sogar schon, warum der endet, prematurely endet. War ich irgendwas falsch?
Okay, wir machen jetzt mal eine Sache, wir machen das mal weg. Header, sagen einfach get und einfach ganz normal ein get. Mal gucken, was passiert, wenn ich ein get mache.
Äh. Hä? Warum ist die Methode überhaupt da? Internal Server Error. Gut, also das geht schonmal nicht. Post. Einfach leerer Post machen.
500. Internal Server. Gut, das ist doch schonmal, dass das vom Prinzip her gar nicht funktioniert, bis ich anfange. Bis ich prinzipiell das Richtige mache.
Also kann man das im Prinzip wieder so lassen. Stream.
Der hat keinen Platz mehr zu speichern. Doch, klar, da Platz zu speichern. Hab ich irgendwas übersehen? Werft er den Fehler, weil der User schon existiert?
Nee, das glaube ich nicht. Der hat den User ja noch gar nicht, der hat den User ja noch gar nicht angelegt. Was, jetzt will er noch File name?
Ah ja. Äh. Batch. Content-Type-Text-CSV.
Ja, das ist gut so. Test-Port. 7.0.0.1. 1.8.000. Test-Port.
So, jetzt gucken wir noch mal. Wir vergleichen den Kram jetzt noch mal. Ich bin jetzt nämlich echt ratlos, was der für Schmerzen hat. Ach, es ist immer noch HTTPS. Okay.
Aber einfach, weiß ich nicht. Real. Weiß ich nicht. Es ist nur, dass ich es einfach austauschen kann. Ist nämlich HTTPS IP. Gut. Also. Dann wollen wir mal.
Gut. Also. Das ist alles gut, was der hier macht. Ab hier geht es los. Das ist alles richtig. Post dahin. Guckt es euch an. Post.
Was macht der denn da eigentlich vorher? Request. Vorher guckt er irgendwie, ob er noch genug Speicher hat oder sowas. Keine Ahnung. Das muss ich, das muss ich wahrscheinlich nicht machen. Das wäre ziemlich beknackt.
So. Upload. Cookies. Ist das ist gesetzt. Filename. Ja, das ist. Es geht auf diese Uhr. Dann.
Dann. Ja, das mit dem Filename ist anders. Das ist gut. Der Rest ist der Rest ist auch richtig. Content. Length. Er sagt Content Type Text CSV.
Ich meine, hier hat das gequotet. Hier nicht. Aber ich gehe mal davon aus, dass das standardtechnisch alles okay ist, wenn das nicht gequotet ist. Und da hat er irgendwie so einen komischen Scheiß hier drinnen mit Filename Sternchen UTF 8.
Das Check der Server bestimmt nicht hier. Wie kriege ich ihm das? Wie kriege ich ihm das abgewöhnt?
Et. Kann man nicht einfach sagen, dass das von Hand etten String Parts oder so?
Muss man das? Muss man das url encoden? Aber das sollte eigentlich auch für mich machen.
Also et et file hängt irgendwie so ganz ekliges Zeug hier hinten dran an, was ich, was ich nicht haben will.
Nee, da braucht keine Hedderow. Brauche nicht. Wisst ihr was? Wir machen mal. Können wir das mit einem Curl machen?
Nein, da habe ich keine. Nee, brauche ich nicht. Guck mal, ich kann es euch zeigen, dass das prinzipiell funktioniert. Wir gehen jetzt mal in nach Downloads.
Vim. Batch.
Das da nehme ich glaube ich immer. Batch Sample. Das da. Guck mal.
Ich nehme jetzt mal nur die Datei und versuche die hochzuladen.
Ja, muss ich nochmal refreshen. Und das ist auch nervig mit diesem bitte, bitte lock dich mal als Admin ein und mach Password Recovery an und so.
Ich will keine Password Recovery. Ich setze mein Access Point einfach zurück.
So. Also Sample. Wisst ihr? Funst. Upload.
Keqv-User. Bam. Der macht aber halt immer aus irgendwelchen Gründen da noch ein U-Line unten dran.
Meiner nicht. Nicht, dass man das bräuchte. Und Content-Type Text und so ist vertauscht, aber ok. Der Rest ist ja alles gut.
Ich meine, soll ich auch mal ein U-Line unten dran machen? Vielleicht kann man das einfach hier dran machen. Dann geht's.
Ja, jetzt haben wir da auch ein U-Line dran.
Http 1.1. Was ist das? Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Http Version steht nicht dabei.
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
Content
