Hallo? Hallo? Test-Test? Ja, funktioniert. Naisu. Bezüglich Naisu. Hat letztens einer
unter dem Video geschrieben, Naisu, Max, kannst du neuerdings japanisch? Hab ich auch
gedacht. Oh, Facebook. Lul. So, erstmal Halo-Musik aus. Und irgendwas ein bisschen, äh, nicht
ganz so langsam was anmachen. So. Moment, ich bin, sag mal, ich bin ziemlich, bin ich
zu laut? Ah, nee. Ich hab mich selbst zu laut, also ich höre mich zu laut. Ihr hört mich
glaube ich ganz normal. Ich höre mich zu laut, muss ich ein bisschen runterdrehen. Das
geht sonst nicht richtig. So Leute, ich bin so was vor dem Arsch heute, äh, ist der Wahnsinn.
Ich bin nicht dazu in der Lage jetzt irgendwie was aufreibendes nerven, aufreibendes zu spielen.
Das kriege ich nicht gebacken. Deswegen, das haben die letzten Streams schon immer Leute
gefragt, programmieren wir mal heute an unserem Screenshot-Tool weiter und zwar basteln wir
mal irgendeine recht simple Oberfläche. Basteln wir mal irgendeine recht simple Oberfläche,
mit der wir das mal ausprobieren können, was, ähm, quasi Programme einrichten, dann markieren
was man, was man auf dem Screenshot, was wichtig ist auf dem Screenshot und dann auswerten
lassen. Irgendwie so eine billige Oberfläche. Gucken wir mal gucken. Irgendwas Simples. Irgendwas,
irgendwas Windows Forms mäßiges mit zwei Fenstern oder so. Ich weiß es selbst noch
nicht, genau. Die Qualitätsauswahl ist wieder nur auf 1080p beschränkt. Hä? Ok, das ist
glaube ich echt ein Bug von Twitch. Das ist, das ist glaube ich echt ein Bug von, von Twitch,
das hat er manchmal. Weiß auch nicht woran das liegt, kann ich jetzt nichts machen. So.
Was gucken? Hängt davon ab, wie viele gerade streamen, also früher hat das bei mir immer
funktioniert, immer. Ich, also an meinen Settings kann es aber auch nix nicht liegen, weil ich
meine, ich hab außer von 720p Hochstellen auf 1080, auch 1080 hab ich jetzt nix gemacht.
Ja und 1080 ist ja auch besser, ne, für, für Desktop und Fenster, sonst ist die Schrift
nicht scharf. Ok, also das ist das erste Mal. Ist, ist die Musik ok oder soll ich ein bisschen
lauter oder leiser machen? Ich glaub, ich glaub einen Ticken lauter kann man auch machen.
Ich brauch selbst ein bisschen Musik im Hintergrund. So, weil wir können das so machen. Es ist
natürlich jetzt blöd für Leute, die gucken wollen und keine 6 MBit Leitung haben. Kann
vielleicht sein, dass du zu hohe Bitrate hast, ne. Wenn ich zu hohe Bitrate hätte, dann Transcode
in das Twitch, ja und du hast ganz komische Optionen. Außerdem hab ich seit Monaten nichts
an meinen Settings geändert. Ich hab 6 MBit, fertig. Constant Bitrate, egal, da müssen wir
jetzt durch. Also, wo fangen wir denn am besten an? Lass doch mal überlegen. Oh ne, die singen
ja in dem Stream, das ist ja nix, muss ich ausmachen. Ich brauch jetzt, ich brauch jetzt
irgendwas ohne, ohne, ohne Musik. Irgendwas ohne Musik brauch ich. Also nicht ohne Musik.
Siehst du mal Leute, wie kaputt ich im Kopf bin. Ich war in Musik ohne Gesang, so rum.
Irgendwas. Was hab ich denn hier noch so Schönes in der History? Top 25 Final Fantasy Songs
of All Time. Ja, das machen wir jetzt an. Das klingt entspannend. Ja, Press of the Wild
Musik ist tatsächlich, oh, da kommt es ja vor wie in der Kirche, ja. Das könnte man
sagen. Press of the Wild, Full Ost. Oh, Press of the Wild, Relaxing Music, das ist immer,
das ist ja echt, das ist ja echt, kommt es ja vor wie in der Kirche, ja. Oder das ist
aber best Final Fantasy Songs. Moment, ich mach mal ein bisschen vor, vielleicht kommt
da noch was. Das ist, das ist, das kenne ich, das ist, ähm, das ist Final Fantasy 14 Online,
Full Ost. Das war irgendein Boss. Oh je, okay, das ist mir nicht, okay, wir machen jetzt
Press of the Wild Relaxing Piano. Ja, das ist gut, das ist gut. Das ist schön entspannend.
Ah ja, das ist schön entspannend. Okay Leute, also ich weiß noch nicht genau, wo wir anfangen.
Ich hab zum ersten Mal die Virtual Studio auf dem neuen Rechner auf, also auf dem Account
und ich könnte mir jetzt zwar auschecken das Ganze von GitHub, wir haben es ja auf GitHub
hochgeladen, aber ich bastel jetzt erstmal die Oberfläche und ich hab mir auch überlegt,
wir können mit den Screenshots das ein bisschen simpler machen. Ich leg hier erstmal was an
und das Ding, das heißt natürlich wieder, nein nein, wir wollen Classic Desktop App,
wir wollen auf keinen Fall eine Universal App machen, da krieg ich Anfälle. Irgendwas,
etwas Simples mit 1-2 Fenstern. Das Ding heißt natürlich wieder, es dient echt Friesi Lull,
das muss so heißen, wenn es nicht so heißt, dann funktioniert es am Ende nicht. Er hat
die Musik, ist entspannt. Also falls ich was überlese, denkt dran, ihr müsst es mit
Antipoblows dabeischreiben. Wie hässlich Windows Forms standardmäßig aussieht, der Wahnsinn.
So, ich hab nur, ok Moment, Moment, ich muss erstmal Font und sowas umstellen, das reicht
glaube ich mal ein bisschen größer machen. Was hab ich denn hier für Fonts drauf? Font,
hab ich hier Hack und sowas drauf? Konsolas ist auch Hack, Hack ist das beste Font. Bei
der Invisual Studio Kacke aussieht Hack als Font. Wir bleiben bei Konsolas. Das ist Microsoft,
der funktioniert, Microsoft trifft da am besten. So, ich denke so ist von der Größe auch ganz
gut. So, also, nochmal zur Erinnerung, weil wahrscheinlich die meisten Leute schon wieder
vergessen haben. Ist der Soundtrack jetzt abgekackt oder gehört das so? Ach nee, das
gehört so. Also, zur Erklärung, was wir vorhaben, ich zeig euch mal einen Screenshot und zwar,
wo hab ich's denn? Moment, ich sag's euch gleich, ich zeig euch mal einen Screenshot,
da sieht man ganz gut, was wir eigentlich machen wollen. Ja, genau. So, ich zeig euch
nochmal den Screenshot von BDO, was wir jetzt endlich basteln wollen. Der BDO Screenshot
ist nur ein Beispiel. So, wie mach ich denn das jetzt am besten? Microsoft Photos. Okay,
man darf Microsoft Photo nicht einplatten in OBS, das ist natürlich auch geil, warum
darf man das nicht? Dann öffne ich das jetzt einfach mit Paint und mit Paint darf man das
wahrscheinlich. Warum darf ich Microsoft Photo nicht? Da ich mach's in Paint, auf Paint darf
man bestimmt in OBS einfügen. Ja, das funktioniert natürlich. Also, hier ist das Screenshot
von BDO. So, ich zoome mal ein bisschen raus. Und der Sinn und Zweck, das haben wir das
letzte Mal ja auch schon mal so grob ausprobiert, das letzte Mal ist auch schon eineinhalb Monate
her oder noch länger, haben wir so grob ausprobiert, dass es funktioniert, was wir vorhaben und
zwar sehen und Zweck, das Sache ist es, dass wir ein Programm basteln, was Screenshots
taken kann, krasser Satz, was Screenshots machen kann von anderen Programmen und dann
kann man quasi da drin Regionen. The Breath of the Wild Soundtrack, ja. So, und dann kann
man da drin so ähnlich wie in Paint, der Soundtrack nervt mich. Ja, besser. So, ähm,
das ist zu laut wieder, das ist immer so schwierig den Soundtrack ordentlich einzustellen. Okay,
weitererzählen und zwar, also im Programm mit dem du Screenshots nehmen kannst, ich
habe auch irgendwo eine Erklärung im Chat, das fällt mir gerade auf, ich weiß bloß
das Kommando nicht mehr. So, und das mit Screenshots von anderen Programmen nehmen, haben wir das
letzte Mal schon ausprobiert, das ist total easy, das ist überhaupt kein Ding. So, und
dann will ich, dass man diese Screenshots sich quasi markieren kann, zum Beispiel sagen,
hey, von diesem Screenshot will ich diese Region hier haben, also braucht man eine Oberfläche,
wo man so einen Viereck oder so, so ein Dings selektieren kann, so wie hier in Paint und
dann kann ich noch auswählen, was ich damit machen will, also zum Beispiel, dass ich diesen
Inhalt hier, also diesen Screenshot untersuchen will, ob da spezielle Wörter drin enthalten
sind, das können wir mit einem webbasierten Texterkennungsservice machen, das haben wir
das letzte Mal auch schon alles ausprobiert, das funktioniert von der Idee her, funktioniert
das ziemlich gut, und sobald der dann, also der macht dann dieses Screenshot, quasi macht
er alle Minute oder so, oder alle, keine Ahnung, man kann theoretisch auch ein Intervall einstellen,
in welchem Abstand der das macht, und der guckt dann im Hintergrund, nimmt er quasi
von den Anwendungen, die man festgelegt hat, nimmt er immer wieder Screenshots und untersucht
ausgewählte Regionen quasi auf, ob da bestimmter Text drinne steht, so, und damit kann man
sich dann benachrichtigen lassen, also der macht dann alle, der macht dann alle 10 Sekunden
oder so, macht einen Screenshot, in dem Fall hier sagen wir mal von Video, guckt ob hier
unten in dieser Ecke vom Screenshot, vom Screenshot jetzt ein spezieller Text steht, zum Beispiel
hier Marketplace Registration, könnte man dann, nachdem man da Texterkennung laufen
hat, kann man ausprobieren, ob das drin steht, und wenn er das gefunden hat, dann benachrichtigt
er einen mit irgendwie einem Popup, oder man kann es sogar per Mail machen, oder Discord,
oder so, das ist im Prinzip, was man machen kann, kann man halt machen, so, standard,
wir machen halt erstmal die defaultmäßigen Popup, das hat halt den großen Charme, dass
man zum Beispiel sagen könnte, hey, ich habe jetzt hier BDO auf, oder irgendein anderes
MMO, und ich überwache jetzt hier den Chat, zum Beispiel, aber ein bisschen größer,
so, ich würde jetzt hier den Chat, ich sage dem Programm hier, überwache mal den Chat,
dann macht er dann alle 10 Sekunden Screenshots, irgendwie vom Chat, und wenn dann im Chat
irgendwie drin steht, keine Ahnung, Max, komm mal an den Start, dann schickt er mir, keine
Ahnung, eine Mail, ein Popup, eine Discord Message, oder so, das kann man dann aber alles
einstellen, was man machen will, also meine Idee dahinter war, dass ich mir eine Marketplace
Registration Geschichte für BDO basteln könnte, und das ist kein Bot in dem Sinn, weil wir
simulieren keine Eingaben, und wir greifen auch nicht irgendwie auf interne Sachen im
Speicher von diesem Spiel zu, oder sowas, wir machen eigentlich gar nichts, außer eben
den Fensterinhalt zu screenshotten, was ja nicht verboten ist, ich meine, Screenshots
vom Game kann man machen, und dann außerhalb des Games eine Benachrichtigung schicken,
je nachdem wie der Screenshot aussieht, das kann nicht verboten sein, das kann ich ja
auch von Hand machen, das ist überhaupt kein Ding, so, und das haben wir das letzte Mal
schon alles ausprobiert, also sprich, Screenshot machen, ausschneiden und hochladen, und gucken,
ob die Texterkennung funktioniert, haben wir das letzte Mal schon alles ausprobiert,
funktioniert wunderbar, ich weiß nicht mehr, wie der Service hieß, den wir verwendet haben,
muss ich jetzt mal nachgucken, wobei, wir machen jetzt eh erstmal die Oberfläche dafür,
so, lese doch einfach den Speicher vom Spiel, also so einfach ist es jetzt ja nicht, so
einfach ist es nicht, selbst erstens musst du mal drankommen an den Speicher, du musst
den auslesen, und dann musst du noch das Richtige finden, was da drin steht, und quasi jetzt
den Speicher zu finden, wo hier drinnen steht, Marketplace Registration, ich glaube das
ist, also erstens ist da so eine ganze Ecke näher an irgendwelchen Cheats dran, wenn ich
da im Speicher rumwurste, und außerdem ist es sicher nicht so einfach zu finden, wo
das steht, und wenn das überhaupt irgendwo so steht, ja, und die sind ja auch nicht blöd,
die Leute, die das Spiel programmiert haben, oder die Sachen programmieren, also es ist
aus meiner Sicht deutlich einfacher, man nimmt einen Screenshot, untersucht eine Region,
geht die bei einem Texterkennungsservice hoch, und dann kriegt man halt einfach den Text,
fertig.
Wie gesagt, das haben wir das letzte Mal schon ausprobiert, das funktioniert, ohne Probleme.
So, und heute basteln wir mal irgendwie ein simples GUI dafür, ich muss jetzt erst noch
mal kurz auf GitHub, und zwar, auf GitHub haben wir die letzte Version, wo ich mit
X noch ein bisschen rumgespielt habe, und zwar, guck mal, gerade mal, genauer ein Chrome,
da binden wir nochmal ein, immer GitHub, Friesi Lull heißt das Ding ja auch, und da
haben wir irgendwo so eine Screenshot-Klasse drinnen, wie so IRL, weil das ist, wo es am
besten passt, und Creative ist scheiße, ist eine Kackkategorie, Creative ist von Twitch
überhaupt nicht, irgendwie, ich weiß nicht, da guckt kein Mensch rein, deswegen, IRL,
und das ist ja auch IRL, das sind keine Games, ja, aber The Nightmare, selbst der Versuch,
quasi, irgendwie im Speicher von was rumzubasteln, könnte einem ja schon irgendjemand als Cheat
auslegen, und das will ich ja nicht, es geht ja darum, dass wir das machen, was auf gar
keinen Fall irgendwie verboten sein könnte, und einen Screenshot von einem Programm nehmen,
und dann quasi den Inhalt des Screenshots auswerten, und wir interagieren ja auch in
keiner Weise mit dem Programm, wir machen einfach nur einen Screenshot, den Rest machen
wir außerhalb, das kann nicht verboten sein, das hat nichts, das ist ja auch kein Botting
in dem Sinn, weil wir senden ja auch nichts irgendwie an dieses Spiel, also sprich, ich
werde da drin ja auch nix einbauen, dass sobald man auf diesen Screenshot erkennt, jetzt
irgendwelche Tastendrücke an das Spiel schickt, oder so, warum bist du im Arsch, ich bin
seit einer Weile schon im Arsch, also ich weiß nicht so genau, woran das liegt, ich
penne irgendwie nicht mehr richtig, obwohl ich ewig im Bett liege, also ich, keine Ahnung,
selbst wenn ich, keine Ahnung, ich gehe irgendwie 23 Stunden oder so ins Bett, und dann liege
ich dann erstmal gefühlt bis eins oder zwei oder sowas irgendwie rum, und irgendwann penne
ich ein, und ich liege dann zwar ewig im Bett, aber ich schlafe irgendwie halt richtig, ja,
das ist ganz komisch, das ist, das habe ich jetzt schon ein paar Monate, das wird immer
noch schlimmer, ich kann irgendwie nicht mehr richtig pennen, ja, achso Leute, soll ich
den Chat einplanen, ich könnte den Chat einplanen, der ist doch hier gar nicht so schlecht, fällt
mir gerade ein, weil da im Chat richtig blödes Zeug steht, oh und ich muss meine Fans hinter
die Donations und hinter die Follower-Dinger machen, sonst funktioniert das Ganze ja nicht,
so, ok, jetzt muss ich mir nochmal aus dem Projekt, das wir auf GitHub haben, was raus
kopieren, also die Nummer, um zu zeigen, was wir das letzte Mal gemacht haben, schade,
den Stream gibt es zu 1080p, mein Inhalt ist zu schlecht, ja, das liegt an Twitch, Twitch
hat kein Bock das gerade in andere Qualität anzugeben, paar Liegestütze zu müden werden,
also ich mache ja für meine Verhältnisse, ihr wisst ja, ich arbeite quasi mehr oder
weniger 8 Stunden vorm Rechner und sitze dann abends noch YouTube, Twitch und sonst was
noch vorm Rechner, ich mache ja schon mittlerweile viel mehr so Bewegungstechnisch als vorher,
ich meine ich mache jetzt hier kein ultra krasses Workout, im Vergleich zu früher bewege
ich mich schon relativ viel, trotzdem bin ich im Arsch, ich weiß nicht was, ich habe,
wahrscheinlich, keine Ahnung, das ist sogar so schlimm, dass ich teilweise so wenig gepennt
habe nachts, also wenn ich dann morgens aufstehe, da flimmert es mir schon irgendwie so vor
den Augen, da muss ich erstmal ein bisschen rumlaufen, ich bin irgendwie voll im Arsch,
wahrscheinlich drehe ich irgendwie durch im Kopf oder so mittlerweile, ja Opossum2s,
ich weiß nicht woran das liegt, das ist manchmal so, das letzte Mal hatte ich das gleiche Problem,
obwohl ich nichts an den Settings geändert habe, so, also jetzt vielleicht nochmal zum,
ich zeige euch mal zwei Sachen was wir das letzte Mal gemacht haben, also, und wir werden
jetzt Teile davon wieder verwenden heute, also ich hoffe man erkennt das hier alles,
ich mache mal kurz den Browser einen Ticken größer, nee, das funktioniert nicht, da ist
der Chat im Weg, machen wir mal so, ist besser, da kann ich ein Stückchen größer machen,
so, also, zwei Sachen die wir das letzte Mal gemacht haben, die ich euch mal zeigen will,
mal ein bisschen größer den Text, ja ich denke das sieht man so ganz gut jetzt, ja,
und zwar ist einmal hier unsere Screenshot Klasse die wir gebastelt haben, davon brauchen
wir die Funktionen hier von Windows zum Screenshot nehmen, die müssen wir uns raus kopieren und
hier später auch, und noch hier den Krams wie wir dann die Screenshots von anderen Programmen
nehmen, wer sich fragt was das ganze hier ist, das ist eine, warte, wo zeige ichs hier, das
ist eine Funktion von Windows, von der Windows API, der übergibt man quasi, ganz billig
gesagt quasi das Bild woran er was reinschreiben soll, also das Programm woran er was reinschreiben
soll, von wo er die Pixel auslesen soll und dann halt Startpositionen und Breite, Höhe
und sowas in der Richtung, und das hier unten wie wir das ganze machen ist ziemlich ähnlich
zu dem wie OBS das auch macht, um nicht zu sagen es ist eigentlich genauso wie OBS das
auch macht, bloß dass wir es nicht so oft machen, das letzte Mal im letzten Stream haben
wir ein bisschen mit DirectX rumgespielt und ich glaube wir haben es geschafft wenn wir
quasi direkt unsere Programme quasi gecaptured haben in ein DirectX Device Kontext oder wie
das hieß, haben wir es glaube ich geschafft irgendwie 6000 mal oder so pro Sekunde oder
4500 FPS quasi, also wir haben es irgendwie geschafft pro Sekunde 4000 mal quasi das
Programm zu Screenshotten, das heißt das ist sogar relativ effizient, allerdings werde
ich jetzt hier nichts mit DirectX rumwursten, das war ja das letzte Mal nur zum ausprobieren,
weil es ist egal ob das Performance-mäßig jetzt schnell ist oder superschnell ist, nicht
400 FPS, 4000 FPS, was es laggt Leute, ernsthaft, also bei mir laggt nichts, ich habe es hier
gerade in der Vorschau drinne an, also bei mir laggt da nichts, naja so, so viel dazu
was wir das letzte Mal gemacht haben, deswegen ist es egal ob das schnell ist oder superschnell,
bei einem Screenshot alle paar Sekunden, da ist wie gesagt egal wie schnell wir sind,
so und dann zeige ich euch mal kurz mal, falls wir das überhaupt schon gemacht haben das
letzte Mal, genau und dann haben wir noch die Texterkennung gemacht, haben wir hier irgendwie
drinne stehen wie dieser Service hier, erinnert euch noch daran, wo ich bei Auspaß an der
Front einfach gecastet habe, weil es funktioniert, ja genau, den Service haben wir hier verwendet,
übrigens LUL APK im Klartext muss sein, das Programm haben wir, also diesen Service
haben wir für die Texterkennung verwendet, OCR Space, genau, also sprich da kann man
den Bildausschnitt, kann man hochladen zu OCR Space und kriegt dann am Ende den Text
zurück und das ganze machen wir im Hintergrund, ein paar Sachen davon werden wir heute verwenden,
so, ok, so, wir kopieren uns da nur ein paar Dinge raus und basteln das mal anders heute,
ich habe mir nämlich überlegt, eine Sache, ich habe es hier, das ist eigentlich viel
zu kompliziert, so eine eigene Klasse für Screenshot machen und sowas, eigentlich braucht
man das überhaupt nicht, wir verwenden ein Feature von C-Sharp, was es schon ein paar
Versionen gibt, was ich aber so aus anderen Sprachen nicht kenne, zwar Extension Methods,
also sprich wir erweitern schon bestehende Klassen mit einer Methode und zwar erweitern
wir die Process-Klasse um eine Take-Screenshot-Methode und das war's, dann brauchen wir den ganzen
Scheiß nicht hier drum herum, so, also legen wir mal los, mal gucken wie weit wir kommen,
wie gesagt ich bin heute übelst kaputt, erstmal das hässliche Windows Forms Ding weg, also
was brauchen wir denn, hast mal überlegen, Toolbox, sollte jetzt nicht was drinstehen,
ok, also wir brauchen erstmal, wie fangen wir da am besten an, also ich würde sagen
wir brauchen eigentlich zwei Fenster, wir brauchen eigentlich zwei Fenster, wir brauchen
einmal so einen Main, darf man das hier eigentlich umbenennen, darf man mal gucken ob das geht,
das Fenster hinzufügen, so Main-Window, sehr schön, jetzt müssen wir noch einstellen,
dass er hier starten soll, Main-Window, alles gut, so und was wir auch einstellen müssen
zu Debug-Zwecken erstmal, dass wir eine Konsolen, dass wir einen Konsolen-Output haben, gucken
wir mal ob das ganze funktioniert, hallo Twitch, gucken wir mal ob das tut, ob das, ja passt,
sehr schön, ok, so also ich würde sagen wir brauchen zwei Fenster, wir brauchen einmal
ein Fenster, wo quasi alles mögliche drin läuft, inklusive überprüfen ob auf den Screenshot
etwas gefunden wird oder sonst was und dann braucht man noch ein zweites Fenster, wo
man neue Programme hinzufügt, die man überwachen will, also quasi sowas in der Richtung wie
irgendwie einen Add-Button, einen Edit-Button und keine Ahnung, eine Textbox, wo drin steht
was er macht, ganz billig mal, wie gesagt ich habe mir nur nicht großartig Gedanken
darüber gemacht wie man das machen könnte und von der Optik her wird das bestimmt auch
keine Glanzleistung, ok, das Ding nennen wir mal Add, wobei wir können, oh wisst ihr was
wir machen, ich habe keine Lust mir jetzt irgendwie Eigens zu suchen, aber wir nehmen
einfach Emojis, das machen wir, wir nehmen einfach Emojis als Symbole, Emoji, weil Emojis
gibt es ja mittlerweile nicht nur diese Smiley, sondern auch ganz normale Symbole, die man
für Anwendungen verwenden kann, ich suche mal einfach nach Plus oder so, ja Heavy Plus
sein, BAM, Emoji zur Symbole, so also wir brauchen einen Button um Sachen hinzuzufügen,
das Ding das nennen wir nicht Button 1, Button 1 ist ein ziemlich dummer Name, bin ich blind,
wo steht denn wie das Ding heißt, Name, Name, das Ding heißt Add, Button und dann brauchen
wir noch einen Knopf für Edit, das Ding heißt natürlich Edit Button, wer hätte das gedacht,
so jetzt brauche ich noch ein Emoji für Edit, was ist da für ein, was nehmen wir da für
ein Emoji, Objects, was ist ein schönes Symbol für Edit, Fax, Pen, guck mal gibt es da ein
Pen, da ist ein gutes Symbol für Edit, easy, wo ist das denn jetzt, das gefuddelt immer
in Visual Studio, Anfälle, wo ist denn jetzt hier Text, kann man das irgendwie filtern,
kann man da drin suchen, Text, da, der Stift sieht hässlich aus, der Emoji Stift sieht
mega kacke aus, wie sieht denn der aus, sieht denn der aus, genauso kacke aus, im Prinzip
will ich mich jetzt aber auch nicht so lange aufhalten irgendwelche komischen Symbole zu
suchen, ich mache da jetzt mal irgendeinen Platzhalter icon rein, sieht ja auch kacke
aus, sieht ja alles mega hässlich aus ey, so, so machen wir das jetzt, so das ist Edit
Button, das ist Add Button, unten drunter machen wir noch eine Textbox, wo dann drin
steht was passiert, bevor wir richtig anfangen, müssen wir ein paar Klassen anlegen, die
ja quasi das beinhalten, was ich eigentlich machen will bzw. die ich auch laden und speichern
kann und sowas, das ist mein grandios super hübsches Main Window, was natürlich noch
nichts macht und die Textbox soll mal gefällig Street Only sein, sonst ist nämlich ziemlich
kacke, kann da irgendwas reinschreiben, dabei will ich die eigentlich nur zum Anzeigen verwenden,
der Linux Main Bastler eine Windows Applikation, ja dementsprechend sieht es auch aus und
auf WPF habe ich jetzt keinen Nerv, das wird ja wie gesagt was total simples, du kannst
Alphabetisch sortieren Eigenschaften und Fenster größer machen, boah, ja ok Fenster größer
machen, das ist generell schon mal eine sehr clevere Geschichte, zumindest machen wir
das mal so, und was wir jetzt noch machen müssen, das ist nicht total verrutscht alles,
müssen wir sagen Anchor Style, wo ist es denn, Zelda Musiker, ah ja Alphabetisch sortieren,
genau das, genau das, das so muss es sein, so der soll jetzt mal angedockt bleiben, das
heißt wenn ich den jetzt move dann bleibt der Button da, nee boah, den muss ich abdocken
auf der anderen Seite, so jetzt passt das wenn ich das bewege, so das machen wir hiermit
jetzt auch, so der darf überall geankert sein und der andere Button ist auch nur links,
aber an die Musik erinnere ich mich noch, ja passt jetzt kann man Fenster move, oh ganz
wichtig, das Default icon geht gar nicht, Max Mikrofon kratzt ein bisschen, das kann
sein falls ich zu laut gestellt habe, wartet mal, wobei laut OBS bin ich so jetzt im gelben
Bereich, also kratzt bei euch auch, ha, der Tio, Max code in einer Windows App, ja ich
weiß alle was mit mir los ist, aber ich brauche das selbst, deswegen bastel ich es vielleicht,
kratzt das Mikrofon wie ist das bei euch, vielleicht kratze ich ja auch einfach, vielleicht ist
meine Stimme neuerdings so krass männlich geworden, also falls es da irgendwie Probleme
gibt, ich kann mich immer noch ein bisschen leiser machen, dass dann OBS boosten, falls
ich das, aber ich habe hier so eine Clipping Anzeige an meinem Audio Interface und der
sagt eigentlich alles grün, der sagt grün wenn er ja genau Input sieht und sagt rot
wenn er klippt, also eigentlich klippt hier nix, ok, so, lass mal weiter überlegen, jetzt
habe ich voll in veranfangen, wo sind wir stehen geblieben, genau, wir brauchen jetzt
erstmal zwei Sachen, wir brauchen, genau, ich muss eine Sache fertig machen, sonst blicke
ich nicht mehr durch heute, wie gesagt, bin auch nicht so super aufnahmefähig, genau,
wir machen uns jetzt erstmal für diese native Windows Funktion mal eine eigene Klasse,
wo ich einfach das ganze native Zeug rein stecke, also nur mal zur Erklärung was das
jetzt ist, gibt es hier nicht New Class irgendwo doch, New Class, also, ich kopiere das hier
mal rein von dem was wir das letzte Mal schon gemacht haben, also, die Windows API hat hier
diese Funktion, stellt ihr bereit, das ist eine CEC Funktion, nennt sich Bit, was heißt
ein Block Transfer oder irgendwie sowas, ich weiß gar nicht wie was Blit in dem Fall steht,
das ist Microsoft Philosophie noch aus uralter Zeit, dass die alles so kurz und kryptisch
nennen, was heißt denn eigentlich Blit, heißt das sowas wie Block Transfer oder sowas, muss
ich jetzt mal gucken was das heißt, das interessiert mich jetzt auch mal, was heißt denn das,
gucken wir mal, Bit Blit Function, Bit Block Transfer Systemer, ja, Wahnsinn, Blit gleich
Bliat, genau, Microsoft war ihrer Zeit voraus, das haben irgendwelche Russen programmiert,
Bit Bliat, genau, ok jetzt haben wir nachgekommen, ich muss mal bescheiden, also, die Windows
API hat hier diese Funktion, kann man hier auch danach suchen, wenn man hier nach Windows
API Bit Blit sucht, dann findet man hier eine Seite von Microsoft, wo drin steht, hey unsere
CAP, so und so funktioniert das, um das ganze aus die Sharp verwenden zu können, muss man
das hier importieren, sonst funktioniert das nicht, also sprich man muss sagen, in welcher
Bibliothek das ganze oder welcher DLL-File, dass diese Funktion definiert ist, wie sie
heißt und wie die Signatur ist, das muss man halt nachgucken, wenn man das nicht weiß,
das haben wir aber das letzte Mal schon gemacht und wie gesagt, das Ding braucht irgendwie
einen Device Kontext als Ziel, Startkoordinaten, Breite, Höhe, Ziel Kontext und Startpunkt
und hier am Ende noch irgendeinen Operation Mode, was auch immer der genau macht, wir nehmen
einfach immer Source Copy und so, das lage ich jetzt mal aus in ein eigenes Pfeil, dass
ich damit nicht meine anderen Klassen zugleiste habe, so und jetzt machen wir mal eine Extension
Method für Process, weil, jetzt machen wir jetzt einfach mal hier im Main-Window, also
mit Process kann man, das ist eingebaut im.NET Framework, das ist halt eine Klasse,
haben wir das letzte Mal auch verwendet, um sich alle laufenden Prozesse anzeigen zu
lassen, also sprich, so ganz, nur um zu angucken, was da im Endeffekt rauskommt, jetzt gibt
er mir alle laufenden Prozesse aus, achso, ja doch, ihr guckt, da, ist nicht so viel,
und ich will mir alle Prozesse raussuchen, die ein Fenster haben, weil es gibt auch Prozesse,
die kein Fenster haben, was ist der Unterschied zwischen References und DLL Import, also,
es ist das, was du hier halt.NET Assemblies hinzufügen zu deinem Programm, sind References
und DLL Import, benutzt du für irgendwelche native Bibliotheken, die halt auf deinem System
schon drauf sind, beziehungsweise, die können auch im Programmordner liegen, References
sind immer.NET, andere.NET Bibliotheken oder Assemblies oder was auch immer und DLL Import
ist für native C Apis, man kann hier irgendwo auch angeben, Calling Convention kannst du
hier auch angeben, daran siehst du schon, das ist, das bezieht sich auf C Geschichten,
also sprich, du kannst hier angeben, in welcher Reihenfolge er irgendwie Parameter übergeben
soll und sowas, wenn du halt, zum Beispiel, noch eine andere Sache, wofür man das auch
immer mal wieder braucht, ist zum Beispiel FFmpeg, wenn man, wenn man mit FFmpeg jetzt
irgendwas rescalen will oder irgendwie, keine Ahnung, irgendwas konvertieren will und sowas
und FFmpeg hat selbst ja auch noch eine C Api, da müsstest du dir hier die Funktionen
halt quasi importieren oder du benutzt eine Library von allem, der das schon gemacht hat.
Genau, so und jetzt machen wir ein paar Extension Methods, eigentlich können wir es hier drin
machen, aber wir machen das mal ganz ordentlich und zwar New Class Extensions, da muss ich
jetzt aber selbst mal nachgucken und mal spicken, wie das funktioniert, das war nämlich irgendwie
mit Static Method oder so, da kann man jetzt nämlich einfach mal von Microsoft was kopieren,
genau, easy, Public Static muss man was machen, ok, kriegen wir hin, so und jetzt muss man
zu zeigen, was das macht, weil das kenne ich so aus keiner anderen Programmiersprache,
die Ausgabe könnt ihr nicht sehen, oh, ja, stimmt, dann machen wir es anders, da mache
ich komplette Desktop Capture, da mache ich komplett, wartet mal, da mache ich komplett
Display Capture an, so, passt, jetzt könnt ihr, warte mal, ich mach das nochmal rückgängig,
jetzt seht ihr alles, ne, ihr habt auch die ganze, ihr habt auch bisher die Ausgaben vom
Programm gar nicht gesehen, kann das sein, das heißt ihr habt überhaupt nicht wirklich
gekriegt, was ich eigentlich die ganze Zeit erzähle, ok, aber jetzt funktioniert es,
ne, ja, jetzt seht mal alles, na gut, genau, hier, hier sieht man es nochmal, damit kann
ich ja quasi alle laufenden Prozesse ausgeben lassen, so und jetzt wäre es natürlich ganz
schön, also jetzt schreiben wir das mal an, das ist hier Process, ich mache jetzt eine
Schleife über alle laufenden Prozesse drüber und was jetzt cool wäre ist, wenn ich sagen
könnte, Process, so, gucken wir uns mal an, was die Process Klasse anbietet und wir feststellen,
da ist vieles Interessantes drinne, sowas wie der Name vom Fenster, wenn wir uns das
mal ausgeben, dann sieht man hier auch, es hat nicht jedes, hat also die Zeilen, wo jetzt
nichts drinne steht, diese Programme haben oftmals gar kein Fenster, brauchst ja nicht,
also irgendwas, was im Hintergrund läuft, hat kein Fenster und dementsprechend auch kein
Fenstertitel, so, das sind eigentlich die Sachen, die laufen, das Nvidia Overlay, dann
hier mein Fenster, mein Programm, was läuft, dann habe ich im Hintergrund noch das OBS
laufen und Chrome und nochmal ein Paint, so und was jetzt schön wäre ist, wenn man sich
hier anguckt, was ein Prozess anbietet, wie gesagt, es ist schon relativ viel, aber was
richtig cool wäre, wenn ich sagen könnte, Process takes Screenshot, das funktioniert
ja nicht, weil, das jetzt versuche zu kompilieren, dann sagt er mir, hallo, dann sagt er mir
geht nicht, weil Process hat keine Take Screenshot Methode, was ja auch sinnvoll ist, weil ich
meine, warum sollte Microsoft sowas einbauen, es gibt ja wie gesagt Prozesse, die kein Fenster
haben oder so und es gibt jetzt in C Sharp, wie gesagt, seit ein paar Versionen ist schon
eine ganze Ecke alt, gibt es den Feature, damit kann man schon bestehende Klassen erweitern
und es sieht dann so aus und man kann es so benutzen, als wäre das schon immer da gewesen,
also jetzt gehen wir mal hier hin, wie gesagt, Take Screenshot, wie gesagt, kompiliert nicht
und jetzt copy and pasteen wir uns nochmal Methods C Sharp, kopieren wir uns nochmal
kurz das Beispiel raus und jetzt kann man das ganze nämlich erweitern, jetzt gehen wir
mal hier in unsere Extension, Extension File, so, das ist jetzt das Beispiel von Microsoft,
wo sich hier die Stringklasse erweitern um eine Methode, die sich WordCode nennt, wartet
mal kurz, gleich wieder da, ich muss mal kurz gucken, dass ich demnächst mal was zu futtern
kriege, ich hab übeles Hunger, machen wir das einfach mal fertig, ok und jetzt, wir wollen
jetzt ja nicht String und WordCode erweitern, sondern wir wollen Prozess, das war erstmal
importieren, sonst kennt das nicht, brings alt enter, das ist eines der wichtigsten Sachen,
die man in Visual Studio braucht, Evolia immer noch genau das gleiche Tool, wir haben ja
nicht weiter gemacht seit zwei Monaten oder so, so, wir wollen Prozess erweitern, das
ist auch neu in Visual Studio, dass man jetzt, dass sie hier ordentliche Namensvorschläge
machen, wir wollen Prozess erweitern und zwar nicht WordCode, sondern takesScreenshot,
soll Prozess als neue Methode kriegen und wir geben zurück einen Bitmap, halt einen
Bild, einen Screenshot, ok, ich erzeuge jetzt erstmal ein leeres Bild, um zu gucken, ob
das prinzipiell funktioniert und jetzt sehen wir hier an der Stelle, jetzt funktioniert
das ganze, guckt hier, Prozess takes Screenshot, kompiliert, funktioniert und man sieht ja
auch an der Ausgabe, er macht an der Stelle, er stellt dann den Screenshot, dann einmal
einen Pixelgroßen Screenshot mit nichts drin, aber prinzipiell wird die Methode ausgeführt,
aufgerufen und es klappt, so, jetzt müssen wir den natürlich bloß noch beibringen,
dass sie das macht, was wir wollen und dafür nehmen wir das, was wir das letzte Mal gebastelt
haben, nämlich aus unserer Screenshot Klasse, gucken wir mal, suchen wir uns mal raus, wo
wir hier das letzte Mal gebastelt haben, ok, im Prinzip das hier, das ist nicht sonderlich
viel gewesen, so, ähm, machen wir das mal wieder weg, so, wir machen das jetzt erstmal
zum testen, ob das funktioniert, machen wir mal hier die Textbox weg und wir machen uns
mal hier ein Bild hin, wo wir das ganze reinmalen können, wollen wir zum testen, ob das prinzipiell
funktioniert, was ich da so vor habe, so, ähm, machen wir mal so, wenn ich auf den
Button klicke, wenn ich auf diesen Button klicke, dann will ich den Screenshot machen,
von, keine Ahnung, von Chrome oder so, immer mal zum ausprobieren, ob das alles funktioniert,
also, wenn ich auf den Button klicke, sagen wir jetzt mal hier, Process, get processes,
get player und dann sagen wir sowas wie, äh, main window chrome oder irgendwie sowas, gucken
wir mal, ob das funktioniert, main window title contains chrome, schauen, ob das, ob,
ob er da was macht, ja, wenn ich crash jetzt, Achtung, gucken, bam, ok, es contains nicht
chrome, um content ist nicht chrome, content is contained frisilol, ey, achso, chromium
hätte ich suchen müssen, nicht chrome, stimmt, ich hab hier ein chromium drauf, wenn man
seinen eigenen Browser nicht mehr kann, zack, funktioniert und jetzt gucken wir mal, ob
wir davon einen Screenshot taken können, von chromium, so, ich bin sofort wieder da,
ich rauche mal kurz was zu essen, ich hab Hunger, äh, falls ich irgendwelche Sachen
überlesen hab, schreib doch mal rein, ne, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok,
ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, do
So, was wir jetzt in unserer Screenshot-Funktion machen, ist ja eigentlich nur dann einmal
ein großes Bild anlegen, aber wir können mal gucken, ob das prinzipiell funktioniert.
Ne, Emily, das wird so nicht passieren.
Ich futter mal nebenbei was, also ich versuch das mal möglichst leise zu machen, dass ich
euch nicht ins Ohr schmatze.
Okay, ähm, und jetzt sagen wir in unserer Picturebox, wie soll diesen Screenshot anzeigen,
was jetzt, was halt nur ein pixelgroßes Ding ist, aber ich hoffe wir sehen es jetzt, wobei
ich mach den mal, ich mach den mal 100x100 groß, dann sieht man wenigstens was, hoffe
ich, dass man irgendwas sieht, sieht man nix, warum nicht, müsste jetzt eigentlich funktionieren.
L-Button, müsste eigentlich jetzt irgendwas anzeigen, ich mein, der Screenshot wird nicht
gerade grau sein.
Ah, kann das sein, dass ich noch sagen muss, dass ich irgendwie updaten muss oder so.
Ha, ne, funktioniert nicht, das hab ich jetzt vergessen, keine Ahnung, guck mal gleich.
Zumindest wissen wir, dass das funktioniert, weil wir das letztes Mal schon alles ausprobiert.
Okay, probieren wir was anderes, auch prinzipiell Imageanzeigen, da drinnen funktionieren.
Ah, from file, laden wir mal irgendwas, ja, was ist das für ein File, dann ist ein.wp,
machen wir mal hier, laden wir mal das Bild rein, gucken wir mal, ob das funktioniert.
Ja, also das funktioniert prinzipiell, Sachen da drin anzeigen lassen, jetzt die Frage,
warum unser Screenshot zwar nicht funktioniert, ich mein, da sollte jetzt zumindest irgendwas
drin sein, ne, hä, warum, oder ist 100x100 einfach zu klein, warum auch immer, dann schreiben
wir wenigstens, wir schreiben, wir screenshotten jetzt einfach mal was rein, dann gehts bestimmt,
ich weiß nicht so genau, warum das nicht funktioniert, vielleicht einfach, weil das, keine Ahnung,
ich mein, es sollte nicht grau sein, die gleiche Intergrundfarbe, aber es funktioniert prinzipiell.
The game, ja ja, kriegt er, also es funktioniert, zumindest das hier müsste halt funktionieren.
Okay, dann lassen wir jetzt erstmal so Screenshot machen, wir wissen ja, dass es funktioniert,
aber das letzte Mal schon ausprobiert.
Wir wissen, dass es funktioniert, achso, was wir noch einstellen vorher ist, Style, wie
hieß das denn, ähm, Mode, Mode, Zoom, ne, wo ging das, Size Mode, ja, dass dann, dass
der auch diese Decide Verhältnisse so beibehält, genau, First, Meister, Exception, then X-Men,
das ist ja auch eine schöne, was ich hier gebastelt hab, wie gesagt, sorry, wenn ich
so ein bisschen langsamer bin, aber ich bin übelst kaputt, oh, wir sitzen hier fast schon
eine Stunde, haben nicht wirklich was gemacht, okay, ähm, aber das ist ja Entspannungsstrem
für mich heute, ich wollte irgendwas auf YouTube aufnehmen, aber ich glaube, das, das, das
wird heute irgendwie nichts, es klappt nicht, okay, also, im Prinzip wollen wir jetzt ja
was ganz Simples machen, wir brauchen hier irgendwie ein Graphics-Objekt von unserem
Prozess von unserer Window-Handle, so, das brauchen wir, das Graphics-Objekt brauchen
wir, dass ich, ähm, Bounce hier ausgeben lassen kann, also muss ja, muss ja wissen,
wie groß der ganze Scheiß ist, so, dann brauchen wir sowas hier, so Breite in der Richtung
und Breite ist quasi, so, das haben wir das letzte Mal schon gemacht hier, ne, deswegen,
ich weiß schon, wie das funktioniert, da haben wir es irgendwie mit, das ist eine clevere
Idee, wie wir das das letzte Mal gemacht haben, das finde ich gut, gefällt mir, das gefällt
mir echt, wie wir das letzte, das haben wir das letzte Mal echt clever gemacht, ha, vielleicht
soll ich einfach den Code vom letzten Mal eins zu eins kopieren und nicht wieder das
Lat neu erfinden, ne, so, okay, gucken wir mal, ob das prinzipiell funktioniert, was
ich da gemacht habe, da ist immer noch so meine Zweifel, gucken wir mal, also das sollte
mir jetzt die Breite von Chromium ausgeben, macht's, 1566 klingt gut für die Breite
von diesem Fenster, das scheint also vom Ansatz her zu tun, kann man mal den Chat ordentlich
minimieren, sonst sehe ich nämlich nichts mehr, Woodface, so, ähm, ups, boah, bin ich
heute lieber der Spur, ja, so, und jetzt brauchen wir sowas, wie, was, wo man, ja, das, quasi,
das Bild, das Bitmap, wo wir was reinschreiben, übrigens, ich hab ja früher immer so geflamed
gegen Warne, ich war ja früher immer so der Verfechter, hier direkt den Typ hinzuschreiben,
aber mittlerweile habe ich mich dran gewöhnt, wobei man ja sagen muss, man darf War in C
Sharp nicht mit War in Javascript und so verwechseln, ähm, also ich zeig euch jetzt mal, wir machen
jetzt mal hier so, sowas, für, also für die ganzen Javascript Pros unter uns, wenn ich
jetzt hier gucke, was ist das für ein Typ, seh ich, das ist ein Bitmap, weil ich hab
es ja auch davor geschrieben, wenn ich jetzt allerdings wahrnehme, seh ich, das ist immer
noch ein Bitmap, also in C Sharp ist da nichts Dynamisches, das ist einfach nur, ja, angenehm,
dass man das nicht davor schreiben muss, das macht keinen Unterschied am Ende, so, das
ist jetzt, wo wir das reinschreiben, also quasi, jetzt brauchen wir ein neues Bitmap,
darf man da ein Rektangle übergeben, wie groß das ist, Image Size, Woods Height, ne,
genau, jetzt will ich im Prinzip ein neues Bitmap anlegen, was genauso, was genauso groß
ist, wie das Fenster, was wir Screenshotten wollen, das haben wir das letzte Mal ja alle
schon gemacht, das heißt, wir wissen prinzipiell, dass das funktioniert, War ist wohl sowas
wie Auto in C++, also, wie gesagt, ich bin ja nicht der Ultra C++ Profi, aber ich glaub,
das kommt der Sache sehr nahe, genau, so, jetzt haben wir ein Bitmap angelegt, wo ich
Sachen reinschreiben könnte, jetzt brauchen wir noch sowas wie einen Graphics Objekt für
das, brauchen wir das überhaupt, ja, brauchen wir für den Kontext dann, vom Image, wo ist
es dann, da, vom Image, so, jetzt brauchen wir dieses ganze Device Kontext Zeug, wo Windows
so drauf steht, ist auch nicht, ist halt so, weil das schon immer so war, so, und jetzt
können wir dann eigentlich einen Screenshot machen, wir haben ja uns die Windows Funktion
hier irgendwo hin kopiert, die sollten wir vielleicht Public machen, dass es funktioniert,
das klappt das nämlich alles nicht, oh, ich kriege eine Donation, danke schonmal für
die Donation, ich muss mal nachgucken, der Sebaro, 20 Euro, PogChamp und schreibt, hab
jetzt schon etwas BDO gespielt und es macht Spaß, isst mal was anderes, könntest du
auch einen kleinen Wizard Guide machen, und welchen, ich ne Guide in BDO, ne, ich hab
überhaupt keine Ahnung von dem Game, ich kann meine 5 Wizard Spells drücken und das
war's, da muss ich zum Fabian gehen, Fabian hat jetzt auch einen Wizard gemacht, hat er
mir vorhin gesagt, Fabian ist jetzt auch Wizard Pro, aber danke für die 20 Euro und
70 Cent, Stream, der Eaxe auch da, ok, jetzt kann ich hier weitermachen, und zwar jetzt
kann ich sagen, hier ich spiele Windows, oh, das müsste nie so aus, ok, jetzt können wir
nämlich den Screenshot mit der Windows Funktion machen, und zwar brauchen wir jetzt den Destination,
was heißt HDC nochmal, Hardware Device Context, ne, also an die Windows Pros, so wir wollen
oben links anfangen, das sind Sachen, das sieht man in fast allen GUI Frameworks immer, wenn
man, du musst immer 4 Sachen angeben, wenn du irgendwas malen willst, oder du kannst
eigentlich immer, immer 4 Sachen angeben, wenn du irgendwas malen willst, das ist egal
in welcher Programmiersprache, egal in welchem GUI Framework, in der Regel ist es immer so,
du musst angeben, quasi einen Punkt, wo du starten willst, und dann gibst du eine Breite
und eine Höhe an, also sprich, wenn du irgendwie irgendeinen Rechteck oder so malen willst,
du musst immer angeben Startpunkt und dann Höhe Breite, gibt es da leichte Abwandlungen
davon, aber im Prinzip ist es überall das gleiche, so, und Breit will man natürlich
haben, ja im Prinzip ja, im Prinzip ja genau das gleiche, wobei wir können jetzt auch
das hier nehmen, im Prinzip genauso breit und genauso hoch, wie das Bild, das komplette
Fenster, das ganze soll von dem Window dieses Prozesses kopiert werden, und zwar auch dort
von oben links, also 0,0 ist dementsprechend oben links, wenn das hier x ist und das hier
y ist 0,0 oben links, so und jetzt brauchen wir noch als letztes Argument irgendwie sowas
und dann nehmen wir einfach immer Source Copy, ich weiß nicht was es heißt, das habe ich
mir auf so einer API Seite rausgesucht und das geht halt so, noch ein paar Zeilen und
Brüche rein, dass das ganze hübscher aussieht, so, ok, und jetzt screenshotten wir den Chrome
in unser Bild und dann geben wir das Bild zurück, soweit so gut, was wir jetzt noch
unbedingt machen müssen vorher ist, wir müssen, weil jetzt haben wir wahrscheinlich krasse
Memory Leaks, aber wir gucken erstmal ob alles funktioniert, wenn das nicht funktioniert
bin ich jetzt echt, hä, was habe ich, habe ich irgendwas vergessen, ich weine in screenshot
genommen, man sieht man ja, habe ich jetzt irgendwas vergessen, hä, das muss doch funktionieren,
hm, wo geht denn das nicht, muss ich das noch aktualisieren lassen oder so, hä, wo funktioniert
das nicht, ich mein, wie ich gesagt habe, wir haben jetzt die übelsten Memory Probleme,
aber warum kommt da kein Bild, ich habe irgendwas vergessen, Relaxing Wind Waker, ach das ist
auch gut, das machen wir jetzt als nächstes, wir machen einfach Auto Play, habe ich jetzt
irgendwas übersehen, habe ich irgendwas vergessen, von der Idee her muss das, ah natürlich,
natürlich, ich habe ganz richtig, das kann also überhaupt nicht funktionieren, ich muss,
ich muss das Ding wieder releasen, sonst klappt es nicht, so, ha, Bild, easy clap, so und
das andere müsste auch noch funktionieren, wenn ich eben jetzt sage, hier, Anchor, das
da, zack, screenshot, ok, funktioniert und ich sehe es hier gerade, ganz, ganz essentiell,
das Eigen hier oben ist nicht richtig, das ist das Default Eigen, das wollen wir nicht
machen, ich habe mir schon mal vorsorglich irgendwo Frisilull kopiert, weil Frisilull
brauchen wir als Eigen für unser Programm, ohne Frisilull geht nichts, das Problem ist,
nach dem Windows Forms so ein oller Kack ist, mag das Microsoft natürlich nicht direkt
als PNG als Anwendungseiken, also sprich hier oben das, sondern man muss das vorher in
irgendwie ein Icon Format konvertieren, wie gesagt, Windows Forms, Windows API, das ist
30 Jahre alt, ja, übrigens, ich habe hier übertrieben geil das Zeug zu fressen, Rouladeknödel
und so ein bisschen Rotkohl, aber ich könnte wetten, ich meine, ich habe den Gramm jetzt
nur als PNG, aber ich könnte wetten, man kann, es gibt bestimmt sowas, ja, wisst ihr,
die Seite sieht schon mal gleich aus, als fängst du in ein Virus ein, wenn du sie verwendest,
das ist der Icon Converter, den verwenden wir jetzt, es war klar, dass es sowas gibt,
und zwar, wir konvertieren jetzt mal Frisilull, da ist es, Bäm, kann man das nicht öffnen,
Fotos, zack, bestes Bild, was noch in diesem Ordner irgendwie rumliegt, so, jetzt haben
wir das Frisilull Icon am Start, so, und das ging irgendwo hier, das als Icon zu setzen,
Icon, genau, Downloads, Frisilull, da ist er, ok, oh Moment, falsches, jetzt hat die Konsole
das Frisilull Icon, nee, das Main Window braucht das Frisilull Icon, halt, Main Window, Icon,
und die Musik ist aus, erstmal das nächste, was zum Teufel ist ein Ico, ein uraltes Bild,
Anwendungs Icon Format, irgendwo kann man hier Icon Format auswählen, da muss Frisilull
rein, und jetzt haben wir schon mal das wichtigste, Frisilull ist am Start, so, und Titel ist
auch nicht Main Window, sondern Titel ist natürlich Frisilull, jetzt ist das gut, jetzt
können wir anfangen, so, und Screenshot funktioniert auch, ok, das ist doch schon mal was, das ist
ja, man muss ja auch sagen, das ist jetzt keine aktuelle GUI Technologie für Windows,
das aktuelle für Windows ist ja, da wo Microsoft drauf steht, ist der Universal Apps, also
der Shit hier, also quasi das da, das da, ja, ups, diese hässlichen Sachen, das ist
die neueste GUI Shit was Microsoft angeht, Universal Apps, mit Hamburger Menü, ja, und
dieses Ding als wirklich Hamburger Menü, da stehen die drauf, ich hatte erst ursprünglich
vor, das habe ich ja sogar auch im letzten Stream ja mal gesagt, also der ursprüngliche
Plan war ja, wir gucken uns an, wie, ist ja auch hier der letzte Stand von GitHub, wir
gucken uns an wie man Screenshots macht, wie man Texterkennung macht, und ein bisschen
DirectX und dann machen wir das ganze als Windows App, so war ja der ursprüngliche Plan, so
und das ganze funktioniert aber nicht, weil in Universal Apps es nicht erlaubt ist auf
solche Windows Funktionen hier zuzugreifen, das heißt die zentrale Funktion von diesem
Programm Screenshots zu nehmen, funktioniert nicht in Universal Apps, was natürlich schon
ganz schön kacke ist, also sprich, ich kann dieses Programm nicht als Universal App machen,
es sei denn, ich würde noch irgendwie so eine, irgendwie so eine Latency Bridge, oder hast
du nicht gesehen, einbauen, was sich Microsoft da ausgedacht hat, und das habe ich mal ausprobiert,
also ich kann es euch nicht zeigen, habe ich auf dem alten Rechner, aber ich habe das
mal ausprobiert, eine UWP App und dann quasi mit Latency Bridge zu einem zweiten Programm,
was im Hintergrund läuft und quasi nur für diese Windows Funktion verantwortlich ist,
ich hatte gefühlt 10 Dateien mit irgendwie 800 Zeilen Code, die einfach nur da waren
und da zu sein, die eigentlich nicht sinnvoll waren für die Funktion, aber allein schon
als ich hatte anfangen können, musste ich 800 Zeilen basteln, mit ziemlich 115 Kacke,
dass ich überhaupt in eine UWP App einen Screenshot reingekriegt habe und das ging dann auch nur
über Trick 17, da musste man in einem Hintergrundprozess, dadurch irgendwie so eine komische Windows
UWP Latency Bridge oder wie das geht, musste ich einen Bitmap machen und das Bitmap dann
als, jetzt kommt es, als DirectX Shared Texture exportieren oder quasi für andere Programme
zugänglich machen in einem Shared Memory Bereich und dann in meinem Main Programm irgendwie
per DirectX diese Textur, das war sowas von krass für den Arsch, einfach nur um einen
publischen Screenshot alle 10 Sekunden zu machen, da habe ich mir gedacht, Scheiß auf UWP.
Ehrlich, ey.
Aber ich sehe schon, wir kommen heute auch nicht wirklich vor was.
Okay, aber wir sind stehen geblieben.
Genau, prinzipiell funktioniert das Ganze, wie wir uns das vorgestellt haben.
So, und jetzt kommen wir mal zur eigentlichen Sache, ich wollte ja heute ein bisschen Tascuy
basteln, also wir wissen jetzt, dass unsere Screenshotfunktion funktioniert.
Und dementsprechend können wir den ganzen Scheiß hier wieder löschen.
Weg damit.
Und auch das hier können wir wegmachen, wir wissen ja, dass das jetzt funktioniert.
Zack.
Zack.
So, und wie ich mir die Oberfläche vorgestellt habe, ist folgendermaßen, wir brauchen zwei
Fenster, und zwar ein Main Window, wo man drinnen sieht, was das Programm gerade macht.
Multi, Multi, Multi Line, Multi Line.
Also quasi ein Main Window, in dem man sieht, was gerade passiert, also sprich, welche Programme
gerade überwacht werden und wo, auf welchen Screenshots was gefunden wurde und wer benachrichtigt
wurde und sowas, das steht dann hier unten in so einem Log drinnen.
Und da brauchen wir hier oben noch eine Combo Box.
So, und von der Idee her soll das so sein, hier oben in der Combo Box stehen dann meine
gespeicherten Items drinnen, also es könnte ja so sein, dass ich, ich habe, einmal überwache
ich Screenshots von BDO und einmal irgendwie von Discord, wo ich mich benachrichtigen lassen
kann.
Das steht dann hier oben drinnen, da kann ich dann eine auswählen, dann gehe ich auf
diesen Edit Knopf, kann den editieren.
Das heißt, wir brauchen noch ein zweites Fenster, wo man jetzt diese ganzen Sachen einstellt,
also quasi Anwendung auswählt und einen Screenshot macht und dann die Region auswählt, hier
wie in Paint, die man eben nach einem gewissen Text untersuchen will.
Also wir brauchen auf jeden Fall zwei Fenster.
Einmal hier dieses, dieses, so das Hauptfenster und dann noch irgendwie noch irgendwas anderes,
weiß ich nicht genau wie man das nennt, Create Window oder irgendwie sowas.
Sieht irgendwie benutzerfreundlicher als cute aus, das täuscht.
Also so simple Sachen zusammenklicken ist Windows Forms genial, das ist, auch wenn es
alt ist, für so wirklich simple Anwendungen mit ein, zwei Fenster und ein bisschen Inhalt
ist Windows Forms das beste, leider Windows Only.
Beziehungsweise ja, mit Mono kannst du es auch auf anderen Plattformen laufen lassen,
das sieht aber noch beschissener aus.
Was ist deine Lieblingspizza bei der Pizzeria deiner Wahl?
Was ich ganz gerne esse ist sowas total abgedrehtes, Pizza Bolognese, weiß nicht ob das schon
mal jemand von euch gegessen hat.
Aber ansonsten, also wenn sowas richtig klassisch Italienisches ist, dann eigentlich so ziemlich
Standard, dünner Teig, bisschen Tomatensauce drauf, bisschen Schinken und Käse, fertig.
Das reicht, also wenn es so richtig Italien-Style ist.
WPF ist für größere Anwendungen auch mit Sicherheit das Sinnvollere oder aber irgendwann
mal auch dieses Universal Windows Zeug, wenn es Microsoft mal geschissen bekommt, dass
man damit ordentlich Sachen machen kann.
So, jetzt brauchen wir noch ein zweites Fenster, wo wir jetzt die eigentlichen Sachen drin
machen, also quasi das Programm auswählen, was wir überwachen wollen und welche Region
im Fenster und natürlich nach was wir diese Region untersuchen wollen.
Also im Falle von BDO ist es ganz einfach, wir untersuchen diese Region hier unten nach
Marketplace Registration oder noch besser, wir könnten auch sagen nach dem Namen hier,
dann können wir uns sogar benachrichtigen lassen mit quasi was jetzt in den Marketplace
reinkommt.
Also wir brauchen auf jeden Fall noch ein zweites Fenster, das nennen wir jetzt mal,
mir fällt jetzt nichts anderes ein, Create Window.
So und dort, da brauchen wir jetzt natürlich erstmal die Picture Box fürs Anzeigen von
den Screenshots, die nennen wir jetzt mal irgendwie Briefview oder so, dann brauchen
wir einen Button, da brauchen wir eine Combo Box oben fürs Anzeigen von den unterschiedlichen
Prozessen, dann brauchen wir einen Button für Speichern, ach ne jetzt mag er ja gleich
nicht, jetzt kackt er ja gleich ab, weil das ja Visual Studio Logik ist, ne kackt nicht
ab, ok.
Moment, warum ist das jetzt komplett leer?
Hat er jetzt gerade alles rückgängig gemacht, was ich da schon reingezogen habe?
Wo hab ich das jetzt hingeschoben?
Visual Studio, please, please, wie mach ich das jetzt mehr zurück?
Doc, nein ich will jetzt aber nicht da docken, ich will jetzt da, da, lass mich da docken
und jetzt wieder klein machen.
Button, Buttons brauchen wir, wir brauchen einen Save Button, wir brauchen einen Screenshot
Button und wir brauchen einen Refresh Button für die Taskliste hier oben drinnen.
So, ich glaub das war's, groß und ganz.
Machen wir hier mal die Box hin, das Ganze mal ein bisschen größer, das wird Button
Save, das wird Button Capture und das wird Button Refresh.
Wir können uns da gleich mal ein paar Bildchen für aussuchen nachher.
So, das wird die Combo Box, wo man die Tasks einschreibt und hier unten kommt dann das
Screenshot rein.
Soweit so gut.
Kann ich irgendwas überlesen?
Man muss bei IRL den Streamer sehen, was hat denn IRL mit man sieht einzutun?
Wir machen halt nicht Gaming Content.
Wenn ich jetzt irgendwas, keine Ahnung, wenn ich jetzt irgendwas plane für irgendein Event
oder so und das Livestream ist doch auch IRL.
Wisst ihr was?
Ich weiß was wir machen.
Wo ist denn die Katze?
Hopp, hopp, wo ist die Katze?
So, jetzt haben wir die Katze eingeplant.
Jetzt müssen wir sie ein bisschen kleiner machen.
Kann ja eigentlich nichts schief gehen.
Ich kann das auch ändern.
Ich dachte eigentlich, das passt jetzt von der Kategorie.
Ich kann das ändern auf Talkshow oder so.
Ich ändere es jetzt auf Talkshow.
Hat er das jetzt geändert?
Das sollte es jetzt eigentlich ändern.
Es braucht glaube ich ein bisschen bis es geändert ist.
Sagt mir mal Bescheid, wenn er das geändert hat.
Also ich habe es jetzt umgestellt im Dashboard bei mir auf Talkshow.
Ja, jetzt steht es auf Talkshow.
Ach gut, kann ich auch mitleben, sonst ist es jetzt eine Talkshow.
Ok, jetzt habe ich ganz vergessen wo ich stehen geblieben bin.
Genau.
Und hier würde ich sagen, brauchen wir jetzt, wie machen wir das jetzt am besten?
Also ich will jetzt sowas machen wie in Paint im Endeffekt.
Also von der Idee her ist das so, du wählst hier oben in der Liste, das machen wir gerade mal,
sodass man sich das besser vorstellen kann.
Hier oben gibt es eine Liste mit, vielleicht habe ich mir das auch zu einfach vorgestellt.
Hier oben gibt es eine Liste mit Prozessen, wo man dann auswählen kann.
Wir zeigen nur die Prozesse an, die auch ein Fenster haben, weil ich meine,
man kann nur Prozesse Screenshotten, die ein Fenster haben, alles andere wäre total bescheuert.
Also sprich wenn das nicht Null ist, also wenn das nicht leer ist, dann...
Ich browse IRL für...
Stimmt, bei IRL gibt es ja auch irgendwelche Mädels, die dancen dann eigentlich von der Webcam herum.
Die Kategorie Programming gibt es ja gar nicht mehr.
Es gibt Creative und dann kannst du Hashtag Programming setzen.
Allerdings Creative ist...
Creative guckt keinen Menschen rein.
Oh ja, String ist Null oder Empty, das können wir auch machen.
Warum hat String eigentlich nicht so etwas wie Empty?
Das können wir auch machen, das ist viel schicker.
Ist Null oder Empty?
Und das war's im Endeffekt.
Das schreiben wir jetzt in die Combo Box da oben rein. Wir machen auch hier To List, weil das Mark Combo Box sonst nicht.
Source? Ist das irgendwie Data Source?
Achso, sollte vielleicht noch richtig schreiben.
Und jetzt brauchen wir noch sowas wie...
Number? Wie ist das? Value Member? Genau, gleich.
Main Window Title.
Jetzt gucken wir mal, ob das funktioniert, ob es in der Combo Box was drin steht.
Achso, ja Moment.
Hier soll vielleicht noch was einbauen, damit ich das andere Fenster überhaupt starten kann.
Ja, funktioniert. Hier haben wir alle Programme drin, die im Fenster stehen.
So, und jetzt müssen wir eigentlich nur einbauen, dass man dann screenshotet, wenn man hier draufklickt.
Social Eating.
So.
Wisst ihr was? Ich stelle mal ein, dass ich dieses Fenster hier standardmäßig starte.
Und außerdem, das Allerwichtigste, was ich ja noch ganz vergessen habe, ist das Icon von dem Fenster.
Das ist wirklich absolut essenziell. Ohne Friesi-Lol geht nicht.
So, jetzt starten wir das, weil es hat ja keinen Sinn, wenn ich jedes Mal da draufklicken muss.
Ok, Refresh machen wir im Prinzip, reloaden wir einfach den Kram.
Ich meine, es kann ja sein, dass es irgendjemand auf hat, dann erst das Programm öffnen, dann kann er Refresh drücken.
Also im Prinzip, sagen wir hier, Refresh-Button.
Habe ich hier eigentlich meine, ah, ich habe hier gar nicht meine Template, meine Template-Sammlung installiert.
Also meine, äh, wie nennt sich das denn? Snippets oder so, bei Microsoft Publishers Studio.
Das heißt, muss ich das jetzt von Hand schreiben.
Ähm, Update, wie nennt man das? Update, keine Ahnung.
Refresh. Refresh.
Das ist aber Refresh, keine Ahnung.
So, jetzt müssen wir auch still mal das nennen.
So, da kommt nämlich der ganze Krampel rein.
Kann man das nämlich von mehreren Stellen aufrufen, ohne dass man das eklig copy-pasten muss.
Da muss man vorher noch Combo-Box setzen auf Null und danach kann man da wieder.
Sonst mag er das irgendwie nicht, habe ich so eine Erinnerung.
Und hier kann man dann sagen, Refresh Processes, ob das klappt.
Ja. So, und Refresh-Button macht er im Prinzip auch nur das gleiche.
Ah, Moment, macht er nicht.
Warum? Muss ich das doch nicht auf Null machen.
Okay. Auch gut, kann ich auch mitnehmen.
Zumindest funktioniert es.
Äh, Moment, Button 3, ich will nicht, dass es Button 3 heißt.
Nicht Button 3. Komm, da kann sich doch keiner merken.
Das Ding heißt Refresh-Button.
So, und das heißt dann auch nicht Button 3-Click, sondern Refresh-Button-Click.
So. Okay. Das funktioniert.
Jetzt kann man hier irgendwas auswählen, sondern wenn ich jetzt Capture drücke,
soll er mir einen Screenshot da unten reinmalen.
Also wenn ich jetzt Capture, Capture, keine Ahnung, mein Chrome,
hab einen Screenshot rein und dann, und das wird wahrscheinlich jetzt das bisschen Spaßigere,
ein bisschen komplizierter, dann will ich ja sowas machen wie hier in Paint,
dass ich hier dann quasi eine Region in diesem Screenshot oder,
theoretisch kann man auch beliebig viele Regionen machen, auswählen kann,
plus festlegen, nach was er in dieser Region eben den Screenshot mit Texterkennung untersucht.
Das probieren wir dann gleich mal aus.
Okay. Das heißt wir müssen jetzt erstmal den Capture-Button hier leben einhauchen.
Und zwar heißt das Ding ja nicht Capture-Button.
Oder dann heißt es irgendwie noch Button 2.
Das Capture-Button und onClick.
OnClick machen wir dann, ahja, wie kriegen wir jetzt den Prozess,
den ich hier oben ausgebildet hab?
Gibt sowas wie, play.
Ich nenne die Combo-Box auch nochmal um.
Combo-Box heißt nicht Combo-Box 1, sondern heißt Prozess-Box.
Find ich schicker.
Prozess-Box heißt das Ding.
Oh guck mal, das kann er so, krass, das kann er sogar hier oben nennen.
Das ist doch schön, dass er das mittlerweile automatisch macht.
Hallo Mr. Unlocker.
Ich guck mal kurz drüber, ob ich irgendwelche Fragen überlesen hab.
Ach nee, ich hab ja meinen Browser gefrescht, ich seh gar nichts mehr.
FeelsBadMan.
So, wenn ich den Capture-Button drücke, dann will ich...
Was ist denn?
Item?
Selected Item klingt gut.
Selected Item.
Warte mal.
Ok, ich krieg den Prozess raus.
Also im Prinzip, das was ich hier oben...
Also das heißt, das ist kein reiner Text, das ist schon noch das Prozess-Objekt.
Das heißt, ich kann jetzt eigentlich sowas hier machen, wobei das ja dann...
Das muss ich jetzt erstmal sagen, dass es auch ein Prozess ist.
Was ja nur ein Prozess sein kann.
Button-Capture.
Ja, die...
Wie nennt man das so?
Diese Guidelines und so, wie man das machen soll, das weiß ich...
Ich bin nicht zu sehr aus der Übung, was das angeht.
Aber BTN-Capture klingt mehr Microsoft-Windows-Formstyle, ja.
Aber ich lass das jetzt so.
Sonst muss ich jetzt wieder alles overlernen.
Ok.
Der Prozess überprüfen, ob es da wirklich so stimmt.
Dann kommt jetzt hier sowas raus, wie...
Ja, oder sowas wie das da.
Ja, genau.
So, und dann sag ich jetzt hier, Take Screenshot.
Nämlich unsere Extension-Method.
Kann ich jetzt genauso verwenden, wie wenn es zu dieser Screenshot-Klasse gehören würde.
Was natürlich ganz toll ist.
Dann erspare ich mir diese ganze eigene Screenshot-Klasse, die ich das letzte Mal zusammen gewurstet habe.
Und nun sagen wir einfach This.
Preview...
Moment, wie habe ich denn das Ding genannt?
Hab ich das noch überhaupt nicht genannt, kann das sein?
Picture Box.
Moment, habe ich jetzt eigentlich...
Das würde ich zum Beispiel ungefähr konsistent benennen.
Refresh.
Ich habe es alles groß geschrieben.
Ok.
Dann schreibe ich das hier jetzt auch groß.
Preview Box heißt das jetzt.
Zumindest an eine Sache sollte man sich halten.
So.
Preview Box.
Image.
Take Screenshot.
So, gucken wir mal, ob das funktioniert.
Wählen wir mal hier unseren Chromium, außer den Capture.
Ach, Moment.
Ha!
Der war minimiert.
Deswegen hat es nicht funktioniert.
Das müssen wir auch noch.
Das müssen wir auch noch gucken.
Wir wollen keine Programme, die minimiert sind, da drin anzeigen.
Weil minimierte Programme können wir nicht screenshotten.
Funktioniert.
Ok, nice.
Wir wollen noch einstellen, dass er zoomt.
Also irgendwas mit Mode hieß das Ganze.
Resize Mode Zoom.
Wenn ich das auf Zoom stelle, hat es den großen Vorteil.
Also wenn ich jetzt zum Beispiel das hier Capture, dann behält er das Seitenverhältnis
und sowas bei, wenn ich das jetzt noch richtig einstelle.
Denker.
Top Left.
Unten.
Mal mal den Schlüssel.
Capture geht ja nicht.
Ok.
Aber das funktioniert prinzipiell.
So.
Jetzt sag ich Refresh und dann holt er sich die neuen Sachen.
Können wir jetzt mal ausprobieren, ob das funktioniert.
Ich starte jetzt mal irgendwie keine Ahnung hier.
Kalk.
Oder so.
Kalk.
Und sag jetzt hier mal Refresh und dann ist da ja Rechner, der Calculator drinnen.
Das funktioniert.
Den Save Button habe ich auch noch nicht benannt.
Jetzt.
Hammer.
Die kriegen gleich noch irgendwelche schönen Icons dafür.
Ok.
Weiter im Text.
Das ist ja noch sehr übersichtlich.
Ich glaube jetzt wird es gleich ein bisschen komplizierter.
Weil ich will jetzt ja im Endeffekt das hier Capturing und dann wie in Paint quasi eine
Region markieren können, die für mich interessant ist.
Weil zur Erklärung, wozu das wichtig ist.
Ich will ja nicht das komplette Bild durch die Texterkennung jagen und nach einem Wort
untersuchen, sondern nur eine bestimmte Region.
Weil es kann ja durchaus sein, dass ich hier unten quasi eine Nachricht vom Auktionshaus
bekomme, dass eines meiner Items, die ich suche, registriert wurde.
Allerdings, wenn ich nach dem Itemnamen auch im Chat suchen würde, der dann hier ist, bei
einem MMO, dann würde ja laufend die Benachrichtigung anspringen, obwohl ich eigentlich gar nicht
benachrichtigt werden müsste.
Das heißt, ich muss jetzt irgendwie so ein Overlay malen.
Da bin ich mal gespannt, ob wir das gebacken kriegen.
Wird nicht so schwierig sein.
Schenkst du uns das Programm, wenn es fertig ist, klar.
Das kommt dann auf GitHub.
Die letzte Streamsession ist ja schon auf GitHub.
Das kommt auch einfach auf GitHub und das kann jeder verwenden, der es will.
Allerdings, sowas habe ich auch noch nicht gesehen.
Deswegen, ich bastle das ja nur, weil ich das selbst brauche.
Ich will nämlich eine Marketplace-Notification für BDO haben.
Ohne, dass ich irgendein Programm verwende, was als Bot gewertet werden könnte.
Also nicht, weil sie es nicht kennen, sondern weil es schlicht und gerade kein Bot ist.
Deswegen bastle ich sowas selbst.
Was passiert, wenn du versuchst, ein geschlossenes Fenster zu captchern?
Dann kackt es ab, würde ich jetzt mal vermuten.
Dann kackt es ab, weil der hat ja keinen Check drinnen.
Der sagt ja einfach nur hier das Ausgewählte.
Dann takest du das kackt ab.
Kannst du nicht einfach reinschreiben, refresh button, like this, refresh process?
Ne, das funktioniert nicht.
Oder ich glaube nicht, dass das funktioniert, weil das Event für Button-Click
explizit eine Methode haben möchte, die Object und EventArgs als Parameter möchte.
Deswegen wird das glaube ich nicht funktionieren.
Ok, du brauchst ja für dieses Click-Event.
Das Click-Event will ja explizit eine Methode haben, dass das Object und EventArgs als Parameter hat,
was der refresh process nicht hat.
Ist das nicht schwer, dass die das dann nicht als Bot erkennen?
Ich will das ja gar nicht verschleiern oder so.
Es ist kein Bot.
Das ist ja das worauf ich raus will mit der ganzen Sache.
Es ist ein stinknormales Programm, mit dem man Screenshots von anderen Programmen nehmen kann.
Und die gibt es hunderttausendfach.
Screenshot-Management-Programme gibt es hunderttausendfach.
Das ist nichts Verbotenes.
Du kannst ja ohne Probleme von jedem x-beliebigen Fenster einen Screenshot nehmen.
Das ist ja nichts Verbotenes.
Das darfst du ja.
Das kann ja auch keiner als Cheating oder Botting auslegen, wenn du einen Screenshot nimmst von einem Fenster.
Und ein Bot wäre es ja auch nur, wenn du quasi aufgrund dessen, was du siehst,
in der Ausgabe dann irgendwelche Inputs an das Programm schickst.
Machen wir ja nicht.
Wir machen einfach nur einen Screenshot von irgendeinem x-beliebigen Programm.
Das muss ja nicht mal ein MMO sein.
Wir machen einfach nur einen Screenshot von irgendeinem x-beliebigen MMO.
Und wenn man dann per Texterkennung in diesem Screenshot ein spezielles definiertes Wort findet,
dann kriegt man ein Popup oder eine E-Mail geschickt.
Fertig.
Das ist der ganze Sinn.
Also da ist nichts irgendwie interaktiv dabei.
Also sprich, du musst dann schon noch selbst zum Rechner gehen
und in den Marketplace oder in das Auktionshaus in dem Spiel gehen und das Item kaufen.
Du weißt nur per Popup oder Notification, dass das gerade gequeued wurde.
Dass das jemand gerade in Marketplace angemeldet hat.
Die Interaktion mit dem Spiel musst du komplett selbst machen.
Der Eax hat eine super Sache gerade geschrieben.
Das könnte man auch als automatischen Toxic Screenshotter verwenden für Overwatch.
Zum Beispiel, man sagt diesem Programm,
hey, screenshotte mal oder überwache mal meinen Overwatch Chat.
Also sprich, dann macht er alle fünf Sekunden oder so einen Screenshot vom Overwatch Chat
und guckt, ob in der Texterkennung sowas wie, keine Ahnung, fuck, shit,
was gibt es, was ist denn so die Standard-Overwatch-Trash-Drog-Geschichten vorkommen.
Und wenn er das Wort gefunden hat, dann macht er einen Screenshot und speichert ihn ab.
Dann könntest du ja theoretisch sogar so eine Overwatch Ranked-Q-Toxic-Historie basteln.
Und das Programm macht dann automatisch die Screenshots, nachdem der Prozess ausgewählt ist.
Ja, so ist das gedacht. Du suchst dir hier was raus.
Das haben wir das letzte Mal ja auch schon ausprobiert. Das funktioniert auch alles prinzipiell.
Wir müssen jetzt bloß noch die Oberfläche dafür basteln.
Du suchst dir hier das Programm raus, was läuft, markierst dir den Bereich
und legst dann fest, nach was du diesen Bereich quasi untersuchen willst, nach welchem Wort.
Jetzt müssen wir allerdings nur noch dieses Overlay-Gemale hinbekommen.
Da bin ich jetzt mal gespannt, wie wir das am besten machen.
Da müssen wir jetzt, da müssen wir immer selbst stricken.
Okay, aber im Ansatz funktioniert der Kram ja.
So, jetzt versuche ich mal, Overlay zu malen.
Da muss jetzt mal ein bisschen kreativ sein, wie wir das Ganze machen können.
Also, wir schnappen uns jetzt mal ein paar Events von der Picture Box.
Weil da wollen wir ja letztendlich drüber malen.
Weil wir wollen ja sowas hier machen, sowas wie hier in Paint.
Wir wollen ja Bereiche auswählen können auf dem Screenshot.
Und dann einstellen, für diesen Bereich untersuche das nach Wort sowieso.
Und wenn du es gefunden hast, mach ein Pop-Up.
Malen, wie Bob Ross, genau.
Da musst du dann aber auch den Devil bieten mit dem Pinsel.
Hab ich jetzt irgendwas, genau, da musst du ja dann auch, wie Bob Ross,
da musst du dann sowas hier machen.
Ich kann das nicht, weil ich hab hier nichts, um Bob Ross zu machen.
So musst du machen mit dem Pinsel.
Und danach musst du machen, oder so, so wie das Bob Ross halt immer macht.
So, gut.
Ripped Devil, genau.
Also, wenn ich auf der Arbeit auch so effektiv wäre, wie hier,
würde ich dafür wahrscheinlich kein Geld kriegen.
Quasi, in zweieinhalb Stunden gefühlte zwanzig Zeilen, oder so.
Okay, also von der Picture Box wollen wir jetzt folgendes.
Wir brauchen, wir brauchen Mausdown.
Also wir wollen jetzt hier sowas basteln,
dass wir selbst sowas hier malen können in unserer Picture Box.
Was das heißt, wir brauchen auf jeden Fall Paint Event.
Zum Malen.
So, dann brauchen wir Mausdown.
Man malt ja nur mit gedrückter Maustaste.
Dann brauchen wir Mausdown Event.
Maus.
Ab, ach nee, ich hab, ich hab.
Mausdown, genau.
Maus ab brauchen wir aber auch.
Und wir brauchen Maus Moved.
Also von der Idee her funktioniert das ja folgendermaßen,
sowas hier zu malen.
Du, du, lausch drauf, wenn Maustaste gedrückt wird,
dann setzt du nen Fleck, so nach dem Motto, irgendwie Mausdown, oder so.
Und dann sagst du in deine Move Event,
if Mausdown und Moved, dann malst du halt bis zu dem Punkt,
wo es gemovet wurde, dein, dein Rektangel.
Zumindest stell ich mir das grad so vor.
Okay, das heißt wir haben jetzt Paint,
Maus up, Maus down und Maus Moved brauchen wir auch noch.
Patrick, das ist, ich hab hier so nen,
so nen Stofflappen, den ich gegen die Tischkante geschlagen hab.
8 Inches.
Okay, mal testen, ob das Malen funktioniert.
Wir malen malen ein schwarzes Rechteck drauf, sonst nix.
Und dass ich die Dinger Painter nehme,
Painter nennt er so nen Tick von mir,
das hab ich aus Cute, da heißt das alles Painter.
Irgendwie gefällt mir Painter als Bezeichnung am besten.
Dann muss ich noch mal gucken, wie man transparent malt.
Wie das überhaupt geht mit dem Windows Zeug.
Draw Rektangel und zwar mit Black.
Und wir malen von oben links, das ist wieder das,
was ich vorher erzählt hab, diese Koordinaten
beziehungsweise die Angabe von wo startet man
und dann quasi breite Höhe, das ist überall so,
total oft, wir machen von oben links malen,
wir malen dann 200 mal 200 Pixel schwarzen Rahmen jetzt.
Gucken, ob das funktioniert.
Bam, da isser.
So, sowas wollen wir malen, allerdings nur,
wenn wir die Maus quasi gedrückt halten und ziehen.
Dann wollen wir sowas hier machen, so wie das hier ein Painter eben auch ist.
Ups.
So, also das Malen funktioniert.
Jetzt müssen wir mal gucken, wie malt man denn transparent.
Fill Rektangel, Brushes Black.
Wir machen jetzt mal nicht nur einen Rahmen,
sondern mal komplett schwarz.
So, und das würde ich jetzt gerne transparent malen,
dass man den Hintergrund auch ein bisschen durchzieht.
Weil es wäre ja bescheuert, ich mach nen Screenshot von,
sagen wir mal hier im Chrome und wenn ich was drüber male,
sehe ich nichts mehr, was dahinter ist.
Das heißt eigentlich will ich sowas durchsichtiges drüber malen.
Sonst malst du auf dem Screenshot,
ich will doch auf dem Screenshot malen,
ich will doch sowas hier machen.
Sowas hier, sowas wie Paint macht.
Das ist Absicht, dass ich über den Screenshot male,
das will ich ja gerade.
Ich muss jetzt nur gucken, ist die laut oder?
Och nö, passt eigentlich.
Ich muss jetzt nur gucken, wie ich einen transparenten Brush mache.
Sowas.
Das muss ich, das brauchen wir mal, Google.
Hier mache ich, genau das.
Ah, so funktioniert das.
Easy clap.
Siehste?
Es darf sich nicht zu schade sein, eine Runde zu googeln.
So und jetzt malen wir nämlich mit diesem Brush
und jetzt sollte das durchsichtig sein.
Jetzt sollte das durchsichtig sein.
Gucken wir mal, ob es durchsichtig ist.
Es ist durchsichtig, es funktioniert.
So skaliert sich das bei Fenstergrößen aber nicht mit.
Das stimmt, da habe ich noch gar nicht schon gedacht.
Das ist natürlich ein bisschen doof.
Auf der anderen Seite, das ist nicht schlimm,
beim Malen will ich es ja bezogen auf die Fenstergröße haben.
Ich muss es dann bloß irgendwie speichern,
weil ich muss es ja quasi bei jedem Refresh neu malen.
Da muss ich dann gucken, dass ich es richtig skaliere.
Das heißt, wenn ich mir das abspeichere,
wo sich das Overlay befindet, dann darf ich mir das nicht merken
in Koordinaten zu dem Control, weil das Control ist ja in dem Fall
bloß dann 500 mal 500 oder so, sondern das muss ich mir merken
relativ in Koordinaten zu dem Screenshot.
Da muss ich mal ein bisschen ausprobieren.
Aber das kann ich danach machen.
Jetzt will ich erst mal gucken, wie man da überhaupt ordentlich
was drauf malen kann.
Das ist so ein typischer Fall von, das hast du jedes Mal.
Du denkst dir eigentlich so, im Prinzip ist es doch simpel,
du machst eine Anwendung aus zwei Fenstern,
auf einen kannst du was auswählen und dann schickst du dir eine Message.
Das klingt so eine Sache wie easy, in einer Stunde ist das fertig,
aber dann fallen zwischendrin so Dinge auf,
wie die doch eine ganze Ecke komplizierter sind
und wahrscheinlich doch wieder zwei, drei Tage brauchen.
Das müsste jetzt grau sein oder so was, ja.
Grau, das ist auch das Schöne, das gefällt mir vom Overlay her.
Also quasi schwarz und dann halt durchsichtiges Schwarz,
es gibt dann aber ja irgendwas Graues.
Okay, das klappt.
Nee, das Fenster skalieren will ich nicht, Mr. Unlocker.
Ich will den Inhalt skalieren, Fenster skalieren ist immer doof.
Das ist für den User auch total bescheuert,
wenn du dann hier oben was durchswitcht oder so
und das Fenster ändert sich die ganze Zeit in der Größe,
der Inhalt muss sich ändern.
Das muss man dann relativ quasi zum Screenshot speichern,
das kriegen wir schon irgendwie hin.
Es gibt ja hier in diesem Drawing Namespace,
gibt es ja zig Funktionen, die einem helfen,
irgendwie Koordinaten von einem Bild
zu Koordinaten vom anderen Control und sowas umzurechnen.
Das kriegen wir schon irgendwie hin.
Aber als erstes muss ich mal gucken,
wie man da drauf überhaupt was ordentlich malen kann.
Kann ich das Ding irgendwie überreden,
dass das mit einem...
Dass das mit einem Screenshot vielleicht startet schon?
Egal.
Jetzt muss ich erstmal kurz mir überlegen,
wie kriege ich das hin, dass ich das male?
Das heißt, ich brauche hier auf jeden Fall schon mal...
Also das machen wir mal weg,
weil wir wollen ja kein statisches,
wir wollen ja was haben mit der Maus.
Also Maus down.
Wenn Maus down, muss ich mir das irgendwie merken.
Und zwar nur, wenn Left-Maus down ist.
Also Buttons.
Wenn die linke Maustaste gedrückt wird.
Wohlgemerkt down.
Wo habe ich denn ab? Genau.
Wenn die linke Maustaste...
Wenn die linke Maustaste gedrückt ist...
Also ich würde sagen, wir müssen uns das ja erst mal merken,
wo die Maustaste runtergedrückt ist.
Wenn man sich das mal überlegt, wie das Paint hier...
Also ich merke mir quasi den Punkt, wo ich klicke,
damit ich dann quasi bei jedem Frame malen kann
von der Position, wo Maus-Button ursprünglich geklickt wurde
zu wo Maus jetzt gerade ist.
Und dann kriege ich dann Rechtseck dazu raus.
Und in die andere Richtung muss ich dann halt gucken,
was weiter links ist und weiter oben.
Also sprich, Click-Position oder Jetzt-Position.
Also ich muss mir erst mal merken...
Normalerweise würde ich das jetzt alles oben hinschreiben,
aber das ist mir eh schon gerade ein bisschen voll,
obwohl es erst 70 Teil sind.
Das ist ja nichts für so ein Control.
Also ich muss mir jetzt erst mal merken,
so was wie hier Point,
nennen wir das mal hier Click-Location.
So, das heißt, wenn die linke Maustaste gedrückt wurde,
innerhalb von diesem Control,
dann speichere ich mir die Location, wo ich gedrückt habe.
Geben wir uns jetzt mal aus,
ob das prinzipiell funktioniert, was ich da mache.
Genau, guckt.
Oben links, oben links ist 00.
Wenn ich oben links treffe, aber ihr seht es,
oben links ist 00.
Und hier unten dann je nachdem, wo ich halt bin.
Okay, das funktioniert.
Also das ist dort, wo ich Maus...
Wie gesagt, hört mal, wo ich Maus Down mache.
Ihr seht, Maus Down und jetzt Up.
Also sprich, das wird ausgelöst beim Drücken der Maustaste.
Ähm...
Okay, Maus Down, das merke ich mir jetzt.
Ähm... dann, wenn Maus Down ist,
dann muss ich merken, wenn Moved...
Wenn Moved...
Kann ich diese Location...
Nee, ich komme, ich mache mir noch eine andere Variable.
Also quasi...
Ähm...
Selecting oder sowas.
Also sprich, wenn ich gerade dabei bin, was zu selectieren,
dann will ich darauf lauschen, wenn Maus Moved ist.
Und dann...
Nee, an der Stelle muss ich gar nichts machen.
Maus Moved brauche ich nicht.
Ich muss im Paint Event...
Im Paint Event muss ich jetzt einfach nur schauen...
Im Paint Event muss ich jetzt eigentlich einfach nur malen.
Das probieren wir jetzt mal aus, ob das funktioniert.
Einfach nur malen.
Von der Stelle...
Machen wir mal hier weg.
Von der Stelle...
Von der Stelle, wo ich angefangen habe, und das ist in dem Fall...
Click Location X, Click Location X und Click Location Y.
Und an der Stelle male ich jetzt einfach mal eine Kiste, die 200 mal 200 ist.
Also quasi, ich klicke jetzt irgendwo...
Ah, ja gut, das ist startmich 00.
Da passiert aber nichts.
Ja, und ich male das Ganze natürlich auch nur, wenn...
Ich dabei, wenn ich was malen soll, wenn ich die Maustaste vorher gedrückt habe.
Warum macht der nichts?
Der müsste jetzt eigentlich was machen.
Das müsste funktionieren.
Warum klappt das nicht?
Gehen wir mal irgendeinen Scheiß aus und gucken, ob das...
Ah!
Ach so, natürlich, das kann ja nicht funktionieren.
Der refresht das Ganze ja nicht.
Ja, guck, sobald er den Inhalt refresht, dann malt er das Ganze auch.
Das heißt, ich brauch doch das Maus Move Event.
Und zwar will ich sagen, wenn er am Selectieren ist, dann will ich das Ding neu malen.
So, und jetzt sollte das eigentlich klappen.
Ich klicke jetzt rein und es kommt genau, es kommt an der Stelle, wo ich hingeklickt habe,
ein 200 mal 200, also linke obere Ecke, ein 200 mal 200 große Kiste.
So, das ist ja schon mal die halbe Miete bei der ganzen Sache.
Jetzt muss ich nur noch im Paint Event eigentlich gucken, wie weit bin ich von der Stelle.
Also wenn ich hier klicke, wie weit bin ich zwischen Klick und jetzt?
Mr. Unlocker, nee, ich will das nicht beim Maus Up machen.
Ich will ja, während ich, so wie bei Paint, so während ich geklickt halte, will ich dir das malen.
Im Maus Up Event muss ich es dann irgendwo speichern, so nach dem Motto, jetzt ist fertig.
Und dann muss ich auch Selecting und Dings hier und Location und so wieder auf Null setzen im Up Event.
Okay, das heißt, wir malen jetzt keine 200 mal 200,
sondern wir malen jetzt quasi von da, kann man auf die Microsoft Seite gucken,
da ich jetzt echt gut euch zwei Bildschirme habe.
Okay, also, das heißt, von der Idee her will ich jetzt ja an der Stelle eigentlich sagen.
Ach nee, ich muss hier erstmal, Moment, ich muss mir erstmal rauskriegen,
wie die aktuelle, also quasi, Maus Location ist.
Wie kriege ich denn die aktuelle Maus Location relativ zu dem Control raus?
Google, FTW.
Control, Maus Position, okay, gibt es nicht, okay, weil ich will ja auch Preview Box,
Maus Position, gibt es nicht, okay, Get Cursor Position with respect to Control, genau das will ich haben.
Nein, ah, Point to Client, das klingt gut.
Point to Client, Location of Specific Screen Point into Client Coordinates.
Okay, Client Coordinates sind die Koordinaten von dem Control,
das heißt, das klingt genau nach dem, was ich haben will.
Und da muss ich jetzt eigentlich nur noch sagen, wie kriege ich denn,
wie kriege ich denn die aktuelle Maus Position raus?
Ah, Moment, Moment, Moment, Moment, das ist das Esthetic, das ist, das ist, warte mal, ah, da ist es doch.
In Screen Coordinates, ah ja, genau, genau das will ich doch haben.
Genau das will ich doch haben.
Das ist jetzt die Maus Koordinaten für den gesamten Bildschirm
und die will ich umrechnen zu Maus Koordinaten für dieses, für dieses Control.
Also quasi, so, ne, das war's, mehr brauch ich nicht, selber das ganze Maus Location.
Das klingt jetzt erstmal logisch, was ich da mache, ne, finde ich jetzt.
Ich finde, das klingt erstmal logisch.
So, Maus Location, und jetzt will ich das ganze malen.
Ist das JavaScript, ne, das ist die Sharp.
Und jetzt will ich das malen bis Maus Location, ne, das funktioniert nicht.
Das funktioniert, umso weiter ich rechts gehe, umso größer wird das Ganze dann.
Das muss ich abziehen voneinander, aber ich probiere das jetzt mal kurz aus.
Ha, seht ihr, guckt mal Leute.
Es, es, es funktioniert schon fast, fast funktioniert das Ganze, nicht so richtig, aber fast.
Ich muss jetzt bloß noch das eine vom anderen abziehen.
Ne, Negativ wird nicht funktionieren.
Negativ geht nicht.
Negativ müsste ich dann hier vorher abfragen, quasi was größer und kleines.
Aber das ist ja eh noch nicht der Weisheitsletzter Schluss hier.
Ich muss das glaube ich erst noch voneinander abziehen.
Also ich muss hier quasi sagen, so muss die Maus Location X minus Click Location X, quasi jetzt Y.
Dann sollte das ein bisschen näher an das dran kommen, was ich eigentlich machen will.
Ja, oh das ist schön Leute, guckt mal, genauso wie ein Paint.
Nur, dass noch nichts passiert, wenn ich die Maus-Taste loslasse.
Ne, aber es ist genau das hier.
Negativ funktioniert nicht.
Negativ muss ich vorher quasi abfragen, was größer von beiden ist.
Das machen wir aber gleich noch, das kriegen wir hin.
Ich will das mal so malen.
Ok, das heißt wenn Maus ab, wenn Maus ab, dann Selecting ist False und das Maus Location,
oder wie habe ich das Ding jetzt noch mal genannt?
Ich habe ganz vergessen, Click Location, das ist eigentlich logisch.
Click Location ist wieder, keine Ahnung, irgendwas.
Eigentlich muss ich das gar nicht resetten, weil ich gucke immer nur ob Selecting.
Ok.
Ja, das funktioniert.
So, die nächste Sache wird jetzt sein.
Das muss ich mal kurz überlegen.
Also, ich kann jetzt ja irgendwo auswählen, das Screenshotten und dann sagen,
hey, mich interessiert diese Region hier drauf.
Oder die, oder die.
Aktuell kann man nur einen machen.
Und es funktioniert auch nicht so richtig.
Es funktioniert nur, wenn ich das langsam genug mache.
Das heißt, da muss ich doch mal gucken.
Ach so, ja klar.
Funktioniert das nur, wenn ich das langsam genug mache.
Genau so, ich wollte es gerade sagen, choose my name,
ich muss mir merken, was da Sache ist.
Ich brauche hier noch so etwas in der Richtung wie,
zeig mal, sowas da.
Rectangle, schreiben wir hier Current Selection.
Sowas hier brauchen wir noch.
Und das fallen wir uns dann hier runter.
Da muss ich das nämlich merken.
Ja, Patrick, bis denn.
Genau, und das können wir uns dann hier speichern.
Was trinkst du an?
Okay, haben wir den Kreppel hier mal kurz raus.
Haben wir sowas wie Selection.
Ich meine, das ist jetzt noch kein großer Unterschied.
Ich muss mal kurz gucken, ob das da prinzipiell noch tut,
was ich da mache.
Okay, dann bin ich schon on.
Ich merke langsam, dass ich ein bisschen schwierig kann,
mich so zu konzentrieren.
Ja, zwei Stunden.
Okay, das sollte jetzt die gleichen Probleme haben wie vorher.
Genau.
So, und jetzt, genau, genau, was ich jetzt brauche ist,
ich will das malen, wenn es, während ich,
während ich dann den Kram selektiere.
Aber, was ich ja noch sonst, ich muss mir das merken, das Ding.
Genau, ich brauche hier oben noch quasi sowas,
wo ich mir merke, was ich schon für, für Dinger gemalt habe.
Also, ich brauche hier oben drüber noch was, was noch mal malt.
Und zwar alles das, was ich vorher schon mal gemalt habe.
Oder?
Also, ich müsste mir quasi den Kram hier irgendwie merken.
Dann kann ich auch mehr als eins malen.
AC Sharp und Garbage Collector, ja.
Der kommt dann manchmal auch ins Gehege.
Vor allem, wenn du, wenn du Sachen hast,
wo du ganz viel,
also wo du schnell viele Objekte erzeugst.
So.
So, und jetzt malen wir den Kram nochmal.
Und im Maus, im Maus ab, speicheln wir das Ganze einfach.
So machen wir das.
Das klingt, das klingt doch gut.
Im Maus ab sagen wir,
Add Current Selection, quasi Disoverlay, Add Current Selection, im Maus ab.
Und ich male einfach alle Sachen, die ich vorher hatte, hier hin.
Mal gucken, ob das von der Idee her so passt.
Komm, man kann die sogar auch übereinander malen.
Funktioniert.
Okay, negativ funktioniert auch nicht.
Das muss ich mir noch überlegen.
Also, das klappt.
Das finde ich schon mal ganz gut.
Das wird eh noch ein bisschen komplizierter,
weil ich mal jetzt quasi relativ zu dem, zu dem Picture Box.
Control.
Ich will allerdings relativ zum Screenshot im Picture Box Control malen.
Negativ kann nicht funktionieren.
Also negativ geht glaube ich erst,
weil ich sage ja immer,
die Startposition ist immer dort, wo ich geklickt habe.
Wenn ich das hier voneinander abziehe.
Stimmt, eigentlich sollte das funktionieren.
Eigentlich sollte das funktionieren,
weil dann wird doch irgendwann, da kommt hier Minus raus.
Also quasi, wenn die Mauslocation so ist.
Das müsste eigentlich funktionieren, oder?
Ja, eigentlich sollte das funktionieren.
Passiert aber nicht.
Ah, ich glaube, ich weiß warum das nicht funktioniert.
Wahrscheinlich will Phil Rectangle das nicht.
Also von der Idee her müsste ich ja dann quasi,
wenn ich negativ will, müsste ich ja,
wenn ich negativ male, genau,
dann müsste ich hier anfangen zu malen bis zu Click Location.
Das klingt, ja, das klingt besser.
Ich probiere das gerade mal aus, wenn ich das umdrehe.
Wenn ich jetzt sowas hier mache,
dann sollte es nur noch in die andere Richtung funktionieren.
Wow.
Äh, nope, habe ich das verkehrt gemacht.
Die Musik ist, das liegt daran, dass die Musik ausgelaufen ist.
Das machen wir jetzt an.
Skyward Sword machen wir jetzt an.
Da muss ich mir jetzt mal kurz Gedanken drüber machen.
Also wenn das jetzt funktioniert, ist klar.
Ich fange hier an zu malen.
Warum löscht du deine alten Rectangles?
Also wobei, ja, ich male die jedes Mal neu.
Stimmt schon.
Aber vom Ansatz her ist das schon mal nicht schlecht.
Das tut.
Okay, was passiert, wenn man eine Anwendung im Hintergrund,
Screenshot haben wir gerade gesehen.
Man kriegt einen schwarzen Fenster, einen schwarzen Balken.
Okay.
Ach, das braucht nicht viel.
Guck mal, das sieht man ja hier.
Guck mal, die CPU-Auslastung, das ist nix.
Das juckt den überhaupt gar nicht.
Außerdem ist das eh nur Single-Thread.
Also das ist, das kann nicht großartig mehrere Kerne verwenden.
So, Ingemann hat was Gutes eben geschrieben.
Das klang mir sinnvoll.
Genau, Marth Min für Startposition nehmen und...
Jaja, das klingt gut.
Das machen wir jetzt mal.
Das machen wir mal genauso, wie er das gesagt hat, damit das schon funktioniert.
Probieren wir das mal so.
Marth.
Also quasi für Startposition, für StartX, StartY.
Gucken wir mal, ob das so dann tut.
Ich muss dann aber auch demnächst Schluss machen.
Ich kann mich schon immer richtig konzentrieren.
Was ist kleiner, das oder...
So was?
Nee, warte mal.
Das muss ich jetzt erstmal kurz Gedanken drüber machen.
Also, wenn ich...warte mal.
Genau, also.
Wenn ich nach unten male, ist das ziemlich einfach.
Dann ist das hier Klickposition Punkt und das ist Stopposition.
So, wenn ich jetzt nach links male...
So, wenn ich das jetzt nach links male, dann brauche ich ja quasi...
Ich muss ja immer, ich bestimme ja beim Starten immer die obere linke Ecke,
wo ich anfange zu malen.
Und die obere linke Ecke ist ja in dem Fall dann nicht mal Klickpunkt, sondern...
Ja, sondern eigentlich das hier.
Quasi Klickpunkt minus...
Nee, warte mal.
Mouse Location.
Ah, solche grafischen Sachen sind immer übelst kacke.
Da muss man sich ein volles Gehirn zerbiegen.
Also...
Das hier ist Klickpunkt, wenn ich nach unten rechts male.
So, und wenn ich das nach oben links male, dann ist dann quasi Klickpunkt...
Das ist dann Mouse Position...
Nee.
Das ist Mouse Position minus...
Minus Klick...
Nee, das ist Klick minus Mouse Position dann.
Klick minus Mouse Position müsste das sein.
Das müsste eigentlich, also von der Idee her müsste das doch eigentlich genauso funktionen.
Also der Startpunkt ist dann quasi...
Quasi Klick minus Mouse Location, oder?
Nee.
Umgedreht?
Ich kann grad nicht richtig denken.
Nee, das andere war schon okay.
Aber das stimmt nicht.
Dann würde ich, dann würde ich...
Ich muss oben links mit auf Null kommen.
Oder?
Oh, ich kann nicht mehr denken, Leute.
WTF.
Das ist so ein typisches Problem, wenn man da mal in Sicht geht, ist das eigentlich total simpel.
Ich mach das jetzt mal neu.
Woops.
Was mach ich denn da?
Wir fangen jetzt hier an.
Nee, da fangen wir an.
Ich muss das grad mal ausprobieren.
Ach.
Warte mal, warte mal.
Nee, das kann ja so nicht funktionieren.
Ich fang dann da zwar...
Nee, warte mal, ich fang ja an der ganz falschen Stelle an.
Warte mal.
Ob ich weiß woran es liegt.
Nee, ich will da jetzt selbst drauf kommen.
Warte mal, das kann ja nicht so schwer sein.
Ey, Alter.
Ich will... Wo muss ich denn anfangen?
WTF. Das kann so nicht sein.
Also.
Wenn ich jetzt hier anfange zu malen.
Wenn ich jetzt hier anfange zu malen, dann ist das hier klick.
Und wenn ich jetzt nach oben links gehe,
dann ist Maus Position.
Ich bin grad nicht in der Lage nachzudenken, richtig.
Vor allem, wenn mir 100 Leute so kaum ich auswolle.
Das ist total simpel eigentlich.
Was ist ein Sternzeichen?
Ich bin im August geboren und bin Schlöver.
Nein, ich muss nicht bei Maus Location anfangen.
Ich muss immer oben links anfangen.
Und wenn ich von Maus Location nach oben links male,
ist oben links anfangen halt nicht Maus Location.
Obwohl, doch.
Oben links ist Maus Location.
Oben links ist Maus Location.
Klar.
Oben links ist Maus Location.
Genau.
Genau.
Oben links.
Das ist doch richtig.
Oben links ist Maus Location.
Immer.
Wenn ich nach unten rechts gehe, ist es Click Location.
Und wenn ich nach oben links gehe, ist es logischerweise Maus Location.
Ich muss an Maus Location anfangen und dann runter malen bis von Maus Location zu Click Location.
Ja, fast.
Aber wir kommen da Sache schon näher.
Ja, wenn ich nach oben rechts gehe, dann muss ich wirklich gucken, was davon größer und kleiner ist.
Ich muss hier erstmal checken, was ich prinzipiell jetzt machen muss.
Moment, kann ich sein, dass ich X und Y vertauscht habe?
Das ist eigentlich richtig.
Wollte ich das andersrum machen?
Ich muss das Plus rechnen.
Aber Maus Location plus Click Location klingt doch...
Warum funktioniert das jetzt nicht?
Hä?
Ich kann nicht mehr denken, Leute.
Ich mache Schluss.
Ich muss mir da mal in Ruhe Gedanken drüber machen.
Das ist auf jeden Fall nichts Sonderlich Kompliziertes.
Aber ich kann gerade nicht großartig mehr nachdenken.
Ich putze jetzt mal meine Roulade fertig.
Ich will jetzt auch selbst drauf kommen, anstatt mir irgendwas aus dem Chat rauszuprobieren.
Da muss ja nichts hin und weg da rachen.
Von der Idee her ist es doch ganz simpel.
Es gibt 30 Millionen Varianten, wie man das machen kann.
Maus Location ist 100.
Das hier ist Maus Location.
Und Click Location ist 50.
Und dann male ich.
Ach nee, Moment mal.
Click Location ist nicht 50, das ist doch Schwachsinn.
Click Location ist 150, also Click Location ist in dem Fall ja weiter rechts.
Deswegen funktioniert das Ganze auch nicht.
Deswegen muss ich dann wahrscheinlich sagen, Click Location minus Maus Location.
So und jetzt können wir das andere machen.
Jetzt können wir natürlich gucken, wenn das eine größer als das andere ist.
Das funktioniert.
Das ist eigentlich ganz logisch, schauen wir mal, wenn ich das mal aufschreibe, funktioniert das?
Richtig klappt.
Also manchmal ist das gar nicht verkehrt, man schreibt sich eigentlich erst mal auf, was da eigentlich Sache ist.
Das ist also ganz simpel.
So, ups.
Jetzt kann ich sagen, Start.
Entweder das oder das, je nachdem was größer ist.
Also quasi das da oder das da.
Also, die Musik, was ist das?
Wie wäre es mit einem Papp?
Ja, ganz bestimmt.
Jetzt muss ich mir nur noch hier was von überlegen.
Aber das funktioniert prinzipiell.
Mal schauen.
Okay, jetzt müssen wir gucken, dass wir entweder.
Okay.
Ja, das klingt logisch.
Das haut doch im Endeffekt das Vorzeichen einfach nur weg, ne?
Ich mach jetzt aber das, was der Chat sagt, mal gucken, ob das funktioniert.
Ich mach ungern Sachen, wo ich nicht drauf gekommen bin.
Fuck, das funktioniert.
Das funktioniert.
Ich kann markieren.
Ja gut, im Prinzip ist das sogar ganz logisch.
Das schmeißt einfach nur das Vorzeichen weg.
Also sprich, wenn das Minus ist und in die Richtung geht, dann kommt dann halt was Positives raus.
Und wenn es eh schon ins Positive geht, bleibt es halt positiv.
Das ist von der Idee her eigentlich total logisch, dass man das so machen kann.
Da muss man sich halt ein bisschen Gedanken zu machen.
Easy, so muss das sein.
Dass es uns jetzt wirklich viel bringen würde.
Aber es klappt, so, Capture.
Ach so, ja, das Wichtigste hab ich ja vergessen.
Ich hab irgendwo vergessen, das da hier oben.
Das da muss dahin.
Muss dahin.
Und das wird gemalt.
Ja.
Funktioniert, perfekt.
Wie in Paint.
Da hat es einen Grund, dass ich extra Variablen praktiziere.
Das war erstmal, dass ich durchblicke, was ich da eigentlich treibe.
Und auf der anderen Seite finde ich, ist das sogar noch ganz gut lesbar.
Weil ansonsten müssen wir ja quasi den ganzen Mist hier reinschreiben.
Aber wir können mal ein neues C Sharp Feature verwenden.
Jetzt mal.
Geht das mit Rectangle überhaupt?
Genau, man kann jetzt ja Objekte auf so initialisieren.
Das gibt es ja seit ein paar Versionen.
Kann man dann jetzt quasi sagen, Rectangle X gleich.
Kann man das dahinschreiben.
Das ist dann nämlich viel, viel schicker.
Y gleich.
Da kann man die ganzen Krams wegmachen und es sieht übersichtlicher aus.
Man muss dann, komm mal machen.
Kannste nämlich sagen, With.
Komm mal.
Kann man glaube ich weglassen.
Das ist jetzt viel schöner.
Und es geht immer noch.
Und jetzt machen wir noch was ganz krasses.
Jetzt machen wir rechte Maustaste, lösch den Scheiß wieder.
Das dürfte nicht so schwierig sein.
Aber sogar noch eine Idee für.
Okay.
Das finde ich schon mal dann schlecht.
Auch wenn das so viel aussieht.
Das sind erst mal 90 Zeilen mit vielleicht 20 sinnvollen Zeilen.
Also das ist cool.
Das gibt es seit C Sharp 4 oder so.
Du hast jetzt quasi Objekte, die einen Konstruktor haben, ohne Parameter.
Ich glaube es geht nur dann.
Kannst du quasi initialisieren lassen und danach die einzelnen Felder direkt zuweisen.
Gleich in einem Schritt.
Max kennst du Dr. Disrespect?
Klar, kenn ich.
Streamt er wieder.
Das letzte was ich von ihm gesehen habe ist.
Wo er gesagt hat, er hat seine Frau betrogen und streamt jetzt nicht mehr.
Ja, das stimmt.
Dat Charakter.
Charakter.
Das komplizierte was ist immer.
Vor allem wenn man nicht täglich irgendwelche Grafikgeschäße macht.
Du hast ja da 50 verschiedene Koordinaten in unterschiedlichen Bezugssachen.
Und so immer parallel.
Wo du dran denken musst.
Und vor allem.
Wo mein Denkfehler war ist.
Dass ich nicht plus rechnen muss, sondern minus.
Weil ja rechts weiter weg ist.
Vom linken Rand.
Wie voll.
Das habe ich nicht gecheckt.
Welche Programmierspur ist das C-Sharp?
Wer C-Sharp lernen will.
Ich weiß nicht ob es das noch gibt.
Gab es früher immer.
Als die Leute immer empfohlen das Galileo Open Press oder wie das hieß.
Es heißt jetzt nicht mehr Galileo.
Es heißt jetzt Reinwerk Computing.
Das Open Book zum Beispiel C-Sharp.
Gibt es da eine neuere Version von?
Ne nicht das. Das ist alt.
Ja genau das hier.
Das habe ich den Leuten früher immer empfohlen.
Ich weiß nicht ob das zurzeit noch das beste ist.
Um C-Sharp zu lernen.
Es ist ja schon ein paar jährchen alt.
Aber man muss sagen.
Das was man quasi für C-Sharp 2017 lernt ist auch heute noch relevant.
Da muss man sich halt noch mal angucken was was neues dazu gekommen ist.
Aber das ist echt gut.
Das kann man empfehlen das Buch.
Wenn man damit neu anfängt.
So.
Gut.
Jetzt haben wir das auch hingekriegt.
Jetzt können wir Sachen selektieren wie bei Paint.
Und können uns freuen.
Was war man jetzt noch?
Ich habe doch gerade irgendwas gesagt.
Genau wir wollen das was man noch löschen kann.
Das müsste von der Idee her eigentlich relativ simpel gehen.
Dass man das löscht.
Wir machen im Maus Down Event.
Ne im Maus Up Event gucken wir einfach.
Wir gucken im Maus Up Event einfach ob rechte.
Wir löschen mit rechter Maustaste.
Wir machen es mal ganz simpel.
Wir löschen mit rechter Maustaste.
Also sprich mit linker Maustaste erstelle ich hier rechte mit rechter Maustaste lösche ich hier rechte.
Also das heißt wir machen jetzt hier beim Maus.
Machen wir Maus Up.
Hallo?
Wo ist denn mal Maus Up?
Ich kann schon gar nicht richtig gucken da.
Maus Up Event sagen wir erstmal.
Wir machen diesen ganzen Krempel hier erstmal prinzipiell nur.
Wenn das überhaupt an ist.
Ansonsten mache ich das ja jedes Mal mit Maus Up.
Was eine total behemmerte Idee ist.
Nur dann machen wir das.
Und dann sagen wir als If.
Wenn Button rechtsklick ist der andere Fall.
Right und hier sagen wir natürlich wenn Selecting und und Button left.
So wenn rechts ist.
Und jetzt machen wir Trick 17.
Ich habe eine gute Idee.
Ich muss schon mal überlegen wie ich das jetzt am besten mache.
Wir sagen jetzt quasi wir gucken ob ein Punkt in einem der Rechtecke liegt.
Die wir haben.
Also sagen wir hier das.
Overlays.
Find.
Gibt es sowas?
Jetzt haben wir hier find, find all, find index, find last.
Klingt gut.
Wir wollen ja das letzte.
Weil von der Logik her ist es ja so.
Wir wollen.
Ich hoffe das stimmt jetzt am Ende auch.
Wir wollen ja was immer angenommen.
Ich habe jetzt hier sowas gemalt.
Also quasi das ist das untere.
Das ist das mittlere.
Und das ist das ist das obere.
Das heißt wenn ich jetzt hier rechts drauf klicke will ich ja nicht das das entfernen.
Sondern das obere.
Und das obere ist im Prinzip das was zuletzt in meinem Array drin steht.
Oder in meiner Liste drin steht.
Wieso schreibst du immer das davor?
Weil ich muss ich nicht muss ich nicht.
Es gibt da zwei.
Zwei Philosophien.
Es gibt einmal das wie ich das mache.
Dass man für interne Sachen.
Also für Klassen.
Variablen.
Immer das davor schreibt.
Dass man halt sieht.
Stell dir mal vor du hättest hier eine Funktion die ein bisschen länger ist.
Und ich würde es einfach nur so hinschreiben.
Dann siehst du nicht direkt ob das jetzt overlay ist.
Es sei denn du machst die Maus drüber.
Ob das overlay hier eine lokale Variable ist.
Oder ob das overlay eben von der Klasse kommt.
Deswegen schreibe ich das davor.
Dann gibt es die andere Sache.
Die man relativ oft sieht.
Auch intern in irgendwelchen.
Wenn du mal die Source Code Geschichten von.NET anguckst.
Die machen das so.
Die machen das so.
Die nennen ihre privaten Klassen.
Member.
Fields.
Immer Unterstrich.
Das gefällt mir aber nicht.
Deswegen schreibe ich immer das davor.
Für allem was sich auf die Klasse selbst bezieht.
Weil ich da in sich bin man sieht es einfach besser.
Da muss ich jetzt nicht gucken.
Ob es hier eine Variable gibt die overlay heißt.
Nein ich weiß wenn das davor steht.
Das ist quasi ein Feld aus der Klasse oben.
Kann ich gleich hier gucken.
Wenn es mich interessiert.
So find last.
So wir wollen jetzt die letzte Rectangle finden.
Wo der Punkt in den ich jetzt gerade klicke.
Drinnen liegt.
Also das heißt wir können da sowas machen.
In der Richtung wie.
Rectangle.
Intersekt.
Das würde funktionieren.
Also ich kann sagen.
Wenn.
Dieses Recht.
Wenn der Punkt quasi sich überschneidet.
Mit der Rectangle.
Dann ist es die die ich suche.
Entfernen.
Die Sache ist die was ich ein bisschen doof finde ist.
Ich kann hier keinen Punkt angeben.
Sondern nur eine andere Rectangle.
Also müsste ich jetzt.
Ist aber doof.
Also von der Idee her was ich machen will ist jetzt.
Ich habe hier so ein paar Dinge übereinander gemalt.
Ich klicke jetzt hier rechts rein.
Dann.
Guck da jetzt nach.
Quasi der Punkt.
Von meiner Maus location.
Hier wo ich jetzt gerade rechts klicke.
Liegt er innerhalb.
Einer eines Rechtecks.
Beziehungsweise erfindet das letzte Rechteck.
Wo das der Fall ist.
Also quasi das obere.
Und.
Da kann ich jetzt hier quasi die Funktion.
Verwenden die.
Für bei Rectangle eingebaut ist zwar Intersekt.
Die Sache ist die.
Ich will ja nicht gucken ob ein Rechteck.
Im anderen Rechteck ist.
Beziehungsweise sich ein Rechteck mit dem anderen Rechteck überschneiden.
Sondern eigentlich.
Ich meine das geht damit ja.
Eigentlich will ich nur einen Punkt.
Also.
Was ich machen will ist im Endeffekt sowas.
Aber das ist jetzt mega umständlich so zu machen.
Weil ich muss ja Rectangle in der Rectangle machen.
Also quasi von E.
Das sieht man schon wie hässlich das wird.
Von E.
Location X.
Zu E.
Location.
Y.
Und dann jeweils ein Pixel hoch.
Das funktioniert.
Aber das ist nicht schön.
Da gibt es bestimmt was.
Was man machen kann.
Ich muss mal gucken ob Rectangle vielleicht eine Funktion hat.
Mit der man Punkte testen kann.
Und nicht andere.
Rechtecke.
So.
Eine.
Keine Ahnung.
Last.
Im Prinzip brauch ich das eh noch zum löschen.
So und jetzt sage ich hier.
This overlay.
Remove.
Last.
Und dann sage ich.
This.
Review Box neu zeichnen.
Zack, zack, zack.
Bam, bam, bam.
Geht weg.
Guck.
Und auch die oberste zuerst.
Die oberste zuerst in die ich klicke.
Also das funktioniert.
Ja.
Das ist schön.
Ja und das ist im Prinzip schon die halbe Miete zu dem was wir brauchen.
Das ist die halbe Miete zu dem was wir brauchen.
Ah da schreibt gerade einer im Chat.
Hat gerade einer MSDN nachgeguckt.
Was bringen einem dann die schwarzen Vierecke.
Naja also dass das schwarze Vierecke sind.
Ist ja jetzt nur die halbe Wahrheit.
Das ist wenn du du wählst erstmal ein Programm aus.
Von diesem Programm machst du einen Screenshot.
So.
Und dann wählst du damit aus welcher Bereich von diesem Screenshot dich interessiert.
So.
Dich interessiert jetzt dieser Bereich vom Screenshot.
So und dann geht jetzt hier noch demnächst irgendwie mal ein Popup auf oder sonst was.
In dem ich eintragen kann auf welchen Text dieser Bereich jetzt untersucht werden soll.
Zum Beispiel Handbuch.
Und wenn er in diesem Bereich quasi von diesem Programm dann das Wort Handbuch.
Das schicken wir online zu einer Texterkennung.
Dass das Wort Handbuch findet.
Allerdings nur in diesem Bereich.
Weil könnte ja sein dass es woanders auch steht wo es mich nicht interessiert.
Dann kriegst du eine Benachrichtigung geschickt.
Und mittlerweile haben wir es so eigentlich auch quasi als Nebenprodukt irgendwie hingekriegt.
Dass ich sogar mehrere Bereiche markieren kann die mich interessieren.
Jetzt muss ich nur noch irgendwo zuordnen können was da wie welcher Bereich machen soll.
So.
Ja irgendjemand hat gerade geschrieben rectangle contains.
Okay gibt es tatsächlich.
Dann können wir das ganze hier ein bisschen einstellen.
Und dann können wir das ganze hier ein bisschen einstellen.
Okay gibt es tatsächlich dann können wir das ganze hier ein bisschen einfacher schreiben.
Und zwar e-location.
Das gefällt mir schon viel wahr klar dass es sowas gibt.
Ja funktioniert immer noch.
Könnte man das nicht prima für Idol Farmbots verwenden.
Ja.
Das kannst du für alles verwenden.
Das kannst du auch für Idol und Farmbots verwenden.
Allerdings es ist kein Bot.
Und das ist das worauf es mir jetzt letztendlich ankommt.
Natürlich kannst du das missbrauchen.
Du kannst aber sowas wie AutoHotKey und sowas auch missbrauchen.
Allerdings ist dieses Programm selbst kein Bot.
Und das ist das worum es mir geht.
Deswegen baue ich da auch garantiert nichts ein was automatisch irgendwelche Sachen drückt.
Ich baue da ein es gibt einen Popup.
Es gibt eine Mail oder es gibt eine Discord Message.
Das sind so die zwei Sachen die ich mir überlegt habe was man machen könnte.
Also zum Beispiel man sagt jetzt hier zack.
Wählen wir jetzt hier mal wieder mal ein Chrome aus und sagen jetzt mal hier Chrome.
Mich interessiert jetzt quasi dieser Bereich.
Und ich will jetzt diesen Bereich überwachen ob dort drinnen mal das Wort Handbuch vorkommt.
Dann macht er im Hintergrund weiterhin Screenshots die ganze Zeit von Chrome alle 10 Sekunden.
Und sobald das Wort Handbuch da drin auftaucht dann schickt er mir eine Discord Message.
Soweit von der Idee her jetzt.
Und ja das kannst du natürlich auch missbrauchen am Endeffekt.
Aber das ist nicht die Schuld von dem Programm.
Du kannst alles irgendwie missbrauchen und für Sachen einsetzen wofür es vielleicht gedacht ist.
Allerdings wo der Entwickler vielleicht nicht das nicht will.
Du kannst ja auch ein Programm für Sachen einsetzen weil es möglich ist was der Entwickler vielleicht gar nicht haben will.
Ich will nicht dass das irgendjemand für Botting Zwecke verwendet.
Aber man prinzipiell kannst du natürlich sagen hey du lässt jetzt eine Discord Message schicken.
Und dann hast du eine Discord Bot der dann irgendwas drückt auf deinem Rechner oder so.
Das kannst du alles machen.
Aber worum es mir geht und was wichtig ist, dass das kein Bot ist.
Das macht absolut nichts Anstößiges.
Das macht einen Screenshot von einem Programm.
Und es gibt Screenshot Tools gibt es ja hunderttausende.
Und Screenshot Tools können per Definition per se nicht Cheats sein.
Weil dann wäre auch Print Taste ein Cheat.
Tools die nur Screenshots machen können nicht als Cheat gelten.
Dann wäre alles ein Cheat.
Da wäre OBS ein Cheat, Fraps ein Cheat.
Alles das wäre automatisch müssten die Hersteller als Cheat einstufen.
Weil das Programm hier macht im Endeffekt nichts anderes was OBS macht.
OBS verwendet sogar intern exakt diese Funktion um Winners Programme zu Capture die wir hier auch verwenden.
Und es wird keiner auf die Idee kommen und sagen OBS ist ein Cheat.
OBS greift einfach den Output ab fertig und das machen wir hier an der Stelle auch.
Wenn es dann wieder Leute gibt die der Meinung sind sie stellen damit komische Dinge an am Ende.
Kann ich auch nichts dafür.
Kann ich nichts dagegen machen.
Ich baue nichts ein was irgendwie ermöglicht automatisiert Tasten zu drücken.
Sondern nur Benachrichtigungen.
So haben wir noch ein bisschen was anderes hier am Start an Musik.
Was nehmen wir da?
Ich brauche jetzt mal irgendwas ein bisschen.
Wirst du den Code veröffentlichen?
Ja das kommt auf GitHub.
Ich brauche mal irgendwas ein bisschen mit ein bisschen mehr Pepp.
Ich brauche mal Musikvorschläge.
Das kann man nehmen.
Wir gucken jetzt mal was für Programming Musik was da kommt.
Das muss man uns jetzt mal anhören.
Wartet mal was gibt es denn da?
Konzentration und Programming Musik.
Black Ops 3 Woodface.
So was sagt der Eaxe Happy Hardcore?
WTF was soll das sein?
Genau wir machen das best Chillstep 2018.
Komm wir sind 2k19 sind wir schon.
Ja genau irgendwelche Mädels die auf der Waschmaschine sitzen easy.
Nee ist gar keine Waschmaschine.
Nee da wird gesungen.
Gesungen ist doof.
Chillstep 2017 beste.
Ja sowas können wir im Hintergrund laufen lassen.
Okay bisschen lauter.
Nee eigentlich ist es überhaupt nicht laut.
So okay was kann man jetzt noch machen?
Also von der Idee her ist es ja schon mal ganz gut was wir heute auf die Reihe gekriegt haben.
Wir können Bereiche auswählen und können uns freuen.
Ja jetzt gehen wir mal zurück zu unserem Main Fenster.
Also erste Sache die wir machen ist wir müssen uns mal überlegen in welcher Struktur wir überhaupt das ganze abspeichern.
Weil angenommen wir machen das jetzt hier auf sagen wir wollen Texterkennung machen hier im Chrome Fenster.
Und zwar hier unten in der Ecke und ich mach das Programm zu dann sind die Settings alle weg.
Das heißt ich muss mir irgendwie mal was überlegen wie man den ganzen Krempel speichern kann.
Aber wir haben hier oben ja extra einen Save Knopf schon.
So das heißt wir machen uns mal eine neue Klasse.
Und denken uns mal irgendwie ein Serialisierungs Ding aus wie man das speichern kann auf die Platte.
So New Class wie nennen wir das Ding?
Ich mach pro Programm machen wir ein eigenes File wo man das drin speichern oder so.
Das hat nämlich den Vorteil wenn man quasi pro Programm was wir über machen wollen ein eigenes Settings File machen.
Hat den Vorteil dass ich das.NET eingebaute Serialisierungs deserialisierungs Zeug verwenden kann und das muss ich nicht selbst machen.
Wenn ich das alles in ein fettes Config File schreiben möchte oder SQLite oder sowas dann müsste ich total viel selbst basteln.
Das ist totaler Overkill. Wir Serialisieren das mit irgendwelchen.NET Sachen die dabei sind.
Da waren wir XML Serializer und gut ist.
Okay wie nennen wir das Ding jetzt?
In Ermangelung eines besseren Namens nenne ich das Ding einfach mal Watscha vielleicht fällt mir noch was besseres ein.
So und dieses Ding hat
Ich muss gerade mal E-Mails gucken.
Oh Gott ich hab ne Mail gekriegt.
Muss ja was wichtiges sein wenn ich sogar eine Nachricht dafür kriege.
Zumindest denkt wahrscheinlich mein Mail Programm das ist was wichtiges ist.
Aha ich hab eine Mail gekriegt von Jennifer Olson ob ich nicht Fortnite Promotion machen will.
Leute was sagt ihr soll ich Fortnite Promotion machen? Was bieten sie denn an?
Zeig mal her.
Influenza ist ja das neue Bassmord was sowas angeht.
Seit ein paar, natürlich krieg ich Geld dafür sonst mach ich ja keine Promotion für Fortnite.
Influenza ist also so seit zwei Jahren oder so hatte ich das durchgesetzt dass man das alles Influenza nennt.
Ich find das war ein schlimmes Wort irgendwie.
So was bieten sie denn an?
Okay sie haben auch schon mit Ali-A Promotion Videos gemacht.
Ich weiß jetzt nicht ob das jetzt so das Aushängeschild ist.
Ja und was gibt es an Geld? Schreiben sie nicht.
Das ist natürlich doof ne.
Wahrscheinlich bezahlen sie nicht ordentlich sonst würden sie es gleich reinschreiben.
Ja Hugo V im Vergleich zum nigerianischen Prinz meinen die das allerdings ernst.
Ähm das hab ich voll vergessen was wollte ich denn machen?
Ah genau also was braucht denn meine Klasse?
Oh ich seh grad das ist nicht die einzige Mail ich gekriegt hab.
Ich muss euch jetzt mal ein bisschen da mal auf dem Lauf was man so an Mails kriegt.
Da sind teilweise Mails dabei wo du dich allen ernstes fragst wollen die einen verarschen.
So von irgendwelchen Chinesen oder so.
Hier hier hab ich zum Beispiel noch ne Mail gekriegt von von Lixiang.
Lixiang sagt das ist Lixiang from Gobuy Company.
I would like you to make a video for our service on YouTube.
We will pay for the advertising.
As we all know many people want to shop from US.
Klingt ja genau das ich da der richtige Channel für bin wenn Leute vom US shoppen wollen.
Kindly revert your offer about one video if you are interested.
Was? Was möchte er mir sagen?
Ich okay ich verstehs nicht.
So wen haben wir denn hier sonst noch? Schönes.
Oh der nächste der nächste ob ich nicht Werbung machen möchte für den Ultimate Fishing Simulator.
Ich hab sogar ein Early Access Key dabei.
Early Access Key für den Ultimate Fishing Simulator.
Cinematic Trailer gibt es auch.
Die gucken wir uns jetzt an oder?
Leute wollen wir uns den Cinematic Trailer für den Ultimate Fishing Simulator angucken?
Ich mein es hat ihm in der Mail geschrieben so quasi um es zu bewerben.
Da bin ich mal gespannt.
Wollen wir uns den angucken?
Ich bin da ganz stark dafür.
Cinematic Trailer für den Ultimate Fishing Simulator.
Okay wartet Leute.
YouTube jetzt muss ich das abtippen vom Handy.
V gleich G E Q A N G X 6 5 T 0
Moment jetzt kommt es jetzt Achtung Achtung Achtung Leute.
Bester bestes Dinge Ultimate Fishing Simulator
Wie Intens
Ich mein für so für so Simulator sieht das gut aus.
Slow Motion
Vier von Zehn Punkten Too Much Water
Krasser Scheiß
Krasser Scheiß
So was bezahlen die dann?
Was bezahlen die dann?
Die haben Early Access Key okay.
Also jetzt mal ohne das das ist jetzt so ein Game das kann man eigentlich gar nicht flamen so wirklich.
Weil ich mein ich vermute mal das macht halt genau das was es sein soll.
Das ist halt ein Simulator für Leute die gerne Fischen und sich dann freuen.
Ja anscheinend hat so ich mein es ist sogar Coop Coop du kannst Fischen und dein Freund kann sich besaufen damit im letzten Fisch fangen.
First Look
Okay man sieht das im Trailer das im Trailer sah einfach gleich mal 500 Prozent besser aus als das echte Spiel.
Ich mein hey aber für ein Simulator ist das echt ganz in Ordnung ja das sieht gar nicht so schlimm aus.
Okay was haben wir noch? Was gibt es denn noch hier für tolle Promotion Anfragen?
Wir machen gleich weiter ich muss jetzt gerade mal mich bisschen im Kopf ablenken dass ich mich dann wieder aus Programmieren konzentrieren kann.
Wen haben wir denn hier als nächstes?
Oh die Sarah schreibt Dear Sir or Madam geht schon gut los.
Greetings! Wir sind RC Gumbrand. Glück dass Sie hier sind.
Wir haben jetzt ein paar neuesten Gaming-Device.
Welche wirklich tolle Sachen für einen guten Preis sind.
Und wir würden es schätzen, wenn ihr eine Review machen könnt und das zu mehr Leuten prüfen könnt.
Wir würden euch mit guten Samplen für gratis anbieten.
Oh die haben sogar Links. Das gucken wir uns jetzt auch noch mal kurz an.
Okay die wollen nichts bezahlen. Die wollen nur die Sachen für gratis geben.
Also die haben zu bieten ein voll programmierbares, das kann ich nicht übersetzen, ein was?
Ein fully programmable keys with on the fly macro recording keyboard.
Das gucken wir uns jetzt zusammen an.
Moment, das gucken wir uns jetzt zusammen an.
ACGumbrand.com
Ah fuck, ohne grafische Oberfläche.
Scheiße, sonst hätte ich das mit meiner Linux VM aufgemacht.
Egal, ich habe Adblock und Geduld drauf, da wird schon nichts passieren.
Mechanical Gaming Keyboard.
Achtung haltet euch fest, next generation mechanisches Keyboard.
Bisschen klein oder?
61 geteilt durch 63 keys anti ghosting.
Oh wichtig, ganz ganz wichtig.
Lightning effects, freezing mode, das braucht man.
Okay das sieht doch ganz normal aus.
Ich habe jetzt eigentlich damit gerechnet, das ist so ein Skamars China Hersteller.
Dann haben sie noch die G402 Maus.
Die heißt bestimmt nur zufällig wie eine Logitech Maus, nicht irgendwie um die Leute zu verwirren.
Das ist bloß zufällig heißt die auch G402.
Rein zufällig heißt die auch so wie die Logitech Maus, aber nur zufällig.
Und sieht auch nur zufällig so aus wie die Logitech Maus.
Guckt mal.
Fällt euch die Ähnlichkeit auf.
War so blöd.
Es ist nur zufällig dass das so ähnlich ist.
Und dann auch noch so heißt.
Was haben die für einen Sensor, steht nicht dabei.
Das ist der PMW3320 Sensor.
Was hat der für einen Sensor?
Keine Ahnung.
RGB Lightning, ganz wichtig.
Also das ist schon auffällig wie ähnlich sich die beiden Mäusen sehen.
Guckt euch das mal an.
Also das ist schon echt auffällig.
Sogar die Ablage für den Daumenknopf ist hier unten da.
Vergleichen wir mal die G502.
Die sieht eher aus wie eine Story Maus.
Aber das ist schon auffällig.
Gut aber ich meine das ist wohl ein ganz legitimer Hersteller hier.
Also gar nicht so sehr wo man sich jetzt so drüber lustig machen könnte.
Also nicht so wie die Typen die teilweise Headsets hier anbieten oder so.
Ok das hier ist glaube ich China Scammers Mail.
Obwohl die sogar auf Deutsch ist.
Also Absender kann ich euch nicht vorlesen.
Ist komplett in Chinesisch.
Weiß nicht.
Hallo das ist Ilona Yang.
Von einer bekannten chinesischen Elektronik Firma mit Banggood und Gearbest.
Wir haben ein Dutzend Überseelager mit hunderten von Produkten eine große Auswahl.
Unsere Webseite hat viele verschiedene Styles und qualitativ hochwertige Produkte sehr geeignet für die Bewertung.
Können sie klicken um zu sehen.
Ja wir können klicken um zu sehen.
Merkt euch das.
Generell bieten wir kostenlose Produkttests an.
Ich mag deine YouTube Kanal und möchte mit dir zusammenarbeiten.
Auf unserer Webseite finden sie eine Liste mit Plutus Kopfhörer in ihrem Video.
Sehr gut Ersatz.
Ich möchte ihre Zusammenarbeit mit dem Plutus Kopfhörer bewerten und wird von unserer Webseite im DE Lagerhaus geliefert.
Meine Webseite kann kostenlose Bewertung Produkte bieten.
Wenn die Zusammenarbeit Spaß macht, können wir eine langfristige Zusammenarbeit.
Wenn sie interessiert sind, kontaktieren sie mich bitte.
Ok das gucken wir uns jetzt auch mal kurz an.
Aber bevor ich die Seite on stream aufmache, muss ich mir das erstmal im anderen Browser angucken.
Nicht dass da irgendwelche Sachen drauf sind wofür man gemacht wird.
Achso das ist so ein China E-Bill wo man da rauskommt.
Ok das sieht nicht so aus als hätte man dafür gebannt.
Tom.
Top.
Was ist denn eigentlich Tom Top?
Mal gucken.
Tom Top.
China Shop.
Tom Top.
Erfahrung um Zoll.
Schlechte Bewertung.
Ok.
Und die haben, was schreibt sie?
Die haben tolle Bluetooth Kopfhörer.
Die gucken wir uns jetzt an.
Die man gut für Zusammenarbeit für Zusammenarbeit zusammenarbeiten kann.
Bluetooth Headphone.
Oh ja das sieht nach richtig qualitativ super Kopfhörern aus.
Vor allem hier vor allem neben so dieses Scharnier sieht richtig qualitativ hochwertig aus.
So ja genug Mails geguckt.
Jetzt wisst ihr mal was man so für Mails kriegt.
Und ich will nicht wissen wenn das bei mir schon so ist wie das bei keine Ahnung Dner oder Unge oder sonst wo ist.
Die kriegen ja die kriegen noch mehr von diesen Anfragen.
Auch übertrieben am Spam ist es Square Enix die schreiben wirklich zu allem schreiben die eine Mail.
Zu wirklich allem.
So nach dem Motto neues Kostüm für Prinz Noctis E-Mail.
Zu allem.
Naja so.
Schon wieder zu hier.
Ok.
Wo sind wir stehen geblieben jetzt.
Genau.
Also was was müssen wir uns denn hier speichern.
Für für Information weil ich mein aktuell haben wir ja das Problem dass wenn wir das Programm jetzt starten.
Ich was auswähle screenshotte mir den Bereich drauf auswähle zum zum Text erkennen.
Und ich selbst selbst drücke passiert nichts.
Das Programm wieder aufmachen ist alles weg.
Also nicht so wie das.
Haben die Dinge RGB beleuchtet bestimmt hat mittlerweile alles RGB beleuchtet.
Also was müssen wir uns erst mal merken.
Ich würde sagen wir merken uns mal den Screenshot.
Den wir gemacht haben allerdings als Fahrt zum gespeicherten Bild wir speichern das dann zwischendrin ab.
So dann würde ich sagen was wir uns merken müssten ist.
Der Titel also sprich das da was hier oben drinne steht.
Window Title.
Dann müssten wir uns die Overlays merken.
Wobei ich da nicht genau weiß ob ich mir.
Ob ich mir die Rectangles merken kann wahrscheinlich nicht weil ich muss mir ja später noch zu jedem zu jedem Overlay merken.
Nach welchem Text ich darin suchen soll.
Und wie ich benachrichtigen soll bei einem Pfund.
Also im Prinzip bräuchte ich dann hier quasi so eine.
Nochmal so eine eigene Notification Klasse oder sowas.
Wir speichern uns erst mal das können wir alles der Reihe nach.
Eine Rectangel. Merken wir uns.
Und zwar eine Liste von Rectangles.
Keine Ahnung.
Ich will jetzt einfach nur mal gucken ob das mit speichern und laden und so wieder funktioniert.
Vielleicht brauchen wir auch noch den.
Mal gucken.
Hauptsächlich mal gucken wie das mit speichern und laden so klappt.
Und dann was wir noch machen können ist sowas wie.
Ein Intervall wo wir gucken sollen.
Das müssen wir natürlich dann auch irgendwie einstellbar machen also sprich.
Soll. Ach komm. Lassen wir mal weg. Wir machen standardmäßig einfach alle 10 Sekunden einen Screenshot von allem und gut ist.
Ich meine die wenigsten Leute haben da mehr als zwei, drei Sachen drinne.
Ich werde da wahrscheinlich zwei Sachen drinne.
Ich werde wahrscheinlich BDO überwachen ob im Marketplace was ready kommt.
Und ich werde wahrscheinlich Discord überwachen um zu gucken ob irgendwie einer.
Keine Ahnung.
Irgendwas wichtiges geschrieben hat und ich gerade nicht am Rechner bin oder so.
Die zwei Sachen werde ich wahrscheinlich damit machen.
So.
Das würde ich sagen es reicht erstmal.
So und jetzt brauchen wir natürlich was zum speichern.
Wir brauchen eine Save Methode und wir brauchen eine Load Methode.
Allerdings können wir die Load Methode nicht.
Wir müssen was Static machen weil ich habe ja noch keine Instanz.
Public Static.
Und es ist nicht ein Vault sondern wenn ich was geladen habe aus einer Datei dann kommt das Objekt da wieder raus.
Load.
Load und zwar hier Filename.
So in der Richtung werden wir das machen.
Habe ich jetzt irgendwie vertippt.
Achso dass der meckert weil ich keine Return Code habe.
So und jetzt muss ich mir mal überlegen wie das mit dem Serializer funktioniert hat.
Das war simpel aber ich glaube ich kriege es aus dem Kopf nicht mehr hin.
Type, genau.
Type of.
Irgendwie so ging das.
Serialize.
Ah ja doch so ging das genau das war relativ simpel.
System Stream, File Stream.
Sollte es die Klasse als Serializable kennzeichnen muss ich glaube ich nicht für XML Serializer.
Ich glaube das brauche ich nur für Binary.
Sehen wir gleich.
Aber ich meine kann ich machen das ist auf jeden Fall nicht schlecht wenn man es geht.
Stimmt schon.
Machen wir sowas wie hier Text Text.
Wie heißt das genau.
Ich glaube das muss man so machen Text weiter.
Und dann jetzt den Dateinahme.
Quatsch.
Das ist nicht Stream Writer Stream.
Stream Writer genau.
Path.
Ich mache jetzt mal Hardcoded Dateinahme.
Einfach nur mal gucken ob das funktioniert.
Bin Java Entwickler mit C Sharp bin ich bisher nur mit Xamarin in Kontakt gekommen.
Habe ich doch nichts mitgemacht.
Ich habe mitgekriegt dass Microsoft Xamarin übernommen hat.
Vor einem Jahr oder so.
Ich habe mir mal ein paar Videos und Tutorials zu angeguckt.
Aber ich glaube so richtig.
Da glänzen tut das erst wenn man mobile Anwendung machen will.
Desktop Anwendung würde ich damit nicht machen.
Es sei denn es funktioniert mittlerweile auch unter Linux und Mac.
Was ja bisher bei Xamarin Forms nicht so gewesen ist.
Dann wäre das eine Alternative wenn es mal wirklich ein GUI Framework für C Sharp gäbe.
Das Mac, Linux, Windows und Mobil Plattformen unterstützt.
Wobei mir schon Mac, Linux, Windows ausreichen würde.
Und dazu auch noch ganz gut bedienbar ist und nicht total hässlich aussieht.
Dann würde ich mir das mal angucken.
Das fehlt eh noch.
Das beste was ich kenne für C Sharp ist...
Das ist aber...
Avalonia.
Das ist somit das beste Cross Platform GUI Framework was mir für C Sharp so einfällt.
Das ist allerdings noch Beta und Under Heavy Development.
Ja aber GTK Sharp.
Nein, da habe ich mal was mitgemacht.
Das ist ganz ganz abartig.
Erstens mal GTK unter Windows ist grausam.
Megaschrecklich.
Und außerdem ist GTK hässlich wie die Nacht.
Sowohl optisch als auch zu programmieren und so.
Nee, GTK ist wirklich ganz ganz grausam.
Was mir noch fehlt ist...
Also was ich ganz cool finden würde wenn irgendjemand C Sharp Cute Bindings basteln würde.
Welche die gut sind.
Es gibt auf GitHub eins.
Das ist allerdings nicht Cross Platform.
Was den Sinn wieder in Frage stellt.
Ich meine wenn ich.NET Cute Mono.NET Bindings habe.
Aber es nur unter Windows läuft ist das ganze auch ziemlich sinnlos.
Weil für Windows Only gibt es.NET viel bessere Lösung.
Das beste was ich kenne ist das hier Cross Platform.NET.
Also sprich für Linux, für Mac und für Windows.
Da fehlen allerdings noch sehr sehr viele Sachen.
Es gibt kein richtiges Browser Plugin und alles.
Aktuell muss ich wirklich sagen.
Schweren Herzens.
Auch wenn C Sharp meine absolute Lieblingssprache ist.
Muss ich sagen schweren Herzens für Desktop Cross Platform GUI Anwendung.
Gibt es jetzt mal.
Wir lassen jetzt mal Java außen vor.
Da weiß ich nicht wie es aussieht.
Ist bestimmt auch möglich.
Das beste was man machen kann ist eigentlich Cute und C++.
Ich hoffe das mit.NET Core.
Und mit fortschreitender Entwicklung.
Sich da noch was tut.
Dass Microsoft da mal irgendwas bringt.
Was auf allen Plattformen läuft.
Ich weiß allerdings nicht.
Inwieweit Microsoft da selbst so großartiges Interesse dran hat.
Und vielleicht wird hier irgendwann mal Avalonia auch so gut und benutzbar.
Ja dass es taugt ja.
Und das andere ist weil es gerade jemand im Chat geschrieben hat.
Die andere Variante zu C++ und Cute ist Electron.
Ja sehe ich auch so.
Wobei ich gegen Electron so übelste Abneigung habe.
Vor allem für irgendwelche grafischen Sachen und so.
Da ist Chrome und JavaScript.
Ja es wird immer besser.
Dadurch dass halt einfach so viel Entwicklungszeit und Optimierung in Browser rein fließt.
Aber es ist trotzdem ein riesen Unterschied ob du.
Ihr könnt es ja mal ausprobieren.
Ich hab letztens auf Hackers Info gelesen.
Da hat einen ein Paint-Klon in JavaScript gebastelt.
So.
Genau.
Und das sieht genauso aus wie das alte Paint was der Typ gebastelt hat.
Ich zeige euch das jetzt mal im Browser.
Hallo.
So.
Der hat quasi das Paint nachgebaut hier im Browser.
Und ihr könnt es ja mal selbst bei euch ausprobieren unter Windows.
Nehmt mal das Windows Paint.
Nehmt euch den Stift und malt da drinne rum.
Und nehmt euch dieses JavaScript Paint und malt da drinne rum.
Man spürt einfach dass es nicht sofort da ist was man macht.
Das ist aber so ganz an der Schwelle zu man merkt es nicht mehr.
Aber es fühlt sich einfach scheiße an.
Wohingegen hier fühlt sich das einfach mega schnell und direkt an.
Wenn ich hier was drinne male.
Wenn ich hier was drinne male.
Ja das ist.
Es ist nicht so dass man sagen würde es leckt aber es ist einfach nicht so snappy oder wie man das auch nennen mag.
Deswegen mag ich grafische Sachen im Browser nicht.
Und das ist jetzt ja nur was relativ einfaches.
Es gibt ja auch umfangreichere Mal Sachen und so Visio Style Sachen im Web.
Wenn du da mal ein Netzwerk Diagramm malen willst da drehst du durch.
Das geht nicht.
Da rastest du aus wenn du größere Sachen im Browser malen musst.
Ich habe mir übrigens eine Filme die Designer gekauft für meine Thumbnails auf YouTube.
Wo ich sagen wie gesagt ich weiß dass ich mit Photoshop nie warm werden würde.
Beziehungsweise mir das viel zu viel Einarbeitungszeit kostet.
Das finde ich super hat 50 Euro gekostet.
Und ist mega simpel aber mit guten Sachen zu machen.
Und wenn man das vergleicht.
Wenn man das hier vergleicht wie schnell was passiert wenn man hier drinnen klickt und macht.
Und dann verwendet man mal irgendwie keine Ahnung hier sowas da zum Beispiel.
Alter das ist das ist so laggy das Gemahle hier.
Und das ist das ist schon eines der besseren Browser Mal Programme.
Das ist einfach nicht dafür gemacht.
Das heißt dieser ganze Hang dazu alles im Browser zu machen geht bei 90 Prozent der Sachen.
Aber wenn du mal ein bisschen.
Ein bisschen was mehr Richtung Grafischen Sachen machen willst.
Das ist einfach so krass laggy alles im Browser.
Das ist das ist richtig eklig.
Deswegen habe ich auch eine Abneigung gegen ganze Elektronen Programme.
Ich stehe drauf wenn du ins Mikrofon sagst.
Ja ich habe euch gerade ins Ohr geschmatzt.
Keine Absicht ich war gerade so am schwätzen.
Was ist Sebaro?
Oder was ist Woodface?
Mein Geschmatze oder was?
Musik ist aus.
So.
Und ja weil es gerade einer im Chat schreibt und das ist ja eh Chillsore Programming Stream.
Das heißt nicht so wichtig wenn man nicht so wahnsinnig krassen Progress machen.
Weil gerade jemand was schreibt von TypeScript und Angular und React und sowas in der Richtung.
Ich bin froh.
Ich bin wirklich froh darum dass durch TypeScript JavaScript Entwicklung ein bisschen weniger nervig wird.
Ich bin ja eh ein großer Fan von Anders Heilsberg.
Das ist der Erfinder von C-Sharp.
Das ist der der bei Microsoft jetzt an TypeScript arbeitet.
Dass der sich der Sache mal angenommen hat.
Und das dort von Anfang an nicht einfach mal irgendwas gemacht wurde.
Wo man was geiles mit machen kann sondern was wo auch darauf geachtet wurde.
Und das ist bei TypeScript halt offensichtlich.
Wo drauf geachtet wurde dass auch die ganzen Tools die es drumherum gibt was taugen.
Weil was bringt dir die krasseste Sprache die nach JavaScript kompiliert.
Oder Transpiled nennt sich das ja bei JavaScript.
Die haben ja für alles eine eigene Name die Web Jungs.
Allerdings die Tools nicht richtig unterstützt werden.
Dass du keine Autokompletion hast und sonst was.
Das ist halt in TypeScript richtig richtig gut.
Also wenn ich was in JavaScript machen müsste was ein bisschen größer ist.
Und halt nicht mal in eine Datei irgendwie reinpasst.
Dann würde ich das heute mit TypeScript machen auf jeden Fall.
100 pro.
Und es gibt ja für die großen Frameworks alle mittlerweile Type Definitionen.
Für TypeScript.
War eine Frage in die Runde wer hat gerade nicht verstanden was ich gesagt habe.
Oder wer hat verstanden was ich gesagt habe.
Nur mal so dass ich so mal grob einschätzen kann ob das überhaupt ankommt was ich dann weiß von mir gebe.
Ansonsten kann ich auch ein bisschen weiter ausholen beim erklären.
So.
Ich wollte den Kram speichern.
Ich hab's verstanden alles verstanden.
Das ist vielleicht ja voll überschlagen.
Also 50 50.
Okay.
Reiter.
Reiter.
Objekt ist okay.
Jetzt sollte der.
Jetzt sollte er das eigentlich speichern wenn ich safe mache.
Das muss ich jetzt mal testen ob das funktioniert.
Wir machen hier einfach mal in meinem Main Window irgendwo ganz am Anfang was auf jeden Fall ausgeführt wird.
Temp.
Watcher habe ich das Ding genannt.
Watcher.
Setzen da jetzt mal hier keine Ahnung.
Wenn nur Title. Setzten wir mal auf Hallo und Screenshot.
Setzten wir mal auf.
Einfach nur mal gucken ob das speichern funktioniert.
Und Overlays.
Setzten wir mal auf.
So.
Okay.
Und jetzt gucken wir ob das funktioniert.
Nein.
Ah.
Oh ich noob.
Ha.
Lull.
Das kann wohl noch nicht funktionieren.
Ich musste auf Public machen.
Okay hat funktioniert.
Gucken wir mal rein.
Documents. Visual Studio Projects. Wo ist es denn?
Wo speichert er den Scheiß?
Bisschen gecheatet.
Okay.
Source Repos Friesi Lull. Alles klar.
Bin Debug.
Okay da ist es.
Da ist unser gespeichertes Objekt.
Hinter den Explorer.
Geh weg.
Piss dich Alte.
Das sieht gut aus.
Das sieht gut aus.
Das ist ein Wortschauer Objekt.
Hat eine Screenshot.
Die da Screenshots zwischen Window, Title, Overlays, Rectangle, Liste.
Ja.
Das hat funktioniert.
So und jetzt müssen wir noch gucken ob das Laden auch wieder funktioniert.
Oh Leute ich muss mal aufs Klo.
Ich mach euch jetzt mal.
Was mach ich?
Ich mach euch jetzt mal irgendeine.
Mach ich euch dann mal an.
Ich hatte vorhin eine gute Idee.
Hab ich gesagt wenn ich mal AFK muss kann ich das anmachen.
Was war denn das?
Hab ich vergessen.
Egal.
Ich bin gleich wieder da.
Wo ist mein Overlay Text?
AFK Klo.
Ich bin gleich wieder am Start.
Ich bin gleich wieder am Start.
Zwei Minuten.
Zwei Minuten.
Zwei Minuten.
Zwei Minuten.
Zwei Minuten.
Zwei Minuten.
Der ist da wieder.
XML mit dem EE.
Oh nee.
Ich will im EE gar nichts haben.
Da kann man sich nächste Mal noch schön anzeigen lassen.
Etch.
Bam gleich viel besser.
Etch startet auch viel schneller.
Und jetzt gelang jetzt gerade ich mit Windows.
Moment warum?
Warum eröffnet es jetzt mit dem Edge?
Und eben noch im Internet Explorer, merkt er sich das letzte oder was?
Das letzte mit dem man geöffnet hat?
Ah, das ist ja richtig clever. Das war früher nicht so. Früher musste man das übelst kompliziert umstellen.
Na, Wishlist Studio Code hab ich auf dem Account nicht installiert. Könnt ich aber machen.
So, ChrisW, selbstverständlich muss der Streamwriter disposed werden.
Weil, im Moment, der muss nicht nur disposed werden, der muss vor allem closed werden.
Wenn der nicht closed wird, dann behältet der Datei offen und ich kann nicht wieder reinschreiben.
Das funktioniert da nicht. Guckt, wenn ich jetzt, ich zeig euch das mal, wenn ich jetzt hier 2x,
wenn ich jetzt 2x save aufrufe, müsste es ne Exception geben. Bam.
Ist used by another process. Das liegt daran, sag mal, kann das sein, dass das irgendwie,
das ist doch ein bisschen falsch skaliert hier, oder? Oder sieht das bloß für mich so aus?
Als ist das hier viel zu groß, dieses Fenster, was da so dargestellt wird.
Und die Skalierung stimmt nicht so ganz.
Was ist das eigentlich für komische Musik?
Der Streamwriter muss vor allem geclosed werden und disposed werden.
Und weil wir ja hier C-Sharp, wie nennt sich das, best practice verwenden, ja, war das auch so.
Da müssen wir das nämlich gar nicht von Hand machen. Bam. Der Text. Welcher Text? Achso.
Ja. Das ist wohl wahr, dass ich nicht mehr abkloh bin.
Wer sagt denn, dass ich nicht vom Klo aus am programmieren bin? Seht ihr mich oder was?
Wirklichkeit sitze ich gerade auf meinem 3000 Euro Klo. So, sollte das mit dem Doppelspeichern funktionieren? Ja.
Okay. Klappt. Alles klar. Okay. Jetzt müssen wir das ganze laden von der Platte.
Und zwar, wie funktioniert das? Wahrscheinlich prinzipiell genauso wie Speichern.
Und dass man jetzt hier sagt deserialize. Deserialize und zwar wollen wir diesmal einen Stream-Reader haben.
Also hier müssen wir gleich den Dateinamen einsetzen, weil wir können ja schlecht alles unter 1.xml speichern.
Das wäre ziemlich beknackt. Und ich dachte ja, ich habe es die letzten paar Monaten schon gesagt im Stream.
Ich muss mir mal langsam ein paar Visual Studio Shortcuts merken.
Wer mit Shortcuts kann ich euch alle möglichen Sachen sagen? Aber Visual Studio Shortcuts.
So, bei 1 kann ich das direkt retörnen. Funktioniert das mal an die Leute, die sich damit auskennen?
Funktioniert das Using auch, wenn ich innerhalb vom Using retörne?
Ich vermute mal ja, weil sich dann die Leute von Microsoft fast dafür gedacht haben, als sie dieses Schlüsselbord eingebaut haben.
Aber so ganz sicher wäre ich mir da nicht.
So, was muss man mal deserialize angeben? Natürlich den Reader.
Das war's, ne? Wer muss das machen?
Soll er jetzt für Schmerzen? Achso. Ja, ist gut.
Okay.
So, wir haben es jetzt hier gespeichert. Versuchen wir es mal zu laden.
Ob das funktioniert?
Das müssen wir wie gesagt gleich noch dynamisch machen, weil wir können nicht alles bei 1.xml speichern.
Ah, gar nichts drinne. Wir laden das jetzt und dann geben wir uns mal aus, was das für ein Titel hat.
Und wenn der Titel ausgegeben wird, wissen wir, dass das Laden funktioniert hat. Ja, hallo, hat funktioniert. Nice.
Das finde ich halt geil. Das finde ich ist eines der riesen Vorteile vom.NET Framework im Vergleich zur Java Standard Library.
Ihr wisst, ich bin nicht so der superkrasse Java-Pro, aber ich finde, die Sachen haben hier alle irgendwie ein gewisses System.
Und wenn man es mal gemacht hat und sich an einige Sachen gewöhnt hat, kommt man ohne nachzugucken immer relativ schnell darauf,
wie der ganze Kram heißt und wie der ganze Kram zu benutzen ist.
Das ist eine Sache, wo ich bei Java immer nicht durchblicke, aber wahrscheinlich einfach auch, weil ich so wenig damit mache.
Ich verwende ja die Java Standard Library mit Kuh wie öfters mal und viele Sachen finde ich da ganz komisch irgendwie.
Moin Max, muss auch für meine Projektarbeit was machen? Was hast du denn für eine Projektarbeit?
Gut, können wir wegmachen, hat alles funktioniert. Also sprich, wir können jetzt unseren Krempel safen und loaden.
Dann probieren wir das doch jetzt mal aus.
Der Auskennfuchs wird seinem Namen hier gerecht, oder besser gesagt macht seinem Namen alle Ehre.
Soll ich euch jetzt mal die richtig krassen Hexor-Sachen zeigen? Wir können uns ja mal angucken, ob der Auskennfuchs Recht hat.
Obwohl ich weiß nicht, reicht das, wenn ich mir das irgendwie in so einem EL-Code-Refactor-Ding angucke?
Sehe ich dann, das probieren wir jetzt mal aus. Jetzt kommt...
Wir gucken uns das jetzt mal an, ob der Auskennfuchs Recht hat.
Wie installiert man das überhaupt?
Ich will jetzt wissen, ob der Auskennfuchs Recht hat.
Was gibt es denn für ein Reflektor? Was gibt es denn für gute Reflektor-Software mittlerweile?
Das ist der EL-Spy, genau den will ich. Gibt es da was Neues mittlerweile?
Der EL-Spy kenne ich. Das anscheinend. Download latest release.
Source-Code? Hallo, gibt es das? Ach so. Wo gibt es das denn jetzt als Executable zum runterladen?
Bin ich jetzt blöd? Source-Code? Ich will nicht den Source-Code.
Ich will was zum Ausführen. Ich will mir das doch nicht selbst kompilieren.
Mein Gott, man kann es aber auch kompliziert machen.
Das gab es doch früher auch einfach als Standalone-Exit zum Ausführen.
Das ist doch beknackt. Es ist doch.
Die sind nur einfach zu faul gewesen, für 302 was anzubieten zum runterladen.
Warum auch immer man das nicht macht. Für 3.1 gibt es das, für 3.2 gibt es das nicht, weil kein Bock.
Das eine ist Nugget-Only-Release. Jetzt will ich wissen, ob der Auskern Fuchs recht hat.
Für Leute, die es interessiert, wie manche Programme funktionieren, wenn ihr ein C-Sharp-Programm habt,
könnt ihr euch das mit einem Reflektor anzeigen lassen, wie der Source-Code aussieht.
Wenn man ein.NET-Programm kompiliert, fällt nicht wie bei C oder C++ ein Binary-Geschwubbel raus.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Der Intermediate-Language-Code, der dann von der Runtime ausgeführt wird, ist ein kompiliertes.NET-Programm.
Was ist auf der Pizza drauf? Zwiebel, Paprika, ich würde sagen auch ein bisschen Salami.
So, ich mute mich mal zwischendurch, weil sonst schmatze ich euch glaube ich doch ein bisschen zu viel ins Ohr.
Ich mache einfach das Mikro ein Stückchen weiter weg.
Ich wollte mir mal, oder mich mal damit beschäftigen hier in OBS, in OBS mal ordentliche Sachen einzurichten.
Also quasi ordentliches Noise Gate und solche Geschichten und ich habe auch schon auf meinem anderen Account rum experimentiert hier mit Plugins.
Also falls sich jemand damit auskennt, ich könnte ein bisschen Unterstützung brauchen, weil so mit Audio-Settings, ich habe da irgendwie auch kein richtiges Gehör dafür und ich overtune das meistens total oder mache zu wenig.
Außerdem den Kompressor richtig einzustellen, kriege ich auch nicht gebacken, auch wenn ich mittlerweile theoretisch weiß, was jedes Setting bedeutet.
Das könnten wir das nächste Mal irgendwie im Stream machen, dann könnt ihr mir auch gleich sagen, wie ich das anhöre.
Was hältst du von Bluejay? Was ist Bluejay?
Was ist das? Das sieht wie von 1995 aus.
Ich sollte nicht immer Keypass zeigen, sonst kommen die Leute hier wieder rein und ich zeige lieber eine ordentliche Shell.
Programmiere mal Shell Overwatch 2 mit dem guten Matchmaking.
Ja, Matchmaking bzw. das Ranking-System ist nicht so einfach, wie man sich das vorstellt.
Was hältst du vom neuen Firefox Quantum? Finde ich gut.
Dass da Legacy-Anwendungen beziehungsweise Plugins nicht mehr funktionieren, ist halt doof, aber verständlich.
Was du kennst dich damit aus? Brauch aber einen Graphen, den OBS nicht hat.
Ach doch, ich kann ja hier einen OBS. OBS kann ja VST-Plugins. Also du kannst hier zum Beispiel diesen Equalizer nehmen.
Und dann kannst du hier alle möglichen Dinge einstellen und man kann sich auch live anzeigen lassen, was hier passiert.
Serious Max, wenn du dich da wieder auskennst, das folgen sie jetzt schon. Aber ich habe einfach von Audio-Sachen keinen Schimmer.
Um nicht zu sagen, absolut keine Ahnung.
Der neue Firefox braucht bei mir manchmal 3, über 3 mit 4 Tabs. Ja, ist leider so.
Wenn man sich mal anguckt, was hier Chrome braucht.
Äh, das ist jetzt Edge. Chrome braucht das auch nicht. Wirklich weniger.
Hallo? Oh, gebated. Übrigens, warum der Edge so viel weniger braucht, wie Chrome, gehe ich mal von aus, dass Microsoft einfach viele Sachen
Shared speichertechnisch und hier nicht auftauchen, was da auch nicht wirklich weniger braucht.
Aber ich finde den neuen Firefox gut.
Hast du deine Mails heute schon gecheckt? Ich mache das jeden Tag. Ich habe sogar Mails vorgelesen vorhin.
Onstream von Xilu Yang oder so, wie der Typ hieß. Und im Ultimate Fishing Simulator.
Also, TuLostSolider, ich habe gerade deine Message gelesen. Die Idee finde ich ganz cool.
Nicht, dass ich mich in der Lage sehen würde, sowas zu programmieren. Weil Anwendungen und Games sind schon noch ein bisschen was anderes.
Aber die Idee finde ich cool. Die Idee finde ich echt gut.
Kannst du mal ein Review von meinem Code machen? Frisilol. Hast du das gefolgt oder was?
Gut, das ist doch ein Fork einfach von meinem Frisilol, oder? Ach nee. Du hast was committed.
Das ist ja schrecklich.
Ja, war Frisilol.
Gute Idee. Aber ich finde es nicht schlecht, dass du das so schnell hingekriegt hast.
Da hätte ich nicht mit gerechnet jetzt.
Läuft da eigentlich Overwatch League?
Delos hat gestern wieder Smog gekriegt. War echt knapp und spannend.
Jetzt noch mal ein Fork mit Elektron bauen. Mit Elektron hast du ein bisschen Schwierigkeiten das hier zu machen.
Geht, geht. Kannst ja irgendwelche Node.js Native Modules laden und so. Aber das stelle ich mir ein bisschen schwieriger vor.
Native Windows Funktionen aus Elektron aufrufen. Gehen tut es bestimmt.
Ja, alles Kräuter, deswegen spiele ich auch Overwatch gerade nicht mehr. Ich kann mir das nicht geben.
Du siehst eigentlich eher aus als dass du immer wieder Overwatch gespielt hast. Kannst du mal was zu Web Interface mit C-Sharp machen?
Muss ich ehrlich sagen. Web, also Backend Geschichten für Webseiten und Web Applikationen habe ich noch nie gemacht.
C-Sharp beziehungsweise mit.NET. Noch nie. Noch gar keine Ahnung von.
Diesmal weiter ein paar Mails vor. Ich habe jetzt ja schon. Ich gucke mal ob es noch ein paar geben hat die Woche.
War mal stehen geblieben. An denjenigen der mir gerade seine App per Mail geschickt hat.
Lad das Ding auf GitHub hoch oder irgendwo, dass ich mir da angucken kann. Weil ein RAR Archiv als Mail-Anhang packe ich mir bestimmt nicht.
Auch wenn du das nicht böse meinst. Ich weiß. Bestimmt nicht auf mein Rechner und machst auf.
Du kannst auch auf Bitbucket hochladen. Da kannst du private Repos machen wenn du willst dass es keiner sieht.
Hast du es jetzt eigentlich hinbekommen wie du wolltest? Was meinst du genau?
So Fortnite hatten wir schon. Was gibt es denn sonst noch so für?
Bezahlte Partnerschaft hat hier noch einer eine Mail geschrieben. Erstmal ist der Titel auf Deutsch und die restliche Mail ist auf Englisch.
Also dafür soll ich Werbung machen. Ich ahne Schlimmes.
Es sieht nach Asia MMO aus. Nein es sieht nach Asia Diablo 2, Diablo 3 Klon aus. Was auch immer es genau ist.
Aber es sieht nach einem billigen Asia Spiel aus. Ich weiß jetzt nicht ob es gut oder schlecht ist. Es sieht auf den ersten Blick nicht so übel aus.
Aber Bock auf eine großartige Promotion habe ich nicht.
Das sieht aber ungesund aus mit den Händen da.
Okay das ist irgendwie so ein bisschen Hack and Slay aber nee. Hast keinen Bock drauf. Okay da hatte ich ein Angebot per Mail.
Gucken was haben wir sonst noch. Okay lass mal gucken.
Na das klingt gut. Ja das war eigentlich eine legitime Mail Anfrage und so. Das gibt es eigentlich wenig wozu man da sagen kann.
Das war jetzt nicht so auf dem gleichen Stand wie die Chinesen die vorher geschrieben haben.
Oh ich habe die erste Promotion Anfrage für meinen Overwatch Channel gekriegt.
Max DPS. Also das heißt man kriegt heute schon Anfragen als Channel mit 2065 Subscriber.
Krass. Mit dem letzten Video vor 6 Monaten. Und 2,6 Tausend Aufrufe.
Nicht schlecht.
Schreiben alle irgendwie immer das gleiche.
Was haben wir sonst noch für eine Anfrage. Gold Rush The Game. Sogar mit Steam Key.
Okay was ist das. Der Name schon ja. Mining Simulator oder was soll das sein.
Da f**k. Da wolltet ihr mich doch bestimmt schon immer mal für Werbung machen sehen oder.
Für Gold Rush The Game Frankenstein Machinerie DLC. Was haben wir sonst noch. Oh das ist eine gute Anfrage.
Hallo Max. Ich möchte sie bezahlen. Das ist schon mal wenn eine Mail so anfängt schon mal nicht schlecht.
Um meine App als. Moment was. Hallo Max. Ich möchte sie bezahlen. Um meine App Cash for Apps als eine Möglichkeit zu zeigen Cod World War 2 Points zu bekommen.
Oh das riecht nach Scamas. Das riecht nach nach richtigem Scamas. Und das schnell in einem Video wie dieses hier. Dies ist eine perfekte gesponsorte Promo die sie ihren Abonnenten zeigen können.
Die Bezahlung ist einfach. Ich zahle ihnen 40 Cent für jeden Download. Den sie mir bringen. Aha.
Es gibt einen Bonus von 100 Dollar für 500 Downloads. Vor 500 Downloads. Das schaut man prinzipiell nicht übel.
Um es leichter zu machen gebe ich ihnen dieses vorgezeichnete Video. Fügen sie einfach ihren Ton hinzu. App Cash for Apps.
Das klingt nach ziemlichem Scamas ehrlich gesagt. Jetzt gucken wir uns jetzt mal an.
Ich muss es aber vorher aber mir auf dem anderen Monitor aufmachen um zu gucken dass da jetzt nicht irgendwelche anstößigen Dinger drin sind. Man weiß ja nie.
Okay im Moment. Wir machen das jetzt gleich auf. So das ist das Video was er mir geschickt hat um zu zeigen wie geil das Zeug ist.
Außer noch auf Deutsch. Yeah.
Was zum Teufel.
Das ist ja schon fremd Schämen. Ich das Video nur sehe. Was macht er denn sonst so.
Das ist ja das ist ja sehr laut in jedem Video.
Ja aber der Channel scheint relativ gut zu laufen. Ich meine 450 K geht ab.
So jetzt könnt ihr mal von ausgehen wenn er auch ein ähnliches Angebot hat und quasi 100 Dollar für 500 Downloads kriegt.
Da könnt ihr euch mal überlegen wie viel Kohle man mit sowas scheffeln kann. Also das er damit macht ist ja an sich jeder wie er das vertreten kann dass sowas halt angeboten wird ist so die Sache.
Ja zeigt uns.
Ich weiß nicht irgendwie.
Ich weiß nicht.
Save Verarsch und Produktplatzierung. Ja also das müsste aber wirklich drin stehen.
Das sollte aber wirklich drin stehen. Das ist ja ich weiß nicht sowas mache ich nicht.
Ja Patrick das ist das macht das das ist aber so der Trick das machen alle die zeigen dann irgendwas was da geöffnet wird und dann ist immer was richtig geiles drin.
Ich mache jetzt den Skin auf und oh mein Gott das ist eine AWP Asimov.
Die Packs eigentlich in Game aufgemacht ist das das ist in Game das ist PS4.
Also wie gesagt ich weiß nicht ob es ist aber ich finde so diese diese Sachen die haben zumindest immer so ein bisschen machen nicht unbedingt so den legitesten Eindruck.
Aber wie gesagt es ist nicht von ihm oder so. Ja der macht da auch nur mit. Allerdings der Typ von von Cash App hat mir halt dieses Video als Beispiel geschickt.
Richtig Patrick for free ist nichts.
Wie du hast immer noch Pizza ich komme ja nicht dazu was zu futtern wenn die ganze Zeit am erzählen.
Auf der anderen Seite ist es ja eigentlich ganz gut für uns alle solange ich noch Pizza habe weil solange ich noch Pizza habe gehe ich nicht auf.
Weil ich bin mit Programmieren an sich für heute jetzt erstmal fertig. Ich bin jetzt bloß noch ein bisschen für die Chat Interaktion.
So viel zu Mails. Okay also anscheinend gibt es das nicht nur für FIFA Points weil er schreibt ja hier.
Moment ich muss jetzt mal was gucken.
Er hat mir nämlich ein Beispiel Video mitgeschickt. Ich will jetzt mal gucken ob das das gleiche Video ist wie der andere gezeigt hat in seinem Video.
Ich dachte nur vielleicht schicken die einfach so dieses geile Chat Boateng gezogen und so einfach schon mit als Video und das macht jeder rein.
Amazon Mail. Ah Werbekostenerstattung für Partner. Das war eine gute Nachricht.
Also wir hatten den Fishing Simulator hatten wir schon. Jetzt habe ich noch eine Anfrage zum Car der Automechaniker Simulator 2018.
Wie sieht der aus. Was hat der so zu bieten.
Das sind alles so mega langweilige Games. Car Mechaniker Simulator.
Wahrscheinlich gar nicht mal schlecht. Einfach noch nichts für mich.
Die wollen es aber wissen. Ein Dollar pro Download. Das ist nicht übel vom Alejandro.
3000 Dollar für Gladiator Heroes.
Die Musik. Gladiator Heroes hat gute Bewertung. Das sieht mir sehr nach Clash of Clans aus.
Ok Casual. Das sieht schon so casual mäßig aus. Warte mal kurz. Erinnert mich ein bisschen an Heroes of the Storm.
Das ist so ein richtig schönes 0815 Casual Melk Spiel. Das sieht schon genauso aus wie alle 0815 Casual Melk Spiele.
Ein Dollar pro Download. Das ist echt nicht übel.
Ich würde ein bisschen den Sellout starten. Es laden sich 30.000 Leute runter.
Haha. Ja. Wahrscheinlich.
Für Easy Money muss man auch mal ein bisschen die Abos riskieren.
In jedem Video würde ich in einer der ersten 3 Zeilen einen Link machen.
Du bekommst wahrscheinlich doch relativ schnell auf hohe Download-Zahlen.
Die Leute müssen ja im Endeffekt nichts machen außer runterladen.
Das gibt echt dick Kohle. Das ist krass. Vom Kohle-Standpunkt her ist das ordentlich.
Das kann auch sein, dass die Leute bei mir nicht blöd genug sind.
Aber ich kenne ja die Stats von diesem Elgato-Refling von früher von G2A.
Da kommen schon massig Leute drauf, wenn man seine Links verteilt hat.
Auch Amazon-Reflings und sowas. Da kommt ordentliches zusammen.
Klar ist es immer noch ein Unterschied, ob man einfach nur drauf geht oder auch ein Download startet.
Ich wüsste aber gar nicht, was ich in so einem Video machen soll.
Da würde ich dann so ein Casual-Milk-Mobile-Game aufnehmen und erzählen.
Ich kann nicht fake erzählen, dass mir was gefällt.
Da habe ich wohl noch nicht genug Sellout-Erfahrung für.
Es gibt ja Leute, die kriegen das ohne Probleme hin.
Die können ja alles promoten.
Oh mein Gott Leute, heute war ich im Laden und ihr glaubt nicht, was ich da gefunden habe.
Oh mein Gott, ich bin so aufgeregt.
Die können ja alles irgendwie geil verkaufen und hype verkaufen.
Aber ich habe da noch nicht genug Sellout-Erfahrung.
Ich kriege das nicht hin.
Ich kann in der Regel nur Sachen als geil verkaufen, die ich selbst ganz gut finde.
Deswegen war es an sich auch kein Problem, dass ich jetzt beispielsweise mal für Elgato ein Video gemacht habe,
wo ich gesagt habe, dass ich die Capture-Karte gut finde, weil ich fand die Capture-Karte auch nicht schlecht.
Ha, Sepharo, nice.
Wusst du aber gar nicht.
Es reicht, wenn man innerhalb von 48 Stunden diesen Ref-Link als letztes benutzt hat.
Als letzten Ref-Link.
Den G2A-Link gibt es aber.
Na doch, den G2A-Link gibt es schon noch, aber ich habe mit G2A keine weitreichendere Kooperation mehr am Laufen.
Also wenn man jetzt über den G2A-Link kauft, dann kriege ich da auch noch Anteile ab.
Das kann sich ja jeder registrieren bei G2A.
Aber ich habe keine zusätzliche Promotion-Geschichten, keine Abmachung mehr mit denen.
Also quasi so und so viele Videos im Monat mit Link und Intro und Announcement.
Ja, der Dude7, das stimmt, das Video ist schon ewig fertig, aber ich weiß nicht warum ich es nicht freigeschaltet habe.
Ich bin total bescheuert, sprich nichts dagegen.
Ja, aber den Ref-Link, man sieht ja anonymisiert, was die Leute kaufen, das sind teilweise ganz abartige Sachen dabei.
Also was heißt abartige Sachen, ja.
Das würde ich nicht abartig sagen, aber Sachen, die bestimmt peinlich wären mit den Leuten, wenn man sie zuordnen könnte.
Nein, das zeige ich nicht auf dem Stream.
Würde ich alles wissen.
Ja Patrick, es geht in die Richtung.
Allerdings war es eher was für Männer, wobei man weiß ja nicht.
Heutzutage geht es ja auch.
Wenn du eine Million Abos hast, dann Failsreveal, ja.
Vor einer Million Abos.
Eine Million gibt es Failsreveal, das dauert aber noch so lange, da ist mir da keiner Gedanken gemacht.
Der Pelzer, der Pelzer ist scharf.
Instagram, Follower kann man, ich glaube, wenn man es drauf anlegt, kann man alles an Social Media, Plattformen, Follower und Views kaufen.
Du kannst bestimmt YouTube Abos kaufen, du kannst bestimmt Viewbots kaufen, du kannst bestimmt Instagram Follower kaufen, Twitter Follower kaufen, geht bestimmt alles.
Du hast halt nichts von.
GeartyE30, mach mal Ausrufezeichen Tool.
Das ist Ebarro, da ist er.
Der Instant Tool Flick.
Warum ich das Wortschal genannt habe?
Weil mir nichts Besseres eingefallen ist.
das ist im endeffekt die klasse
in der ich das speicher was überwacht werden soll also sprich welcher welcher prozess
an welchen stellen
gescreenshotted werden soll und durch die texterkennung gejagt werden soll
mehr ist nichts besseres eingefallen für
bist du auf irgendwelchen subreddits unterwegs ja kann ich ja mal zeigen ich habe es leider
kann ich mich nicht einloggen aber wo ich wo ich wo ich immer gerne lese ist competitive
overwatch das lese ich immer gerne das lese ich gerne unix porn lese ich gerne das hört
sich schlimmer an als es ist das ist wo leute ihre gepimpten desktops zeigen so hier zum
beispiel so was ich finde es immer ganz interessant was die leute da basteln vor allem was sie
dafür für scripts und programe verwenden wie gesagt competitive overwatch ja das time
und nicht mehr hitscan spielen will habe ich auch schon auch schon gehört homelab lese ich
noch jetzt darum die leute sich daheim quasi server hinstellen und was sie sich da zusammen
bauen dann gibt es dann auch das gegenstück für zu home server das lese ich auch noch
beides ganz interessante sachen da natürlich ganz hacker news muss muss auch sein zwar
kein reddit aber da kommt man eigentlich nicht dran vorbei mal gucken was lese ich
habe noch ein paar sachen die mit ach ja bdo reddit ich gucke jetzt gerade mal in meiner
history vor auf dem anderen monitor reddit ach ja ganz wichtig ganz vergessen pc master
race sub reddit
ach ja ich muss gerade mal selbst bei mir trüben den bookmarks gucken auf dem anderen
rechner trübsch reddit selbstverständlich was da so abgeht ansonsten sehe ich jetzt hier
also auf dem ersten blick nix mehr
heroes of the storm sub reddit also aber regelmäßig weißte ich habe ich irgendwas vergessen habe
mir fällt jetzt gerade nichts ein ja das bdo das bdo sub reddit ist lächerlich ja also
das ist es ist schlimmer als das overwatch reddit das darf man sich auch nur durchlesen
aber ein bisschen lachen will ja pc master race sub reddit ist natürlich das wichtigste
ich habe bestimmt noch ein paar vergessen jetzt tails vom chess support ja das kenne
ich das kenne ich
was ich früher immer gerne gelesen habe ist das hier
also über englische programmier fels und sowas aber die machen glaube ich dann mal
so viel und zumindest finde ich das neue layout merkwürdig am liebsten habe ich bei denen
am liebsten habe ich bei denen immer die stories gelesen von irgendwelchen vorstellungsgesprächen
aber ich finde ich mich auf der neuen seite nicht mehr zurecht deswegen tschüss ach
ja reddit habe ich noch was vergessen dotnet reddit natürlich und das auch wenn da selten
was steht dass die schaap reddit die technische seite habe ich schon komplett vergessen und
natürlich ja leute auch wenn es nicht für möglich heißt aber auch das java script reddit
oder was das node.js reddit aber das dotnet reddit ist auch manchmal gar nicht so übel
hm
Pc. Master Rage, Joke, Meme. 71 Antworten. Okay, mal gucken, was daran so lustig ist.
Das ist sogar ganz lustig.
Habe ich ja letztes Video zu aufgenommen.
Wenn nur der joins, Pc. Master Rage.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
Habe ich ja letztes Video zu aufgenommen.
