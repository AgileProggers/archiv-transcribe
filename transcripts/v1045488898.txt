das funktioniert bei dir? Guck mal kurz. Twitch braucht immer ein bisschen bis das am Start ist,
bis kapiert er das online ist. Aber wo sieht man das jetzt? Vorhin stand da,
dass Streaming startet und jetzt, wo ist das denn hin? Ah hier, warte, warte, warte. YouTube,
Alter. Also Twitch ist on, Twitch ist on, aber YouTube hat es noch nicht gecheckt. Wahrscheinlich
muss ich einen Hick machen, jetzt live oder sowas. Ich glaube, ich habe es jetzt, jetzt, aha. Ah nice,
perfekt, ich sage dir, wenn es on ist. Jetzt dürfte er bei mir. Twitch hat es auch kapiert,
Twitch ist auch on. Moin, excellent, 5HatChat hier wieder am Start. Twitch hat es kapiert,
YouTube hat es kapiert, bei mir ist es auch on. Wunderbar, ich muss dich hier mal muten,
stream. Oh, hugepaint da kommt, perfekt. So. Oh, jetzt habe ich dein SSH, jetzt habe ich im
Stream dein SSH Public Key geleaked, das gibt schlimmeres. Oh nein, oh nein. So, okay,
Discord lasse ich lieber zu, man weiß ja nie. Also Leute, wir sind am Start, super agil heute.
13, Dankeschön für den Sub, 20 Monate, huge hyper subscription. Ja, wir warten jetzt mal,
bis das alles so ein bisschen angelaufen ist. Leute, sag mal, ob die Musik bei mir passt,
please. Ja, bei mir auch gerne mal in den Chat schreiben, wie es mit den Audioeinstellungen
funktioniert. Ich habe keinen Plan, es sollte passen, aber es ist ja immer so eine Sache. Ja,
ich denke auch. Chat, ihr müsst mir auch mal sagen, ob dein Neulang genug, nicht laut genug ist. Ja,
null ein Gast, das steht im Titel, genau. Wir sind heute zu zweit am Start und sind heute super
agil und programmieren was zusammen. Wenn die Streams dann so weit online sind, erzählen wir
euch auch was. Wir haben sowas noch nie gemacht, wir haben keinen Plan, wie das Ganze läuft.
Normalerweise kann ich ja so vor mich hin labern, wie ich will und es ist keiner dabei. Ja, gucken
wir heute mal. Ich bin echt gespannt. Es wird entweder richtig nice und es wird super funktionieren
oder alles gecheat. Wahrscheinlich. Du hast doch Urlaub, oder? Nice. Weil ich habe gestern ein
Video gemacht und habe angefangen mit, ja schön ist Feiertag und dann hat mir die Hälfte erzählt,
es ist gar kein Feiertag. Bei mir ist es so, ich habe jetzt generell keine Vorlesungen. Ah, das ist natürlich praktisch. Deswegen ist das ein bisschen cheat. Ein
bisschen lauter soll ich nicht machen. Okay, mache ich. Konnte man das in Discord irgendwie direkt
machen? Ja, doch, wenn du rechts klick auf mein Profilbild machst. Ah, Wahnsinn. Wobei, dann höre ich
dich ja auch lauter. Du bist bei mir laut genug. Ich mache einfach im OBS. Ich mache einfach im OBS lauter.
Da muss ich jetzt aber die Mario Kart Musik ein bisschen leiser machen. Das ist hier wieder Setup.
Ich glaube, jetzt passt es. Sogar mit Hetzenerwerbung, ja. Mal gucken, ob bei dir die Leute auch schon am Start sind. Ich habe dein Chat
offen, zeig mal da. Bei mir sind die Leute am Start. Bei dir sind sie am Start. Vergessen Sie auch nicht, die
passenden Secure Coding Verfahren zu beachten. Natürlich. Also was erwarten die Leute von uns?
Also selbstverständlich. Erstmal Daily Scrum Stand-Up. Kann man ein Board-Fit rausgeholt. Erstmal
Tasks verschieben. Ja, gar schon eine User-Story geschrieben. Ja, perfekt. So muss das sein.
Alles schön agil. Das passt mit Ton. Wunderbar. Ja gut, ich würde sagen, wenn das alles technisch
soweit passt, erzählen wir, was wir heute vorhaben. Absolut. Chat hier auf. Soll ich loslegen? Und zwar,
wir haben uns überlegt, es wäre mal eine gute Sache, wenn wir einfach zusammen ein bisschen
was programmieren im Stream. Diesmal ohne Rute Passwort League, sagt mein Chat. Ja, ich kippe
mir Mühe. Das letzte Mal habe ich das Rute Passwort gelegt von der Kiste. Also wir haben
gedacht, es wäre mal eine schöne Sache, zusammen was zu programmieren im Stream. Das heißt,
wir brauchen ein Projekt, was jetzt nicht so wahnsinnig umfangreich ist, was man auch machen
kann, weil das ist ein Unterschied, ob man jetzt offline sitzt und davor sich hin programmiert oder
hier live und die Leute zugucken, plus sich noch um die ganze Technik kümmern muss und man so was
noch nie gemacht hat und eigentlich gar keine Ahnung, hat was passiert. Deswegen haben wir uns
gedacht, wir machen einen Speedtest. Ich habe mir auch schon die passende Domain registriert,
nämlich den speedchamp.org und wir werden einen Speedtest programmieren, wo man gucken kann,
ja, wie viel Bandbreite man hat. Das ist jetzt nichts Tolles in dem Sinn, dass es noch nie da
gewesen ist, aber ich habe so was noch nicht gemacht, zumindest noch nie so was fertig
programmiert und zumindest, es ist vom Umfang her relativ klein. Ich denke mal, das gibt,
was weiß ich, 200, 300 Zeilen Frontend, 200, 300 Zeilen Backend, also was überschaubares,
was man jetzt ja auch hier in zwei, drei Stunden Stream hinkriegt und da gucken wir mal, ne?
Yes, auf jeden Fall. Also ich habe so was auch noch nie gemacht. Ich meine, wer programmiert so in
seiner Freizeit so ein Internet Speedtest, die wenigsten, aber ich denke schon, dass wir das
gut hinbekommen. So, auch wenn es vielleicht ein bisschen so scuffed ist oder so am Anfang,
ich meine, wir müssen uns erstmal dran gewöhnen und einfach mal gucken, wie es funktioniert.
Es geht auch darum, mal so ein bisschen so das ganze Drumherum an so ein bisschen zu zeigen.
Richtig, genau. Wir fangen ganz von vorne an. Wir fangen an mit GitHub-Projekt anzulegen. Also
wir machen das ganz öffentlich. Ihr könnt dann reingucken, wie das aussieht danach. Ach,
Moment, habe ich mich gar nicht auf GitHub angemeldet. Irgendwo habe ich mich auf GitHub
angemeldet. Ob ich mich auf GitHub angemeldet? Ach, hier habe ich mich auf GitHub angemeldet.
Perfekt. Also inklusive Repo anlegen und dann einen Server erstellen, dort das Ganze drauf
deployen. Wir machen DNS-Auflösung für Domain-Name. Ich mache ein Zertifikat dafür. Also im Prinzip
so alles, was man für so ein kleines Projekt braucht. Warum ist der Preis-Champ nicht auf
GitHub? Ich hatte nicht vor, den Preis-Champ auf GitHub zu machen. Muss nicht sein. Tja,
was gibt es sonst noch zu sagen? Ich glaube an sich nicht. Ich glaube, wir können eigentlich
direkt mal loslegen, das GitHub-Propositor zu erstellen. Genau, also folgendermaßen,
wir haben uns das so überlegt, im Vorfeld schon ein bisschen. Diese Anwendung wird ja
wahrscheinlich bestehen aus einem Frontend, was ihr dann seht, wo man dann Sachen hochladen
kann. Übrigens, danke für die ganzen Subs. Ich kann heute nicht jeden einzelnen Sub quasi
da zwei Minuten huldigen, weil das muss ich auch zu viele Sachen gleichzeitig konzentrieren.
Also es wird ja auf jeden Fall aus einem Frontend bestehen, sowas hier bei Speedtest. Wie heißen
die Speedtests? Net, die gibt es ja auch. Und es gibt dann im Prinzip so ein Frontend,
wo man draufklicken kann und dann zeigt es dir an, wie viel Bandbreite man so hat und
welchen Ping. Und dann muss das Ganze natürlich auch noch ein Backend bestehen, wo man, ja
man muss ja irgendwo was hochladen. Also sprich, man braucht zwei Komponenten davon. Oh nein,
IP League, schon wieder schlimm. Chat ist schon reingehackt hier, ich sehe es schon.
Das Botnetz aus Polen ist schon am Start. Aber sag es nicht so laut, sonst kommen die
wieder an den Start. Leute, heute please, keine DDoS, kein DDoS, ja. Heute nicht. Das hat
mir schon gereicht, das letzte Mal. Deswegen, das erste, wie man bei jedem super agilen
Projekt anfängt, ist natürlich ein Git Repo anzulegen. Oder, wie mein ehemaliger Azubi
gesagt hätte, ein Jit Repo. Ein Jit Repo. Jit Repo, ja. Welches Jit Repo wollen Sie
erstellen? Nein, nein. Ich lege jetzt einfach mal eins an. Wie nennen wir das Ding? Ich
würde sagen Speedchamp wie die Seite. Einfach einfach Speedchamp. Ich schaue dir dabei zu,
ne? Genau. Teamwork, weil ein anderer macht es. Kannst ja, kannst ja den Stream bei dir
einplanen. Bei mir kannst du das Bild machen. Also. Wir machen gerade basically eine Reallife,
Realtime Reaction auf dich. Genau, genau. Ich hoffe, es ist gar nicht so viel Verzögerung.
Es dürfte nicht so viel Verzögerung sein. Ich glaube nicht, nee. Wade, Max wurde das
letzte Mal gedendost. Ja, wurde ich. Und du warst dabei, das weiß ich, weil ich habe
dich im Chat damals gesehen. Okay, also wir legen ein Git Repo an. Wir machen kein großartiges
Template oder sonst was. Public das Ganze. Das heißt, ihr könnt euch das dann auch angucken
live, während wir hier dran rumbasteln. Ich sage euch aber gleich, das muss ich jetzt
mal so disclaimer, falls irgendwas überhaupt nicht klappt, ne? Also wir werden jetzt heute
nicht durchziehen, bis es dann wirklich funktioniert. Wir denken, es klappt so in zwei, drei Stunden,
aber ja, Planung und Realität ist so eine Sache, ne? Müssen wir mal schauen. So, ich
leg mal, ich mache einfach ein ganz normales leeres Repo ohne irgendwas. Gibt's Speedtest
und ich lade dich gleich mal zu ein. Obwohl, ich muss dich wahrscheinlich, doch, ich sollte
dich zu einladen. Doch, du musst mich als Maintainer einladen. Genau, genau, mach ich.
Weil sonst musst du irgendwie Pull-Request und Gedöns machen und so. Wir müssen es ja
nicht übertreiben. Warte mal, wie ging das jetzt nochmal? Bin ich jetzt blöd? Ich habe
dich letztens doch auch erst zu was eingeladen. Wo war das denn nochmal? Manage Access glaub
ich, ne? Manage Access. Ja, Direct Access hier in weit. Du musst das Repo noch umbenennen.
Wieso? Du hast es nicht Speedchamp genannt. Oh, ich habe Speedtest genannt. Oh nein. Hier,
Abmahnung ist direkt raus. Das muss gleich gelöscht werden. Das muss gleich weg. Du kannst
das ganz oben, kannst du das, du kannst das auch rename, musst nicht löschen. Das kommt
weg. Das muss von Anfang an richtig sein. So, jetzt nochmal. Also, New Repo. So, noch ein
Stream kurz neu starten. Genau, Speedchamp. So, dann mal so, past public. Wir machen keine
readme, keine get ignore. Das mache ich dann gleich von Hand. Create Repo. Und jetzt füge
ich dich mal hinzu. Jetzt bin ich mir nicht sicher. Muss ich dich da? Ich glaube, man
konnte nach den Leuten suchen, ne? Ich glaube auch. Dann wäre es einfach nur L. Da bist
du. Da. Minus. Hab dich. Easy. So, jetzt hast du Berechtigung. Wir hoffen, dass wir nix
leaken. Irgendwelche Keys oder sonst wie. Man weiß ja nie. Okay, Repo ist am Start,
noch nix drinne. Das heißt, wir können uns den ganzen Kram schon mal klonen. Ich hoffe,
ich hab mein SSH Key hier. Ich muss jetzt mal gucken, ob ich noch ne Mail oder so bestätigen
muss. Ja. Dann hoffen, dass ich meine Mails nicht liege. Das ist jetzt egal. Das ist halt
so dieser Hintergrund. Ja, da muss man echt aufpassen. Leute, ich verwende Vmware Workstation.
Chat fragt mich gerade, was ich für eine Vmware oder Vm-Lösung verwende. Ich verwende Vmware
Workstation auf dem Desktop. Hast du, auf was bist du gerade unterwegs? Windows, Mac oder
Linux? Ich bin auf Windows unterwegs. Ganz classic. Es gibt Leute, die Edge benutzen.
Ja, ich benutze Edge. Was? Ich benutze tatsächlich Edge. Hin und wieder. Okay, kann man jetzt
seit der Chrome basiert ist, kann man sich das ja sogar auch geben. Chat hier auch wieder
am Lästern. Wer benutzt Edge? Wer ist dieser Noel im Hintergrund? Ist das der Shithub-BMI-Rechner-Azubi?
Nein, nein, nein, nein, nein, nein. Der Azubi mit dem Shithub, das ist her Endpunkt. Das
ist allerdings nicht der Noel. Das sind zwei unterschiedliche Leute. Stimmt, aber gleich
Anfangsbuchstabe. Ja. Ich kann es jetzt sagen, weil ich hab ihn gefragt, ob das geht. Der
Shithub-Azubi heißt Niklas. Also kann man das vielleicht ein bisschen unterscheiden?
Nein, das ist er nicht. Das ist er nicht. Du arbeitest auch in Frankfurt mittlerweile,
ne? Ich arbeite auch in Frankfurt, ja. Wir sind uns aber noch nie über den Weg gelaufen.
Ne. Nur auf YouTube. Also wir kennen uns nicht. Es ist nicht der Shithub-Azubi. Genau. Das
wäre aber schon lustig. Das wäre witzig gewesen, ja. Gut. Also, ja, ich hab angelegt.
Repo ist am Start. Du müsstest jetzt klonen können. Und ich würde sagen, ich leg jetzt
einfach mal, dass du anfangen kannst, ich leg jetzt einfach mal ein.NET-Projekt an.
Oder wie wollen wir das überhaupt machen? Das ist eh die Frage. Also was nehmen wir
eigentlich für Technik dafür? Wie gesagt, wir wollen einen Speedtest programmieren.
Das zeigt die Leute ja noch. Hallo? Ich firefox restarten, Alter. Nerv nicht. Okay, restarten.
Ähm, genau. Wir wollen einen Speedtest programmieren. Gibt's ja jede Menge Sachen. Es gibt ja
zum Beispiel auch schon Lieber-Speed-Tests und solche Geschichten. Das sieht dann so
aus. Wobei ich will es nicht zeigen, sonst ist noch mehr Leak angesagt. Nur gut. Also
wie wollen wir das machen? Was ist denn da so eine gute Kombi? Also ich persönlich mag
ja.NET C-Sharp im Backend und ein Backend in irgendeiner Art und Weise für Datei-Upload,
Datei-Download und gucken, wie lange das braucht, wenn wir brauchen. Absolut. Also ich denke
mal dadurch, dass wir das dann zu zweit dran arbeiten, teilen wir auf, ich mach Frontend,
du machst Backend. So war es geplant, ja. Und dann gucken wir einfach, wie wir das dann
hinbekommen. Ich mein, das Frontend, das wird jetzt nicht, das ist nur viel Aufwand sein.
Ich guck dann mal, dass ich das hinbekomme, vielleicht irgendwie cool aussehen zu lassen.
Kommt drauf an, wie fancy das aussieht, ne? Richtig, richtig, genau. Also wenn wir das
auf speedtest.net-Niveau machen wollen mit so animierten, krassen Sachen, muss ich mal
gucken. Ich bin jetzt auch kein CSS-Profi. Genau. Aber wir kriegen da schon was Schickes
hin. Chat meint, wir sollen den Cobalt programmieren, das Backend. Alter, so ein Cobalt-Backend
wäre jetzt echt schon... Erstmal ein IBM Mainframe im Keller für eine Runde Cobalt.
Bin mir nicht sicher, ob man Web-Anwendungen in Cobalt programmieren kann, aber im Zweifelsfall
schon. Im Zweifel kriegen wir das hin. Ob wir das hin kriegen, weiß ich nicht. Man kann
es auf jeden Fall machen. Das ist Enterprise. Das ist richtig, Business Enterprise. Ja,
und dann noch ne, wie heißt dieses Java-Zeug, nicht Webforms, so Applets oder sowas, was
richtig oldschool ist. Oh Gott, das sind Java-Applets. Ja, mit Browser-Plugin. Nein, wir machen
es nicht in Azure-Chat. Wir machen es heute auf einem Server von Hetzner, den werde ich
gleich anlegen. Das heißt, ich würde sagen, wir machen jetzt erstmal Folgendes, dass wir
anfangen können, wo wir nicht so viel Leerlauf haben. Ich lege jetzt einfach mal zwei Ordner
an. Richtig, du legst die Ordner an, ich clone mir das und dann... Wir machen einfach so,
wir machen zwei Ordner. Wir machen zwei Ordner, Speedtest-Backend, Speedtest-Frontend, dass
wir ein bisschen unabhängig da voneinander rumwursten können. Im Backend-Ordner mache
ich dann meine.NET-Anwendung und im Frontend kannst du dein Zeug machen, komplett unabhängig
von dem, was ich mache. Wir haben uns überlegt, dass wir uns gegenseitig zugucken können.
Muss ich vielleicht auch gleich nochmal zeigen. Wir haben uns hier in Visual Studio Code geadded,
das können wir gleich mal ausprobieren, ob das funktioniert. Das gucken wir mal. Dann
können wir uns nämlich gegenseitig zugucken, wie wir das Ganze programmieren. Oder wenn
einer mal sagt, guck mal bei mir rein, dann können wir schauen. Also, gucken wir uns
das mal an. Also, ich habe die Ordner angelegt, wir machen hier mal... Wir bräuchten noch
eine Git-Ignore-File, glaube ich. An sich ja, beziehungsweise du kannst sie dann auch in
den jeweiligen Unterordnern einfach drin haben und dann Projekt bezogen. Stimmt, ist wahrscheinlich
besser. Gut, dann lade ich jetzt einfach mal hoch. Also, mit React genau wird automatisch
eine Git-Ignore erstellt mit dem Boilerplate-Code. Speed, Champ, Backend. Ich werde jetzt einfach
mal da drin schnell ein.NET-Projekt erstellen, committen und hochladen, dann kannst du dir
das Ganze klonen. Oh nein, mein Trial-Zeitraum ist zufälligerweise wieder auf 30 Tage hoch.
Geiler gesehen. Gleich gibt es Root-Passwort liegen. Na, ich versuche, Leute, ich versuche
nicht das Root-Passwort zu liegen. So, also, legen wir mal eine neue Solution an. Und
zwar im Ordner... Wo habe ich das jetzt hingemacht? Speed, Champ, Speed, Champ, Speed, Champ,
Backend. Man kann es ja auch übertreiben. So, Create Directory for Solution. Nope. Was?
Absolute Parts? Hüte. Home, Max. Wollen sie jetzt aber wissen hier. Alles klar. Das ist
nicht so agil. Das ist nicht so agil, nee. Solution Name, Speed, Champ. Wie oft ich
das Wort heute wahrscheinlich noch schreiben werde. Ey, bei jedem Speed, Champ ein Shot.
Ich sage, wie es ist. Also, ich habe hier Orangensaft. Das reicht wahrscheinlich nicht.
So, also wir brauchen ASP.NET Core Web-Application. Empty. Wir machen eine Web-AP. Letztendlich
wird das Backend relativ übersichtlich. Was soll das Speed, Champ sein? Eine Speed-Test-Seite,
die wir hier live zusammen heute im Stream entwickeln werden. Komplett von Anfang an
bis hoffentlich Ende. Wir werden sehen, aber kriegen wir, denke ich, hin. Gibt es jetzt
etwas, was ich hier gemacht habe? Project Files. Zum Teufel, da legt das hier nochmal
drin an. Weg. Kann ich jetzt irgendwie dazu überreden, dass er das im gleichen Verzeichnis
macht? Ich verschiebe den Kram einfach, klein mir wurscht. So, also wir wollen keine Authentifizierung
haben. Wir benutzen C-Sharp im Backend. Put Same Directory. Ja, schön. Create. Ich werde
das jetzt einfach nochmal kurz umschieben und dann passt das. Das kriegst du hin. I
believe in you. Genau, dann kannst du dir das Ganze... Ich lasse die Fall... Ich mach noch
gar nichts drinne. Ich lasse... Guck, der Chat weiß es schon wieder besser. Das Chat
ist schon wieder triggert. Bin ich jetzt blöd? Wo ist es denn? Was? Sag mal, hä? Wo?
Wozu? Wo habe ich das jetzt erstellt? Sitze, Leute, es fängt schon bei den einfachen Sachen
an. Chat schreit schon wieder rum, das ist falsch, das ist falsch. What the fuck? Chat,
wo habe ich es falsch gemacht? Ich erstelle einfach schon mal mein Projekt und move das
dann einfach auf. Mach das, mach das. Bin ich jetzt total verwirrt? Home, Max? Okay,
also ich hätte nicht gedacht, dass es schon am Projektanlegen scheitert, aber man kann
das doch sicherlich hier öffnen. Show im File Manager. Ist doch was da? Leckt bei euch
im Stream manchmal, schreiben die Leute bei mir in den Chat. Der Stream? Ich weiß nicht,
vielleicht kann die Kamera ein bisschen laggen, aber der Stream sollte an sich eigentlich
optimal sein. Ja, also das sollte nichts sein. Ich weiß nicht, Leute, leckt es bei euch,
ich habe hier die Vorschau an, da ist absolut gar nichts laggy. Ach, ich bin blöd, ich
habe es wirklich im falschen Ordner erstellt. Hier ist es. Okay, YouTube zeigt mir auch
eine gute Verbindung. Wer streamt denn auch mit WLAN? Ja, ich kann mir keinen LAN-Kabel
hier durch die Wohnung ziehen, das geht nicht. Das wäre hässlich. Aber es ist 5 Gigahertz
Netz, das passt. Kannst ja mal den Speedtest dann machen. Okay, der Stream hängt sich manchmal
zusammen. Streamst du über WLAN? Ich streame tatsächlich über WLAN, ja. Okay. Die Buchsen
in meiner Wohnung, die sind da so scheiße gelegt, dass ich basically an meinem Arbeitsplatz
mir keinen LAN-Kabel verlegen kann, außer dass ich jetzt quasi einmal komplett um meine
gesamte Wohnung mir eins ziehen müsste. Und ich will es halt nicht direkt über, klar
durch die Wohnung. Ja, zur Not 100 Meter LAN-Kabel. Habe ich hier für Dinger angelegt, ey. Ich
fail. Jetzt lag das. Oh, vielleicht muss ich meinen Bitrate einfach ein bisschen runter
machen. Ach, tatsächlich. Okay, sollte eigentlich nicht laggen. Ich schraube mal die Bitrate
runter. Ah, da muss ich den Stream selber wahrscheinlich kurz neu starten, ne? Also in OBS nicht. Du
kannst in OBS normalerweise die Bitrate ändern, es sei denn, wo das nicht funktioniert, ist,
wenn du über NVIDIA Decoder streamst. Dann geht das glaube ich nicht. Ja, okay, es lag
auf jeden Fall. Ich kriege da gerade auch Benachrichtigungen dafür. Echt? Also ich
streame mit Streamlabs OBS. Die Beeinstellungen dürften ja basically the same sein. Ja, ne,
dann mach mal die Bitrate ein bisschen runter. Aber Chat, bei mir lag nichts, oder? Gucken,
was die Leute sagen, aber bei mir sollte eigentlich alles in Ordnung sein. Hoffentlich streamt
er wenigstens über Wi-Fi 6. Ich glaube kaum einer hat Wi-Fi 6 Geräte. Oder streams über
Wi-Fi 6? Nein, ich glaube nicht. Ich glaube nicht. Okay, also ich habe jetzt den Kram
angelegt, ich push das jetzt mal aufgetappt. Oh nein. Warte, ich will kein neues Erregnungsverstärkter
haben. Mach mal Git Ignore, dass ich den ganzen Kram nicht mit hochlade, den ich nicht brauche.
Also wir wollen das ganze IDE Zeug, brauchen wir nicht. Und wir brauchen Out und Bin auch
nicht. Okay, wunderbar. Jetzt habe ich einen zweiten Stream gestartet. Oh fuck. YouTube,
das wird ein Speedtest. Ja Leute, wir haben noch ein bisschen Anlaufschwierigkeiten gerade.
So dumm bei YouTube. Ich verstehe es eh nicht. Die wurschteln seit Jahren an ihrem YouTube
Streaming Zeugs rum und kriegen es aber echt nicht gebacken. Aber gar nicht. Sehr, sehr,
sehr komisch, ne? Egal, müssen die Leute den neuen Stream öffnen. Link zum Teilenabrufung.
So, jetzt passt das. Git Commit A minus M. Init. Git Push Origin Master. Perfekt. Alles
klar. So, ich habe jetzt nach sehr viel Hin und Her und sinnlosem Rumgeschieben geschafft,
dass unser GitHub Projekt zumindest steht. Wunderbar. Chat gibt ihr recht, also YouTube
ist schlimm geworden. Was ich auf YouTube nicht so genau verstehe, ist, die haben ja
mal großartig angekündigt, sie wollen jetzt auch im Game Streaming Bereich Twitch Konkurrenz
machen. Und das Einzige, was die gemacht haben, ist, ihre normales verkacktes Streaming genommen
und ein Darksteam dran geklebt. Und da tun jetzt irgendwie als wäre das super toll. Also
ich habe echt keine Ahnung, warum man das auf YouTube streamen soll. Ich verstehe das
auch nicht. Ich verstehe das auch nicht. Ey, zur Not, wenn das jetzt wieder Probleme
macht, ich mache mir einen Twitch-Account und let's fucking go. Ne, das muss jetzt eigentlich
funktionieren. Aber sollte gehen. Sollte gehen. Ich will doch nur ein bisschen JavaScript-Spaghetti-Code
machen. Genau. Ich muss schon die ersten Leute bannen, weil mir da irgendwie blödes Zeug
rumgespammt wird. Oh ne, heute übrigens das Ausrufezeichen heute stimmt nicht. Wir spielen
heute kein Half-Life-Mod. Nein, nein. Hab ich über euch die richtige Kategorie? Ja, Science
and Technology, das passt. Ach, jetzt ist das wieder nur... ach, egal, funktioniert. Leute
sind da, wunderbar. Top. So mehr oder weniger. Jetzt müssen wir noch den neuen Chat holen.
Dann brauchst du dann gleich noch mal den Link zu mir in den Kommentaren. Genau, kannst
du machen. Teilen, zack. 300 Zuschauer, was ist da los? Ja, die Leute haben heute frei
und wollen nichts. Die haben schon darauf gewartet, dass sie uns hier beim Failing zugucken
können. Ist so, ist so. Ich gucke mal. Freitag Mittag. Weißt du, bei dem Wetter, was willst
du da auch anderes machen? Es geht eigentlich bei mir. Es ist gar nicht so wild. Es hat
heute Morgen ein bisschen gewittert, aber jetzt ist sogar ein bisschen Sonne. Geht. Also
hältst Hälschin Grenzen. Hier ist es richtig heiß gefüllt. Richtig. Ja, es ist, es ist
richtig, es ist ultraspül. Genau, genau. Bovel. Also dein Stream ist immer noch off. Ja ja,
ich habe einen neuen Link jetzt. Ach so. Ja, wie gesagt, ich konnte, ich konnte das nicht
mal. Ich sehe es. Ich sehe es. Okay, wunderbar. Meine Güte, es ist so fail auf YouTube. Es
ist total bescheuert. Es ist total bescheuert. Gut, wunderbar. Ja, sag, wenn es so weit ist.
Also ich habe den Gramm jetzt hochgeladen. Naja, also ich, ich bin ready basically. Chat
möchte wissen, mit welchen Sprachen wir das programmieren. Also ich würde mal sagen,
wir sind uns noch nicht so hundertprozentig sicher, was es jetzt im Detail alles wird,
aber Sprachen können wir schon sagen. Wir machen Backend. Backend wird.net, C-Sharp,
Frontend wird logischerweise JavaScript, was auch sonst. Wird schwierig und du machst
wahrscheinlich in React. Genau, ich mache das mit React. Da habe ich so am meisten Erfahrung,
ist an sich natürlich auch Overkill. Klar, so ein bisschen, aber wäre ja sonst, wäre
ja sonst langweilig. Das heißt Frontend mit React. Gucken, ob ich mir noch irgendeine
CSS-Library hinzufüge und gucken wir mal, dass das passt. Hast du gesehen, dass man
jetzt mit Blazor, dass die jetzt auch angefangen haben, mit C-Sharp in den Browser zu bringen?
Mhm, das Blazor WebAssembly und so weiter. Das wollte ich mir auch mal C-Sharp mal anschauen,
weil das an sich echt nice ist. Ja, also ich muss sagen, ist meine persönliche Lieblingssprache,
wenn es halt nichts gibt, was dagegen spricht. Es gibt ein paar, gibt Projekte, wenn du irgendwie
einen Bootloader programmieren willst oder sowas, dann ist weder JavaScript noch C-Sharp
wahrscheinlich das Mittel der Wahl, aber ansonsten ist das echt cool. Was ich bei Blazor ein bisschen
dumm finde, ist, also immer noch, ich glaube, das werden sie noch fixen in Zukunft, Blazor ist an
sich ein bisschen langsam im Vergleich zu JavaScript, aber es ist halt ein riesen Download. Also wenn du
das starten willst, dann muss ja komplette.NET Runtime als WebAssembly runterladen. Du musst
erst mal irgendwie, keine Ahnung, 15 MB oder so downloaden, dass die Seite überhaupt eine Chance hat,
zu starten. Mhm, das stimmt. Aber ich glaube, das ist eine coole Sache. Generell, ich glaube,
generell so mit WebAssembly kommen noch so ziemlich coole Sachen im Webbereich. Ja,
denke ich auch. Gerade was Spiele und High-Performance-Sachen angeht oder wenn die
mal anfangen, irgendwann so Dinge wie Photoshop oder so umzuziehen, dass es im Browser läuft.
Auf jeden Fall. Ich fühle mich wie so ein Rentner, weil ich die Schriftgröße von meinem Editor so
groß habe, damit der Streamdata einigermaßen... Ich habe es auch immer mega fett. Aber ich hoffe,
es funktioniert. So, ich habe jetzt auch mal ein Projekt offen. Wir können das jetzt mal mit
Wishlist Studio Code gucken. Chet fragt gerade, wie willst du denn eigentlich die Geschwindigkeit
messen von dem Up und Download? Soll ich da mal kurz was zu zeigen? Erzähl, erzähl. Also,
wir haben uns im Vorfeld so ein bisschen Gedanken schon gemacht. Es gibt von Mozilla einen Artikel
dazu. Mit Mathematik, ja, das stimmt. Ein bisschen rechnen muss man dabei. Zum Glück
in Studierst du Informatik, da ist das kein Problem. Da kriegen wir das hin. Quasi Upload
Size geteilt durch Zeit. Das sind schon Big Brain Quick Maths, was man dafür braucht. Aber
wie man das macht, ich habe einen Artikel von Mozilla gefunden. Binary Upload oder sowas. Wir
werden das, genau hier, Sending and Receiving. Ich kann dir mal den Link schicken. Falls du
den später brauchst. Siehe Discord. Die haben ein Beispiel hier von Mozilla und wir werden das
komplett ohne viel Overhead machen. Das heißt, wir senden wirklich Binary Zeug. Also wir machen
jetzt kein Form Upload oder sowas, wo dann quasi ein 10% oder so der hochgeladenen Daten so Overhead
sind, sondern wir schieben wirklich Bites hoch. Und das ist hier neu. Da brauchst du einen halbwegs
neuen Browser. Was heißt halbwegs neuen Browser? Halbwegs neuen Browser. Ein Browser, der älter ist,
also jünger ist als drei, vier Jahre. Und da kann man jetzt direkt Bites hochladen. Und wir
werden einfach, haben wir uns jetzt überlegt, so ein 20 MB Bite Array nehmen und einfach hochladen
und gucken und auf dem Server messen. Oder im Kleinen messen, müssen wir mal gucken, wie
lange der Upload dauert. Und dann sollte es relativ simpel sein. Wir wissen, dass wir 20 MB
hochgeladen haben und wir wissen, wenn wir das messen, wie lange das gedauert hat. Und von der
Theorie hier ist dann Upload Size durch Upload Zeit, ja, die Geschwindigkeit. So weit in der Theorie.
Wir sollen mal schauen, wie das Ganze funktioniert. Und das Gleiche im Download auch. Genau. Es wird
jetzt nicht so detailreich sein, aber das ist ja auch, ich denke mal, am Anfang noch nicht der,
das sind nur zwei. Hauptsache, da steht irgendeine Zahl in Emmet oder so. Und dann haben wir das.
Und dann so Problematiken, weil wir können jetzt zum Beispiel dadurch jetzt nicht groß
eigentlich den Ping messen. Das stimmt. Wir können vielleicht höchstens sagen,
okay, wie lange dauert, bis die Antwort kam, bis zur nächsten und so weiter. Deswegen werden
wir das in so in dieser ersten Version so ein bisschen außen vor lassen. Genau. Ob wir da
irgendwie so nah ran kommen an den Ping wie möglich. Genau. Wir werden einfach mal probieren,
dass wir jetzt irgendwas halbwegs funktionieren, das hinkriegen. Und dann können wir das ja noch
ein bisschen schöner machen. Ich sehe bei mir im Chat schon die Leute, das könnte man doch auch
locker mit WebRTC machen. Jaja, könnte man sicherlich alles machen. Wir könnten über
WebSockets machen. Wir könnten über WebRTC machen oder sonst was. Wir beschränken uns
erstmal drauf für die erste Version. Wir schieben einfach ganz normal mit einem Postrequest Zeug
hoch und laden Sachen runter und messen, wie lange es dauert. Und wenn das geht, kann man
sicher überlegen, wie man weitermacht. Exactly. Genau. Ja, so sieht es aus. Okay,
dann lass uns mal schnell probieren, ob Visual Studio Code funktioniert. Ich starte mal kurz
eine Collaboration Session in der Hoffnung, ich leake den Join Link nicht. Das wäre nämlich
ziemlich blöd jetzt. Code. Der Chat wartet schon drauf, ich sehe es schon. Gibt es schon
ein agiles Jira-Board für das Projekt? Ah, stimmt. Ich weiß gar nicht. Das kann man aber bei GitHub.
Bei GitHub kannst du Boards erstellen. Stimmt, stimmt. GitHub-Issues kann man machen, ja. Ganz,
ganz wichtig. Du kannst auch Cumber-Boards erstellen auf GitHub mittlerweile. Jawoll. Endlich. Endlich.
Da habe ich drauf gewartet, dass wir und da müssen wir vorher, aber wie du gesagt hast,
wir müssen erst noch ein paar User-Stories definieren. Ja, das stimmt. Und Tribe-Meetings,
ganz wichtig. Okay, Live-Share. Ich versuche mal wie Sign-In mit GitHub. Will mich das veräppeln?
Ich habe mich eben schon Sign-Int. Lass mal gucken. Ich bin auch drin. Ich nicht. Das ist
natürlich blöd. Okay, Chat, ihr müsst jetzt mal kurz weggucken. Ich blende euch jetzt aus.
So, ihr dürft jetzt nix sehen. Authorize. Open. Ja, mach. Wishlist Studio. So, sollte eigentlich,
sollte eigentlich jetzt funktionieren. Ich mache mal wieder, mache mal wieder an. Guck
jetzt mal ins Clipboard, dass ich nicht jetzt den Invite-Link irgendwie leake. Nee, nee,
habe ich nicht. Okay, ich mache euch wieder an, Chat. Die Leute geiern immer so krass drauf,
dass wenn was liegt, ey. Aber kann ich schon nachvollziehen. Okay, ich bin, Moment. Immer
noch Sign-In? Was ist das schon wieder? Writing information to keychain failed. Ist das jetzt
neueste GitHub-Kryptowährung? Blockchain-Login, oder? Dein Login kann nicht auf die Blockchain
geschrieben werden. Deswegen können wir uns den Code in Visual Studio nicht teilen. Ach,
jetzt geht's. Okay, alles klar. Invitation-Link has been copied to Clipboard. Ganz, ganz schlechte
Idee. Ganz schlechte Idee. Ich invite dich aber vorher mal. Invite-Contact. Du müsstest jetzt
was gekriegt haben. Ich schau mal. Also, ich habe dich. Yes. Ich habe accepted. Okay,
joining. So, und jetzt mache ich mal kurz mein Clipboard leer. Clear. Und mach den Chat noch
mal schwarz. Und gucke, ob es aus dem Clipboard raus ist. Ja, okay, wunderbar. Nein, sind nicht
aus dem Clipboard. What the fuck? Alter, die wollen jetzt nicht ernsthaft, dass ich neu
starte, dass es aus dem Clipboard verschwindet oder wie, oder was? Okay. Doch. Mach mal nicht.
Egal. Man sieht es eh nicht. Man sieht es eh nicht komplett. Man sieht es eh nicht. Mein
Clipboard-Manager ist zu klein. Also, man sieht gar nicht den. Ich müsste es quasi explizit
auswählen und dann irgendwo reinpasten. Man sieht das gar nicht in der Historie. Alles klar,
alles liegt. Wunderbar. Bist du getjoint? Ich bin getjoint. Ich sehe jetzt. Siehst du
Projektfiles und so? Yes. Ja, perfekt. Wunderbar. Da können wir anfangen. Was ist denn der Speed
Champ? Wir versuchen, eine Speed-Testing-Seite zu bauen. Heute live im Stream zusammen. Daniel
Kuell kümmert sich ums Frontend und ich kümmere mich ums Backend. Lass uns doch mal zusammen
in der Datei gehen und gucken, ob es funktioniert. Ich bin gerade mal in dem Controller drin.
In dem Vettacontroller. Ist ja auch ein gutes Feature für unseren Speed-Test. Das ist das
Standard-Web-Abi-Projekt. Da kriegst du das dabei. Heute ist es... Was? Sweltering? What
the fuck? Ist das Schwül? Was ist Sweltering? Chat, Englisch-Profis, was ist Sweltering?
Okay. Wenn der Chat das sagt, dann muss das so stimmen. Chat weiß sowas immer. Okay,
im Prinzip scheint es zu funktionieren. Kannst du auch was reinschreiben? Ja, hab ich schon
gerade. Hast du schon? Gut. Wunderbar. Das funktioniert. Wunderbar. Im Prinzip werde
ich jetzt eh Folgendes machen mit dem Controller. Der kommt jetzt erstmal weg. Okay. Ich hab
noch keine Permissions zu pushen. Echt nicht? Hast du nicht? 4-0-3 unauthorized bekommen.
Für die Wahrscheinlichkeit kann ich nicht direkt in den Main-Branch pushen. Müsstest
du eigentlich? Ich hab nix extra protected oder so. Guck mal hier. Settings. Ich hab
Manage Access. Du bist dabei. Du bist auch eingeloggt, oder? Nee, Pending-Invite. Du
hast noch nicht angenommen. Ich hab noch nicht angenommen. Stark. Okay. Daran liegt's.
Weil jetzt hätte mich das echt gewonnen. Ich hab dich ja auch letztens eingeladen.
Ging sofort. Hä? Ja, das stimmt, das stimmt. Okay, dann muss ich mal gucken, wo diese Mail
ankam. Ray Cohn, wir programmieren einen Schnelltest, einen Internet-Speedtest zusammen. Genau.
In der Hoffnung, dass du... Ah, hier ist die Invalid angekommen. Ach, ich wundere mich
schon die ganze Zeit, warum in deinem Chat nix mehr kommt. Ich hab noch den alten Chat
auf. Ich muss den neuen erstmal wieder auspoppen. So, Accept Invitation. Okay, wunderbar. Jetzt
kann ich es nochmal probieren. Einen Corona-Schnelltest, einen Speedtest. Ohne Scheiß. Könnten wir
einen Corona-Schnelltest programmieren hier? Wir werden reich. Online-Frontend-Corona-Schnelltest.
Weißt du, du musst unten in dein Maussensor reinhauchen. Ey, das wär doch mal geil, oder?
Dass da nächstes Millionen-Start-up ist am Start. Da seh ich uns. So, wo ist denn jetzt
mein... Visual Code Studio A. Also ich würd vorstellen, wir machen das so. Wir lassen dieses
Visual Studio Code hier offen mit dem Code-Share, aber jeder wurstet in seiner eigenen Idee rum.
Genau. Na, da kommen wir uns auch nicht in die Quere. Du bist hier im Frontend-Ordner,
ich bin im Backend-Ordner. Wir müssen uns erstmal überlegen, wie wir das Backend-Technisch
überhaupt machen wollen. Ich muss dir ja quasi die Routen zur Verfügung stellen, dass du
was machen kannst, ne? An sich brauch ich die Routen schon, bevor ich das überhaupt anfangen
kann. Ja, denk ich auch. Im Endeffekt könntest du die Routen bereitstellen und da einfach
mal irgendwie so ein Sleep reinmachen. Ja, kann man machen. Damit ich schon mal so quasi
mit so Metadaten arbeiten kann und den Rest gucken wir dann, wenn's soweit ist. Genau,
ich würd sagen, wir müssen es ja nicht komplizierter machen als sonst wie. Wir machen einfach
slash speedchamp im Controller. Das heißt, da kannst du dann deinen Upload starten.
Ich mach ein slash speedchamp und ich mach wirklich wie du sagst, ich mach einfach ein
Sleep rein, dass du gucken kannst, dass das... Wobei, ich mach kein Sleep rein, ich geb dir
einfach irgendeine sinnlose Jason-Antwort, dass du siehst, dass es funktioniert. Stark.
Machen wir so. Danach können wir gucken, wie wir das machen. Wir müssen uns eh überlegen.
Da kann der Chat sich auch mal Gedanken zumachen. Wie würdet ihr das machen, Chat? Sollen wir
das möglichst cheat-sicher machen oder nicht? Weil die Sache ist die, wenn man das im Frontend
misst und ich glaube speedtest.net macht das im Frontend, da kann man relativ einfach Ergebnisse
faken. Glaub ich, ich weiß es nicht. Wenn man das rein im Frontend misst, dann kann man
natürlich bescheißen. Ja, da kann ich da übergeben, was ich will. Oder sollen wir
das im Backend messen, dass quasi der Server überprüft und das in irgendeiner Art und
Weise in der Datenbank speichert, dass man sich die Ergebnisse nachher abrufen kann.
Könnt ihr euch mal überlegen, was ihr dafür am sinnvollsten haltet. Backend, sagt der
Chat. Ja, ich finde auch, wir probieren es einfach mal. Dann messe ich das und du pusht
einfach wie verrückt immer 20 MB rauf und ich messe, wie lang es dauert. Okay, ich lege
jetzt aber erstmal einen Controller an mit slash speedchamp ohne irgendwas. Genau. Du
hast bei dir lokal auch irgendeine.net-Taste starten kannst, oder? Ja, du müsstest mir
dann nur sagen, wie. Ja, mache ich gleich. Ich habe.net installiert, Version 5 und wenn
du mir dann sagst, wie ich das irgendwie zum Laufen bekomme. Du musst das einfach pullen
und.net run drinnen eingeben, fertig. Ja, okay, easy. Frontend wird natürlich in Blazer
gemacht. Nein, Frontend wird wahrscheinlich in React gemacht. Genau. Speedchamp-Controller.
Und nicht mit Angular. Angular. Und nicht mit Angular. Angular, ja, da hat mal ein Chat
geschrieben, da mag jemand mehr Angular. Oh, oh, oh. Verstehe ich gar nicht. Kann ich nicht
nachvollziehen, wie man, wie man Angular mehr mögen kann? Aber jedem das eine, ne? Ihr
wisst, ich bin, ich bin Vue.js-Fan und letztendlich soll jeder nehmen, was er will. Ja, im Endeffekt
ist halt Angular nahezu, weil es halt ein komplettes Framework abbildet, ne? Du hast
ja mit Vue und React eher so Libraries, die dir den Vue-Layer darstellen und mit Angular
hast du halt wirklich ein komplettes Framework, was auch noch Routing mit reinbringt und Caching
und alle möglichen Sachen, der so was wie React nicht out of the box mitbringt. Ja,
ich denke, wenn man so im Enterprise, Business, was auch immer Umfeld ist und irgendeine Riesen,
irgendeine Riesenanwendung macht, dann mag das sinnvoll sein, aber ja, für unsere Zwecke
jetzt vielleicht nicht so. Das stimmt, das stimmt. Also, was brauchen wir denn jetzt?
Ich hab jetzt einen Controller angelegt, der Meinung ist, er geht nicht. Ach so, hier,
dann, wie machen wir das? Wir machen Postrequest, oder? Postrequest, weil du musst ja Zeug hochladen.
Du machst ein Postrequest, weil ich muss Zeug hochladen, ja, genau. Wir machen Post,
und zwar wir machen ein Post unterhalb von slash speedchamp. Ich muss mal, ich muss
mein Outlook schließen, weil jetzt bekomme ich sonst die ganze Zeit Meldungen, weil Leute
Issues in dem Weight erstellen. Ernsthaft? Chad, reißt euch zusammen. Es war klar, war
klar, war klar. Wann kommt der Cobalt-Stream? Macht ihr nur, macht ihr nur. Der Cobalt-Stream,
du wirst lachen, ich hab einen Cobalt-Stream gemacht letztes Weihnachten und das war grausam.
Ach Gott. Ja, also Cobalt war wirklich nicht, war kein Spaß. Ich mach jetzt mal ganz schnell
hier den Controller fertig, dass du was machen kannst, und dann guck ich mal bei dir mit
in den Stream, ob du das gestartet kriegst. Ich überleg grad, was machen wir jetzt hier,
wir warten einfach. Await, Task, Delay, was weiß ich, 10 Sekunden, ja, komm, eine Sekunde,
reicht, fertig. Bestow, also das ist hier die hohe Kunst. So, ich hab jetzt einen slash
speedchamp gemacht, der eine Sekunde wartet. Ja, okay, wunderbar. Ich könnte schon ein
bisschen was einlesen, aber das mach ich gleich, ich pushe das jetzt erstmal und dann können
wir's machen. Achja, die Domain hab ich schon gekauft, Leute. Also speedchamp.org hab ich
schon gekauft. Da muss ich mich übrigens auch gleich noch einloggen, das machen wir
alles. Ich pushe dir das jetzt, dann kannst du dir ein bisschen Gedanken frontendmäßig
machen, weil ich muss am Ende wahrscheinlich einfach nur einlesen, also wahrscheinlich
ist meine Seite back-end technisch nicht so lang, und dann mach ich die ganzen Server-Geschichten
in der Zwischenzeit. Ja, mach das auf jeden Fall, ich weiß es. Okay, also slash speedchamp
ist am Start. Willst du den Jason zurückhaben? Ach komm, einfach zum Aufrufen jetzt erstmal,
dann können wir gucken. Sobald du was anderes brauchst, sag einfach Bescheid, dann machen
wir das. Wettervorhersage kann weg. Delete. Bei mir fragt im Chat, warum Windows OS für
die Entwicklung? Gute Frage. Na ja, das ist basically das einzige, was ich habe. So, ich
hab noch einen Mac, aber auf dem entwickle ich nicht gerne. Es hat sich halt einfach ergeben,
dass ich Windows benutze, weil ich da so mit den Tools am familiärsten bin. Okay. Ist
jetzt kein, mein Gott, jetzt nichts krasses. Nee, also ich denke auch, es soll jeder das
nehmen, wo er am besten mit klarkommt. Ich bin da schon längere Zeit von weggekommen,
mir zu sagen, hey, die Leute, ich weiß nicht, ich bekehr keine Leute mehr. Auch im privaten
Bereich nicht mehr, wenn da einer sagt, er benutzt Windows, da muss er im Zweifelsfall
mit leben, wenn ich sag, kann ich dir nicht helfen, da hab ich keine Ahnung von, aber
ich versuche nicht mal die Leute zu bekehren, so nach dem Motto, ja verwende Linux, verwende
das, weil dann kommen sie zwei Wochen später an und wollen, dass du ihnen hilfst und dann
regen sie sich noch auf, dass du dran schuld bist, weil du so einen Mist empfohlen hast.
Nee, nee, nee, nee. Ja, das stimmt, das stimmt. Du hast was gepusht, hab ich gesehen. Ich
hab was gepusht, ja, das muss man es wahrscheinlich auch angewöhnen, immer erst einen Pull zu
machen, bevor wir dann was pushen. Ich pull. Hat funktioniert. Oh, ist im Frontend, hast
schon hier Scaffold Project. Ich hab schon, ich hab schon basically die ganze Anwendung
fertig. Okay, dann push ich den GIT commit. Hast du auch eine ordentliche Commit-Message
gemacht? Initial Commit. Hoch agil sind wir. Also, da macht man ja prinzipiell nur Commits
in it oder Temp. Temp ist auch ein gutes. Ich kann ja, ich kann ja die immer random irgendein
Issue markieren. Stimmt, das machen wir. Dann schließen wir einfach bei jedem pushen und
Issue auf GitHub. So, also Leute, nein, die E-Mail-Adresse ist nicht geleakt. Das ist
die öffentliche E-Mail-Adresse, die ich auch für Donations hab hier am Stream. Nix liegt.
Also, ich hab gepusht, kannst mal schauen. Okay, dann prob ich mal. Und ich gucke jetzt
mal bei dir mit ins Stream rein, wenn du pullst, dass das, dass es gestartet kriegst. Okay,
ich hör jetzt den Speech-Hat-Controller und so weiter und jetzt sagst du einfach.net
run so. Ähm, Moment, wau, ich hör mal, ich hör mal, jetzt hören wir uns doppelt. Ich
seh, oh, der Stream hat Delay. Oh nein. Ich reloade mal. So langsam. YouTube, come on.
Du bist, du bist gerade noch in Issues drin. Oder du bist bei dir, bist du schon im Terminal
irgendwo, oder? Ich hab das Terminal bei mir offen. Alter, ist das langsam auf YouTube?
Das ist ja echt langsam. 10 Sek, krass. 10 Sekunden Delay. Okay, jetzt machst du, jetzt
machst du bei mir auch das Terminal auf. Du gehst, du gehst rein in den Backend und
sagst einfach.net run. Fertig. Run, okay. Und dann auf Port 5000, ne? Und dann ist es
glaube ich auf Port 5000 oder Port 5002 oder was auch immer. Jaja, genau, genau, das sieht
gut aus. Äh, das, das werde ich noch ausschalten. Der macht ja aktuell noch HTTPS und Redirect
und sonst was. Das kommt alles raus, weil vom Plan her ist ja so die ähm, Zertifikat-Geschichte
und so. Machen wir nicht selbst in dem, in dem.net Programm. Wir lassen uns per Letzter
encrypt ein Zertifikat ausstellen und machen da was davor, was das macht. Machst wahrscheinlich
ja, genau. Ähm, okay, dann ist halt, ah warte, das ist ja auch eben Postrequest, ne? Das
ist ein Post, genau. Sollte, sollte eigentlich funktionieren, wenn du nen Post machst auf
slash speedchamp. Du wirst mich wundern, wenn das nicht funktioniert. Ist dumm, dass ich
das jetzt nicht zugucken kann. Naja, Pech. Ihr müsst halt gucken, warte mal. Look, localhost
5000. Genau. Der wirft mir halt Errors mit dem SSL. Ja, gut, das. Also, also, wenn ich
halt HTTP localhost 5000 slash speedchamp mache und dann Post. Ähm. Ja. Dann sagt
er mir SSLP, blablabla, oder SSL Remote Key was not okay. Ach, ich hab, ich, der leitet
um auf, ähm, standardmäßig auf SSL, das muss ich noch rausmachen, warte mal. Das ist
der erste Bug schon. Eine, eine Zeile quasi. Der ist kaputt. Das muss ich rausschmeißen.
Der macht standardmäßig Umleitung, HTTPS Redirection, das brauchen wir alles net. Es
sollte eigentlich funktionieren. Ja, genau. Ihr wisst, wie das ist, ne? Famous Last Words,
sollte eigentlich funktionieren. Also, Authorization und HTTPS Umleitung machen wir weg. Brauch
man nicht. Äh, ich seh übrigens gerade, ich generiere, by the way, automatische Swagger
UI, äh, Swagger, äh, AP Documentation. Wusste ich auch nicht, dass ich das mach, ja. Die,
die scheint ganz wichtig zu sein für eine Uhr. So. Ich mach mal ein neues Comet. Und
das jetzt mal hier an alle, die im Chat, äh, bei beiden Channels dabei sind. Normalerweise,
wenn man jetzt lokal bei sich ist, würde man Folgendes machen. Das mach ich jetzt explizit
nicht. Ich zeig's euch aber mal. Man würde sagen, hier geht, äh, keine Ahnung, man fügt
die Dinger hinzu, dass man committet, und dann sagen die Leute meistens so was wie,
anhängen ans letzte Comet. Das Dumme ist jetzt nur, wenn ich das letzte Comet quasi
überschreibe, das ist lokal wunderbar, aber dadurch, dass der Noel sich da schon gepusht
hat, kriegt er jetzt ne Fehlermeldung, wenn ich das mache. Das heißt, ich muss ein neues
Comet oben drauf machen. Das heißt, sobald man nen Public, nen Branch Public hat, sollte
man nie da dran an der Historie rumspielen. So. Git commit, minus a, minus m. Tja, fix.
Beste. Push. So. Kann's noch mal. Jetzt hat er fertig gepusht. Kann's noch mal. Jetzt
sollte es eigentlich funktionieren. Ich probier's bei mir lokal auch mal aus..net run. Genau.
Perl. Minus x. Post. Localhost. Port 5000. Slash. Speed. Champ. Ja, sieht gut aus. Yes,
sieht gut aus. 200, okay, eine Sekunde, wunderbar. Ja. Äh, schön. Ja, wunderbar. Das heißt,
du kannst schon mal was abkragen. So, jetzt kommt, äh, jetzt kommt noch eine Frage im
Chat mit, was ich den Reverse-Proxy mache. Das mach ich nicht mit Traffic. Das ist mir
zu kompliziert. Das mach ich mit Cuddy. Das startet man einfach, macht drei Zeilen Konfig
und dann kriegt man ein Zertifikat und gut ist. Ja. Genau, äh, wie machen wir jetzt
am besten weiter? Willst du jetzt ein bisschen die Seite basteln und ich mach Server? Äh,
genau, ich würde jetzt ein bisschen die Seite basteln. Du machst den Server und, ähm, dann,
dann gucken wir mal, wie gut das geht und dann, ähm, ja, mache ich mir jetzt mal ein bisschen
Gedanken, wie ich das am besten im Frontend umsetze. Ja, ich hab auch noch keine Ahnung
genau, wie wir das machen. Den Mod, das Mozilla hab ich dir gepostet, ne? Äh, ja, das ist
das, das ist im Mozilla-Ul. Genau, wunderbar. Worum geht's hier? Kann ich mal die Projektdokumentation
sehen? Ja, kannst du? Moment, was ist die Standard Swagger-UI? Ah, hier, Sekunde, Sekunde.
Zeig ich dir? Kriegst du? Kriegst du? Projektdokumentation, keine Probleme, haben wir alles, haben wir
alles. Hier. Hammer, Hammer, Hammer. Local House, Port 5000. Ich kann das, ich kann das schreiben.
Port 5000 slash Swagger. Hier, guck, da ist sie, Leute. Projektdokumentation. Jetzt kommt
der Chat an, ist-soll-Analyse. Was kommt als nächstes? Gantt, Gantt-Diagramm oder was?
Ey, ich hab, wir müssen noch Risikoanforderungen, müssen wir uns auch noch angucken. Also, also.
Aber seht ihr den Chat hier? Da. Wir haben eine Apidek-Dokumentation. Die ist zwar,
wenn man ehrlich ist, ziemlich mickrig. Das Einzige, was da drin ist, ist Code 200, Success.
Ja. Gut zu wissen. Ist halt, ist halt da, ne? Aber ist ja cool. Hab ich noch nie ausprobiert.
Man kann sich jetzt jeder seinen eigenen Speedchamp programmieren. Mit der Doku. Mit der Doku
in unserem Projekt schon. Gibt ja jede Menge solcher Sachen. Genau, wunderbar. Joa. Dann
kannst du dir ja mal ein bisschen Gedanken um Frontend machen. Wie wollen wir das machen?
Soll ich jetzt, also ich bastel jetzt Server, soll ich mich muten in der Zwischenzeit, weil
ich würd ein bisschen was bei erklären. Und das sieht man bei dir ja nicht. Ich glaub,
wir können uns so ein bisschen bei, neben bei muten, jeder erklärt so ein bisschen,
was er gerade macht. Und wenn der Server dann da ist, sagst du Bescheid. Genau. Genau. Okay.
Gut. So machen wir das. Bis gleich. Bis gleich. So Leute, also. Geh los. So wie wir uns das
jetzt überlegt haben, der Noel bastelt ein bisschen am Frontend. Und ja, ich werd dann
das Backend machen. Aber jetzt müssen wir erstmal einen Server anlegen. Weil ohne Server
können wir das Ganze nicht laufen lassen. Und ich hab mir schon was gekauft. Ich zeig
euch das mal. Guck mal da. Hallo, Peter Wubbel. Ihr seht wieder, ich hab mich mit meinem legit
legit Name registriert, wie wir ja alle wissen, dass ich Peter Wubbel heiße. Und ich hab mir
eine Domain gekauft, die hat nämlich speedchamp.org. Da ist es. Oh, ich hab acht. Ich hab acht Tage
Zeit, meine Kontaktkontaktinfo zu verifizieren. Ich hab da so meine Schwierigkeiten, das zu
verifizieren, weil, weil ich zeig's euch mal. Okay, das heißt, die Domain ist nach dem Stream
weg, keck wait. Nein, nein, nein. Email was sent, what the fuck. Warte mal, Domains. Wie
kommt man jetzt überhaupt in die Settings rein hier? Manage. Okay, wunderbar. Weil das
witzige ist, ich glaube, es wird schwierig zu verifizieren. Oder meinte ich, ich kann
mich hier, ich. Peter Wubbel, Teil eins, Frankfurt in Hessen. Liegt Telefonnummer, die es by
the way nicht gibt, irgendwas eingegeben. Du musst glaube ich nur eine Mail bestätigen.
Das probiere ich mal aus. Leute, ich probiere mal aus, ob ich das, ich logg mich mal kurz
in meiner E-Mail Adresse ein. Anderen. Anderen. Rosa. Gucken wir mal. Weiter zum Postfach.
Wo ist das denn? Spam Verdacht? Ach, das hätte ich vorher schon machen müssen. Das
ist im Spam Verdacht gelandet. Ne. Message vom NamecheapCEO, jaja, ist klar. Also ich
habe nichts bekommen. Ich habe nichts, ich habe nichts bekommen hier. Ich habe, ich habe
ihnen gesagt, ich will das verifizieren. Verifizieren. E-Mail war send. Also, juckt
sie nicht, ich habe keine E-Mail gekriegt bis jetzt. Keine Ahnung an, was sie das geschickt
haben. Na gut, schauen wir mal. Zumindest, ich habe ja acht Tage Zeit, das so zu machen.
Also was wir jetzt machen, dann müssen wir es folgendes. Ich habe mir, wie gesagt, diese
Domain hier habe ich mir gekauft, speedchamp.org. Sprich, wenn jemand jetzt drauf geht, kommt
man wohin? Hier auf irgendeine komische Parkseite. Was ich übrigens auch immer frech finde, wenn
die quasi schon das für Werbung benutzen, obwohl man dafür Geld bezahlt hat. Übrigens,
das ist Namecheap, verwende ich zum ersten Mal. Ich habe vorher das noch nie verwendet,
keine Ahnung. Ich habe immer was anderes verwendet zum Domains registrieren. So, SourceUrl, speedchamp.org,
DestinationUrl, www.speedchamp.org, das ist ein Redirect, den braucht eigentlich kein
Namecheap, den können wir gleich löschen. Namecheap ist POG. Warum Namecheap diesmal?
Weiß nicht, weil ich mich nicht leaken wollte. Bei dem anderen Domain registrieren würde
ich mich wahrscheinlich leaken. Waren kurz die Musik einen Tick laut, dann hörte er
gar nicht, dass Musik an ist. Max Error. Wieso, was? Du musst, du musst Cores noch deaktivieren.
Weil ich ja von dem Frontend aus das mache und das muss man dann noch deaktivieren. Okay,
mache ich. Okay, wunderbar. Da habe ich jetzt gar nicht dran gedacht. Ja, ich auch nicht.
Das ist tatsächlich gar nicht so einfach, da muss ich abgucken. Da muss ich abgucken,
mache ich gleich. Okay. Alright. Ja. Sagt ihr gleich Bescheid. Yes, kein Schreis. Ihr voll
agil ist das hier Wahnsinn. Sagt ihr Bescheid. Sitz mal Leute, so muss das sein. Du musst
einfach deaktivieren. Ja. Nee, aber Leute, es ist echt so, ich bin hier gar nicht gewöhnt
mit Leuten zusammen was zu basteln. Ich muss mal kurz abgucken. Das war relativ, relativ
easy, wenn man weiß, wie es geht. Startup. Ja, ich habe es. Ich habe es. Cores deaktivieren.
Startup. Ich mache das ganze Swagger, Swagger gedönnt raus. Das brauchen wir nicht. Also
add Cores. Also sprich, das ist, dass er jetzt, wenn er von einem anderen Domain kommt, sein
Browser nicht meckert, wenn er darauf zugreift. Swagger Zeug kommt alles weg. Also hier. Allow
all. Einzig sinnvolle Cores Regelung. By the way, warum habe ich hier zwei, zwei, zwei
Leerzeichen? Ich will nicht zwei Leerzeichen. Ich will zwei Spaces. Was ist das hier? Spaces.
Ja, zwei Spaces und jetzt Reformat. Jawoll. Exzellent. Gleich viel besser. Okay, wunderbar.
Jetzt haben wir das hinzugefügt. Jetzt sollte das eigentlich klappen. Wenn ich das, jetzt
sollte er von allen Seiten drauf zugreifen können. Natürlich machen wir das ganze nur
if, if development vorbei. Komm, wer weiß. Aber das richtige environment gesetzt, dann
lassen wir es einfach mal so. Ähm, machen wir das aus. Git. Status wird jetzt neu gepusht.
Hat sich nur Startup geändert. Wunderbar. Sieht man, er hat nicht viel getan. Und jetzt
machen wir commit fix, Cores, Bäm, Push. So, sag ich ihm Bescheid. So, ich hab gepusht.
Okay, wunderbar. Sollte, sollte nur tun. Ich hab's jetzt, ich hab's aus dem Preischamp
kopiert. Das ist unter dotnet ein bisschen durch die Brust ins Auge. Du kannst ja, kannst
ja auf, wobei hier, du hast auch so ein Wischloss Studio Code auf, ne? Äh, ja, das hab ich
auch. Ich kann's dir grad mal zeigen. Ist wirklich richtig knack gemacht. Startup. Es
gibt kein, guck mal hier, es gibt keinen Schalter einfach zu sagen hier allow all. Man muss dann
irgendwie zig zig policies adden oder sonst was. Aber du solltest jetzt jede Methode von
jeder, von jeder Seite und, und mit allen möglichen Credentials, die wir nicht haben.
Okay. Probier mal aus. Mach ich, mach ich. Ja, ich mach wieder Mute, ne? Yes. Genau,
so Leute. Ähm, wo sind wir stehen geblieben? Bei der, bei speedchamp.org. Bei der Domain.
Übrigens, danke für die ganzen Subs. Jetzt war der Gelegenheit, jetzt wo ich mich gemuted
hab. Jetzt kann ich mal kurz, kann ich mal ganz schnell, äh, Big Brain 5-Head Subs hier
vorlesen. Und zwar, den haben wir hier am Start. Al-Kalf ist am Start. Dankeschön. Vor 24
Minuten. 7-Head Ayaya. Aber Massive 7-Head, Alter. Huge. Weeps in. Shalomitwitchprime33
Minuten. Slayda Teddy ist am Start. Asuru97. Liann V. Crate Wilhelm. 8 Monate. Michael
50 Billion. 13 Monate am Start, Leute. Dankeschön für die ganzen Subs. Huge Hyper Subscriptions
hier. Ja, Carlson hat auch Subscribed. 13 ist wieder am Start. Das war's für heute,
glaube ich. Dankeschön für die ganzen Subs. Massive. Du hast ja 3080 TI bekommen. Excellent.
Xempi, Dankeschön für den Sub. Hier wird richtig agil programmiert. Wir sind im Discord
und per Programmen quasi. Aber ich mach jetzt erstmal den Server, dass wir damit zu Porte
kommen. Also, ich hab das Redirect gelöscht. Ich hab, wie gesagt, noch nie Namecheap verwendet.
Ich muss jetzt einen Server anlegen bei Hetzner. By the way, falls ihr auch mal ein paar virtuelle
Server in der Cloud braucht, Fips, Dankeschön für, nee, Fizz, Dankeschön für die 6 Monate
am Start, Fips, Dankeschön. Falls ihr auch virtuelle Server in der Cloud braucht, macht
mal Ausrufezeichen Hetzner, dann bekommt ihr einen 20 Euro Startgutschein. Und ich zeige
euch jetzt mal, was ihr für 20 Euro schon bekommt. Wenn wir jetzt nämlich hier einen
Server hinzufügt, sagen wir hier in den Nürnberg, Ubuntu 20.04 machen wir und wir nehmen mal
einen Triple Core. Guckt mal, ihr könnt für 8 Euro, also ihr könnt mit meinen 20 Euro
Startgut haben, fast 3 Monate, sagen wir mal zweieinhalb Monate, einen Triple Core 4GB
RAM 80GB SSD Server betreiben. Ist doch schon mal nice. Oder nicht. Kommando klappt, klar.
Ich glaube, du kannst das Kommando plus nicht 50.000 einer gleich in Sekunde spammen. So,
also wir legen jetzt einen neuen Server an. Das ist viel, das ist die Hälfte wie bei
Digital Ocean. Das lohnt sich richtig. Wieso bist du da nicht? Ausrufezeichen Hetzner kann
sich anmelden über meinen Partnerlink. Postchamp. Also ich war auch bei Digital Ocean früher
und ich bin schon mittlerweile mit allem, was ich habe bei Hetzner und hier, da darf ich
nicht draufklicken. Deswegen habe ich extra hingeschrieben, nicht, dass ich dem Stream
liege. Sogar mit Alarm, Alarm. Also wir legen jetzt einen Triple Core Server an. Wir adden
unsere SSH Keys, dass wir uns beide drauf einloggen können. Ist natürlich ganz sinnig.
Und den Server nennen wir, ich überlege gerade, was könnten wir für ein sinnvolles Namenskonzept
machen irgendwie. Postchamp, passt doch. Genau, legen wir den Server an. Wir legen uns übrigens
auch noch eine Firewall gleich an. Das ist jetzt ein neues Feature bei Hetzner. Die
finden das bestimmt toll, wenn ich das mal vorstelle. Ich finde das ist was wirklich
sinnvolles, das habe ich bei vielen anderen Cloud Anbietern schon gesehen. Bei Hetzner
gibt es das erst seit 2-3 Monaten oder so. Was soll der Champ können? Speedtest. Wir
haben ein Projekt gebraucht, was wir einfach zu zweit im Stream programmieren können,
wo man nicht so viel Code programmieren muss, sondern was übersichtlich ist. IP liegt.
Was haustest du bei Prot nicht öffnen? Unter anderem den Preischamp, aber das geht euch
nichts an, deswegen steht ja auch nicht öffnen dran. Was ist denn so im Betrieb in der Cloud?
Was im Betrieb, was meinst du bei uns auf der Arbeit? Oh, das ist jetzt ein bisschen
viel, was ich jetzt aufzählen müsste. Das hier ist ein neues Feature bei Hetzner. Das
gibt es bei vielen anderen Cloud Anbietern auch schon. Man kann jetzt, ohne dass man
seinen Server selbst schützt, also man konnte schon immer seinen Server selbst schützen,
IP-Tables, Firewall auf Linux aufmachen oder so, kann man jetzt eine Firewall da vorstellen
direkt bei Hetzner. Das ist tatsächlich ganz praktisch. Nennen wir die mal FW-Speedchamp.
Ich hänge da nur einen Server dran. Man kann da wohl mehrere Server dran hängen. Packen
wir den Speedchamp dran. Und jetzt ist alles gefiltert außer Port 22 und Ping. Und was
wir halt auch noch freigeben müssen ist TCP-Port 80 und TCP-Port 443. Also sprich, Port 80,
HTTP und HTTPS. Das müssen wir auf jeden Fall auch freigeben, sonst wird das Ganze nicht
funktionieren. Speedchamp wäre auch eine gute Darkwrap-Seite. Generell, wir haben es ja
Domainnamen und Projekte angetan, die irgendwas mit Champ heißen. Applied to? Was? Ja,
ich glaube, das braucht einfach nur ein bisschen. Fully applied. Excellent. Hat funktioniert.
So, also, zack. Loggen wir uns mal auf den Server auf, machen wir ein neues Tab auf,
root, add, Hetzner, IP. Und als erstes mal eine Runde updaten. HTTPS ist ein TCP-Protokoll,
ja? Klar. Was sonst? Gibt ja nicht so viele Möglichkeiten, wie du was übertragen kannst.
Du hast doch zu Hause einen Server. Warum machst du das nicht bei dir zu Hause? Naja,
nein schon, weil ihr es dann nicht ausprobieren könnt. So, wir machen jetzt erst mal hier
Package-Update. Das ist ein eigenes Protokoll. HTTPS gibt es da nicht. Das ist TLS im Endeffekt.
Das ist quasi eine Verschlüsselung auf Layer-4-Ebene. Dementsprechend siehst du auch beispielsweise
nicht, welche Urls du aufrufst. Siehst du also Parameter. Die Urls siehst du im Prinzip
schon, weil du machst vorher eine DNS-Abfrage, aber du siehst halt nichts, was im HTTP-Request
drinner ist. Übrigens heute, falls wir einen Mod da haben, Modcheck, Leute, Modcheck. Modcheck.
Ich bin ja da. Wo ist der Cute-Mod? Ja, das frage ich mich auch. Keine Mods, keine Regeln,
doch die Regeln gelten nach wie vor. So, jetzt haben wir erst mal hier Updates gemacht, Upgrade,
wunderbar. Abinstall, erst mal die wichtigsten Dinger, die wir hier brauchen drauf, deset,
git. So, mal diese Standard-Packages auf dem Server installieren. So, und was wir jetzt
machen müssen ist folgendes. Wir haben ja hier unsere SpeedChamp-Anwendung und wir müssen
jetzt gucken, dass das Ding ein ordentliches Zertifikat bekommt. Also sprich, wenn man
dann später auf die Seite geht, speedchamp.org, dann will ich, dass wir ein gültiges Zertifikat
bekommen. Aktuell kriegen wir da schlicht und ergreifend gar nichts, was auch nicht so
sinnvoll ist. Warum benutze ich nicht die Cute-VM? Weil ich in der Cute-VM nichts auf die Reihe
kriege. Die sieht einfach nur cute aus, aber ansonsten nix. Cute nicht gleich ergonomisch.
Gut, jetzt haben wir den Server hier eingerichtet bei Headsnone. Wir haben Package-Updates gemacht,
wir machen mal schnell ein Reboot, dass er den aktuellen Kern lädt. Und jetzt nehmen
wir uns die IP und tragen das hier beim DNS ein. Weil wir wollen ja, dass ping speedchamp.org
soll ja nicht auflösen auf das, sondern speedchamp.org soll gefälligst auflösen auf... Wie mach
ich denn jetzt einen Eintrag für das komplette So? Oder Sternchen? Sternchen wahrscheinlich,
ja. Bitte auch IPv6, 0w, Alter. IPv6. Ach, kein C-Name, ein A-Rekord. Jaja, jaja. Habt
er recht. Packweight. Yes. Also ich muss sagen, schön zu bedienen ist das jetzt nicht wirklich.
Muss man da jetzt Sternchen machen? Oder kann man das ganz weglassen? Nein, man muss wahrscheinlich
Sternchen machen, oder Punkt. Sternchen, Sternchen, da heißt wahrscheinlich alles. Okay, und wenn
das jetzt funktioniert... Nein, nein, nein, wir machen kein IPv6. IPv6 in 2021. So, und
jetzt müssen wir warten, bis das DNS propagatet ist. Er benutzt Namechamp für DNS. Das wäre
geil, ich mach mal einen eigenen DNS dafür. FlashDNS, gibt's da einen Knopf für? Ach,
du meinst bei mir lokal, dass der das nicht mal gecached hat? Ach so. Aber das braucht
trotzdem ein bisschen Zeit zu propagaten. So 5 Minuten oder so sollte man dem schon mal
Zeit geben. Man kann das ja ganz einfach ohne Cache ausprobieren. Also wenn man das ausprobieren
will, macht man nicht einfach einen Ping, sondern sagt, ähm, Dick. Speedchamp at GoogleDNS,
mal gucken was der GoogleDNS zurückliefert. Und der GoogleDNS liefert zurück nichts. Warum
liefert der gar nichts zurück? Ihr habt schon recht, man sollte schon IPv6 machen. Ne, ne,
das ist egal. Ich frag jetzt da direkt den GoogleDNS ab. Warum antwortet er? Wir können
auch mal Cloudflare abfragen. Juckt, juckt, juckt ihn gar nicht. Juckt ihn, juckt ihn
noch gar nicht. Hat er das jetzt überhaupt gespeichert? Wie gesagt, ich hab Namecheap
noch nirgendwo benutzt, muss ich jetzt irgendwie noch was speichern oder so? Oder muss ich
bei Host direkt eintragen? Speedchamp.org. Also ich weiß gar nicht, wie das aussehen
muss hier. Sternchen ist ok. Host add, als würde es hier sein. Add. Ne, Sternchen, Sternchen
geht schon. Ok, wir warten jetzt einfach mal kurz ab und schauen, ob das funktioniert.
TTL Automatic ist doch ok. Was kann man hier bei Domains noch eintragen? Bei DNS Server
noch eintragen? Basic DNS, Custom DNS. Ok, auch gut. Da könnte ich über Cloudflare
machen oder so. Wir warten einfach mal ab. Wir warten einfach mal ab. Namecheap. Nicht
Namechamp. Namecheap DNS Toplevel. Ich weiß gar nicht, wie man das da eintragen muss.
Aber nicht Toplevel. A-Record. Die haben doch bestimmt ein Exempel dafür. How can I set
up A-Record for my domain? Yep. Manage. Advanced DNS. Add. Ah. Ah, das ist... Ok. Add leitet
alles darauf weiter. Sternchen ist quasi Wildcard. Da kann ich sagen Sternchen Punkt. Das heißt,
ich muss in dem Fall wirklich ein Add verwenden, wenn ich das richtig sehe. Ok, dann probieren
wir das mal aus. Add. So müsste das jetzt eigentlich richtig sein. A-Record Add. Ja,
exakt. So, so habe ich das jetzt. Sehr schön. YouTube Streamer. Wieso? Wieso was passiert
man gerade im Stream? Ich habe es jetzt nicht auf. Was macht er? Er ist hier Frontend Hacker
Man am Start. Guckt euch mal an hier. Der ist ja fast schon fertig. Der ist ja fast schon
fertig. Ich habe mich mit dem Server eingerichtet. Ich laber zuviel. Ich habe nichts gemacht.
Ich hatte schon komplettes Energie am Start. Erst mal auf YouTube streamt. Ok Leute, also
hier, Progress. Progress. Heck wait. Jetzt geht es so langsam. Warte mal. Wollen wir
schon mal SSH Session? Wollen wir schon mal SSH Session? Ach hier, ich habe hier Rebooted.
So, also Dick. Er läst immer noch nicht auf. Ist auch egal. Also, ähm, wie kommt man zu
deinem Kollegen? Du gehst hier hin. Moment, ich pause das mal in Chat. Wenn wir einen
Mod da haben, könntet ihr einen Command einfügen. Das wäre schon äußerst nice, aber ich glaube,
es hat keiner da. Das Sprint endet heute. Du musst alles schaffen. Ah, guck mal. Auflösung
funktioniert. Ok, wunderbar. Also, wenn ich jetzt hier hingehe auf speedchamp.org, dann,
ah, der hat es immer noch gecashed. So, was wir jetzt machen müssen ist, wir brauchen
eine, also die Domain zeigt jetzt auf den Server drauf. Wir brauchen jetzt ein gültiges
Zertifikat. Dafür installieren wir jetzt einen Reverseproxy, der das für uns macht.
Ist total einfach. Habe ich schon öfters im Stream gemacht. Ähm, wir installieren uns
Kaddi als Reverseproxy, weil ich da meinung bin, Kaddi ist als Reverseproxy mit Abstand
am einfachsten. Deswegen mache ich das jetzt einfach mal. Klar, man kann das alles auch
mit, ähm, Docker-Containern machen oder direkt über Azure Functions. Das haben wir uns übrigens
für einen zweiten Stream überlegt, Leute. Wenn wir hier in Speedchamp auch einen Falsurfer
gehostet haben, dann wollen wir das nächste Mal versuchen, in irgendwie jetzt nicht unbedingt
jetzt gleich nächster, direkt nächster Stream, aber in einem der nächsten Streams, machen
wir dann das Frontend auf Netlify und das Backend in Azure Functions. Serverless, genau.
By the way, habe ich schon mal gesagt, was für ein bescheuerter Name Serverless eigentlich
ist. Serverless bedeutet ja im Endeffekt bloß, es sind nicht meine Computer, sondern Computer
von anderen Leuten. Jeden Stream, ja, ja, ich weiß es. Ok, Boomer, ich habe vergessen.
So, Kaddi haben wir am Start, wunderbar. Dann brauchen wir jetzt, äh, die Config-Datei.
Genau, also, unser Server läuft ja, wie man hier sieht, auf.netrun. Unser Server läuft
ja auf localhost port 5000. Das heißt, wir müssen jetzt eine Kaddi-Regel einstellen,
das ist nun mal so zur Erklärung. Wir haben auf dem Server dann lokal unseren eigentlichen
Web-Service laufen auf port 5000. Mein Stream laggt übrigens. Ok. Huge lag. Ok. Ok. Ok.
Ok. Ok.
Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok. Ok.
Komm an Wodafone, krieg dich ein, mach hinne!
So, kriegt sich das Ganze jetzt wieder ein?
Äh, Test-Test, geht das jetzt wieder?
Ah, jetzt geht's wieder!
Meine Güte, Wodafone hier, guckt euch das mal an, 54% Päckchenlost, Keg-Wade, Alter!
Wodafone direkt verreckt einfach nur.
So, äh, Test-Test, bist du da?
Ich bin da, hörst du mich?
Mein Stream ist komplett abgeschissen, Wodafone war zwei Minuten weg.
Ich bin froh, dass das bei mir nicht passiert ist, weil ich bin auch bei Wodafone.
Ah, vielleicht wird, ich hab vorhin meine IP geleakt, vielleicht den Idee-Dossack direkt
am Start.
Nee, glaub ich nicht.
Das kann halt sein, ne?
Nee, das ist irgendeine Wodafone-Kacke.
Oder einfach wieder Wodafone am Verkacken.
Ich denke, ich denke es ist Wodafone.
Also, ähm, tja, also ich bin immer noch am Server einrichten, ich hab gesehen, ich
hab kurz bei dir im Stream geguckt, du hast schon irgendwie GUI am Start mit Knopf und
so.
Ich hab, ich hab, ich bin richtig krass am, am Agile unterwegs, ich hab den Knopf und
...
Ja, ich seh's.
Also ich, ich, ich sorg jetzt erstmal dafür, dass man, äh, also Domain funktioniert schon
und ähm, ich mach jetzt erstmal ein ordentliches Zertifikat, dass wir, dass wir grünes Häkchen
im Browser haben, wenn wir draufgehen.
Okay, alles klar.
Ich sag dir Bescheid, bis gleich.
Okay, jo.
Okay Leute, funktioniert jetzt alles wieder?
Sollte, sollte alles tun, ne?
Man hat, man hat von ihm nix gehört?
Doch, man hat was von ihm gehört.
Wodafone Premium Peering, ja.
Okay, wunderbar.
Also, weiter geht's.
Ähm, wo bin ich jetzt stehen geblieben?
Genau.
Also wir müssen jetzt ein Proxy bauen, der sich um Zertifikate kümmert.
Ja, ich bin, ich bin wieder da.
Dann muss ich um, leider, leider Wodafone wieder rumgespackt.
Wir müssen uns jetzt um den Proxy kümmern, der äh, äh, Zertifikate, äh, erneuert mit
letzterem Clip, dass wir ein schönes grünes Häkchen im Browser haben, wenn wir auf speedchamp.org
gehen.
Der Chatbot scheint zu hängen.
Der macht wahrscheinlich einfach nicht hetzener 30.000 mal.
Da müssen wir gucken.
Okay, guck mal, speedchamp.org, die Testseite geht übrigens schon.
Also, Leute, wenn ihr jetzt auf speedchamp.org geht, kriegt ihr die Testseite, möglichst
wahrscheinlich, die etwas scheppe Testseite.
Aber, das werden wir jetzt rausschmeißen, das werden wir jetzt rausschmeißen, und zwar
wir werden jetzt einen, äh, Redirect machen.
Und zwar einen Redirect für, ich hoffe, das krieg ich aus dem Kopf hin, kardi, äh, reverse
Proxy.
Ich hab jetzt einfach die offizielle Doku an, die ist nämlich ganz gut für, für kardi.
Oh, ne, ist wieder am abkacken, oder?
Das ist mega am rumleggen, äh.
Huge lag.
Oh, ne, das ist mega am rumleggen, äh, reverse Proxy, äh, reverse Proxy, äh, Redirect.
Oh, ne, das ist mega am rumleggen, äh, reverse Proxy, äh, reverse Proxy, äh, Redirect.
Oh, ne, das ist mega am rumleggen, äh, reverse Proxy, äh, Redirect.
