WEBVTT

00:00.000 --> 00:07.000
Das war's für heute und wir sehen uns beim nächsten Mal wieder, bis dahin, tschüss, tschüss, tschüss, tschüss.

00:30.000 --> 00:35.000
Wir sehen uns beim nächsten Mal wieder, tschüss.

01:00.000 --> 01:02.000
Hey!

01:30.000 --> 01:35.000
So, wir sehen uns beim nächsten Mal wieder, tschüss.

02:00.000 --> 02:05.000
So, wir sehen uns beim nächsten Mal wieder, tschüss.

02:31.000 --> 02:34.000
So, Leute, da bin ich.

02:34.000 --> 02:37.000
Ich bin am Start. Oh, ich muss was zu trinken holen.

02:37.000 --> 02:40.000
Ich muss gleich in der kurzen Minute weg.

02:40.000 --> 03:05.000
Sonst geht das nicht.

03:11.000 --> 03:13.000
So, Leute, jetzt passt's aber.

03:13.000 --> 03:17.000
Also, ich bin heute ein bisschen früher da als sonst, weil heute machen wir wirklich was.

03:17.000 --> 03:20.000
Gestern war ja viel zu spät, da haben wir nichts mehr auf die Reihe gekriegt.

03:20.000 --> 03:24.000
Heute machen wir ein bisschen Rust.

03:24.000 --> 03:26.000
Und ich bin motiviert, was zu machen.

03:26.000 --> 03:28.000
Und wir können sehen, ich bin höchst motiviert.

03:28.000 --> 03:40.000
Ich bin höchst motiviert. Maximale Motivation.

03:40.000 --> 03:42.000
Er muss schon wieder weg.

03:42.000 --> 03:44.000
Proc oder not proc.

03:44.000 --> 03:47.000
Ja, also heute machen wir was.

03:47.000 --> 03:55.000
Und zwar, wir schnappen uns das Tool vom letzten Mal, was wir im Donet programmiert haben.

03:55.000 --> 03:59.000
Und versuchen das in Rust zu programmieren.

03:59.000 --> 04:03.000
Nein, bin ich nicht, weil ich von Game Engines überhaupt keinen Plan habe.

04:03.000 --> 04:07.000
Generell von Spieleentwicklung keinen Plan habe.

04:07.000 --> 04:12.000
Heute kam eine neue Rust-Version raus, wirklich?

04:12.000 --> 04:16.000
Das wird natürlich super, super poggers passen, ja?

04:16.000 --> 04:19.000
Rust slang.

04:19.000 --> 04:23.000
Releases.

04:23.000 --> 04:31.000
Nö. Heute kam keine neue Rust-Version raus.

04:31.000 --> 04:37.000
Wie kommst du da drauf, dass es heute eine neue Rust-Version gab?

04:37.000 --> 04:43.000
Moment. Ach, die haben einfach keine Release-Notes geschrieben, Alter.

04:43.000 --> 04:45.000
Nee, nee. Das ist schon richtig.

04:45.000 --> 04:48.000
Das kam wirklich heute raus. Die haben einfach keine Release-Notes geschrieben.

04:48.000 --> 04:53.000
Wir müssen hier in die Releases gucken, okay.

04:53.000 --> 05:03.000
Ach so, ja gut. Das ist eben in meiner Release gewesen. Ja, das ist jetzt auch nicht so spannend.

05:03.000 --> 05:10.000
Und hier passiert einiges. So, dann gehen wir mal rüber in die VM.

05:10.000 --> 05:16.000
Ich habe das Tool heute auf der Arbeit den Leuten vorgestellt, die Linux-Server verwenden.

05:16.000 --> 05:20.000
Wir sind ja mehrere Teams, die da für die ganzen Kisten zuständig sind.

05:20.000 --> 05:29.000
Und das fanden alle ziemlich pog, dass man einfach nur noch Set-Down-Time machen muss und Monitoring-Silences eingetragen werden.

05:29.000 --> 05:32.000
Also, wir haben auf jeden Fall schon mal Leute, die es benutzen.

05:32.000 --> 05:39.000
Was echt praktisch ist, weil ganz im Ernst, es ist immer dumm, irgendwas zu entwickeln oder irgendwas zu bauen, am Ende benutzt es keiner.

05:39.000 --> 05:49.000
Das macht man selbst vielleicht ab und...

05:49.000 --> 05:52.000
Ich bin verwirrt. Ich muss doch mal rebooten.

05:52.000 --> 05:57.000
Ich habe das Gefühl, da hat die VM nicht richtig gestartet gerade.

05:57.000 --> 05:59.000
Irgendwas stimmt da nicht.

05:59.000 --> 06:05.000
Gottes Abbild hat Prime-Subscribed und aus irgendwelchen Gründen doppelt.

06:05.000 --> 06:13.000
Da bin ich natürlich wunderbar. Ich meine, Gottes Abbild kann auch ruhig doppelt Subscriben. Dankeschön für den Sub.

06:13.000 --> 06:25.000
Was läuft bei dir ein Linux? Das ist Manjaro mit i3-WM.

06:25.000 --> 06:28.000
So, jetzt ist die VM auch richtig gestartet.

06:28.000 --> 06:42.000
Also, Mond-Parsen oder sowas.

06:42.000 --> 06:51.000
Der Mond selbst ist immer die gleiche Seite, die man sieht.

06:51.000 --> 06:59.000
Das ist interessant. OK. Mond-Champ.

06:59.000 --> 07:05.000
Wer hat Subscribed? OK, jetzt ist es FelizSpeak. Das ist auf jeden Fall schon mal Man.

07:05.000 --> 07:10.000
Mai? Aber Null? Mein Man?

07:10.000 --> 07:19.000
Ich bin nicht so ganz sicher, was das FelizSpeak betrifft. Melon? Ach, das ist ein L.

07:19.000 --> 07:25.000
Es könnte auch Mai-on-Man sein.

07:25.000 --> 07:29.000
Aber das ist L. Melon Man. Alles klar. Dankeschön für den Sub.

07:29.000 --> 07:36.000
Umso mehr man das Ganze verliegt, FelizSpeak nicht zwangsläufig immer zu erkennen.

07:36.000 --> 07:41.000
Mal kurz hier zu. Alter, wie viele Tabs habe ich denn hier auf meine? Mal kurz schließen und neu öffnen.

07:41.000 --> 07:49.000
So, zack, Pork. Und einmal Update machen. Man weiß ja nie, neueste Rust-Version drauf.

07:49.000 --> 07:55.000
Bei Rust-Version machen wir eh über Rust ab.

07:55.000 --> 08:01.000
Also, wer denkt, ich habe davon einen Plan, weil ich ja gestern gesagt habe, manchmal habe ich für einen Stream schon Sachen im Vorfeld ausprobiert.

08:01.000 --> 08:07.000
Heute habe ich nichts im Vorfeld ausprobiert. Ich habe keinen großen Wahnsinnsplan von Rust.

08:07.000 --> 08:12.000
Und es ist auch schon eine Weile her, dass ich wirklich ein bisschen was in Rust gemacht habe.

08:12.000 --> 08:16.000
Also, mal gucken. Ich bin gespannt, wie das Ganze läuft.

08:16.000 --> 08:22.000
Sariks, moin. Der Chat ist ja so cute heute wieder.

08:22.000 --> 08:29.000
Cuties United hier.

08:29.000 --> 08:35.000
Das ist witzig, wie gut das Sound... Hast du ein Handy, das du unter Wasser hängen kannst oder wie?

08:35.000 --> 08:40.000
Heute, heute sweeps in.

08:40.000 --> 08:50.000
Die Namers müssen out bleiben.

08:50.000 --> 08:56.000
Ja, mein Rust ist rusty. Lul. So schlecht wahrscheinlich.

08:56.000 --> 09:00.000
Ich habe diesen Witz schon 30 Milliarden Leute gebracht.

09:00.000 --> 09:05.000
Ja, es ist schon eine ganze Weile her. Ich warte jetzt erstmal bis die ganzen Updates durch den Wristle Studio Code Update.

09:05.000 --> 09:11.000
Jetzt ist die Frage, wo haben wir das letzte Mal Rust gemacht für diesen WebAssembly Test?

09:11.000 --> 09:17.000
Haben wir das in Wristle Studio Code gemacht oder haben wir das mit dem C-Line Rust Plugin gemacht?

09:17.000 --> 09:21.000
Ich glaube, wir haben es mit dem C-Line Rust Plugin gemacht.

09:21.000 --> 09:24.000
Also, ich glaube mein iPhone, bin ich mir gar nicht sicher.

09:24.000 --> 09:31.000
Leute, ist mein iPhone Wasserfest? Ich habe ein iPhone 11, ist das Wasserfest?

09:31.000 --> 09:33.000
Ich wüsste es gar nicht.

09:33.000 --> 09:34.000
Ja?

09:34.000 --> 09:36.000
Cap ausprobieren?

09:36.000 --> 09:49.000
Ja, ganz bestimmt.

09:49.000 --> 09:50.000
Na dann?

09:50.000 --> 09:54.000
Dann könnte ich mein iPhone ja mal in die Badewanne schmeißen.

09:54.000 --> 09:57.000
Wer hat es davon abgesehen, dass ich keine Badewanne habe?

09:57.000 --> 09:59.000
Aber ich könnte.

09:59.000 --> 10:05.000
Also sprich, wenn man vergisst, das Handy aus der Badehose zu nehmen, wenn man ins Wasser spritzt.

10:05.000 --> 10:09.000
Ins Wasser springt, nicht ins Wasser spritzt.

10:09.000 --> 10:21.000
Wenn man ins Wasser springt, dann gleich wieder rausklettert, geht wahrscheinlich nichts kaputt.

10:21.000 --> 10:24.000
Pool ist nur 1,50.

10:24.000 --> 10:27.000
Der Schwimmbad bei uns ist schon ein bisschen tiefer.

10:27.000 --> 10:47.000
5 Monate Subscription, Hyper Subscriber.

10:47.000 --> 10:50.000
Ja, selbst schuld.

10:50.000 --> 10:55.000
Ehrlich gesagt, war mir das nicht klar.

10:55.000 --> 10:57.000
Aber warum nicht?

10:57.000 --> 11:22.000
GCC kann auch Go kompilieren, ich weiß nicht, ob das irgendjemand macht.

11:22.000 --> 11:27.000
Naja, LVM ja auch.

11:27.000 --> 11:28.000
Was?

11:28.000 --> 11:31.000
Hast du die neue Sprache von Google gesehen als C++ Nachfolger?

11:31.000 --> 11:32.000
Moment.

11:32.000 --> 11:33.000
Google?

11:33.000 --> 11:34.000
Was?

11:34.000 --> 11:35.000
Carbon?

11:35.000 --> 11:36.000
Warum macht denn Google?

11:36.000 --> 11:42.000
Ach Gott, Google ist ja auch random.

11:42.000 --> 11:47.000
Es wird nie einen Nachfolger für C++ geben in der Form.

11:47.000 --> 11:53.000
Wer will denn ernsthaft auf C++ Geschichten aufbauen, kompatibel richtig zu C++ zu sein,

11:53.000 --> 12:00.000
kannst du eh vergessen.

12:00.000 --> 12:07.000
100% Interop mit C++, das glaube ich erst, wenn ich sehe.

12:07.000 --> 12:13.000
Das einzige, was ich mir vorstellen kann ist, dass die das nach C++ kompilen und dann durch

12:13.000 --> 12:16.000
den C++ Compiler jagen, vielleicht.

12:16.000 --> 12:22.000
Also sowas wie Kotlin, was Java angeht, kompatibel zu C++, das glaube ich nicht.

12:22.000 --> 12:27.000
Es wäre auf jeden Fall nicht schlecht, weil ganz im Ernst, C++ ist einfach die größte

12:27.000 --> 12:28.000
Rottsprache überhaupt.

12:28.000 --> 12:32.000
Wenn es da irgendwas gibt, was kompatibel ist mit C++, dass du dann auch beispielsweise

12:32.000 --> 12:35.000
Unreal und sowas da drin programmieren kannst, dann wäre es nicht schlecht.

12:35.000 --> 12:40.000
Dann ist Qt gleich ein viel besseres Framework, weil Qt, also das da.

12:40.000 --> 12:44.000
Man spricht also übrigens Qt aus, so wie Qt Chat.

12:44.000 --> 12:48.000
Aber das kennen wahrscheinlich die, haben die ein neues Logo?

12:48.000 --> 12:50.000
Das Logo ist neu.

12:50.000 --> 12:58.000
Moment, das ist, na gut.

12:58.000 --> 13:01.000
Was magst du an C++ nicht?

13:01.000 --> 13:04.000
Okay, du bist relativ neu im Chat.

13:04.000 --> 13:08.000
Ich bin mir nicht sicher, ob das Chebat ist oder nicht.

13:08.000 --> 13:09.000
Moment.

13:09.000 --> 13:14.000
Nee, du hast bis hier nur 6 Messages geschrieben, du meinst das tatsächlich, du meinst das

13:14.000 --> 13:15.000
noch ernst.

13:15.000 --> 13:20.000
Weil diese Frage stellen die Leute im Chat auch immer, wenn sie mich Chebaten wollen,

13:20.000 --> 13:26.000
dass ich jetzt eine halbe Stunde darüber rumrente, wie beschissen C++ ist.

13:26.000 --> 13:31.000
Und ich werde das heute sein lassen, weil ansonsten artet das wieder aus.

13:31.000 --> 13:34.000
Sonst kommen wir heute wieder zu nichts.

13:34.000 --> 13:40.000
Extra zweite Count gemacht für die Frage, ja.

13:40.000 --> 13:41.000
Scheint echt so.

13:41.000 --> 13:43.000
Ich kann da heute nichts zu sagen.

13:43.000 --> 13:50.000
Wenn ich davon anfange, machen wir bis 20 Uhr wahrscheinlich nichts Sinnvolles.

13:50.000 --> 13:52.000
Es gibt nicht eine ultimative Antwort.

13:52.000 --> 13:55.000
Es gibt zum Beispiel, pass mal auf.

13:55.000 --> 13:56.000
Okay, Sekunde.

13:56.000 --> 13:57.000
Habe ich das noch von gestern?

13:57.000 --> 13:58.000
Moment, Moment.

13:58.000 --> 14:01.000
Ich zeig dir nur, hier.

14:01.000 --> 14:09.000
Meinst du, es ist eine gute Sprache, wo sowas erlaubt ist?

14:09.000 --> 14:12.000
Oder sowas?

14:12.000 --> 14:20.000
Das fällt mir nur daran, was wir gestern hatten.

14:20.000 --> 14:27.000
Es ist vieles wild in C++, vor allem was gar nicht wild sein müsste.

14:27.000 --> 14:33.000
Beispielsweise auch ganz wild in C++, dass es lange Zeit nicht mal die Möglichkeit gab,

14:33.000 --> 14:38.000
mit Standard String, den in Groß- oder Kleinschreibweise zu konvertieren.

14:38.000 --> 14:48.000
Das gibt es jetzt mittlerweile.

14:48.000 --> 14:50.000
Ja, aber Qt ist wirklich nice.

14:50.000 --> 14:54.000
Und wenn man das mit einer ordentlichen Programmiersprache noch programmieren könnte.

14:54.000 --> 14:57.000
Okay, jetzt seid mal ja karbonlang.

14:57.000 --> 14:58.000
Warum versuchen sie nicht einfach?

14:58.000 --> 15:02.000
Jetzt mal eine ganz dumm, ganz blöde Frage von mir.

15:02.000 --> 15:10.000
Warum versucht Google, den Go, C und C++ interop nicht besser zu machen?

15:10.000 --> 15:13.000
Ich meine, da haben sie schon eine Sprache mit massig Libraries und allem,

15:13.000 --> 15:19.000
und es würde Go unglaublich helfen.

15:19.000 --> 15:21.000
Kennst du Argument-Dependent-Lookup?

15:21.000 --> 15:28.000
Vielleicht, die ganzen C++-Spezialnamen sagen nicht unbedingt was, wenn ich sehe, vielleicht.

15:28.000 --> 15:31.000
Aber C++ hat schon ganz viele wilde Sachen.

15:31.000 --> 15:43.000
Es sieht ein bisschen rustmäßig aus, so ein bisschen, so ein kleines bisschen.

15:43.000 --> 15:47.000
Aber was ist denn das schon wieder für eine ekliche Syntax?

15:47.000 --> 15:49.000
Ach so, ja gut.

15:49.000 --> 15:52.000
Wenn die 100% C++-kompatibel sein wollen,

15:52.000 --> 15:57.000
dann müssten sie ja auch den ganzen Crap unterstützen von C++.

15:57.000 --> 16:02.000
Und dementsprechend brauchst du dann irgendwelche komischen Movable-Sachen

16:02.000 --> 16:09.000
und Template-Sachen und sonst was, die du auch unterstützen musst.

16:09.000 --> 16:12.000
Naja, mal gucken.

16:12.000 --> 16:19.000
Also sonderlich, wie soll ich sagen, sonderlich schick finde ich das jetzt nicht

16:19.000 --> 16:32.000
vom ersten Eindruck her, wie es ausschaut.

16:32.000 --> 16:40.000
Ich meine, okay, es ist deutlich besser lesbar als C++.

16:40.000 --> 16:46.000
Das sieht für mich aus, als haben sie sich doch relativ stark an Rust inspirieren lassen,

16:46.000 --> 16:58.000
weil guck mal, gerade auch so Sachen, also wenn das mit Movable-Sachen und so Bestandteil der Sprache sein sollte.

16:58.000 --> 17:01.000
Rust ist nicht schick, das stimmt.

17:01.000 --> 17:09.000
Optisch hübsch ist Rust wirklich nicht.

17:09.000 --> 17:17.000
Ja.

17:17.000 --> 17:23.000
Ja, mal gucken.

17:23.000 --> 17:28.000
Ich meine, komplette Kompatibilität zu C++ ist natürlich wirklich nice.

17:28.000 --> 17:31.000
Das würde nämlich bedeuten, wenn das, wenn das, wenn das gut gemacht ist,

17:31.000 --> 17:35.000
man könnte damit auch seinen ESP32 programmieren,

17:35.000 --> 17:45.000
wobei ich irgendwie eine doofe Vermutung habe, dass es aus irgendwelchen Gründen wahrscheinlich nicht funktionieren würde.

17:45.000 --> 17:53.000
Weiß ich nicht, kann man damit seinen ESP32 programmieren?

17:53.000 --> 17:55.000
Wahrscheinlich nicht, ja.

17:55.000 --> 18:01.000
Naja, also machen wir mal Rust auf, beziehungsweise machen wir mal C-Line auf mit dem Rust-Plugin.

18:01.000 --> 18:06.000
Erstmal alles aktualisieren.

18:06.000 --> 18:11.000
Update, ja, gib ihm, update.

18:11.000 --> 18:14.000
Ah, das ist, ok, ok, ach ja.

18:14.000 --> 18:23.000
Ah, ok, also das heißt, die übersetzen nicht Carbon in C++ und an C++ nach Target,

18:23.000 --> 18:32.000
sondern die übersetzen direkt in Plattform, Native, Zeug,

18:32.000 --> 18:37.000
verstehen aber so weit C++, dass du C++ Libraries und so verwenden kannst.

18:37.000 --> 18:41.000
Ok, nee, dann wird es wahrscheinlich nicht auf dem ESP32 funktionieren.

18:41.000 --> 18:47.000
Du musstest durch irgendeinen GCC, du musstest quasi Zwischenschritte in C++ rausbekommen,

18:47.000 --> 18:54.000
die du dann durch deinen ESP32 GCC-Fork jagen könntest.

18:54.000 --> 18:56.000
Das würde funktionieren, so wird es wahrscheinlich nicht funktionieren.

18:56.000 --> 19:06.000
Naja, ok.

19:06.000 --> 19:12.000
Warum ich GoLand aktualisiere, hat keinen tiefen Sinn, ich will einfach nur, dass es aktuell ist.

19:12.000 --> 19:14.000
Brauchen tun wir das heute nicht.

19:14.000 --> 19:19.000
Wie viel Platz habe ich denn eigentlich noch genau?

19:19.000 --> 19:21.000
34G.

19:21.000 --> 19:23.000
Warum stehen da nur 33G?

19:23.000 --> 19:26.000
Das ist sich nicht ganz einig.

19:26.000 --> 19:29.000
Also, auf, mach mal hinne.

19:29.000 --> 19:34.000
Können wir uns mal Fancy-Auslastungsprompt angucken?

19:34.000 --> 19:36.000
Aha, aha, alles klar.

19:36.000 --> 19:42.000
Jetzt wissen wir Bescheid, Leute.

19:42.000 --> 19:46.000
So, Next, aktualisiert.

19:46.000 --> 19:50.000
Jetzt habe ich mir auch gerade komplett unsinnig.

19:50.000 --> 19:57.000
Gut, zack, dann kann man den Krempel wieder zumachen, sobald das gestartet ist.

19:57.000 --> 19:59.000
Und dann machen wir mal auf.

19:59.000 --> 20:02.000
Hello, oh nee, das ist noch unser Rust WebAssembly Projekt.

20:02.000 --> 20:12.000
Erste Mal, erste Mal einen neuen Ordner machen. CD, gibt es Sea-Line-Projects oder sowas?

20:12.000 --> 20:15.000
Ne, anscheinend nicht, wo hat denn der das angelegt?

20:15.000 --> 20:16.000
Zack.

20:16.000 --> 20:18.000
Repos, na gut.

20:18.000 --> 20:21.000
Fangen wir mal hier.

20:21.000 --> 20:22.000
Äh, warte mal, wie war das?

20:22.000 --> 20:25.000
Rust, Rust Up, Rust Up?

20:25.000 --> 20:28.000
Oh, Show?

20:28.000 --> 20:39.000
Active Toolchain, Rust Up, Update.

20:39.000 --> 20:41.000
Also, wie gesagt, mein Rust ist eingerostet.

20:41.000 --> 20:44.000
Ich bin mir nicht ganz sicher, ob das alles so stimmt, was ich hier treibe.

20:44.000 --> 20:47.000
Ich muss erst mal auf die neueste Rust-Version aktualisieren.

20:47.000 --> 20:52.000
1662, äh, 1662.1.

20:52.000 --> 20:54.000
Ja, das kam heute raus.

20:54.000 --> 20:57.000
Okay, das passt.

20:57.000 --> 21:00.000
Self-Update ist Disable.

21:00.000 --> 21:01.000
Muss ich das dann hier nochmal updaten?

21:01.000 --> 21:03.000
Habe ich ja schon gemacht.

21:03.000 --> 21:06.000
Okay, und nicht, Moment, Rust Up.

21:06.000 --> 21:08.000
Und wie stellt man da jetzt ein, was hat die hier?

21:08.000 --> 21:17.000
Default, Rust Up, Default, Stable x86, Unknown Linux GNU.

21:17.000 --> 21:20.000
Ist das richtig?

21:20.000 --> 21:22.000
Ne, glaube nicht, oder?

21:22.000 --> 21:26.000
Man muss es, es gab doch, es gab doch, ne, das ist nicht richtig.

21:26.000 --> 21:30.000
Es gibt doch irgendeine extra Toolchain, mit der man Static kompilieren kann.

21:30.000 --> 21:33.000
Rust Up, Static.

21:33.000 --> 21:36.000
Compile, irgendein Musel-Dings.

21:36.000 --> 21:40.000
Musel-C-Lib oder so.

21:40.000 --> 21:43.000
Muss man da installieren.

21:43.000 --> 21:46.000
Rust Up.

21:46.000 --> 21:47.000
Ja.

21:47.000 --> 21:49.000
Rust Up Target.

21:49.000 --> 21:56.000
Okay, das brauchen wir.

21:56.000 --> 21:58.000
Das brauchen wir.

21:58.000 --> 21:59.000
Gut.

21:59.000 --> 22:01.000
Excellent.

22:01.000 --> 22:07.000
Und jetzt, Rust, Rust Up Default.

22:07.000 --> 22:10.000
Und woher weiß ich jetzt, was ich da setzen kann?

22:10.000 --> 22:11.000
Schau.

22:11.000 --> 22:17.000
Hier, Rust Up Default.

22:17.000 --> 22:20.000
So, ha?

22:20.000 --> 22:26.000
Hä?

22:26.000 --> 22:27.000
Äh.

22:27.000 --> 22:30.000
Das muss man machen, weil wenn wir das nicht machen, dann funktioniert das nicht.

22:30.000 --> 22:32.000
Wie ich mir das, wie ich mir das vorstelle.

22:32.000 --> 22:40.000
Target.

22:40.000 --> 22:49.000
Ach hier, das gibt man, das gibt man im Bild an später.

22:49.000 --> 22:52.000
Ach so, ah.

22:52.000 --> 22:54.000
Okay, okay.

22:54.000 --> 22:56.000
Alles klar.

22:56.000 --> 22:59.000
Gut, also, Repos.

22:59.000 --> 23:01.000
Schon mal mit Lua gearbeitet.

23:01.000 --> 23:03.000
Ja.

23:03.000 --> 23:05.000
Aber nicht viel.

23:05.000 --> 23:13.000
Wie gesagt, es ist allein schon Sus für mich, wenn Arrays mit 1 anfangen.

23:13.000 --> 23:14.000
Rust ist Five Head Only.

23:14.000 --> 23:16.000
Das ist, das ist richtig.

23:16.000 --> 23:19.000
So, also, wo haben wir denn unser, das, den Krempel können wir zumachen.

23:19.000 --> 23:20.000
So, wir machen mal Rider auf.

23:20.000 --> 23:27.000
Nicht, weil wir heute.NET machen, sondern weil ich abgucken will, was ich in.NET gemacht habe, um das dann zu übersetzen in Rust.

23:27.000 --> 23:31.000
Beziehungsweise halt zu gucken, was wir eigentlich alles machen müssen.

23:31.000 --> 23:32.000
So.

23:32.000 --> 23:34.000
Also, offen.

23:34.000 --> 23:35.000
Repos.

23:35.000 --> 23:36.000
So, wie ging das jetzt?

23:36.000 --> 23:37.000
Cargo.

23:37.000 --> 23:38.000
New.

23:38.000 --> 23:39.000
Lip.

23:39.000 --> 23:40.000
Nee.

23:40.000 --> 23:41.000
Ah.

23:41.000 --> 23:42.000
MK Dear.

23:42.000 --> 23:43.000
Postchamp.

23:43.000 --> 23:44.000
Rust.

23:44.000 --> 23:45.000
Postchamp.

23:45.000 --> 23:46.000
Rust.

23:46.000 --> 23:49.000
Vielleicht sollten wir unser Rust Plugin noch aktualisieren.

23:49.000 --> 23:52.000
Plugin.

23:52.000 --> 23:55.000
Gucken, wie alt das ist.

23:55.000 --> 23:56.000
Plugin.

23:56.000 --> 23:57.000
Maps.

23:57.000 --> 23:58.000
Rust.

23:58.000 --> 23:59.000
Installed.

23:59.000 --> 24:05.000
Wie macht man Check for Update?

24:05.000 --> 24:07.000
Ach, hier.

24:07.000 --> 24:11.000
Okay, das ist ja auch blöd, dass, dass man hier rüber gehen muss.

24:11.000 --> 24:16.000
Bist du komplett von Wishl Studio weg?

24:16.000 --> 24:19.000
Von dem normalen Wishl Studio bin ich komplett weg, ja.

24:19.000 --> 24:27.000
Wishl Studio Code verwende ich hauptsächlich für Frontendsachen oder für Arduino ESP32.

24:27.000 --> 24:33.000
Rest benutze ich nur noch JetBrains Sachen, wenn's was gibt, weil ich hab mir vor ein paar

24:33.000 --> 24:38.000
Jahren dieses All Desktop Pack gekauft und das muss, das muss Value bringen, wenn ich

24:38.000 --> 24:39.000
schon bezahle.

24:39.000 --> 24:43.500
So Leute, das, das, das Theme muss ich nochmal umstellen.

24:43.500 --> 24:50.000
Install Theme.

24:50.000 --> 24:55.000
Will das Rider.

24:55.000 --> 24:58.000
Ich will das Rider Theme haben.

24:58.000 --> 25:01.000
Leute, mal Frage an euch, die JetBrains Sachen verwenden.

25:01.000 --> 25:04.000
Was ist euer Lieblings Theme?

25:04.000 --> 25:13.000
Was, was, was verwendet ihr gerne?

25:13.000 --> 25:14.000
Standard.

25:14.000 --> 25:15.000
Dracula.

25:15.000 --> 25:16.000
Standard Dunkel.

25:16.000 --> 25:21.000
Ich weiß nicht, ich mag das Standard Dunkel Theme von JetBrains ehrlich gesagt nicht.

25:21.000 --> 25:25.000
Ich mag die Ideen, aber das Standard Theme gefällt mir nicht gut.

25:25.000 --> 25:29.000
Deswegen, kann man nicht hier einfach suchen irgendwie?

25:29.000 --> 25:30.000
Rider.

25:30.000 --> 25:39.000
Ja, nehmen wir nämlich einfach das Rider UI Pack und Gutes.

25:39.000 --> 25:40.000
Apply.

25:40.000 --> 25:41.000
Zack.

25:41.000 --> 25:46.000
So war das nicht gedacht.

25:46.000 --> 25:49.000
Ja, schon besser.

25:49.000 --> 25:51.000
Nicht ReSharper.

25:51.000 --> 25:52.000
Rider Dark.

25:52.000 --> 25:54.000
Ja, das will ich haben.

25:54.000 --> 25:58.000
Oder Rider Melon Dark oder Wishill Assist Dark.

25:58.000 --> 25:59.000
Nee, nee.

25:59.000 --> 26:04.000
Rider Dark will ich haben.

26:04.000 --> 26:09.000
Es sieht auch aus wie Rider, ne?

26:09.000 --> 26:11.000
Ein bisschen heller.

26:11.000 --> 26:12.000
Nee, guck mal.

26:12.000 --> 26:14.000
Ein bisschen heller ist der Hintergrund noch.

26:14.000 --> 26:19.000
Ein bisschen.

26:19.000 --> 26:24.000
Sag mal, können die ihre eigenen Themes nicht richtig machen oder was?

26:24.000 --> 26:34.000
Oder muss ich ReSharper Dark nehmen, dass der Hintergrund, dass der Hintergrund passt?

26:34.000 --> 26:37.000
Ich halt ReSharper Dark.

26:37.000 --> 26:39.000
Sollen wir auch recht sein.

26:39.000 --> 26:44.000
So, dann muss ich noch Font Size einstellen.

26:44.000 --> 26:47.000
Und dann passt das.

26:47.000 --> 26:50.000
Ein Hack.

26:50.000 --> 26:53.000
Hack 18, jawoll.

26:53.000 --> 26:55.000
So.

26:55.000 --> 26:56.000
Ja, reicht.

26:56.000 --> 26:57.000
Alles klar.

26:57.000 --> 27:00.000
Also, dann legen wir mal ein neues Projekt an.

27:00.000 --> 27:02.000
Cargo New.

27:02.000 --> 27:05.000
Ich hoffe, ich mach das richtig.

27:05.000 --> 27:06.000
Console App.

27:06.000 --> 27:09.000
Wie macht man das?

27:09.000 --> 27:13.000
Cargo New?

27:13.000 --> 27:20.000
Cargo New, ups.

27:20.000 --> 27:22.000
Was Reddit?

27:22.000 --> 27:26.000
Was Cat Pudgin Theme?

27:26.000 --> 27:29.000
Was für ein Ding?

27:29.000 --> 27:31.000
Soothing Pastel Theme.

27:31.000 --> 27:36.000
Das ist mir wahrscheinlich zu wenig Kontrast.

27:36.000 --> 27:37.000
Ja.

27:37.000 --> 27:40.000
Es ist ja auch komplett unsinnig, einen Screenshot zu machen, Leute.

27:40.000 --> 27:41.000
Also jetzt mal ernsthaft.

27:41.000 --> 27:46.000
Wer erwartet denn bitteschön bei einem Repo für einen Color Theme einen Screenshot?

27:46.000 --> 27:55.000
Nee, das ist obv- obv- obviusly nicht erforderlich, Screenshots zu machen.

27:55.000 --> 28:04.000
Screenshots bei Themes ist komplett hyperplod.

28:04.000 --> 28:09.000
Ich hab ehrlich gesagt wirklich keine Ahnung, wo ich jetzt hier ein ordentliches Screenshot

28:09.000 --> 28:10.000
sehen würde.

28:10.000 --> 28:14.000
Das ist doch der Witz, kann doch nicht sein.

28:14.000 --> 28:16.000
Rider.

28:16.000 --> 28:21.000
IntelliJ muss ich wahrscheinlich gucken, ne?

28:21.000 --> 28:22.000
JetBrains?

28:22.000 --> 28:24.000
Ah, JetBrains.

28:24.000 --> 28:26.000
Ach, hier gibt's...

28:26.000 --> 28:28.000
Oh, nee.

28:28.000 --> 28:30.000
Nee, das gefällt mir nicht.

28:30.000 --> 28:31.000
Da bleib ich hierbei.

28:31.000 --> 28:32.000
Gutes.

28:32.000 --> 28:40.000
So, aber ich wollt mal gucken.

28:40.000 --> 28:42.000
Cargo New Console App.

28:42.000 --> 28:45.000
Wie funktioniert das?

28:45.000 --> 28:49.000
Ach, einfach nur Cargo New.

28:49.000 --> 28:54.000
Okay, also Cargo New.

28:54.000 --> 28:57.000
Postchamp Rust.

28:57.000 --> 29:05.000
Nee, heck ist nicht die Vorschrift von Visual Studio.

29:05.000 --> 29:10.000
Okay, oh komm, jetzt haben wir Postchamp in Postchamp.

29:10.000 --> 29:11.000
Ja, okay.

29:11.000 --> 29:13.000
So, dann öffnen wir das mal.

29:13.000 --> 29:14.000
Open.

29:14.000 --> 29:15.000
Repos.

29:15.000 --> 29:18.000
Postchamp Rust.

29:18.000 --> 29:21.000
Auf geht's.

29:21.000 --> 29:27.000
Ja, ja, wir trusten, wir trusten.

29:27.000 --> 29:28.000
Ich truste.

29:28.000 --> 29:29.000
Alles gut.

29:29.000 --> 29:31.000
Wir trusten denen komplett.

29:31.000 --> 29:34.000
Source, Main.rs.

29:34.000 --> 29:37.000
Alles klar.

29:37.000 --> 29:39.000
Terminal auf.

29:39.000 --> 29:40.000
Zack.

29:40.000 --> 29:41.000
D-Max auf.

29:41.000 --> 29:45.000
Wir müssen nach Repos, Rust, Champ...

29:45.000 --> 29:46.000
Nee.

29:46.000 --> 29:48.000
Das war sogar dafür.

29:48.000 --> 29:50.000
Das war sogar...

29:50.000 --> 29:53.000
Äh, nee, nicht Rust.

29:53.000 --> 29:54.000
Postchamp.

29:54.000 --> 29:56.000
Postchamp Rust.

29:56.000 --> 29:59.000
So, jetzt wie ging das?

29:59.000 --> 30:00.000
Cargo Run.

30:00.000 --> 30:01.000
Hello World.

30:01.000 --> 30:02.000
Okay, passt.

30:02.000 --> 30:03.000
Guck mal.

30:03.000 --> 30:04.000
Sogar...

30:04.000 --> 30:09.000
Das ist ja geil.

30:09.000 --> 30:12.000
Sogar das Default Programm generiert ein Warning.

30:12.000 --> 30:13.000
Nice.

30:13.000 --> 30:16.000
Targets.

30:16.000 --> 30:25.000
Das haben wir für Git Ignores angelegt.

30:25.000 --> 30:26.000
Targets.

30:26.000 --> 30:27.000
Das finde ich schön, dass das...

30:27.000 --> 30:28.000
Wisst ihr?

30:28.000 --> 30:31.000
Das könnten die echt bei dem.NET Template auch machen.

30:31.000 --> 30:37.000
Ordentliche Git Ignores bei.NET New reinpacken.

30:37.000 --> 30:44.000
Wird die Schriftgröße gut oder soll ich noch eins größer machen?

30:44.000 --> 30:47.000
Also eins größer würde ich noch machen, dass man...

30:47.000 --> 30:49.000
Also auf 20 würde ich es hochstellen.

30:49.000 --> 30:54.000
Dann ist es nämlich exakt so, wie man es in Rider haben.

30:54.000 --> 30:57.000
Ja, dann sieht man es, denke ich, auch ganz gut.

30:57.000 --> 31:02.000
Oder auch auf Handys und sowas sieht man es dann ganz gut.

31:02.000 --> 31:03.000
So, also.

31:03.000 --> 31:06.000
Jetzt wird es kompliziert.

31:06.000 --> 31:08.000
Jetzt müssen wir Rust Zeug machen.

31:08.000 --> 31:10.000
Also wir fangen mal easy an.

31:10.000 --> 31:11.000
Also was wir...

31:11.000 --> 31:13.000
Also das Ziel ist folgendes.

31:13.000 --> 31:14.000
Ich erkläre es noch mal.

31:14.000 --> 31:16.000
Ich habe ein Tool in.NET.

31:16.000 --> 31:19.000
Was das macht ist, wenn du es ausführst...

31:19.000 --> 31:21.000
Die ganz, ganz kurze Variante, ja.

31:21.000 --> 31:22.000
Wenn du es ausführst...

31:22.000 --> 31:25.000
Es gibt ein paar Kommandozeilen Argumente hier.

31:25.000 --> 31:30.000
Und was es macht ist, wenn du das ausführst, geht es zum Monitoring System

31:30.000 --> 31:34.000
und trägt für das System, auf dem du es ausführst, eine Downtime ein.

31:34.000 --> 31:38.000
Das ist dafür gedacht, wenn Admins Wartungsarbeiten machen

31:38.000 --> 31:45.000
und vergessen haben Monitoring, Downtimes oder Maintenances einzutragen,

31:45.000 --> 31:47.000
dass sie es direkt vom Server aus machen können.

31:47.000 --> 31:49.000
Weil ich weiß, wie faul die Leute sind.

31:49.000 --> 31:51.000
Ich kenne das ja von mir.

31:51.000 --> 31:55.000
Wenn man dann erst mal anfängt, hat man keinen Bock,

31:55.000 --> 31:58.000
oftmals noch irgendeine Maintenance zusammenzuklicken

31:58.000 --> 32:01.000
oder beim Support anzurufen oder sonst was zu machen.

32:01.000 --> 32:02.000
Dann rebootet man einfach und hofft,

32:02.000 --> 32:06.000
vielleicht fällt man nicht in den Ping-Tick rein, dass es das feststellt.

32:06.000 --> 32:09.000
Und ich habe das heute auf der Arbeit gezeigt, das Tool.

32:09.000 --> 32:11.000
Ich habe ja die.NET-Variante.

32:11.000 --> 32:13.000
Die Leute fanden es super.

32:13.000 --> 32:15.000
Deswegen ist das, glaube ich, eine gute Sache.

32:15.000 --> 32:18.000
Und ich habe mir jetzt vorgenommen, wir nehmen dieses Tool

32:18.000 --> 32:22.000
und programmieren dieses Tool in...

32:22.000 --> 32:25.000
Nicht heute alles, sage ich gleich dabei.

32:25.000 --> 32:27.000
Also C Sharp, die Implementation gibt es ja schon.

32:27.000 --> 32:31.000
Wir machen das gleiche Tool in Go, in Python, in Rust, in JavaScript.

32:31.000 --> 32:33.000
Und vielleicht in PowerShell, Bash.

32:33.000 --> 32:35.000
In PowerShell und in Bash.

32:35.000 --> 32:37.000
Wobei Bash ekelig wird.

32:37.000 --> 32:39.000
Für sowas, das kann ich euch jetzt schon sagen.

32:39.000 --> 32:41.000
Ich mag Bash als interaktive Shell.

32:41.000 --> 32:43.000
Ich mache auch recht viele Bash-Scripts.

32:43.000 --> 32:47.000
Aber sobald das mehr als ein paar Zeilen sind, ist das immer...

32:47.000 --> 32:49.000
Kannst du überhaupt den Maintenance-Server ansprechen?

32:49.000 --> 32:51.000
Ja, sonst hätte es ja keinen Sinn.

32:51.000 --> 32:52.000
Das funktioniert.

32:52.000 --> 32:55.000
C++ habe ich geskippt, weil den C++ will ich nicht machen.

32:55.000 --> 32:57.000
Der Chat wollte, dass ich den C++ mache.

32:57.000 --> 33:02.000
Aber der Chat ist manchmal, obwohl er 5-head ist, doch nicht so 5-head.

33:02.000 --> 33:05.000
Also ob ich das mache, keine Ahnung.

33:05.000 --> 33:07.000
Nee, in Perl nicht.

33:07.000 --> 33:09.000
Also falls ihr noch in irgendeine andere Sprache einfällt,

33:09.000 --> 33:11.000
in der wir das machen sollen, ja, können wir machen.

33:11.000 --> 33:13.000
Aber in Perl machen wir es bestimmt nicht.

33:13.000 --> 33:16.000
Und in Cobol machen wir es auch bestimmt nicht.

33:20.000 --> 33:23.000
Wie hast du die verschiedenen Theme-Typen angewählt?

33:23.000 --> 33:25.000
Ich habe das Rider-Theme-Plugin installiert.

33:25.000 --> 33:27.000
Guck.

33:28.000 --> 33:29.000
Hier.

33:29.000 --> 33:31.000
Rider-UI-Theme-Pack.

33:31.000 --> 33:33.000
Da kannst du auch in Sea-Lion-Rider-Themes verwenden.

33:33.000 --> 33:35.000
Oder du drückst...

33:35.000 --> 33:38.000
Oder meinst du das Switchen der Themes?

33:38.000 --> 33:39.000
Hier, so.

33:39.000 --> 33:43.000
Du gibst hier einfach Themes ein in deinem Quick-Action-Menü.

33:43.000 --> 33:44.000
Und da kannst du es auswählen.

33:44.000 --> 33:47.000
Du kriegst dann auch immer so...

33:47.000 --> 33:49.000
Du kriegst dann auch so eine Vorschau.

33:49.000 --> 33:50.000
Ja.

33:50.000 --> 33:51.000
Ah.

33:51.000 --> 33:53.000
What the fuck?

34:01.000 --> 34:02.000
Clap.

34:02.000 --> 34:03.000
Clap habe ich schon gefunden.

34:03.000 --> 34:04.000
GitHub.

34:04.000 --> 34:05.000
Clap.

34:05.000 --> 34:06.000
Das werden wir auch jetzt verwenden.

34:06.000 --> 34:08.000
Das werden wir jetzt verwenden.

34:08.000 --> 34:10.000
Max soll das Tool in C++...

34:10.000 --> 34:12.000
Na ja, wenn ihr da so scharf drauf seid.

34:12.000 --> 34:13.000
Aber nicht heute.

34:13.000 --> 34:14.000
Das sage ich euch gleich.

34:14.000 --> 34:15.000
Heute machen wir es nicht.

34:15.000 --> 34:19.000
Heute machen wir nur die Rust-Variante.

34:19.000 --> 34:21.000
Das ist ein Rust-Command-Line-Parser.

34:21.000 --> 34:24.000
Gut, also wir fangen relativ easy an.

34:24.000 --> 34:30.000
Wir gucken mal, dass ich Kommando-Zeilen-Argumente gepasst bekomme in Rust.

34:30.000 --> 34:34.000
Also wie gesagt, das Tool ist von der Idee her nicht sonderlich kompliziert.

34:34.000 --> 34:36.000
Das hier unten ist nur für Jason-Parsen.

34:36.000 --> 34:38.000
Das braucht man gar nicht unbedingt.

34:38.000 --> 34:39.000
Also...

34:39.000 --> 34:40.000
Das ist auch...

34:40.000 --> 34:43.000
Also das Tool ist insgesamt 180 Zeilen.

34:43.000 --> 34:46.000
Und 180 Zeilen C-Sharp...

34:46.000 --> 34:50.000
Könnte ich mir vorstellen, sehen in anderen Programmiersprachen auch nur 140 Zeilen.

34:50.000 --> 34:52.000
Das ist teilweise schon ein bisschen...

34:52.000 --> 34:54.000
Verbose das Ganze.

34:54.000 --> 34:56.000
Heißt das eigentlich Verbose oder Verbis?

34:56.000 --> 34:57.000
Da kann man sich immer...

34:57.000 --> 34:58.000
Da kann man sich...

34:58.000 --> 34:59.000
Weiß nicht, ob man sich...

34:59.000 --> 35:00.000
Wie das...

35:00.000 --> 35:01.000
Was richtig ist.

35:01.000 --> 35:02.000
Na du kannst...

35:02.000 --> 35:04.000
Du kannst Maintenance setzen.

35:04.000 --> 35:06.000
Du kannst sagen, wann die anfängt.

35:06.000 --> 35:07.000
Wie lange.

35:07.000 --> 35:08.000
Wie lange.

35:08.000 --> 35:09.000
Wie lange.

35:09.000 --> 35:10.000
Wie lange.

35:10.000 --> 35:11.000
Wie lange.

35:11.000 --> 35:13.000
Wie lange man die anfängt.

35:13.000 --> 35:14.000
Wie lange.

35:14.000 --> 35:18.000
Ein Grund angeben oder kannst auch aktuelle Maintenances löschen und listen.

35:18.000 --> 35:21.000
Also im Prinzip ist das Programm relativ simpelt.

35:21.000 --> 35:23.000
Es besteht im Prinzip nur aus ein bisschen...

35:23.000 --> 35:26.000
Kommandozeilen-Argumente, Pssen,

35:26.000 --> 35:28.000
3-4 Web-Requests machen

35:28.000 --> 35:29.800
und Konsolenausgabe.

35:29.800 --> 35:31.000
Sonst nichts.

35:31.000 --> 35:32.000
Das ist ein super Programm,

35:32.000 --> 35:36.000
um das mal mit mehreren Sprachen zu vergleichen.

35:36.000 --> 35:38.000
Und deswegen habe ich mir auch überlegt,

35:38.000 --> 35:42.560
überlegt, wir können das in diesen ganzen Programmiersprachen mal implementieren und am Ende

35:43.120 --> 35:48.400
gucken wir mal, was sich für diesen Zweck besser eignet. Ich meine, es gibt zig

35:49.240 --> 35:53.040
hunderte Performance-Vergleiche zwischen den Programmiersprachen.

35:54.480 --> 36:00.800
Am Ende ist es für solche Tools gar nicht so entscheidend, wie performant das ist. Mein Performance ist immer nice, aber für

36:01.160 --> 36:05.640
ein bisschen Kommando-Zeilen-Ausgabe und Argumente-Parsen und 3 Web-Requests machen,

36:05.640 --> 36:12.920
ob das jetzt eine Millisekunde braucht oder zwei Sekunden, wäre fast egal. Muss jetzt mal übertrieben auszudrücken.

36:14.640 --> 36:15.920
Deswegen

36:15.920 --> 36:19.760
mal gucken, in welcher Programmiersprache sowas am einfachsten dann am Ende

36:20.280 --> 36:22.760
programmiertechnisch geht, auch am einfachsten von der Hand

36:23.120 --> 36:29.600
und am Ende auch, wie einfach sich das ganze deployen lässt, beziehungsweise wie groß das Binary ist. Ich glaube, da wird Go,

36:29.600 --> 36:34.200
was Deployment angeht, die Nase vorn haben, weil Go, das ist halt eines der riesen Vorteile von Go.

36:34.200 --> 36:40.960
So, und jetzt machen wir das ganze mal, jetzt machen wir das ganze mal in Rust. Das heißt, das erste, was wir machen müssen, ist Argumente-Parsen.

36:41.800 --> 36:48.600
Zwar müssen wir eine Rust-Anwendung programmieren, die diese Argumente parset. List, kurzschreibweise L,

36:49.000 --> 36:52.160
Clear, kurzschreibweise C, Duration, Start, Reason.

36:55.040 --> 36:58.880
Übrigens, wisst ihr, was heute witzig war? Ach so, noch, das kann ich kurz noch beantworten.

36:58.880 --> 37:03.080
Äh, nein, ich hab das hier verwendet für Commando-Signal-Tools.

37:04.480 --> 37:06.480
Kekona, leider falsch geschrieben.

37:09.160 --> 37:10.360
Das da.

37:10.360 --> 37:17.040
Warum lädt eigentlich GitHub gerade so ultra langsam? Ach, das liegt am Dark-Theme. Ja, das da, das hab ich verwendet.

37:17.480 --> 37:19.480
Nicht System-Command-Line.

37:21.200 --> 37:27.200
Wie ist das herangehen in Rust? Geht man objektorientiert vor? Ich hab keine Ahnung von Rust. Wir werden uns das jetzt alles angucken.

37:27.200 --> 37:31.400
Ich hab keinen Plan. Ich krieg, ich krieg mit Ach und Krach in Rust

37:32.920 --> 37:37.920
Commando-Signal-Shell-Ausgabe hin. Ich hab wirklich keinen Plan.

37:41.200 --> 37:48.000
Ich hab noch nicht viel Vergleich zu System-Command-Line. Es hat mich aber von der GitHub-Seite schon angesprochen.

37:49.800 --> 37:54.600
Also, fangen wir mal an. Commando-Zeilen-Argumente-Parsen in Rust.

37:54.600 --> 37:59.600
Wie gehen wir denn da vor? Also, ich kopier mir mal den C-Sharp-Campel rein, den wir brauchen.

38:00.200 --> 38:02.200
What the fuck? Ich will nicht zum Master-Committen.

38:05.400 --> 38:07.400
Äh, Moment. Shortcuts.

38:09.600 --> 38:11.600
Äh, Keymap.

38:16.600 --> 38:18.600
Ähm.

38:19.600 --> 38:21.600
Also, erstmal Move-Line.

38:21.600 --> 38:23.600
Move-Line.

38:25.600 --> 38:27.600
Äh, wat?

38:28.600 --> 38:30.600
Move-Line.

38:31.600 --> 38:33.600
Down.

38:34.600 --> 38:37.600
Keyboard-Shortcut. Alt-Down. Ja, ja.

38:38.600 --> 38:40.600
Remove. Brauche ich keinen Mensch.

38:40.600 --> 38:42.600
Line-Up. Alt-Up.

38:44.600 --> 38:46.600
Remove. Ähm.

38:46.600 --> 38:50.600
Comment. Wozu hat das? Jetzt dreh ich durch.

38:50.600 --> 38:52.600
Comment-Width-Line-Block.

39:00.600 --> 39:04.600
Ctrl-K-C. Oh, nee. Moment.

39:04.600 --> 39:06.600
Ctrl-K.

39:06.600 --> 39:08.600
Ctrl-C.

39:11.600 --> 39:13.600
Remove.

39:13.600 --> 39:16.600
Remove. Kurz mal gucken, ob das funktioniert.

39:17.600 --> 39:20.600
Hey, Pog. Alles klar. Klappt.

39:20.600 --> 39:23.600
Okay, also, Rust-Commando-Zeilen-Argumente-Parsen.

39:23.600 --> 39:26.600
Der Chat sagt, ich soll die Library-Clap verwenden.

39:26.600 --> 39:28.600
Das mache ich auch.

39:28.600 --> 39:33.600
Das habe ich nämlich tatsächlich vorher schon mal ein bisschen gecheatet und geguckt, was es da so gibt.

39:33.600 --> 39:36.600
Und da ist das tatsächlich am Start.

39:36.600 --> 39:39.600
Okay. Cargo-Add-Clap-F-Derive.

39:39.600 --> 39:43.600
Siehste? Jetzt fängt es schon mal an.

39:43.600 --> 39:47.600
Ich habe keine Ahnung, was minus F-Derive macht.

39:49.600 --> 39:52.600
Cargo-Add. Ach so, das ist ja nicht...

39:52.600 --> 39:54.600
Das ist ja nicht...

39:54.600 --> 39:57.600
Cargo-Add-Minus-Minus-Help.

40:00.600 --> 40:03.600
Feature-Aktivieren. Ah, minus F ist Feature.

40:05.600 --> 40:07.600
Feature-Flag.

40:07.600 --> 40:11.600
Okay, man kann Libraries mit verschiedenen Feature-Flags adden.

40:12.600 --> 40:15.600
Das ist ungewohnt für mich. In.NET macht man das anders.

40:15.600 --> 40:20.600
Man installiert die Library und hat dann irgendeine Config-Methode oder so, die man beim Starten aufruft.

40:20.600 --> 40:23.600
Das ist dann zwar nicht Compile-Time, aber...

40:24.600 --> 40:26.600
Derive.

40:27.600 --> 40:29.600
Was für Dinger?

40:29.600 --> 40:34.600
Okay, Rust ist von der ersten Minute schon Ultra-Five fertig.

40:34.600 --> 40:36.600
Derive-Parser.

40:39.600 --> 40:41.600
What?

40:50.600 --> 40:52.600
Okay, das ist schon High-IQ.

40:52.600 --> 40:56.600
Das startet schon. Das startet schon so, dass ich nicht verstehe.

40:56.600 --> 40:58.600
Aber...

40:59.600 --> 41:02.600
Ich füge das jetzt einfach. Ist wirklich zu feifett.

41:02.600 --> 41:04.600
Ich füge das jetzt einfach mal hinzu.

41:06.600 --> 41:12.600
Also eins muss man sagen, was Rust richtig gut macht, ist, dass sie standardmäßigen Package-Manager dabei haben.

41:15.600 --> 41:21.600
Ich meine, die meisten modernen Programmiersprachen auf standardmäßigen Package-Manager dabei, aber Cargo ist wirklich gut.

41:21.600 --> 41:25.600
Und, ach, hier kann man Feature-Flags und sowas setzen.

41:25.600 --> 41:32.600
Color, Terminal, Color, Requex. What the fuck?

41:33.600 --> 41:35.600
Interessant.

41:35.600 --> 41:41.600
Das heißt, man kann Color, Terminal und sowas machen und Kommando-Zeilen-Argumente parsen. Na gut.

41:41.600 --> 41:45.600
Okay, wie parsen man Kommando-Zeilen-Argumente?

41:45.600 --> 41:47.600
Okay.

41:50.600 --> 41:52.600
Clap-Parser.

41:52.600 --> 41:54.600
Args-Pars.

42:01.600 --> 42:05.600
Benutzt lieber die Bilder-Syntax. Ja, das mache ich.

42:05.600 --> 42:08.600
Das mache ich, wenn du mir sagst, hier Bilder-Tutorial.

42:10.600 --> 42:12.600
Alles klar.

42:12.600 --> 42:17.600
Use-Clap-Arg-Command-Value-Parser-Arg-Action-Command.

42:17.600 --> 42:22.600
Okay, ich copy-paste die mir das mal, weil ich eh keinen Plan habe, was die mir damit sagen wollen.

42:22.600 --> 42:25.600
Alles klar. So. Und jetzt?

42:25.600 --> 42:27.600
Main.

42:27.600 --> 42:30.600
Matcher-Command.

42:30.600 --> 42:51.600
Oh, das ist extremster Fivehead schon wieder, wenn ich die Syntax sehe.

42:51.600 --> 42:55.600
Leute, Rust ist definitiv nicht ausgelegt für so große Schriftart.

42:55.600 --> 43:00.600
Da blickst du nicht durch.

43:07.600 --> 43:09.600
What the fuck?

43:09.600 --> 43:11.600
Was bin ich sehend hier gerade?

43:11.600 --> 43:14.600
Okay, wir machen mal eine Sache. Ich weiß nicht, ob man das...

43:14.600 --> 43:16.600
Leute...

43:16.600 --> 43:29.600
Ist das verpönt in Rust, was anderes als vier Einrückungspaces oder Tabs zu verwenden?

43:29.600 --> 43:42.600
Also ich mag ja zwei Spaces überall.

43:42.600 --> 43:45.600
Reformat.

43:45.600 --> 43:47.600
Ja, kann man vielleicht auch besser lesen.

43:47.600 --> 43:49.600
Okay, das ist schon...

43:49.600 --> 43:50.600
Requires Cargo-Feature.

43:50.600 --> 43:51.600
Haben wir das Cargo-Feature?

43:51.600 --> 43:53.600
Wir haben das Cargo-Feature gar nicht.

43:53.600 --> 43:55.600
Also muss ich noch mal sagen.

43:55.600 --> 44:02.600
Cargo-Clap und wahrscheinlich Komma.

44:02.600 --> 44:04.600
Der zeigt... Nochmal Minus F.

44:04.600 --> 44:06.600
Ha, Fivehead.

44:06.600 --> 44:09.600
Jetzt haben wir auch das Cargo-Feature.

44:09.600 --> 44:11.600
Ja, Chico guckt auch schon komisch.

44:11.600 --> 44:15.600
Okay, also was sehe ich denn hier überhaupt jetzt?

44:15.600 --> 44:24.600
Let Matches, Command-Macro-Arc, Optional Name to Operate...

44:24.600 --> 44:30.600
What the fuck?

44:30.600 --> 44:34.600
We don't have Syntax?

44:34.600 --> 44:42.600
Okay, Sub-Command brauche ich auf jeden Fall schon mal nicht.

44:42.600 --> 44:46.600
Kann man das nicht in eine Zeile schreiben, oder ist das...

44:46.600 --> 44:50.600
Was ist, wenn ich jetzt sage Reformat?

44:50.600 --> 44:51.600
Geht doch.

44:51.600 --> 44:53.600
Moment.

44:53.600 --> 44:58.600
Kann es sein, dass das Format, dass es automatisch formatieren irgendwie ein bisschen suckt?

44:58.600 --> 45:10.600
Ich meine, sollte nicht jeder Zeichen hier wegmachen?

45:10.600 --> 45:12.600
Trier Value Pulser.

45:12.600 --> 45:14.600
Boah, das ist ja richtig high IQ, Alter.

45:14.600 --> 45:17.600
Was passiert denn hier?

45:17.600 --> 45:21.600
Okay, also ich will ja eigentlich nur...

45:21.600 --> 45:24.600
Ich finde es auch mega kompliziert zu lesen, Alter.

45:24.600 --> 45:27.600
Das beblickt doch keiner durch.

45:27.600 --> 45:30.600
Ich probiere das mal, wenn nicht, machen wir das da.

45:30.600 --> 45:35.600
Warum gibt es eigentlich da schon wieder zwei verschiedene Varianten oder drei verschiedene Varianten?

45:35.600 --> 45:39.600
Es gibt einmal das hier...

45:39.600 --> 45:43.600
Oder ist das hier und...

45:43.600 --> 45:50.600
Derive Syntax das Gleiche.

45:50.600 --> 45:56.600
Ich sehe schon, wenn Kommandozeilen Argumente einen überfordern, ist alles klar.

45:56.600 --> 45:58.600
Also, ich probiere es mal auf die Anweis.

45:58.600 --> 46:00.600
Okay, Argument.

46:00.600 --> 46:05.600
Das hier ist wahrscheinlich die Beschreibung und das hier ist, wie es heißen soll.

46:05.600 --> 46:09.600
Also, ich will als Argument haben List.

46:09.600 --> 46:12.600
Nee.

46:12.600 --> 46:22.600
Ich will minus minus List oder minus L haben.

46:22.600 --> 46:24.600
Das ist der Hilfetext.

46:24.600 --> 46:31.600
List all...

46:31.600 --> 46:35.600
So, irgendwie sowas.

46:35.600 --> 46:40.600
So, dann kann man sagen, ob es required ist oder nicht.

46:40.600 --> 46:45.600
Was er uns hier mit Value-Parser sagen will.

46:45.600 --> 46:46.600
Custom-Type.

46:46.600 --> 46:49.600
Nee, sowas habe ich nicht.

46:49.600 --> 46:52.600
Schmeiße ich das mal weg.

46:52.600 --> 46:55.600
Action, Arg-Count-Count.

46:55.600 --> 46:59.600
Okay, was passiert denn jetzt, wenn ich das runne?

46:59.600 --> 47:06.600
Er bildet erstmal.

47:06.600 --> 47:12.600
Sagt wahrscheinlich gleich Syntax-Fehler oder sowas.

47:12.600 --> 47:13.600
War klar.

47:13.600 --> 47:20.600
Unexpected-Talking-L.

47:20.600 --> 47:24.600
Warum ist das Unexpected?

47:24.600 --> 47:29.600
Ach so, Moment.

47:29.600 --> 47:32.600
Muss geklammert werden?

47:32.600 --> 47:37.600
Zum Geher.

47:37.600 --> 47:48.600
Hä?

47:48.600 --> 47:53.600
Moment.

47:53.600 --> 47:55.600
Okay, warte, warte.

47:55.600 --> 47:56.600
Also, Arg.

47:56.600 --> 47:59.600
So, ich will mit L oder L oder Liss-Talk.

47:59.600 --> 48:02.600
File will ich nicht.

48:02.600 --> 48:08.600
Okay, List all for this host.

48:08.600 --> 48:10.600
So, ich will nicht, dass es required ist.

48:10.600 --> 48:13.600
Also, irgendwelche Custom-Sachen parsen will ich auch nicht.

48:13.600 --> 48:16.600
Also, einfach nur so.

48:16.600 --> 48:18.600
Aber jetzt funktioniert.

48:18.600 --> 48:20.600
Was hatte er jetzt?

48:20.600 --> 48:22.600
Unused-Import, ja.

48:22.600 --> 48:24.600
Kann man das irgendwie ignorieren?

48:24.600 --> 48:25.600
Hier, ja.

48:25.600 --> 48:26.600
Warn-Unused-Imports.

48:26.600 --> 48:30.600
Unused-Imports will ich nicht gewarnt werden.

48:30.600 --> 48:32.600
Moment, Leute, vielleicht kriege ich...

48:32.600 --> 48:35.600
War das not-warn?

48:35.600 --> 48:43.600
Nee.

48:43.600 --> 48:44.600
Not-unused?

48:44.600 --> 48:48.600
Das ging doch irgendwie.

48:48.600 --> 48:58.600
Rust-Disable-Warning.

48:58.600 --> 49:00.600
Hab ich doch richtig gemacht.

49:00.600 --> 49:01.600
Allow.

49:01.600 --> 49:03.600
Ach, Moment.

49:03.600 --> 49:05.600
Hä?

49:05.600 --> 49:10.600
Moment, Allow muss ich davor schreiben.

49:10.600 --> 49:12.600
Und dann ein Ausrufezeichen davor.

49:12.600 --> 49:14.600
Warum einmal mit Ausrufezeichen...

49:14.600 --> 49:15.600
Moment.

49:15.600 --> 49:16.600
Hä?

49:16.600 --> 49:17.600
Warum?

49:17.600 --> 49:19.600
Warum Ausrufezeichen und kein Ausrufezeichen?

49:19.600 --> 49:26.600
Warum geht beides?

49:26.600 --> 49:29.600
Allow-Dead-Code will ich auch.

49:29.600 --> 49:33.600
Das will ich, dass ihr mir das Leben schwer macht.

49:33.600 --> 49:38.600
Okay, da braucht man anscheinend kein Ausrufezeichen davor.

49:38.600 --> 49:45.600
Und Unused-Variables will ich auch haben.

49:45.600 --> 49:46.600
So.

49:46.600 --> 49:50.600
Sonst dreh ich am Rad beim Entwickeln.

49:50.600 --> 49:52.600
So.

49:52.600 --> 49:55.600
Should have snake-case-name.

49:55.600 --> 49:59.600
Okay, mein Crate heißt falsch, Leute.

49:59.600 --> 50:03.600
Wo stelle ich denn den Crate-Namen überhaupt ein?

50:03.600 --> 50:04.600
In meiner...

50:04.600 --> 50:08.600
Ah, hier, nee.

50:08.600 --> 50:19.600
Package?

50:19.600 --> 50:24.600
Oder wo nervt er denn hier?

50:24.600 --> 50:30.600
Unused-Imports.

50:30.600 --> 50:38.600
Allow Unused-Imports.

50:38.600 --> 50:39.600
Snake-case.

50:39.600 --> 50:44.600
Okay, jetzt hat er anscheinend wirklich nur...

50:44.600 --> 50:47.600
Hä?

50:47.600 --> 50:58.600
Warum warned er mich immer noch bei Unused-Imports jetzt?

50:58.600 --> 51:03.600
Muss man das doch mit Ausrufezeichen machen?

51:03.600 --> 51:05.600
Ach so, das hier ist global?

51:05.600 --> 51:12.600
Und das bezieht sich auf die Zeile, auf nur eine Zeile unten drunter, oder wie?

51:12.600 --> 51:13.600
Five-Header, Alter.

51:13.600 --> 51:15.600
Five-Head-Time.

51:15.600 --> 51:17.600
Rust-Champ.

51:17.600 --> 51:18.600
Okay.

51:18.600 --> 51:20.600
Also, Porsche should have snake-case-name.

51:20.600 --> 51:24.600
Gut, also gehe ich jetzt hier rein und sage Package-Name ist nicht

51:24.600 --> 51:31.600
Post-Champ-Rust, sondern...

51:31.600 --> 51:37.600
sondern Post-Champ-Rust, oder?

51:37.600 --> 51:39.600
Ach, mit, mit, mit Dings.

51:39.600 --> 51:42.600
Post-Champ-Rust, so, oder wie?

51:42.600 --> 51:47.600
Okay, einfach nur Post-Champ nennen, so, okay.

51:47.600 --> 51:49.600
Okay, gut.

51:49.600 --> 51:53.600
Also, wir haben kompiliert ohne Warnings und ohne Fehler.

51:53.600 --> 51:56.600
Ich meine, okay, wir haben die Hälfte abgeschaltet, aber ganz ehrlich,

51:56.600 --> 52:00.600
ähm, das sind so nervige Dinger.

52:00.600 --> 52:01.600
Ha, echt?

52:01.600 --> 52:04.600
Stand das, wo das steht?

52:04.600 --> 52:06.600
Nee.

52:06.600 --> 52:08.600
Stand nur, dass es, dass es nicht...

52:08.600 --> 52:12.600
Ach so, da steht hinten, wie es heißen soll, ja.

52:12.600 --> 52:16.600
Gut, also, wenn ich jetzt Help mache, checkt der das dann?

52:16.600 --> 52:19.600
Minus, minus Help?

52:19.600 --> 52:20.600
List.

52:20.600 --> 52:22.600
Ja, es checkt er.

52:22.600 --> 52:27.600
Okay, okay, minus L.

52:27.600 --> 52:31.600
Okay, okay, also, Debug?

52:31.600 --> 52:37.600
Warum habe ich Standard-Mission minus, minus Debug?

52:37.600 --> 52:40.600
Richtige Pros würden das, äh, das finde ich gut.

52:40.600 --> 52:47.600
Und, und dann, und dann Description, Description, ähm,

52:47.600 --> 52:54.600
Written in Rust for five only, only for Fivehead.

52:54.600 --> 52:57.600
Es ist ganz wichtig, dass man immer, wenn man was in Rust schreibt,

52:57.600 --> 53:00.600
dabei schreibt Written in Rust.

53:00.600 --> 53:09.600
Das, das, das, das fühlt sich dann wichtiger an.

53:09.600 --> 53:12.600
Ach so, das Debug habe ich definiert, tatsächlich.

53:12.600 --> 53:17.600
Arc-Action-Count, was?

53:17.600 --> 53:21.600
Specify the behavior and parsing and argument.

53:21.600 --> 53:25.600
Arc-Action.

53:25.600 --> 53:30.600
Hä?

53:30.600 --> 53:42.600
Placingly fast, fantastic, äh, ne, Placingly fast, Rust, Rustation,

53:42.600 --> 53:45.600
Postchamp-Tool Written in Rust wäre schon dann richtig.

53:45.600 --> 53:51.600
Was Zeile sieben und zehn sind, oh, du hast recht.

53:51.600 --> 53:56.600
Also, ich, ich weiß nicht, was das macht, wenn ich ehrlich bin.

53:56.600 --> 54:00.600
Aber ich will dieses Debug eh nicht haben, okay.

54:00.600 --> 54:03.600
Also, das bedeutet, hier würde ich jetzt meine Argumente auflisten.

54:03.600 --> 54:25.600
Also, ich will haben a list, a clear, clear.

54:25.600 --> 54:30.600
So, wir sparen uns mal den Hilfetext, wow.

54:30.600 --> 54:33.600
Wir sparen uns den Hilfetext, also ich will clear haben.

54:33.600 --> 54:37.600
Ich will Duration haben.

54:37.600 --> 54:40.600
Duration, das wird glaube ich schon kompliziert genug,

54:40.600 --> 54:43.600
weil ich will ja hier parsen, ob es eine Duration ist,

54:43.600 --> 54:46.600
beziehungsweise ob es so eine Art Time-Span ist,

54:46.600 --> 54:48.600
falls es so was in Rust gibt.

54:48.600 --> 54:57.600
Duration, Start und Reason.

54:57.600 --> 55:02.600
Ich spar mir jetzt mal Hilfetexte, weil es ist so obviously

55:02.600 --> 55:04.600
natürlich alles selbst erklären, wer braucht DoCo

55:04.600 --> 55:08.600
und wenn man einen perfekten, fehlerfreien Rust-Code schreibt,

55:08.600 --> 55:11.600
braucht man selbstverständlich auch keine Hilfe.

55:11.600 --> 55:14.600
So, okay, das funktioniert.

55:14.600 --> 55:16.600
Alles bloated.

55:16.600 --> 55:20.600
So, und jetzt ist natürlich die Frage,

55:20.600 --> 55:23.600
wenn ich jetzt Duration angebe, ja, also sagen wir mal,

55:23.600 --> 55:27.600
ich gebe jetzt an, minus minus Duration.

55:27.600 --> 55:33.600
So, in.NET würde ich jetzt sowas angeben, zum Beispiel 15 Minuten.

55:33.600 --> 55:36.600
So, und dann sagt er Found Argument wasn't expected

55:36.600 --> 55:40.600
or isn't valid in this context, alles klar.

55:40.600 --> 55:50.600
Ja, ich sage mir überhaupt nicht, welche Typen das sind.

55:50.600 --> 55:53.600
Ich sage ja auch nicht, was es für Typen sind, die ich da habe.

55:53.600 --> 56:02.600
So, wie mache ich das denn?

56:02.600 --> 56:04.600
Ich finde es immer verwirrend, wenn es zwei grundsätzlich

56:04.600 --> 56:06.600
unterschiedliche Sachen in der Library gibt.

56:06.600 --> 56:10.600
Okay, hier kann man, also die andere Variante wäre

56:10.600 --> 56:24.600
DeriveParserDebug, da habe ich keine Ahnung, was das einem jetzt sagt.

56:24.600 --> 56:28.600
Okay, wir gucken uns aber erstmal an, wie das hiermit funktioniert.

56:28.600 --> 56:32.600
Also, args, ach, das ist nur, was der ausgibt, quasi auf der Kommandozeile

56:32.600 --> 56:36.600
bei Help, das hat nicht wirklich was damit zu tun,

56:36.600 --> 56:44.600
was der wirklich haben will.

56:44.600 --> 56:46.600
Oder müsste ich dahinter schreiben?

56:46.600 --> 56:49.600
Ah, nee, es könnte ja auch sein, dass ich dahinter schreiben muss

56:49.600 --> 57:01.600
Duration und dann quasi Time oder so.

57:01.600 --> 57:09.600
Ja, irgendwie so, dann Help.

57:09.600 --> 57:13.600
Duration, Duration, so, und jetzt, aber selbst wenn ich jetzt

57:13.600 --> 57:17.600
minus D angebe, sollte das jetzt ja noch nicht,

57:17.600 --> 57:19.600
noch nicht funktionieren.

57:19.600 --> 57:25.600
Ich muss den, hä, Moment, jetzt geht das, aber woher weiß der denn

57:25.600 --> 57:33.600
überhaupt jetzt was er, wohin er das speichern soll.

57:33.600 --> 57:35.600
Das ist wirklich high IQ hier.

57:35.600 --> 57:47.600
Matches get one string, ach, und das kann man dann danach auslesen.

57:47.600 --> 58:04.600
Auch ein Value-Parser.

58:04.600 --> 58:09.600
Ah, da kann ich dann angeben, was es quasi ist.

58:09.600 --> 58:11.600
Da kann ich angeben, was es für ein Typ ist.

58:11.600 --> 58:13.600
Ach, jetzt, okay, jetzt habe ich glaube ich verstehen.

58:13.600 --> 58:16.600
Da gebe ich dann an, was es für ein Typ ist,

58:16.600 --> 58:20.600
dass der mir schon checken kann, ob das, ob das sinnvoll ist.

58:20.600 --> 58:22.600
Okay, wir tun einfach mal so als wäre es ein String,

58:22.600 --> 58:25.600
dann, dann muss ich nicht so viel machen, so.

58:25.600 --> 58:28.600
Value-Parser.

58:28.600 --> 58:31.600
So, es ist nicht Pars-Buff, sondern ist einfach nur

58:31.600 --> 58:33.600
Value-Parsers.

58:33.600 --> 58:36.600
Oh, jetzt ist, jetzt kommt, jetzt kommt Rust.

58:36.600 --> 58:42.600
Rust-Strings, Sekunde, Pfeiffer-Time.

58:42.600 --> 58:52.600
String, String, String und Str.

58:52.600 --> 58:58.600
Okay, das funktioniert, alles klar.

58:58.600 --> 59:01.600
Äh, und was ist Str?

59:01.600 --> 59:06.600
Geht nicht, okay.

59:06.600 --> 59:10.600
Und Str, Str-Slice-Dings, geht natürlich auch nicht.

59:10.600 --> 59:13.600
Okay, da bin ich zu low IQ für.

59:13.600 --> 59:15.600
Da müsste ich mir mal ein Tutorial angucken,

59:15.600 --> 59:18.600
was eigentlich genau der Unterschied ist.

59:18.600 --> 59:21.600
Moin, Menschen, das ist Rust.

59:21.600 --> 59:23.600
Das ist Rust.

59:23.600 --> 59:25.600
Okay, und wie greife ich da jetzt drauf zu?

59:25.600 --> 59:28.600
Da steht ja auch ein Beispiel.

59:28.600 --> 59:30.600
Da muss ich dann sowas hier machen, Name zum Beispiel.

59:30.600 --> 59:35.600
Okay, also, if some, Name.

59:35.600 --> 59:48.600
Wo kommt der Name überhaupt her?

59:48.600 --> 59:53.600
Ach nee, das ist Variable Assignment.

59:53.600 --> 59:56.600
Das ist, ach, das ist diese, ja, das ist, das guckt ja,

59:56.600 --> 59:58.600
dass da überhaupt ein Wert drinne steht, ja.

59:58.600 --> 01:00:02.600
So, Matches, Get, Won, Moment.

01:00:02.600 --> 01:00:04.600
Jetzt muss ich gar nicht angeben, dass es ein String ist.

01:00:04.600 --> 01:00:06.600
Standardmäßig geht da wahrscheinlich davon aus,

01:00:06.600 --> 01:00:08.600
dass es einer ist.

01:00:08.600 --> 01:00:15.600
Duration würde ich jetzt angeben, wahrscheinlich.

01:00:15.600 --> 01:00:20.600
Okay, nein.

01:00:20.600 --> 01:00:23.600
Oh, jetzt habe ich es kaputt gemacht, hier, Moment.

01:00:23.600 --> 01:00:27.600
Hier, Klammer fehlt.

01:00:27.600 --> 01:00:32.600
Get, Value Name, hier, Value for Cackle.

01:00:32.600 --> 01:00:35.600
Value for Cackle ist 0015.

01:00:35.600 --> 01:00:37.600
Alles klar.

01:00:37.600 --> 01:00:40.600
Okay, ja, Derive werden wir dann mal gleich aus, nicht Drive.

01:00:40.600 --> 01:00:46.600
Derive werden wir dann auch gleich mal ausprobieren.

01:00:46.600 --> 01:00:49.600
Und jetzt machen wir Value Paser mit Datum, genau.

01:00:49.600 --> 01:00:51.600
Das wollte ich nämlich auch ausprobieren,

01:00:51.600 --> 01:00:54.600
ob die sowas in Rust eingebaut haben.

01:00:54.600 --> 01:00:56.600
Also jetzt würden wir nämlich an der Stelle sagen, Value.

01:00:56.600 --> 01:00:58.600
Nee, Moment.

01:00:58.600 --> 01:01:00.600
Value Paser.

01:01:00.600 --> 01:01:02.600
Oh Gott, jetzt muss ich mir...

01:01:02.600 --> 01:01:05.600
Wie war das Beispiel dafür nochmal?

01:01:05.600 --> 01:01:11.600
Value Paser.

01:01:11.600 --> 01:01:16.600
Okay.

01:01:16.600 --> 01:01:19.600
Value Paser.

01:01:19.600 --> 01:01:25.600
Äh, wat?

01:01:25.600 --> 01:01:27.600
So viele Klammern.

01:01:27.600 --> 01:01:29.600
Value Paser.

01:01:29.600 --> 01:01:33.600
Warum ich hier einen Makro in einem Makro brauche?

01:01:33.600 --> 01:01:38.600
Der generiert mir einen Value Paser aus dem Typ dann,

01:01:38.600 --> 01:01:40.600
für den Typ oder was.

01:01:40.600 --> 01:01:45.600
Okay, also Rust Date Time.

01:01:45.600 --> 01:01:54.600
Chrono Date Time.

01:01:54.600 --> 01:01:57.600
Ist das Standard Lip?

01:01:57.600 --> 01:02:00.600
Oder ist das eine Github Live?

01:02:00.600 --> 01:02:07.600
Woher kenne ich jetzt, ob das Standard Lip ist oder nicht?

01:02:07.600 --> 01:02:09.600
Use.

01:02:09.600 --> 01:02:12.600
Chrono, nee, nee.

01:02:12.600 --> 01:02:15.600
Use.

01:02:15.600 --> 01:02:29.600
Isn't great, okay.

01:02:29.600 --> 01:02:31.600
Time.

01:02:31.600 --> 01:02:33.600
Use Standard Time.

01:02:33.600 --> 01:02:35.600
Okay, schauen wir mal nicht schlecht.

01:02:35.600 --> 01:02:42.600
Ich habe keine Ahnung, wie die Time Library funktioniert von Rust.

01:02:42.600 --> 01:02:46.600
Das ist nicht Ryder, das ist Sea Lion.

01:02:46.600 --> 01:02:56.600
Guter Ratschlag, Tommy Kekkel.

01:02:56.600 --> 01:03:04.600
Ja, ich habe es absichtlich das Farbsteam von Ryder genommen und jetzt Time.

01:03:04.600 --> 01:03:06.600
Und dann geht das nicht, weil

01:03:06.600 --> 01:03:08.600
Expected Time Found Module.

01:03:08.600 --> 01:03:10.600
Ah, Moment.

01:03:10.600 --> 01:03:14.600
Time.

01:03:14.600 --> 01:03:18.600
Okay, ich habe keine Ahnung, wie es funktioniert.

01:03:18.600 --> 01:03:21.600
Das ist das Module, das ist, okay, Time.

01:03:21.600 --> 01:03:24.600
Duration.

01:03:24.600 --> 01:03:27.600
System Time, instant.

01:03:27.600 --> 01:03:35.600
Instant.

01:03:35.600 --> 01:03:36.600
What?

01:03:36.600 --> 01:03:37.600
What?

01:03:37.600 --> 01:03:45.600
Das ist ja noch schlimmer als C++ und, und, und, und.

01:03:45.600 --> 01:03:47.600
Okay, Sixhead Time.

01:03:47.600 --> 01:03:48.600
Keine Ahnung.

01:03:48.600 --> 01:03:50.600
Phantom Data Marker.

01:03:50.600 --> 01:03:54.600
Doesn't satisfy.

01:03:54.600 --> 01:03:55.600
Alles klar.

01:03:55.600 --> 01:03:59.600
Jetzt, obviously, jetzt weiß ich Bescheid.

01:03:59.600 --> 01:04:01.600
Okay, Duration.

01:04:01.600 --> 01:04:02.600
Gucken wir mal, ob man das so frisst.

01:04:02.600 --> 01:04:03.600
Nee.

01:04:03.600 --> 01:04:08.600
Okay, das, das, das geht so nicht.

01:04:08.600 --> 01:04:11.600
Keine Ahnung.

01:04:11.600 --> 01:04:15.600
Wie funktioniert die Time Library von Rust überhaupt?

01:04:15.600 --> 01:04:17.600
Okay.

01:04:17.600 --> 01:04:25.600
Hat Chattern Rust mittlerweile sowas wie String Templates oder sowas?

01:04:25.600 --> 01:04:33.600
Alles eats und logisch, sowas?

01:04:33.600 --> 01:04:40.600
Geht das, geht das mittlerweile in Rust?

01:04:40.600 --> 01:04:41.600
Nee, anscheinend nicht.

01:04:41.600 --> 01:04:42.600
Format.

01:04:42.600 --> 01:04:43.600
Nee.

01:04:43.600 --> 01:04:51.600
Ich will da direkt den String schreiben und nicht die Argumente dahinter.

01:04:51.600 --> 01:04:56.600
Rust, String, Enter.

01:04:56.600 --> 01:05:05.600
Ja, sowas suche ich, genau.

01:05:05.600 --> 01:05:08.600
Oder auch nicht, fast.

01:05:08.600 --> 01:05:15.600
Ach, Moment, geht doch.

01:05:15.600 --> 01:05:18.600
Klammer fehlt nach Duration, okay.

01:05:18.600 --> 01:05:22.600
Ach ja, okay, das ist gut, dass das funktioniert.

01:05:22.600 --> 01:05:23.600
Was?

01:05:23.600 --> 01:05:24.600
Moment.

01:05:24.600 --> 01:05:25.600
War?

01:05:25.600 --> 01:05:36.600
Ah, nee, let, let, let, kackel, gleich, eins?

01:05:36.600 --> 01:05:37.600
Nee.

01:05:37.600 --> 01:05:49.600
Ah, das geht.

01:05:49.600 --> 01:05:58.600
Okay, Variablen geht einsetzen, aber irgendwelche beliebigen Ausdrücke einsetzen geht nicht.

01:05:58.600 --> 01:06:01.600
Okay, gut zu wissen.

01:06:01.600 --> 01:06:06.600
Wie funktioniert Standard Time Library?

01:06:06.600 --> 01:06:08.600
Time instant.

01:06:08.600 --> 01:06:09.600
Now?

01:06:09.600 --> 01:06:13.600
Okay, okay, gut, gut, gut, alles klar.

01:06:13.600 --> 01:06:14.600
Okay, prindeln.

01:06:14.600 --> 01:06:15.600
Now.

01:06:15.600 --> 01:06:16.600
Nee.

01:06:16.600 --> 01:06:17.600
Was?

01:06:17.600 --> 01:06:18.600
So?

01:06:18.600 --> 01:06:19.600
Hm.

01:06:19.600 --> 01:06:34.600
Okay, das kann man schon mal nicht ausprobieren.

01:06:34.600 --> 01:06:36.600
Okay, das kann man schon mal nicht ausgeben.

01:06:36.600 --> 01:06:41.600
What the fuck?

01:06:41.600 --> 01:06:44.600
FMT?

01:06:44.600 --> 01:06:54.600
Alter, ich hab keinen Plastischimmer, was hier geht.

01:06:54.600 --> 01:06:58.600
Wenn du das machen möchtest, kannst du auch Debug, was?

01:06:58.600 --> 01:06:59.600
Debug?

01:06:59.600 --> 01:07:00.600
Time?

01:07:00.600 --> 01:07:01.600
So?

01:07:01.600 --> 01:07:04.600
Warum gibt es denn da mehrere Sachen?

01:07:04.600 --> 01:07:05.600
Achja.

01:07:05.600 --> 01:07:15.600
Ach, das dumpt dann quasi so den ganzen Struct, oder wie?

01:07:15.600 --> 01:07:20.600
Instant TV?

01:07:20.600 --> 01:07:29.600
Das kann aber schon viel Zeug.

01:07:29.600 --> 01:07:32.600
Okay.

01:07:32.600 --> 01:07:34.600
Okay.

01:07:34.600 --> 01:07:41.600
Also ich will jetzt hier irgendwie Date-Time parsen drinnen.

01:07:41.600 --> 01:07:42.600
Times.

01:07:42.600 --> 01:07:45.600
Ah nee, Times.

01:07:45.600 --> 01:07:47.600
Masuchen hier.

01:07:47.600 --> 01:07:49.600
Time.

01:07:49.600 --> 01:07:51.600
Date?

01:07:51.600 --> 01:07:53.600
Rust?

01:07:53.600 --> 01:08:13.680
Ich weiß nicht nach was ich suchen soll.

01:08:13.680 --> 01:08:20.880
I want to accept standard time duration on commandline, jawoll, 5 heads, stack overflow,

01:08:20.880 --> 01:08:22.720
6 headers erklärt mir was ich machen muss.

01:08:22.720 --> 01:08:46.680
Boah ich finde das mega schwierig um solche Rust Sachen mein head around zu rappen.

01:08:46.680 --> 01:08:53.160
Das ist wohl nicht eingebaut, das ist wohl nicht eingebaut wenn ich das schon mal richtig

01:08:53.160 --> 01:08:54.160
sehe.

01:08:54.160 --> 01:08:58.840
Der Chat kann nicht, ich merke es, ich merke es, das ist wohl nicht eingebaut dass man

01:08:58.840 --> 01:08:59.840
Duration passt.

01:08:59.840 --> 01:09:05.200
Also ich hätte jetzt ja gedacht man kann wirklich sowas hier machen.

01:09:05.200 --> 01:09:09.240
Ja auf geh weg.

01:09:09.240 --> 01:09:13.080
Ja ich hätte wirklich gedacht, mein Gott was haben wir alles getippt.

01:09:13.080 --> 01:09:19.280
Ich hätte gedacht man kann sowas hier machen, Duration, so und dann BAM, aber das geht ja

01:09:19.280 --> 01:09:20.280
nicht.

01:09:20.280 --> 01:09:38.280
Time Duration, ja dann habe ich keinen Plan wie ich das an der Stelle richtig mache.

01:09:38.280 --> 01:09:42.800
Ich meine das ist nicht schlimm, ich kann es von Hand parsen aber schön ist das nicht.

01:09:42.800 --> 01:09:48.000
Ok wie würde ich das denn jetzt überhaupt von Hand parsen.

01:09:48.000 --> 01:09:54.960
Also ich habe einen String der 0015 enthält oder sagen wir mal 15 Sekunden oder sowas.

01:09:54.960 --> 01:10:04.240
Wie würde ich denn daraus eine Standard Time oder Time Duration machen?

01:10:04.240 --> 01:10:15.520
Also Let Time wie in das Doppelpunkt so, nee Let Mut muss man da glaube ich doch machen,

01:10:15.520 --> 01:10:16.520
das war Rust.

01:10:16.520 --> 01:10:29.720
Äh New, nein, boah Shit, ich habe so keinen Plan davon, Time Duration Rust Example.

01:10:29.720 --> 01:10:52.240
Duration, ach Duration New, aha Duration New und das sind jetzt 5 Sekunden und so kann

01:10:52.240 --> 01:11:05.960
man mehrere Sachen importen, Instant, Duration, Tommy danke für den Sub, so Duration New

01:11:05.960 --> 01:11:22.280
5 Sekunden und was geht das jetzt, Debug 5 Sekunden, Found Struct Duration, nice, alles

01:11:22.280 --> 01:11:30.440
klar, Print 5 Sekunden, das geht wahrscheinlich auch nicht weil es kein Display implementiert,

01:11:30.440 --> 01:11:48.280
ok, was muss ich machen, Punkt, ok 5 Sekunden, ok nice, ok das ist wirklich high IQ Printing

01:11:48.280 --> 01:11:58.600
hier, das sind 5 Sekunden und warum gibt der 5S aus, jetzt mal ganz durch, wenn er doch

01:11:58.600 --> 01:12:02.880
Format nicht implementiert hat, woher weiß der denn dann, dass er 5 seconds ausgeben

01:12:02.880 --> 01:12:15.520
muss oder 5S, was macht denn überhaupt Doppelpunkt Fragezeichen, ok gibt es sowas wie Duration

01:12:15.520 --> 01:12:41.660
Pass, Pass, nö, From, nee, Try From Sex, From, nee, Rust Duration Pass, ich sehe schon,

01:12:41.660 --> 01:12:47.280
das ist ziemlich fife hätte ich das zu machen, ok also hier, Moment das ist ein Crate, das

01:12:47.280 --> 01:13:01.960
ist ein Standardlip, Monkers, Alter Monkers, ich will doch kein Crate verwenden um ne Duration

01:13:01.960 --> 01:13:08.280
zu passen man, ich mein ich könnte das selbst machen, ich könnte das Splitten irgendwie,

01:13:08.280 --> 01:13:26.880
Rust, Rust, Rustation Way to Pass Daytime, what, jetzt ernsthaft, was ist das für ne

01:13:26.880 --> 01:13:41.600
Wall of Text, ok Chrono ist wahrscheinlich die Library schlechthin, so vermute ich mal

01:13:41.600 --> 01:13:54.200
weil das sehe ich total oft, ok, hat 2k Sterne das verwenden wir jetzt, ok also jetzt machen

01:13:54.200 --> 01:14:08.080
wir Crate, Cargo, Cargo, Add, nee was war das, Cargo, Add, ok Cargo, Add, Chrono und

01:14:08.080 --> 01:14:18.920
das hat auch verschiedene Clock, Lip C, Old Time, Standard Time, das hat er wahrscheinlich

01:14:18.920 --> 01:14:25.000
jetzt hier reingeschrieben oder, Chrono, ja, also sprich, ok dann lass ich, dann lassen

01:14:25.000 --> 01:14:32.240
wir das mal weg, dann sagen wir, was haben wir jetzt auch noch, Duration, wir importieren

01:14:32.240 --> 01:14:41.240
einfach alles, easy und das lassen wir weg, dann probieren wir das mal mit dem Value Parser

01:14:41.240 --> 01:14:53.680
nochmal aus, ob das dann funktioniert, Value Parser, Duration, wahrscheinlich funktioniert

01:14:53.680 --> 01:15:08.560
immer noch nicht funktionieren, ups, Run, nee, also das mit dem Value Parser funktioniert

01:15:08.560 --> 01:15:16.880
schon mal überhaupt nicht, ich sehe schon wir kriegen manchmal einfaches Argument gepasst

01:15:16.880 --> 01:15:26.240
in Rust heute Abend, ok also das mit dem Value Parser ist kein Ding, was der mag, das interessiert

01:15:26.240 --> 01:15:35.160
den schon mal nicht, ja, ja wir können nochmal, Clap, Pass, Chrono, Duration, Passing mit

01:15:35.160 --> 01:15:51.080
Chrono, ja Chat immer her damit, Copy Link Address, suchen wir einfach mal danach, Duration,

01:15:51.080 --> 01:16:09.000
Issues, ok, keine Ahnung, ok, Passing String into Date Time Struck, ja genau, sowas will

01:16:09.000 --> 01:16:21.920
ich machen, Main, Date Time Pass, naja Date Time, ich habe eher so eine Art, ich habe

01:16:21.920 --> 01:16:35.320
hier eine Duration, die API für mein Archive ist down, was, wirklich, Archive, oh, da macht

01:16:35.320 --> 01:16:45.040
der Serious Max gerade Updates, wie es aussieht, Downchamp, siehste, Postchamp Set Downtime

01:16:45.040 --> 01:17:02.480
nicht ausgeführt vorher, ok, also dann haben wir hier eine String, Duration, so wir wollen

01:17:02.480 --> 01:17:10.840
das Parsen, also sagen wir jetzt Duration, Pass, all das hat auch kein, wie kriege ich

01:17:10.840 --> 01:17:32.560
denn das da jetzt rein, From, ne, Try From Value, Into, was, Native Time, ich habe aber

01:17:32.560 --> 01:17:44.440
eine Duration, ich habe 15 Sekunden oder sowas, Native Time, Pass, ne, Moment, das ist aber

01:17:44.440 --> 01:17:57.000
nicht das was ich haben will, Rust, Chrono, Pass, Duration, jawoll, warum brauche ich

01:17:57.000 --> 01:18:14.960
da einen extra Krate für, kann doch nicht sein, ne, ja ich mein, ich kann den, Moment,

01:18:14.960 --> 01:18:37.960
was ist das, Five Head, Five Head Time, ok, Five Head Time, es ist kein Date Time, es

01:18:37.960 --> 01:18:52.960
ist eine Duration von 15 Sekunden, Native Date, From, From was, ach hier Months Date, ok nur

01:18:52.960 --> 01:19:02.120
dass ich das jetzt richtig, richtig, richtig checke, die legen hier ein Fake Date an und

01:19:02.120 --> 01:19:10.680
dann ziehen sie die voneinander ab, sodass ich eine Duration raus bekomme, ok, das ist

01:19:10.680 --> 01:19:25.320
eher C++ Workaround Shit, den ich hier sehe, also was die machen ist quasi, ja Moment,

01:19:25.320 --> 01:19:36.800
bringt mir doch gar nichts, das bringt mir doch gar nichts so, mein Gott ich will doch

01:19:36.800 --> 01:19:45.440
einfach nur eine Duration haben ohne dass ich selbst passen muss, ok machen wir was anderes,

01:19:45.440 --> 01:19:56.960
From HMS, From, da setzt er aber wahrscheinlich das heutige Datum davor dann, naja gut probieren

01:19:56.960 --> 01:20:01.720
wir es mal aus, From HMS, ja da muss ich aber selbst splitten alles, das will ich ja gar

01:20:01.720 --> 01:20:10.200
nicht, ich will dass er den String passen kann, aber das geht anscheinend nicht, boah

01:20:10.200 --> 01:20:22.080
das bereitet mir Kopfschmerzen, das bereitet mir Kopfschmerzen, warum, ich mein ich müsste

01:20:22.080 --> 01:20:33.600
jetzt wirklich sowas machen wie, nur mal vorwärts, Split, Split am Doppelpunkt und dann könnte

01:20:33.600 --> 01:20:40.320
ich das, aber das ist doch, ok Leute, wir machen die Suntags einfach anders, das ist

01:20:40.320 --> 01:20:44.960
nicht Duration, also diese Suntags ist ja eh nur weil standardmäßig dort net das so gepasst

01:20:44.960 --> 01:20:59.440
hat, Native Time Pass Forms 3, ah guck mal da, Native Time Pass Forms 3, Duration und

01:20:59.440 --> 01:21:04.600
dann das Format hinten dran und mein Format, naja gut mein Format ist ja nicht zwangsläufig

01:21:04.600 --> 01:21:26.560
so, ja mein Format, was, ach naiv Time nicht Native, hab ich verlesen, ja ok also mal gucken

01:21:26.560 --> 01:21:34.080
ob das jetzt funzt, Moment das muss weg, das hat ja noch nie funktioniert hier oben, aber

01:21:34.080 --> 01:21:38.440
ist schon ziemlich doof dass der Terminal Passing Library keine Duration passen kann

01:21:38.440 --> 01:21:45.000
standardmäßig, man weiß nicht, ok ok 15 Minuten, alles klar, das Funktion, das Dumme

01:21:45.000 --> 01:21:52.680
ist jetzt halt, sowas funktioniert nicht mehr, es muss dann halt exakt, oder kann man Optional

01:21:52.680 --> 01:22:04.080
passen, geht das, kann ich, kann ich irgendwie Optional, Optional oder irgendwas sagen, Trust,

01:22:04.080 --> 01:22:25.280
Optional, From, Passes a String, See, ne anscheinend nicht, ne du musst, du musst, du musst wirklich

01:22:25.280 --> 01:22:46.840
exakt angeben, also irgendwelche Optional Sachen gehen wahrscheinlich nicht, keine Ahnung,

01:22:46.840 --> 01:22:52.240
das ist, das ist wirklich schon hardcore umständlich alles, so also jetzt haben wir zumindest schon

01:22:52.240 --> 01:22:58.440
mal ein Argument gepasst, da muss man, muss man das halt so angeben, meinetwegen, naja,

01:22:58.440 --> 01:23:03.000
das H kann ich weglassen, aber es gibt halt die Möglichkeit, entweder gibt es einer so

01:23:03.000 --> 01:23:08.400
ein, oder, oder es gibt einer, keine Ahnung, was weiß ich, lässt, lässt die Sekunden weg

01:23:08.400 --> 01:23:19.880
oder so, oder schreibt nur 15 hin, naja gut, ich mein besser als nix, besser ist, ist ok,

01:23:19.880 --> 01:23:36.000
ist ok so, passt, also Duration haben wir jetzt am Start, ok, Let, Duration, so das gibt es

01:23:36.000 --> 01:23:41.200
zwar jetzt doppelt und dreifach, mein Duration haben wir ja schon, wie kriege ich denn das

01:23:41.200 --> 01:23:50.400
jetzt in der Variable zugewiesen überhaupt, also ich will, ich will ja im Endeffekt sowas

01:23:50.400 --> 01:24:04.840
machen, Let, Duration gleich, so, aber Duration gibt es ja an der Stelle gar nicht, also beziehungsweise

01:24:04.840 --> 01:24:15.320
das, ich mein, das werde ich wahrscheinlich so da nicht reinschreiben können, oder, ne,

01:24:15.320 --> 01:24:24.080
Unwrap, ok, das geht wahrscheinlich so, mein hübsch, hübsch ist was anderes, ja, aber

01:24:24.080 --> 01:24:33.680
ok, dann, was, was macht denn E-Printeln, ok, das ist nervig, wenn man das immer so

01:24:33.680 --> 01:24:38.840
schreiben muss, Duration, sollen wir mal gucken, ob das jetzt funktioniert, was ich da gemacht

01:24:38.840 --> 01:24:51.320
hab, ok, das würde funktionieren, alles klar, so, dann machen wir mal die Logik, dann machen

01:24:51.320 --> 01:24:58.320
wir mal die Logik von meinem.NET Programm, so der Reihe nach, also Duration und danach

01:24:58.320 --> 01:25:01.920
guck ich mir diese komische Derive-Syntax an, wenn das einfacher ist, ja, müssen wir

01:25:01.920 --> 01:25:08.600
mal anschauen, also, Duration, so, ich will jetzt gucken, ist Duration gesetzt, also,

01:25:08.600 --> 01:25:21.880
will ich tatsächlich dieses If hier machen, wenn ich das richtig sehe, If, Gott, ne, das

01:25:21.880 --> 01:25:26.880
ist optional, aber wenn ich das hier natürlich reinschreibe, ohne dass da was drinsteht,

01:25:26.880 --> 01:25:34.760
klar, dann wird's wahrscheinlich abkacken, ja, Moment, was, Moment, das soll optional

01:25:34.760 --> 01:25:49.640
sein, nicht required, required, false, konnte man hier reinschreibe, ah ja, ok, ok, na gut,

01:25:49.640 --> 01:25:54.080
jetzt panicked ja und unwrapped, das ist, das ist ja relativ klar, also, ich will jetzt

01:25:54.080 --> 01:26:01.400
quasi Duration setzen, wie mach ich das denn jetzt gescheit, ich mein, ich zeig's euch

01:26:01.400 --> 01:26:07.200
mal, wie ich's in.NET hab, ja, in.NET hab ich, Duration ist ein optional beziehungsweise

01:26:07.200 --> 01:26:15.280
annullable time span und wenn das nicht gesetzt wurde, will ich ein defaultwert setzen, also,

01:26:15.280 --> 01:26:20.280
ich will jetzt ein defaultwert setzen, also, if some duration, aber dann bräuchte ich

01:26:20.280 --> 01:26:28.640
quasi, irgendwie sowas hier oder so, Moment, wenn legt, gibt es Duration hier unten drunter

01:26:28.640 --> 01:26:45.160
wieder, ne, ne, Duration gibt es nur in dem If, so, und wenn ich, und wenn ich das mache

01:26:45.160 --> 01:27:01.560
und es ist nicht gesetzt, dann kackt er, kackt er dann auch ab, ne, was jetzt, Moment, Moment,

01:27:01.560 --> 01:27:09.320
ich kann jetzt noch sagen, Duration, oder mein ich, keine Ahnung, wie ich sagen, Duration

01:27:09.320 --> 01:27:20.800
String oder so, gut, das funktioniert und das ist jetzt ein optional type, so, es gibt

01:27:20.800 --> 01:27:26.400
doch jetzt irgendwie diese Rust-Magic, dass man jetzt irgendwie sagen kann, Match, boah,

01:27:26.400 --> 01:27:30.920
fuck, wie ging das nochmal, also, dass man quasi jetzt sagen kann, der Returnwert von

01:27:30.920 --> 01:27:42.360
dem Cremple, den ich da jetzt mache, kommt nach Duration rein, ober er bringt mir das,

01:27:42.360 --> 01:28:00.680
ja doch, Rust-Led, ja doch, doch, das weiß ich, das muss ich mir noch angucken, Match,

01:28:00.680 --> 01:28:12.840
boah, wie ging das denn nochmal, hier, das meine ich, Let Binary Match, ne, das meine

01:28:12.840 --> 01:28:23.000
ich nicht, oder meine ich das, Let Duration Match, oah, Alter, das ist richtig high IQ

01:28:23.000 --> 01:28:38.800
Shit, hier ist so, das da, so, ja ne, und jetzt, warum schlägt der, warum schlägt der

01:28:38.800 --> 01:28:50.240
mir jetzt hier naiv Time vor, das hat doch damit überhaupt nichts zu tun, das Autocomplete

01:28:50.240 --> 01:29:18.960
ist auch nicht so pfeifädig, Sam, Sam was, oder einfach nur Sam, ah, Sam, und dann, und

01:29:18.960 --> 01:29:26.800
dann, ok, ok, ok, ich glaube so ungefähr, ok, also, wenn da was drinne steht, dann will

01:29:26.800 --> 01:29:45.000
ich es parsen, also, naiv Time, also das da, warte mal, ah, Monka, ne, aber wo kriege

01:29:45.000 --> 01:29:55.400
ich jetzt den Parameter her, wo kriege ich denn her, was ich hier an der Stelle reinstecken

01:29:55.400 --> 01:30:19.880
will, kann ich Duration da und da verwenden, oder dass er meckert, ok, so, ok, naiv Time,

01:30:19.880 --> 01:30:31.400
und, ich will, ich will doch eigentlich gar keine, ich will ja keine Zeit, ich will eine

01:30:31.400 --> 01:30:36.200
Duration haben, kann man da irgendwie Duration draus machen, oder so, ok, wie kriege ich

01:30:36.200 --> 01:30:41.200
denn jetzt, ach du Scheiße, ok, wir probieren das mal, wir probieren das mal anders aus,

01:30:41.200 --> 01:30:45.080
so, now, gibt es doch bestimmt auch, nein, gibt es natürlich nicht, wäre ja auch zu

01:30:45.080 --> 01:30:57.160
einfach, was ist es denn, Current, ne, was ist es, ok, from, meinetwegen, from Stunden,

01:30:57.160 --> 01:31:03.280
Minuten, Sekunden, eh, from null, 15 Minuten, null Sekunden, ok, so, das ist mein Default,

01:31:03.280 --> 01:31:10.320
so, kann ich da jetzt einen Block machen, geht das, ja, das funktioniert, das ist glaube

01:31:10.320 --> 01:31:16.120
ich das gleiche, also ich glaube so und, und die Klammern weglassen ist das gleiche, weil

01:31:16.120 --> 01:31:21.280
der returnt doch die letzte Zeile, ne, sowas wie return gibt es doch glaube ich nicht,

01:31:21.280 --> 01:31:28.240
oder, ne, ich glaube, ich glaube man muss es in der letzten, in der letzten Zeile stehen

01:31:28.240 --> 01:31:34.640
lassen, dass es funktioniert, warte mal, gucken wir mal, ob das noch kompiliert, natürlich

01:31:34.640 --> 01:31:48.640
nicht, was, expected enum, ach so, ach so, Moment, weil er das parsen, das parsen fehl

01:31:48.640 --> 01:31:56.440
schlagen kann, jetzt funktioniert es, ok, gut, mal eine Noobfrage, sollte man da Iso

01:31:56.440 --> 01:32:06.560
oder Anzi Layout benutzen, was, das ist vollkommen egal, benutzt das Tastatur Layout, wo du am

01:32:06.560 --> 01:32:10.400
meisten dran gewöhnt bist, eisfreak, dankeschön für den Sub und danke auch für die ganzen

01:32:10.400 --> 01:32:13.800
Subscriptions, die ich jetzt, weil ich mich hier drauf konzentriert habe, nicht gesehen

01:32:13.800 --> 01:32:17.960
habe, Moment, ich guck mal kurz rein, benutzt das Tastatur Layout, also das halte ich für

01:32:17.960 --> 01:32:24.080
unsinnige Optimierung, du bist ja eh nicht zu 90% am tippen, sondern zu 90% am googeln

01:32:24.080 --> 01:32:45.960
und nachdenken, Tommy, danke für den Sub, Kanetos, wobei, nee, passt euch, hatte ich

01:32:45.960 --> 01:32:52.160
ja alle schon, alles gut, ich hab nix übersehen, so, also jetzt ist das zumindest schon mal

01:32:52.160 --> 01:32:57.720
halbwegs sinnvoll, was hier rauskommt, das spricht, das muss ich mir unbedingt als Makro

01:32:57.720 --> 01:33:05.800
machen, für was steht dann dieses Doppelpunkt, Doppelpunkt Fragezeichen da überhaupt, so,

01:33:05.800 --> 01:33:11.240
also das funzt, jetzt kann ich ihm sagen, the run, 15, 15 Minuten, ok, das heißt, wenn

01:33:11.240 --> 01:33:19.360
ich nichts angebe, sind's 15 Minuten, wenn ich eine Duration angebe, 00, 00, 30, 00,

01:33:19.360 --> 01:33:28.760
dann sind's 30 Minuten, das passt, Format String, das wäre dann quasi, wie wenn ich

01:33:28.760 --> 01:33:40.240
hier FMT mache, oder wie, also wäre quasi, das hier, das gleiche, nee, Kackel, nee,

01:33:40.240 --> 01:33:50.160
dann hab ich keine Ahnung, was der Unterschied ist, Moment, ich könnte, ich könnte sowas

01:33:50.160 --> 01:33:58.120
hier machen auch, oder wie, ok, Rust ist schon ziemlich high IQ, das muss man wirklich mal,

01:33:58.120 --> 01:34:05.040
muss man wirklich sagen, ok, ich hab's, ich hab's jetzt, nach einer Stunde geschafft

01:34:05.040 --> 01:34:13.360
tatsächlich, eine, ein Date Time zu parsen, nicht schlecht, oder, ziemlich pock, also,

01:34:13.360 --> 01:34:19.680
so, das Problem ist ja, ich will ja eigentlich gar keine, ich will ja eine Duration haben,

01:34:19.680 --> 01:34:27.720
und keine Date Time, also das bedeutet, ich muss, ok, Duration ist einfach, das krieg

01:34:27.720 --> 01:34:34.640
ich hin, Duration from Stunde, Stunde links, ok, das passt, jetzt passt natürlich unten,

01:34:34.640 --> 01:34:53.720
hier oben drüber, das passt, Form String, nicht mehr, könnte ich da jetzt sowas machen,

01:34:53.720 --> 01:35:09.880
be, let, time, Duration, new, oder from, wie ist das, from HMS, Moment, from HMS gibt's

01:35:09.880 --> 01:35:39.280
da für Duration gar nicht, from, hä, new, äh, statt, ach, Moment, ich hab da das Simikolon

01:35:39.280 --> 01:35:51.000
vergessen, deswegen mag der glaube ich nicht, oh, meine Güte, Alter, ist das komplizierend,

01:35:51.000 --> 01:36:11.440
Bono, Duration, ich will, also eigentlich hab ich jetzt sowas vorgehabt, guck mal,

01:36:11.440 --> 01:36:22.080
minute, ja, time, second, sowas hatte ich jetzt eigentlich vor, was aber wahrscheinlich

01:36:22.080 --> 01:36:30.120
nicht funktionieren wird, nein, natürlich nicht, weil, not found, kann man new machen,

01:36:30.120 --> 01:36:36.720
äh, Alter, wie lege ich denn so eine fucking Duration an, man so kompliziert kann das

01:36:36.720 --> 01:36:43.480
doch nicht sein, Duration, was gibt's denn da, days, from, Duration von einer anderen

01:36:43.480 --> 01:37:02.600
Duration, ja super, das bringt's mir jetzt auch richtig, Vector, from, jetzt mal ernsthaft,

01:37:02.600 --> 01:37:11.480
man muss doch irgendwie eine Duration anlegen können, ja, das ist besser als C++, das ist,

01:37:11.480 --> 01:37:21.640
das hat gewisse Konsistenz im Vergleich zu C++, das mach ich doch hier, aber es gibt

01:37:21.640 --> 01:37:29.280
keine new Methode dafür, dass ich das überhaupt machen kann, wie sind wir bei C++ gelandet

01:37:29.280 --> 01:37:51.440
auf einmal, piss dich, Aldo, Rust, Rust, Chrono, Chrono, Chrono, Rust, Duration, ok, also

01:37:51.440 --> 01:38:02.080
ich hab wirklich keine Ahnung, wie legt man das denn, ja genau, wie legt man das denn an,

01:38:02.080 --> 01:38:14.960
ach Moment, days, also muss ich jetzt quasi sowas hier machen, hours und dann, what the

01:38:14.960 --> 01:38:24.920
fuck, also ok, ok, muss ich jetzt wirklich sowas da machen, net, Duration, gleich, nee,

01:38:24.920 --> 01:38:33.840
Moment das funktioniert doch gar nicht, pack, alter wie kompliziert möchtest du eine Zeitlibrary

01:38:33.840 --> 01:39:01.160
machen man, hours, time, hours, alter man, wo ist denn dein Problem, ok, seh ich das

01:39:01.160 --> 01:39:10.400
richtig, time von naivtime, Moment, die Stunden von naivtime sind ein anderer Datentyp als

01:39:10.400 --> 01:39:19.640
die hours von duration, ja gut, ist ja logisch, ist ja logisch, die hours von daytime können

01:39:19.640 --> 01:39:30.920
ja maximal 24 sein im Endeffekt und von duration kann ja beliebig viel sein, was war ich denn

01:39:30.920 --> 01:39:43.960
da, se64, se64, ach tatsächlich, ok, so und jetzt kann ich sagen, duration, minutes, falls

01:39:43.960 --> 01:40:02.160
ich das darf, so an der Stelle, ach Moment, seconds geht auch, jetzt mal ernsthaft, warum

01:40:02.160 --> 01:40:12.640
hat das Ding nicht einen ordentlichen new oder constructor, dass ich das angeben kann, das

01:40:12.640 --> 01:40:21.800
ist nicht ziemlich cringe, so duration pass gab es ja auch nicht, hast du schon mal was

01:40:21.800 --> 01:40:47.760
jeet benutzt, nee, was, alter das kann doch nicht euer ernst sein oder, ich mein man muss

01:40:47.760 --> 01:40:52.720
doch eine duration von 15 minuten da irgendwie sinnvoll anlegen können, ohne sich irgendwie

01:40:52.720 --> 01:41:11.280
ein bein auszureißen bei, nee also das ist wirklich nicht so, guckt mal, die standard

01:41:11.280 --> 01:41:23.160
library rust hat new, warum hat jetzt das chrono ding rust kein new, muss ich dafür

01:41:23.160 --> 01:41:42.240
irgendeinen feature aktivieren, ok, cargo add, clock lib, ich steh komplett auf dem schlauch,

01:41:42.240 --> 01:42:11.240
ich kann auch einfach hier nur dings verwenden und dann use standard time duration oder so,

01:42:11.240 --> 01:42:22.920
da sag ich jetzt nix zu chat, keckel, wobei jetzt geht es lustigerweise, weil jetzt verwende

01:42:22.920 --> 01:42:30.320
ich ja die standard time duration, also jetzt kann ich nämlich sagen, duration new, tatsächlich

01:42:30.320 --> 01:42:47.320
jetzt funktioniert das nämlich, jetzt kann ich sagen, time, hour, was nanos, nee, alter

01:42:47.320 --> 01:42:56.440
gibt es da nicht mehr, warum krieg ich da keinen sinnvollen vorschlag, es gibt doch

01:42:56.440 --> 01:43:21.080
mehr als ein new, nanos, was, moment, es geht nur mit sekunden, also wie abfacken willst

01:43:21.080 --> 01:43:27.800
du eigentlich deine library benutzer, was ist denn das, das kann doch nicht sein, warum

01:43:27.800 --> 01:43:34.120
kann ich bei einer duration nicht einfach sagen, 15 minuten, ich will doch nicht selber 15

01:43:34.120 --> 01:43:42.920
minuten ausrechnen müssen, in sekunden, was ist das, wer hat sich das ausgedacht, was

01:43:42.920 --> 01:43:53.800
ist das, so, wir probieren das jetzt nochmal anders, also, wir machen das jetzt so, duration,

01:43:53.800 --> 01:44:02.000
ich meine ich kann den kram selbst ausrechnen, seconds oder from, nee wie war das, from,

01:44:02.000 --> 01:44:14.880
nee, seconds, ja, das gibt es ja nicht from seconds in der chrono duration, warum auch

01:44:14.880 --> 01:44:23.120
immer es da nicht gibt, aber es in der standard duration anscheinend doch, kein plan, so ich

01:44:23.120 --> 01:44:28.280
meine wir können das hier mit seconds machen, das funktioniert ja, also wir können quasi

01:44:28.280 --> 01:44:37.720
sagen time, minutes, mal 60, so, dann haben wir es in sekunden, für die minuten, aber

01:44:37.720 --> 01:44:48.880
das ist doch abfack, alter, das kannst du doch keinem erzählen, kann ich es nicht vielleicht

01:44:48.880 --> 01:45:06.920
doch so machen, dass ich sage, ok, dass ich sage hours, hours, was ist e64, so, duration,

01:45:06.920 --> 01:45:26.360
nee, ich muss das selbst ausrechnen, ich muss das wirklich, ich muss das wirklich selbst

01:45:26.360 --> 01:45:36.840
ausrechnen, sehe ich das richtig, also ich muss wirklich sagen, hours, nee, ja, also

01:45:36.840 --> 01:45:42.640
ich muss jetzt wirklich, gibt es nicht so was wie duration, ok, das kann man mal ausprobieren,

01:45:42.640 --> 01:46:05.680
hours, duration, and, ok, das geht, rhs, alles klar, rhs, obvious, was rhs bedeutet,

01:46:05.680 --> 01:46:25.560
das weiß doch jeder, logisch, rhs, obvious, was da rein muss, oder, and, ein chrono, warte,

01:46:25.560 --> 01:46:47.360
ich finde den scheiß auch nicht mehr, chrono, duration, add, wo stehts denn hier, da, oder,

01:46:47.360 --> 01:47:05.480
duration, hier, so, add, add, nee, hier, add, check, check, hä, da steht von add überhaupt

01:47:05.480 --> 01:47:27.600
nix, add two durations, nein, ich will Sekunden adden, also ich verstehe es nicht, wie das

01:47:27.600 --> 01:47:32.280
so kompliziert gemacht werden kann, das ist mir wirklich unbekannt, also entweder verstehe

01:47:32.280 --> 01:47:38.800
ich was Kunst, was hier durchaus sein kann, nicht, oder es ist wirklich richtig dämlich

01:47:38.800 --> 01:47:50.480
gemacht, mein, warum, ich mein, was ich jetzt machen muss ist, ich muss sagen, hours, mal

01:47:50.480 --> 01:48:09.000
60, mal 60, so, plus, plus, time, minutes, mal 60, plus, time, seconds, das kann doch

01:48:09.000 --> 01:48:38.720
nicht euer ernst sein, ok, was intu soll ich machen, intu, what, klammern, intu, gibt

01:48:38.720 --> 01:49:08.640
es gar nicht, äh, moment, new, minutes, minutes, 15, es gibt kein duration from 6,

01:49:08.640 --> 01:49:14.080
chat, mensch, erzähl mir doch nicht alles, was ich schon seit 50 Minuten ausprobiere,

01:49:14.080 --> 01:49:26.260
es gibt das nicht in dieser library, du kannst dort nichts anlegen, das existiert nicht,

01:49:26.260 --> 01:49:32.000
das ist nicht das standard library duration, weil das standard library duration zwar funktioniert,

01:49:32.000 --> 01:49:42.720
aber standard library daytime sucked, mensch, also, immer der gleiche scheiß, alter, also

01:49:42.720 --> 01:49:50.600
ich hab echt keinen Bock mehr, das ist mega kompliziert, das kann doch nicht sein, jetzt

01:49:50.600 --> 01:49:59.680
mal ernsthaft, ich will, ich will ihm sagen, leg ein duration objekt an mit 15 Minuten

01:49:59.680 --> 01:50:05.840
und was weiß ich wie viele Sekunden, es kann doch nicht sein, dass das so abfuck kompliziert

01:50:05.840 --> 01:50:15.160
ist, oder, also das wäre in go deutlich einfacher, nicht dass ich der große go fan bin, aber

01:50:15.160 --> 01:50:25.280
ich mein ich kann den kram noch mal klammern oder so, falls das, falls das irgendwas bringt,

01:50:25.280 --> 01:50:29.480
es ist auch schon mal geil, dass er mir überhaupt keine Fehlermeldung anzeigt hier in der ide,

01:50:29.480 --> 01:50:44.880
aber es geht da nicht, vielleicht duration minutes, oh chat, five hat time, wie gesagt,

01:50:44.880 --> 01:50:52.480
ich lass mir die option offen, dass ich keine ahnung habe von was ich, was ich mache, vielleicht

01:50:52.480 --> 01:51:16.880
geht es auch so, also let duration gleich sechs, fünf, ne, ne ne leute das geht so nicht, also

01:51:16.880 --> 01:51:25.880
okay, ah chat, das ist ne gute ide, das ist ne gute ide, das, das müsste wahrscheinlich

01:51:25.880 --> 01:51:37.000
dann sogar funktionieren, auch wenn es unglaublich kompliziert ist, aber okay, so duration, add

01:51:37.000 --> 01:52:06.360
duration, minutes, time minutes, add seconds, time seconds, was ist das Problem, so, so

01:52:06.360 --> 01:52:18.240
und jetzt return wird, ne Moment, Moment, Sekunde, ist das falsch, Moment, let duration,

01:52:18.240 --> 01:52:26.640
ich muss das erstmal speichern, so, kompiliert der Krampel denn jetzt überhaupt, nein natürlich

01:52:26.640 --> 01:52:56.080
nicht, so, geht auch mit plus, ah, du meinst quasi so,

01:52:56.080 --> 01:53:11.600
so, so, man sieht jetzt nicht hübsch aus, aber okay, so und return wird, hey, es kompiliert

01:53:11.600 --> 01:53:35.080
Leute, aber es ist nicht gesetzt, es sind null, add must be used, ah, ah, okay, ne, was hat

01:53:35.080 --> 01:53:46.920
ein add für ein return value, muss ich das mutable machen oder, wobei ne, ich kann es

01:53:46.920 --> 01:54:08.440
ja einfach so, einfach so returnen wahrscheinlich, ne, das hier funktioniert, okay chat, zeig

01:54:08.440 --> 01:54:17.640
mal her, was postet, was postet, was, midnight, from num seconds, from midnight, ne, das mach

01:54:17.640 --> 01:54:28.480
ich doch, time signed duration, ja das bringt mir doch nix, was soll ich damit jetzt anfangen,

01:54:28.480 --> 01:54:39.600
ach so, ne doch, Moment, natürlich bringt mir das was, Moment, signed duration since

01:54:39.600 --> 01:54:49.400
midnight, okay, ich verstehe die Intention dahinter, aber warum ein workaround um eine

01:54:49.400 --> 01:55:03.200
duration anzulegen mit 15 minuten, ach, das semicolon muss weg, okay, ah, ja, okay, gut

01:55:03.200 --> 01:55:12.360
zu wissen, okay, es funktioniert was ich gemacht hab, also 15 minuten, 30 minuten, okay, funktioniert,

01:55:12.360 --> 01:55:19.560
aber also der workaround für eine duration zu bekommen von einem string in dem eine duration

01:55:19.560 --> 01:55:38.520
steht ist schon ziemlich, naja, ich weiß nicht, aber es funktioniert, okay, man kann 2 zeiten

01:55:38.520 --> 01:55:43.640
voneinander abziehen, ja klar, gleich, ja klar kann man das machen, aber ich will eine duration

01:55:43.640 --> 01:55:49.400
haben, so, also das haben wir jetzt ja, passt ja, also wir haben es jetzt nach 2 stunden

01:55:49.400 --> 01:55:54.440
oder so geschafft oder eineinhalb stunden tatsächlich geschafft eine zeile.net code

01:55:54.440 --> 01:56:02.920
zu übersetzen, nämlich das hier, seriously, das ist genau diese eine zeile, mehr ist es

01:56:02.920 --> 01:56:20.920
nicht, das hier ist die eine zeile, also das hier, das hier ist das, mehr ist es nicht,

01:56:20.920 --> 01:56:33.280
es ist ein bisschen übertrieben, also, effizient, schnell ist es mit sicherheit und es ist wahrscheinlich

01:56:33.280 --> 01:56:43.280
am ende, moment, wie geht das, ich kompiliere das mal kurz, hier, rust, build, target, blablabla,

01:56:43.280 --> 01:56:47.800
release, pass mal auf, das ist natürlich viel kleiner und natürlich viel schneller als

01:56:47.800 --> 01:57:10.800
mein.net programm, gehe ich mal von aus, ja, target, target, release, nee, da, release,

01:57:10.800 --> 01:57:38.000
build, wo legt denn mein binary jetzt, nee, moment, target, release, build, wtf, wo legt

01:57:38.000 --> 01:57:55.280
denn mein binary, ach, gibt es nur ein ordner, der release heißt, nee, target, release, wo

01:57:55.280 --> 01:58:07.760
ist mein binary, hat das kompilieren nicht geklappt, nee, ich hab doch release gebildet,

01:58:07.760 --> 01:58:29.360
release, ja, wo ist es denn, oder doch da, release, da ist es, da ist es, 4,5mb, ok,

01:58:29.360 --> 01:58:33.520
das ist halt einfach 10 mal so klein wie das, ok, das.net programm hat aber auch noch

01:58:33.520 --> 01:58:47.160
ein bisschen mehr Sachen, ja, also, ja, minus, minus help, minus duration, 00, 30, 00, funktioniert,

01:58:47.160 --> 01:58:53.960
alles klar, kannst auch das hier nehmen zum passen, wie widersprebt das sich überhaupt,

01:58:53.960 --> 01:59:05.320
ich will hier einen create brauchen, um duration zu passen und vor allem will ich keine crates

01:59:05.320 --> 01:59:14.960
haben mit 5 github sterne und die keiner mehr maintain nach 2 wochen, statisch gelingte

01:59:14.960 --> 01:59:23.480
lip ist recht groß, ja aber dafür brauchst du auf dem server nix, ok, aber in ordnung,

01:59:23.480 --> 01:59:30.600
ordnung alles klar ist ok ist ok also die erste zeile wir haben jetzt ok erste zeile haben wir

01:59:30.600 --> 01:59:40.440
übersetzt passt so jetzt könnt ihr euch aussuchen wollen wir die nächste zeile auch noch übersetzen

01:59:40.440 --> 01:59:49.800
oder wollen wir uns anstatt diesen komischen bilder syntax mal diese derived syntax angucken

01:59:49.800 --> 02:00:06.400
klep hier derived syntax ok also cli cli pass

02:00:06.400 --> 02:00:18.360
nächste zeile haben wir dann gleich

02:00:18.360 --> 02:00:29.160
ah ok ich glaube ich habe es verstanden das hier ist dann quasi so die globalen

02:00:29.160 --> 02:00:32.640
argumente und hier könnte ich beispielsweise wenn ich wirklich einzelne commands hätte wie

02:00:32.640 --> 02:00:39.200
list und sonst was also sprich mache ich dann so was hier nur dass nur gucken ob das richtig

02:00:39.200 --> 02:00:45.280
checken also strack cli das ist quasi die globalen die globalen sachen so da habe ich

02:00:45.280 --> 02:00:54.480
ja aktuell genau gucken dass ich das optional name ja das ist doch das ist doch schon mal viel

02:00:54.480 --> 02:01:00.600
besser also dann würde ich quasi sagen moment value parser nee value parser hat ja nicht

02:01:00.600 --> 02:01:07.760
funktioniert value parser ist ja abfuck das das das ging ja nicht ja mach mal kurz ich

02:01:07.760 --> 02:01:15.240
mach mal kurz diesen krempel hier weg also subcommand brauche ich nicht turn debug information on

02:01:15.240 --> 02:01:25.520
ich brauche im prinzip eine sache die sich nennt duration und die ist vielleicht geht

02:01:25.520 --> 02:01:34.880
jetzt ja in dem fall keine ahnung time duration aber das wird die gleiche fehler meldung geben

02:01:34.880 --> 02:01:43.240
wie das letzte mal auch und dann sage ich let cli pass und dann crash da dann crash da beim starten

02:01:43.240 --> 02:02:10.840
beim weil was ok

02:02:10.840 --> 02:02:36.440
also sprich lasse ich das hier an der stelle weg wie war das mit dem string mit dem string

02:02:36.440 --> 02:02:57.800
passen einfach einfach so dann check that moment if you try to supply minutes ach so ich muss

02:02:57.800 --> 02:03:12.280
ihm ja sagen wie der kram heißen soll short ach so aha ok short long aber wie kann ich

02:03:12.280 --> 02:03:19.160
ihm sagen wie short heißen value parser wollen wir nix wir wollen ja nichts value parsen

02:03:19.160 --> 02:03:30.920
value name duration ja kokt jetzt funktioniert es und wenn ich jetzt help angebe dann sagt

02:03:30.920 --> 02:03:35.200
er mir duration short nimmt er wahrscheinlich standardmäßig den ersten burschtarm wenn

02:03:35.200 --> 02:03:44.840
man aber könnte ich auch sowas machen keck nö na gut in dem fall ist in ordnung weil

02:03:44.840 --> 02:03:58.640
ich will es ja wirklich wirklich so lassen so das heißt dann im endeffekt auch dass

02:03:58.640 --> 02:04:04.880
ich den ganzen restlichen krempel weglassen kann und wie passt man das jetzt im prinzip

02:04:04.880 --> 02:04:18.960
genauso muss single quote sein also quasi short gleich d oder gleich k achja das ist

02:04:18.960 --> 02:04:27.880
gut zu wissen ich lasse es mal so dass ich dran denke das nächste mal also dann können

02:04:27.880 --> 02:04:32.480
wir uns das jetzt gerade mal sparen aber das hier brauchen wir nach wie vor weil der pass

02:04:32.480 --> 02:04:41.240
ist da oben ja nur als string was relativ blöd ist weil ich würde schon gern das in

02:04:41.240 --> 02:04:46.600
daytime parsen auslagern dass da direkt eine fehlermeldung generiert so nach dem motto

02:04:46.600 --> 02:04:58.560
ja ist not valid duration oder so so und wie machen die das jetzt hier cli name s ok also

02:04:58.560 --> 02:05:14.080
im prinzip brauche ich jetzt nicht das sondern duration so was bräuchte ich jetzt ran 15

02:05:14.080 --> 02:05:28.480
genau minus duration 00 45 minuten 45 minuten sind 2700 sekunden ok ok ja ok leute ich

02:05:28.480 --> 02:05:35.360
muss zugeben das ist tatsächlich wobei das hier geht doch das hier geht doch eigentlich

02:05:35.360 --> 02:06:00.000
auch klar was er baut baut gibt es auch baut gibt es nicht tatsächlich ne version

02:06:05.960 --> 02:06:20.280
keine ahnung was das da oben mir dann sagen soll aber auch keine baut version ist ok

02:06:20.280 --> 02:06:25.200
was was findet ihr die schönere syntax die variante ich meine wir brauchen noch die

02:06:25.200 --> 02:06:29.960
anderen argumenten ja also wir haben ja die vari also die hier unten die variante hier

02:06:29.960 --> 02:06:35.640
unten oder die cli variante die diese derived parser variante also ich muss sagen ich könnte

02:06:35.640 --> 02:06:39.560
mir vorstellen wenn es ein bisschen länger wird ist das hier die übersichtlichere variante

02:06:39.560 --> 02:06:47.360
die variante ja die würde ich wahrscheinlich auch bevorzugen in tatsächlich in dem fall

02:06:47.360 --> 02:06:54.160
so also sprich im prinzip würde das dann so aussehen nicht duration wir brauchen noch

02:06:54.160 --> 02:07:08.960
so was wie clear hier dann brauchen wir noch so was wie list list das ist ein buhl ob der

02:07:08.960 --> 02:07:20.760
buhls parsen kann buhls das sollte hoffentlich funktionieren value name es gibt kein ah nee

02:07:20.760 --> 02:07:26.800
moment value name ist dann wie ich da unten drauf zu nee die welt das ist das hier so

02:07:26.800 --> 02:07:33.040
wollen wir help list ist ein buhl ist ja ich weiß nicht ob das so convention ist das so

02:07:33.040 --> 02:07:38.880
einzugeben aber ich denke mal damit damit kann man erst mal leben also clear list durations start

02:07:38.880 --> 02:08:04.520
start brauchen wir noch start heim date time oder so ja das ist gut checkt er das denn jetzt auch

02:08:04.520 --> 02:08:14.960
dass das dass das ist ein buhl ist oder muss ich dann irgendwie value parser oder so zeug

02:08:14.960 --> 02:08:27.600
erzählen ach so moment start also checkt er jetzt auch das option im buhl ist ohne dass

02:08:27.600 --> 02:08:36.040
ich da irgendwas mit value parser und gedöns mache requires a value nee das ist ja blödsinn

02:08:36.040 --> 02:08:44.160
es braucht kein mehr das ist long was macht long an der stelle ja man weiß es nicht es

02:08:44.160 --> 02:08:52.280
ist steht steht halt da ach so das ist da könnte ich angeben wie die lange lange schreibweise

02:08:52.280 --> 02:09:00.680
davon ist ok nee wir brauchen kein value brauchen kein list list requires a value

02:09:00.680 --> 02:09:18.680
warum required list jetzt eine value gibt so was wie optional oder so was

02:09:18.680 --> 02:09:27.560
es gibt keinen sinn dass der in value

02:09:27.560 --> 02:09:50.320
possible values true fault ja moment ich wieder soll ein flag sein ein flag ist gesetzt automatisch

02:09:50.320 --> 02:10:09.640
und wenn der checkt ist doch hier oben auch ob es gesetzt ist oder nicht ach so ach ok

02:10:09.640 --> 02:10:17.000
ich glaube ich habe es verstanden der stört sich daran dass ich es angebe aber nicht dann

02:10:17.000 --> 02:10:23.160
quasi true dahinter schreibt oder so true 0w mal ganz davon abgesehen das ist ziemlich

02:10:23.160 --> 02:10:32.040
wie würde ich es überhaupt angeben ok ja das ist natürlich bescheuert wie macht man

02:10:32.040 --> 02:10:53.720
hier options drinne also flex wie macht man flex debug einfach nur was ist wenn ich option

02:10:53.720 --> 02:11:02.560
dann weglasse ich meine ich hätte gedacht dadurch wird es quasi auch optional moment

02:11:02.560 --> 02:11:08.600
nur durch das jetzt mal ach nee ok wenn ich es option nenne dann muss ich was angeben

02:11:08.600 --> 02:11:18.840
das heißt wenn ich das jetzt weglasse dann geht's wo ist der sinn von option wo ist

02:11:18.840 --> 02:11:23.960
der wo ist das sinn von option jetzt mal ganz ganz blöd gefragt ich meine es ist nicht

02:11:23.960 --> 02:11:35.600
required dass ich minus l angebe

02:11:35.600 --> 02:11:48.640
wahrscheinlich nur weil es ein bool ist oder ok duration noch mal kurz checken was ist

02:11:48.640 --> 02:12:01.480
wenn ich von duration die option weglasse was passiert dann ok das muss das muss irgendwas

02:12:01.480 --> 02:12:05.760
mit mit zu tun haben als bool ist oder nicht weil es seinen flag ist also für bool ist

02:12:05.760 --> 02:12:14.400
anscheinend ok das wegzulassen also ein bisschen konsistent scheint es mir schon zu sein long

02:12:14.400 --> 02:12:24.520
action für was ist action

02:12:24.520 --> 02:12:31.520
was ist action ah flex flex kann auch also be switched

02:12:31.520 --> 02:12:45.880
also be switched that can be on off switches that can be on off this is aha aber es funktioniert

02:12:45.880 --> 02:13:08.560
doch auch so ok value parser brauche ich anscheinend oder minus l ach so ja so nice steht da sogar

02:13:08.560 --> 02:13:14.600
da muss man vielleicht mal fertig lesen ja gut dann kann man das ja im prinzip so lassen

02:13:14.600 --> 02:13:30.880
so also das heißt jetzt wenn ich das jetzt mal ausgebe nicht nur nicht nur duration sondern

02:13:30.880 --> 02:13:47.760
ich gebe jetzt mal aus hier CLI CLI list so das sollte es angeben true nö ach ok das

02:13:47.760 --> 02:14:02.360
braucht man dann nicht einfach nur so true ok wenn ich es weglasse ist es als ja das

02:14:02.360 --> 02:14:09.840
ist ok das ist ja im prinzip genauso wie hier list und clear genau ja es ist richtig

02:14:09.840 --> 02:14:19.280
so so mit minus mit mit clear wird es wahrscheinlich genauso funktionieren denke ich mal zeigt

02:14:19.280 --> 02:14:29.960
mal her wenn man nix minus c minus l ja ok gut dann ist es tatsächlich so wie gut das

02:14:29.960 --> 02:14:36.240
heißt zumindest bei bool muss man keine großen verrenkungen machen das funktioniert einfach

02:14:36.240 --> 02:14:40.000
das heißt wir können tatsächlich mal eine sache machen die wir auch hier oben schon

02:14:40.000 --> 02:14:45.440
haben im dotnet code also das ist ganze wait und geduldens das können wir uns natürlich

02:14:45.440 --> 02:14:55.080
sparen wir wollen gucken wenn list gesetzt ist also wenn list gesetzt ist dann führen

02:14:55.080 --> 02:14:59.880
wir was aus und wenn clear gesetzt ist dann führen wir auch irgendwas spezielles aus

02:14:59.880 --> 02:15:26.880
ach braucht man keine klammern ok return ok return ist so ok gut return eins alles klar

02:15:26.880 --> 02:15:33.400
gut also da hätten wir das auch schon mal dann machen wir doch mal weiter wir haben

02:15:33.400 --> 02:15:36.840
es jetzt wir haben es bis jetzt ja nur geschafft die erste die erste zeile da irgendwie sind

02:15:36.840 --> 02:15:43.000
sinnvoll zu übersetzen ok also so weit so gut ja das ist egal das bleibt ja nicht so das

02:15:43.000 --> 02:15:49.040
ist einfach nur dass irgendwas passiert ok dann machen wir mal die eigentliche die eigentliche

02:15:49.040 --> 02:15:58.000
logik regex und tickets sachen lasse ich jetzt mal bleiben wir brauchen noch einen string

02:15:58.000 --> 02:16:21.320
der sich nennt er reason genau so den müssen wir auch setzen also sprich

02:16:21.320 --> 02:16:26.320
ne da müssen ja doch doch also den müssen den müssen wir auch setzen ok gehen wir einfach

02:16:26.320 --> 02:16:31.480
mal gehen wir einfach mal der reihe nach vor duration haben wir gesetzt start time start

02:16:31.480 --> 02:16:45.880
time müssen wir noch setzen also sprich wir gucken jetzt ist das überhaupt gesetzt also

02:16:45.880 --> 02:16:50.600
muss ich wieder wie würde man das kann man das in rust irgendwie anderweitig sinnvoll

02:16:50.600 --> 02:17:05.160
machen also ich würde ich würde im prinzip gerne gerne sowas hier machen if hier cli warum

02:17:05.160 --> 02:17:13.200
hatten das kein auto complete dachte das ist in rust alles statisch und sonst wie wahrscheinlich

02:17:13.200 --> 02:17:17.480
weil es von irgendeinem makro kommt vermute ich mal oder oder was meint ihr wahrscheinlich

02:17:17.480 --> 02:17:26.960
weil das irgendwie makro generated kram ist ich erwarte dass ich da cli punkt mache und

02:17:26.960 --> 02:17:32.120
dann stehen die die variablen drin hiervon man ist ja in sucht jetzt müsste er ja eigentlich

02:17:32.120 --> 02:17:42.400
kennen oh es ist unknown aber dafür für das dass es andere ist funktioniert erstaunlich

02:17:42.400 --> 02:17:53.800
gut also was ich eigentlich machen will ich will gucken ist ist start gesetzt also quasi

02:17:53.800 --> 02:18:10.640
ist sam sam cli start sowas will ich machen ja so print haben wir hier keckel also sprich

02:18:10.640 --> 02:18:16.720
wenn ich wenn ich start gesetzt habe o mann wo ist jetzt schon wieder das problem was

02:18:16.720 --> 02:18:46.240
ach so ich ich ich retorne nix nee ich muss doch gar nichts retorne was was

02:18:46.240 --> 02:18:58.120
andere nee ich will doch checken ob es ich will checken ob das gesetzt ist

02:18:58.120 --> 02:19:16.240
da kommt jetzt ruder falls raus oder was stört ihn überhaupt jetzt gerade an meinem return type von

02:19:16.240 --> 02:19:28.480
mann kann only return type set implement termination ok wirst du was dann dann halt dann halt kein return type

02:19:28.480 --> 02:19:52.480
warum warum geht das warum geht das nicht rast if sam ja erklär zeig her

02:19:52.480 --> 02:20:16.760
und da jetzt cli start nee ach nee das ist die variable für für innen drinne also so im endeffekt

02:20:16.760 --> 02:20:37.920
so start requires a value but it's not supplied ok das passt keine ahnung 12 12 1212 ganz toll ok

02:20:37.920 --> 02:20:43.360
dass das das passt matched so also was ich jetzt machen will ich will ich will in default value

02:20:43.360 --> 02:20:49.600
setzen also quasi das da was ich da oben gemacht habe aber geht das geht das nicht einfacher kann

02:20:49.600 --> 02:20:55.960
ich nee kann ich nicht also was ich jetzt was ich gerne machen würde ja wäre quasi das hier

02:20:55.960 --> 02:21:16.520
moment nee if if moment ich will ich will ich will checken if nan if nan start sie

02:21:16.520 --> 02:21:27.440
er ist hier ein start alter oder muss ich muss ich muss ich da auch so machen

02:21:27.440 --> 02:21:43.280
so also was ich gerne machen würde wäre so was also sprich wenn es nicht gesetzt ist dann würde

02:21:43.280 --> 02:21:49.720
ich es gerne auf den default wert setzen und in dem fall den default wert duration now aber das

02:21:49.720 --> 02:21:59.440
geht ja nicht weil das ist ein string also ich will eigentlich sowas dann machen let start gleich

02:21:59.440 --> 02:22:15.520
now nee das gibt es nicht macht man das jetzt system time local now

02:22:20.840 --> 02:22:21.600
wahrscheinlich

02:22:21.600 --> 02:22:35.520
now genau sowas will ich haben nur dass ich gerne den start da oben kann ich sowas machen

02:22:35.520 --> 02:22:54.400
let start gleich mit let start moment das geht nee nee ich ich muss das ich muss das so machen

02:22:54.400 --> 02:23:00.400
wie hier oben oder dass das das funst glaube ich nicht anders so irgendwie so so die kurz

02:23:00.400 --> 02:23:07.640
variante davon gibt es gibt es nicht irgendeine kurz kürzere schreibweise davon dass ich quasi

02:23:07.640 --> 02:23:13.960
sage hier guckt mal ist das ist das gesetzt und wenn nicht dann schreibt was rein also im

02:23:13.960 --> 02:23:22.120
prinzip will ich das hier machen ganz dumm gesagt aber ich glaube ich glaube den den

02:23:22.120 --> 02:23:28.280
operator gibt es nee das will ich gar nicht machen vergiss es blödsinn also ich glaube

02:23:28.280 --> 02:23:36.440
ich glaube ich muss tatsächlich wieder sowas hier machen also sprich let start match cli start

02:23:36.440 --> 02:23:43.680
muss ich da irgendwie so komisches zeug noch hinten dran schreiben wahrscheinlich start so und wenn

02:23:43.680 --> 02:23:54.760
es nichts wenn es nichts gesetzt hat dann will ich das hier haben so fertig so und wenn es was

02:23:54.760 --> 02:24:05.600
gesetzt hat oder muss ich das jetzt wieder passen weil aber da gibt es doch bestimmt

02:24:05.600 --> 02:24:25.160
ein pass naiv time from oder pass from string oder so hier from start so nee was ist das problem die

02:24:25.160 --> 02:24:41.240
unresolved das steht doch da wie kann wie kann das unresolved sein kackel jetzt erzählt die ide

02:24:41.240 --> 02:24:52.360
jetzt mist oder wer hat jetzt recht guckt mal nach an rap oder mache ich mache ich wer lügt

02:24:52.360 --> 02:25:08.880
denn jetzt hier von pass from string ok klar wo ist wo ist das problem muss ich noch format angeben

02:25:08.880 --> 02:25:23.720
kann man das format nicht weglassen also ok ich muss muss er jetzt ein format angeben so

02:25:23.720 --> 02:25:29.520
wie es aussieht ist aber auch doof er sollte eigentlich automatisch ein paar durchbrennen

02:25:29.520 --> 02:25:47.560
also ich muss jetzt quasi sowas hier machen also quasi vor da weiß ich die weiß ich die

02:25:47.560 --> 02:25:59.280
standard dinger nicht keine ahnung day day nee das glaube ich klein d na klein d komm lass mal

02:25:59.280 --> 02:26:09.280
erst mal so gucken ob das jetzt funst ran nein geht nicht weil das muss ich anrappen

02:26:09.280 --> 02:26:18.160
wir uns funktioniert nicht jawoll nee ach das ist jetzt nicht komponent naiv time und daytime

02:26:18.160 --> 02:26:26.640
ist nicht kompatibel oder was gibt es denn gibt es denn loco pass oder so

02:26:26.640 --> 02:26:52.800
oder was ist pass naiv time ging bei mir nicht im parser wir können es noch mal ausprobieren

02:26:52.800 --> 02:27:14.240
also sprich an der stelle chrono naiv time oder so was nur wenn das was für

02:27:14.240 --> 02:27:30.320
ein sehr sehr de oder sehr de rast sehr de framework for serializing deserializing rast

02:27:30.320 --> 02:27:46.080
data structures damit hätte ich jetzt nicht gerechnet aber ok das funktioniert doch einfach

02:27:46.080 --> 02:28:01.000
so damit es geht was contains invalid characters nee warum contains das invalid characters das

02:28:01.000 --> 02:28:07.040
ist doch ein gültiges datum ok wahrscheinlich muss ich die uhrzeit machen 12 uhr 12 und

02:28:07.040 --> 02:28:20.760
0 sekunden ami format da muss man wahrscheinlich ok also datum sagen wir mal hier 21.07.2022

02:28:20.760 --> 02:28:31.280
invalid characters also muss man wahrscheinlich slashes machen dann weiß ich es auch nicht

02:28:31.280 --> 02:28:42.940
Matt

02:28:42.940 --> 02:28:51.100
Days, ne Moment, oder auch nicht. Ja Moment, was ist es denn dann? Es ist nicht naiv Time,

02:28:51.100 --> 02:29:04.800
sondern es ist, ähm, was ist es denn dann? Date, nee. Date Time? Naiv Date Time könnte

02:29:04.800 --> 02:29:16.540
es sein. Warum ist das eigentlich naiv und normal, nicht naiv, im Moment nicht naiv,

02:29:16.540 --> 02:29:29.220
es gibt es auch. Was ist denn da der Unterschied jetzt? Oh, was will der jetzt von mir? Was will

02:29:29.220 --> 02:29:43.220
der jetzt von mir? Äh, wie 23? Ich hab keine Ahnung was ich da überhaupt eingebe, also

02:29:43.220 --> 02:30:02.140
warum ist es halt nicht. Ach, die Time Zone Muster. Ach so, ah. Time Zone. Ach so, und

02:30:02.140 --> 02:30:08.380
die naiv Variante hat diesen ganzen Müll wahrscheinlich nicht, oder? Also, ach jetzt

02:30:08.380 --> 02:30:21.260
versteh ich das. Das eine ist quasi mit Time Zone Support und das andere ohne. Ok. Invalid

02:30:21.260 --> 02:30:41.340
Value. Darf ich jetzt 19, darf ich jetzt 1, 1, 1 eingeben oder so? In welchem Format

02:30:41.340 --> 02:30:57.900
willst du es denn von mir? In welchem Format darf es denn sein? Ach, mit Bindestrichen,

02:30:57.900 --> 02:31:13.580
Bindestrichen im Kokona Format. Bindestrichen im Kokona Format, ok. Nee. Contains invalid

02:31:13.580 --> 02:31:24.060
Characters. Aber, wenn das Serde Feature nicht aktiviert wäre Chat, dann würde das

02:31:24.060 --> 02:31:33.340
doch gar nicht funktionieren, oder? Nee, ist, ist, oder muss ich das aktivieren? Minus F.

02:31:33.340 --> 02:31:48.700
Also, Cargo Add Chrono minus F. So? Ist jetzt aktiviert, ja. Mal gucken ob es jetzt funktioniert.

02:31:48.700 --> 02:32:02.140
Nö. Ach, man muss das in ISO, ISO, nee, Dings Format Standard angeben, oder wie? Also,

02:32:02.140 --> 02:32:07.140
ich kopier mal kurz den Flixcoder. Ja, aber das kannst du doch keinem zumuten sowas einzutippen.

02:32:07.140 --> 02:32:16.260
Ah, ok, das funktioniert. Gut, das will ich aber nicht. Das ist ja, niemand, niemand,

02:32:16.260 --> 02:32:23.060
den ich kenne, könnte ernsthaft sowas aus dem Kopf tippen. Und wenn ich nicht naiv Date-Time

02:32:23.060 --> 02:32:45.780
nehme, sondern ich nehme richtig echtes Date-Time mit Zeitzone, Time Zone. Ok, Moment. Latest

02:32:45.780 --> 02:33:10.860
Release. Date-Time. Gibt's da? Hä? Die gibt's hier angeblich gar nicht. Aber das ist Chrono-naiv?

02:33:10.860 --> 02:33:16.380
Ich will nicht Chrono-naiv, ich will echtes Chrono. Boah, bisschen, bisschen eklig ist

02:33:16.380 --> 02:33:23.740
es schon, ja. Ich will echtes Chrono haben. So. Crates, Chrono, Moment. Suche Date-Time.

02:33:23.740 --> 02:33:38.060
Genau, das will ich haben. Date-Time, Doppelpunkt, Doppelpunkt, U-T-C? Alter, was denn das für

02:33:38.060 --> 02:33:45.580
eine Sündachs, da wäre ich ja im Leben nicht draufgekommen. What the fuck? Da wäre ich

02:33:45.580 --> 02:33:50.660
ja nie draufgekommen, das so zu schreiben. Never wäre ich da draufgekommen, das so zu

02:33:50.660 --> 02:34:09.780
schreiben. Nie. Ich mein. What? Nee. Pretty much the end of input. Aber das geht anscheinend

02:34:09.780 --> 02:34:35.220
jetzt wieder nicht. Punkte schreiben oder so? Ok, ich will ja als Time Zone auch nicht

02:34:35.220 --> 02:34:52.420
U-T-C haben, sondern. Ey, was gibt's denn sonst noch für Time Zones? From? Boah, ist

02:34:52.420 --> 02:35:00.140
das belastend, also. Ok, gehen wir mal von aus, das ist U-T-C. Wie würde ich jetzt das

02:35:00.140 --> 02:35:17.860
Datum dann da richtig eingeben? Gehen wir mal clap. Clap, Date-Time. Steht da was drin?

02:35:17.860 --> 02:35:42.460
Rust. Rust. Also es ist nicht sonderlich verständlich alles, muss man sagen. Kann es sein, dass

02:35:42.460 --> 02:35:54.140
er das nicht parsen kann? Well. Pretty much the end of input. Ok, nice. Und wenn ich Punkte

02:35:54.140 --> 02:36:04.660
reinmache, muss ich noch irgendwie irgendwie Z2 oder irgendwas? Nee. Ich muss da hinten

02:36:04.660 --> 02:36:10.500
noch ein Set für Time Zone angeben. Ja, das kannst du doch niemanden zumuten, das so einzutippen.

02:36:10.500 --> 02:36:15.860
Ich glaube, ich muss, ich muss das, ich muss das selbst machen. Also was, was mir vorschwebt

02:36:15.860 --> 02:36:23.340
ist folgendes, ja. Was mir vorschwebt ist folgendes. Man gibt, man gibt ein 18 Uhr 12

02:36:23.340 --> 02:36:29.180
und 12 Sekunden und da hängt das aktuelle Datum davor, wenn du kein Datum eingegeben

02:36:29.180 --> 02:36:46.700
hast oder du gibst das ein und ähm, er macht daraus, er nimmt ja unsere Zeitzone und rechnet

02:36:46.700 --> 02:36:51.860
das um. Aber ansonsten ist das, ja. Aber wir probieren nochmal was anderes, ob das mit

02:36:51.860 --> 02:37:00.140
Duration funktioniert. Minus Duration 00 15 00. Ach, das funktioniert einfach so dann.

02:37:00.140 --> 02:37:07.940
Moment, nee, ich pars den Krempel ja noch. Also was würde angeblich gehen? Duration würde

02:37:07.940 --> 02:37:18.140
angeblich gehen. Nee. Duration funktioniert nicht. Moment, das ist was anderes. Deswegen

02:37:18.140 --> 02:37:30.580
funktioniert Duration nicht. Ja, CLI. CLI Duration, deswegen funktioniert das nicht.

02:37:30.580 --> 02:37:37.540
Nee, funktioniert auch sonst nicht. Also ich weiß nicht, wer im Chat erzählt hat, Duration

02:37:37.540 --> 02:37:53.180
wird gehen, aber anscheinend geht Duration so nicht. Aber Date-Time geht. Naiv-Time geht,

02:37:53.180 --> 02:38:03.140
naiv-Date geht. Äh, könnte ich an der Stelle anstatt eine Duration naiv-Time nehmen, wenn

02:38:03.140 --> 02:38:12.140
es nur Time ist? Ah, das geht auch. Ja, ok, wenn das geht, das kann es ja quasi mehr oder

02:38:12.140 --> 02:38:25.820
weniger wie Duration verwenden. Ja, das sind jetzt, das sind jetzt, keine Ahnung, 22 Minuten.

02:38:25.820 --> 02:38:30.300
Ja, funktioniert. Das finde ich gut, was passiert, wenn ich sowas hier mache. Ah, damit dann

02:38:30.300 --> 02:38:33.820
mag er nicht, dann mag er nicht. Vielleicht, vielleicht nicht mit der schönsten, mit der

02:38:33.820 --> 02:38:40.820
schönsten Fehlermeldung, aber es ist ok. Invalid-Value for Duration. Es wäre cool,

02:38:40.820 --> 02:38:46.380
wenn man hier eine Custom-Fehlermeldung angeben könnte. So nach dem Motto hier, guck mal und

02:38:46.380 --> 02:38:56.140
ansonsten, gib ihm. Und irgendjemand, ich sollte mir Unwrap or Default angucken. Also das heißt,

02:38:56.140 --> 02:39:13.220
wenn ich jetzt checken will, äh, wenn ich checken will, ob Start gesetzt ist. Easy-Clap-Annotation,

02:39:13.220 --> 02:39:17.380
ja, das, ich finde es ja gar nicht mal übel, ja, also ich erkenne schon, dass das alles

02:39:17.380 --> 02:39:22.300
viele Möglichkeiten hat, aber es ist schon irgendwie nicht so einfach da durchzuplicken.

02:39:22.300 --> 02:39:44.060
Gleich, so und jetzt was werde ich, CLI, Start, Unwrap, Moment, das gibt es ja nicht. Unwrap,

02:39:44.060 --> 02:40:12.500
Unwrap, was, or. Und da würde ich dann angeben. Moment, Moment, wartet mal. Nur mal, nur mal

02:40:12.500 --> 02:40:16.180
so, um das nochmal zu testen, dass es funktioniert. Oder machen wir es, machen wir es doch einfach

02:40:16.180 --> 02:40:22.060
mit, machen wir es doch einfach mit Duration. Machen wir es mit Duration, nicht mit, nicht

02:40:22.060 --> 02:40:31.860
mit Start. Ne, mach hier mit Duration, ok. Ok, also nehmen wir einfach Duration, so. Also

02:40:31.860 --> 02:40:38.820
ich will gucken, ob Duration gesetzt ist. Das ist ja eine Option, guck, das ist eine

02:40:38.820 --> 02:40:49.700
Option, da. So, und wenn es nicht gesetzt ist, dann will ich ein Naiv Time, dann will

02:40:49.700 --> 02:41:04.540
ich das da haben, äh, From, From HMS, 0, 15, 0, 15 Minuten. So, mal gucken, ob das,

02:41:04.540 --> 02:41:10.540
ich nenne es mal Duration, mal gucken, ob das funktioniert. Das wäre nämlich die deutlich

02:41:10.540 --> 02:41:16.460
kürzere, ja viel besser Leute. Das ist doch mal eine sinnvolle Schreibweise, guckt mal.

02:41:16.460 --> 02:41:32.180
Also bevor ich diesen Crap hier oben mache, dann auch lieber so. Ja, ok, GGEs. Ja, das

02:41:32.180 --> 02:41:38.660
ist der Suntags, damit lass ich, damit kann ich mich anfreunden, ja. Das ist ok. Ja und

02:41:38.660 --> 02:41:43.540
das mit dem Duration können wir uns im Prinzip auch sparen, weil, Naiv Time funktioniert

02:41:43.540 --> 02:41:55.420
genauso. Ne, das wird wahrscheinlich nicht gehen. Also die Duration muss, wobei, du hast

02:41:55.420 --> 02:42:01.140
recht, die Duration muss kleiner, die Duration muss kleiner als, ähm, ein Tag sein wahrscheinlich,

02:42:01.140 --> 02:42:08.740
ja, ist out of range, genau. Aber Duration parsen kann ich nicht. Duration parsen mag

02:42:08.740 --> 02:42:15.340
er nicht, guck, bam. Duration parsen, nein, From String ist nicht, nicht möglich. Aber

02:42:15.340 --> 02:42:21.340
ganz im Ernst, das ist ok. Eine Duration, na wobei, ganz ehrlich, ich kenne durchaus

02:42:21.340 --> 02:42:25.660
Leute, die drei Tage Duration setzen. Einfach, wenn die Warnungsarbeiten irgendwie übers

02:42:25.660 --> 02:42:31.820
Wochenende gehen oder so. Das ist Sea Lion mit dem Rust Plugin. Es ist echt dumm, dass

02:42:31.820 --> 02:42:39.900
Duration nicht geht. Clap, pass, glaube ich brauche irgendeinen Custom Parser dafür.

02:42:39.900 --> 02:42:55.780
How can I accept Standard Time? Ne, das hatten wir doch gerade schon. Man braucht einen Custom,

02:42:55.780 --> 02:43:02.060
man braucht einen Custom Parser. So, und zwar, clap, pass, try, From String, pass, Duration.

02:43:02.060 --> 02:43:07.100
Also ich kann dem quasi eine Custom, ja, da probieren wir das doch mal aus. Also, der

02:43:07.100 --> 02:43:19.740
kriegt clap, easy clap, easy clap, pass, try, From String, soll er diese Implementierung

02:43:19.740 --> 02:43:27.500
verwenden? Ok. Pass, Duration, String, Result, Standard Time, Duration. Ne, soll er nicht

02:43:27.500 --> 02:43:41.260
und zwar, ich mache das mal kurz weg, weil ich will gucken, ob er das checkt. Also, pass,

02:43:41.260 --> 02:43:50.500
Duration, also quasi den Input umzuwandeln in ein Duration Element, was auch immer. Würde

02:43:50.500 --> 02:43:58.580
ich jetzt sagen, hier kriege ich den String rein. Ach, ich däpp, jetzt habe ich den Kram

02:43:58.580 --> 02:44:10.340
schon wieder gelöscht, 0W. Sollen wir erstmal schön rückgängig machen. So, und was würde

02:44:10.340 --> 02:44:21.060
ich jetzt machen? Also, ich will ja kein String, ich will ja Chrono, Chrono Duration haben,

02:44:21.060 --> 02:44:36.620
als Rückgabe. Genau, also im Prinzip so. Pass, Error, Int, Error, ja gut. Oh, guck mal, ok.

02:44:36.620 --> 02:44:43.060
Und jetzt würde ich sagen, Duration, ja From und so gibt es ja nicht, jetzt muss ich wieder,

02:44:43.060 --> 02:44:50.780
jetzt muss ich, Moment. Meine Logik hier oben funktioniert ja gar nicht. Wenn es größer

02:44:50.780 --> 02:44:57.540
als ein Tag ist, wäre das auch schon abgekackt. Warum, ich verstehe immer noch nicht, warum

02:44:57.540 --> 02:45:03.860
es keine Duration gibt. Wisst ihr was, ich nehme einfach Standard Time Duration, da funktioniert

02:45:03.860 --> 02:45:24.900
das. Duration, so, da kann ich eben sagen, From. Also, ich glaube, die sind noch nicht

02:45:24.900 --> 02:45:29.900
auf die glorreiche Idee gekommen, dass jemand andere Durations als Sekunden, Microseconds

02:45:29.900 --> 02:45:36.540
und Nanoseconds irgendwie haben will. Duration von 15 Minuten oder so ist outdated, overrated,

02:45:36.540 --> 02:46:05.340
gebadet, das braucht man nicht. Schon etwas merkwürdig, ja. Rust Standard Duration Minutes,

02:46:05.340 --> 02:46:22.500
Duration Seconds. Oder halt, oder halt, oder halt so. Aber da muss ich den String selber

02:46:22.500 --> 02:46:35.380
splitten. Das ist schon echt richtig kacke. Weil ich kann sagen, naiv Time Pass vom String,

02:46:35.380 --> 02:46:44.860
ja ja, das funktioniert schon. Aber eine Time kann ja maximal 24 Stunden haben. Also,

02:46:44.860 --> 02:46:50.420
es ist mir aktuell noch überhaupt nicht klar, wie man mit Kombination, entweder Krone oder

02:46:50.420 --> 02:47:01.780
Standard Clip eine Duration von, sagen wir mal, 2 Stunden, 30 Minuten und 10 Sekunden

02:47:01.780 --> 02:47:08.100
irgendwie oder sagen wir mal von 28 Stunden, 30 Minuten und 5 Sekunden ordentlich passen

02:47:08.100 --> 02:47:13.340
könnte. Und das kann doch nicht sein, dass das nicht geht. Das muss doch irgendwas sein,

02:47:13.340 --> 02:47:19.420
was ich übersehe. Also mal angenommen, ich hätte hier so unten den String. Können wir

02:47:19.420 --> 02:47:29.900
mal simulieren hier. Let's drill gleich. 28 Stunden, 30 Minuten, 15 Sekunden. Wie kriege

02:47:29.900 --> 02:47:42.620
ich das in eine Duration gepasst? Das muss doch gehen. Pass Duration. Es gab hier immer

02:47:42.620 --> 02:47:47.460
welche Strings, äh, irgendwelche Fragen. Würdest du sagen, deine Arbeitskollegen sind

02:47:47.460 --> 02:47:52.300
alle in Ordnung oder sind das sehr komische Typen dabei? Meinst du jetzt in der gesamten

02:47:52.300 --> 02:47:58.460
Firma oder wirklich nur die Leute, mit denen ich wirklich, mit denen ich viel arbeite?

02:47:58.460 --> 02:48:03.460
Also, in der gesamten Firma sind sehr viele komische Typen dabei. Nicht komisch so im

02:48:03.460 --> 02:48:08.100
allgemeinen Sinne, sondern halt irgendwelche BWL-Stonkstypen, wo ich mir immer so denke,

02:48:08.100 --> 02:48:13.540
Alter, was wollt ihr? Ähm, so mit den direkten Kollegen, die sind eigentlich alle ganz normal.

02:48:13.540 --> 02:48:20.980
Nein, was heißt normal? Die sind wahrscheinlich normaler als ich normal bin, ja. Aber es ist

02:48:20.980 --> 02:48:26.220
jetzt aktuell keiner dabei, der mir richtig auf den Keks gehen würde. Es gab früher

02:48:26.220 --> 02:48:32.900
mal einen, der mochte mich nicht und den mochte ich auch nicht. Ich glaube, so kann man das

02:48:32.900 --> 02:48:43.020
zusammenfassen. Aber der ist schon eine ganze Weile weg. Und die meisten Leute bei mir

02:48:43.020 --> 02:48:46.820
stehen auf der Arbeit, die schon länger dabei sind, die wissen auch genau, wie ich meine.

02:48:46.820 --> 02:49:01.620
Aber ihr natürlich nicht und ich sag's euch auch nicht. Nein, gibt keine Vor- gibt kein,

02:49:01.620 --> 02:49:12.140
wie heißt das, Tress, Code, Kleiderordnung? Gibt es nicht. Ich hab manchmal ein Hemd an,

02:49:12.140 --> 02:49:20.860
aber ein kurzärmliches. Damit ich Opa werden kann, müsste ich selbst erst mal Nachwuchs

02:49:20.860 --> 02:49:49.620
machen. Also Opa FPS ist demnächst nichts in Sicht. Warum gibt es da Crates dafür,

02:49:49.620 --> 02:50:09.020
um Durations zu passen? Das macht mich immer noch fertig. Läuft mit Rust besser? Ja, wir

02:50:09.020 --> 02:50:14.740
haben schon einiges gemacht. Nur die Sache ist halt die, dass Rust manchmal keine Sachen

02:50:14.740 --> 02:50:22.700
hat, die ich nicht verstehe. Zum Beispiel, wie kriege ich diese Duration gepasst in eine

02:50:22.700 --> 02:50:33.980
Duration? Da gibt es anscheinend nichts für. Das muss an der Sicherheit liegen. Die sagen

02:50:33.980 --> 02:50:45.020
nur, ich soll komische, komische Crates dafür verwenden. Ja, ich soll das Crates Duration

02:50:45.020 --> 02:50:53.860
verwenden und sowas. Aber warum? Ich mein, das sind irgendwelche Leute, irgendwelche

02:50:53.860 --> 02:50:59.540
Guitar-Projekte mit 5 Sternen oder so, mit 10 Sternen, die kaum noch maintenance werden

02:50:59.540 --> 02:51:04.780
und sowas. Die will ich nicht verwenden und ich will es aber auch nicht selber machen.

02:51:04.780 --> 02:51:14.460
Ich möchte, dass man die großen Libraries bzw. die Standard-Libraries sowas hat. Was

02:51:14.460 --> 02:51:20.380
es da zu maintain gibt? Ja, das ist tatsächlich eine gute Frage. Entweder passt das den String

02:51:20.380 --> 02:51:29.900
oder nicht. Aber vielleicht gibt es ja einen Bug und kein Juckz. Du stellst nach einem

02:51:29.900 --> 02:51:34.860
halben Jahr fest, Mist, das Ding hat einen Bug und frisst dann doch nicht alle Formate

02:51:34.860 --> 02:51:46.380
richtig. In dem Fall bei dem geht es. Aber das weißt du halt nicht. Angenommen, du benutzt

02:51:46.380 --> 02:51:52.220
das jetzt, dein Projekt ist 2 Jahre alt und die Library wurde zuletzt aktualisiert vor

02:51:52.220 --> 02:51:56.620
3 Jahren. Da musst du es dann forken und selber fixen. Das finde ich blöd. Deswegen

02:51:56.620 --> 02:52:04.260
finde ich es gut, wenn so banale Sachen wie Duration Parsing from String in der Standard-Library

02:52:04.260 --> 02:52:15.260
drin sind. Doch, mache ich. Mache ich. Ich nehme so gut wie nie Libraries, die nur 5

02:52:15.260 --> 02:52:22.460
oder 8 Sterne haben und vor 10 Jahren aktualisiert wurden. Ich nehme eigentlich nur, also zumindest

02:52:22.460 --> 02:52:27.900
wenn ich Libraries nehme, die ich regelmäßig verwende, dann nehme ich eigentlich so gut

02:52:27.900 --> 02:52:33.900
wie nur Sachen, die relativ beliebt sind und viele Commits haben und viele Sterne haben

02:52:33.900 --> 02:52:40.860
oder sagen wir zumindest eine gewisse History haben. Ich bin wieder am Duration Parsen,

02:52:40.860 --> 02:52:52.660
als wenn man heute einleuchtet, dass es das gibt, dass es das nicht gibt. Das gibt es

02:52:52.660 --> 02:53:06.340
nicht. Es gibt keine Standard Duration from String. Das gibt es nicht. Das will ich nicht

02:53:06.340 --> 02:53:25.060
wahrhaben. Ja, das ist wieder was ganz anderes. Ja, das ist echt Fail. Wir haben ja was. Was

02:53:25.060 --> 02:53:30.540
prinzipiell funktioniert, das Problem ist nur, das hat halt jetzt schon einen Bug, ist

02:53:30.540 --> 02:53:37.740
nämlich die Duration größer als die Stunden, mehr als 24 Stunden, dann funktioniert es nicht.

02:53:37.740 --> 02:53:50.780
Dann kackt es ab. Ja, das ist ein bisschen Bane's Champ. Ich meine, wir können diese

02:53:50.780 --> 02:54:05.700
komische Grades. Man kann das verwenden. Wie passt man denn hier? Zeigt man ja Pars String

02:54:05.700 --> 02:54:21.540
to Standard Time Duration und Chrono Duration. Also wie funktioniert das? Duration? New.

02:54:21.540 --> 02:54:31.140
Die wollen ernsthaft, dass man das selbst ausrechnet. Ja, wir haben die zweite Zeile

02:54:31.140 --> 02:54:44.580
schon geschafft, aber wir sind gerade wieder bei der ersten. Hier Pass One Day. Das will

02:54:44.580 --> 02:54:54.180
ich nicht parsen. Wer will denn sowas parsen? Ich will pass. Okay, dass sowas unterstützt

02:54:54.180 --> 02:55:01.660
wird, finde ich tatsächlich ganz nice. Ja, das ist okay. Aber warum wird nicht sowas

02:55:01.660 --> 02:55:13.220
wie 15.00 unterstützt und so? Niemand will doch sowas parsen. Aber 15.20 oder sowas

02:55:13.220 --> 02:55:34.380
willst du vielleicht passen. Das schreibt doch kein Mensch so hin. Ein M plus 3, niemand

02:55:34.380 --> 02:55:55.060
würde das überhaupt auf die Idee kommen, im Terminal so einzugeben als Option. Ist

02:55:55.060 --> 02:56:04.500
es nicht eher ein Date, was du parsen willst? Nein, ist es nicht. End Datum ergibt sich

02:56:04.500 --> 02:56:24.100
aus Startzeit plus Duration. Ab jetzt für 48 Stunden zum Beispiel. Ja, das könnte man

02:56:24.100 --> 02:56:35.620
mit einem Date wahrscheinlich direkt machen. Aber es ist ja nicht immer Now. Vielleicht

02:56:35.620 --> 02:56:44.580
ist es doch gar keine so schlechte Idee, das über einen Date zu lösen. Überlege ich gerade,

02:56:44.580 --> 02:56:53.620
ob das irgendwie sinnvoll funktionieren würde? Nee, würde nicht sinnvoll funktionieren.

02:56:53.620 --> 02:57:00.980
Ich müsste es ja irgendwie ausrechnen, wann das End Date ist. Und das kann ich nicht ausrechnen.

02:57:00.980 --> 02:57:18.220
Also wenn ich das richtig sehe, kann ich hier nicht eingeben zum Parsen. Für 12 Uhr kann

02:57:18.220 --> 02:57:33.660
ich nicht eingeben 12.05.10. Für eine Duration von 12 Stunden kann ich nicht eingeben 12.05.30.

02:57:33.660 --> 02:57:49.020
Ja, Date plus X, genau, das ist das Problem. Das Plus X kriege ich nicht gepasst. Das Ausrechnen,

02:57:49.020 --> 02:57:55.540
wenn ich eine Duration und ein Startdatum habe zum Enddatum, das ist einfach. Also ich habe

02:57:55.540 --> 02:58:05.620
einen String, 28.30.15. Das bedeutet 28 Stunden 30 Minuten 15 Sekunden. Und den will ich parsen

02:58:05.620 --> 02:58:17.500
in eine Duration. In.NET ist das in der Tat äußerst simpel mit Timespan Pars. So, und

02:58:17.500 --> 02:58:24.460
da kann ich jetzt reinschreiben, 28.15 und da kommt Timespan raus mit 28 Stunden 30 Minuten

02:58:24.460 --> 02:58:38.620
15 Sekunden. Fertig. Ich meine, okay, vielleicht können wir das auch verwenden, weil wenn

02:58:38.620 --> 02:58:48.140
sowas supportet wird wie 30 Minuten oder 3 Tage oder so ist das doch auch okay. Das ist

02:58:48.140 --> 02:58:54.660
glaube ich ganz in Ordnung. Warte mal, ich binde das mal ein. Also was muss ich denn da

02:58:54.660 --> 02:59:07.980
für jetzt machen? Cargo add, Cargo add, sowas hier. Okay, und jetzt machen wir die ganz simple

02:59:07.980 --> 02:59:18.860
Variante und zwar. Moment, ich kommentiere das mal aus. Ich mach das hier auch mal wieder

02:59:18.860 --> 02:59:25.220
weg. Ich probiere jetzt einfach mal was aus, ob das, ob das funktionieren würde. Nehmen

02:59:25.220 --> 02:59:33.220
doch ein Date-Time-Span. Ja, sowas will ich haben, aber sowas gibt es nicht. Oder keine

02:59:33.220 --> 02:59:38.940
Ahnung, ob das das ist, was ich haben will. Ne, wahrscheinlich ist es nicht das, was ich

02:59:38.940 --> 02:59:46.580
haben will. Mein Date-Time-Span klingt sehr nach Duration. Das ist Sea Lion mit dem Rust

02:59:46.580 --> 03:00:09.500
Plugin. Also probiere das doch mal aus. Also, Moment. Use Duration Pass, jetzt gehen wir

03:00:09.500 --> 03:00:33.420
von Hand ein. Also sowas hier. Duration Pass, Trink, Let Duration. So, gut. Print, wobei

03:00:33.420 --> 03:00:43.740
das Print kopiere ich mir. Bis ich das getippt habe, ist morgen soweit. Duration, so, und

03:00:43.740 --> 03:00:52.660
jetzt muss man was machen? Unwrap, das ist Funst. So, Run. Wow, erstmal wieder viel kompilieren.

03:00:52.660 --> 03:01:05.660
Okay, Nom, Nom habe ich installiert, okay. Was auch immer Nom ist. Ja. Moment. Ey, nervt

03:01:05.660 --> 03:01:15.340
jetzt nicht, weg damit. Ich will jetzt einfach nur ausführen. Unknown Feed, Alter. Jetzt,

03:01:15.340 --> 03:01:25.500
geht fort. Okay, das kann er nicht passen. So, aber sowas wie 3 Tage, das kann er passen.

03:01:25.500 --> 03:01:42.940
Ja, das funktioniert. Und sowas wie 60 Minuten kann er auch passen. Ja. 30 Seconds. Naja,

03:01:42.940 --> 03:01:51.860
ich meine, wahrscheinlich ist das sogar besser als das, was ich ursprünglich hatte. Weil,

03:01:51.860 --> 03:01:57.220
mal chat, guckt mal. Wenn irgendjemand eine Duration eingibt, dann gibt er doch lieber

03:01:57.220 --> 03:02:06.460
sowas ein als sowas, ja, oder, oder. Moment, Tage, stimmt ja gar nicht. Also, wenn einer

03:02:06.460 --> 03:02:13.260
28, 28 Stunden als Duration angeben will, dann gibt er doch, dann gibt er doch lieber sowas,

03:02:13.260 --> 03:02:17.580
sowas da an als, als sowas. Ich meine, was du mit dieser Schreibweise nicht machen kannst,

03:02:17.580 --> 03:02:27.580
ist 28 Stunden und 15 Sekunden. Oder 15 Minuten, oder würde das so funsten? Ey, das würde

03:02:27.580 --> 03:02:34.740
funktionieren. Nee, aber dann wäre das mit dem Doppelpunkt schon wieder, schon wieder

03:02:34.740 --> 03:02:43.660
schöner. Ja, aber das checkt er ja nicht. Ja, ich kann das schon selbst machen, aber

03:02:43.660 --> 03:02:51.740
ich finde es halt echt ziemlich blöd, dass eine Standard Library Duration Klasse, oder

03:02:51.740 --> 03:02:58.340
wie auch immer man das nennt, genau, in Rust, kein Duration passen kann vom String. Das

03:02:58.340 --> 03:03:10.940
ist schon fail. Aber, aber ich denke, also, also ich glaube, ich kann damit leben. So,

03:03:10.940 --> 03:03:36.300
sowas hier. Damit kann ich leben. Was würde aber eine Zeit implizieren, keine Dauer? Hast

03:03:36.300 --> 03:03:42.980
du schon mal auf so eine Stoppuhr geguckt, was da so drauf steht? Digitale Stoppuhr?

03:03:42.980 --> 03:03:52.740
Also, das, das steht da halt auch so drauf. Ja, also ich würde jetzt nicht sagen, dass

03:03:52.740 --> 03:03:57.700
diese Schreibweise, also ich würde jetzt nicht unbedingt sagen, dass so eine Schreibweise

03:03:57.700 --> 03:04:14.860
irgendwie super uncommon ist für eine Duration. Nee, guck mal, das ist eine Stoppuhr. Da

03:04:14.860 --> 03:04:24.180
steht drauf 34 Doppelpunkt 25. Was ja auch sinnvoll ist. Ich mein, was soll denn da sonst

03:04:24.180 --> 03:04:32.580
draufstehen? Soll da, soll da, soll da wirklich, soll da dann draufstehen, soll da dann draufstehen,

03:04:32.580 --> 03:04:49.260
eins M, nee, soll da dann draufstehen, drei M plus 13 S plus 29 MS oder so. Guck mal,

03:04:49.260 --> 03:05:00.060
sogar mit Tagesanzeige oder so vorne dran. Also, ich kenn keine Stoppuhr, wo das so drauf

03:05:00.060 --> 03:05:09.860
steht. Mag ja sein, dass es das gibt, aber allein schon, wenn man hier nach, oder Stop,

03:05:09.860 --> 03:05:19.460
Watch, Digital sucht. Guck mal, vielleicht ist es bei den Amis anders, aber nö, da

03:05:19.460 --> 03:05:30.620
ist es auch so. Also, es passt schon. Alter, was ist jetzt hier los? G-Bait, Alter, G-Bait,

03:05:30.620 --> 03:05:37.260
wer hat geradet? Der Platinenmacher, Dankeschön Platinenmacher für den, für den Zap. Hier

03:05:37.260 --> 03:05:52.700
ist überhaupt nix die Lieder, das ist Massive, Massive G-Bait, Alter. Ich hab euch durch

03:05:52.700 --> 03:05:58.780
Shoutchat, keine Chance. So, also das mit dem Duration Pass scheint mir nicht so einfach

03:05:58.780 --> 03:06:05.300
zu sein, den Rust, wie ich mir das vorgestellt hab. Ja, Dankeschön für den Host, ich hab

03:06:05.300 --> 03:06:10.740
glaub ich gesagt, Dankeschön für den Zap, ich bin schon ein bisschen, Rust hat mich,

03:06:10.740 --> 03:06:30.660
hat aus 5-Hat nicht 6-Hat gemacht, sondern eher Low IQ für heute. Genau so. Seid nicht

03:06:30.660 --> 03:06:40.380
aus, ich seid aber durchschaubar. Größte von Jett, der hat mich überredet. Ach, nice,

03:06:40.380 --> 03:06:44.180
ja, den haben wir auch schon ein paar Mal gehostet und ab und zu springt er hier auch

03:06:44.180 --> 03:06:52.020
im Stream rum. Ja, Leute, also ihr kommt, also ich freue mich über den Host, aber ihr kommt

03:06:52.020 --> 03:06:59.580
zu einer ungelegenen Zeit, weil ich bin ja schon ein alter Sack und 22 Uhr ist bei mir

03:06:59.580 --> 03:07:16.500
normalerweise Schluss. Weil Boomer müde, Boomer schlafen. Du hast heute Gentoo Linux installiert

03:07:16.500 --> 03:07:31.860
und wie viel Stunden hast du kompiliert? Warum überhaupt Gentoo, warum nicht Arch by the

03:07:31.860 --> 03:07:38.780
Way, das einzig wahre, wissen wir doch alle. Boah Leute, ich glaub mir reicht es mit Rust

03:07:38.780 --> 03:07:42.860
für heute, es war echt anstrengend, wir haben zwar so gut wie kein Progress gemacht,

03:07:42.860 --> 03:07:49.260
aber es war ziemlich wirr unkompliziert. Ich bin mir nicht sicher, ob ich das Tool wirklich

03:07:49.260 --> 03:07:55.780
fertig programmiere in Rust. Müsste ich eigentlich machen, einfach, dass man es ordentlich vergleichen

03:07:55.780 --> 03:08:02.500
kann. Ja, ich hab zwei Zeilen, tatsächlich, ich hab, ich hab von dem ursprünglichen.NET

03:08:02.500 --> 03:08:12.380
Programm eigentlich, also wir haben das Kommando Zeilen Parsing hingekriegt. Wir haben ja zwei

03:08:12.380 --> 03:08:23.420
Zeilen, im Prinzip haben wir zwei Zeilen geschafft. Ja, wir haben tatsächlich diese zwei Zeilen

03:08:23.420 --> 03:08:30.260
noch nicht mal richtig fertig geschafft. Rust braucht ein anderes Mindset, ja, es ist wirklich,

03:08:30.260 --> 03:08:37.460
es sieht echt so aus. Ohne Mist, ich glaube, auch wenn mir C++ mega auf den Sack gehen

03:08:37.460 --> 03:08:46.620
wird, ich glaube, dass es in C++ tatsächlich schon nahezu fertig wäre. Wobei, hat die C++

03:08:46.620 --> 03:09:00.100
Standard Library einen HTTP-Klient? Wahrscheinlich nicht, oder? Ne. Ey, das ist natürlich, sowas

03:09:00.100 --> 03:09:05.940
essentielles ist ja auch bloat. Wer braucht im Jahr 2022 schon einen ordentlichen HTTP-Klient?

03:09:05.940 --> 03:09:24.220
Aber ernsthaft, haben die keinen HTTP-Klient in der Standard Library? Wirklich? Ich denke,

03:09:24.220 --> 03:09:28.100
immer mal jede Programmiersprache der letzten 15 Jahre, die rausgekommen ist, hat in der

03:09:28.100 --> 03:09:42.780
Standard Library einen HTTP-Klient. Die haben noch nicht mal Sockets? Echt nicht? Haben sie

03:09:42.780 --> 03:09:58.940
nicht? Wird ja immer unsinniger, das Ganze. Haben die wirklich keine Sockets? Gut, ich

03:09:58.940 --> 03:10:04.940
meine, es ist C, du kannst immerhin noch die ganzen Betriebssystemeigenen Sachen importieren,

03:10:04.940 --> 03:10:16.860
aber will man ja nicht, wirklich. Boost zählt nicht als Standard Library. Probier mal Boost

03:10:16.860 --> 03:10:26.700
auf Measp32 zu machen. Boost wird vielleicht irgendwann mal ein paar Sachen daraus Standard

03:10:26.700 --> 03:10:37.740
Library. Ja ok, das ist natürlich schon ein bisschen cringe. Das Wort cringe ist an sich

03:10:37.740 --> 03:10:48.300
schon cringe. Hört sich sehr cringy an, wenn man es ausspricht. Cringe. Cringe. Es sagen

03:10:48.300 --> 03:10:56.980
die Zoomer so, habe ich gehört. Rust hat auch keine. Ok, das macht es mir nicht sympathischer.

03:10:56.980 --> 03:11:18.900
Rust HTTP Standard Library. Dafür wollen sie aber ganz schön viel in ihrer Standard

03:11:18.900 --> 03:11:27.660
Library machen und nichts davon richtig. Dafür haben sie jetzt die 500. Chrono Erweiterung,

03:11:27.660 --> 03:11:33.260
dass du dann demnächst schreiben musst, Chrono Doppelpunkt, Doppelpunkt, was weiß ich, Standard,

03:11:33.260 --> 03:11:44.780
Timer Doppelpunkt, Doppelpunkt, From, Milliseconds, To, Convert, To, Local, Timesounds Doppelpunkt,

03:11:44.780 --> 03:11:52.340
C, E, S, T, Doppelpunkt, Keckel. So, das könnte fast Standard C++ Code sein, also

03:11:52.340 --> 03:12:01.140
viel Unterschied ist da nicht. Guckt euch mal die offiziellen Docs von der C++, nicht

03:12:01.140 --> 03:12:07.780
Timer, der Timelibrary, der sieht so aus. Ach Gott, aber egal, ich will jetzt nicht

03:12:07.780 --> 03:12:19.220
anfangen von C++, dass ich nichts von C++ halte, wisst ihr. Das ist wirklich so, ja.

03:12:19.220 --> 03:12:27.020
Ja, soll mir auch recht sein. Ganz ehrlich, in Rust finde ich sogar weniger schlimm, wenn

03:12:27.020 --> 03:12:30.700
es einen ordentlichen Art HTTP Client nicht in der Standard Library gibt, weil du hast

03:12:30.700 --> 03:12:36.780
einen ordentlichen Package Manager. Ist ja auch was, was es für C++ nicht gibt. Es gibt

03:12:36.780 --> 03:12:43.460
für C++ zwar 20 Package Manager, aber das sind alles irgendwelche Fanprojekte. Du brauchst

03:12:43.460 --> 03:12:50.060
bei jeder ordentlichen Sprache einen Package Manager und nicht irgendwelche komischen Headerfiles

03:12:50.060 --> 03:12:58.540
rumkopieren, wo du dann im Zweifelsfall noch Konflikte hast, weil die Dinger gleich heißen.

03:12:58.540 --> 03:13:14.540
Ich muss sagen, wir haben ja letztens auch ein bisschen Peilzeug gemacht. Ich fand's

03:13:14.540 --> 03:13:18.660
nicht schlecht. Es war ein paar Sachen sind gewöhnungsbedürftig, aber man plickt durch

03:13:18.660 --> 03:13:25.220
und in der Regel kannst du von ausgehen, dass das, was du suchst, da ist, nur dass du noch

03:13:25.220 --> 03:13:31.500
nicht weißt, wie es heißt. Es ist alles abartig. Also wenn ich Makefiles sehe, ist es schon

03:13:31.500 --> 03:13:36.620
Makefiles, wo du dann Doppelpunkten die richtige Eindrückung brauchst, sowas. Es ist alles

03:13:36.620 --> 03:13:46.140
ein bisschen, ja. C finde ich insofern aber noch in Ordnung irgendwie. Die wollen ja wirklich

03:13:46.140 --> 03:13:50.900
minimalistisch sein, aber C++ will ja nicht mal minimalistisch sein. Ich weiß ehrlich

03:13:50.900 --> 03:13:57.900
gesagt nicht, was C++ eigentlich sein will. C++ ist ein zusammengewürfelter Haufen, wo

03:13:57.900 --> 03:14:04.900
jeder die Sachen sogar aus der Standard-Library anders implementiert. Kennst du Julia? Ja,

03:14:04.900 --> 03:14:10.540
die war bei uns mal am Empf- ne, der Witz ist so schlecht. Das ist selbst unter meinem

03:14:10.540 --> 03:14:14.620
Niveau, diesen Witz. Ja, aber die Programmiersprache kenne ich. Habe ich aber noch nichts drin

03:14:14.620 --> 03:14:23.740
gemacht. Oh, es blitzt. Ja, habe ich noch nichts drin gemacht. Ich kenne es vom Namen

03:14:23.740 --> 03:14:30.060
her, aber ich bin da immer skeptisch, ob sich das wirklich lohnt. Das ist eher so just

03:14:30.060 --> 03:14:36.540
for fun, mal angucken. Ich bin da ein bisschen skeptisch, ob es sich insofern lohnt, wenn

03:14:36.540 --> 03:14:43.060
es nicht eine breite Userbase hat. Das ist jetzt sicherlich nicht die Sprache mit wenigsten

03:14:43.060 --> 03:14:51.900
Verbreitungen. Ich weiß, gerade im Science- und mathematischen Umfeld scheint Julia wohl

03:14:51.900 --> 03:15:06.100
sehr beliebt zu sein. C++ ist plonen, C++ ist Crapware. Einzige, was ich heute von Rust

03:15:06.100 --> 03:15:15.660
gelernt habe ist, dass man einen extrem großen Kopf braucht und dass manche Sachen nicht

03:15:15.660 --> 03:15:22.140
da sind, von denen man erwartet, dass sie da sind. In Julia beginnt der Index bei 1.

03:15:22.140 --> 03:15:27.940
Kackel, Alter, was ist das? Da freuen sich die ganzen Lua-Programmierer. Die fühlen

03:15:27.940 --> 03:15:36.820
sich dann wieder heim. Julia-Example-Hello-World, wie sieht das aus? RIP-Tutorial, alles klar.

03:15:36.820 --> 03:15:59.900
Guck mal, mal wieder eine Sprache, die da drauf steht, Function und Endplöcke zu haben.

03:15:59.900 --> 03:16:05.220
Erinnert mich ein bisschen an Ruby, auch wenn es da nicht Function hieß. Oder wie die ganzen

03:16:05.220 --> 03:16:16.260
alten Pascal-Leute, war Pascal oder? Finden das bestimmt auch toll. Aber sieht tatsächlich

03:16:16.260 --> 03:16:29.780
relativ lesbar aus. Wishedle-Basic, ja, Wishedle-Basic, stimmt, Wishedle-Basic hat das auch so gemacht.

03:16:29.780 --> 03:16:45.220
Leute, ich werde müde. Es ist aber auch schon fast so weit. Bad-Git-Time, Leute, Bad-Git-Time

03:16:45.220 --> 03:16:59.700
rückt näher. Brainfuck ist ja dafür gemacht, um das Brain zu fucken. Sachen wie Rust und

03:16:59.700 --> 03:17:06.460
C++ sind ja nicht dafür gemacht, um das Brain zu fucken, aber C++ fuckt das Brain trotzdem.

03:17:06.460 --> 03:17:19.060
Den haben wir uns am Anfang mal kurz angeguckt. Da weiß ich noch nicht so genau, was ich von

03:17:19.060 --> 03:17:27.780
halten soll. Also ein Nachfolger wird das garantiert nicht. C++ wird C++ bleiben und

03:17:27.780 --> 03:17:38.100
weiter ekelig C++ sein. Ich finde es von der Idee her cool, dass sie sagen, sie machen

03:17:38.100 --> 03:17:47.860
quasi einen Kotlin für C++. Das, was sie mit Java und Kotlin gemacht haben mit C++

03:17:47.860 --> 03:17:55.380
und Carbon. Vom Ansatz her finde ich es okay. Leider kann ich es für die einzige Sache,

03:17:55.380 --> 03:18:00.140
wo ich öfters C++ verwende, nämlich für ESP32 zu programmieren, nicht verwenden,

03:18:00.140 --> 03:18:06.620
weil es wohl nicht erst Carbon zu C++ übersetzt und dann durch einen Compiler haut, sondern

03:18:06.620 --> 03:18:15.820
weil es wohl Carbon direkt über LVM zu Native Zeugs umwandelt und es deswegen nicht für

03:18:15.820 --> 03:18:22.700
einen ESP32 geht. Sonst hätten wir uns einen der nächsten Streams angeguckt. Die Sündags

03:18:22.700 --> 03:18:28.940
hat mich erstmal nicht so geschockt von Carbon, aber es ist auch schwierig. Wenn du hundertprozentig

03:18:28.940 --> 03:18:34.140
zu C++ kompatibel sein willst, musst du auch den ganzen Schmodder von C++ unterstützen.

03:18:34.140 --> 03:18:44.740
Das heißt du kannst wahrscheinlich gar keine hübsche Sündags bringen. Aber ich glaube,

03:18:44.740 --> 03:18:51.420
dass C++, also wirklich Leute mit C++ Erfahrung, dass sie so die meisten Sachen doch halbwegs

03:18:51.420 --> 03:18:57.140
schnell auf die Reihe kriegen. Du musst halt in C++ nur an Gott an die Welt denken und

03:18:57.140 --> 03:19:08.500
so viele Sonderfälle und Abweichungen im Kopf haben und damit klar kommen, dass manche Sachen

03:19:08.500 --> 03:19:24.140
unglaublich umständlich gemacht sind. Ich mein, Unreal ist auch in C++. Und ja, ich

03:19:24.140 --> 03:19:27.260
weiß, du kannst Unreal mittlerweile, gibt es auch irgendwelche Scriptaufsätze, aber ich

03:19:27.260 --> 03:19:31.100
gehe mal davon aus, ich kenne mich damit nicht wirklich gut aus, aber ich gehe mal davon

03:19:31.100 --> 03:19:36.260
aus, wenn du wirklich was sinnvolles in Unreal machen willst, dann kannst du entweder drei

03:19:36.260 --> 03:19:42.060
Jahre lang Blueprint-Kacheln rumziehen, bis du simple Logik hast oder du machst halt C++.

03:19:42.060 --> 03:19:56.260
So stelle ich mir das vor, ich habe keine Ahnung von Unreal. Ihr müsst aber doch euren

03:19:56.260 --> 03:20:02.620
alten Kram noch weiter supporten. Also, zu dieser Hau-Ruck-Umstellung stelle ich mir

03:20:02.620 --> 03:20:13.300
immer nicht so erfolgreich vor, ehrlich gesagt. Du hast dann 15 Jahre verschiedene Projektentwicklungsstufen

03:20:13.300 --> 03:20:17.660
von Sachen und wenn du sagst, von heute auf morgen, wir machen alles in Go, ja was ist

03:20:17.660 --> 03:20:21.340
mit dem alten Krempel, der schreibt sich ja nicht mal einfach neu in Go. Und wenn die

03:20:21.340 --> 03:20:27.140
Sachen halbwegs komplex sind, dann hast du die auch nicht von heute auf morgen in Go

03:20:27.140 --> 03:20:32.780
neu programmiert. Dann brauchst du erst mal drei Jahre, bis du irgendwas Feature-gleiches

03:20:32.780 --> 03:20:37.820
hast, dann musst du was neues programmieren und gleichzeitig das Alte weiter maintainen

03:20:37.820 --> 03:20:41.300
und wenn du das Neue dann fertig hast, das ist fast genauso eklig wie das Alte, wenn

03:20:41.300 --> 03:20:44.940
es alles unterstützt. Also ja, würde mich auch mal interessieren, von wo nach wo steigt

03:20:44.940 --> 03:20:49.380
ihr um und wie viele Projekte habt ihr, die ihr jetzt irgendwie umziehen müsst. Ne,

03:20:49.380 --> 03:21:02.060
Unreal-Geduld, das machen wir nicht. In Java, okay, in Pearl, oh jetzt wird es aber richtig

03:21:02.060 --> 03:21:13.940
Legacy hier. Ja, wenn es nicht so viel ist, dann mag es gehen. Aber ansonsten stelle ich

03:21:13.940 --> 03:21:22.740
es mir in der Theorie gut vor und Aufbruchstimmung ist dann bestimmt auch da, aber in der Praxis

03:21:22.740 --> 03:21:26.540
ist es dann wahrscheinlich eklig, weil mal ernsthaft, wenn man jetzt irgendeine alte

03:21:26.540 --> 03:21:34.820
Anwendung hat, sagen wir mal in Pearl oder Java, wenn man eine relativ komplexe Anwendung

03:21:34.820 --> 03:21:39.820
in Java hat und man sagt man macht die in Go jetzt neu mit allen Funktionen, dann ist

03:21:39.820 --> 03:21:45.900
wahrscheinlich die neue Anwendung in Go auch nicht wirklich großartig leichter zu durch

03:21:45.900 --> 03:21:51.060
schauen, ja. Du kannst ein paar Altlasten weglassen, sicherlich, aber die wird dann

03:21:51.060 --> 03:21:56.580
trotzdem groß und komplex werden. Mein bestes Beispiel dafür ist auch unter Linux die Leute,

03:21:56.580 --> 03:22:01.180
die Wayland angefangen haben, also hier neuen Display Manager, ne nicht Display Manager,

03:22:01.180 --> 03:22:12.580
neuen Display Manager, ne, was ist Wayland überhaupt, also X, ich meine X und Wayland,

03:22:12.580 --> 03:22:20.460
was ist denn da Kramler, ne, Windows System, Windows System, okay, ja, also die Leute,

03:22:20.460 --> 03:22:27.500
die gesagt haben, ach X ist Scheiße, wir machen jetzt Wayland, das haben die vor 15

03:22:27.500 --> 03:22:32.940
Jahren oder so gesagt, das ist schon ewig her, Wayland Release Date, ja mal gucken wann

03:22:32.940 --> 03:22:38.860
das erste sinnvolle rauskommt, ja 15 Jahre ist das her und man ist damit ins Rennen gegangen

03:22:38.860 --> 03:22:43.680
und hat gesagt, ja wir machen das jetzt alles neu und besser und die X Altlasten werfen

03:22:43.680 --> 03:22:54.500
wir raus und heute haben sie immer noch nichts was sinnvoll, naja, ne in manchen Bereichen

03:22:54.500 --> 03:22:58.620
funktioniert sinnvoll, aber heute haben sie immer noch nichts was umvergleichs sinnvoll

03:22:58.620 --> 03:23:11.340
funktioniert, 15 Jahre später, was ist halt wieder belegt, dass wenn du neu anfängst,

03:23:11.340 --> 03:23:17.700
dann allerdings den ganzen Krempel einbaust, der im alten drin ist, weil die Leute das

03:23:17.700 --> 03:23:28.260
brauchen und benutzen, dann hast du in der Neuentwicklung auch nicht viel gewonnen, nope,

03:23:28.260 --> 03:23:35.860
kannst du nicht, kannst du nicht, du kannst kein, beispielsweise, ich hab Sway verwendet,

03:23:35.860 --> 03:23:45.780
Sway ist ja so der E3 für Wayland, der refresh noch nicht mal das Bild, ist kein Witz, das

03:23:45.780 --> 03:23:49.500
Bild refresht nicht, du kannst die Maus nicht bewegen, weil das Bild nicht automatisch

03:23:49.500 --> 03:23:56.820
refresht, ja nicht in einer VM, korrekt, ja das ist natürlich mein Problem, ich verwende

03:23:56.820 --> 03:24:01.500
es halt in der VM und in der VM ist es halt nicht usable, wo wir wieder bei dem Punkt

03:24:01.500 --> 03:24:08.980
sind, du kannst es doch nicht umfassend nutzen und dann kam der nächste Hit, man kann das

03:24:08.980 --> 03:24:17.140
mit irgendwelchen Environment Variablen fixen und dann stellt man fest, copy paste is broken,

03:24:17.140 --> 03:24:22.820
ja in der VM, ok, aber das ist mir doch egal, ich will es halt in der VM verwenden und ich

03:24:22.820 --> 03:24:30.980
kann X verwenden und sonst nix, wir sind ein bisschen weitergekommen Patrick, also wir

03:24:30.980 --> 03:24:41.260
haben es geschafft zwei Zeilen.net zu übersetzen und jetzt habe ich erstmal keinen Bock mehr,

03:24:41.260 --> 03:24:49.260
ja ist wirklich so, das habe ich auch schon gelesen, dass Elektron Sachen öfters Probleme

03:24:49.260 --> 03:24:57.340
haben, ja und die müssen jetzt halt nachziehen, die Leute verwenden das und dann gibt es die

03:24:57.340 --> 03:25:03.620
übliche Diskussion unter Linux, dass dann die Wayland Leute sagen, ja das ist doch nicht

03:25:03.620 --> 03:25:11.660
unser Problem wenn die Anwendung das falsch macht, da mögen die auch bedingt damit Recht

03:25:11.660 --> 03:25:18.300
haben, aber die Leute die die Anwendung verwenden am Ende ist das doch scheiß egal, ob das

03:25:18.300 --> 03:25:24.340
am Windows System liegt, ob das an der Anwendung liegt, ob das an Linux selbst liegt, das interessiert

03:25:24.340 --> 03:25:33.460
die doch überhaupt nicht, ja das ist genauso wie unter Linux mit GPU Decoding im Browser

03:25:33.460 --> 03:25:41.180
für Videos, da gab es jahrelang, wo das übrigens unter Mac und Windows jahrelang schon ging,

03:25:41.180 --> 03:25:46.220
gab es jahrelang Diskussionen, an wem liegt das jetzt, liegt es an den Grafikkartentreiber

03:25:46.220 --> 03:25:50.580
programmieren, liegt es an den Grafikkartenherstellern, liegt es an den Browserherstellern, liegt

03:25:50.580 --> 03:25:55.380
es am Windows System, liegt es an den Desktop Entwicklern, wer hat denn jetzt da schuld dran

03:25:55.380 --> 03:25:59.940
dass das geht und jeder hat gesagt, nee nee bei uns muss das nicht implementiert werden

03:25:59.940 --> 03:26:11.300
und was ist die Folge daraus, es geht jetzt so halbwegs, es geht jetzt wenn du die passenden

03:26:11.300 --> 03:26:16.300
Settings und Flags hast in Chrome mit den passenden Treibern und der passenden Grafikkarten,

03:26:16.300 --> 03:26:22.020
den passenden Mesa Treibern und den passenden Zwischenschichten und Gedöns, dann funktioniert

03:26:22.020 --> 03:26:28.180
es und trotzdem funktioniert es dann auch nicht richtig, zum Beispiel H.264 funktioniert,

03:26:28.180 --> 03:26:45.260
VP9 ist jetzt seit neuestem wieder kaputt, das ist halt Müll, ja das ist halt leider

03:26:45.260 --> 03:26:52.580
so, das hab ich ja auch im letzten Video gesagt und da waren Leute dabei, denen hat das überhaupt

03:26:52.580 --> 03:26:59.100
nicht gefallen, ich mein ich verwende jetzt auch schon seit über 15 Jahren Linux und

03:26:59.100 --> 03:27:05.580
ich hab's schon öfters probiert auf dem Desktop oder auch mal ein bisschen neuere Sachen zu

03:27:05.580 --> 03:27:09.740
schauen, wie ist das jetzt mit GPU Decolling, vielleicht ist das vielleicht mit Wine Emulation

03:27:09.740 --> 03:27:15.380
geht und jedes mal wenn ich wirklich sage ja, ich setz mich jetzt mal damit ein bisschen

03:27:15.380 --> 03:27:18.500
näher auseinander, hat sich die letzten 2-3 Jahre was getan, stell ich fest ja es hat

03:27:18.500 --> 03:27:27.700
sich was getan, aber es ist immer noch nicht so wie man's haben will, am besten war der

03:27:27.700 --> 03:27:36.780
Typ heute, mein Herz tut weh wenn du über Linux flamest, der war, der war geil, wo ist

03:27:36.780 --> 03:27:51.700
er denn, Moment, wo ist er, wo ist er, Herz, hm keine Ahnung, finde ich nicht, irgend einer

03:27:51.700 --> 03:27:58.660
hat geschrieben, mein Herz tut weh wenn du Linux flamest, lass mich doch in Ruhe, fast

03:27:58.660 --> 03:28:11.860
eins zu eins so, ja, aber die meisten Leute, das fand ich gut, die meisten Leute von denen

03:28:11.860 --> 03:28:20.420
du auch anmerkst, dass das Hand und Fuß hat was sie schreiben, geben ja den meisten Punkten

03:28:20.420 --> 03:28:26.860
recht ja, was so die Streitpunkte sind ist zum Beispiel, ja ist es nicht vielleicht doch

03:28:26.860 --> 03:28:31.700
für irgendwie eine Oma gut mit einem Laptop, dass sie sich keine Viren einfängt und so,

03:28:31.700 --> 03:28:37.580
da muss ich sagen ja kann durchaus, durchaus sein ja, oder manche sagen ja das ist gar

03:28:37.580 --> 03:28:43.580
nicht so schlimm, anderes also, aber in der Regel, würde ich sagen die meisten Leute

03:28:43.580 --> 03:28:48.180
stimmen mir bei der Sache auch zu, gibt halt so ein paar kleine strittige Punkte, aber

03:28:48.180 --> 03:28:53.980
prinzipiell sagen sie ja stimmt schon, außer halt irgendwie so die Ultra-Fanboys die das

03:28:53.980 --> 03:28:58.300
gar nicht abkönnen, aber die meisten sind ja hier, das finde ich übrigens auch richtig

03:28:58.300 --> 03:29:21.020
pork bei mir in YouTube, die meisten Kommentarschreiber sind normal im Kopf, was ich nicht verstanden

03:29:21.020 --> 03:29:26.420
habe sind die Leute die gesagt haben, VM würden sie nicht empfehlen wegen Performance, hatte

03:29:26.420 --> 03:29:30.540
die heute irgendwelche Performance, hatte die heute irgendwelche Eindrücke, meine VM

03:29:30.540 --> 03:29:37.420
wäre zum entwickeln nicht performant genug und Performance ist bei VMs auch kein Problem,

03:29:37.420 --> 03:29:46.980
CPU Performance ist in der VM mehr oder weniger Native, eigentlich ja jetzt der Chat wieder,

03:29:46.980 --> 03:30:00.500
ja natürlich, jetzt muss jetzt aus Prinzip kommen jetzt wieder welche die sagen ja,

03:30:00.500 --> 03:30:19.180
so und CPU Performance ist in der VM nahezu Native, das wirst du mit A und Krach vielleicht

03:30:19.180 --> 03:30:24.220
mal messen können, wo es halt in der VM Probleme gibt, ist wenn du wirklich irgendwelche advanced

03:30:24.220 --> 03:30:31.300
3D Sachen machen willst, also so simple Sachen tun, ja also ich kann ja ohne Probleme GLX,

03:30:31.300 --> 03:30:38.500
Moment, weiß gar nicht was man für GLX Gears installieren muss, Mesa Uthills, ok ja, also

03:30:38.500 --> 03:30:50.740
so simple Krämpel wie GLX Gears kannst du machen, du kannst sogar diesen 1D Benchmark

03:30:50.740 --> 03:30:57.220
laufen lassen, der hat dann aber Probleme mit den Effekten, na Pass Thru ist nicht so

03:30:57.220 --> 03:31:03.260
einfach in dem Fall, zumal Pass Thru an sich immer Probleme macht, weil du dann beispielsweise

03:31:03.260 --> 03:31:07.020
noch ein extra Kabel an Monitor brauchst, weil ja du hast dann einmal einen Desktop

03:31:07.020 --> 03:31:10.340
und einmal ein Pass Thru auf der Grafikkarte und so, das macht es im Handling auch nicht

03:31:10.340 --> 03:31:16.860
einfacher, also 3D Sachen gehen auch, aber sobald es advanced Funktionen braucht, also

03:31:16.860 --> 03:31:23.460
ich gehe nicht davon aus, dass Blender gescheit funktioniert in der VM, genauso wenig wie GPU

03:31:23.460 --> 03:31:30.140
Decoding, Encoding, hast ja keinen Zugriff auf die Hardware und solche Sachen, das funktioniert

03:31:30.140 --> 03:31:40.140
nicht, aber alles andere, was jetzt nicht irgendwie 3D Rendering ist oder so oder Spiele

03:31:40.140 --> 03:31:50.740
oder sowas, das funktioniert in der VM relativ gut, korrekt, deswegen habe ich das ja auch

03:31:50.740 --> 03:32:01.900
im Video gesagt, wenn du Windows und Linux in der VM parallel benutzt, so wie ich das

03:32:01.900 --> 03:32:05.740
hier mache, ich habe hier auch ein Linux, ich habe hier ein Linux in der VM und hier

03:32:05.740 --> 03:32:11.780
in Windows, da kannst du nämlich Spiele und 3D Sachen einfach unter Windows machen und

03:32:11.780 --> 03:32:16.860
alles andere kannst du unter Linux machen, du kannst theoretisch auch normale Surfen unter

03:32:16.860 --> 03:32:21.900
Linux machen, wenn du nicht gerade Videos gucken willst wegen GPU Decoding, dann bist

03:32:21.900 --> 03:32:27.180
du auch prinzipiell immer sicherer aufgestellt, für ich fange mir über ein Browser irgendwelche

03:32:27.180 --> 03:32:33.740
Windows Malware ein, also da kannst du echt nichts sagen.

03:32:33.740 --> 03:32:40.140
Ich meine man muss natürlich auch das passende Setup nehmen, ich habe hier beispielsweise

03:32:40.140 --> 03:32:48.700
i3, erstens weil ich i3 mag und zweitens weil i3 halt keine fancy Window Effects hat oder

03:32:48.700 --> 03:32:54.460
so, das einzige was ich habe ist Transparenz, ist hier guckt, ist Transparenz oben in meiner

03:32:54.460 --> 03:33:06.220
Leiste, das ist aber auch wirklich das einzige, ja ich meine letztendlich soll das ja jeder

03:33:06.220 --> 03:33:16.700
machen wie er will, ne das ist wahrscheinlich eher ein Ubuntu Ding, es kann ja im Endeffekt

03:33:16.700 --> 03:33:21.340
jeder machen was er will, für meinen Anwendungszweck und das ist ja auch das was ich im Video beschrieben

03:33:21.340 --> 03:33:33.660
habe, ja aber nicht mit Vmware Workstation, vielleicht mit Hyper V oder sowas, ja und

03:33:33.660 --> 03:33:36.460
das was ich im Video beschrieben habe war ja mein Einsatzzweck und mein Einsatzzweck

03:33:36.460 --> 03:33:41.420
ist Linux hier auf dem zweiten Desktop, Windows auf der anderen Seite, ja Videos schneiden,

03:33:41.420 --> 03:33:47.180
OBS streamen, spielen, so Sachen mache ich unter Windows, Sachen basteln und programmieren

03:33:47.180 --> 03:33:52.700
mache ich unter Linux, ganz einfach, man muss ja nicht so sehr sich auf diese Windows vs

03:33:52.700 --> 03:33:59.140
Linux Diskussion einlassen, unterm Strich sollte man einfach das System nehmen was sich für

03:33:59.140 --> 03:34:03.500
das was man machen will jetzt in der Situation am besten eignet und wenn man Anwendungen

03:34:03.500 --> 03:34:06.620
hat wo es am besten ist das unter Windows zu machen dann macht man es unter Windows

03:34:06.620 --> 03:34:12.540
und den Rest macht man unter Linux, fertig, so diese ganzen Glaubenskriege so Linux vs

03:34:12.540 --> 03:34:22.100
Linux oder doch eher Mac oder Android vs IOS oder Xbox vs Shitbox oder Playstation vs

03:34:22.100 --> 03:34:28.620
Shitbox und hast du nicht gesehen ist alles kompletter Unsinn, einfach das nehmen was

03:34:28.620 --> 03:34:35.980
für das jeweilige Anwendungsgebiet am sinnigsten ist und fertig, das rumge Fanbeue wird dir

03:34:35.980 --> 03:34:48.580
keine Firma danken am Ende und wenn es TempleOS ist, weil du gerne betest im Terminal dann

03:34:48.580 --> 03:34:53.660
neben TempleOS, wobei ich glaube TempleOS hat kein Browser du kannst ja nicht mal ins

03:34:53.660 --> 03:34:58.580
Internet, aber das Internet ist wahrscheinlich auch will Jesus auch nicht dass du ins Internet

03:34:58.580 --> 03:35:16.500
gehst, das sind so viele fiese Sachen, ja genau, warum nicht, genau so, na gut wenn

03:35:16.500 --> 03:35:26.220
es um alles machen geht dann kannst du prinzipiell auch DOS verwenden, so rein von der Theorie

03:35:26.220 --> 03:35:35.940
wie her alles machbar, es geht ja um den Aufwand und wie gut das Handling ist und gerade wenn

03:35:35.940 --> 03:35:43.020
es um Terminal Benutzung geht, da bist du halt unter Linux um Längen besser aufgehoben

03:35:43.020 --> 03:35:51.580
als unter Windows und nachdem bei mir entwickeln oftmals eine Kombination aus IDE Editor und

03:35:51.580 --> 03:35:58.260
Terminal ist und vor allem meine Software die ich entwickle auch für Linux zu 90% entwickelt

03:35:58.260 --> 03:36:10.180
wird, macht es für mich keinen Sinn mehr das unter Windows zu machen, meinst du WSL,

03:36:10.180 --> 03:36:20.420
ja WSL ist ganz ok, gerade WSL 2 mit WSL G ist eine coole Sache, für alle die keine

03:36:20.420 --> 03:36:26.420
VM im Fullscreen laufen lassen können auf dem zweiten Bildschirm, wie machst du das

03:36:26.420 --> 03:36:42.020
mit Updates, selten, ich glaube ich habe nur eine VMWare 16 Lizenz, aber also ich hatte,

03:36:42.020 --> 03:36:47.620
das Problem hatte ich wirklich noch nicht, also ich habe es glaube ich noch nie geschafft

03:36:47.620 --> 03:36:53.380
dass ein VMWare Update meine VM kaputt gemacht hat, also ich hatte schon mal, dass ich eine

03:36:53.380 --> 03:36:59.060
VM nicht mehr booten konnte nach dem Update, weil meine Gerätesettings irgendwie inkompatibel

03:36:59.060 --> 03:37:02.660
waren zur neuen VMWare Version, auch wenn das eigentlich nicht passieren soll, weil

03:37:02.660 --> 03:37:09.660
die Versioniert sind mittlerweile die Gerätesettings, das hatte ich aber schon, da musste ich weiß

03:37:09.660 --> 03:37:16.240
ich noch, ich glaube ich hatte damals irgendwie eingestellt Festplatte ist IDE und das ging

03:37:16.240 --> 03:37:21.620
dann nicht mehr, da musste ich umstellen irgendwie auf Festplatte ist SATA oder so, was der emuliert

03:37:21.620 --> 03:37:26.460
und dann ging es auch wieder, also aber das Daten wirklich futsch waren durch den VMWare

03:37:26.460 --> 03:37:30.980
Update kann ich mir gar nicht vorstellen, weil deine Disks liegen doch in einem Orten

03:37:30.980 --> 03:37:36.380
aber dir auf der Platte, das ist doch dem VMWare Update egal, wenn du es sagst wird

03:37:36.380 --> 03:37:53.260
so gewesen sein, aber wundert mich ja 2003 mit.NET, da war.NET 2 gerade so absehbar

03:37:53.260 --> 03:38:19.300
also Framework, das stimmt

03:38:19.300 --> 03:38:23.500
aber noch besser ist es einfach unter Linux zu entwickeln, dann hast du die ganzen Probleme

03:38:23.500 --> 03:38:31.900
nicht, ich meine ja für Deployments Sachen und Builds ist natürlich Docker ein Segen,

03:38:31.900 --> 03:38:39.700
viele Probleme hat man damit gar nicht mehr, die man früher umschiffen musste, ja Virtual

03:38:39.700 --> 03:38:44.820
Box kann sein, deswegen ich habe Virtual Box glaube ich installiert, habe ich Virtual Box

03:38:44.820 --> 03:38:50.620
installiert, jetzt kommen gleich wieder die Leute an und sagen Monka ist der Desktop,

03:38:50.620 --> 03:38:54.860
ja ich habe Virtual Box installiert, aber ich verwende es eigentlich gar nicht mehr,

03:38:54.860 --> 03:39:03.220
habe ich überhaupt irgendwas mit Virtual Box, ja oft, startet noch nicht mal mehr Leute

03:39:03.220 --> 03:39:23.580
guck mal, es launt noch nicht mal, es ist so kaputt, es ist so kaputt, dass es nicht

03:39:23.580 --> 03:39:34.540
mal startet, ist auch schon ein bisschen älter, ach ich habe die Mac VMs damit gemacht, ja

03:39:34.540 --> 03:39:58.120
stimmt du hast recht zum ausprobieren

03:39:58.120 --> 03:40:02.940
Ich dachte erst du meinst du meinst visual basic deswegen war ich etwas etwas verwirrt

03:40:05.280 --> 03:40:07.280
Vor allem ein workstation hier guck

03:40:09.040 --> 03:40:11.040
Fullscreen fertig

03:40:11.040 --> 03:40:21.920
Vor allem ein workstation beste du warst genau used man chromium zum surfen

03:40:31.440 --> 03:40:38.400
Ok ich gebe zu dir die antwort war etwas gebadet ich weiß dass du das ich weiß dass du weißt dass es ein browser ist ja

03:40:38.400 --> 03:40:48.240
Du machst damit das gleiche was du mit chrome machst nur dass es kein chrome ist eigentlich ist es reichlich unsinnig chromium zu verwenden

03:40:49.000 --> 03:40:54.760
Ich habe chromium verwendet aus dem grund weil ich einen browser ohne chromecast haben wollte

03:40:59.280 --> 03:41:04.680
Das war so der ursprüngliche grund damals und dann bin ich irgendwie drauf hängen geblieben

03:41:04.680 --> 03:41:09.440
Also ich habe ja mehrere sachen also ich habe firefox installiert chrome

03:41:10.560 --> 03:41:12.560
chromium und

03:41:12.800 --> 03:41:20.040
Irgendwann hatte ich auch noch wie waldi installiert also ich mach das so firefox verwende ich exklusiv für youtube

03:41:21.360 --> 03:41:23.360
Und sachen die damit zusammenhängen

03:41:24.000 --> 03:41:25.280
chrome

03:41:25.280 --> 03:41:35.560
Verwende ich exklusiv für homeoffice und die arbeit und chromium verwende ich für mich selbst für alles andere ja

03:41:35.560 --> 03:41:41.360
Edge hast du auch noch drauf edge habe ich installiert das ist richtig aber edge verwende ich nicht

03:41:49.040 --> 03:41:51.040
Ja unter linux kann dir das passieren

03:41:51.040 --> 03:41:56.400
Aber in der regel geht es nach einem reboot wieder weil vor weil virtualbox über

03:41:57.800 --> 03:42:01.640
Wie heißt das dkms dynamische köln module

03:42:02.560 --> 03:42:07.600
Die dmks oder so geht du musst auf jeden fall rebooten nach dem köln abteil

03:42:07.600 --> 03:42:30.600
Lass es wieder geht

03:42:30.680 --> 03:42:34.120
So leute jetzt ist bettgetime

03:42:34.120 --> 03:42:41.760
Ich habe alles beantwortet was es zu beantworten gab wir machen mit rust vielleicht die tage weiter ich glaube morgen mache ich was anderes da muss ich mein

03:42:41.760 --> 03:42:43.760
mein hirn erst mal schonend vor rust

03:42:46.280 --> 03:42:48.280
Shortcut der ist standardmäßig dabei

03:42:49.600 --> 03:42:55.560
Control windows tasten und feile drücken feiltaste rechts feiltaste links feiltaste rechts feiltaste links

03:42:57.160 --> 03:43:02.120
Könnten wir machen ja oder go oder so den kram in meiner etwas

03:43:02.120 --> 03:43:04.840
Weniger anstrengenden programmiersprache machen

03:43:04.840 --> 03:43:20.840
Ne in pearl nicht

03:43:34.840 --> 03:43:39.080
Ich weiß nicht mal was das ist was ich an wie eine konferenz oder so

03:43:41.440 --> 03:43:45.560
Ach so eier was du machen musst alles habe ich vergessen zu sagen

03:43:48.040 --> 03:43:52.280
Du musst control alt vorher drücken

03:43:52.280 --> 03:44:02.040
Control alt release den fokus aus der vm und dann kannst du control window taste feile machen ich habe das schon so verinnerlicht

03:44:03.000 --> 03:44:08.200
Control alt control windows taste ich machte schon ganz automatisch

03:44:08.200 --> 03:44:10.200
Nee ich muss wirklich ins bett

03:44:16.480 --> 03:44:18.800
Okay geht das ist nice

03:44:18.800 --> 03:44:35.800
Alles klar wir sehen uns bis denn macht's gut cu

